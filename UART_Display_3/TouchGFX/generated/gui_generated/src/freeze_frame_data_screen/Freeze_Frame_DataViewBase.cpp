/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/freeze_frame_data_screen/Freeze_Frame_DataViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Freeze_Frame_DataViewBase::Freeze_Frame_DataViewBase() :
    updateItemCallback(this, &Freeze_Frame_DataViewBase::updateItemCallbackHandler),
    flexButtonCallback(this, &Freeze_Frame_DataViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    RLD_Options.setPosition(0, 59, 480, 213);
    RLD_Options.setHorizontal(false);
    RLD_Options.setCircular(false);
    RLD_Options.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    RLD_Options.setSwipeAcceleration(10);
    RLD_Options.setDragAcceleration(10);
    RLD_Options.setNumberOfItems(10);
    RLD_Options.setPadding(0, 0);
    RLD_Options.setSnapping(false);
    RLD_Options.setOvershootPercentage(75);
    RLD_Options.setDrawableSize(36, 0);
    RLD_Options.setDrawables(RLD_OptionsListItems, updateItemCallback);
    add(RLD_Options);

    blue_background.setPosition(0, 0, 480, 272);
    blue_background.setColor(touchgfx::Color::getColorFromRGB(8, 14, 87));
    add(blue_background);

    ATech_Logo.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
    ATech_Logo.setPosition(359, 0, 121, 59);
    ATech_Logo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(ATech_Logo);

    home_button.setBoxWithBorderPosition(0, 0, 62, 59);
    home_button.setBorderSize(3);
    home_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    home_button.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_FILLED_60_60_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_FILLED_60_60_E8F6FB_SVG_ID));
    home_button.setIconXY(2, 0);
    home_button.setAction(flexButtonCallback);
    home_button.setPosition(0, 0, 62, 59);
    add(home_button);
}

Freeze_Frame_DataViewBase::~Freeze_Frame_DataViewBase()
{

}

void Freeze_Frame_DataViewBase::setupScreen()
{
    RLD_Options.initialize();
    for (int i = 0; i < RLD_OptionsListItems.getNumberOfDrawables(); i++)
    {
        RLD_OptionsListItems[i].initialize();
    }
}

void Freeze_Frame_DataViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &home_button)
    {
        //home_button_int
        //When home_button clicked change screen to Home_Screen
        //Go to Home_Screen with screen transition towards East
        application().gotoHome_ScreenScreenWipeTransitionEast();
    }
}

void Freeze_Frame_DataViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &RLD_OptionsListItems)
    {
        RLD_OptionsUpdateItem(RLD_OptionsListItems[containerIndex], itemIndex);
    }
}
