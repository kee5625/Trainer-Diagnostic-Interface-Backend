/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/tc_screen_screen/TC_ScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

TC_ScreenViewBase::TC_ScreenViewBase() :
    buttonCallback(this, &TC_ScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    ATECH_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
    ATECH_LOGO.setPosition(0, 0, 480, 272);
    ATECH_LOGO.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(ATECH_LOGO);

    TC_Button.setXY(0, 222);
    TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
    TC_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_JHO3));
    TC_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TC_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TC_Button.setAction(buttonCallback);
    add(TC_Button);

    TC_TextBox.setPosition(0, 178, 240, 44);
    TC_TextBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    TC_TextBox.setLinespacing(0);
    Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s", touchgfx::TypedText(T_TC_TEXTBOX_BUFFER).getText());
    TC_TextBox.setWildcard(TC_TextBoxBuffer);
    TC_TextBox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VCK));
    TC_TextBox.setVisible(false);
    add(TC_TextBox);

    Erase_TC_Button.setXY(305, 222);
    Erase_TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
    Erase_TC_Button.setLabelText(touchgfx::TypedText(T_ERASE_TC_TEXT));
    Erase_TC_Button.setLabelColor(touchgfx::Color::getColorFromRGB(247, 0, 0));
    Erase_TC_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 0, 0));
    Erase_TC_Button.setVisible(false);
    Erase_TC_Button.setAction(buttonCallback);
    add(Erase_TC_Button);
}

TC_ScreenViewBase::~TC_ScreenViewBase()
{

}

void TC_ScreenViewBase::setupScreen()
{

}

void TC_ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &TC_Button)
    {
        //Show_TC
        //When TC_Button clicked show TC_TextBox
        //Show TC_TextBox
        TC_TextBox.setVisible(true);
        TC_TextBox.invalidate();
    
        //Show_Erase_TC_Button
        //When Show_TC completed show Erase_TC_Button
        //Show Erase_TC_Button
        Erase_TC_Button.setVisible(true);
        Erase_TC_Button.invalidate();
    }
    if (&src == &Erase_TC_Button)
    {
        //Erase_Change_Screen
        //When Erase_TC_Button clicked change screen to Home_Screen
        //Go to Home_Screen with screen transition towards East
        application().gotoHome_ScreenScreenWipeTransitionEast();
    }
}
