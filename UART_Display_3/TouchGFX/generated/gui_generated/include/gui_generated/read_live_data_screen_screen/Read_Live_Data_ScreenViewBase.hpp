/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef READ_LIVE_DATA_SCREENVIEWBASE_HPP
#define READ_LIVE_DATA_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/read_live_data_screen_screen/Read_Live_Data_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/rowItem.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Read_Live_Data_ScreenViewBase : public touchgfx::View<Read_Live_Data_ScreenPresenter>
{
public:
    Read_Live_Data_ScreenViewBase();
    virtual ~Read_Live_Data_ScreenViewBase();
    virtual void setupScreen();

    virtual void RLD_OptionsUpdateItem(rowItem& item, int16_t itemIndex)
    {
        // Override and implement this function in Read_Live_Data_Screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box blue_background;
    touchgfx::ScalableImage ATech_Logo;
    touchgfx::ScrollList RLD_Options;
    touchgfx::DrawableListItems<rowItem, 7> RLD_OptionsListItems;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  home_button;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Read_Live_Data_ScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<Read_Live_Data_ScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // READ_LIVE_DATA_SCREENVIEWBASE_HPP
