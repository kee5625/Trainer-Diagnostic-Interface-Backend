/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TC_SCREENVIEWBASE_HPP
#define TC_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/tc_screen_screen/TC_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class TC_ScreenViewBase : public touchgfx::View<TC_ScreenPresenter>
{
public:
    TC_ScreenViewBase();
    virtual ~TC_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box gray_background;
    touchgfx::ScalableImage ATech_Logo;
    touchgfx::ButtonWithLabel TC_Button;
    touchgfx::TextAreaWithOneWildcard TC_TextBox;
    touchgfx::ButtonWithLabel Erase_TC_Button;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TC_TEXTBOX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TC_TextBoxBuffer[TC_TEXTBOX_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TC_ScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TC_SCREENVIEWBASE_HPP
