/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TC_SCREENVIEWBASE_HPP
#define TC_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/tc_screen_screen/TC_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/rowItem_dtcs.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class TC_ScreenViewBase : public touchgfx::View<TC_ScreenPresenter>
{
public:
    TC_ScreenViewBase();
    virtual ~TC_ScreenViewBase();
    virtual void setupScreen();

    virtual void DTCS_UpdateItem(rowItem_dtcs& item, int16_t itemIndex)
    {
        // Override and implement this function in TC_Screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box gray_background;
    touchgfx::ScalableImage ATech_Logo;
    touchgfx::ScrollList DTCS_;
    touchgfx::DrawableListItems<rowItem_dtcs, 3> DTCS_ListItems;
    touchgfx::FadeAnimator< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > Pending_dtcs_button;
    touchgfx::FadeAnimator< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > Stored_dtcs_button;
    touchgfx::FadeAnimator< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > Perm_dtcs_button;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Clear_DTCS_button;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  back_button;
    touchgfx::FadeAnimator< touchgfx::TextArea > loading_TB;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  LD_Button;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TC_ScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<TC_ScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // TC_SCREENVIEWBASE_HPP
