
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002acb4  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00002f24  9002af58  9002af58  0002ef58  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000002c  9002de7c  9002de7c  00031e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002dea8  9002dea8  000683d4  2**0
                  CONTENTS
  6 .ARM          00000008  9002dea8  9002dea8  00031ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002deb0  9002deb0  000683d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002deb0  9002deb0  00031eb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002dec8  9002dec8  00031ec8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002ded0  00032000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9002e038  00032180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90030d38  00034e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90033a38  00037b80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90033b38  00037c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001c804  24005d80  90033c38  00037d80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  24022584  90033c38  00038584  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  000683d4  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00000498  90200000  90200000  00038000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 00000034  90200498  90200498  00038498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 0002ff08  902004cc  902004cc  000384cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00069000  2**2
                  ALLOC
 22 .debug_line   00075f4f  00000000  00000000  00068402  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000065  00000000  00000000  000de351  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000d0e7c  00000000  00000000  000de3b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 000165a6  00000000  00000000  001af232  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003680  00000000  00000000  001c57d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a67a8  00000000  00000000  001c8e58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 00006569  00000000  00000000  0036f600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004a8e4  00000000  00000000  00375b69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003c044d  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000aabc  00000000  00000000  003c0510  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 00038d0e  00000000  00000000  003cafcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002af3c 	.word	0x9002af3c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002af3c 	.word	0x9002af3c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f005 fd5b 	bl	900065a8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f029 fd49 	bl	9002a588 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f003 f805 	bl	90003b04 <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	9002ded0 	.word	0x9002ded0
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	24022584 	.word	0x24022584

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b1c:	4770      	bx	lr
90000b1e:	bf00      	nop

90000b20 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b20:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b22:	f002 f8f3 	bl	90002d0c <touchgfx_components_init>
    touchgfx_init();
}
90000b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b2a:	f002 b871 	b.w	90002c10 <touchgfx_init>
90000b2e:	bf00      	nop

90000b30 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b30:	f002 b8ee 	b.w	90002d10 <touchgfx_taskEntry>

90000b34 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b34:	6840      	ldr	r0, [r0, #4]
    }
90000b36:	4770      	bx	lr

90000b38 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b38:	6041      	str	r1, [r0, #4]
    }
90000b3a:	4770      	bx	lr

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b3c:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b40:	4b08      	ldr	r3, [pc, #32]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b42:	4a09      	ldr	r2, [pc, #36]	@ (90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b44:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b48:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b4c:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b50:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b54:	430a      	orrs	r2, r1
90000b56:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b5a:	681a      	ldr	r2, [r3, #0]
90000b5c:	f042 0201 	orr.w	r2, r2, #1
90000b60:	601a      	str	r2, [r3, #0]
}
90000b62:	4770      	bx	lr
90000b64:	e0001000 	.word	0xe0001000
90000b68:	c5acce55 	.word	0xc5acce55

90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b6c:	1a52      	subs	r2, r2, r1
90000b6e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b72:	fbb2 f0f3 	udiv	r0, r2, r3
90000b76:	4770      	bx	lr

90000b78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b78:	4b01      	ldr	r3, [pc, #4]	@ (90000b80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b7a:	6858      	ldr	r0, [r3, #4]
}
90000b7c:	4770      	bx	lr
90000b7e:	bf00      	nop
90000b80:	e0001000 	.word	0xe0001000

90000b84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b84:	4770      	bx	lr
90000b86:	bf00      	nop

90000b88 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b88:	b510      	push	{r4, lr}
90000b8a:	4604      	mov	r4, r0
90000b8c:	210c      	movs	r1, #12
90000b8e:	f028 fdcf 	bl	90029730 <_ZdlPvj>
90000b92:	4620      	mov	r0, r4
90000b94:	bd10      	pop	{r4, pc}
90000b96:	bf00      	nop

90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b98:	6803      	ldr	r3, [r0, #0]
90000b9a:	4a0c      	ldr	r2, [pc, #48]	@ (90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b9c:	691b      	ldr	r3, [r3, #16]
{
90000b9e:	b510      	push	{r4, lr}
90000ba0:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000ba2:	b149      	cbz	r1, 90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ba4:	4293      	cmp	r3, r2
90000ba6:	d10d      	bne.n	90000bc4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000ba8:	4b09      	ldr	r3, [pc, #36]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000baa:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bac:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bae:	6863      	ldr	r3, [r4, #4]
90000bb0:	1a9b      	subs	r3, r3, r2
90000bb2:	4403      	add	r3, r0
90000bb4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bb6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bb8:	4293      	cmp	r3, r2
90000bba:	d105      	bne.n	90000bc8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bbc:	4b04      	ldr	r3, [pc, #16]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bbe:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000bc0:	60a0      	str	r0, [r4, #8]
}
90000bc2:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc4:	4798      	blx	r3
90000bc6:	e7f1      	b.n	90000bac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bc8:	4798      	blx	r3
90000bca:	e7f9      	b.n	90000bc0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bcc:	90000b79 	.word	0x90000b79
90000bd0:	e0001000 	.word	0xe0001000

90000bd4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bd4:	4770      	bx	lr
90000bd6:	bf00      	nop

90000bd8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000bd8:	b500      	push	{lr}
90000bda:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000bdc:	2208      	movs	r2, #8
90000bde:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000be0:	2000      	movs	r0, #0
90000be2:	4669      	mov	r1, sp
    hTS.Width = 480;
90000be4:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c00 <_ZN20STM32TouchController4initEv+0x28>
90000be8:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000bec:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000bf0:	f005 fbec 	bl	900063cc <BSP_TS_Init>
}
90000bf4:	b005      	add	sp, #20
90000bf6:	f85d fb04 	ldr.w	pc, [sp], #4
90000bfa:	bf00      	nop
90000bfc:	f3af 8000 	nop.w
90000c00:	000001e0 	.word	0x000001e0
90000c04:	00000110 	.word	0x00000110

90000c08 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c08:	b530      	push	{r4, r5, lr}
90000c0a:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c0c:	2000      	movs	r0, #0
{
90000c0e:	460d      	mov	r5, r1
90000c10:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c12:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c14:	9001      	str	r0, [sp, #4]
90000c16:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c1a:	f005 fc65 	bl	900064e8 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c1e:	9801      	ldr	r0, [sp, #4]
90000c20:	b120      	cbz	r0, 90000c2c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c22:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c28:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c2a:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c2c:	b005      	add	sp, #20
90000c2e:	bd30      	pop	{r4, r5, pc}

90000c30 <_ZN20STM32TouchControllerD0Ev>:
90000c30:	b510      	push	{r4, lr}
90000c32:	4604      	mov	r4, r0
90000c34:	2104      	movs	r1, #4
90000c36:	f028 fd7b 	bl	90029730 <_ZdlPvj>
90000c3a:	4620      	mov	r0, r4
90000c3c:	bd10      	pop	{r4, pc}
90000c3e:	bf00      	nop

90000c40 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c40:	2108      	movs	r1, #8
90000c42:	480c      	ldr	r0, [pc, #48]	@ (90000c74 <_ZN8touchgfx4GPIO4initEv+0x34>)
{
90000c44:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c46:	f006 fd5f 	bl	90007708 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c4a:	2801      	cmp	r0, #1
90000c4c:	d101      	bne.n	90000c52 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c4e:	4b0a      	ldr	r3, [pc, #40]	@ (90000c78 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c50:	6018      	str	r0, [r3, #0]
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c52:	2140      	movs	r1, #64	@ 0x40
90000c54:	4809      	ldr	r0, [pc, #36]	@ (90000c7c <_ZN8touchgfx4GPIO4initEv+0x3c>)
90000c56:	f006 fd57 	bl	90007708 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c5a:	2801      	cmp	r0, #1
90000c5c:	d101      	bne.n	90000c62 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c5e:	4b06      	ldr	r3, [pc, #24]	@ (90000c78 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c60:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c62:	2140      	movs	r1, #64	@ 0x40
90000c64:	4806      	ldr	r0, [pc, #24]	@ (90000c80 <_ZN8touchgfx4GPIO4initEv+0x40>)
90000c66:	f006 fd4f 	bl	90007708 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c6a:	2801      	cmp	r0, #1
90000c6c:	d101      	bne.n	90000c72 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000c6e:	4b02      	ldr	r3, [pc, #8]	@ (90000c78 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c70:	60d8      	str	r0, [r3, #12]
}
90000c72:	bd08      	pop	{r3, pc}
90000c74:	58021800 	.word	0x58021800
90000c78:	24005d9c 	.word	0x24005d9c
90000c7c:	58020400 	.word	0x58020400
90000c80:	58020000 	.word	0x58020000

90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c84:	2802      	cmp	r0, #2
90000c86:	d014      	beq.n	90000cb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
90000c88:	2803      	cmp	r0, #3
90000c8a:	d009      	beq.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
90000c8c:	b9d0      	cbnz	r0, 90000cc4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b0e      	ldr	r3, [pc, #56]	@ (90000cc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000c90:	2108      	movs	r1, #8
90000c92:	480e      	ldr	r0, [pc, #56]	@ (90000ccc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f006 bd3a 	b.w	90007714 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000ca0:	4b09      	ldr	r3, [pc, #36]	@ (90000cc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000ca2:	2140      	movs	r1, #64	@ 0x40
90000ca4:	480a      	ldr	r0, [pc, #40]	@ (90000cd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
90000ca6:	68da      	ldr	r2, [r3, #12]
90000ca8:	fab2 f282 	clz	r2, r2
90000cac:	0952      	lsrs	r2, r2, #5
90000cae:	f006 bd31 	b.w	90007714 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000cb2:	4b05      	ldr	r3, [pc, #20]	@ (90000cc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000cb4:	2140      	movs	r1, #64	@ 0x40
90000cb6:	4807      	ldr	r0, [pc, #28]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000cb8:	689a      	ldr	r2, [r3, #8]
90000cba:	fab2 f282 	clz	r2, r2
90000cbe:	0952      	lsrs	r2, r2, #5
90000cc0:	f006 bd28 	b.w	90007714 <HAL_GPIO_WritePin>
}
90000cc4:	4770      	bx	lr
90000cc6:	bf00      	nop
90000cc8:	24005d9c 	.word	0x24005d9c
90000ccc:	58021800 	.word	0x58021800
90000cd0:	58020000 	.word	0x58020000
90000cd4:	58020400 	.word	0x58020400

90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cd8:	2802      	cmp	r0, #2
90000cda:	d014      	beq.n	90000d06 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
90000cdc:	2803      	cmp	r0, #3
90000cde:	d009      	beq.n	90000cf4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
90000ce0:	b9d0      	cbnz	r0, 90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000ce2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000ce4:	2108      	movs	r1, #8
90000ce6:	480e      	ldr	r0, [pc, #56]	@ (90000d20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
90000ce8:	681a      	ldr	r2, [r3, #0]
90000cea:	3a00      	subs	r2, #0
90000cec:	bf18      	it	ne
90000cee:	2201      	movne	r2, #1
90000cf0:	f006 bd10 	b.w	90007714 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cf4:	4b09      	ldr	r3, [pc, #36]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000cf6:	2140      	movs	r1, #64	@ 0x40
90000cf8:	480a      	ldr	r0, [pc, #40]	@ (90000d24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
90000cfa:	68da      	ldr	r2, [r3, #12]
90000cfc:	3a00      	subs	r2, #0
90000cfe:	bf18      	it	ne
90000d00:	2201      	movne	r2, #1
90000d02:	f006 bd07 	b.w	90007714 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d06:	4b05      	ldr	r3, [pc, #20]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000d08:	2140      	movs	r1, #64	@ 0x40
90000d0a:	4807      	ldr	r0, [pc, #28]	@ (90000d28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000d0c:	689a      	ldr	r2, [r3, #8]
90000d0e:	3a00      	subs	r2, #0
90000d10:	bf18      	it	ne
90000d12:	2201      	movne	r2, #1
90000d14:	f006 bcfe 	b.w	90007714 <HAL_GPIO_WritePin>
}
90000d18:	4770      	bx	lr
90000d1a:	bf00      	nop
90000d1c:	24005d9c 	.word	0x24005d9c
90000d20:	58021800 	.word	0x58021800
90000d24:	58020000 	.word	0x58020000
90000d28:	58020400 	.word	0x58020400

90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d2c:	2802      	cmp	r0, #2
90000d2e:	d00a      	beq.n	90000d46 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1a>
90000d30:	2803      	cmp	r0, #3
90000d32:	d004      	beq.n	90000d3e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
90000d34:	b958      	cbnz	r0, 90000d4e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x22>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d36:	2108      	movs	r1, #8
90000d38:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
90000d3a:	f006 bcef 	b.w	9000771c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d3e:	2140      	movs	r1, #64	@ 0x40
90000d40:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
90000d42:	f006 bceb 	b.w	9000771c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d46:	2140      	movs	r1, #64	@ 0x40
90000d48:	4803      	ldr	r0, [pc, #12]	@ (90000d58 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
90000d4a:	f006 bce7 	b.w	9000771c <HAL_GPIO_TogglePin>
}
90000d4e:	4770      	bx	lr
90000d50:	58021800 	.word	0x58021800
90000d54:	58020000 	.word	0x58020000
90000d58:	58020400 	.word	0x58020400

90000d5c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d5c:	2000      	movs	r0, #0
90000d5e:	4770      	bx	lr

90000d60 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d60:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d62:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d66:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000d6c:	4770      	bx	lr
90000d6e:	bf00      	nop

90000d70 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d70:	2000      	movs	r0, #0
90000d72:	4770      	bx	lr

90000d74 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d74:	1e0a      	subs	r2, r1, #0
90000d76:	4b03      	ldr	r3, [pc, #12]	@ (90000d84 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d78:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d7a:	bf18      	it	ne
90000d7c:	2201      	movne	r2, #1
90000d7e:	701a      	strb	r2, [r3, #0]
    }
90000d80:	4770      	bx	lr
90000d82:	bf00      	nop
90000d84:	24021843 	.word	0x24021843

90000d88 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000d88:	4770      	bx	lr
90000d8a:	bf00      	nop

90000d8c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d8c:	2000      	movs	r0, #0
90000d8e:	4770      	bx	lr

90000d90 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d90:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d92:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d94:	b103      	cbz	r3, 90000d98 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d96:	4718      	bx	r3
        }
    }
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d9c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000da0:	4770      	bx	lr
90000da2:	bf00      	nop

90000da4 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000da4:	4770      	bx	lr
90000da6:	bf00      	nop

90000da8 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000da8:	4770      	bx	lr
90000daa:	bf00      	nop

90000dac <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000dac:	4770      	bx	lr
90000dae:	bf00      	nop

90000db0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000db0:	b510      	push	{r4, lr}
90000db2:	4604      	mov	r4, r0
        swapFrameBuffers();
90000db4:	f010 ffb2 	bl	90011d1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000db8:	6823      	ldr	r3, [r4, #0]
90000dba:	4620      	mov	r0, r4
90000dbc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000dc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000dc4:	4718      	bx	r3
90000dc6:	bf00      	nop

90000dc8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000dc8:	f002 b8c6 	b.w	90002f58 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000dcc <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000dcc:	f002 b8ca 	b.w	90002f64 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dd0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dd0:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dd2:	f002 f961 	bl	90003098 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dd6:	4812      	ldr	r0, [pc, #72]	@ (90000e20 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dd8:	2300      	movs	r3, #0
90000dda:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dde:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000de2:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de6:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dea:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dee:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000df2:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000df6:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dfa:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dfc:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e00:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e02:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e06:	1c5a      	adds	r2, r3, #1
90000e08:	d1f8      	bne.n	90000dfc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e0a:	f1ac 0c20 	sub.w	ip, ip, #32
90000e0e:	f11c 0f20 	cmn.w	ip, #32
90000e12:	d1f0      	bne.n	90000df6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e18:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e1c:	bd10      	pop	{r4, pc}
90000e1e:	bf00      	nop
90000e20:	e000ed00 	.word	0xe000ed00

90000e24 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e24:	f002 b874 	b.w	90002f10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e28 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e28:	f002 b9ba 	b.w	900031a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e2c <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e2c:	f002 b9a4 	b.w	90003178 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e30 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e30:	f002 b878 	b.w	90002f24 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e34:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e36:	4b09      	ldr	r3, [pc, #36]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e38:	881b      	ldrh	r3, [r3, #0]
90000e3a:	428b      	cmp	r3, r1
90000e3c:	d808      	bhi.n	90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e3e:	4b08      	ldr	r3, [pc, #32]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e40:	881b      	ldrh	r3, [r3, #0]
90000e42:	4293      	cmp	r3, r2
90000e44:	d804      	bhi.n	90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e46:	4807      	ldr	r0, [pc, #28]	@ (90000e64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e48:	4b07      	ldr	r3, [pc, #28]	@ (90000e68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e4a:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e4c:	801a      	strh	r2, [r3, #0]
    }
90000e4e:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e50:	4b06      	ldr	r3, [pc, #24]	@ (90000e6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e52:	21a3      	movs	r1, #163	@ 0xa3
90000e54:	4a06      	ldr	r2, [pc, #24]	@ (90000e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e56:	4807      	ldr	r0, [pc, #28]	@ (90000e74 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e58:	f028 ffe2 	bl	90029e20 <__assert_func>
90000e5c:	24021838 	.word	0x24021838
90000e60:	2402183a 	.word	0x2402183a
90000e64:	2402183e 	.word	0x2402183e
90000e68:	24021840 	.word	0x24021840
90000e6c:	9002afd8 	.word	0x9002afd8
90000e70:	9002b03c 	.word	0x9002b03c
90000e74:	9002b080 	.word	0x9002b080

90000e78 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e78:	f010 ba9c 	b.w	900113b4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e7c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e7c:	f010 b962 	b.w	90011144 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e80 <_ZN11TouchGFXHALD0Ev>:
90000e80:	b510      	push	{r4, lr}
90000e82:	4604      	mov	r4, r0
90000e84:	2190      	movs	r1, #144	@ 0x90
90000e86:	f028 fc53 	bl	90029730 <_ZdlPvj>
90000e8a:	4620      	mov	r0, r4
90000e8c:	bd10      	pop	{r4, pc}
90000e8e:	bf00      	nop

90000e90 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000e90:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e94:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000e98:	4b0b      	ldr	r3, [pc, #44]	@ (90000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e9a:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e9c:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e9e:	d00b      	beq.n	90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ea0:	b94a      	cbnz	r2, 90000eb6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ea2:	4a0a      	ldr	r2, [pc, #40]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000ea4:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea8:	4909      	ldr	r1, [pc, #36]	@ (90000ed0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eaa:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000eac:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eb0:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000eb2:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eb4:	8013      	strh	r3, [r2, #0]
    }
90000eb6:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000eb8:	2a00      	cmp	r2, #0
90000eba:	d0fc      	beq.n	90000eb6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ebc:	4a03      	ldr	r2, [pc, #12]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000ebe:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ec2:	4903      	ldr	r1, [pc, #12]	@ (90000ed0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ec4:	e7f1      	b.n	90000eaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ec6:	bf00      	nop
90000ec8:	2402183c 	.word	0x2402183c
90000ecc:	2402183a 	.word	0x2402183a
90000ed0:	24021838 	.word	0x24021838

90000ed4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ed4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ed6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000eda:	b118      	cbz	r0, 90000ee4 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000edc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000ede:	6803      	ldr	r3, [r0, #0]
90000ee0:	681b      	ldr	r3, [r3, #0]
90000ee2:	4718      	bx	r3
    }
90000ee4:	4770      	bx	lr
90000ee6:	bf00      	nop

90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ee8:	6840      	ldr	r0, [r0, #4]
90000eea:	4a04      	ldr	r2, [pc, #16]	@ (90000efc <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000eec:	6803      	ldr	r3, [r0, #0]
90000eee:	699b      	ldr	r3, [r3, #24]
90000ef0:	4293      	cmp	r3, r2
90000ef2:	d101      	bne.n	90000ef8 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ef4:	2000      	movs	r0, #0
90000ef6:	4770      	bx	lr
        return dma.getDMAType();
90000ef8:	4718      	bx	r3
90000efa:	bf00      	nop
90000efc:	90000d5d 	.word	0x90000d5d

90000f00 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f00:	b538      	push	{r3, r4, r5, lr}
90000f02:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f04:	f002 face 	bl	900034a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f08:	4a0b      	ldr	r2, [pc, #44]	@ (90000f38 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f0a:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f0c:	490b      	ldr	r1, [pc, #44]	@ (90000f3c <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000f12:	4293      	cmp	r3, r2
90000f14:	d10d      	bne.n	90000f32 <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f16:	4b0a      	ldr	r3, [pc, #40]	@ (90000f40 <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f18:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f1a:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f1c:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f1e:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000f22:	4628      	mov	r0, r5
90000f24:	f7ff fe0a 	bl	90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f28:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f2a:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f2c:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f30:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f32:	4620      	mov	r0, r4
90000f34:	4798      	blx	r3
90000f36:	e7f2      	b.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f38:	90000d75 	.word	0x90000d75
90000f3c:	d0000000 	.word	0xd0000000
90000f40:	24021843 	.word	0x24021843

90000f44 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f44:	b1a9      	cbz	r1, 90000f72 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f46:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f48:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f4a:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f4c:	bf18      	it	ne
90000f4e:	2201      	movne	r2, #1
90000f50:	490c      	ldr	r1, [pc, #48]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f52:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f54:	6802      	ldr	r2, [r0, #0]
90000f56:	490c      	ldr	r1, [pc, #48]	@ (90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f58:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000f5c:	428a      	cmp	r2, r1
90000f5e:	d106      	bne.n	90000f6e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f60:	1e19      	subs	r1, r3, #0
90000f62:	4a0a      	ldr	r2, [pc, #40]	@ (90000f8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f64:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f66:	bf18      	it	ne
90000f68:	2101      	movne	r1, #1
90000f6a:	7011      	strb	r1, [r2, #0]
90000f6c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f6e:	4619      	mov	r1, r3
90000f70:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f72:	4b07      	ldr	r3, [pc, #28]	@ (90000f90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f74:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000f78:	4a06      	ldr	r2, [pc, #24]	@ (90000f94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f7a:	4807      	ldr	r0, [pc, #28]	@ (90000f98 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f7c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f7e:	f028 ff4f 	bl	90029e20 <__assert_func>
90000f82:	bf00      	nop
90000f84:	24021842 	.word	0x24021842
90000f88:	90000d75 	.word	0x90000d75
90000f8c:	24021843 	.word	0x24021843
90000f90:	9002b0c8 	.word	0x9002b0c8
90000f94:	9002b100 	.word	0x9002b100
90000f98:	9002b080 	.word	0x9002b080

90000f9c <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f9c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f9e:	6803      	ldr	r3, [r0, #0]
{
90000fa0:	4604      	mov	r4, r0
90000fa2:	4d14      	ldr	r5, [pc, #80]	@ (90000ff4 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fa4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000fa8:	4798      	blx	r3
    enableInterrupts();
90000faa:	6823      	ldr	r3, [r4, #0]
90000fac:	4620      	mov	r0, r4
90000fae:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000fb0:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000fb2:	f001 f9f1 	bl	90002398 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fb6:	6823      	ldr	r3, [r4, #0]
90000fb8:	4620      	mov	r0, r4
90000fba:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000fbc:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fbe:	2201      	movs	r2, #1
90000fc0:	2180      	movs	r1, #128	@ 0x80
90000fc2:	480d      	ldr	r0, [pc, #52]	@ (90000ff8 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fc4:	f006 fba6 	bl	90007714 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fc8:	2201      	movs	r2, #1
90000fca:	480c      	ldr	r0, [pc, #48]	@ (90000ffc <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fcc:	4611      	mov	r1, r2
90000fce:	f006 fba1 	bl	90007714 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fd2:	f001 f9e1 	bl	90002398 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fd6:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fd8:	4620      	mov	r0, r4
90000fda:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000fdc:	42ab      	cmp	r3, r5
90000fde:	d107      	bne.n	90000ff0 <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fe0:	f010 fe9c 	bl	90011d1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fe4:	6823      	ldr	r3, [r4, #0]
90000fe6:	4620      	mov	r0, r4
90000fe8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90000fec:	4798      	blx	r3
    }
90000fee:	e7f0      	b.n	90000fd2 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000ff0:	4798      	blx	r3
90000ff2:	e7ee      	b.n	90000fd2 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000ff4:	90000db1 	.word	0x90000db1
90000ff8:	58020c00 	.word	0x58020c00
90000ffc:	58022800 	.word	0x58022800

90001000 <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90001000:	4601      	mov	r1, r0
    {
90001002:	b508      	push	{r3, lr}
        return instance;
90001004:	4b05      	ldr	r3, [pc, #20]	@ (9000101c <IdleTaskHook+0x1c>)
90001006:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001008:	b121      	cbz	r1, 90001014 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000100a:	2101      	movs	r1, #1
9000100c:	f010 fea0 	bl	90011d50 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90001010:	2001      	movs	r0, #1
90001012:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001014:	f010 fe9c 	bl	90011d50 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001018:	2001      	movs	r0, #1
9000101a:	bd08      	pop	{r3, pc}
9000101c:	24021844 	.word	0x24021844

90001020 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90001020:	6940      	ldr	r0, [r0, #20]
90001022:	4770      	bx	lr

90001024 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001024:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001028:	4770      	bx	lr
9000102a:	bf00      	nop

9000102c <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
9000102c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000102e:	b10b      	cbz	r3, 90001034 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001030:	2001      	movs	r0, #1
}
90001032:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001034:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001036:	3800      	subs	r0, #0
90001038:	bf18      	it	ne
9000103a:	2001      	movne	r0, #1
9000103c:	4770      	bx	lr
9000103e:	bf00      	nop

90001040 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001040:	6880      	ldr	r0, [r0, #8]
90001042:	4770      	bx	lr

90001044 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001044:	4770      	bx	lr
90001046:	bf00      	nop

90001048 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001048:	3004      	adds	r0, #4
{
9000104a:	468c      	mov	ip, r1
    *data = videoInfo;
9000104c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000104e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001052:	4770      	bx	lr

90001054 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001054:	4770      	bx	lr
90001056:	bf00      	nop

90001058 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001058:	b508      	push	{r3, lr}
    assert(0);
9000105a:	4a03      	ldr	r2, [pc, #12]	@ (90001068 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
9000105c:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
90001060:	4b02      	ldr	r3, [pc, #8]	@ (9000106c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
90001062:	4803      	ldr	r0, [pc, #12]	@ (90001070 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001064:	f028 fedc 	bl	90029e20 <__assert_func>
90001068:	9002b154 	.word	0x9002b154
9000106c:	9002b150 	.word	0x9002b150
90001070:	9002b1b0 	.word	0x9002b1b0

90001074 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001074:	b510      	push	{r4, lr}
90001076:	4604      	mov	r4, r0
90001078:	2148      	movs	r1, #72	@ 0x48
9000107a:	f028 fb59 	bl	90029730 <_ZdlPvj>
9000107e:	4620      	mov	r0, r4
90001080:	bd10      	pop	{r4, pc}
90001082:	bf00      	nop

90001084 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001086:	6803      	ldr	r3, [r0, #0]
90001088:	2901      	cmp	r1, #1
9000108a:	4d30      	ldr	r5, [pc, #192]	@ (9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
9000108c:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000108e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001090:	bf38      	it	cc
90001092:	2101      	movcc	r1, #1
90001094:	42ab      	cmp	r3, r5
90001096:	460e      	mov	r6, r1
90001098:	d13f      	bne.n	9000111a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
9000109a:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
9000109c:	42a9      	cmp	r1, r5
9000109e:	d947      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a0:	1e6b      	subs	r3, r5, #1
900010a2:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010a4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a6:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010aa:	b338      	cbz	r0, 900010fc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010ac:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010ae:	2b0f      	cmp	r3, #15
900010b0:	d940      	bls.n	90001134 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010b2:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010b4:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010b8:	68db      	ldr	r3, [r3, #12]
900010ba:	4631      	mov	r1, r6
900010bc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010be:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010c0:	2210      	movs	r2, #16
900010c2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010c4:	6803      	ldr	r3, [r0, #0]
900010c6:	691b      	ldr	r3, [r3, #16]
900010c8:	4798      	blx	r3
900010ca:	b198      	cbz	r0, 900010f4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010cc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ce:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010d0:	b1a3      	cbz	r3, 900010fc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010d2:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010d4:	7a93      	ldrb	r3, [r2, #10]
900010d6:	7a51      	ldrb	r1, [r2, #9]
900010d8:	041b      	lsls	r3, r3, #16
900010da:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010de:	7a11      	ldrb	r1, [r2, #8]
900010e0:	7ad2      	ldrb	r2, [r2, #11]
900010e2:	430b      	orrs	r3, r1
900010e4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010ea:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010ec:	3a04      	subs	r2, #4
900010ee:	441a      	add	r2, r3
900010f0:	61a2      	str	r2, [r4, #24]
}
900010f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010f4:	230d      	movs	r3, #13
900010f6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010fa:	e7e7      	b.n	900010cc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010fc:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001100:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001102:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001104:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001106:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001108:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000110a:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000110c:	041b      	lsls	r3, r3, #16
9000110e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001112:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001114:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001118:	e7e6      	b.n	900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
9000111a:	4798      	blx	r3
9000111c:	4286      	cmp	r6, r0
9000111e:	d907      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
90001120:	6823      	ldr	r3, [r4, #0]
90001122:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001124:	42ab      	cmp	r3, r5
90001126:	d00e      	beq.n	90001146 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001128:	4620      	mov	r0, r4
9000112a:	4798      	blx	r3
9000112c:	4605      	mov	r5, r0
9000112e:	e7b7      	b.n	900010a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
90001130:	4635      	mov	r5, r6
90001132:	e7b5      	b.n	900010a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001134:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001136:	4b06      	ldr	r3, [pc, #24]	@ (90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001138:	4a06      	ldr	r2, [pc, #24]	@ (90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
9000113a:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000113c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001140:	4805      	ldr	r0, [pc, #20]	@ (90001158 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
90001142:	f028 fe6d 	bl	90029e20 <__assert_func>
    return videoInfo.number_of_frames;
90001146:	68a5      	ldr	r5, [r4, #8]
90001148:	e7aa      	b.n	900010a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
9000114a:	bf00      	nop
9000114c:	90001041 	.word	0x90001041
90001150:	9002b208 	.word	0x9002b208
90001154:	9002b21c 	.word	0x9002b21c
90001158:	9002b1b0 	.word	0x9002b1b0

9000115c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000115c:	6943      	ldr	r3, [r0, #20]
{
9000115e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001162:	2b00      	cmp	r3, #0
90001164:	f000 80c1 	beq.w	900012ea <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001168:	4605      	mov	r5, r0
    if (reader != 0)
9000116a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
9000116c:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000116e:	2800      	cmp	r0, #0
90001170:	f000 80a1 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001174:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001176:	2b07      	cmp	r3, #7
90001178:	f240 80ac 	bls.w	900012d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
9000117c:	6803      	ldr	r3, [r0, #0]
9000117e:	4621      	mov	r1, r4
90001180:	68db      	ldr	r3, [r3, #12]
90001182:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001184:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001186:	2208      	movs	r2, #8
90001188:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000118a:	6803      	ldr	r3, [r0, #0]
9000118c:	691b      	ldr	r3, [r3, #16]
9000118e:	4798      	blx	r3
90001190:	2800      	cmp	r0, #0
90001192:	f000 808c 	beq.w	900012ae <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001196:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001198:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000119a:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
9000119c:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000119e:	2800      	cmp	r0, #0
900011a0:	f000 808b 	beq.w	900012ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011a4:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a6:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011a8:	18a1      	adds	r1, r4, r2
900011aa:	5ca2      	ldrb	r2, [r4, r2]
900011ac:	788c      	ldrb	r4, [r1, #2]
900011ae:	784e      	ldrb	r6, [r1, #1]
900011b0:	0424      	lsls	r4, r4, #16
900011b2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011b6:	4314      	orrs	r4, r2
900011b8:	78ca      	ldrb	r2, [r1, #3]
900011ba:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011be:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011c0:	f243 0630 	movw	r6, #12336	@ 0x3030
900011c4:	e03a      	b.n	9000123c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011c6:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011c8:	2b07      	cmp	r3, #7
900011ca:	f240 8083 	bls.w	900012d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ce:	6803      	ldr	r3, [r0, #0]
900011d0:	4621      	mov	r1, r4
900011d2:	68db      	ldr	r3, [r3, #12]
900011d4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011d8:	2208      	movs	r2, #8
900011da:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011dc:	6803      	ldr	r3, [r0, #0]
900011de:	691b      	ldr	r3, [r3, #16]
900011e0:	4798      	blx	r3
900011e2:	b908      	cbnz	r0, 900011e8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011e4:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011e8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011ea:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011ec:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ee:	2800      	cmp	r0, #0
900011f0:	d079      	beq.n	900012e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011f2:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f4:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f6:	18ca      	adds	r2, r1, r3
900011f8:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011fa:	7994      	ldrb	r4, [r2, #6]
900011fc:	f892 a005 	ldrb.w	sl, [r2, #5]
90001200:	0424      	lsls	r4, r4, #16
90001202:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001206:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000120a:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000120e:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001210:	f892 8003 	ldrb.w	r8, [r2, #3]
90001214:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001218:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000121c:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001220:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001224:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001228:	f246 3164 	movw	r1, #25444	@ 0x6364
9000122c:	42b3      	cmp	r3, r6
9000122e:	bf08      	it	eq
90001230:	428a      	cmpeq	r2, r1
90001232:	bf0c      	ite	eq
90001234:	2301      	moveq	r3, #1
90001236:	2300      	movne	r3, #0
90001238:	d036      	beq.n	900012a8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000123a:	69ab      	ldr	r3, [r5, #24]
9000123c:	441c      	add	r4, r3
9000123e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90001240:	f104 0208 	add.w	r2, r4, #8
90001244:	429a      	cmp	r2, r3
90001246:	d22a      	bcs.n	9000129e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001248:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124a:	3409      	adds	r4, #9
        frameNumber++;
9000124c:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124e:	f024 0401 	bic.w	r4, r4, #1
90001252:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001256:	2800      	cmp	r0, #0
90001258:	d1b5      	bne.n	900011c6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
9000125a:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
9000125c:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000125e:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
90001262:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001266:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001268:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
9000126c:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90001270:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001274:	188c      	adds	r4, r1, r2
        val |= d[0];
90001276:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001278:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
9000127a:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000127e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
90001282:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001286:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
9000128a:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000128e:	0424      	lsls	r4, r4, #16
90001290:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001294:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001298:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
9000129c:	e7c4      	b.n	90001228 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000129e:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012a0:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012a2:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012a4:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012a8:	4618      	mov	r0, r3
900012aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012b4:	e76f      	b.n	90001196 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012b6:	1d22      	adds	r2, r4, #4
900012b8:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012ba:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012bc:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012be:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012c0:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012c2:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012c4:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012c6:	0424      	lsls	r4, r4, #16
900012c8:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012cc:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ce:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012d2:	e774      	b.n	900011be <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012d6:	4b08      	ldr	r3, [pc, #32]	@ (900012f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012d8:	4a08      	ldr	r2, [pc, #32]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012da:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012dc:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012e0:	4807      	ldr	r0, [pc, #28]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012e2:	f028 fd9d 	bl	90029e20 <__assert_func>
900012e6:	461c      	mov	r4, r3
900012e8:	e7b7      	b.n	9000125a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012ea:	4b06      	ldr	r3, [pc, #24]	@ (90001304 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012ec:	21f7      	movs	r1, #247	@ 0xf7
900012ee:	4a06      	ldr	r2, [pc, #24]	@ (90001308 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012f0:	4803      	ldr	r0, [pc, #12]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012f2:	f028 fd95 	bl	90029e20 <__assert_func>
900012f6:	bf00      	nop
900012f8:	9002b208 	.word	0x9002b208
900012fc:	9002b21c 	.word	0x9002b21c
90001300:	9002b1b0 	.word	0x9002b1b0
90001304:	9002b260 	.word	0x9002b260
90001308:	9002b2ac 	.word	0x9002b2ac

9000130c <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000130c:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130e:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001310:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001312:	4b0e      	ldr	r3, [pc, #56]	@ (9000134c <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001314:	2001      	movs	r0, #1
90001316:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001318:	63e2      	str	r2, [r4, #60]	@ 0x3c
9000131a:	6023      	str	r3, [r4, #0]
9000131c:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001320:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001324:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001328:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
9000132c:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001330:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001334:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001338:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
9000133c:	f00c fdf4 	bl	9000df28 <osSemaphoreNew>
90001340:	4b03      	ldr	r3, [pc, #12]	@ (90001350 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
90001342:	4602      	mov	r2, r0
}
90001344:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001346:	601a      	str	r2, [r3, #0]
}
90001348:	bd10      	pop	{r4, pc}
9000134a:	bf00      	nop
9000134c:	9002cb84 	.word	0x9002cb84
90001350:	24005df4 	.word	0x24005df4

90001354 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001354:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001358:	2100      	movs	r1, #0
    if (reader != 0)
9000135a:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
9000135c:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000135e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
90001360:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001364:	2e00      	cmp	r6, #0
90001366:	f000 81b3 	beq.w	900016d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
9000136a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000136c:	2b47      	cmp	r3, #71	@ 0x47
9000136e:	f240 8270 	bls.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001372:	6833      	ldr	r3, [r6, #0]
90001374:	4630      	mov	r0, r6
90001376:	68db      	ldr	r3, [r3, #12]
90001378:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000137a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000137c:	2248      	movs	r2, #72	@ 0x48
9000137e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001380:	6803      	ldr	r3, [r0, #0]
90001382:	691b      	ldr	r3, [r3, #16]
90001384:	4798      	blx	r3
90001386:	2800      	cmp	r0, #0
90001388:	f000 80b7 	beq.w	900014fa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
9000138c:	2300      	movs	r3, #0
    if (reader != 0)
9000138e:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
90001390:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001392:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001394:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001396:	2e00      	cmp	r6, #0
90001398:	f000 819b 	beq.w	900016d2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000139c:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013a0:	2204      	movs	r2, #4
900013a2:	49c3      	ldr	r1, [pc, #780]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013a4:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013a8:	4620      	mov	r0, r4
900013aa:	f028 ffdd 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013ae:	2800      	cmp	r0, #0
900013b0:	f040 825f 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013b4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013b8:	2204      	movs	r2, #4
900013ba:	49be      	ldr	r1, [pc, #760]	@ (900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013bc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013be:	4448      	add	r0, r9
900013c0:	f028 ffd2 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013c4:	2800      	cmp	r0, #0
900013c6:	f040 8268 	bne.w	9000189a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013ca:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ce:	2204      	movs	r2, #4
900013d0:	49b9      	ldr	r1, [pc, #740]	@ (900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013d2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013d6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013da:	f028 ffc5 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013de:	4680      	mov	r8, r0
900013e0:	2800      	cmp	r0, #0
900013e2:	f040 8250 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e6:	7ca3      	ldrb	r3, [r4, #18]
900013e8:	7c62      	ldrb	r2, [r4, #17]
900013ea:	041b      	lsls	r3, r3, #16
900013ec:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013f0:	7c22      	ldrb	r2, [r4, #16]
900013f2:	4313      	orrs	r3, r2
900013f4:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013f6:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013fa:	f000 8233 	beq.w	90001864 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013fe:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001402:	2204      	movs	r2, #4
90001404:	49ad      	ldr	r1, [pc, #692]	@ (900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001406:	4448      	add	r0, r9
90001408:	f028 ffae 	bl	9002a368 <strncmp>
    if (compare(offset, "hdrl", 4))
9000140c:	2800      	cmp	r0, #0
9000140e:	d078      	beq.n	90001502 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001410:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001412:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001416:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000141a:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000141c:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000141e:	2204      	movs	r2, #4
90001420:	49a7      	ldr	r1, [pc, #668]	@ (900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001422:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001424:	f028 ffa0 	bl	9002a368 <strncmp>
    if (compare(offset, "avih", 4))
90001428:	2800      	cmp	r0, #0
9000142a:	f000 80e6 	beq.w	900015fa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000142e:	2307      	movs	r3, #7
90001430:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001434:	f1ba 0f00 	cmp.w	sl, #0
90001438:	f000 8190 	beq.w	9000175c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
9000143c:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000143e:	2b0b      	cmp	r3, #11
90001440:	f240 8207 	bls.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001444:	f8da 3000 	ldr.w	r3, [sl]
90001448:	4621      	mov	r1, r4
9000144a:	4650      	mov	r0, sl
9000144c:	68db      	ldr	r3, [r3, #12]
9000144e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001450:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001452:	220c      	movs	r2, #12
90001454:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001456:	6803      	ldr	r3, [r0, #0]
90001458:	691b      	ldr	r3, [r3, #16]
9000145a:	4798      	blx	r3
9000145c:	2800      	cmp	r0, #0
9000145e:	f000 8121 	beq.w	900016a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001462:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001466:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001468:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
9000146a:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000146e:	f04f 090d 	mov.w	r9, #13
90001472:	e003      	b.n	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001474:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001478:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000147a:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000147c:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
90001480:	2e00      	cmp	r6, #0
90001482:	d052      	beq.n	9000152a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001484:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001486:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001488:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000148a:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000148c:	1afb      	subs	r3, r7, r3
9000148e:	4418      	add	r0, r3
    return strncmp(src, str, num);
90001490:	f028 ff6a 	bl	9002a368 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001494:	2800      	cmp	r0, #0
90001496:	d051      	beq.n	9000153c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001498:	f1ba 0f00 	cmp.w	sl, #0
9000149c:	f040 80a8 	bne.w	900015f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014a0:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014a2:	42a3      	cmp	r3, r4
900014a4:	d94d      	bls.n	90001542 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014a6:	3404      	adds	r4, #4
    if (reader != 0)
900014a8:	b386      	cbz	r6, 9000150c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014aa:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014ac:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014b0:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014b2:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014b4:	eb01 0204 	add.w	r2, r1, r4
900014b8:	5d09      	ldrb	r1, [r1, r4]
900014ba:	7894      	ldrb	r4, [r2, #2]
900014bc:	7850      	ldrb	r0, [r2, #1]
900014be:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014c2:	78d2      	ldrb	r2, [r2, #3]
900014c4:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014c8:	ea44 0401 	orr.w	r4, r4, r1
900014cc:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014d0:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014d2:	f240 81be 	bls.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014d6:	6833      	ldr	r3, [r6, #0]
900014d8:	4621      	mov	r1, r4
900014da:	4630      	mov	r0, r6
900014dc:	68db      	ldr	r3, [r3, #12]
900014de:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014e0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014e2:	220c      	movs	r2, #12
900014e4:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014e6:	6803      	ldr	r3, [r0, #0]
900014e8:	691b      	ldr	r3, [r3, #16]
900014ea:	4798      	blx	r3
900014ec:	2800      	cmp	r0, #0
900014ee:	d1c1      	bne.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014f0:	f04f 0a0d 	mov.w	sl, #13
900014f4:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014f8:	e7be      	b.n	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014fa:	230d      	movs	r3, #13
900014fc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001500:	e744      	b.n	9000138c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
90001502:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001506:	f04f 0801 	mov.w	r8, #1
9000150a:	e786      	b.n	9000141a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
9000150c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000150e:	1913      	adds	r3, r2, r4
        val |= d[0];
90001510:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
90001512:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001514:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001516:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001518:	0424      	lsls	r4, r4, #16
9000151a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000151e:	4314      	orrs	r4, r2
        val |= d[3] << 24;
90001520:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001524:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001526:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
9000152a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
9000152c:	2204      	movs	r2, #4
9000152e:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001530:	2600      	movs	r6, #0
90001532:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001534:	f028 ff18 	bl	9002a368 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001538:	2800      	cmp	r0, #0
9000153a:	d1ad      	bne.n	90001498 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
9000153c:	f1ba 0f00 	cmp.w	sl, #0
90001540:	d156      	bne.n	900015f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001542:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001546:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001548:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000154a:	2e00      	cmp	r6, #0
9000154c:	f000 8118 	beq.w	90001780 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001550:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
90001552:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001554:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001558:	f104 0e02 	add.w	lr, r4, #2
9000155c:	f104 0c01 	add.w	ip, r4, #1
90001560:	f811 8004 	ldrb.w	r8, [r1, r4]
90001564:	1ce0      	adds	r0, r4, #3
90001566:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
9000156a:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000156c:	f811 900c 	ldrb.w	r9, [r1, ip]
90001570:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001574:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001578:	ea43 0308 	orr.w	r3, r3, r8
9000157c:	f811 8000 	ldrb.w	r8, [r1, r0]
90001580:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001584:	443b      	add	r3, r7
90001586:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001588:	f811 300e 	ldrb.w	r3, [r1, lr]
9000158c:	f811 e00c 	ldrb.w	lr, [r1, ip]
90001590:	f811 c004 	ldrb.w	ip, [r1, r4]
90001594:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001598:	5c09      	ldrb	r1, [r1, r0]
9000159a:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000159e:	ea44 040c 	orr.w	r4, r4, ip
900015a2:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015a6:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015a8:	f240 8153 	bls.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015ac:	6833      	ldr	r3, [r6, #0]
900015ae:	4621      	mov	r1, r4
900015b0:	4630      	mov	r0, r6
900015b2:	68db      	ldr	r3, [r3, #12]
900015b4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015b6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015b8:	2204      	movs	r2, #4
900015ba:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015bc:	6803      	ldr	r3, [r0, #0]
900015be:	691b      	ldr	r3, [r3, #16]
900015c0:	4798      	blx	r3
900015c2:	2800      	cmp	r0, #0
900015c4:	f000 80cd 	beq.w	90001762 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015c8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015ca:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015cc:	2b00      	cmp	r3, #0
900015ce:	f000 816e 	beq.w	900018ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015d2:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015d4:	2204      	movs	r2, #4
900015d6:	493b      	ldr	r1, [pc, #236]	@ (900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015d8:	f028 fec6 	bl	9002a368 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015dc:	2800      	cmp	r0, #0
900015de:	f040 80ca 	bne.w	90001776 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015e2:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015e4:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015e6:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015e8:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015ea:	622b      	str	r3, [r5, #32]
}
900015ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015f0:	230a      	movs	r3, #10
900015f2:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015fa:	f1b8 0f00 	cmp.w	r8, #0
900015fe:	f43f af19 	beq.w	90001434 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001602:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001606:	f1ba 0f00 	cmp.w	sl, #0
9000160a:	f000 80d4 	beq.w	900017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000160e:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001610:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001614:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001616:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001618:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000161c:	f812 8001 	ldrb.w	r8, [r2, r1]
90001620:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001624:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001628:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
9000162c:	4438      	add	r0, r7
9000162e:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001630:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001634:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001636:	f89e 7001 	ldrb.w	r7, [lr, #1]
9000163a:	041b      	lsls	r3, r3, #16
9000163c:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001640:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001644:	ea43 0308 	orr.w	r3, r3, r8
90001648:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
9000164c:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000164e:	fbac c303 	umull	ip, r3, ip, r3
90001652:	099b      	lsrs	r3, r3, #6
90001654:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001656:	78bb      	ldrb	r3, [r7, #2]
90001658:	f897 e001 	ldrb.w	lr, [r7, #1]
9000165c:	041b      	lsls	r3, r3, #16
9000165e:	f812 c000 	ldrb.w	ip, [r2, r0]
90001662:	78ff      	ldrb	r7, [r7, #3]
90001664:	1850      	adds	r0, r2, r1
90001666:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000166a:	ea43 030c 	orr.w	r3, r3, ip
9000166e:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
90001672:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001674:	7883      	ldrb	r3, [r0, #2]
90001676:	7847      	ldrb	r7, [r0, #1]
90001678:	041b      	lsls	r3, r3, #16
9000167a:	5c51      	ldrb	r1, [r2, r1]
9000167c:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001680:	430b      	orrs	r3, r1
90001682:	78c1      	ldrb	r1, [r0, #3]
90001684:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001688:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
9000168a:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000168c:	788b      	ldrb	r3, [r1, #2]
9000168e:	7848      	ldrb	r0, [r1, #1]
90001690:	041b      	lsls	r3, r3, #16
90001692:	5d92      	ldrb	r2, [r2, r6]
90001694:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001698:	4313      	orrs	r3, r2
9000169a:	78ca      	ldrb	r2, [r1, #3]
9000169c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016a0:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016a2:	e6cb      	b.n	9000143c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016a4:	230d      	movs	r3, #13
900016a6:	469a      	mov	sl, r3
900016a8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016ac:	e6db      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016ae:	bf00      	nop
900016b0:	9002b2e0 	.word	0x9002b2e0
900016b4:	9002b398 	.word	0x9002b398
900016b8:	9002b390 	.word	0x9002b390
900016bc:	9002b364 	.word	0x9002b364
900016c0:	9002b378 	.word	0x9002b378
900016c4:	9002b388 	.word	0x9002b388
900016c8:	9002b380 	.word	0x9002b380
900016cc:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016d0:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016d2:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016d6:	2204      	movs	r2, #4
900016d8:	4976      	ldr	r1, [pc, #472]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016da:	eb09 0007 	add.w	r0, r9, r7
900016de:	f028 fe43 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016e2:	2800      	cmp	r0, #0
900016e4:	f040 80c5 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016e8:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016ec:	2204      	movs	r2, #4
900016ee:	4972      	ldr	r1, [pc, #456]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016f0:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016f2:	4448      	add	r0, r9
900016f4:	f028 fe38 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016f8:	2800      	cmp	r0, #0
900016fa:	f040 80ce 	bne.w	9000189a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016fe:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001702:	2204      	movs	r2, #4
90001704:	496d      	ldr	r1, [pc, #436]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001706:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000170a:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000170e:	f028 fe2b 	bl	9002a368 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001712:	4680      	mov	r8, r0
90001714:	2800      	cmp	r0, #0
90001716:	f040 80b6 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
9000171a:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000171e:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
90001722:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001726:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001728:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000172a:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
9000172c:	0424      	lsls	r4, r4, #16
9000172e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001732:	4314      	orrs	r4, r2
    assert(aviListSize);
90001734:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001738:	f000 8094 	beq.w	90001864 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
9000173c:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001740:	2204      	movs	r2, #4
90001742:	495f      	ldr	r1, [pc, #380]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001744:	4448      	add	r0, r9
90001746:	f028 fe0f 	bl	9002a368 <strncmp>
    if (compare(offset, "hdrl", 4))
9000174a:	b970      	cbnz	r0, 9000176a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
9000174c:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001750:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001754:	4448      	add	r0, r9
90001756:	f04f 0a00 	mov.w	sl, #0
9000175a:	e65f      	b.n	9000141c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000175c:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
90001760:	e683      	b.n	9000146a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
90001762:	230d      	movs	r3, #13
90001764:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001768:	e72e      	b.n	900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000176a:	2306      	movs	r3, #6
    offset += 4;
9000176c:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001770:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001774:	e7ee      	b.n	90001754 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001776:	230b      	movs	r3, #11
90001778:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000177c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001780:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
90001782:	1902      	adds	r2, r0, r4
        val |= d[0];
90001784:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001786:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001788:	7893      	ldrb	r3, [r2, #2]
9000178a:	041b      	lsls	r3, r3, #16
9000178c:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
90001790:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001792:	78d1      	ldrb	r1, [r2, #3]
90001794:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001798:	443b      	add	r3, r7
9000179a:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
9000179c:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000179e:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017a0:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017a2:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017a4:	0424      	lsls	r4, r4, #16
900017a6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017aa:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017ac:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017b0:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017b2:	4420      	add	r0, r4
900017b4:	e70e      	b.n	900015d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017b6:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017b8:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017bc:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017c0:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017c4:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017c8:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017cc:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017d0:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017d2:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017d6:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017da:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017de:	041b      	lsls	r3, r3, #16
900017e0:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017e4:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017e8:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017ec:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017f0:	fbae e303 	umull	lr, r3, lr, r3
900017f4:	099b      	lsrs	r3, r3, #6
900017f6:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017f8:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017fc:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001800:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001802:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001804:	041b      	lsls	r3, r3, #16
90001806:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000180a:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000180e:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
90001812:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001816:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001818:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000181a:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000181e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001822:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001826:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
9000182a:	041b      	lsls	r3, r3, #16
9000182c:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001830:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001834:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001838:	60eb      	str	r3, [r5, #12]
        val |= d[0];
9000183a:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
9000183c:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000183e:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001840:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001842:	041b      	lsls	r3, r3, #16
90001844:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001848:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000184a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000184e:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90001850:	e60b      	b.n	9000146a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001852:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001854:	4b1b      	ldr	r3, [pc, #108]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001856:	4a1c      	ldr	r2, [pc, #112]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001858:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000185a:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000185e:	481b      	ldr	r0, [pc, #108]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001860:	f028 fade 	bl	90029e20 <__assert_func>
    assert(aviListSize);
90001864:	4b1a      	ldr	r3, [pc, #104]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001866:	f44f 71aa 	mov.w	r1, #340	@ 0x154
9000186a:	4a1a      	ldr	r2, [pc, #104]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000186c:	4817      	ldr	r0, [pc, #92]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186e:	f028 fad7 	bl	90029e20 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001872:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001874:	4b18      	ldr	r3, [pc, #96]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001876:	4a17      	ldr	r2, [pc, #92]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001878:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
9000187c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
90001880:	4812      	ldr	r0, [pc, #72]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001882:	f028 facd 	bl	90029e20 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001886:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001888:	4b14      	ldr	r3, [pc, #80]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
9000188a:	4a12      	ldr	r2, [pc, #72]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000188c:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001890:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001894:	480d      	ldr	r0, [pc, #52]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001896:	f028 fac3 	bl	90029e20 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000189a:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000189c:	4b10      	ldr	r3, [pc, #64]	@ (900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000189e:	4a0d      	ldr	r2, [pc, #52]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018a0:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018a4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018a8:	4808      	ldr	r0, [pc, #32]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018aa:	f028 fab9 	bl	90029e20 <__assert_func>
        src = (const char*)movieData + offset;
900018ae:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018b0:	4420      	add	r0, r4
900018b2:	e68f      	b.n	900015d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018b4:	9002b2e0 	.word	0x9002b2e0
900018b8:	9002b398 	.word	0x9002b398
900018bc:	9002b390 	.word	0x9002b390
900018c0:	9002b364 	.word	0x9002b364
900018c4:	9002b208 	.word	0x9002b208
900018c8:	9002b21c 	.word	0x9002b21c
900018cc:	9002b1b0 	.word	0x9002b1b0
900018d0:	9002b36c 	.word	0x9002b36c
900018d4:	9002b304 	.word	0x9002b304
900018d8:	9002b2e8 	.word	0x9002b2e8
900018dc:	9002b34c 	.word	0x9002b34c
900018e0:	9002b334 	.word	0x9002b334
900018e4:	10624dd3 	.word	0x10624dd3

900018e8 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018e8:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018ea:	2400      	movs	r4, #0
    movieLength = length;
900018ec:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018f0:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018f2:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018f6:	f7ff bd2d 	b.w	90001354 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018fa:	bf00      	nop

900018fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018fc:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018fe:	680b      	ldr	r3, [r1, #0]
{
90001900:	4604      	mov	r4, r0
    movieData = 0;
90001902:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001904:	4608      	mov	r0, r1
90001906:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001908:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
9000190c:	4798      	blx	r3
9000190e:	4603      	mov	r3, r0
    readVideoHeader();
90001910:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001912:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001918:	f7ff bd1c 	b.w	90001354 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

9000191c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
9000191c:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
9000191e:	4b1f      	ldr	r3, [pc, #124]	@ (9000199c <JPEG_Decode_DMA+0x80>)
90001920:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
90001922:	4d1f      	ldr	r5, [pc, #124]	@ (900019a0 <JPEG_Decode_DMA+0x84>)
    {
90001924:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
90001926:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90001928:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
9000192a:	4b1e      	ldr	r3, [pc, #120]	@ (900019a4 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
9000192c:	4d1e      	ldr	r5, [pc, #120]	@ (900019a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
9000192e:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001930:	4e1e      	ldr	r6, [pc, #120]	@ (900019ac <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
90001932:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001934:	4d1e      	ldr	r5, [pc, #120]	@ (900019b0 <JPEG_Decode_DMA+0x94>)
90001936:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001938:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000193a:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90001940:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001942:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
90001946:	4e1b      	ldr	r6, [pc, #108]	@ (900019b4 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001948:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000194c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001950:	bf18      	it	ne
90001952:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001956:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
90001958:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000195a:	4e17      	ldr	r6, [pc, #92]	@ (900019b8 <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195c:	4d17      	ldr	r5, [pc, #92]	@ (900019bc <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
9000195e:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90001960:	4e17      	ldr	r6, [pc, #92]	@ (900019c0 <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001962:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001966:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196a:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
9000196c:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196e:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001970:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001972:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001976:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001978:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000197a:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000197c:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000197e:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001980:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001982:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001986:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000198a:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000198e:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001992:	f007 f8b9 	bl	90008b08 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001996:	4620      	mov	r0, r4
90001998:	b002      	add	sp, #8
9000199a:	bd70      	pop	{r4, r5, r6, pc}
9000199c:	24006010 	.word	0x24006010
900019a0:	24005df0 	.word	0x24005df0
900019a4:	24006004 	.word	0x24006004
900019a8:	24005df8 	.word	0x24005df8
900019ac:	24005dac 	.word	0x24005dac
900019b0:	24006000 	.word	0x24006000
900019b4:	24006020 	.word	0x24006020
900019b8:	24006018 	.word	0x24006018
900019bc:	24000004 	.word	0x24000004
900019c0:	2400601c 	.word	0x2400601c

900019c4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019c8:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019ca:	2402      	movs	r4, #2
900019cc:	483e      	ldr	r0, [pc, #248]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
900019ce:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d0:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019d2:	0725      	lsls	r5, r4, #28
900019d4:	d002      	beq.n	900019dc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019d6:	f024 040f 	bic.w	r4, r4, #15
900019da:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019dc:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019de:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019e0:	4d3a      	ldr	r5, [pc, #232]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019e2:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019e4:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019e8:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
900019ec:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ee:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f0:	4f37      	ldr	r7, [pc, #220]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f2:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f6:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
900019fa:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019fe:	bf18      	it	ne
90001a00:	f1c4 0410 	rsbne	r4, r4, #16
90001a04:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
90001a06:	4833      	ldr	r0, [pc, #204]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a08:	4c33      	ldr	r4, [pc, #204]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a0a:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a0c:	4833      	ldr	r0, [pc, #204]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a0e:	f7ff ff85 	bl	9000191c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a12:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a14:	4e32      	ldr	r6, [pc, #200]	@ (90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a16:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a18:	f8da 3000 	ldr.w	r3, [sl]
90001a1c:	b10b      	cbz	r3, 90001a22 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
90001a1e:	6833      	ldr	r3, [r6, #0]
90001a20:	bb6b      	cbnz	r3, 90001a7e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a22:	6828      	ldr	r0, [r5, #0]
90001a24:	7a03      	ldrb	r3, [r0, #8]
90001a26:	b93b      	cbnz	r3, 90001a38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a28:	4b2e      	ldr	r3, [pc, #184]	@ (90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a2a:	681b      	ldr	r3, [r3, #0]
90001a2c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a30:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a34:	2b01      	cmp	r3, #1
90001a36:	d03b      	beq.n	90001ab0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a38:	683b      	ldr	r3, [r7, #0]
90001a3a:	2b01      	cmp	r3, #1
90001a3c:	d00d      	beq.n	90001a5a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a3e:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a40:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a42:	6823      	ldr	r3, [r4, #0]
90001a44:	2b02      	cmp	r3, #2
90001a46:	d024      	beq.n	90001a92 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a48:	6823      	ldr	r3, [r4, #0]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d1e4      	bne.n	90001a18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a4e:	2300      	movs	r3, #0
90001a50:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a54:	6033      	str	r3, [r6, #0]
}
90001a56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5a:	f8d9 3000 	ldr.w	r3, [r9]
90001a5e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a62:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a66:	2b00      	cmp	r3, #0
90001a68:	d1e9      	bne.n	90001a3e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001a6a:	f8da 3000 	ldr.w	r3, [sl]
90001a6e:	2b00      	cmp	r3, #0
90001a70:	d1e5      	bne.n	90001a3e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a72:	2102      	movs	r1, #2
90001a74:	4819      	ldr	r0, [pc, #100]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001a76:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a78:	f007 f9f6 	bl	90008e68 <HAL_JPEG_Resume>
90001a7c:	e7df      	b.n	90001a3e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a7e:	4817      	ldr	r0, [pc, #92]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a80:	f007 ffbc 	bl	900099fc <HAL_JPEG_GetState>
90001a84:	2804      	cmp	r0, #4
90001a86:	d01a      	beq.n	90001abe <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001a88:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a8a:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a8c:	6823      	ldr	r3, [r4, #0]
90001a8e:	2b02      	cmp	r3, #2
90001a90:	d1da      	bne.n	90001a48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001a92:	4b15      	ldr	r3, [pc, #84]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001a94:	f04f 31ff 	mov.w	r1, #4294967295
90001a98:	6818      	ldr	r0, [r3, #0]
90001a9a:	f00c fa9b 	bl	9000dfd4 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a9e:	6823      	ldr	r3, [r4, #0]
90001aa0:	2b01      	cmp	r3, #1
90001aa2:	d1b9      	bne.n	90001a18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001aa4:	2300      	movs	r3, #0
90001aa6:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aaa:	6033      	str	r3, [r6, #0]
}
90001aac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ab0:	6833      	ldr	r3, [r6, #0]
90001ab2:	2b00      	cmp	r3, #0
90001ab4:	d1c0      	bne.n	90001a38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001ab6:	6803      	ldr	r3, [r0, #0]
90001ab8:	691b      	ldr	r3, [r3, #16]
90001aba:	4798      	blx	r3
90001abc:	e7bc      	b.n	90001a38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001abe:	4807      	ldr	r0, [pc, #28]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001ac0:	f007 f8a0 	bl	90008c04 <HAL_JPEG_Abort>
90001ac4:	e7e0      	b.n	90001a88 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001ac6:	bf00      	nop
90001ac8:	24005dac 	.word	0x24005dac
90001acc:	24006008 	.word	0x24006008
90001ad0:	24006010 	.word	0x24006010
90001ad4:	24006024 	.word	0x24006024
90001ad8:	2400600c 	.word	0x2400600c
90001adc:	240075b8 	.word	0x240075b8
90001ae0:	24005dec 	.word	0x24005dec
90001ae4:	24005df0 	.word	0x24005df0
90001ae8:	24005df4 	.word	0x24005df4
90001aec:	24006014 	.word	0x24006014
90001af0:	24006004 	.word	0x24006004
90001af4:	24000004 	.word	0x24000004

90001af8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001af8:	6943      	ldr	r3, [r0, #20]
{
90001afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001afe:	2b00      	cmp	r3, #0
90001b00:	f000 80ad 	beq.w	90001c5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b04:	4604      	mov	r4, r0
    if (reader != 0)
90001b06:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b08:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b0a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b0c:	2800      	cmp	r0, #0
90001b0e:	d05f      	beq.n	90001bd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b12:	2b07      	cmp	r3, #7
90001b14:	f240 80a9 	bls.w	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b18:	6803      	ldr	r3, [r0, #0]
90001b1a:	4629      	mov	r1, r5
90001b1c:	68db      	ldr	r3, [r3, #12]
90001b1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b22:	2208      	movs	r2, #8
90001b24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b26:	6803      	ldr	r3, [r0, #0]
90001b28:	691b      	ldr	r3, [r3, #16]
90001b2a:	4798      	blx	r3
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d04a      	beq.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b30:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b34:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b38:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b3a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b3c:	2800      	cmp	r0, #0
90001b3e:	d046      	beq.n	90001bce <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b42:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b46:	1b52      	subs	r2, r2, r5
90001b48:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4a:	eb03 070c 	add.w	r7, r3, ip
90001b4e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	eb03 0805 	add.w	r8, r3, r5
90001b56:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b5a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b5e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b62:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b66:	78bd      	ldrb	r5, [r7, #2]
90001b68:	78ff      	ldrb	r7, [r7, #3]
90001b6a:	042d      	lsls	r5, r5, #16
90001b6c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b70:	ea45 050e 	orr.w	r5, r5, lr
90001b74:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b78:	189f      	adds	r7, r3, r2
90001b7a:	5c9b      	ldrb	r3, [r3, r2]
90001b7c:	787a      	ldrb	r2, [r7, #1]
90001b7e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b82:	eb01 0e05 	add.w	lr, r1, r5
90001b86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b88:	f10e 0208 	add.w	r2, lr, #8
90001b8c:	429a      	cmp	r2, r3
90001b8e:	d213      	bcs.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b90:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b94:	459c      	cmp	ip, r3
90001b96:	d138      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b98:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b9c:	429f      	cmp	r7, r3
90001b9e:	d134      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001ba0:	2d00      	cmp	r5, #0
90001ba2:	d136      	bne.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001ba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bac:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bae:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bb0:	d002      	beq.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bb2:	2001      	movs	r0, #1
}
90001bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bb8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bba:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001bbc:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001bbe:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bc6:	230d      	movs	r3, #13
90001bc8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bcc:	e7b0      	b.n	90001b30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001bce:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bd2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bd4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bd6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bd8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bda:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bde:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001be0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001be2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001be4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001be8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bea:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bec:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bee:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bf2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bf6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bf8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bfa:	042d      	lsls	r5, r5, #16
90001bfc:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c00:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c02:	2000      	movs	r0, #0
90001c04:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c08:	e7bb      	b.n	90001b82 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c0a:	2d00      	cmp	r5, #0
90001c0c:	bf18      	it	ne
90001c0e:	4672      	movne	r2, lr
90001c10:	e7c8      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c12:	f101 0708 	add.w	r7, r1, #8
90001c16:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c18:	b1f0      	cbz	r0, 90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c1c:	429d      	cmp	r5, r3
90001c1e:	d824      	bhi.n	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c20:	6803      	ldr	r3, [r0, #0]
90001c22:	4639      	mov	r1, r7
90001c24:	68db      	ldr	r3, [r3, #12]
90001c26:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c2a:	462a      	mov	r2, r5
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c2e:	6803      	ldr	r3, [r0, #0]
90001c30:	691b      	ldr	r3, [r3, #16]
90001c32:	4798      	blx	r3
90001c34:	b910      	cbnz	r0, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c36:	230d      	movs	r3, #13
90001c38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c3c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c40:	b126      	cbz	r6, 90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c42:	4633      	mov	r3, r6
90001c44:	462a      	mov	r2, r5
90001c46:	4620      	mov	r0, r4
90001c48:	f7ff febc 	bl	900019c4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c4c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c50:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c52:	442a      	add	r2, r5
            frameNumber++;
90001c54:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c56:	e7a5      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c5a:	4439      	add	r1, r7
90001c5c:	e7f0      	b.n	90001c40 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c5e:	4b07      	ldr	r3, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c60:	21c3      	movs	r1, #195	@ 0xc3
90001c62:	4a07      	ldr	r2, [pc, #28]	@ (90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c64:	4807      	ldr	r0, [pc, #28]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c66:	f028 f8db 	bl	90029e20 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c6a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c6c:	4b06      	ldr	r3, [pc, #24]	@ (90001c88 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c6e:	4a07      	ldr	r2, [pc, #28]	@ (90001c8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c70:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c72:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c76:	4803      	ldr	r0, [pc, #12]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c78:	f028 f8d2 	bl	90029e20 <__assert_func>
90001c7c:	9002b260 	.word	0x9002b260
90001c80:	9002b3a0 	.word	0x9002b3a0
90001c84:	9002b1b0 	.word	0x9002b1b0
90001c88:	9002b208 	.word	0x9002b208
90001c8c:	9002b21c 	.word	0x9002b21c

90001c90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c94:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c96:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c9a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c9c:	460e      	mov	r6, r1
90001c9e:	4690      	mov	r8, r2
90001ca0:	461f      	mov	r7, r3
    if (reader != 0)
90001ca2:	2800      	cmp	r0, #0
90001ca4:	f000 80f9 	beq.w	90001e9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001ca8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001caa:	2b07      	cmp	r3, #7
90001cac:	f240 810a 	bls.w	90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cb0:	6803      	ldr	r3, [r0, #0]
90001cb2:	4649      	mov	r1, r9
90001cb4:	68db      	ldr	r3, [r3, #12]
90001cb6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cb8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cba:	2208      	movs	r2, #8
90001cbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cbe:	6803      	ldr	r3, [r0, #0]
90001cc0:	691b      	ldr	r3, [r3, #16]
90001cc2:	4798      	blx	r3
90001cc4:	2800      	cmp	r0, #0
90001cc6:	f000 80b3 	beq.w	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cca:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ccc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cce:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cd0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cd4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cd8:	2800      	cmp	r0, #0
90001cda:	f000 80fc 	beq.w	90001ed6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001cde:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ce2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001ce4:	1899      	adds	r1, r3, r2
90001ce6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cea:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cee:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cf2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cf6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cfa:	ea49 0902 	orr.w	r9, r9, r2
90001cfe:	78ca      	ldrb	r2, [r1, #3]
90001d00:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d04:	454b      	cmp	r3, r9
90001d06:	f0c0 80dd 	bcc.w	90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001d0a:	6803      	ldr	r3, [r0, #0]
90001d0c:	4629      	mov	r1, r5
90001d0e:	68db      	ldr	r3, [r3, #12]
90001d10:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d14:	464a      	mov	r2, r9
90001d16:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d18:	6803      	ldr	r3, [r0, #0]
90001d1a:	691b      	ldr	r3, [r3, #16]
90001d1c:	4798      	blx	r3
90001d1e:	2800      	cmp	r0, #0
90001d20:	f000 8082 	beq.w	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d26:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d28:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d2c:	2302      	movs	r3, #2
90001d2e:	486b      	ldr	r0, [pc, #428]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d30:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d34:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d36:	d172      	bne.n	90001e1e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d38:	4662      	mov	r2, ip
90001d3a:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d3c:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d3e:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d40:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d42:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d46:	60c3      	str	r3, [r0, #12]
90001d48:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d4a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d4e:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d50:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d52:	6143      	str	r3, [r0, #20]
90001d54:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d56:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d5a:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d5c:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d5e:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d60:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d62:	bf28      	it	cs
90001d64:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d66:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d6a:	f002 020f 	and.w	r2, r2, #15
90001d6e:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001f10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d72:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d76:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d78:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d7a:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d7c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d7e:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d82:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001f14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d86:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d88:	eba3 030c 	sub.w	r3, r3, ip
90001d8c:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d8e:	6923      	ldr	r3, [r4, #16]
90001d90:	429e      	cmp	r6, r3
90001d92:	bf28      	it	cs
90001d94:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d96:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d9a:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9e:	bf18      	it	ne
90001da0:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da4:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001da6:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001da8:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001dac:	4b4c      	ldr	r3, [pc, #304]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dae:	bf18      	it	ne
90001db0:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001db4:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001db6:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001db8:	4b4a      	ldr	r3, [pc, #296]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dba:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001dbc:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dc0:	4643      	mov	r3, r8
90001dc2:	4849      	ldr	r0, [pc, #292]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001dc4:	f7ff fdaa 	bl	9000191c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001dc8:	4d48      	ldr	r5, [pc, #288]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001dca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001dcc:	4e48      	ldr	r6, [pc, #288]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001dce:	4c49      	ldr	r4, [pc, #292]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dd0:	4f49      	ldr	r7, [pc, #292]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001dd2:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001f18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001dd6:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dd8:	f8da 3000 	ldr.w	r3, [sl]
90001ddc:	b113      	cbz	r3, 90001de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001dde:	6833      	ldr	r3, [r6, #0]
90001de0:	2b00      	cmp	r3, #0
90001de2:	d13b      	bne.n	90001e5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001de4:	6828      	ldr	r0, [r5, #0]
90001de6:	7a03      	ldrb	r3, [r0, #8]
90001de8:	b93b      	cbnz	r3, 90001dfa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001dea:	4b44      	ldr	r3, [pc, #272]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001dec:	681b      	ldr	r3, [r3, #0]
90001dee:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001df2:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001df6:	2b01      	cmp	r3, #1
90001df8:	d044      	beq.n	90001e84 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dfa:	683b      	ldr	r3, [r7, #0]
90001dfc:	2b01      	cmp	r3, #1
90001dfe:	d01b      	beq.n	90001e38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001e00:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e02:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e04:	6823      	ldr	r3, [r4, #0]
90001e06:	2b02      	cmp	r3, #2
90001e08:	d032      	beq.n	90001e70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001e0a:	6823      	ldr	r3, [r4, #0]
90001e0c:	2b01      	cmp	r3, #1
90001e0e:	d1e3      	bne.n	90001dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001e10:	2300      	movs	r3, #0
}
90001e12:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e14:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e18:	6033      	str	r3, [r6, #0]
}
90001e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e1e:	f02c 030f 	bic.w	r3, ip, #15
90001e22:	3310      	adds	r3, #16
90001e24:	461a      	mov	r2, r3
90001e26:	e789      	b.n	90001d3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e28:	230d      	movs	r3, #13
90001e2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e2e:	e779      	b.n	90001d24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e30:	230d      	movs	r3, #13
90001e32:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e36:	e748      	b.n	90001cca <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e38:	f8d9 3000 	ldr.w	r3, [r9]
90001e3c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e40:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e44:	2b00      	cmp	r3, #0
90001e46:	d1db      	bne.n	90001e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e48:	f8da 3000 	ldr.w	r3, [sl]
90001e4c:	2b00      	cmp	r3, #0
90001e4e:	d1d7      	bne.n	90001e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e50:	2102      	movs	r1, #2
90001e52:	4825      	ldr	r0, [pc, #148]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e54:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e56:	f007 f807 	bl	90008e68 <HAL_JPEG_Resume>
90001e5a:	e7d1      	b.n	90001e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e5c:	4822      	ldr	r0, [pc, #136]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e5e:	f007 fdcd 	bl	900099fc <HAL_JPEG_GetState>
90001e62:	2804      	cmp	r0, #4
90001e64:	d015      	beq.n	90001e92 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001e66:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e68:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e6a:	6823      	ldr	r3, [r4, #0]
90001e6c:	2b02      	cmp	r3, #2
90001e6e:	d1cc      	bne.n	90001e0a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001e70:	4b23      	ldr	r3, [pc, #140]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001e72:	f04f 31ff 	mov.w	r1, #4294967295
90001e76:	6818      	ldr	r0, [r3, #0]
90001e78:	f00c f8ac 	bl	9000dfd4 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e7c:	6823      	ldr	r3, [r4, #0]
90001e7e:	2b01      	cmp	r3, #1
90001e80:	d1aa      	bne.n	90001dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001e82:	e7c5      	b.n	90001e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e84:	6833      	ldr	r3, [r6, #0]
90001e86:	2b00      	cmp	r3, #0
90001e88:	d1b7      	bne.n	90001dfa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001e8a:	6803      	ldr	r3, [r0, #0]
90001e8c:	691b      	ldr	r3, [r3, #16]
90001e8e:	4798      	blx	r3
90001e90:	e7b3      	b.n	90001dfa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001e92:	4815      	ldr	r0, [pc, #84]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e94:	f006 feb6 	bl	90008c04 <HAL_JPEG_Abort>
90001e98:	e7e5      	b.n	90001e66 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e9a:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e9e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001ea0:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ea4:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001ea6:	4401      	add	r1, r0
        val |= d[0];
90001ea8:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001eaa:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001eac:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001eb0:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eb2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001eb6:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eba:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ebe:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001ec2:	e731      	b.n	90001d28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ec4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ec6:	4b0f      	ldr	r3, [pc, #60]	@ (90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001ec8:	4a0f      	ldr	r2, [pc, #60]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001eca:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ecc:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ed0:	480e      	ldr	r0, [pc, #56]	@ (90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001ed2:	f027 ffa5 	bl	90029e20 <__assert_func>
90001ed6:	4691      	mov	r9, r2
90001ed8:	e7e1      	b.n	90001e9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001eda:	bf00      	nop
90001edc:	24005dac 	.word	0x24005dac
90001ee0:	24005ffc 	.word	0x24005ffc
90001ee4:	24006024 	.word	0x24006024
90001ee8:	240075b8 	.word	0x240075b8
90001eec:	24006008 	.word	0x24006008
90001ef0:	24005dec 	.word	0x24005dec
90001ef4:	2400600c 	.word	0x2400600c
90001ef8:	24006010 	.word	0x24006010
90001efc:	24005df0 	.word	0x24005df0
90001f00:	24005df4 	.word	0x24005df4
90001f04:	9002b208 	.word	0x9002b208
90001f08:	9002b21c 	.word	0x9002b21c
90001f0c:	9002b1b0 	.word	0x9002b1b0
90001f10:	24006014 	.word	0x24006014
90001f14:	24006004 	.word	0x24006004
90001f18:	24000004 	.word	0x24000004

90001f1c <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f1c:	684b      	ldr	r3, [r1, #4]
90001f1e:	2b01      	cmp	r3, #1
90001f20:	d015      	beq.n	90001f4e <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f22:	2b02      	cmp	r3, #2
90001f24:	d00b      	beq.n	90001f3e <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f26:	b94b      	cbnz	r3, 90001f3c <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f28:	68cb      	ldr	r3, [r1, #12]
90001f2a:	0758      	lsls	r0, r3, #29
90001f2c:	d11e      	bne.n	90001f6c <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f2e:	688b      	ldr	r3, [r1, #8]
90001f30:	075a      	lsls	r2, r3, #29
90001f32:	d003      	beq.n	90001f3c <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f34:	f023 0307 	bic.w	r3, r3, #7
90001f38:	3308      	adds	r3, #8
90001f3a:	608b      	str	r3, [r1, #8]
    }
90001f3c:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f3e:	68cb      	ldr	r3, [r1, #12]
90001f40:	071a      	lsls	r2, r3, #28
90001f42:	d0f4      	beq.n	90001f2e <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f44:	f023 030f 	bic.w	r3, r3, #15
90001f48:	3310      	adds	r3, #16
90001f4a:	60cb      	str	r3, [r1, #12]
90001f4c:	e7ef      	b.n	90001f2e <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f4e:	68cb      	ldr	r3, [r1, #12]
90001f50:	071a      	lsls	r2, r3, #28
90001f52:	d003      	beq.n	90001f5c <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f54:	f023 030f 	bic.w	r3, r3, #15
90001f58:	3310      	adds	r3, #16
90001f5a:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f5c:	688b      	ldr	r3, [r1, #8]
90001f5e:	0718      	lsls	r0, r3, #28
90001f60:	d0ec      	beq.n	90001f3c <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f62:	f023 030f 	bic.w	r3, r3, #15
90001f66:	3310      	adds	r3, #16
90001f68:	608b      	str	r3, [r1, #8]
90001f6a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f6c:	f023 0307 	bic.w	r3, r3, #7
90001f70:	3308      	adds	r3, #8
90001f72:	60cb      	str	r3, [r1, #12]
90001f74:	e7db      	b.n	90001f2e <HAL_JPEG_InfoReadyCallback+0x12>
90001f76:	bf00      	nop

90001f78 <HAL_JPEG_GetDataCallback>:
    {
90001f78:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f7a:	4c0c      	ldr	r4, [pc, #48]	@ (90001fac <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f7c:	4a0c      	ldr	r2, [pc, #48]	@ (90001fb0 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f7e:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f80:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f82:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f84:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f86:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f88:	d302      	bcc.n	90001f90 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f8a:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f8e:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f90:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f92:	4b08      	ldr	r3, [pc, #32]	@ (90001fb4 <HAL_JPEG_GetDataCallback+0x3c>)
90001f94:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f96:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f9a:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f9c:	bf28      	it	cs
90001f9e:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fa2:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fa6:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fa8:	f006 be24 	b.w	90008bf4 <HAL_JPEG_ConfigInputBuffer>
90001fac:	24006020 	.word	0x24006020
90001fb0:	2400601c 	.word	0x2400601c
90001fb4:	24006018 	.word	0x24006018

90001fb8 <HAL_JPEG_DataReadyCallback>:
    {
90001fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fbc:	4e4a      	ldr	r6, [pc, #296]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fbe:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc0:	4f4a      	ldr	r7, [pc, #296]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fc2:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc4:	4d4a      	ldr	r5, [pc, #296]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fc6:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc8:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fce:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd0:	4b48      	ldr	r3, [pc, #288]	@ (900020f4 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd2:	4c49      	ldr	r4, [pc, #292]	@ (900020f8 <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd6:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd8:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fdc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fe0:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fe4:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fe6:	4d45      	ldr	r5, [pc, #276]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fe8:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fea:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fee:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001ff2:	697b      	ldr	r3, [r7, #20]
90001ff4:	428b      	cmp	r3, r1
90001ff6:	d260      	bcs.n	900020ba <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ff8:	6821      	ldr	r1, [r4, #0]
90001ffa:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ffc:	6823      	ldr	r3, [r4, #0]
90001ffe:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002000:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002004:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002008:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000200c:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000200e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002012:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002016:	6823      	ldr	r3, [r4, #0]
90002018:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000201c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002020:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002022:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002024:	b12b      	cbz	r3, 90002032 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
90002026:	6823      	ldr	r3, [r4, #0]
90002028:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000202c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002030:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002032:	6832      	ldr	r2, [r6, #0]
90002034:	69bb      	ldr	r3, [r7, #24]
90002036:	4293      	cmp	r3, r2
90002038:	d922      	bls.n	90002080 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203a:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
9000203c:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002042:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002044:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
90002048:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000204a:	2200      	movs	r2, #0
9000204c:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000204e:	6823      	ldr	r3, [r4, #0]
90002050:	2b01      	cmp	r3, #1
90002052:	d900      	bls.n	90002056 <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002054:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90002056:	6823      	ldr	r3, [r4, #0]
90002058:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000205c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002060:	2b00      	cmp	r3, #0
90002062:	d138      	bne.n	900020d6 <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002064:	6823      	ldr	r3, [r4, #0]
90002066:	4640      	mov	r0, r8
90002068:	68fa      	ldr	r2, [r7, #12]
9000206a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000206e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002072:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002076:	01d2      	lsls	r2, r2, #7
90002078:	6859      	ldr	r1, [r3, #4]
9000207a:	f006 fdbf 	bl	90008bfc <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
9000207e:	69bb      	ldr	r3, [r7, #24]
90002080:	6832      	ldr	r2, [r6, #0]
90002082:	429a      	cmp	r2, r3
90002084:	d20b      	bcs.n	9000209e <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
90002086:	4b1e      	ldr	r3, [pc, #120]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x148>)
90002088:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000208a:	7a1b      	ldrb	r3, [r3, #8]
9000208c:	b10b      	cbz	r3, 90002092 <HAL_JPEG_DataReadyCallback+0xda>
    }
9000208e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002092:	4b1c      	ldr	r3, [pc, #112]	@ (90002104 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002094:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
90002098:	6818      	ldr	r0, [r3, #0]
9000209a:	f00b bfcd 	b.w	9000e038 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000209e:	6823      	ldr	r3, [r4, #0]
900020a0:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020a2:	4919      	ldr	r1, [pc, #100]	@ (90002108 <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a4:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020a6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020aa:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ac:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ae:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020b2:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020b4:	f006 fd66 	bl	90008b84 <HAL_JPEG_Pause>
900020b8:	e7e5      	b.n	90002086 <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ba:	6823      	ldr	r3, [r4, #0]
900020bc:	68fa      	ldr	r2, [r7, #12]
900020be:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020c6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ca:	01d2      	lsls	r2, r2, #7
900020cc:	6859      	ldr	r1, [r3, #4]
    }
900020ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020d2:	f006 bd93 	b.w	90008bfc <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020d6:	2102      	movs	r1, #2
900020d8:	4640      	mov	r0, r8
900020da:	f006 fd53 	bl	90008b84 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020de:	4b0b      	ldr	r3, [pc, #44]	@ (9000210c <HAL_JPEG_DataReadyCallback+0x154>)
900020e0:	2201      	movs	r2, #1
900020e2:	601a      	str	r2, [r3, #0]
900020e4:	e7be      	b.n	90002064 <HAL_JPEG_DataReadyCallback+0xac>
900020e6:	bf00      	nop
900020e8:	24006000 	.word	0x24006000
900020ec:	24005dac 	.word	0x24005dac
900020f0:	24006024 	.word	0x24006024
900020f4:	24005ffc 	.word	0x24005ffc
900020f8:	24006004 	.word	0x24006004
900020fc:	24000004 	.word	0x24000004
90002100:	24006008 	.word	0x24006008
90002104:	24005df4 	.word	0x24005df4
90002108:	24006014 	.word	0x24006014
9000210c:	24006010 	.word	0x24006010

90002110 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002110:	b672      	cpsid	i
        while (1)
90002112:	e7fe      	b.n	90002112 <HAL_JPEG_ErrorCallback+0x2>

90002114 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002114:	4b01      	ldr	r3, [pc, #4]	@ (9000211c <HAL_JPEG_DecodeCpltCallback+0x8>)
90002116:	2201      	movs	r2, #1
90002118:	601a      	str	r2, [r3, #0]
    }
9000211a:	4770      	bx	lr
9000211c:	24006014 	.word	0x24006014

90002120 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002120:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002122:	4f1e      	ldr	r7, [pc, #120]	@ (9000219c <DMA2D_CopyBuffer+0x7c>)
90002124:	6903      	ldr	r3, [r0, #16]
90002126:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
90002128:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000212a:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
9000212e:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002130:	4e1b      	ldr	r6, [pc, #108]	@ (900021a0 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002132:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
90002136:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000213a:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
9000213e:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002142:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002144:	bf18      	it	ne
90002146:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000214a:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000214c:	6939      	ldr	r1, [r7, #16]
9000214e:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002152:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002156:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000215a:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000215c:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000215e:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002160:	7e81      	ldrb	r1, [r0, #26]
90002162:	b1b9      	cbz	r1, 90002194 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002164:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
90002166:	f1c1 0110 	rsb	r1, r1, #16
9000216a:	4321      	orrs	r1, r4
9000216c:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000216e:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002170:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002174:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002178:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000217a:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000217e:	4809      	ldr	r0, [pc, #36]	@ (900021a4 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002180:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002182:	4b07      	ldr	r3, [pc, #28]	@ (900021a0 <DMA2D_CopyBuffer+0x80>)
90002184:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
90002186:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002188:	4a07      	ldr	r2, [pc, #28]	@ (900021a8 <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000218a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000218c:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000218e:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002190:	6018      	str	r0, [r3, #0]
}
90002192:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002194:	f044 0410 	orr.w	r4, r4, #16
90002198:	6474      	str	r4, [r6, #68]	@ 0x44
9000219a:	e7e8      	b.n	9000216e <DMA2D_CopyBuffer+0x4e>
9000219c:	24005dac 	.word	0x24005dac
900021a0:	52001000 	.word	0x52001000
900021a4:	00012301 	.word	0x00012301
900021a8:	ff09000b 	.word	0xff09000b

900021ac <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021ac:	6902      	ldr	r2, [r0, #16]
{
900021ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021b2:	4605      	mov	r5, r0
900021b4:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021b6:	2a00      	cmp	r2, #0
900021b8:	d165      	bne.n	90002286 <DMA2D_CropBuffer+0xda>
900021ba:	4b35      	ldr	r3, [pc, #212]	@ (90002290 <DMA2D_CropBuffer+0xe4>)
900021bc:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021c0:	f1cc 0010 	rsb	r0, ip, #16
900021c4:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021c6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021c8:	3901      	subs	r1, #1
900021ca:	428a      	cmp	r2, r1
900021cc:	d102      	bne.n	900021d4 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021ce:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021d0:	1a41      	subs	r1, r0, r1
900021d2:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021d4:	7e6e      	ldrb	r6, [r5, #25]
900021d6:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021d8:	2e00      	cmp	r6, #0
900021da:	d051      	beq.n	90002280 <DMA2D_CropBuffer+0xd4>
900021dc:	f1c7 0110 	rsb	r1, r7, #16
900021e0:	46b8      	mov	r8, r7
900021e2:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021e4:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021e8:	f1be 0f00 	cmp.w	lr, #0
900021ec:	d002      	beq.n	900021f4 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021ee:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021f0:	1b09      	subs	r1, r1, r4
900021f2:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021f4:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021fa:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021fe:	4413      	add	r3, r2
    job.MCU_drawn++;
90002200:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002202:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
90002206:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002208:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
9000220c:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002210:	0052      	lsls	r2, r2, #1
90002212:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002216:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000221a:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000221e:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002220:	b107      	cbz	r7, 90002224 <DMA2D_CropBuffer+0x78>
90002222:	b90e      	cbnz	r6, 90002228 <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002224:	2300      	movs	r3, #0
90002226:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002228:	4b1a      	ldr	r3, [pc, #104]	@ (90002294 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000222a:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000222c:	4f1a      	ldr	r7, [pc, #104]	@ (90002298 <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000222e:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002230:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002232:	4a1a      	ldr	r2, [pc, #104]	@ (9000229c <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002234:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002236:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000223a:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
9000223c:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000223e:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002242:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002246:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002248:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000224a:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
9000224e:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002250:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002252:	6803      	ldr	r3, [r0, #0]
90002254:	9604      	str	r6, [sp, #16]
90002256:	685b      	ldr	r3, [r3, #4]
90002258:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000225a:	4b11      	ldr	r3, [pc, #68]	@ (900022a0 <DMA2D_CropBuffer+0xf4>)
9000225c:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225e:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002260:	4810      	ldr	r0, [pc, #64]	@ (900022a4 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002262:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002264:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002268:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000226a:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000226c:	490e      	ldr	r1, [pc, #56]	@ (900022a8 <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
9000226e:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002270:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002272:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002274:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002276:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002278:	6019      	str	r1, [r3, #0]
}
9000227a:	b00a      	add	sp, #40	@ 0x28
9000227c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002280:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002282:	46b0      	mov	r8, r6
90002284:	e7ae      	b.n	900021e4 <DMA2D_CropBuffer+0x38>
90002286:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002288:	f04f 0c00 	mov.w	ip, #0
9000228c:	4b00      	ldr	r3, [pc, #0]	@ (90002290 <DMA2D_CropBuffer+0xe4>)
9000228e:	e79a      	b.n	900021c6 <DMA2D_CropBuffer+0x1a>
90002290:	24005dac 	.word	0x24005dac
90002294:	01e00010 	.word	0x01e00010
90002298:	24005dfc 	.word	0x24005dfc
9000229c:	24006008 	.word	0x24006008
900022a0:	52001000 	.word	0x52001000
900022a4:	ff09000b 	.word	0xff09000b
900022a8:	00012301 	.word	0x00012301

900022ac <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022ac:	4b0d      	ldr	r3, [pc, #52]	@ (900022e4 <DMA2D_ExternalJobCompleted+0x38>)
900022ae:	6902      	ldr	r2, [r0, #16]
900022b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022b2:	429a      	cmp	r2, r3
900022b4:	d000      	beq.n	900022b8 <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022b6:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022b8:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ba:	4b0b      	ldr	r3, [pc, #44]	@ (900022e8 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022bc:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022be:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022c0:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022c2:	3101      	adds	r1, #1
        job.DoCropping = false;
900022c4:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022c6:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022c8:	6819      	ldr	r1, [r3, #0]
900022ca:	2901      	cmp	r1, #1
900022cc:	d900      	bls.n	900022d0 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022ce:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022d0:	7e83      	ldrb	r3, [r0, #26]
900022d2:	b113      	cbz	r3, 900022da <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022d4:	4b05      	ldr	r3, [pc, #20]	@ (900022ec <DMA2D_ExternalJobCompleted+0x40>)
900022d6:	2201      	movs	r2, #1
900022d8:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022da:	4b05      	ldr	r3, [pc, #20]	@ (900022f0 <DMA2D_ExternalJobCompleted+0x44>)
900022dc:	6818      	ldr	r0, [r3, #0]
900022de:	f00b beab 	b.w	9000e038 <osSemaphoreRelease>
900022e2:	bf00      	nop
900022e4:	24005dac 	.word	0x24005dac
900022e8:	24005df0 	.word	0x24005df0
900022ec:	24005dec 	.word	0x24005dec
900022f0:	24005df4 	.word	0x24005df4

900022f4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022f4:	2101      	movs	r1, #1
900022f6:	2200      	movs	r2, #0
{
900022f8:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022fa:	4608      	mov	r0, r1
900022fc:	f00b fe14 	bl	9000df28 <osSemaphoreNew>
90002300:	4b0b      	ldr	r3, [pc, #44]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002302:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002304:	b140      	cbz	r0, 90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90002306:	2200      	movs	r2, #0
90002308:	2104      	movs	r1, #4
9000230a:	2001      	movs	r0, #1
9000230c:	f00b fed2 	bl	9000e0b4 <osMessageQueueNew>
90002310:	4b08      	ldr	r3, [pc, #32]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002312:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002314:	b130      	cbz	r0, 90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90002316:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002318:	4b07      	ldr	r3, [pc, #28]	@ (90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000231a:	2128      	movs	r1, #40	@ 0x28
9000231c:	4a07      	ldr	r2, [pc, #28]	@ (9000233c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000231e:	4808      	ldr	r0, [pc, #32]	@ (90002340 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002320:	f027 fd7e 	bl	90029e20 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002324:	4b07      	ldr	r3, [pc, #28]	@ (90002344 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90002326:	212c      	movs	r1, #44	@ 0x2c
90002328:	4a04      	ldr	r2, [pc, #16]	@ (9000233c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000232a:	4805      	ldr	r0, [pc, #20]	@ (90002340 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000232c:	f027 fd78 	bl	90029e20 <__assert_func>
90002330:	2400602c 	.word	0x2400602c
90002334:	24006028 	.word	0x24006028
90002338:	9002b3fc 	.word	0x9002b3fc
9000233c:	9002b448 	.word	0x9002b448
90002340:	9002b478 	.word	0x9002b478
90002344:	9002b4c4 	.word	0x9002b4c4

90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002348:	4b02      	ldr	r3, [pc, #8]	@ (90002354 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000234a:	f04f 31ff 	mov.w	r1, #4294967295
9000234e:	6818      	ldr	r0, [r3, #0]
90002350:	f00b be40 	b.w	9000dfd4 <osSemaphoreAcquire>
90002354:	2400602c 	.word	0x2400602c

90002358 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002358:	4b01      	ldr	r3, [pc, #4]	@ (90002360 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000235a:	6818      	ldr	r0, [r3, #0]
9000235c:	f00b be6c 	b.w	9000e038 <osSemaphoreRelease>
90002360:	2400602c 	.word	0x2400602c

90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002364:	4b02      	ldr	r3, [pc, #8]	@ (90002370 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002366:	2100      	movs	r1, #0
90002368:	6818      	ldr	r0, [r3, #0]
9000236a:	f00b be33 	b.w	9000dfd4 <osSemaphoreAcquire>
9000236e:	bf00      	nop
90002370:	2400602c 	.word	0x2400602c

90002374 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002374:	4b01      	ldr	r3, [pc, #4]	@ (9000237c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002376:	6818      	ldr	r0, [r3, #0]
90002378:	f00b be5e 	b.w	9000e038 <osSemaphoreRelease>
9000237c:	2400602c 	.word	0x2400602c

90002380 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002380:	4803      	ldr	r0, [pc, #12]	@ (90002390 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002382:	2300      	movs	r3, #0
90002384:	4903      	ldr	r1, [pc, #12]	@ (90002394 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90002386:	461a      	mov	r2, r3
90002388:	6800      	ldr	r0, [r0, #0]
9000238a:	f00b becf 	b.w	9000e12c <osMessageQueuePut>
9000238e:	bf00      	nop
90002390:	24006028 	.word	0x24006028
90002394:	2400003c 	.word	0x2400003c

90002398 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90002398:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000239a:	2300      	movs	r3, #0
{
9000239c:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000239e:	4c07      	ldr	r4, [pc, #28]	@ (900023bc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023a0:	a901      	add	r1, sp, #4
900023a2:	461a      	mov	r2, r3
900023a4:	6820      	ldr	r0, [r4, #0]
900023a6:	f00b fefd 	bl	9000e1a4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023aa:	f04f 33ff 	mov.w	r3, #4294967295
900023ae:	2200      	movs	r2, #0
900023b0:	a901      	add	r1, sp, #4
900023b2:	6820      	ldr	r0, [r4, #0]
900023b4:	f00b fef6 	bl	9000e1a4 <osMessageQueueGet>
}
900023b8:	b002      	add	sp, #8
900023ba:	bd10      	pop	{r4, pc}
900023bc:	24006028 	.word	0x24006028

900023c0 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023c0:	6803      	ldr	r3, [r0, #0]
900023c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023c4:	4718      	bx	r3
900023c6:	bf00      	nop

900023c8 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023c8:	2001      	movs	r0, #1
900023ca:	4770      	bx	lr

900023cc <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023cc:	e7fe      	b.n	900023cc <DMA2D_XferErrorCallback>
900023ce:	bf00      	nop

900023d0 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023d0:	4905      	ldr	r1, [pc, #20]	@ (900023e8 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023d2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023d6:	4b05      	ldr	r3, [pc, #20]	@ (900023ec <_ZN8STM32DMAD1Ev+0x1c>)
900023d8:	6001      	str	r1, [r0, #0]
900023da:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023e2:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023e6:	4770      	bx	lr
900023e8:	9002cbc8 	.word	0x9002cbc8
900023ec:	e000e100 	.word	0xe000e100

900023f0 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023f0:	4b11      	ldr	r3, [pc, #68]	@ (90002438 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023f2:	4912      	ldr	r1, [pc, #72]	@ (9000243c <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023f4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023f8:	4811      	ldr	r0, [pc, #68]	@ (90002440 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023fa:	f042 0210 	orr.w	r2, r2, #16
{
900023fe:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002400:	4c10      	ldr	r4, [pc, #64]	@ (90002444 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002402:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002404:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002408:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000240c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002410:	f002 0210 	and.w	r2, r2, #16
90002414:	9201      	str	r2, [sp, #4]
90002416:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90002418:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000241a:	f042 0210 	orr.w	r2, r2, #16
9000241e:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002420:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002422:	f022 0210 	bic.w	r2, r2, #16
90002426:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002428:	4b07      	ldr	r3, [pc, #28]	@ (90002448 <_ZN8STM32DMA10initializeEv+0x58>)
9000242a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000242e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002430:	b003      	add	sp, #12
90002432:	f85d 4b04 	ldr.w	r4, [sp], #4
90002436:	4770      	bx	lr
90002438:	58024400 	.word	0x58024400
9000243c:	24007610 	.word	0x24007610
90002440:	900023cd 	.word	0x900023cd
90002444:	90002815 	.word	0x90002815
90002448:	e000e100 	.word	0xe000e100

9000244c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000244c:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002450:	4770      	bx	lr
90002452:	bf00      	nop

90002454 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002454:	4909      	ldr	r1, [pc, #36]	@ (9000247c <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002456:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000245a:	4b09      	ldr	r3, [pc, #36]	@ (90002480 <_ZN8STM32DMAD0Ev+0x2c>)
9000245c:	b510      	push	{r4, lr}
9000245e:	6001      	str	r1, [r0, #0]
90002460:	4604      	mov	r4, r0
90002462:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002466:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000246a:	f3bf 8f6f 	isb	sy
}
9000246e:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002472:	f027 f95d 	bl	90029730 <_ZdlPvj>
90002476:	4620      	mov	r0, r4
90002478:	bd10      	pop	{r4, pc}
9000247a:	bf00      	nop
9000247c:	9002cbc8 	.word	0x9002cbc8
90002480:	e000e100 	.word	0xe000e100

90002484 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002484:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
90002488:	b510      	push	{r4, lr}
9000248a:	4604      	mov	r4, r0
        if (!started_by_external_job)
9000248c:	b963      	cbnz	r3, 900024a8 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
9000248e:	6803      	ldr	r3, [r0, #0]
90002490:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002492:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002494:	4924      	ldr	r1, [pc, #144]	@ (90002528 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
90002496:	4a25      	ldr	r2, [pc, #148]	@ (9000252c <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002498:	680b      	ldr	r3, [r1, #0]
9000249a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000249e:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024a2:	2b01      	cmp	r3, #1
900024a4:	d015      	beq.n	900024d2 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024a6:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024a8:	7a03      	ldrb	r3, [r0, #8]
900024aa:	2b00      	cmp	r3, #0
900024ac:	d12b      	bne.n	90002506 <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024ae:	6860      	ldr	r0, [r4, #4]
900024b0:	6803      	ldr	r3, [r0, #0]
900024b2:	681b      	ldr	r3, [r3, #0]
900024b4:	4798      	blx	r3
900024b6:	4603      	mov	r3, r0
900024b8:	2800      	cmp	r0, #0
900024ba:	d1f4      	bne.n	900024a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024bc:	7a62      	ldrb	r2, [r4, #9]
900024be:	2a00      	cmp	r2, #0
900024c0:	d0f1      	beq.n	900024a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024c2:	6822      	ldr	r2, [r4, #0]
900024c4:	4620      	mov	r0, r4
                started_by_external_job = false;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ca:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024d0:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024d2:	4817      	ldr	r0, [pc, #92]	@ (90002530 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024d4:	6800      	ldr	r0, [r0, #0]
900024d6:	2800      	cmp	r0, #0
900024d8:	d1e5      	bne.n	900024a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024da:	7a20      	ldrb	r0, [r4, #8]
900024dc:	2800      	cmp	r0, #0
900024de:	d1e2      	bne.n	900024a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024e2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ea:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ec:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024f0:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f2:	6808      	ldr	r0, [r1, #0]
900024f4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024f8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024fc:	b17b      	cbz	r3, 9000251e <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002502:	f7ff be53 	b.w	900021ac <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	4b08      	ldr	r3, [pc, #32]	@ (90002528 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
90002508:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000250a:	4808      	ldr	r0, [pc, #32]	@ (9000252c <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000250c:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
9000250e:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002510:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002514:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90002518:	f7ff fec8 	bl	900022ac <DMA2D_ExternalJobCompleted>
9000251c:	e7c7      	b.n	900024ae <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
9000251e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002522:	f7ff bdfd 	b.w	90002120 <DMA2D_CopyBuffer>
90002526:	bf00      	nop
90002528:	24005df0 	.word	0x24005df0
9000252c:	24000004 	.word	0x24000004
90002530:	24005dec 	.word	0x24005dec

90002534 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002534:	b570      	push	{r4, r5, r6, lr}
    switch (format)
90002536:	7f8b      	ldrb	r3, [r1, #30]
90002538:	2b0a      	cmp	r3, #10
9000253a:	d83d      	bhi.n	900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
9000253c:	e8df f003 	tbb	[pc, r3]
90002540:	3c2a063a 	.word	0x3c2a063a
90002544:	063c3c3c 	.word	0x063c3c3c
90002548:	0606      	.short	0x0606
9000254a:	06          	.byte	0x06
9000254b:	00          	.byte	0x00
9000254c:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000254e:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002552:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002554:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002556:	4b1b      	ldr	r3, [pc, #108]	@ (900025c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002558:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000255c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000255e:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002562:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002564:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002566:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002568:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000256a:	680e      	ldr	r6, [r1, #0]
        return color;
9000256c:	68c8      	ldr	r0, [r1, #12]
9000256e:	2e08      	cmp	r6, #8
90002570:	d012      	beq.n	90002598 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002572:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002574:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002576:	0941      	lsrs	r1, r0, #5
90002578:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9000257c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002580:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002582:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
90002586:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002588:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000258a:	490f      	ldr	r1, [pc, #60]	@ (900025c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000258c:	4302      	orrs	r2, r0
9000258e:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002590:	6019      	str	r1, [r3, #0]
    }
}
90002592:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002594:	2400      	movs	r4, #0
90002596:	e7da      	b.n	9000254e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002598:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000259a:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000259c:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000259e:	4a0b      	ldr	r2, [pc, #44]	@ (900025cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025a0:	7f09      	ldrb	r1, [r1, #28]
900025a2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025a6:	490a      	ldr	r1, [pc, #40]	@ (900025d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025a8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025aa:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025ac:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025ae:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025b0:	6019      	str	r1, [r3, #0]
}
900025b2:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025b4:	2402      	movs	r4, #2
900025b6:	e7ca      	b.n	9000254e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025b8:	4b06      	ldr	r3, [pc, #24]	@ (900025d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025ba:	2191      	movs	r1, #145	@ 0x91
900025bc:	4a06      	ldr	r2, [pc, #24]	@ (900025d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025be:	4807      	ldr	r0, [pc, #28]	@ (900025dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025c0:	f027 fc2e 	bl	90029e20 <__assert_func>
900025c4:	52001000 	.word	0x52001000
900025c8:	00032301 	.word	0x00032301
900025cc:	00010009 	.word	0x00010009
900025d0:	00022301 	.word	0x00022301
900025d4:	9002b508 	.word	0x9002b508
900025d8:	9002b524 	.word	0x9002b524
900025dc:	9002b570 	.word	0x9002b570

900025e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025e2:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025e6:	f1be 0f0b 	cmp.w	lr, #11
900025ea:	f200 80aa 	bhi.w	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
900025ee:	e8df f00e 	tbb	[pc, lr]
900025f2:	585d      	.short	0x585d
900025f4:	a8a8a846 	.word	0xa8a8a846
900025f8:	060606a8 	.word	0x060606a8
900025fc:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025fe:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002600:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002604:	f1bc 0f0b 	cmp.w	ip, #11
90002608:	f200 809b 	bhi.w	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
9000260c:	e8df f00c 	tbb	[pc, ip]
90002610:	990d4b50 	.word	0x990d4b50
90002614:	06999999 	.word	0x06999999
90002618:	06060606 	.word	0x06060606
    switch (format)
9000261c:	f1bc 0f0b 	cmp.w	ip, #11
90002620:	f000 8095 	beq.w	9000274e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002624:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
90002626:	2701      	movs	r7, #1
90002628:	e001      	b.n	9000262e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000262a:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
9000262c:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000262e:	8a8b      	ldrh	r3, [r1, #20]
90002630:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002632:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002634:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002636:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002638:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000263a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000263e:	4b4a      	ldr	r3, [pc, #296]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002640:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002642:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002644:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002646:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002648:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000264a:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000264c:	6908      	ldr	r0, [r1, #16]
9000264e:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002650:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002652:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
90002656:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002658:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
9000265c:	d03c      	beq.n	900026d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
9000265e:	d810      	bhi.n	90002682 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002660:	2d20      	cmp	r5, #32
90002662:	d036      	beq.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002664:	2d40      	cmp	r5, #64	@ 0x40
90002666:	d034      	beq.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002668:	2d04      	cmp	r5, #4
9000266a:	d124      	bne.n	900026b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000266c:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000266e:	493f      	ldr	r1, [pc, #252]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002670:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
90002674:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002676:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002678:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000267a:	6019      	str	r1, [r3, #0]
}
9000267c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000267e:	2600      	movs	r6, #0
90002680:	e7be      	b.n	90002600 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002682:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90002686:	d022      	beq.n	900026ce <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
90002688:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
9000268c:	d113      	bne.n	900026b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000268e:	4d38      	ldr	r5, [pc, #224]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
90002690:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002692:	4a36      	ldr	r2, [pc, #216]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002694:	61dd      	str	r5, [r3, #28]
90002696:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002698:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000269a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000269c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000269e:	601a      	str	r2, [r3, #0]
}
900026a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026a2:	2601      	movs	r6, #1
900026a4:	e7ac      	b.n	90002600 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026a6:	2401      	movs	r4, #1
900026a8:	4627      	mov	r7, r4
900026aa:	e7c0      	b.n	9000262e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900026ac:	2602      	movs	r6, #2
900026ae:	e7a7      	b.n	90002600 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
900026b0:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026b2:	4627      	mov	r7, r4
900026b4:	e7bb      	b.n	9000262e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b6:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
900026b8:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ba:	4b2b      	ldr	r3, [pc, #172]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026bc:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026c0:	bf14      	ite	ne
900026c2:	4a2c      	ldrne	r2, [pc, #176]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026c4:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026c8:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026ca:	601a      	str	r2, [r3, #0]
}
900026cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ce:	4d2a      	ldr	r5, [pc, #168]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026d0:	e7de      	b.n	90002690 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d2:	4332      	orrs	r2, r6
900026d4:	4b24      	ldr	r3, [pc, #144]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026d6:	e7ca      	b.n	9000266e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026d8:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026da:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026dc:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026de:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026e2:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026e4:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
900026e6:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026e8:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026ea:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026ec:	b1e2      	cbz	r2, 90002728 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
900026ee:	2a01      	cmp	r2, #1
900026f0:	d133      	bne.n	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f2:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
900026f4:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f6:	8849      	ldrh	r1, [r1, #2]
900026f8:	4a20      	ldr	r2, [pc, #128]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
900026fa:	bf18      	it	ne
900026fc:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026fe:	3901      	subs	r1, #1
90002700:	4002      	ands	r2, r0
90002702:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002706:	f042 0210 	orr.w	r2, r2, #16
9000270a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
9000270c:	4a16      	ldr	r2, [pc, #88]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000270e:	69d3      	ldr	r3, [r2, #28]
90002710:	f043 0320 	orr.w	r3, r3, #32
90002714:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90002716:	69d3      	ldr	r3, [r2, #28]
90002718:	069b      	lsls	r3, r3, #26
9000271a:	d4fc      	bmi.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
9000271c:	2310      	movs	r3, #16
9000271e:	6093      	str	r3, [r2, #8]
            if (blend)
90002720:	b167      	cbz	r7, 9000273c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002722:	4b12      	ldr	r3, [pc, #72]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002724:	6013      	str	r3, [r2, #0]
}
90002726:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002728:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
9000272a:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000272c:	8849      	ldrh	r1, [r1, #2]
9000272e:	4a13      	ldr	r2, [pc, #76]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002730:	3901      	subs	r1, #1
90002732:	4002      	ands	r2, r0
90002734:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002738:	61da      	str	r2, [r3, #28]
                break;
9000273a:	e7e7      	b.n	9000270c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000273c:	4b0d      	ldr	r3, [pc, #52]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
9000273e:	6013      	str	r3, [r2, #0]
}
90002740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90002742:	4b0f      	ldr	r3, [pc, #60]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002744:	2170      	movs	r1, #112	@ 0x70
90002746:	4a0f      	ldr	r2, [pc, #60]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002748:	480f      	ldr	r0, [pc, #60]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000274a:	f027 fb69 	bl	90029e20 <__assert_func>
        assert(0 && "Unsupported Format!");
9000274e:	4b0c      	ldr	r3, [pc, #48]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002750:	2191      	movs	r1, #145	@ 0x91
90002752:	4a0e      	ldr	r2, [pc, #56]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002754:	480c      	ldr	r0, [pc, #48]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002756:	f027 fb63 	bl	90029e20 <__assert_func>
                assert(0 && "Unsupported format");
9000275a:	4b0d      	ldr	r3, [pc, #52]	@ (90002790 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000275c:	f240 111b 	movw	r1, #283	@ 0x11b
90002760:	4a0c      	ldr	r2, [pc, #48]	@ (90002794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002762:	4809      	ldr	r0, [pc, #36]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002764:	f027 fb5c 	bl	90029e20 <__assert_func>
90002768:	52001000 	.word	0x52001000
9000276c:	00022301 	.word	0x00022301
90002770:	00020009 	.word	0x00020009
90002774:	00012301 	.word	0x00012301
90002778:	0002000a 	.word	0x0002000a
9000277c:	ffff00ef 	.word	0xffff00ef
90002780:	9002b508 	.word	0x9002b508
90002784:	9002b5bc 	.word	0x9002b5bc
90002788:	9002b570 	.word	0x9002b570
9000278c:	9002b524 	.word	0x9002b524
90002790:	9002b608 	.word	0x9002b608
90002794:	9002b624 	.word	0x9002b624

90002798 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002798:	b510      	push	{r4, lr}
9000279a:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
9000279c:	6840      	ldr	r0, [r0, #4]
9000279e:	6803      	ldr	r3, [r0, #0]
900027a0:	681b      	ldr	r3, [r3, #0]
900027a2:	4798      	blx	r3
900027a4:	b958      	cbnz	r0, 900027be <_ZN8STM32DMA5startEv+0x26>
900027a6:	7a63      	ldrb	r3, [r4, #9]
900027a8:	b14b      	cbz	r3, 900027be <_ZN8STM32DMA5startEv+0x26>
900027aa:	7a23      	ldrb	r3, [r4, #8]
900027ac:	bb3b      	cbnz	r3, 900027fe <_ZN8STM32DMA5startEv+0x66>
            execute();
900027ae:	6822      	ldr	r2, [r4, #0]
900027b0:	4620      	mov	r0, r4
            started_by_external_job = false;
900027b2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027b6:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027bc:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027be:	4913      	ldr	r1, [pc, #76]	@ (9000280c <_ZN8STM32DMA5startEv+0x74>)
900027c0:	4a13      	ldr	r2, [pc, #76]	@ (90002810 <_ZN8STM32DMA5startEv+0x78>)
900027c2:	680b      	ldr	r3, [r1, #0]
900027c4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027c8:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027cc:	2b01      	cmp	r3, #1
900027ce:	d000      	beq.n	900027d2 <_ZN8STM32DMA5startEv+0x3a>
    }
900027d0:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027d2:	7a20      	ldrb	r0, [r4, #8]
900027d4:	2800      	cmp	r0, #0
900027d6:	d1fb      	bne.n	900027d0 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d8:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027da:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027de:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027e2:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027e4:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027e8:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027ea:	6808      	ldr	r0, [r1, #0]
900027ec:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027f0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027f4:	b133      	cbz	r3, 90002804 <_ZN8STM32DMA5startEv+0x6c>
    }
900027f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027fa:	f7ff bcd7 	b.w	900021ac <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027fe:	4b03      	ldr	r3, [pc, #12]	@ (9000280c <_ZN8STM32DMA5startEv+0x74>)
90002800:	681b      	ldr	r3, [r3, #0]
    }
90002802:	bd10      	pop	{r4, pc}
90002804:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002808:	f7ff bc8a 	b.w	90002120 <DMA2D_CopyBuffer>
9000280c:	24005df0 	.word	0x24005df0
90002810:	24000004 	.word	0x24000004

90002814 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90002814:	4b2c      	ldr	r3, [pc, #176]	@ (900028c8 <DMA2D_XferCpltCallback+0xb4>)
90002816:	492d      	ldr	r1, [pc, #180]	@ (900028cc <DMA2D_XferCpltCallback+0xb8>)
90002818:	681b      	ldr	r3, [r3, #0]
    {
9000281a:	b510      	push	{r4, lr}
9000281c:	685c      	ldr	r4, [r3, #4]
9000281e:	6823      	ldr	r3, [r4, #0]
90002820:	695a      	ldr	r2, [r3, #20]
90002822:	428a      	cmp	r2, r1
90002824:	d122      	bne.n	9000286c <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
90002826:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000282a:	b192      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
9000282c:	7a23      	ldrb	r3, [r4, #8]
9000282e:	2b00      	cmp	r3, #0
90002830:	d13a      	bne.n	900028a8 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
90002832:	6860      	ldr	r0, [r4, #4]
90002834:	6803      	ldr	r3, [r0, #0]
90002836:	681b      	ldr	r3, [r3, #0]
90002838:	4798      	blx	r3
9000283a:	4603      	mov	r3, r0
9000283c:	b9a8      	cbnz	r0, 9000286a <DMA2D_XferCpltCallback+0x56>
9000283e:	7a62      	ldrb	r2, [r4, #9]
90002840:	b19a      	cbz	r2, 9000286a <DMA2D_XferCpltCallback+0x56>
                execute();
90002842:	6822      	ldr	r2, [r4, #0]
90002844:	4620      	mov	r0, r4
                started_by_external_job = false;
90002846:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000284a:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
9000284c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002850:	4718      	bx	r3
            executeCompleted();
90002852:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002854:	4620      	mov	r0, r4
90002856:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002858:	491d      	ldr	r1, [pc, #116]	@ (900028d0 <DMA2D_XferCpltCallback+0xbc>)
9000285a:	4a1e      	ldr	r2, [pc, #120]	@ (900028d4 <DMA2D_XferCpltCallback+0xc0>)
9000285c:	680b      	ldr	r3, [r1, #0]
9000285e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002862:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002866:	2b01      	cmp	r3, #1
90002868:	d004      	beq.n	90002874 <DMA2D_XferCpltCallback+0x60>
9000286a:	bd10      	pop	{r4, pc}
9000286c:	4620      	mov	r0, r4
9000286e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002872:	4710      	bx	r2
90002874:	4818      	ldr	r0, [pc, #96]	@ (900028d8 <DMA2D_XferCpltCallback+0xc4>)
90002876:	6800      	ldr	r0, [r0, #0]
90002878:	2800      	cmp	r0, #0
9000287a:	d1f6      	bne.n	9000286a <DMA2D_XferCpltCallback+0x56>
9000287c:	7a20      	ldrb	r0, [r4, #8]
9000287e:	2800      	cmp	r0, #0
90002880:	d1f3      	bne.n	9000286a <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002882:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002884:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002888:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
9000288c:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000288e:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002892:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	6808      	ldr	r0, [r1, #0]
90002896:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000289a:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000289e:	b17b      	cbz	r3, 900028c0 <DMA2D_XferCpltCallback+0xac>
900028a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a4:	f7ff bc82 	b.w	900021ac <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a8:	4b09      	ldr	r3, [pc, #36]	@ (900028d0 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028aa:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	4809      	ldr	r0, [pc, #36]	@ (900028d4 <DMA2D_XferCpltCallback+0xc0>)
900028ae:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028b0:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028b2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028b6:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028ba:	f7ff fcf7 	bl	900022ac <DMA2D_ExternalJobCompleted>
900028be:	e7b8      	b.n	90002832 <DMA2D_XferCpltCallback+0x1e>
900028c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028c4:	f7ff bc2c 	b.w	90002120 <DMA2D_CopyBuffer>
900028c8:	24021844 	.word	0x24021844
900028cc:	90002485 	.word	0x90002485
900028d0:	24005df0 	.word	0x24005df0
900028d4:	24000004 	.word	0x24000004
900028d8:	24005dec 	.word	0x24005dec

900028dc <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028dc:	b570      	push	{r4, r5, r6, lr}
900028de:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028e0:	4b0b      	ldr	r3, [pc, #44]	@ (90002910 <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028e2:	2500      	movs	r5, #0
900028e4:	300c      	adds	r0, #12
900028e6:	4634      	mov	r4, r6
900028e8:	2260      	movs	r2, #96	@ 0x60
900028ea:	7235      	strb	r5, [r6, #8]
900028ec:	7275      	strb	r5, [r6, #9]
900028ee:	6070      	str	r0, [r6, #4]
900028f0:	f844 3b20 	str.w	r3, [r4], #32
900028f4:	4621      	mov	r1, r4
900028f6:	f00f fb6d 	bl	90011fd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028fa:	4621      	mov	r1, r4
900028fc:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002900:	60cd      	str	r5, [r1, #12]
90002902:	3124      	adds	r1, #36	@ 0x24
90002904:	4299      	cmp	r1, r3
90002906:	d1fb      	bne.n	90002900 <_ZN8STM32DMAC1Ev+0x24>
}
90002908:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
9000290a:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
9000290e:	bd70      	pop	{r4, r5, r6, pc}
90002910:	9002cbc8 	.word	0x9002cbc8

90002914 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002914:	4a03      	ldr	r2, [pc, #12]	@ (90002924 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90002916:	6813      	ldr	r3, [r2, #0]
90002918:	07db      	lsls	r3, r3, #31
9000291a:	d4fc      	bmi.n	90002916 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000291c:	2323      	movs	r3, #35	@ 0x23
9000291e:	6093      	str	r3, [r2, #8]
}
90002920:	4770      	bx	lr
90002922:	bf00      	nop
90002924:	52001000 	.word	0x52001000

90002928 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002928:	4a0b      	ldr	r2, [pc, #44]	@ (90002958 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
9000292a:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
9000292c:	03db      	lsls	r3, r3, #15
9000292e:	d501      	bpl.n	90002934 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002930:	2900      	cmp	r1, #0
90002932:	dc00      	bgt.n	90002936 <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002934:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90002936:	f000 031f 	and.w	r3, r0, #31
9000293a:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
9000293c:	f3bf 8f4f 	dsb	sy
90002940:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90002942:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90002946:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002948:	1a0b      	subs	r3, r1, r0
9000294a:	2b00      	cmp	r3, #0
9000294c:	dcf9      	bgt.n	90002942 <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
9000294e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002952:	f3bf 8f6f 	isb	sy
90002956:	4770      	bx	lr
90002958:	e000ed00 	.word	0xe000ed00

9000295c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
9000295c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000295e:	4c11      	ldr	r4, [pc, #68]	@ (900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002960:	6825      	ldr	r5, [r4, #0]
90002962:	07ed      	lsls	r5, r5, #31
90002964:	d4fc      	bmi.n	90002960 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002966:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002968:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000296a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000296c:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000296e:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002972:	f04f 0502 	mov.w	r5, #2
90002976:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002978:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000297a:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
9000297c:	d00b      	beq.n	90002996 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000297e:	490a      	ldr	r1, [pc, #40]	@ (900029a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002980:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002982:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002986:	4909      	ldr	r1, [pc, #36]	@ (900029ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002988:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
9000298a:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
9000298c:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
9000298e:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002990:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90002992:	bc30      	pop	{r4, r5}
90002994:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002996:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002998:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000299a:	4b05      	ldr	r3, [pc, #20]	@ (900029b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
9000299c:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000299e:	6023      	str	r3, [r4, #0]
}
900029a0:	bc30      	pop	{r4, r5}
900029a2:	4770      	bx	lr
900029a4:	52001000 	.word	0x52001000
900029a8:	00010009 	.word	0x00010009
900029ac:	00020001 	.word	0x00020001
900029b0:	00030001 	.word	0x00030001

900029b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029b4:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029b6:	4c10      	ldr	r4, [pc, #64]	@ (900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029b8:	6825      	ldr	r5, [r4, #0]
900029ba:	07ed      	lsls	r5, r5, #31
900029bc:	d4fc      	bmi.n	900029b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029be:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029c0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029c2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029c4:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029c6:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029ca:	f04f 0502 	mov.w	r5, #2
900029ce:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029d0:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029d2:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029d4:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029d6:	d009      	beq.n	900029ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d8:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029da:	4a08      	ldr	r2, [pc, #32]	@ (900029fc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029dc:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029e0:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029e2:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029e4:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029e6:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029e8:	bc30      	pop	{r4, r5}
900029ea:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029ec:	4a04      	ldr	r2, [pc, #16]	@ (90002a00 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ee:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f0:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029f2:	6023      	str	r3, [r4, #0]
}
900029f4:	bc30      	pop	{r4, r5}
900029f6:	4770      	bx	lr
900029f8:	52001000 	.word	0x52001000
900029fc:	00020001 	.word	0x00020001
90002a00:	ff020002 	.word	0xff020002

90002a04 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a04:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a06:	4c0c      	ldr	r4, [pc, #48]	@ (90002a38 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a08:	6825      	ldr	r5, [r4, #0]
90002a0a:	07ed      	lsls	r5, r5, #31
90002a0c:	d4fc      	bmi.n	90002a08 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0e:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a10:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a12:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a14:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a16:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a1a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a1e:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a20:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a22:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a24:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a26:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a28:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a2a:	4b04      	ldr	r3, [pc, #16]	@ (90002a3c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a2c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a2e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a30:	6023      	str	r3, [r4, #0]
}
90002a32:	bc70      	pop	{r4, r5, r6}
90002a34:	4770      	bx	lr
90002a36:	bf00      	nop
90002a38:	52001000 	.word	0x52001000
90002a3c:	00020001 	.word	0x00020001

90002a40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a40:	2001      	movs	r0, #1
90002a42:	4770      	bx	lr

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a44:	200c      	movs	r0, #12
90002a46:	4770      	bx	lr

90002a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a48:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a4c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a50:	3008      	adds	r0, #8
90002a52:	4770      	bx	lr

90002a54 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a54:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a58:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a5c:	3008      	adds	r0, #8
90002a5e:	4770      	bx	lr

90002a60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a60:	2001      	movs	r0, #1
90002a62:	4770      	bx	lr

90002a64 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a64:	f44f 709c 	mov.w	r0, #312	@ 0x138
90002a68:	4770      	bx	lr
90002a6a:	bf00      	nop

90002a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a6c:	f44f 739c 	mov.w	r3, #312	@ 0x138
90002a70:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a74:	3008      	adds	r0, #8
90002a76:	4770      	bx	lr

90002a78 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a78:	f44f 739c 	mov.w	r3, #312	@ 0x138
90002a7c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a80:	3008      	adds	r0, #8
90002a82:	4770      	bx	lr

90002a84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a84:	2001      	movs	r0, #1
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a88:	2010      	movs	r0, #16
90002a8a:	4770      	bx	lr

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a8c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a90:	3008      	adds	r0, #8
90002a92:	4770      	bx	lr

90002a94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a94:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a98:	3008      	adds	r0, #8
90002a9a:	4770      	bx	lr

90002a9c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90002a9c:	4608      	mov	r0, r1
90002a9e:	f002 b895 	b.w	90004bcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
90002aa2:	bf00      	nop

90002aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002aa4:	4b03      	ldr	r3, [pc, #12]	@ (90002ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aa6:	b510      	push	{r4, lr}
90002aa8:	4604      	mov	r4, r0
90002aaa:	6003      	str	r3, [r0, #0]
90002aac:	f00e f8a1 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ab0:	4620      	mov	r0, r4
90002ab2:	bd10      	pop	{r4, pc}
90002ab4:	9002cc80 	.word	0x9002cc80

90002ab8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ab8:	4b05      	ldr	r3, [pc, #20]	@ (90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002aba:	b510      	push	{r4, lr}
90002abc:	4604      	mov	r4, r0
90002abe:	6003      	str	r3, [r0, #0]
90002ac0:	f00e f897 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac4:	2114      	movs	r1, #20
90002ac6:	4620      	mov	r0, r4
90002ac8:	f026 fe32 	bl	90029730 <_ZdlPvj>
90002acc:	4620      	mov	r0, r4
90002ace:	bd10      	pop	{r4, pc}
90002ad0:	9002cc80 	.word	0x9002cc80

90002ad4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ad4:	4b03      	ldr	r3, [pc, #12]	@ (90002ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ad6:	b510      	push	{r4, lr}
90002ad8:	4604      	mov	r4, r0
90002ada:	6003      	str	r3, [r0, #0]
90002adc:	f00e f889 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ae0:	4620      	mov	r0, r4
90002ae2:	bd10      	pop	{r4, pc}
90002ae4:	9002cc4c 	.word	0x9002cc4c

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ae8:	4b06      	ldr	r3, [pc, #24]	@ (90002b04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00e f87f 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	f44f 71a0 	mov.w	r1, #320	@ 0x140
90002af8:	4620      	mov	r0, r4
90002afa:	f026 fe19 	bl	90029730 <_ZdlPvj>
90002afe:	4620      	mov	r0, r4
90002b00:	bd10      	pop	{r4, pc}
90002b02:	bf00      	nop
90002b04:	9002cc4c 	.word	0x9002cc4c

90002b08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b08:	4b03      	ldr	r3, [pc, #12]	@ (90002b18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b0a:	b510      	push	{r4, lr}
90002b0c:	4604      	mov	r4, r0
90002b0e:	6003      	str	r3, [r0, #0]
90002b10:	f00e f86f 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b14:	4620      	mov	r0, r4
90002b16:	bd10      	pop	{r4, pc}
90002b18:	9002cc18 	.word	0x9002cc18

90002b1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b1c:	4b05      	ldr	r3, [pc, #20]	@ (90002b34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b1e:	b510      	push	{r4, lr}
90002b20:	4604      	mov	r4, r0
90002b22:	6003      	str	r3, [r0, #0]
90002b24:	f00e f865 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b28:	2118      	movs	r1, #24
90002b2a:	4620      	mov	r0, r4
90002b2c:	f026 fe00 	bl	90029730 <_ZdlPvj>
90002b30:	4620      	mov	r0, r4
90002b32:	bd10      	pop	{r4, pc}
90002b34:	9002cc18 	.word	0x9002cc18

90002b38 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b38:	b510      	push	{r4, lr}
90002b3a:	4a0c      	ldr	r2, [pc, #48]	@ (90002b6c <_ZN12FrontendHeapD1Ev+0x34>)
90002b3c:	4604      	mov	r4, r0
90002b3e:	4b0c      	ldr	r3, [pc, #48]	@ (90002b70 <_ZN12FrontendHeapD1Ev+0x38>)
90002b40:	f500 70b6 	add.w	r0, r0, #364	@ 0x16c
90002b44:	6022      	str	r2, [r4, #0]
90002b46:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
90002b4a:	f00e f852 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b4e:	4b09      	ldr	r3, [pc, #36]	@ (90002b74 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b50:	4620      	mov	r0, r4
90002b52:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b56:	f00e f84c 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b5a:	4b07      	ldr	r3, [pc, #28]	@ (90002b78 <_ZN12FrontendHeapD1Ev+0x40>)
90002b5c:	4620      	mov	r0, r4
90002b5e:	f840 3f14 	str.w	r3, [r0, #20]!
90002b62:	f00e f846 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b66:	4620      	mov	r0, r4
90002b68:	bd10      	pop	{r4, pc}
90002b6a:	bf00      	nop
90002b6c:	9002ccb4 	.word	0x9002ccb4
90002b70:	9002cc80 	.word	0x9002cc80
90002b74:	9002cc4c 	.word	0x9002cc4c
90002b78:	9002cc18 	.word	0x9002cc18

90002b7c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b7c:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b7e:	4c0c      	ldr	r4, [pc, #48]	@ (90002bb0 <__tcf_0+0x34>)
90002b80:	4a0c      	ldr	r2, [pc, #48]	@ (90002bb4 <__tcf_0+0x38>)
90002b82:	4b0d      	ldr	r3, [pc, #52]	@ (90002bb8 <__tcf_0+0x3c>)
90002b84:	f504 70b6 	add.w	r0, r4, #364	@ 0x16c
90002b88:	6022      	str	r2, [r4, #0]
90002b8a:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
90002b8e:	f00e f830 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b92:	4b0a      	ldr	r3, [pc, #40]	@ (90002bbc <__tcf_0+0x40>)
90002b94:	4620      	mov	r0, r4
90002b96:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b9a:	f00e f82a 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b9e:	4620      	mov	r0, r4
90002ba0:	4b07      	ldr	r3, [pc, #28]	@ (90002bc0 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002ba2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002ba6:	f840 3f14 	str.w	r3, [r0, #20]!
90002baa:	f00e b822 	b.w	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bae:	bf00      	nop
90002bb0:	24006f18 	.word	0x24006f18
90002bb4:	9002ccb4 	.word	0x9002ccb4
90002bb8:	9002cc80 	.word	0x9002cc80
90002bbc:	9002cc4c 	.word	0x9002cc4c
90002bc0:	9002cc18 	.word	0x9002cc18

90002bc4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bc4:	b510      	push	{r4, lr}
90002bc6:	4a0e      	ldr	r2, [pc, #56]	@ (90002c00 <_ZN12FrontendHeapD0Ev+0x3c>)
90002bc8:	4604      	mov	r4, r0
90002bca:	4b0e      	ldr	r3, [pc, #56]	@ (90002c04 <_ZN12FrontendHeapD0Ev+0x40>)
90002bcc:	f500 70b6 	add.w	r0, r0, #364	@ 0x16c
90002bd0:	6022      	str	r2, [r4, #0]
90002bd2:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
90002bd6:	f00e f80c 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bda:	4b0b      	ldr	r3, [pc, #44]	@ (90002c08 <_ZN12FrontendHeapD0Ev+0x44>)
90002bdc:	4620      	mov	r0, r4
90002bde:	f840 3f2c 	str.w	r3, [r0, #44]!
90002be2:	f00e f806 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be6:	4b09      	ldr	r3, [pc, #36]	@ (90002c0c <_ZN12FrontendHeapD0Ev+0x48>)
90002be8:	4620      	mov	r0, r4
90002bea:	f840 3f14 	str.w	r3, [r0, #20]!
90002bee:	f00e f800 	bl	90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf2:	4620      	mov	r0, r4
90002bf4:	f44f 7138 	mov.w	r1, #736	@ 0x2e0
90002bf8:	f026 fd9a 	bl	90029730 <_ZdlPvj>
90002bfc:	4620      	mov	r0, r4
90002bfe:	bd10      	pop	{r4, pc}
90002c00:	9002ccb4 	.word	0x9002ccb4
90002c04:	9002cc80 	.word	0x9002cc80
90002c08:	9002cc4c 	.word	0x9002cc4c
90002c0c:	9002cc18 	.word	0x9002cc18

90002c10 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c14:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c16:	2400      	movs	r4, #0
90002c18:	f001 fdde 	bl	900047d8 <_ZN14BitmapDatabase11getInstanceEv>
90002c1c:	4605      	mov	r5, r0
90002c1e:	f001 fddf 	bl	900047e0 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c22:	4623      	mov	r3, r4
90002c24:	4601      	mov	r1, r0
90002c26:	4622      	mov	r2, r4
90002c28:	4628      	mov	r0, r5
90002c2a:	9400      	str	r4, [sp, #0]
90002c2c:	f017 fcbe 	bl	9001a5ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c30:	4b29      	ldr	r3, [pc, #164]	@ (90002cd8 <touchgfx_init+0xc8>)
90002c32:	4a2a      	ldr	r2, [pc, #168]	@ (90002cdc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c34:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c36:	4c2a      	ldr	r4, [pc, #168]	@ (90002ce0 <touchgfx_init+0xd0>)
90002c38:	601a      	str	r2, [r3, #0]
90002c3a:	f002 fae5 	bl	90005208 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c3e:	4b29      	ldr	r3, [pc, #164]	@ (90002ce4 <touchgfx_init+0xd4>)
90002c40:	4a29      	ldr	r2, [pc, #164]	@ (90002ce8 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c42:	482a      	ldr	r0, [pc, #168]	@ (90002cec <touchgfx_init+0xdc>)
90002c44:	609a      	str	r2, [r3, #8]
90002c46:	f017 fc19 	bl	9001a47c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c4a:	6823      	ldr	r3, [r4, #0]
90002c4c:	f3bf 8f5b 	dmb	ish
90002c50:	07db      	lsls	r3, r3, #31
90002c52:	d505      	bpl.n	90002c60 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c54:	4826      	ldr	r0, [pc, #152]	@ (90002cf0 <touchgfx_init+0xe0>)
}
90002c56:	b002      	add	sp, #8
90002c58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c5c:	f7fe b950 	b.w	90000f00 <_ZN11TouchGFXHAL10initializeEv>
90002c60:	4620      	mov	r0, r4
90002c62:	f026 fd67 	bl	90029734 <__cxa_guard_acquire>
90002c66:	2800      	cmp	r0, #0
90002c68:	d0f4      	beq.n	90002c54 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c6a:	4d22      	ldr	r5, [pc, #136]	@ (90002cf4 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c6c:	4b22      	ldr	r3, [pc, #136]	@ (90002cf8 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c6e:	f505 76c2 	add.w	r6, r5, #388	@ 0x184
        : presenterStorage(pres),
90002c72:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c76:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c7a:	f505 77b6 	add.w	r7, r5, #364	@ 0x16c
90002c7e:	602b      	str	r3, [r5, #0]
90002c80:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002c82:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c84:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002c88:	f00d ffb4 	bl	90010bf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c8c:	4b1b      	ldr	r3, [pc, #108]	@ (90002cfc <touchgfx_init+0xec>)
90002c8e:	4640      	mov	r0, r8
90002c90:	616b      	str	r3, [r5, #20]
90002c92:	f00d ffaf 	bl	90010bf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c96:	4b1a      	ldr	r3, [pc, #104]	@ (90002d00 <touchgfx_init+0xf0>)
90002c98:	4638      	mov	r0, r7
90002c9a:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c9c:	f00d ffaa 	bl	90010bf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ca0:	4b18      	ldr	r3, [pc, #96]	@ (90002d04 <touchgfx_init+0xf4>)
90002ca2:	f505 70c0 	add.w	r0, r5, #384	@ 0x180
90002ca6:	f8c5 316c 	str.w	r3, [r5, #364]	@ 0x16c
90002caa:	f002 fb37 	bl	9000531c <_ZN5ModelC1Ev>
90002cae:	462a      	mov	r2, r5
90002cb0:	f505 71c0 	add.w	r1, r5, #384	@ 0x180
90002cb4:	4630      	mov	r0, r6
90002cb6:	f002 fb27 	bl	90005308 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cba:	4630      	mov	r0, r6
90002cbc:	f001 ff86 	bl	90004bcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002cc0:	4811      	ldr	r0, [pc, #68]	@ (90002d08 <touchgfx_init+0xf8>)
90002cc2:	f027 f8cb 	bl	90029e5c <atexit>
90002cc6:	4620      	mov	r0, r4
90002cc8:	f026 fd40 	bl	9002974c <__cxa_guard_release>
90002ccc:	4808      	ldr	r0, [pc, #32]	@ (90002cf0 <touchgfx_init+0xe0>)
}
90002cce:	b002      	add	sp, #8
90002cd0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cd4:	f7fe b914 	b.w	90000f00 <_ZN11TouchGFXHAL10initializeEv>
90002cd8:	240218a8 	.word	0x240218a8
90002cdc:	240060c0 	.word	0x240060c0
90002ce0:	24006f14 	.word	0x24006f14
90002ce4:	240060e0 	.word	0x240060e0
90002ce8:	240060c4 	.word	0x240060c4
90002cec:	24000040 	.word	0x24000040
90002cf0:	24006030 	.word	0x24006030
90002cf4:	24006f18 	.word	0x24006f18
90002cf8:	9002ccb4 	.word	0x9002ccb4
90002cfc:	9002cc18 	.word	0x9002cc18
90002d00:	9002cc4c 	.word	0x9002cc4c
90002d04:	9002cc80 	.word	0x9002cc80
90002d08:	90002b7d 	.word	0x90002b7d

90002d0c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d0c:	4770      	bx	lr
90002d0e:	bf00      	nop

90002d10 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d10:	4801      	ldr	r0, [pc, #4]	@ (90002d18 <touchgfx_taskEntry+0x8>)
90002d12:	f7fe b943 	b.w	90000f9c <_ZN11TouchGFXHAL9taskEntryEv>
90002d16:	bf00      	nop
90002d18:	24006030 	.word	0x24006030

90002d1c <_GLOBAL__sub_I_touchgfx_init>:
}
90002d1c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d1e:	4e2a      	ldr	r6, [pc, #168]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002d20:	4b2a      	ldr	r3, [pc, #168]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d22:	4c2b      	ldr	r4, [pc, #172]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d24:	4630      	mov	r0, r6
static LCD16bpp display;
90002d26:	4d2b      	ldr	r5, [pc, #172]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d28:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d2a:	f7ff fdd7 	bl	900028dc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d2e:	4628      	mov	r0, r5
90002d30:	f01c fd4c 	bl	9001f7cc <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d34:	4828      	ldr	r0, [pc, #160]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d36:	f015 fc9b 	bl	90018670 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d3a:	4b28      	ldr	r3, [pc, #160]	@ (90002ddc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d3c:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d3e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d42:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d46:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d48:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d4a:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d4c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d50:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d52:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d54:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d58:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d5c:	4c20      	ldr	r4, [pc, #128]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d5e:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d60:	4c20      	ldr	r4, [pc, #128]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d62:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d64:	4c20      	ldr	r4, [pc, #128]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d66:	8020      	strh	r0, [r4, #0]
90002d68:	4c20      	ldr	r4, [pc, #128]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002d6a:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d6c:	4c20      	ldr	r4, [pc, #128]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002d6e:	4821      	ldr	r0, [pc, #132]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002d70:	8021      	strh	r1, [r4, #0]
90002d72:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d74:	4820      	ldr	r0, [pc, #128]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d76:	4921      	ldr	r1, [pc, #132]	@ (90002dfc <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d78:	4c21      	ldr	r4, [pc, #132]	@ (90002e00 <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002d7a:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d7e:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d82:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d86:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d88:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d8c:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d90:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d94:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d98:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d9c:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002da0:	7002      	strb	r2, [r0, #0]
90002da2:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002da4:	4917      	ldr	r1, [pc, #92]	@ (90002e04 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002da6:	4818      	ldr	r0, [pc, #96]	@ (90002e08 <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002da8:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002daa:	4918      	ldr	r1, [pc, #96]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002dac:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002db0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002db4:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002db8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002dbc:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dc0:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002dc4:	bd70      	pop	{r4, r5, r6, pc}
90002dc6:	bf00      	nop
90002dc8:	2400616c 	.word	0x2400616c
90002dcc:	9002afc8 	.word	0x9002afc8
90002dd0:	24006f10 	.word	0x24006f10
90002dd4:	240060e0 	.word	0x240060e0
90002dd8:	240060c4 	.word	0x240060c4
90002ddc:	24006030 	.word	0x24006030
90002de0:	01000001 	.word	0x01000001
90002de4:	24021844 	.word	0x24021844
90002de8:	24021838 	.word	0x24021838
90002dec:	2402183e 	.word	0x2402183e
90002df0:	2402183a 	.word	0x2402183a
90002df4:	24021840 	.word	0x24021840
90002df8:	2402183c 	.word	0x2402183c
90002dfc:	9002ca98 	.word	0x9002ca98
90002e00:	01010000 	.word	0x01010000
90002e04:	00440400 	.word	0x00440400
90002e08:	00140016 	.word	0x00140016
90002e0c:	9002afa0 	.word	0x9002afa0

90002e10 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e10:	4801      	ldr	r0, [pc, #4]	@ (90002e18 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e12:	f7ff badd 	b.w	900023d0 <_ZN8STM32DMAD1Ev>
90002e16:	bf00      	nop
90002e18:	2400616c 	.word	0x2400616c

90002e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e1c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e20:	b112      	cbz	r2, 90002e28 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e22:	6803      	ldr	r3, [r0, #0]
90002e24:	695b      	ldr	r3, [r3, #20]
90002e26:	4718      	bx	r3
        }
    }
90002e28:	4770      	bx	lr
90002e2a:	bf00      	nop

90002e2c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e2c:	2000      	movs	r0, #0
90002e2e:	4770      	bx	lr

90002e30 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e30:	8081      	strh	r1, [r0, #4]
    }
90002e32:	4770      	bx	lr

90002e34 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e34:	80c1      	strh	r1, [r0, #6]
    }
90002e36:	4770      	bx	lr

90002e38 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e38:	8101      	strh	r1, [r0, #8]
    }
90002e3a:	4770      	bx	lr

90002e3c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e3c:	8141      	strh	r1, [r0, #10]
    }
90002e3e:	4770      	bx	lr

90002e40 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e40:	4770      	bx	lr
90002e42:	bf00      	nop

90002e44 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e44:	4770      	bx	lr
90002e46:	bf00      	nop

90002e48 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e48:	4770      	bx	lr
90002e4a:	bf00      	nop

90002e4c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e4c:	4770      	bx	lr
90002e4e:	bf00      	nop

90002e50 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e54:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e58:	6803      	ldr	r3, [r0, #0]
90002e5a:	eba2 020c 	sub.w	r2, r2, ip
90002e5e:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e62:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e64:	eba1 010c 	sub.w	r1, r1, ip
90002e68:	b212      	sxth	r2, r2
90002e6a:	b209      	sxth	r1, r1
90002e6c:	4718      	bx	r3
90002e6e:	bf00      	nop

90002e70 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e70:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e72:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e76:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e7a:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e7e:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e82:	6010      	str	r0, [r2, #0]
    }
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e88:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e8c:	b11a      	cbz	r2, 90002e96 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e8e:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e92:	b102      	cbz	r2, 90002e96 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e94:	6018      	str	r0, [r3, #0]
        }
    }
90002e96:	4770      	bx	lr

90002e98 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e98:	2000      	movs	r0, #0
90002e9a:	4770      	bx	lr

90002e9c <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e9c:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e9e:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ea0:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ea2:	809a      	strh	r2, [r3, #4]
    }
90002ea4:	4770      	bx	lr
90002ea6:	bf00      	nop

90002ea8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002ea8:	4770      	bx	lr
90002eaa:	bf00      	nop

90002eac <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002eac:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002eb0:	4770      	bx	lr
90002eb2:	bf00      	nop

90002eb4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002eb4:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002eb8:	4770      	bx	lr
90002eba:	bf00      	nop

90002ebc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ebc:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ec0:	688a      	ldr	r2, [r1, #8]
90002ec2:	f8c0 c000 	str.w	ip, [r0]
90002ec6:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002ecc:	2200      	movs	r2, #0
90002ece:	6002      	str	r2, [r0, #0]
90002ed0:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ed2:	4770      	bx	lr

90002ed4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ed4:	2000      	movs	r0, #0
90002ed6:	4770      	bx	lr

90002ed8 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ed8:	7701      	strb	r1, [r0, #28]
    }
90002eda:	4770      	bx	lr

90002edc <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002edc:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ee0:	4770      	bx	lr
90002ee2:	bf00      	nop

90002ee4 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ee4:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002eec:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ef0:	4770      	bx	lr
90002ef2:	bf00      	nop

90002ef4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ef4:	2001      	movs	r0, #1
90002ef6:	4770      	bx	lr

90002ef8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002ef8:	3098      	adds	r0, #152	@ 0x98
90002efa:	4770      	bx	lr

90002efc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002efc:	308c      	adds	r0, #140	@ 0x8c
90002efe:	4770      	bx	lr

90002f00 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f00:	3084      	adds	r0, #132	@ 0x84
90002f02:	4770      	bx	lr

90002f04 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f04:	4770      	bx	lr
90002f06:	bf00      	nop

90002f08 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f08:	4770      	bx	lr
90002f0a:	bf00      	nop

90002f0c <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f0c:	4770      	bx	lr
90002f0e:	bf00      	nop

90002f10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f10:	4b03      	ldr	r3, [pc, #12]	@ (90002f20 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f12:	2290      	movs	r2, #144	@ 0x90
90002f14:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f18:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f1c:	4770      	bx	lr
90002f1e:	bf00      	nop
90002f20:	e000e100 	.word	0xe000e100

90002f24 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f24:	4a09      	ldr	r2, [pc, #36]	@ (90002f4c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f26:	490a      	ldr	r1, [pc, #40]	@ (90002f50 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f28:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f2a:	480a      	ldr	r0, [pc, #40]	@ (90002f54 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f2c:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f30:	3b01      	subs	r3, #1
90002f32:	b29b      	uxth	r3, r3
90002f34:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f36:	6911      	ldr	r1, [r2, #16]
90002f38:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f3c:	3901      	subs	r1, #1
90002f3e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f40:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f42:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f44:	f043 0301 	orr.w	r3, r3, #1
90002f48:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f4a:	4770      	bx	lr
90002f4c:	50001000 	.word	0x50001000
90002f50:	240071fa 	.word	0x240071fa
90002f54:	240071f8 	.word	0x240071f8

90002f58 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f58:	4b01      	ldr	r3, [pc, #4]	@ (90002f60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f5a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f5e:	4770      	bx	lr
90002f60:	50001000 	.word	0x50001000

90002f64 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f64:	4b02      	ldr	r3, [pc, #8]	@ (90002f70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f66:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f68:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f6c:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f6e:	4770      	bx	lr
90002f70:	50001000 	.word	0x50001000

90002f74 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f74:	4770      	bx	lr
90002f76:	bf00      	nop

90002f78 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f78:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f7c:	2300      	movs	r3, #0
90002f7e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f82:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f86:	4770      	bx	lr

90002f88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f88:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f8c:	4770      	bx	lr
90002f8e:	bf00      	nop

90002f90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f90:	b510      	push	{r4, lr}
90002f92:	4604      	mov	r4, r0
90002f94:	2130      	movs	r1, #48	@ 0x30
90002f96:	f026 fbcb 	bl	90029730 <_ZdlPvj>
90002f9a:	4620      	mov	r0, r4
90002f9c:	bd10      	pop	{r4, pc}
90002f9e:	bf00      	nop

90002fa0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002fa0:	b510      	push	{r4, lr}
90002fa2:	4604      	mov	r4, r0
90002fa4:	212c      	movs	r1, #44	@ 0x2c
90002fa6:	f026 fbc3 	bl	90029730 <_ZdlPvj>
90002faa:	4620      	mov	r0, r4
90002fac:	bd10      	pop	{r4, pc}
90002fae:	bf00      	nop

90002fb0 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002fb0:	b510      	push	{r4, lr}
90002fb2:	4604      	mov	r4, r0
90002fb4:	21bc      	movs	r1, #188	@ 0xbc
90002fb6:	f026 fbbb 	bl	90029730 <_ZdlPvj>
90002fba:	4620      	mov	r0, r4
90002fbc:	bd10      	pop	{r4, pc}
90002fbe:	bf00      	nop

90002fc0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fc0:	b911      	cbnz	r1, 90002fc8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fc2:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fc6:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fc8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fca:	4a03      	ldr	r2, [pc, #12]	@ (90002fd8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fcc:	f44f 7192 	mov.w	r1, #292	@ 0x124
90002fd0:	4b02      	ldr	r3, [pc, #8]	@ (90002fdc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fd2:	4803      	ldr	r0, [pc, #12]	@ (90002fe0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fd4:	f026 ff24 	bl	90029e20 <__assert_func>
90002fd8:	9002b678 	.word	0x9002b678
90002fdc:	9002b664 	.word	0x9002b664
90002fe0:	9002b794 	.word	0x9002b794

90002fe4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fe4:	b921      	cbnz	r1, 90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fe6:	6840      	ldr	r0, [r0, #4]
90002fe8:	4611      	mov	r1, r2
90002fea:	6803      	ldr	r3, [r0, #0]
90002fec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fee:	4718      	bx	r3
        assert(handle < no_streams);
90002ff0:	4b03      	ldr	r3, [pc, #12]	@ (90003000 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002ff2:	f44f 718f 	mov.w	r1, #286	@ 0x11e
90002ff6:	4a03      	ldr	r2, [pc, #12]	@ (90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002ff8:	4803      	ldr	r0, [pc, #12]	@ (90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002ffa:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002ffc:	f026 ff10 	bl	90029e20 <__assert_func>
90003000:	9002b664 	.word	0x9002b664
90003004:	9002b7dc 	.word	0x9002b7dc
90003008:	9002b794 	.word	0x9002b794

9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
9000300c:	b909      	cbnz	r1, 90003012 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000300e:	68c0      	ldr	r0, [r0, #12]
90003010:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003012:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003014:	4a03      	ldr	r2, [pc, #12]	@ (90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003016:	f44f 718b 	mov.w	r1, #278	@ 0x116
9000301a:	4b03      	ldr	r3, [pc, #12]	@ (90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
9000301c:	4803      	ldr	r0, [pc, #12]	@ (9000302c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
9000301e:	f026 feff 	bl	90029e20 <__assert_func>
90003022:	bf00      	nop
90003024:	9002b91c 	.word	0x9002b91c
90003028:	9002b664 	.word	0x9002b664
9000302c:	9002b794 	.word	0x9002b794

90003030 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003030:	b921      	cbnz	r1, 9000303c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003032:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003034:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003036:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000303a:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
9000303c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000303e:	4a03      	ldr	r2, [pc, #12]	@ (9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003040:	2141      	movs	r1, #65	@ 0x41
90003042:	4b03      	ldr	r3, [pc, #12]	@ (90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003044:	4803      	ldr	r0, [pc, #12]	@ (90003054 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003046:	f026 feeb 	bl	90029e20 <__assert_func>
9000304a:	bf00      	nop
9000304c:	9002ba64 	.word	0x9002ba64
90003050:	9002b664 	.word	0x9002b664
90003054:	9002b794 	.word	0x9002b794

90003058 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003058:	b508      	push	{r3, lr}
9000305a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
9000305c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003060:	b940      	cbnz	r0, 90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003062:	2201      	movs	r2, #1
90003064:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003068:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
9000306c:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003070:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003072:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003074:	4b03      	ldr	r3, [pc, #12]	@ (90003084 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003076:	f240 116d 	movw	r1, #365	@ 0x16d
9000307a:	4a03      	ldr	r2, [pc, #12]	@ (90003088 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
9000307c:	4803      	ldr	r0, [pc, #12]	@ (9000308c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000307e:	f026 fecf 	bl	90029e20 <__assert_func>
90003082:	bf00      	nop
90003084:	9002bbb0 	.word	0x9002bbb0
90003088:	9002bbe0 	.word	0x9002bbe0
9000308c:	9002b794 	.word	0x9002b794

90003090 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90003090:	f00e b894 	b.w	900111bc <_ZN8touchgfx3HAL10beginFrameEv>

90003094 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003094:	f00e b89e 	b.w	900111d4 <_ZN8touchgfx3HAL8endFrameEv>

90003098 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003098:	f00e b85a 	b.w	90011150 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

9000309c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
9000309c:	f00e b9c9 	b.w	90011432 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030a0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030a0:	4814      	ldr	r0, [pc, #80]	@ (900030f4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030a2:	6943      	ldr	r3, [r0, #20]
900030a4:	03d9      	lsls	r1, r3, #15
900030a6:	d523      	bpl.n	900030f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030a8:	2300      	movs	r3, #0
{
900030aa:	b510      	push	{r4, lr}
900030ac:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030b0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030b4:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030b8:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030bc:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030c0:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030c4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030c8:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030cc:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030ce:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030d2:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d4:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030d8:	1c5a      	adds	r2, r3, #1
900030da:	d1f8      	bne.n	900030ce <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030dc:	f1ac 0c20 	sub.w	ip, ip, #32
900030e0:	f11c 0f20 	cmn.w	ip, #32
900030e4:	d1f0      	bne.n	900030c8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030ea:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030ee:	bd10      	pop	{r4, pc}
900030f0:	4770      	bx	lr
900030f2:	bf00      	nop
900030f4:	e000ed00 	.word	0xe000ed00

900030f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030f8:	b5f0      	push	{r4, r5, r6, r7, lr}
900030fa:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030fc:	bb59      	cbnz	r1, 90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
900030fe:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003100:	6840      	ldr	r0, [r0, #4]
90003102:	461d      	mov	r5, r3
90003104:	4616      	mov	r6, r2
90003106:	6803      	ldr	r3, [r0, #0]
90003108:	691b      	ldr	r3, [r3, #16]
9000310a:	4798      	blx	r3
9000310c:	b908      	cbnz	r0, 90003112 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
9000310e:	b003      	add	sp, #12
90003110:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003112:	4f14      	ldr	r7, [pc, #80]	@ (90003164 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003114:	2101      	movs	r1, #1
90003116:	6838      	ldr	r0, [r7, #0]
90003118:	f00e fe60 	bl	90011ddc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
9000311c:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
9000311e:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003120:	4668      	mov	r0, sp
90003122:	f015 fa8b 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
90003126:	4668      	mov	r0, sp
90003128:	f013 fe7e 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000312c:	4b0e      	ldr	r3, [pc, #56]	@ (90003168 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000312e:	6860      	ldr	r0, [r4, #4]
90003130:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003132:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003136:	881b      	ldrh	r3, [r3, #0]
90003138:	f9bd 2000 	ldrsh.w	r2, [sp]
9000313c:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003140:	6804      	ldr	r4, [r0, #0]
90003142:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003146:	69e4      	ldr	r4, [r4, #28]
90003148:	47a0      	blx	r4
9000314a:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000314c:	6803      	ldr	r3, [r0, #0]
9000314e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003150:	4798      	blx	r3
    }
90003152:	b003      	add	sp, #12
90003154:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
90003156:	4b05      	ldr	r3, [pc, #20]	@ (9000316c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003158:	21ea      	movs	r1, #234	@ 0xea
9000315a:	4a05      	ldr	r2, [pc, #20]	@ (90003170 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000315c:	4805      	ldr	r0, [pc, #20]	@ (90003174 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
9000315e:	f026 fe5f 	bl	90029e20 <__assert_func>
90003162:	bf00      	nop
90003164:	24021844 	.word	0x24021844
90003168:	2402183e 	.word	0x2402183e
9000316c:	9002b664 	.word	0x9002b664
90003170:	9002bcf8 	.word	0x9002bcf8
90003174:	9002b794 	.word	0x9002b794

90003178 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003178:	4b08      	ldr	r3, [pc, #32]	@ (9000319c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000317a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000317e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003182:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003186:	f3bf 8f6f 	isb	sy
9000318a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000318e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003192:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003196:	f3bf 8f6f 	isb	sy
}
9000319a:	4770      	bx	lr
9000319c:	e000e100 	.word	0xe000e100

900031a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031a0:	4b03      	ldr	r3, [pc, #12]	@ (900031b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031a2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031a6:	609a      	str	r2, [r3, #8]
900031a8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031ac:	609a      	str	r2, [r3, #8]
}
900031ae:	4770      	bx	lr
900031b0:	e000e100 	.word	0xe000e100

900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031b8:	2900      	cmp	r1, #0
900031ba:	f040 8096 	bne.w	900032ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031be:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031c2:	4604      	mov	r4, r0
900031c4:	b933      	cbnz	r3, 900031d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031c6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031ca:	b91b      	cbnz	r3, 900031d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031cc:	2501      	movs	r5, #1
    }
900031ce:	4628      	mov	r0, r5
900031d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031d4:	4b48      	ldr	r3, [pc, #288]	@ (900032f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031d6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031d8:	6921      	ldr	r1, [r4, #16]
900031da:	681b      	ldr	r3, [r3, #0]
900031dc:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031e0:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031e4:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031e6:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031ea:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031ec:	b979      	cbnz	r1, 9000320e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ee:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031f0:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031f2:	6961      	ldr	r1, [r4, #20]
900031f4:	fb01 f303 	mul.w	r3, r1, r3
900031f8:	69a1      	ldr	r1, [r4, #24]
900031fa:	fb01 f202 	mul.w	r2, r1, r2
900031fe:	4293      	cmp	r3, r2
90003200:	d824      	bhi.n	9000324c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003202:	2300      	movs	r3, #0
    }
90003204:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003206:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000320a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000320e:	6813      	ldr	r3, [r2, #0]
90003210:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003212:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003214:	695b      	ldr	r3, [r3, #20]
90003216:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003218:	69e1      	ldr	r1, [r4, #28]
9000321a:	bb21      	cbnz	r1, 90003266 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
9000321c:	6a23      	ldr	r3, [r4, #32]
9000321e:	2b00      	cmp	r3, #0
90003220:	d142      	bne.n	900032a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003222:	4f36      	ldr	r7, [pc, #216]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003224:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003228:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000322a:	2d00      	cmp	r5, #0
9000322c:	d02c      	beq.n	90003288 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000322e:	699b      	ldr	r3, [r3, #24]
90003230:	4630      	mov	r0, r6
90003232:	4798      	blx	r3
90003234:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003236:	6833      	ldr	r3, [r6, #0]
90003238:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000323a:	42bb      	cmp	r3, r7
9000323c:	d145      	bne.n	900032ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000323e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003240:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003242:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003244:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003246:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003248:	60a2      	str	r2, [r4, #8]
9000324a:	e7d2      	b.n	900031f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000324c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003250:	b138      	cbz	r0, 90003262 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003252:	1a9b      	subs	r3, r3, r2
90003254:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003258:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000325a:	bf98      	it	ls
9000325c:	f102 32ff 	addls.w	r2, r2, #4294967295
90003260:	6222      	str	r2, [r4, #32]
            return true;
90003262:	2301      	movs	r3, #1
90003264:	e7ce      	b.n	90003204 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003266:	6833      	ldr	r3, [r6, #0]
90003268:	4630      	mov	r0, r6
9000326a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000326c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000326e:	6833      	ldr	r3, [r6, #0]
90003270:	69e5      	ldr	r5, [r4, #28]
90003272:	4630      	mov	r0, r6
90003274:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003276:	4798      	blx	r3
90003278:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000327a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000327c:	bf28      	it	cs
9000327e:	2500      	movcs	r5, #0
90003280:	4f1e      	ldr	r7, [pc, #120]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
90003282:	bf38      	it	cc
90003284:	2501      	movcc	r5, #1
90003286:	e7d6      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003288:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000328a:	42ba      	cmp	r2, r7
9000328c:	d124      	bne.n	900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000328e:	f8d6 8014 	ldr.w	r8, [r6, #20]
90003292:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003294:	4630      	mov	r0, r6
90003296:	4798      	blx	r3
90003298:	4580      	cmp	r8, r0
9000329a:	d219      	bcs.n	900032d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
9000329c:	6833      	ldr	r3, [r6, #0]
9000329e:	4630      	mov	r0, r6
900032a0:	699b      	ldr	r3, [r3, #24]
900032a2:	4798      	blx	r3
900032a4:	4605      	mov	r5, r0
900032a6:	e7c6      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032a8:	6832      	ldr	r2, [r6, #0]
900032aa:	4f14      	ldr	r7, [pc, #80]	@ (900032fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ac:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032b0:	42ba      	cmp	r2, r7
900032b2:	d116      	bne.n	900032e2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032b4:	6970      	ldr	r0, [r6, #20]
900032b6:	18c1      	adds	r1, r0, r3
900032b8:	4630      	mov	r0, r6
900032ba:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032bc:	6a22      	ldr	r2, [r4, #32]
900032be:	68a3      	ldr	r3, [r4, #8]
900032c0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032c2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032c4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032c6:	6222      	str	r2, [r4, #32]
900032c8:	e7ac      	b.n	90003224 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032ca:	4630      	mov	r0, r6
900032cc:	4798      	blx	r3
900032ce:	e7b7      	b.n	90003240 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032d0:	2300      	movs	r3, #0
900032d2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032d6:	e7ae      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032d8:	4630      	mov	r0, r6
900032da:	4790      	blx	r2
900032dc:	6833      	ldr	r3, [r6, #0]
900032de:	4680      	mov	r8, r0
900032e0:	e7d7      	b.n	90003292 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032e2:	4630      	mov	r0, r6
900032e4:	4790      	blx	r2
900032e6:	6a23      	ldr	r3, [r4, #32]
900032e8:	e7e5      	b.n	900032b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032ea:	4b05      	ldr	r3, [pc, #20]	@ (90003300 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032ec:	21aa      	movs	r1, #170	@ 0xaa
900032ee:	4a05      	ldr	r2, [pc, #20]	@ (90003304 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032f0:	4805      	ldr	r0, [pc, #20]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032f2:	f026 fd95 	bl	90029e20 <__assert_func>
900032f6:	bf00      	nop
900032f8:	24021844 	.word	0x24021844
900032fc:	90001021 	.word	0x90001021
90003300:	9002b664 	.word	0x9002b664
90003304:	9002be40 	.word	0x9002be40
90003308:	9002b794 	.word	0x9002b794

9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
9000330c:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000330e:	bb11      	cbnz	r1, 90003356 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003310:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003312:	6840      	ldr	r0, [r0, #4]
90003314:	4611      	mov	r1, r2
90003316:	461a      	mov	r2, r3
90003318:	6803      	ldr	r3, [r0, #0]
9000331a:	689b      	ldr	r3, [r3, #8]
9000331c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000331e:	6860      	ldr	r0, [r4, #4]
90003320:	4a10      	ldr	r2, [pc, #64]	@ (90003364 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003322:	6803      	ldr	r3, [r0, #0]
90003324:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003326:	4293      	cmp	r3, r2
90003328:	d10c      	bne.n	90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000332a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000332c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000332e:	2300      	movs	r3, #0
90003330:	4a0d      	ldr	r2, [pc, #52]	@ (90003368 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003332:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003334:	60e0      	str	r0, [r4, #12]
90003336:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003338:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000333c:	d104      	bne.n	90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000333e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003342:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003344:	4798      	blx	r3
90003346:	e7f1      	b.n	9000332c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003348:	4620      	mov	r0, r4
9000334a:	46ac      	mov	ip, r5
9000334c:	2201      	movs	r2, #1
9000334e:	4619      	mov	r1, r3
    }
90003350:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003354:	4760      	bx	ip
        assert(handle < no_streams);
90003356:	4b05      	ldr	r3, [pc, #20]	@ (9000336c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003358:	214f      	movs	r1, #79	@ 0x4f
9000335a:	4a05      	ldr	r2, [pc, #20]	@ (90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000335c:	4805      	ldr	r0, [pc, #20]	@ (90003374 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000335e:	f026 fd5f 	bl	90029e20 <__assert_func>
90003362:	bf00      	nop
90003364:	90001021 	.word	0x90001021
90003368:	900033e1 	.word	0x900033e1
9000336c:	9002b664 	.word	0x9002b664
90003370:	9002bf74 	.word	0x9002bf74
90003374:	9002b794 	.word	0x9002b794

90003378 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003378:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000337a:	bb09      	cbnz	r1, 900033c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000337c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000337e:	6840      	ldr	r0, [r0, #4]
90003380:	4611      	mov	r1, r2
90003382:	6803      	ldr	r3, [r0, #0]
90003384:	68db      	ldr	r3, [r3, #12]
90003386:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003388:	6860      	ldr	r0, [r4, #4]
9000338a:	4a10      	ldr	r2, [pc, #64]	@ (900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
9000338c:	6803      	ldr	r3, [r0, #0]
9000338e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003390:	4293      	cmp	r3, r2
90003392:	d10c      	bne.n	900033ae <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
90003394:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003396:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003398:	2300      	movs	r3, #0
9000339a:	4a0d      	ldr	r2, [pc, #52]	@ (900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
9000339c:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000339e:	60e0      	str	r0, [r4, #12]
900033a0:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033a2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033a6:	d104      	bne.n	900033b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033a8:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033ac:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033ae:	4798      	blx	r3
900033b0:	e7f1      	b.n	90003396 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033b2:	4620      	mov	r0, r4
900033b4:	46ac      	mov	ip, r5
900033b6:	2201      	movs	r2, #1
900033b8:	4619      	mov	r1, r3
    }
900033ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033be:	4760      	bx	ip
        assert(handle < no_streams);
900033c0:	4b04      	ldr	r3, [pc, #16]	@ (900033d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033c2:	215f      	movs	r1, #95	@ 0x5f
900033c4:	4a04      	ldr	r2, [pc, #16]	@ (900033d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033c6:	4805      	ldr	r0, [pc, #20]	@ (900033dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033c8:	f026 fd2a 	bl	90029e20 <__assert_func>
900033cc:	90001021 	.word	0x90001021
900033d0:	900033e1 	.word	0x900033e1
900033d4:	9002b664 	.word	0x9002b664
900033d8:	9002c0e0 	.word	0x9002c0e0
900033dc:	9002b794 	.word	0x9002b794

900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033e0:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033e2:	2900      	cmp	r1, #0
900033e4:	d14f      	bne.n	90003486 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033e6:	4604      	mov	r4, r0
        switch (cmd)
900033e8:	2a05      	cmp	r2, #5
900033ea:	d80b      	bhi.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033ec:	e8df f002 	tbb	[pc, r2]
900033f0:	3c373311 	.word	0x3c373311
900033f4:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033f6:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033f8:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033fa:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033fe:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003400:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003402:	6103      	str	r3, [r0, #16]
    }
90003404:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003406:	3b00      	subs	r3, #0
90003408:	bf18      	it	ne
9000340a:	2301      	movne	r3, #1
9000340c:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003410:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003412:	6840      	ldr	r0, [r0, #4]
90003414:	6803      	ldr	r3, [r0, #0]
90003416:	691b      	ldr	r3, [r3, #16]
90003418:	4798      	blx	r3
9000341a:	2800      	cmp	r0, #0
9000341c:	d0f2      	beq.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000341e:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003420:	2101      	movs	r1, #1
                if (!stream.repeat)
90003422:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003426:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000342a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000342c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000342e:	2a00      	cmp	r2, #0
90003430:	d1e8      	bne.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003432:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003434:	4917      	ldr	r1, [pc, #92]	@ (90003494 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003436:	6823      	ldr	r3, [r4, #0]
90003438:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000343a:	428a      	cmp	r2, r1
9000343c:	d11e      	bne.n	9000347c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000343e:	6965      	ldr	r5, [r4, #20]
90003440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003442:	4620      	mov	r0, r4
90003444:	4798      	blx	r3
90003446:	4285      	cmp	r5, r0
90003448:	d1dc      	bne.n	90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000344a:	6823      	ldr	r3, [r4, #0]
9000344c:	4620      	mov	r0, r4
9000344e:	699b      	ldr	r3, [r3, #24]
    }
90003450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003454:	4718      	bx	r3
            stream.isPlaying = false;
90003456:	2300      	movs	r3, #0
90003458:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000345c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000345e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003460:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003462:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003464:	6102      	str	r2, [r0, #16]
    }
90003466:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003468:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000346a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000346c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000346e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003472:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003476:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003478:	6102      	str	r2, [r0, #16]
    }
9000347a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000347c:	4620      	mov	r0, r4
9000347e:	4790      	blx	r2
90003480:	6823      	ldr	r3, [r4, #0]
90003482:	4605      	mov	r5, r0
90003484:	e7dc      	b.n	90003440 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003486:	4b04      	ldr	r3, [pc, #16]	@ (90003498 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003488:	216f      	movs	r1, #111	@ 0x6f
9000348a:	4a04      	ldr	r2, [pc, #16]	@ (9000349c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
9000348c:	4804      	ldr	r0, [pc, #16]	@ (900034a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000348e:	f026 fcc7 	bl	90029e20 <__assert_func>
90003492:	bf00      	nop
90003494:	90001021 	.word	0x90001021
90003498:	9002b664 	.word	0x9002b664
9000349c:	9002c218 	.word	0x9002c218
900034a0:	9002b794 	.word	0x9002b794

900034a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034a4:	b538      	push	{r3, r4, r5, lr}
900034a6:	4604      	mov	r4, r0
    HAL::initialize();
900034a8:	f00d fea1 	bl	900111ee <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034ac:	6823      	ldr	r3, [r4, #0]
900034ae:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900034b0:	f013 fe70 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
900034b4:	4601      	mov	r1, r0
900034b6:	4620      	mov	r0, r4
900034b8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034ba:	6823      	ldr	r3, [r4, #0]
900034bc:	4a13      	ldr	r2, [pc, #76]	@ (9000350c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034be:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
900034c2:	4295      	cmp	r5, r2
900034c4:	d116      	bne.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034c6:	4a12      	ldr	r2, [pc, #72]	@ (90003510 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034c8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034ca:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034ce:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034d2:	4810      	ldr	r0, [pc, #64]	@ (90003514 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034d4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034d8:	4a0f      	ldr	r2, [pc, #60]	@ (90003518 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034da:	7005      	strb	r5, [r0, #0]
900034dc:	4293      	cmp	r3, r2
900034de:	d110      	bne.n	90003502 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034e0:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034e2:	4a0e      	ldr	r2, [pc, #56]	@ (9000351c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034e4:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034e6:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034e8:	4b0d      	ldr	r3, [pc, #52]	@ (90003520 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034ea:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034ec:	4a0d      	ldr	r2, [pc, #52]	@ (90003524 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034ee:	6459      	str	r1, [r3, #68]	@ 0x44
900034f0:	6053      	str	r3, [r2, #4]
}
900034f2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034f4:	4a0c      	ldr	r2, [pc, #48]	@ (90003528 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034f6:	2300      	movs	r3, #0
900034f8:	4620      	mov	r0, r4
900034fa:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034fe:	47a8      	blx	r5
90003500:	e7f2      	b.n	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003502:	2100      	movs	r1, #0
90003504:	4620      	mov	r0, r4
90003506:	4798      	blx	r3
90003508:	e7ee      	b.n	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000350a:	bf00      	nop
9000350c:	90000f45 	.word	0x90000f45
90003510:	d003fc00 	.word	0xd003fc00
90003514:	24021842 	.word	0x24021842
90003518:	90000d75 	.word	0x90000d75
9000351c:	24021843 	.word	0x24021843
90003520:	240072ec 	.word	0x240072ec
90003524:	240072bc 	.word	0x240072bc
90003528:	d007f800 	.word	0xd007f800

9000352c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000352c:	4843      	ldr	r0, [pc, #268]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
9000352e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003530:	6804      	ldr	r4, [r0, #0]
90003532:	f3bf 8f5b 	dmb	ish
90003536:	f014 0401 	ands.w	r4, r4, #1
9000353a:	d001      	beq.n	90003540 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000353c:	4840      	ldr	r0, [pc, #256]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000353e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003540:	f026 f8f8 	bl	90029734 <__cxa_guard_acquire>
90003544:	2800      	cmp	r0, #0
90003546:	d0f9      	beq.n	9000353c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003548:	4d3d      	ldr	r5, [pc, #244]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000354a:	4b3e      	ldr	r3, [pc, #248]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000354c:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003550:	612c      	str	r4, [r5, #16]
90003552:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003556:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000355a:	4e3b      	ldr	r6, [pc, #236]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
9000355c:	e9c5 3400 	strd	r3, r4, [r5]
90003560:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003564:	f015 fb69 	bl	90018c3a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003568:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000356c:	f010 f9ec 	bl	90013948 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003570:	4b36      	ldr	r3, [pc, #216]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003572:	4a37      	ldr	r2, [pc, #220]	@ (90003650 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003574:	602b      	str	r3, [r5, #0]
90003576:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
90003578:	4936      	ldr	r1, [pc, #216]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
9000357a:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
9000357e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90003582:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003586:	65a9      	str	r1, [r5, #88]	@ 0x58
90003588:	b192      	cbz	r2, 900035b0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
9000358a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000358c:	2800      	cmp	r0, #0
9000358e:	d040      	beq.n	90003612 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90003590:	6803      	ldr	r3, [r0, #0]
90003592:	4c31      	ldr	r4, [pc, #196]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
90003594:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003596:	42a2      	cmp	r2, r4
90003598:	d017      	beq.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000359a:	4790      	blx	r2
        return auxiliaryLCD;
9000359c:	6833      	ldr	r3, [r6, #0]
9000359e:	fab0 f680 	clz	r6, r0
900035a2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035a4:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035a6:	2800      	cmp	r0, #0
900035a8:	d03f      	beq.n	9000362a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035aa:	6803      	ldr	r3, [r0, #0]
900035ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035ae:	e00a      	b.n	900035c6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035b0:	6898      	ldr	r0, [r3, #8]
900035b2:	4c29      	ldr	r4, [pc, #164]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035b4:	6802      	ldr	r2, [r0, #0]
900035b6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035b8:	42a2      	cmp	r2, r4
900035ba:	d1ee      	bne.n	9000359a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035bc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035be:	b120      	cbz	r0, 900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035c0:	6803      	ldr	r3, [r0, #0]
900035c2:	2601      	movs	r6, #1
900035c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035c6:	42a3      	cmp	r3, r4
900035c8:	d12a      	bne.n	90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035ca:	4924      	ldr	r1, [pc, #144]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035cc:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ce:	2300      	movs	r3, #0
900035d0:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
900035d4:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
900035d8:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035dc:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035e0:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035e4:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035e8:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035ec:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
900035f0:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035f4:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
900035f8:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035fc:	4a18      	ldr	r2, [pc, #96]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035fe:	4819      	ldr	r0, [pc, #100]	@ (90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003600:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003604:	f026 fc2a 	bl	90029e5c <atexit>
90003608:	480c      	ldr	r0, [pc, #48]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000360a:	f026 f89f 	bl	9002974c <__cxa_guard_release>
}
9000360e:	480c      	ldr	r0, [pc, #48]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003610:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003612:	6898      	ldr	r0, [r3, #8]
90003614:	4c10      	ldr	r4, [pc, #64]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003616:	6803      	ldr	r3, [r0, #0]
90003618:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000361a:	42a2      	cmp	r2, r4
9000361c:	d0d5      	beq.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000361e:	e7bc      	b.n	9000359a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003620:	4798      	blx	r3
90003622:	2800      	cmp	r0, #0
90003624:	bf08      	it	eq
90003626:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000362a:	2e00      	cmp	r6, #0
9000362c:	d1cd      	bne.n	900035ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000362e:	4b0e      	ldr	r3, [pc, #56]	@ (90003668 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003630:	212c      	movs	r1, #44	@ 0x2c
90003632:	4a0e      	ldr	r2, [pc, #56]	@ (9000366c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003634:	480e      	ldr	r0, [pc, #56]	@ (90003670 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
90003636:	f026 fbf3 	bl	90029e20 <__assert_func>
9000363a:	bf00      	nop
9000363c:	240071fc 	.word	0x240071fc
90003640:	24007200 	.word	0x24007200
90003644:	9002d530 	.word	0x9002d530
90003648:	24021844 	.word	0x24021844
9000364c:	9002cd60 	.word	0x9002cd60
90003650:	9002ccc8 	.word	0x9002ccc8
90003654:	9002cce8 	.word	0x9002cce8
90003658:	90002ed5 	.word	0x90002ed5
9000365c:	9002d4e4 	.word	0x9002d4e4
90003660:	9002d4c4 	.word	0x9002d4c4
90003664:	90002f0d 	.word	0x90002f0d
90003668:	9002c37c 	.word	0x9002c37c
9000366c:	9002c3dc 	.word	0x9002c3dc
90003670:	9002c418 	.word	0x9002c418

90003674 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003674:	b538      	push	{r3, r4, r5, lr}
        return instance;
90003676:	4c18      	ldr	r4, [pc, #96]	@ (900036d8 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
90003678:	6823      	ldr	r3, [r4, #0]
9000367a:	b35b      	cbz	r3, 900036d4 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
9000367c:	4b17      	ldr	r3, [pc, #92]	@ (900036dc <HAL_LTDC_LineEventCallback+0x68>)
9000367e:	4a18      	ldr	r2, [pc, #96]	@ (900036e0 <HAL_LTDC_LineEventCallback+0x6c>)
90003680:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90003682:	8811      	ldrh	r1, [r2, #0]
90003684:	428b      	cmp	r3, r1
90003686:	d00e      	beq.n	900036a6 <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003688:	f006 fb3c 	bl	90009d04 <HAL_LTDC_ProgramLineEvent>
9000368c:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
9000368e:	6823      	ldr	r3, [r4, #0]
90003690:	4620      	mov	r0, r4
90003692:	6a1b      	ldr	r3, [r3, #32]
90003694:	4798      	blx	r3
        isFrontPorchEntered = true;
90003696:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003698:	2000      	movs	r0, #0
9000369a:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
9000369e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036a2:	f7fd bb19 	b.w	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036a6:	4b0f      	ldr	r3, [pc, #60]	@ (900036e4 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
900036a8:	2500      	movs	r5, #0
900036aa:	8819      	ldrh	r1, [r3, #0]
900036ac:	f006 fb2a 	bl	90009d04 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036b0:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
900036b2:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
900036b6:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900036ba:	3201      	adds	r2, #1
900036bc:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
900036c0:	f7fe fe5e 	bl	90002380 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036c4:	6820      	ldr	r0, [r4, #0]
900036c6:	f00e fb29 	bl	90011d1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036ca:	4628      	mov	r0, r5
    }
900036cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036d0:	f7fd bad8 	b.w	90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036d4:	bd38      	pop	{r3, r4, r5, pc}
900036d6:	bf00      	nop
900036d8:	24021844 	.word	0x24021844
900036dc:	50001000 	.word	0x50001000
900036e0:	240071fa 	.word	0x240071fa
900036e4:	240071f8 	.word	0x240071f8

900036e8 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036e8:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036ea:	480b      	ldr	r0, [pc, #44]	@ (90003718 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036ec:	f7fd fe0e 	bl	9000130c <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036f0:	4c0a      	ldr	r4, [pc, #40]	@ (9000371c <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036f2:	4b0b      	ldr	r3, [pc, #44]	@ (90003720 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036f4:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036f6:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036fa:	2101      	movs	r1, #1
900036fc:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036fe:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
90003700:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003704:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003708:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
9000370a:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
9000370e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
90003712:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
90003716:	bd10      	pop	{r4, pc}
90003718:	240072ec 	.word	0x240072ec
9000371c:	9002cdac 	.word	0x9002cdac
90003720:	240072bc 	.word	0x240072bc

90003724 <send_uart>:
		}
	}
}


void send_uart(){
90003724:	b500      	push	{lr}
90003726:	4c10      	ldr	r4, [pc, #64]	@ (90003768 <send_uart+0x44>)
90003728:	b083      	sub	sp, #12
		tx_task_action_t action;
	    while(1){
	    	if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
				if (action == TX_SEND_START_CMD) {
					HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code.",strlen("Send trouble code."));
9000372a:	4e10      	ldr	r6, [pc, #64]	@ (9000376c <send_uart+0x48>)
9000372c:	4d10      	ldr	r5, [pc, #64]	@ (90003770 <send_uart+0x4c>)
	    	if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
9000372e:	f04f 33ff 	mov.w	r3, #4294967295
90003732:	2200      	movs	r2, #0
90003734:	f10d 0107 	add.w	r1, sp, #7
90003738:	6820      	ldr	r0, [r4, #0]
9000373a:	f00a fd33 	bl	9000e1a4 <osMessageQueueGet>
9000373e:	2800      	cmp	r0, #0
90003740:	d1f5      	bne.n	9000372e <send_uart+0xa>
				if (action == TX_SEND_START_CMD) {
90003742:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003746:	2b01      	cmp	r3, #1
90003748:	d003      	beq.n	90003752 <send_uart+0x2e>
					osDelay(pdMS_TO_TICKS(5000));
				}else if (action == TX_TASK_EXIT){
9000374a:	2b02      	cmp	r3, #2
9000374c:	d1ef      	bne.n	9000372e <send_uart+0xa>
				}else{
					//not set up for now
				}
	    	}
		}
	    osThreadExit();
9000374e:	f00a fbd7 	bl	9000df00 <osThreadExit>
					HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code.",strlen("Send trouble code."));
90003752:	2212      	movs	r2, #18
90003754:	4631      	mov	r1, r6
90003756:	4628      	mov	r0, r5
90003758:	f008 ffd4 	bl	9000c704 <HAL_UART_Transmit_IT>
					osDelay(pdMS_TO_TICKS(5000));
9000375c:	f241 3088 	movw	r0, #5000	@ 0x1388
90003760:	f00a fbd4 	bl	9000df0c <osDelay>
90003764:	e7e3      	b.n	9000372e <send_uart+0xa>
90003766:	bf00      	nop
90003768:	24007340 	.word	0x24007340
9000376c:	9002c47c 	.word	0x9002c47c
90003770:	240073a4 	.word	0x240073a4

90003774 <receive_uart>:
}

void receive_uart(){
90003774:	b580      	push	{r7, lr}
90003776:	4d16      	ldr	r5, [pc, #88]	@ (900037d0 <receive_uart+0x5c>)
90003778:	b082      	sub	sp, #8
				trouble_code[tc_size] = '\0';
				break;
			}else if (action == RX_TASK_EXIT){
				break;
			}else{
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size); //only runs if trouble_code was NULL. Then it will retry getting the trouble code
9000377a:	4f16      	ldr	r7, [pc, #88]	@ (900037d4 <receive_uart+0x60>)
9000377c:	4e16      	ldr	r6, [pc, #88]	@ (900037d8 <receive_uart+0x64>)
		if(osMessageQueueGet(receive_task_queue, &action, NULL,osWaitForever) == osOK){
9000377e:	f04f 33ff 	mov.w	r3, #4294967295
90003782:	2200      	movs	r2, #0
90003784:	f10d 0107 	add.w	r1, sp, #7
90003788:	6828      	ldr	r0, [r5, #0]
9000378a:	f00a fd0b 	bl	9000e1a4 <osMessageQueueGet>
9000378e:	4604      	mov	r4, r0
90003790:	2800      	cmp	r0, #0
90003792:	d1f4      	bne.n	9000377e <receive_uart+0xa>
			if (action == RX_RECEIVE_DATA){
90003794:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003798:	2b01      	cmp	r3, #1
9000379a:	d007      	beq.n	900037ac <receive_uart+0x38>
			}else if (action == RX_TASK_EXIT){
9000379c:	2b02      	cmp	r3, #2
9000379e:	d010      	beq.n	900037c2 <receive_uart+0x4e>
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size); //only runs if trouble_code was NULL. Then it will retry getting the trouble code
900037a0:	2205      	movs	r2, #5
900037a2:	4639      	mov	r1, r7
900037a4:	4630      	mov	r0, r6
900037a6:	f009 f809 	bl	9000c7bc <HAL_UART_Receive_IT>
900037aa:	e7e8      	b.n	9000377e <receive_uart+0xa>
				osSemaphoreRelease(blink_sem);
900037ac:	4b0b      	ldr	r3, [pc, #44]	@ (900037dc <receive_uart+0x68>)
900037ae:	6818      	ldr	r0, [r3, #0]
900037b0:	f00a fc42 	bl	9000e038 <osSemaphoreRelease>
				memcpy(trouble_code,data,sizeof(data));
900037b4:	4a07      	ldr	r2, [pc, #28]	@ (900037d4 <receive_uart+0x60>)
900037b6:	4b0a      	ldr	r3, [pc, #40]	@ (900037e0 <receive_uart+0x6c>)
900037b8:	e892 0003 	ldmia.w	r2, {r0, r1}
				trouble_code[tc_size] = '\0';
900037bc:	715c      	strb	r4, [r3, #5]
				memcpy(trouble_code,data,sizeof(data));
900037be:	6018      	str	r0, [r3, #0]
900037c0:	7119      	strb	r1, [r3, #4]
			}
		}
	}
	//terminating thread
	osSemaphoreRelease(receive_code_sem);
900037c2:	4b08      	ldr	r3, [pc, #32]	@ (900037e4 <receive_uart+0x70>)
900037c4:	6818      	ldr	r0, [r3, #0]
900037c6:	f00a fc37 	bl	9000e038 <osSemaphoreRelease>
	osThreadExit();
900037ca:	f00a fb99 	bl	9000df00 <osThreadExit>
900037ce:	bf00      	nop
900037d0:	2400733c 	.word	0x2400733c
900037d4:	24007350 	.word	0x24007350
900037d8:	240073a4 	.word	0x240073a4
900037dc:	24007360 	.word	0x24007360
900037e0:	24007358 	.word	0x24007358
900037e4:	24007338 	.word	0x24007338

900037e8 <HAL_UART_RxCpltCallback>:
	if(huart->Instance == USART1){
900037e8:	4b11      	ldr	r3, [pc, #68]	@ (90003830 <HAL_UART_RxCpltCallback+0x48>)
900037ea:	6802      	ldr	r2, [r0, #0]
900037ec:	429a      	cmp	r2, r3
900037ee:	d000      	beq.n	900037f2 <HAL_UART_RxCpltCallback+0xa>
900037f0:	4770      	bx	lr
		if (!isCleanUp){
900037f2:	4b10      	ldr	r3, [pc, #64]	@ (90003834 <HAL_UART_RxCpltCallback+0x4c>)
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
900037f4:	4a10      	ldr	r2, [pc, #64]	@ (90003838 <HAL_UART_RxCpltCallback+0x50>)
		if (!isCleanUp){
900037f6:	781b      	ldrb	r3, [r3, #0]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
900037f8:	6810      	ldr	r0, [r2, #0]
{
900037fa:	b500      	push	{lr}
900037fc:	b083      	sub	sp, #12
		if (!isCleanUp){
900037fe:	b163      	cbz	r3, 9000381a <HAL_UART_RxCpltCallback+0x32>
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003800:	2300      	movs	r3, #0
			rx_task_action_t rx_action = RX_TASK_EXIT;
90003802:	f04f 0c02 	mov.w	ip, #2
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003806:	f10d 0107 	add.w	r1, sp, #7
9000380a:	461a      	mov	r2, r3
			rx_task_action_t rx_action = RX_TASK_EXIT;
9000380c:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003810:	f00a fc8c 	bl	9000e12c <osMessageQueuePut>
}
90003814:	b003      	add	sp, #12
90003816:	f85d fb04 	ldr.w	pc, [sp], #4
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
9000381a:	2101      	movs	r1, #1
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
9000381c:	461a      	mov	r2, r3
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
9000381e:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003822:	f10d 0107 	add.w	r1, sp, #7
90003826:	f00a fc81 	bl	9000e12c <osMessageQueuePut>
}
9000382a:	b003      	add	sp, #12
9000382c:	f85d fb04 	ldr.w	pc, [sp], #4
90003830:	40011000 	.word	0x40011000
90003834:	24007334 	.word	0x24007334
90003838:	2400733c 	.word	0x2400733c

9000383c <HAL_UART_TxCpltCallback>:
	if (huart->Instance == USART1){
9000383c:	4b11      	ldr	r3, [pc, #68]	@ (90003884 <HAL_UART_TxCpltCallback+0x48>)
9000383e:	6802      	ldr	r2, [r0, #0]
90003840:	429a      	cmp	r2, r3
90003842:	d000      	beq.n	90003846 <HAL_UART_TxCpltCallback+0xa>
90003844:	4770      	bx	lr
		if (!isCleanUp){
90003846:	4b10      	ldr	r3, [pc, #64]	@ (90003888 <HAL_UART_TxCpltCallback+0x4c>)
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003848:	4a10      	ldr	r2, [pc, #64]	@ (9000388c <HAL_UART_TxCpltCallback+0x50>)
		if (!isCleanUp){
9000384a:	781b      	ldrb	r3, [r3, #0]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
9000384c:	6810      	ldr	r0, [r2, #0]
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
9000384e:	b500      	push	{lr}
90003850:	b083      	sub	sp, #12
		if (!isCleanUp){
90003852:	b163      	cbz	r3, 9000386e <HAL_UART_TxCpltCallback+0x32>
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003854:	2300      	movs	r3, #0
			tx_task_action_t tx_action = TX_TASK_EXIT;
90003856:	f04f 0c02 	mov.w	ip, #2
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
9000385a:	f10d 0107 	add.w	r1, sp, #7
9000385e:	461a      	mov	r2, r3
			tx_task_action_t tx_action = TX_TASK_EXIT;
90003860:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003864:	f00a fc62 	bl	9000e12c <osMessageQueuePut>
}
90003868:	b003      	add	sp, #12
9000386a:	f85d fb04 	ldr.w	pc, [sp], #4
			tx_task_action_t tx_action = TX_SEND_START_CMD;
9000386e:	2101      	movs	r1, #1
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003870:	461a      	mov	r2, r3
			tx_task_action_t tx_action = TX_SEND_START_CMD;
90003872:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003876:	f10d 0107 	add.w	r1, sp, #7
9000387a:	f00a fc57 	bl	9000e12c <osMessageQueuePut>
}
9000387e:	b003      	add	sp, #12
90003880:	f85d fb04 	ldr.w	pc, [sp], #4
90003884:	40011000 	.word	0x40011000
90003888:	24007334 	.word	0x24007334
9000388c:	24007340 	.word	0x24007340

90003890 <init_error_check>:

}

void init_error_check(void *ptr){
	if (ptr == NULL){
90003890:	b100      	cbz	r0, 90003894 <init_error_check+0x4>
		Error_Handler();
	}
}
90003892:	4770      	bx	lr
		Error_Handler();
90003894:	f000 bbec 	b.w	90004070 <Error_Handler>

90003898 <USART_Init_Start>:

  //setting up FreeRTOS*********************************************************************************
  /**
   * Setup and error checking
   */
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
90003898:	2101      	movs	r1, #1
9000389a:	4e3e      	ldr	r6, [pc, #248]	@ (90003994 <USART_Init_Start+0xfc>)
9000389c:	2200      	movs	r2, #0
9000389e:	4608      	mov	r0, r1
{
900038a0:	b580      	push	{r7, lr}
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
900038a2:	f00a fc07 	bl	9000e0b4 <osMessageQueueNew>
900038a6:	6030      	str	r0, [r6, #0]
	if (ptr == NULL){
900038a8:	2800      	cmp	r0, #0
900038aa:	d064      	beq.n	90003976 <USART_Init_Start+0xde>
  init_error_check(send_task_queue);
  receive_task_queue = osMessageQueueNew(1, sizeof(rx_task_action_t),NULL);
900038ac:	2101      	movs	r1, #1
900038ae:	4d3a      	ldr	r5, [pc, #232]	@ (90003998 <USART_Init_Start+0x100>)
900038b0:	2200      	movs	r2, #0
900038b2:	4608      	mov	r0, r1
900038b4:	f00a fbfe 	bl	9000e0b4 <osMessageQueueNew>
900038b8:	6028      	str	r0, [r5, #0]
	if (ptr == NULL){
900038ba:	2800      	cmp	r0, #0
900038bc:	d05e      	beq.n	9000397c <USART_Init_Start+0xe4>
  init_error_check(receive_task_queue);
  receive_code_sem = osSemaphoreNew(1,0,NULL);
900038be:	2200      	movs	r2, #0
900038c0:	4c36      	ldr	r4, [pc, #216]	@ (9000399c <USART_Init_Start+0x104>)
900038c2:	2001      	movs	r0, #1
900038c4:	4611      	mov	r1, r2
900038c6:	f00a fb2f 	bl	9000df28 <osSemaphoreNew>
900038ca:	6020      	str	r0, [r4, #0]
	if (ptr == NULL){
900038cc:	2800      	cmp	r0, #0
900038ce:	d058      	beq.n	90003982 <USART_Init_Start+0xea>
  init_error_check(receive_code_sem);
  send_handle = osThreadNew(send_uart, NULL, &sendTask_attributes);
900038d0:	4a33      	ldr	r2, [pc, #204]	@ (900039a0 <USART_Init_Start+0x108>)
900038d2:	2100      	movs	r1, #0
900038d4:	4833      	ldr	r0, [pc, #204]	@ (900039a4 <USART_Init_Start+0x10c>)
900038d6:	f00a facf 	bl	9000de78 <osThreadNew>
900038da:	4b33      	ldr	r3, [pc, #204]	@ (900039a8 <USART_Init_Start+0x110>)
900038dc:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900038de:	2800      	cmp	r0, #0
900038e0:	d052      	beq.n	90003988 <USART_Init_Start+0xf0>
  init_error_check(send_handle);
  receive_handle = osThreadNew(receive_uart, NULL, &receiveTask_attributes);
900038e2:	4a32      	ldr	r2, [pc, #200]	@ (900039ac <USART_Init_Start+0x114>)
900038e4:	2100      	movs	r1, #0
900038e6:	4832      	ldr	r0, [pc, #200]	@ (900039b0 <USART_Init_Start+0x118>)
900038e8:	f00a fac6 	bl	9000de78 <osThreadNew>
900038ec:	4b31      	ldr	r3, [pc, #196]	@ (900039b4 <USART_Init_Start+0x11c>)
900038ee:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900038f0:	2800      	cmp	r0, #0
900038f2:	d04c      	beq.n	9000398e <USART_Init_Start+0xf6>
  init_error_check(receive_handle);
  blink_handle = osThreadNew(blk_toggle_led,NULL,&blinkTask_attributes);
900038f4:	4a30      	ldr	r2, [pc, #192]	@ (900039b8 <USART_Init_Start+0x120>)
900038f6:	2100      	movs	r1, #0
900038f8:	4830      	ldr	r0, [pc, #192]	@ (900039bc <USART_Init_Start+0x124>)
900038fa:	f00a fabd 	bl	9000de78 <osThreadNew>
900038fe:	4b30      	ldr	r3, [pc, #192]	@ (900039c0 <USART_Init_Start+0x128>)
90003900:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003902:	2800      	cmp	r0, #0
90003904:	d034      	beq.n	90003970 <USART_Init_Start+0xd8>
  init_error_check(blink_handle);

  //setting interrupts**********************************************************************************
  HAL_UART_Transmit_IT(&huart1, (uint8_t *)"Send trouble code.",strlen("Send trouble code."));
90003906:	2212      	movs	r2, #18
90003908:	492e      	ldr	r1, [pc, #184]	@ (900039c4 <USART_Init_Start+0x12c>)
9000390a:	482f      	ldr	r0, [pc, #188]	@ (900039c8 <USART_Init_Start+0x130>)

  //waiting for trouble code to be received*************************************************************
  osSemaphoreAcquire(receive_code_sem, HAL_MAX_DELAY);

  //clean up after code received************************************************************************
  isCleanUp= true;
9000390c:	2701      	movs	r7, #1
  HAL_UART_Transmit_IT(&huart1, (uint8_t *)"Send trouble code.",strlen("Send trouble code."));
9000390e:	f008 fef9 	bl	9000c704 <HAL_UART_Transmit_IT>
  HAL_UART_Receive_IT(&huart1,(uint8_t *)data, tc_size);
90003912:	2205      	movs	r2, #5
90003914:	492d      	ldr	r1, [pc, #180]	@ (900039cc <USART_Init_Start+0x134>)
90003916:	482c      	ldr	r0, [pc, #176]	@ (900039c8 <USART_Init_Start+0x130>)
90003918:	f008 ff50 	bl	9000c7bc <HAL_UART_Receive_IT>
  osSemaphoreAcquire(receive_code_sem, HAL_MAX_DELAY);
9000391c:	f04f 31ff 	mov.w	r1, #4294967295
90003920:	6820      	ldr	r0, [r4, #0]
90003922:	f00a fb57 	bl	9000dfd4 <osSemaphoreAcquire>
  isCleanUp= true;
90003926:	4b2a      	ldr	r3, [pc, #168]	@ (900039d0 <USART_Init_Start+0x138>)
90003928:	701f      	strb	r7, [r3, #0]
  osSemaphoreRelease(blink_sem);
9000392a:	4b2a      	ldr	r3, [pc, #168]	@ (900039d4 <USART_Init_Start+0x13c>)
9000392c:	6818      	ldr	r0, [r3, #0]
9000392e:	f00a fb83 	bl	9000e038 <osSemaphoreRelease>
  osDelay(pdMS_TO_TICKS(1000)); //waiting for tasks to exit
90003932:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
90003936:	f00a fae9 	bl	9000df0c <osDelay>
  osMessageQueueDelete(send_task_queue);
9000393a:	6830      	ldr	r0, [r6, #0]
9000393c:	f00a fc6c 	bl	9000e218 <osMessageQueueDelete>
  osMessageQueueDelete(receive_task_queue);
90003940:	6828      	ldr	r0, [r5, #0]
90003942:	f00a fc69 	bl	9000e218 <osMessageQueueDelete>
  osSemaphoreDelete(receive_code_sem);
90003946:	6820      	ldr	r0, [r4, #0]
90003948:	f00a fba0 	bl	9000e08c <osSemaphoreDelete>
  HAL_UART_Abort_IT(&huart1);
9000394c:	481e      	ldr	r0, [pc, #120]	@ (900039c8 <USART_Init_Start+0x130>)
9000394e:	f009 f809 	bl	9000c964 <HAL_UART_Abort_IT>
  //turning off led if left on from blink_handle
  if (HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_13) == GPIO_PIN_RESET){
90003952:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003956:	4820      	ldr	r0, [pc, #128]	@ (900039d8 <USART_Init_Start+0x140>)
90003958:	f003 fed6 	bl	90007708 <HAL_GPIO_ReadPin>
9000395c:	b108      	cbz	r0, 90003962 <USART_Init_Start+0xca>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
  }
  osThreadExit();
9000395e:	f00a facf 	bl	9000df00 <osThreadExit>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003962:	463a      	mov	r2, r7
90003964:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003968:	481b      	ldr	r0, [pc, #108]	@ (900039d8 <USART_Init_Start+0x140>)
9000396a:	f003 fed3 	bl	90007714 <HAL_GPIO_WritePin>
9000396e:	e7f6      	b.n	9000395e <USART_Init_Start+0xc6>
		Error_Handler();
90003970:	f000 fb7e 	bl	90004070 <Error_Handler>
90003974:	e7c7      	b.n	90003906 <USART_Init_Start+0x6e>
90003976:	f000 fb7b 	bl	90004070 <Error_Handler>
9000397a:	e797      	b.n	900038ac <USART_Init_Start+0x14>
9000397c:	f000 fb78 	bl	90004070 <Error_Handler>
90003980:	e79d      	b.n	900038be <USART_Init_Start+0x26>
90003982:	f000 fb75 	bl	90004070 <Error_Handler>
90003986:	e7a3      	b.n	900038d0 <USART_Init_Start+0x38>
90003988:	f000 fb72 	bl	90004070 <Error_Handler>
9000398c:	e7a9      	b.n	900038e2 <USART_Init_Start+0x4a>
9000398e:	f000 fb6f 	bl	90004070 <Error_Handler>
90003992:	e7af      	b.n	900038f4 <USART_Init_Start+0x5c>
90003994:	24007340 	.word	0x24007340
90003998:	2400733c 	.word	0x2400733c
9000399c:	24007338 	.word	0x24007338
900039a0:	9002ce2c 	.word	0x9002ce2c
900039a4:	90003725 	.word	0x90003725
900039a8:	2400734c 	.word	0x2400734c
900039ac:	9002ce08 	.word	0x9002ce08
900039b0:	90003775 	.word	0x90003775
900039b4:	24007348 	.word	0x24007348
900039b8:	9002cde4 	.word	0x9002cde4
900039bc:	900039dd 	.word	0x900039dd
900039c0:	24007344 	.word	0x24007344
900039c4:	9002c47c 	.word	0x9002c47c
900039c8:	240073a4 	.word	0x240073a4
900039cc:	24007350 	.word	0x24007350
900039d0:	24007334 	.word	0x24007334
900039d4:	24007360 	.word	0x24007360
900039d8:	58022000 	.word	0x58022000

900039dc <blk_toggle_led>:
#include "stdbool.h"

osSemaphoreId_t blink_sem;

void blk_toggle_led(){
	blink_sem = osSemaphoreNew(100,0,NULL);
900039dc:	2200      	movs	r2, #0
900039de:	2064      	movs	r0, #100	@ 0x64
900039e0:	4d13      	ldr	r5, [pc, #76]	@ (90003a30 <blk_toggle_led+0x54>)
900039e2:	4611      	mov	r1, r2
	init_error_check(blink_sem);
	while(1){
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
900039e4:	4e13      	ldr	r6, [pc, #76]	@ (90003a34 <blk_toggle_led+0x58>)
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
900039e6:	4c14      	ldr	r4, [pc, #80]	@ (90003a38 <blk_toggle_led+0x5c>)
void blk_toggle_led(){
900039e8:	b508      	push	{r3, lr}
	blink_sem = osSemaphoreNew(100,0,NULL);
900039ea:	f00a fa9d 	bl	9000df28 <osSemaphoreNew>
900039ee:	6028      	str	r0, [r5, #0]
	init_error_check(blink_sem);
900039f0:	f7ff ff4e 	bl	90003890 <init_error_check>
900039f4:	e00f      	b.n	90003a16 <blk_toggle_led+0x3a>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
900039f6:	7833      	ldrb	r3, [r6, #0]
900039f8:	b9a3      	cbnz	r3, 90003a24 <blk_toggle_led+0x48>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
900039fa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
900039fe:	4620      	mov	r0, r4
90003a00:	f003 fe8c 	bl	9000771c <HAL_GPIO_TogglePin>
			osDelay(pdMS_TO_TICKS(1000));
90003a04:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
90003a08:	f00a fa80 	bl	9000df0c <osDelay>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003a0c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003a10:	4620      	mov	r0, r4
90003a12:	f003 fe83 	bl	9000771c <HAL_GPIO_TogglePin>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
90003a16:	f04f 31ff 	mov.w	r1, #4294967295
90003a1a:	6828      	ldr	r0, [r5, #0]
90003a1c:	f00a fada 	bl	9000dfd4 <osSemaphoreAcquire>
90003a20:	2800      	cmp	r0, #0
90003a22:	d0e8      	beq.n	900039f6 <blk_toggle_led+0x1a>
		}else{
			osSemaphoreDelete(blink_sem);
90003a24:	6828      	ldr	r0, [r5, #0]
90003a26:	f00a fb31 	bl	9000e08c <osSemaphoreDelete>
			osThreadExit();
90003a2a:	f00a fa69 	bl	9000df00 <osThreadExit>
90003a2e:	bf00      	nop
90003a30:	24007360 	.word	0x24007360
90003a34:	24007334 	.word	0x24007334
90003a38:	58022000 	.word	0x58022000

90003a3c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003a3c:	4901      	ldr	r1, [pc, #4]	@ (90003a44 <vApplicationIdleHook+0x8>)
90003a3e:	2000      	movs	r0, #0
90003a40:	f00c bc34 	b.w	900102ac <vTaskSetApplicationTaskTag>
90003a44:	90001001 	.word	0x90001001

90003a48 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003a48:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003a4a:	2064      	movs	r0, #100	@ 0x64
90003a4c:	f00a fa5e 	bl	9000df0c <osDelay>
  for(;;)
90003a50:	e7fb      	b.n	90003a4a <StartDefaultTask+0x2>
90003a52:	bf00      	nop

90003a54 <SystemClock_Config>:
{
90003a54:	b570      	push	{r4, r5, r6, lr}
90003a56:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003a58:	224c      	movs	r2, #76	@ 0x4c
90003a5a:	2100      	movs	r1, #0
90003a5c:	a80a      	add	r0, sp, #40	@ 0x28
90003a5e:	f026 fc7b 	bl	9002a358 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003a62:	2220      	movs	r2, #32
90003a64:	2100      	movs	r1, #0
90003a66:	a802      	add	r0, sp, #8
90003a68:	f026 fc76 	bl	9002a358 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003a6c:	2002      	movs	r0, #2
90003a6e:	f006 fbad 	bl	9000a1cc <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003a72:	4a22      	ldr	r2, [pc, #136]	@ (90003afc <SystemClock_Config+0xa8>)
90003a74:	2100      	movs	r1, #0
90003a76:	4b22      	ldr	r3, [pc, #136]	@ (90003b00 <SystemClock_Config+0xac>)
90003a78:	9101      	str	r1, [sp, #4]
90003a7a:	6991      	ldr	r1, [r2, #24]
90003a7c:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003a80:	6191      	str	r1, [r2, #24]
90003a82:	6991      	ldr	r1, [r2, #24]
90003a84:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003a88:	9101      	str	r1, [sp, #4]
90003a8a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003a8c:	f041 0101 	orr.w	r1, r1, #1
90003a90:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003a92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003a94:	f003 0301 	and.w	r3, r3, #1
90003a98:	9301      	str	r3, [sp, #4]
90003a9a:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003a9c:	6993      	ldr	r3, [r2, #24]
90003a9e:	049b      	lsls	r3, r3, #18
90003aa0:	d5fc      	bpl.n	90003a9c <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003aa2:	2401      	movs	r4, #1
90003aa4:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003aa8:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
90003aaa:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
90003aac:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003aae:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003ab0:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003ab2:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ab6:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003ab8:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
90003aba:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003abe:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003ac2:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ac6:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003aca:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003ace:	f006 fc13 	bl	9000a2f8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003ad2:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003ad4:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003ad6:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003ad8:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003ada:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003adc:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003ade:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003ae2:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003ae6:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90003ae8:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003aea:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003aee:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003af2:	f006 ff7d 	bl	9000a9f0 <HAL_RCC_ClockConfig>
}
90003af6:	b01e      	add	sp, #120	@ 0x78
90003af8:	bd70      	pop	{r4, r5, r6, pc}
90003afa:	bf00      	nop
90003afc:	58024800 	.word	0x58024800
90003b00:	58000400 	.word	0x58000400

90003b04 <main>:
{
90003b04:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b06:	2400      	movs	r4, #0
{
90003b08:	b098      	sub	sp, #96	@ 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b0a:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b0c:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b0e:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b10:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003b14:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_MPU_Disable();
90003b18:	f002 fe3c 	bl	90006794 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003b1c:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b20:	4bd2      	ldr	r3, [pc, #840]	@ (90003e6c <main+0x368>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b22:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b24:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b28:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
90003b2c:	4bd0      	ldr	r3, [pc, #832]	@ (90003e70 <main+0x36c>)
90003b2e:	930e      	str	r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b30:	f002 fe4e 	bl	900067d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b34:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b38:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b3a:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b3e:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b40:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003b44:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b48:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b4c:	f002 fe40 	bl	900067d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b50:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b52:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b54:	f8ad 6037 	strh.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b58:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003b5c:	231a      	movs	r3, #26
90003b5e:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003b62:	f240 1301 	movw	r3, #257	@ 0x101
90003b66:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b6a:	f002 fe31 	bl	900067d0 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b6e:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b72:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b74:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003b78:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b7a:	f8ad 3037 	strh.w	r3, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003b7e:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b82:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003b86:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003b88:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b8c:	f002 fe20 	bl	900067d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003b90:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b92:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b94:	f88d 6037 	strb.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003b98:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003b9c:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003ba0:	f88d 503a 	strb.w	r5, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ba4:	f002 fe14 	bl	900067d0 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003ba8:	4620      	mov	r0, r4
90003baa:	f002 fe01 	bl	900067b0 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003bae:	4ab1      	ldr	r2, [pc, #708]	@ (90003e74 <main+0x370>)
90003bb0:	6953      	ldr	r3, [r2, #20]
90003bb2:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003bb6:	d111      	bne.n	90003bdc <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003bb8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bbc:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003bc0:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003bc4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bc8:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003bcc:	6953      	ldr	r3, [r2, #20]
90003bce:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003bd2:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003bd4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bd8:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003bdc:	48a5      	ldr	r0, [pc, #660]	@ (90003e74 <main+0x370>)
90003bde:	6943      	ldr	r3, [r0, #20]
90003be0:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003be4:	d124      	bne.n	90003c30 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003be6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003bea:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003bee:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003bf2:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003bf6:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003bfa:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003bfe:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c00:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003c04:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c06:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003c0a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c0c:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003c10:	1c5a      	adds	r2, r3, #1
90003c12:	d1f8      	bne.n	90003c06 <main+0x102>
    } while(sets-- != 0U);
90003c14:	3c20      	subs	r4, #32
90003c16:	f114 0f20 	cmn.w	r4, #32
90003c1a:	d1f1      	bne.n	90003c00 <main+0xfc>
90003c1c:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003c20:	6943      	ldr	r3, [r0, #20]
90003c22:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003c26:	6143      	str	r3, [r0, #20]
90003c28:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c2c:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003c30:	f002 fcfa 	bl	90006628 <HAL_Init>
  SystemClock_Config();
90003c34:	f7ff ff0e 	bl	90003a54 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003c38:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c3a:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c3c:	4d8e      	ldr	r5, [pc, #568]	@ (90003e78 <main+0x374>)
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003c3e:	2140      	movs	r1, #64	@ 0x40
90003c40:	488e      	ldr	r0, [pc, #568]	@ (90003e7c <main+0x378>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c42:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003c44:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c46:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c48:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = FRAME_RATE_Pin;
90003c4c:	f04f 0840 	mov.w	r8, #64	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003c50:	2708      	movs	r7, #8
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c52:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c56:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003c5a:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c62:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003c66:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c6e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003c72:	9301      	str	r3, [sp, #4]
90003c74:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003c76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c7a:	430b      	orrs	r3, r1
90003c7c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c80:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c84:	400b      	ands	r3, r1
90003c86:	9302      	str	r3, [sp, #8]
90003c88:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003c8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c8e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003c92:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003c9e:	9303      	str	r3, [sp, #12]
90003ca0:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003ca2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ca6:	f043 0310 	orr.w	r3, r3, #16
90003caa:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cae:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cb2:	f003 0310 	and.w	r3, r3, #16
90003cb6:	9304      	str	r3, [sp, #16]
90003cb8:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003cba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cbe:	f043 0302 	orr.w	r3, r3, #2
90003cc2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cca:	f003 0302 	and.w	r3, r3, #2
90003cce:	9305      	str	r3, [sp, #20]
90003cd0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003cd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cd6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003cda:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ce2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003ce6:	9306      	str	r3, [sp, #24]
90003ce8:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003cea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cee:	f043 0308 	orr.w	r3, r3, #8
90003cf2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cfa:	f003 0308 	and.w	r3, r3, #8
90003cfe:	9307      	str	r3, [sp, #28]
90003d00:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003d02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d06:	f043 0301 	orr.w	r3, r3, #1
90003d0a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d12:	f003 0301 	and.w	r3, r3, #1
90003d16:	9308      	str	r3, [sp, #32]
90003d18:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003d1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d1e:	f043 0320 	orr.w	r3, r3, #32
90003d22:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d2a:	f003 0320 	and.w	r3, r3, #32
90003d2e:	9309      	str	r3, [sp, #36]	@ 0x24
90003d30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003d32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d36:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003d3a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003d46:	930a      	str	r3, [sp, #40]	@ 0x28
90003d48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003d4a:	f003 fce3 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003d4e:	4622      	mov	r2, r4
90003d50:	2180      	movs	r1, #128	@ 0x80
90003d52:	484b      	ldr	r0, [pc, #300]	@ (90003e80 <main+0x37c>)
90003d54:	f003 fcde 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003d58:	2201      	movs	r2, #1
90003d5a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003d5e:	4849      	ldr	r0, [pc, #292]	@ (90003e84 <main+0x380>)
90003d60:	f003 fcd8 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003d64:	4622      	mov	r2, r4
90003d66:	2108      	movs	r1, #8
90003d68:	4847      	ldr	r0, [pc, #284]	@ (90003e88 <main+0x384>)
90003d6a:	f003 fcd3 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003d6e:	2201      	movs	r2, #1
90003d70:	4846      	ldr	r0, [pc, #280]	@ (90003e8c <main+0x388>)
90003d72:	4611      	mov	r1, r2
90003d74:	f003 fcce 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003d78:	4622      	mov	r2, r4
90003d7a:	2140      	movs	r1, #64	@ 0x40
90003d7c:	4844      	ldr	r0, [pc, #272]	@ (90003e90 <main+0x38c>)
90003d7e:	f003 fcc9 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003d82:	2201      	movs	r2, #1
90003d84:	2104      	movs	r1, #4
90003d86:	4843      	ldr	r0, [pc, #268]	@ (90003e94 <main+0x390>)
90003d88:	f003 fcc4 	bl	90007714 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
90003d8c:	a90b      	add	r1, sp, #44	@ 0x2c
90003d8e:	483b      	ldr	r0, [pc, #236]	@ (90003e7c <main+0x378>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003d90:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003d94:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003d96:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
90003d9a:	f003 f97f 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003d9e:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003da0:	a90b      	add	r1, sp, #44	@ 0x2c
90003da2:	4837      	ldr	r0, [pc, #220]	@ (90003e80 <main+0x37c>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003da4:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003da6:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003da8:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003dac:	f003 f976 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003db0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003db4:	a90b      	add	r1, sp, #44	@ 0x2c
90003db6:	4833      	ldr	r0, [pc, #204]	@ (90003e84 <main+0x380>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003db8:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dba:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dbc:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003dc0:	f003 f96c 	bl	9000709c <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003dc4:	a90b      	add	r1, sp, #44	@ 0x2c
90003dc6:	4830      	ldr	r0, [pc, #192]	@ (90003e88 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003dc8:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003dcc:	970b      	str	r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dce:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003dd2:	f003 f963 	bl	9000709c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003dd6:	a90b      	add	r1, sp, #44	@ 0x2c
90003dd8:	482c      	ldr	r0, [pc, #176]	@ (90003e8c <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003dda:	e9cd 660b 	strd	r6, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dde:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003de2:	f003 f95b 	bl	9000709c <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003de6:	a90b      	add	r1, sp, #44	@ 0x2c
90003de8:	4829      	ldr	r0, [pc, #164]	@ (90003e90 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003dea:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003dee:	f04f 0904 	mov.w	r9, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003df2:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003df4:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003df8:	f003 f950 	bl	9000709c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003dfc:	a90b      	add	r1, sp, #44	@ 0x2c
90003dfe:	4825      	ldr	r0, [pc, #148]	@ (90003e94 <main+0x390>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e00:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003e02:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e06:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e0a:	f003 f947 	bl	9000709c <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e0e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e12:	4622      	mov	r2, r4
90003e14:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e16:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e18:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e1a:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003e1e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003e22:	4d1d      	ldr	r5, [pc, #116]	@ (90003e98 <main+0x394>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e24:	4033      	ands	r3, r6
90003e26:	9300      	str	r3, [sp, #0]
90003e28:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e2a:	f002 fc57 	bl	900066dc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003e2e:	207a      	movs	r0, #122	@ 0x7a
90003e30:	f002 fc90 	bl	90006754 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003e34:	2234      	movs	r2, #52	@ 0x34
90003e36:	4621      	mov	r1, r4
90003e38:	a80b      	add	r0, sp, #44	@ 0x2c
90003e3a:	f026 fa8d 	bl	9002a358 <memset>
  hltdc.Instance = LTDC;
90003e3e:	4b17      	ldr	r3, [pc, #92]	@ (90003e9c <main+0x398>)
  hltdc.Init.AccumulatedVBP = 11;
90003e40:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003e42:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003e44:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003e46:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003e48:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003e4c:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003e50:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003e52:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003e54:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003e56:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003e5a:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003e5e:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003e62:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003e64:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
90003e68:	e01a      	b.n	90003ea0 <main+0x39c>
90003e6a:	bf00      	nop
90003e6c:	03000012 	.word	0x03000012
90003e70:	01010001 	.word	0x01010001
90003e74:	e000ed00 	.word	0xe000ed00
90003e78:	58024400 	.word	0x58024400
90003e7c:	58020400 	.word	0x58020400
90003e80:	58020c00 	.word	0x58020c00
90003e84:	58022000 	.word	0x58022000
90003e88:	58021800 	.word	0x58021800
90003e8c:	58022800 	.word	0x58022800
90003e90:	58020000 	.word	0x58020000
90003e94:	58022400 	.word	0x58022400
90003e98:	24007438 	.word	0x24007438
90003e9c:	50001000 	.word	0x50001000
  hltdc.Init.TotalHeigh = 285;
90003ea0:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.Alpha = 255;
90003ea4:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003ea6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003eaa:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003eae:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003eb2:	f005 fda7 	bl	90009a04 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003eb6:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003eba:	4622      	mov	r2, r4
90003ebc:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.WindowX1 = 480;
90003ebe:	930c      	str	r3, [sp, #48]	@ 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ec0:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003ec2:	9315      	str	r3, [sp, #84]	@ 0x54
  pLayerCfg.WindowY1 = 272;
90003ec4:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003ec8:	4d50      	ldr	r5, [pc, #320]	@ (9000400c <main+0x508>)
  pLayerCfg.WindowY1 = 272;
90003eca:	930e      	str	r3, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 272;
90003ecc:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Alpha = 255;
90003ece:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003ed0:	940b      	str	r4, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
90003ed2:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Alpha0 = 0;
90003ed4:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.FBStartAdress = 0;
90003ed6:	9414      	str	r4, [sp, #80]	@ 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003ed8:	f8ad 405c 	strh.w	r4, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003edc:	f88d 405e 	strb.w	r4, [sp, #94]	@ 0x5e
  pLayerCfg.Alpha = 255;
90003ee0:	e9cd 730f 	strd	r7, r3, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003ee4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003ee8:	e9cd 3a12 	strd	r3, sl, [sp, #72]	@ 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003eec:	f005 fe48 	bl	90009b80 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003ef0:	4b47      	ldr	r3, [pc, #284]	@ (90004010 <main+0x50c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003ef2:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003ef4:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003ef6:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003ef8:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003efa:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003efe:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003f02:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003f06:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003f0a:	f002 ff87 	bl	90006e1c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f0e:	4631      	mov	r1, r6
90003f10:	4628      	mov	r0, r5
  huart1.Instance = USART1;
90003f12:	4d40      	ldr	r5, [pc, #256]	@ (90004014 <main+0x510>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f14:	f003 f858 	bl	90006fc8 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f18:	483f      	ldr	r0, [pc, #252]	@ (90004018 <main+0x514>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f1a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f1e:	a90b      	add	r1, sp, #44	@ 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003f20:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003f24:	970b      	str	r7, [sp, #44]	@ 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003f26:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003f2a:	f8c0 900c 	str.w	r9, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003f2e:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003f32:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f34:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003f38:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90003f3c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003f3e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003f42:	6243      	str	r3, [r0, #36]	@ 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003f44:	2307      	movs	r3, #7
90003f46:	930c      	str	r3, [sp, #48]	@ 0x30
  SdramTiming.RowCycleDelay = 7;
90003f48:	930e      	str	r3, [sp, #56]	@ 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f4a:	4b34      	ldr	r3, [pc, #208]	@ (9000401c <main+0x518>)
90003f4c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f4e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003f50:	e9cd 7710 	strd	r7, r7, [sp, #64]	@ 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f54:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003f56:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f5a:	f008 f8d9 	bl	9000c110 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f5e:	4a30      	ldr	r2, [pc, #192]	@ (90004020 <main+0x51c>)
  BSP_SDRAM_DeInit(0);
90003f60:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f62:	6813      	ldr	r3, [r2, #0]
90003f64:	f023 0301 	bic.w	r3, r3, #1
90003f68:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003f6a:	f002 f8fb 	bl	90006164 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003f6e:	4620      	mov	r0, r4
90003f70:	f002 f942 	bl	900061f8 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003f74:	f7fc fdd0 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003f78:	4b2a      	ldr	r3, [pc, #168]	@ (90004024 <main+0x520>)
90003f7a:	482b      	ldr	r0, [pc, #172]	@ (90004028 <main+0x524>)
90003f7c:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003f7e:	f004 fc91 	bl	900088a4 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003f82:	482a      	ldr	r0, [pc, #168]	@ (9000402c <main+0x528>)
90003f84:	4b2a      	ldr	r3, [pc, #168]	@ (90004030 <main+0x52c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003f86:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003f88:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003f8a:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003f8c:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003f90:	f002 fc4e 	bl	90006830 <HAL_CRC_Init>
  huart1.Init.Mode = UART_MODE_TX_RX;
90003f94:	230c      	movs	r3, #12
  huart1.Init.BaudRate = 9600;
90003f96:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
  huart1.Instance = USART1;
90003f9a:	4926      	ldr	r1, [pc, #152]	@ (90004034 <main+0x530>)
  if (HAL_UART_Init(&huart1) != HAL_OK)
90003f9c:	4628      	mov	r0, r5
  huart1.Init.BaudRate = 9600;
90003f9e:	e885 0016 	stmia.w	r5, {r1, r2, r4}
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
90003fa2:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart1.Init.Parity = UART_PARITY_NONE;
90003fa6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90003faa:	e9c5 4407 	strd	r4, r4, [r5, #28]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003fae:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
90003fb2:	f009 fd9f 	bl	9000daf4 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fb6:	4621      	mov	r1, r4
90003fb8:	4628      	mov	r0, r5
90003fba:	f009 fdf3 	bl	9000dba4 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fbe:	4621      	mov	r1, r4
90003fc0:	4628      	mov	r0, r5
90003fc2:	f009 fe31 	bl	9000dc28 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
90003fc6:	4628      	mov	r0, r5
90003fc8:	f009 fdce 	bl	9000db68 <HAL_UARTEx_DisableFifoMode>
  MX_TouchGFX_Init();
90003fcc:	f7fc fda8 	bl	90000b20 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003fd0:	f7fc fda4 	bl	90000b1c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003fd4:	f009 ff24 	bl	9000de20 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fd8:	4a17      	ldr	r2, [pc, #92]	@ (90004038 <main+0x534>)
90003fda:	4621      	mov	r1, r4
90003fdc:	4817      	ldr	r0, [pc, #92]	@ (9000403c <main+0x538>)
90003fde:	f009 ff4b 	bl	9000de78 <osThreadNew>
90003fe2:	4b17      	ldr	r3, [pc, #92]	@ (90004040 <main+0x53c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003fe4:	4a17      	ldr	r2, [pc, #92]	@ (90004044 <main+0x540>)
90003fe6:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003fe8:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003fea:	4817      	ldr	r0, [pc, #92]	@ (90004048 <main+0x544>)
90003fec:	f009 ff44 	bl	9000de78 <osThreadNew>
90003ff0:	4b16      	ldr	r3, [pc, #88]	@ (9000404c <main+0x548>)
90003ff2:	4605      	mov	r5, r0
  UARTHandle = osThreadNew(USART_Init_Start, NULL, &UARTTask_attributes);
90003ff4:	4a16      	ldr	r2, [pc, #88]	@ (90004050 <main+0x54c>)
90003ff6:	4621      	mov	r1, r4
90003ff8:	4816      	ldr	r0, [pc, #88]	@ (90004054 <main+0x550>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003ffa:	601d      	str	r5, [r3, #0]
  UARTHandle = osThreadNew(USART_Init_Start, NULL, &UARTTask_attributes);
90003ffc:	f009 ff3c 	bl	9000de78 <osThreadNew>
90004000:	4b15      	ldr	r3, [pc, #84]	@ (90004058 <main+0x554>)
90004002:	6018      	str	r0, [r3, #0]
  osKernelStart();
90004004:	f009 ff1e 	bl	9000de44 <osKernelStart>
  while (1)
90004008:	e7fe      	b.n	90004008 <main+0x504>
9000400a:	bf00      	nop
9000400c:	24007610 	.word	0x24007610
90004010:	52001000 	.word	0x52001000
90004014:	240073a4 	.word	0x240073a4
90004018:	24007370 	.word	0x24007370
9000401c:	52004140 	.word	0x52004140
90004020:	52004000 	.word	0x52004000
90004024:	52003000 	.word	0x52003000
90004028:	240075b8 	.word	0x240075b8
9000402c:	24007678 	.word	0x24007678
90004030:	58024c00 	.word	0x58024c00
90004034:	40011000 	.word	0x40011000
90004038:	9002ce98 	.word	0x9002ce98
9000403c:	90003a49 	.word	0x90003a49
90004040:	2400736c 	.word	0x2400736c
90004044:	9002ce74 	.word	0x9002ce74
90004048:	90000b31 	.word	0x90000b31
9000404c:	24007368 	.word	0x24007368
90004050:	9002ce50 	.word	0x9002ce50
90004054:	90003899 	.word	0x90003899
90004058:	24007364 	.word	0x24007364

9000405c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
9000405c:	4b03      	ldr	r3, [pc, #12]	@ (9000406c <HAL_TIM_PeriodElapsedCallback+0x10>)
9000405e:	6802      	ldr	r2, [r0, #0]
90004060:	429a      	cmp	r2, r3
90004062:	d000      	beq.n	90004066 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90004064:	4770      	bx	lr
    HAL_IncTick();
90004066:	f002 bb0f 	b.w	90006688 <HAL_IncTick>
9000406a:	bf00      	nop
9000406c:	40001000 	.word	0x40001000

90004070 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004070:	4770      	bx	lr
90004072:	bf00      	nop

90004074 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004074:	4b0b      	ldr	r3, [pc, #44]	@ (900040a4 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004076:	2200      	movs	r2, #0
90004078:	210f      	movs	r1, #15
9000407a:	f06f 0001 	mvn.w	r0, #1
{
9000407e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004080:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90004084:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004086:	f044 0402 	orr.w	r4, r4, #2
9000408a:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
9000408e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90004092:	f003 0302 	and.w	r3, r3, #2
90004096:	9301      	str	r3, [sp, #4]
90004098:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
9000409a:	b003      	add	sp, #12
9000409c:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900040a0:	f002 bb1c 	b.w	900066dc <HAL_NVIC_SetPriority>
900040a4:	58024400 	.word	0x58024400

900040a8 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900040a8:	4b0a      	ldr	r3, [pc, #40]	@ (900040d4 <HAL_CRC_MspInit+0x2c>)
900040aa:	6802      	ldr	r2, [r0, #0]
900040ac:	429a      	cmp	r2, r3
900040ae:	d000      	beq.n	900040b2 <HAL_CRC_MspInit+0xa>
900040b0:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900040b2:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
900040b6:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900040b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040bc:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
900040c0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900040c4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900040c8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
900040cc:	9301      	str	r3, [sp, #4]
900040ce:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
900040d0:	b002      	add	sp, #8
900040d2:	4770      	bx	lr
900040d4:	58024c00 	.word	0x58024c00

900040d8 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900040d8:	4b0f      	ldr	r3, [pc, #60]	@ (90004118 <HAL_DMA2D_MspInit+0x40>)
900040da:	6802      	ldr	r2, [r0, #0]
900040dc:	429a      	cmp	r2, r3
900040de:	d000      	beq.n	900040e2 <HAL_DMA2D_MspInit+0xa>
900040e0:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900040e2:	4b0e      	ldr	r3, [pc, #56]	@ (9000411c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900040e4:	2200      	movs	r2, #0
900040e6:	2105      	movs	r1, #5
900040e8:	205a      	movs	r0, #90	@ 0x5a
{
900040ea:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
900040ec:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
900040f0:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
900040f2:	f044 0410 	orr.w	r4, r4, #16
900040f6:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
900040fa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900040fe:	f003 0310 	and.w	r3, r3, #16
90004102:	9301      	str	r3, [sp, #4]
90004104:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004106:	f002 fae9 	bl	900066dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000410a:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
9000410c:	b002      	add	sp, #8
9000410e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004112:	f002 bb1f 	b.w	90006754 <HAL_NVIC_EnableIRQ>
90004116:	bf00      	nop
90004118:	52001000 	.word	0x52001000
9000411c:	58024400 	.word	0x58024400

90004120 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004120:	4b3f      	ldr	r3, [pc, #252]	@ (90004220 <HAL_JPEG_MspInit+0x100>)
90004122:	6802      	ldr	r2, [r0, #0]
90004124:	429a      	cmp	r2, r3
90004126:	d000      	beq.n	9000412a <HAL_JPEG_MspInit+0xa>
90004128:	4770      	bx	lr
{
9000412a:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
9000412c:	4b3d      	ldr	r3, [pc, #244]	@ (90004224 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000412e:	2211      	movs	r2, #17
90004130:	4e3d      	ldr	r6, [pc, #244]	@ (90004228 <HAL_JPEG_MspInit+0x108>)
{
90004132:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004134:	4d3d      	ldr	r5, [pc, #244]	@ (9000422c <HAL_JPEG_MspInit+0x10c>)
90004136:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004138:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000413a:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
9000413c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004140:	493b      	ldr	r1, [pc, #236]	@ (90004230 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004142:	f042 0220 	orr.w	r2, r2, #32
90004146:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000414a:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
9000414c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004150:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004152:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004156:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004158:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000415a:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
9000415c:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000415e:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004160:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004164:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004168:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000416a:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
9000416c:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004170:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004174:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004176:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
9000417a:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
9000417e:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004182:	2313      	movs	r3, #19
90004184:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90004186:	2302      	movs	r3, #2
90004188:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000418a:	f005 fddd 	bl	90009d48 <HAL_MDMA_Init>
9000418e:	2800      	cmp	r0, #0
90004190:	d13a      	bne.n	90004208 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004192:	2200      	movs	r2, #0
90004194:	4824      	ldr	r0, [pc, #144]	@ (90004228 <HAL_JPEG_MspInit+0x108>)
90004196:	4611      	mov	r1, r2
90004198:	f005 fe74 	bl	90009e84 <HAL_MDMA_ConfigPostRequestMask>
9000419c:	2800      	cmp	r0, #0
9000419e:	d13c      	bne.n	9000421a <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041a0:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041a2:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041a4:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041a6:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041a8:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900041aa:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041ac:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041b0:	4920      	ldr	r1, [pc, #128]	@ (90004234 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041b2:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900041b4:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
900041b6:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041b8:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041ba:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900041be:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041c2:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041c4:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041c6:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041ca:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041cc:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041d0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041d4:	4815      	ldr	r0, [pc, #84]	@ (9000422c <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041d6:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041d8:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041da:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041dc:	f005 fdb4 	bl	90009d48 <HAL_MDMA_Init>
900041e0:	b9c0      	cbnz	r0, 90004214 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900041e2:	2200      	movs	r2, #0
900041e4:	4811      	ldr	r0, [pc, #68]	@ (9000422c <HAL_JPEG_MspInit+0x10c>)
900041e6:	4611      	mov	r1, r2
900041e8:	f005 fe4c 	bl	90009e84 <HAL_MDMA_ConfigPostRequestMask>
900041ec:	b978      	cbnz	r0, 9000420e <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900041ee:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900041f0:	2200      	movs	r2, #0
900041f2:	2105      	movs	r1, #5
900041f4:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900041f6:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900041f8:	f002 fa70 	bl	900066dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900041fc:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
900041fe:	b002      	add	sp, #8
90004200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004204:	f002 baa6 	b.w	90006754 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90004208:	f7ff ff32 	bl	90004070 <Error_Handler>
9000420c:	e7c1      	b.n	90004192 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
9000420e:	f7ff ff2f 	bl	90004070 <Error_Handler>
90004212:	e7ec      	b.n	900041ee <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004214:	f7ff ff2c 	bl	90004070 <Error_Handler>
90004218:	e7e3      	b.n	900041e2 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000421a:	f7ff ff29 	bl	90004070 <Error_Handler>
9000421e:	e7bf      	b.n	900041a0 <HAL_JPEG_MspInit+0x80>
90004220:	52003000 	.word	0x52003000
90004224:	58024400 	.word	0x58024400
90004228:	2400754c 	.word	0x2400754c
9000422c:	240074e0 	.word	0x240074e0
90004230:	52000200 	.word	0x52000200
90004234:	520001c0 	.word	0x520001c0

90004238 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90004238:	b570      	push	{r4, r5, r6, lr}
9000423a:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000423c:	2100      	movs	r1, #0
{
9000423e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004240:	22c0      	movs	r2, #192	@ 0xc0
90004242:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004244:	9109      	str	r1, [sp, #36]	@ 0x24
90004246:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000424a:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000424e:	f026 f883 	bl	9002a358 <memset>
  if(hltdc->Instance==LTDC)
90004252:	4b4a      	ldr	r3, [pc, #296]	@ (9000437c <HAL_LTDC_MspInit+0x144>)
90004254:	6822      	ldr	r2, [r4, #0]
90004256:	429a      	cmp	r2, r3
90004258:	d001      	beq.n	9000425e <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
9000425a:	b03a      	add	sp, #232	@ 0xe8
9000425c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000425e:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004260:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004262:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90004266:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004268:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000426a:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000426c:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000426e:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004270:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004272:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004276:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004278:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000427a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000427e:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004282:	f006 febb 	bl	9000affc <HAL_RCCEx_PeriphCLKConfig>
90004286:	2800      	cmp	r0, #0
90004288:	d174      	bne.n	90004374 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000428a:	4b3d      	ldr	r3, [pc, #244]	@ (90004380 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000428c:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000428e:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004290:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
90004292:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004296:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004298:	483a      	ldr	r0, [pc, #232]	@ (90004384 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000429a:	f042 0208 	orr.w	r2, r2, #8
9000429e:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
900042a2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
900042a6:	f002 0208 	and.w	r2, r2, #8
900042aa:	9200      	str	r2, [sp, #0]
900042ac:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900042ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042b2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900042b6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042be:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900042c2:	9201      	str	r2, [sp, #4]
900042c4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900042c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042ca:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
900042ce:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042d6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900042da:	9202      	str	r2, [sp, #8]
900042dc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900042de:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042e2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
900042e6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042ea:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042ee:	f402 7200 	and.w	r2, r2, #512	@ 0x200
900042f2:	9203      	str	r2, [sp, #12]
900042f4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900042f6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042fa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900042fe:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004302:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004306:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004308:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000430a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000430e:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004310:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004312:	9304      	str	r3, [sp, #16]
90004314:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004316:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000431a:	f002 febf 	bl	9000709c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000431e:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004322:	a905      	add	r1, sp, #20
90004324:	4818      	ldr	r0, [pc, #96]	@ (90004388 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004326:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004328:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000432c:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004330:	f002 feb4 	bl	9000709c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004334:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004338:	a905      	add	r1, sp, #20
9000433a:	4814      	ldr	r0, [pc, #80]	@ (9000438c <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000433c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000433e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004342:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004346:	f002 fea9 	bl	9000709c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000434a:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000434e:	a905      	add	r1, sp, #20
90004350:	480f      	ldr	r0, [pc, #60]	@ (90004390 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004352:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004354:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004358:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000435c:	f002 fe9e 	bl	9000709c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004360:	462a      	mov	r2, r5
90004362:	2105      	movs	r1, #5
90004364:	2058      	movs	r0, #88	@ 0x58
90004366:	f002 f9b9 	bl	900066dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000436a:	2058      	movs	r0, #88	@ 0x58
9000436c:	f002 f9f2 	bl	90006754 <HAL_NVIC_EnableIRQ>
}
90004370:	b03a      	add	sp, #232	@ 0xe8
90004372:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004374:	f7ff fe7c 	bl	90004070 <Error_Handler>
90004378:	e787      	b.n	9000428a <HAL_LTDC_MspInit+0x52>
9000437a:	bf00      	nop
9000437c:	50001000 	.word	0x50001000
90004380:	58024400 	.word	0x58024400
90004384:	58022800 	.word	0x58022800
90004388:	58022000 	.word	0x58022000
9000438c:	58022400 	.word	0x58022400
90004390:	58021c00 	.word	0x58021c00

90004394 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004394:	b5d0      	push	{r4, r6, r7, lr}
90004396:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004398:	2100      	movs	r1, #0
{
9000439a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000439c:	22c0      	movs	r2, #192	@ 0xc0
9000439e:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900043a0:	9108      	str	r1, [sp, #32]
900043a2:	e9cd 1104 	strd	r1, r1, [sp, #16]
900043a6:	e9cd 1106 	strd	r1, r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900043aa:	f025 ffd5 	bl	9002a358 <memset>
  if(huart->Instance==USART1)
900043ae:	4b2d      	ldr	r3, [pc, #180]	@ (90004464 <HAL_UART_MspInit+0xd0>)
900043b0:	6822      	ldr	r2, [r4, #0]
900043b2:	429a      	cmp	r2, r3
900043b4:	d001      	beq.n	900043ba <HAL_UART_MspInit+0x26>

    /* USER CODE END USART1_MspInit 1 */

  }

}
900043b6:	b03a      	add	sp, #232	@ 0xe8
900043b8:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900043ba:	2201      	movs	r2, #1
900043bc:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043be:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900043c0:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043c4:	f006 fe1a 	bl	9000affc <HAL_RCCEx_PeriphCLKConfig>
900043c8:	2800      	cmp	r0, #0
900043ca:	d148      	bne.n	9000445e <HAL_UART_MspInit+0xca>
    __HAL_RCC_USART1_CLK_ENABLE();
900043cc:	4b26      	ldr	r3, [pc, #152]	@ (90004468 <HAL_UART_MspInit+0xd4>)
    GPIO_InitStruct.Pin = GPIO_PIN_7;
900043ce:	2080      	movs	r0, #128	@ 0x80
900043d0:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
900043d2:	2407      	movs	r4, #7
    __HAL_RCC_USART1_CLK_ENABLE();
900043d4:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
    GPIO_InitStruct.Pin = GPIO_PIN_7;
900043d8:	2600      	movs	r6, #0
900043da:	2700      	movs	r7, #0
    __HAL_RCC_USART1_CLK_ENABLE();
900043dc:	f042 0210 	orr.w	r2, r2, #16
900043e0:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
900043e4:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
900043e8:	f002 0210 	and.w	r2, r2, #16
900043ec:	9201      	str	r2, [sp, #4]
900043ee:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900043f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043f4:	f042 0202 	orr.w	r2, r2, #2
900043f8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900043fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004400:	f002 0202 	and.w	r2, r2, #2
90004404:	9202      	str	r2, [sp, #8]
90004406:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004408:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000440c:	f042 0201 	orr.w	r2, r2, #1
90004410:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004414:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90004418:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
9000441a:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_7;
9000441e:	e9cd 0104 	strd	r0, r1, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004422:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004424:	a904      	add	r1, sp, #16
90004426:	4811      	ldr	r0, [pc, #68]	@ (9000446c <HAL_UART_MspInit+0xd8>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004428:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
9000442a:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000442e:	f002 fe35 	bl	9000709c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004432:	2302      	movs	r3, #2
90004434:	f44f 7200 	mov.w	r2, #512	@ 0x200
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90004438:	a904      	add	r1, sp, #16
9000443a:	480d      	ldr	r0, [pc, #52]	@ (90004470 <HAL_UART_MspInit+0xdc>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
9000443c:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000443e:	e9cd 2304 	strd	r2, r3, [sp, #16]
90004442:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90004446:	f002 fe29 	bl	9000709c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
9000444a:	2200      	movs	r2, #0
9000444c:	2105      	movs	r1, #5
9000444e:	2025      	movs	r0, #37	@ 0x25
90004450:	f002 f944 	bl	900066dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
90004454:	2025      	movs	r0, #37	@ 0x25
90004456:	f002 f97d 	bl	90006754 <HAL_NVIC_EnableIRQ>
}
9000445a:	b03a      	add	sp, #232	@ 0xe8
9000445c:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000445e:	f7ff fe07 	bl	90004070 <Error_Handler>
90004462:	e7b3      	b.n	900043cc <HAL_UART_MspInit+0x38>
90004464:	40011000 	.word	0x40011000
90004468:	58024400 	.word	0x58024400
9000446c:	58020400 	.word	0x58020400
90004470:	58020000 	.word	0x58020000

90004474 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004474:	4836      	ldr	r0, [pc, #216]	@ (90004550 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004476:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004478:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000447a:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000447c:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000447e:	e9cd 3302 	strd	r3, r3, [sp, #8]
90004482:	e9cd 3304 	strd	r3, r3, [sp, #16]
90004486:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004488:	b109      	cbz	r1, 9000448e <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000448a:	b038      	add	sp, #224	@ 0xe0
9000448c:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000448e:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004490:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
90004492:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004494:	a80a      	add	r0, sp, #40	@ 0x28
90004496:	f025 ff5f 	bl	9002a358 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000449a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000449e:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044a0:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900044a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044a6:	f006 fda9 	bl	9000affc <HAL_RCCEx_PeriphCLKConfig>
900044aa:	2800      	cmp	r0, #0
900044ac:	d14c      	bne.n	90004548 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900044ae:	4b29      	ldr	r3, [pc, #164]	@ (90004554 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044b0:	f64f 7083 	movw	r0, #65411	@ 0xff83
900044b4:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900044b6:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900044b8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044bc:	2600      	movs	r6, #0
900044be:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900044c0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900044c4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900044c8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900044cc:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900044ce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044d2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900044d6:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900044d8:	a902      	add	r1, sp, #8
900044da:	481f      	ldr	r0, [pc, #124]	@ (90004558 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900044dc:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044de:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900044e2:	f002 fddb 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900044e6:	f248 1233 	movw	r2, #33075	@ 0x8133
900044ea:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900044ec:	a902      	add	r1, sp, #8
900044ee:	481b      	ldr	r0, [pc, #108]	@ (9000455c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900044f0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900044f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900044f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900044fa:	f002 fdcf 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900044fe:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004502:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004504:	a902      	add	r1, sp, #8
90004506:	4816      	ldr	r0, [pc, #88]	@ (90004560 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004508:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000450a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000450e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004512:	f002 fdc3 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004516:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000451a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000451c:	a902      	add	r1, sp, #8
9000451e:	4811      	ldr	r0, [pc, #68]	@ (90004564 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004520:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004522:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004526:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000452a:	f002 fdb7 	bl	9000709c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000452e:	22e0      	movs	r2, #224	@ 0xe0
90004530:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004532:	a902      	add	r1, sp, #8
90004534:	480c      	ldr	r0, [pc, #48]	@ (90004568 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004536:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004538:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000453c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004540:	f002 fdac 	bl	9000709c <HAL_GPIO_Init>
}
90004544:	b038      	add	sp, #224	@ 0xe0
90004546:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004548:	f7ff fd92 	bl	90004070 <Error_Handler>
9000454c:	e7af      	b.n	900044ae <HAL_SDRAM_MspInit+0x3a>
9000454e:	bf00      	nop
90004550:	240076a0 	.word	0x240076a0
90004554:	58024400 	.word	0x58024400
90004558:	58021000 	.word	0x58021000
9000455c:	58021800 	.word	0x58021800
90004560:	58020c00 	.word	0x58020c00
90004564:	58021400 	.word	0x58021400
90004568:	58021c00 	.word	0x58021c00

9000456c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
9000456c:	4b13      	ldr	r3, [pc, #76]	@ (900045bc <HAL_SDRAM_MspDeInit+0x50>)
9000456e:	681a      	ldr	r2, [r3, #0]
90004570:	b102      	cbz	r2, 90004574 <HAL_SDRAM_MspDeInit+0x8>
90004572:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004574:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90004576:	4a12      	ldr	r2, [pc, #72]	@ (900045c0 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004578:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000457a:	f64f 7183 	movw	r1, #65411	@ 0xff83
9000457e:	4811      	ldr	r0, [pc, #68]	@ (900045c4 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90004580:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90004582:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90004586:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000458a:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000458e:	f002 ff8b 	bl	900074a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004592:	f248 1133 	movw	r1, #33075	@ 0x8133
90004596:	480c      	ldr	r0, [pc, #48]	@ (900045c8 <HAL_SDRAM_MspDeInit+0x5c>)
90004598:	f002 ff86 	bl	900074a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000459c:	f24c 7103 	movw	r1, #50947	@ 0xc703
900045a0:	480a      	ldr	r0, [pc, #40]	@ (900045cc <HAL_SDRAM_MspDeInit+0x60>)
900045a2:	f002 ff81 	bl	900074a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900045a6:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900045aa:	4809      	ldr	r0, [pc, #36]	@ (900045d0 <HAL_SDRAM_MspDeInit+0x64>)
900045ac:	f002 ff7c 	bl	900074a8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900045b0:	21e0      	movs	r1, #224	@ 0xe0
900045b2:	4808      	ldr	r0, [pc, #32]	@ (900045d4 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900045b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900045b8:	f002 bf76 	b.w	900074a8 <HAL_GPIO_DeInit>
900045bc:	2400769c 	.word	0x2400769c
900045c0:	58024400 	.word	0x58024400
900045c4:	58021000 	.word	0x58021000
900045c8:	58021800 	.word	0x58021800
900045cc:	58020c00 	.word	0x58020c00
900045d0:	58021400 	.word	0x58021400
900045d4:	58021c00 	.word	0x58021c00

900045d8 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900045d8:	280f      	cmp	r0, #15
900045da:	d901      	bls.n	900045e0 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900045dc:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900045de:	4770      	bx	lr
{
900045e0:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900045e2:	4601      	mov	r1, r0
{
900045e4:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900045e6:	2200      	movs	r2, #0
900045e8:	4604      	mov	r4, r0
900045ea:	2036      	movs	r0, #54	@ 0x36
900045ec:	f002 f876 	bl	900066dc <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900045f0:	2036      	movs	r0, #54	@ 0x36
900045f2:	f002 f8af 	bl	90006754 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900045f6:	4b1b      	ldr	r3, [pc, #108]	@ (90004664 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
900045f8:	4a1b      	ldr	r2, [pc, #108]	@ (90004668 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900045fa:	4669      	mov	r1, sp
900045fc:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
900045fe:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004600:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004604:	f042 0210 	orr.w	r2, r2, #16
90004608:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000460c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004610:	f003 0310 	and.w	r3, r3, #16
90004614:	9301      	str	r3, [sp, #4]
90004616:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004618:	f006 fbe4 	bl	9000ade4 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000461c:	9b07      	ldr	r3, [sp, #28]
9000461e:	b9c3      	cbnz	r3, 90004652 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004620:	f006 fb50 	bl	9000acc4 <HAL_RCC_GetPCLK1Freq>
90004624:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004626:	4911      	ldr	r1, [pc, #68]	@ (9000466c <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004628:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000462a:	4c11      	ldr	r4, [pc, #68]	@ (90004670 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000462c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004630:	4d10      	ldr	r5, [pc, #64]	@ (90004674 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004632:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004636:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004638:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000463a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000463c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000463e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004640:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004644:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004646:	f007 fdd5 	bl	9000c1f4 <HAL_TIM_Base_Init>
9000464a:	b130      	cbz	r0, 9000465a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000464c:	2001      	movs	r0, #1
}
9000464e:	b00b      	add	sp, #44	@ 0x2c
90004650:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004652:	f006 fb37 	bl	9000acc4 <HAL_RCC_GetPCLK1Freq>
90004656:	0043      	lsls	r3, r0, #1
90004658:	e7e5      	b.n	90004626 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000465a:	4620      	mov	r0, r4
9000465c:	f007 fe70 	bl	9000c340 <HAL_TIM_Base_Start_IT>
90004660:	e7f5      	b.n	9000464e <HAL_InitTick+0x76>
90004662:	bf00      	nop
90004664:	58024400 	.word	0x58024400
90004668:	24000080 	.word	0x24000080
9000466c:	431bde83 	.word	0x431bde83
90004670:	240076a4 	.word	0x240076a4
90004674:	40001000 	.word	0x40001000

90004678 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004678:	4770      	bx	lr
9000467a:	bf00      	nop

9000467c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000467c:	e7fe      	b.n	9000467c <HardFault_Handler>
9000467e:	bf00      	nop

90004680 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90004680:	e7fe      	b.n	90004680 <MemManage_Handler>
90004682:	bf00      	nop

90004684 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004684:	e7fe      	b.n	90004684 <BusFault_Handler>
90004686:	bf00      	nop

90004688 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004688:	e7fe      	b.n	90004688 <UsageFault_Handler>
9000468a:	bf00      	nop

9000468c <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
9000468c:	4770      	bx	lr
9000468e:	bf00      	nop

90004690 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
90004690:	4801      	ldr	r0, [pc, #4]	@ (90004698 <USART1_IRQHandler+0x8>)
90004692:	f008 ba61 	b.w	9000cb58 <HAL_UART_IRQHandler>
90004696:	bf00      	nop
90004698:	240073a4 	.word	0x240073a4

9000469c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
9000469c:	4801      	ldr	r0, [pc, #4]	@ (900046a4 <TIM6_DAC_IRQHandler+0x8>)
9000469e:	f007 bea9 	b.w	9000c3f4 <HAL_TIM_IRQHandler>
900046a2:	bf00      	nop
900046a4:	240076a4 	.word	0x240076a4

900046a8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900046a8:	4801      	ldr	r0, [pc, #4]	@ (900046b0 <LTDC_IRQHandler+0x8>)
900046aa:	f005 ba07 	b.w	90009abc <HAL_LTDC_IRQHandler>
900046ae:	bf00      	nop
900046b0:	24007438 	.word	0x24007438

900046b4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900046b4:	4801      	ldr	r0, [pc, #4]	@ (900046bc <DMA2D_IRQHandler+0x8>)
900046b6:	f002 bbf3 	b.w	90006ea0 <HAL_DMA2D_IRQHandler>
900046ba:	bf00      	nop
900046bc:	24007610 	.word	0x24007610

900046c0 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900046c0:	4801      	ldr	r0, [pc, #4]	@ (900046c8 <JPEG_IRQHandler+0x8>)
900046c2:	f005 b8ff 	b.w	900098c4 <HAL_JPEG_IRQHandler>
900046c6:	bf00      	nop
900046c8:	240075b8 	.word	0x240075b8

900046cc <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900046cc:	4804      	ldr	r0, [pc, #16]	@ (900046e0 <MDMA_IRQHandler+0x14>)
{
900046ce:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900046d0:	f005 fcbe 	bl	9000a050 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900046d4:	4803      	ldr	r0, [pc, #12]	@ (900046e4 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900046d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900046da:	f005 bcb9 	b.w	9000a050 <HAL_MDMA_IRQHandler>
900046de:	bf00      	nop
900046e0:	240074e0 	.word	0x240074e0
900046e4:	2400754c 	.word	0x2400754c

900046e8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900046e8:	2001      	movs	r0, #1
900046ea:	4770      	bx	lr

900046ec <_kill>:

int _kill(int pid, int sig)
{
900046ec:	b508      	push	{r3, lr}
	errno = EINVAL;
900046ee:	f025 ff45 	bl	9002a57c <__errno>
900046f2:	2216      	movs	r2, #22
900046f4:	4603      	mov	r3, r0
	return -1;
}
900046f6:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900046fa:	601a      	str	r2, [r3, #0]
}
900046fc:	bd08      	pop	{r3, pc}
900046fe:	bf00      	nop

90004700 <_exit>:

void _exit (int status)
{
90004700:	b508      	push	{r3, lr}
	errno = EINVAL;
90004702:	f025 ff3b 	bl	9002a57c <__errno>
90004706:	2316      	movs	r3, #22
90004708:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000470a:	e7fe      	b.n	9000470a <_exit+0xa>

9000470c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
9000470c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000470e:	1e16      	subs	r6, r2, #0
90004710:	dd07      	ble.n	90004722 <_read+0x16>
90004712:	460c      	mov	r4, r1
90004714:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004716:	f3af 8000 	nop.w
9000471a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000471e:	42a5      	cmp	r5, r4
90004720:	d1f9      	bne.n	90004716 <_read+0xa>
	}

return len;
}
90004722:	4630      	mov	r0, r6
90004724:	bd70      	pop	{r4, r5, r6, pc}
90004726:	bf00      	nop

90004728 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004728:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000472a:	1e16      	subs	r6, r2, #0
9000472c:	dd07      	ble.n	9000473e <_write+0x16>
9000472e:	460c      	mov	r4, r1
90004730:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004732:	f814 0b01 	ldrb.w	r0, [r4], #1
90004736:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000473a:	42a5      	cmp	r5, r4
9000473c:	d1f9      	bne.n	90004732 <_write+0xa>
	}
	return len;
}
9000473e:	4630      	mov	r0, r6
90004740:	bd70      	pop	{r4, r5, r6, pc}
90004742:	bf00      	nop

90004744 <_close>:

int _close(int file)
{
	return -1;
}
90004744:	f04f 30ff 	mov.w	r0, #4294967295
90004748:	4770      	bx	lr
9000474a:	bf00      	nop

9000474c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
9000474c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004750:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004752:	604b      	str	r3, [r1, #4]
}
90004754:	4770      	bx	lr
90004756:	bf00      	nop

90004758 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004758:	2001      	movs	r0, #1
9000475a:	4770      	bx	lr

9000475c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
9000475c:	2000      	movs	r0, #0
9000475e:	4770      	bx	lr

90004760 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004760:	4a0c      	ldr	r2, [pc, #48]	@ (90004794 <_sbrk+0x34>)
{
90004762:	b508      	push	{r3, lr}
90004764:	4603      	mov	r3, r0
	if (heap_end == 0)
90004766:	6810      	ldr	r0, [r2, #0]
90004768:	b128      	cbz	r0, 90004776 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000476a:	4403      	add	r3, r0
9000476c:	4669      	mov	r1, sp
9000476e:	428b      	cmp	r3, r1
90004770:	d808      	bhi.n	90004784 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004772:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004774:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004776:	4908      	ldr	r1, [pc, #32]	@ (90004798 <_sbrk+0x38>)
90004778:	4608      	mov	r0, r1
9000477a:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
9000477c:	4669      	mov	r1, sp
9000477e:	4403      	add	r3, r0
90004780:	428b      	cmp	r3, r1
90004782:	d9f6      	bls.n	90004772 <_sbrk+0x12>
		errno = ENOMEM;
90004784:	f025 fefa 	bl	9002a57c <__errno>
90004788:	220c      	movs	r2, #12
9000478a:	4603      	mov	r3, r0
		return (caddr_t) -1;
9000478c:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004790:	601a      	str	r2, [r3, #0]
}
90004792:	bd08      	pop	{r3, pc}
90004794:	240076f0 	.word	0x240076f0
90004798:	24022588 	.word	0x24022588

9000479c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000479c:	4770      	bx	lr
9000479e:	bf00      	nop

900047a0 <_ZN23ApplicationFontProviderD0Ev>:
900047a0:	b510      	push	{r4, lr}
900047a2:	4604      	mov	r4, r0
900047a4:	2104      	movs	r1, #4
900047a6:	f024 ffc3 	bl	90029730 <_ZdlPvj>
900047aa:	4620      	mov	r0, r4
900047ac:	bd10      	pop	{r4, pc}
900047ae:	bf00      	nop

900047b0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900047b0:	2901      	cmp	r1, #1
{
900047b2:	b508      	push	{r3, lr}
    switch (typography)
900047b4:	d00c      	beq.n	900047d0 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900047b6:	2902      	cmp	r1, #2
900047b8:	d004      	beq.n	900047c4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
900047ba:	b939      	cbnz	r1, 900047cc <_ZN23ApplicationFontProvider7getFontEt+0x1c>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900047bc:	f000 fd72 	bl	900052a4 <_ZN17TypedTextDatabase8getFontsEv>
900047c0:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900047c2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900047c4:	f000 fd6e 	bl	900052a4 <_ZN17TypedTextDatabase8getFontsEv>
900047c8:	6880      	ldr	r0, [r0, #8]
}
900047ca:	bd08      	pop	{r3, pc}
    switch (typography)
900047cc:	2000      	movs	r0, #0
}
900047ce:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900047d0:	f000 fd68 	bl	900052a4 <_ZN17TypedTextDatabase8getFontsEv>
900047d4:	6840      	ldr	r0, [r0, #4]
}
900047d6:	bd08      	pop	{r3, pc}

900047d8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900047d8:	4800      	ldr	r0, [pc, #0]	@ (900047dc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900047da:	4770      	bx	lr
900047dc:	9002ced0 	.word	0x9002ced0

900047e0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900047e0:	2003      	movs	r0, #3
900047e2:	4770      	bx	lr

900047e4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900047e4:	b169      	cbz	r1, 90004802 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900047e6:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900047e8:	b530      	push	{r4, r5, lr}
900047ea:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900047ec:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900047ee:	6895      	ldr	r5, [r2, #8]
900047f0:	f10d 0303 	add.w	r3, sp, #3
900047f4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900047f6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900047f8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900047fc:	47a8      	blx	r5
        return glyph;
    }
900047fe:	b003      	add	sp, #12
90004800:	bd30      	pop	{r4, r5, pc}
            return 0;
90004802:	4608      	mov	r0, r1
    }
90004804:	4770      	bx	lr
90004806:	bf00      	nop

90004808 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004808:	89c0      	ldrh	r0, [r0, #14]
9000480a:	4770      	bx	lr

9000480c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
9000480c:	8a00      	ldrh	r0, [r0, #16]
9000480e:	4770      	bx	lr

90004810 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004810:	88c0      	ldrh	r0, [r0, #6]
90004812:	4770      	bx	lr

90004814 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004814:	8880      	ldrh	r0, [r0, #4]
90004816:	4770      	bx	lr

90004818 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004818:	7a80      	ldrb	r0, [r0, #10]
    }
9000481a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
9000481e:	4770      	bx	lr

90004820 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004820:	7a80      	ldrb	r0, [r0, #10]
    }
90004822:	09c0      	lsrs	r0, r0, #7
90004824:	4770      	bx	lr
90004826:	bf00      	nop

90004828 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004828:	2000      	movs	r0, #0
9000482a:	4770      	bx	lr

9000482c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
9000482c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004834 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004830:	4770      	bx	lr
90004832:	bf00      	nop
90004834:	00000000 	.word	0x00000000

90004838 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004838:	4770      	bx	lr
9000483a:	bf00      	nop

9000483c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
9000483c:	b510      	push	{r4, lr}
9000483e:	4604      	mov	r4, r0
    }
90004840:	2108      	movs	r1, #8
90004842:	f024 ff75 	bl	90029730 <_ZdlPvj>
90004846:	4620      	mov	r0, r4
90004848:	bd10      	pop	{r4, pc}
9000484a:	bf00      	nop

9000484c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
9000484c:	4770      	bx	lr
9000484e:	bf00      	nop

90004850 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004850:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004854:	6808      	ldr	r0, [r1, #0]
90004856:	6849      	ldr	r1, [r1, #4]
90004858:	c303      	stmia	r3!, {r0, r1}
    }
9000485a:	4770      	bx	lr

9000485c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
9000485c:	4770      	bx	lr
9000485e:	bf00      	nop

90004860 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004860:	4770      	bx	lr
90004862:	bf00      	nop

90004864 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004864:	6041      	str	r1, [r0, #4]
    }
90004866:	4770      	bx	lr

90004868 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004868:	4770      	bx	lr
9000486a:	bf00      	nop

9000486c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
9000486c:	4770      	bx	lr
9000486e:	bf00      	nop

90004870 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90004870:	4905      	ldr	r1, [pc, #20]	@ (90004888 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004872:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004874:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004878:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000487c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004880:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
90004884:	4770      	bx	lr
90004886:	bf00      	nop
90004888:	90004909 	.word	0x90004909

9000488c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
9000488c:	2301      	movs	r3, #1
9000488e:	7203      	strb	r3, [r0, #8]
    }
90004890:	4770      	bx	lr
90004892:	bf00      	nop

90004894 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004894:	4770      	bx	lr
90004896:	bf00      	nop

90004898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004898:	1d01      	adds	r1, r0, #4
9000489a:	c90e      	ldmia	r1, {r1, r2, r3}
9000489c:	ea4f 0c63 	mov.w	ip, r3, asr #1
900048a0:	eb01 0063 	add.w	r0, r1, r3, asr #1
900048a4:	07db      	lsls	r3, r3, #31
900048a6:	d502      	bpl.n	900048ae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900048a8:	f851 300c 	ldr.w	r3, [r1, ip]
900048ac:	589a      	ldr	r2, [r3, r2]
900048ae:	4710      	bx	r2

900048b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900048b0:	6843      	ldr	r3, [r0, #4]
900048b2:	b13b      	cbz	r3, 900048c4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900048b4:	6883      	ldr	r3, [r0, #8]
900048b6:	b10b      	cbz	r3, 900048bc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900048b8:	2001      	movs	r0, #1
    }
900048ba:	4770      	bx	lr
900048bc:	68c0      	ldr	r0, [r0, #12]
900048be:	f000 0001 	and.w	r0, r0, #1
900048c2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900048c4:	4618      	mov	r0, r3
900048c6:	4770      	bx	lr

900048c8 <_ZN8touchgfx12NoTransitionD0Ev>:
900048c8:	b510      	push	{r4, lr}
900048ca:	4604      	mov	r4, r0
900048cc:	210c      	movs	r1, #12
900048ce:	f024 ff2f 	bl	90029730 <_ZdlPvj>
900048d2:	4620      	mov	r0, r4
900048d4:	bd10      	pop	{r4, pc}
900048d6:	bf00      	nop

900048d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900048d8:	b510      	push	{r4, lr}
900048da:	4604      	mov	r4, r0
900048dc:	2110      	movs	r1, #16
900048de:	f024 ff27 	bl	90029730 <_ZdlPvj>
900048e2:	4620      	mov	r0, r4
900048e4:	bd10      	pop	{r4, pc}
900048e6:	bf00      	nop

900048e8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900048e8:	b510      	push	{r4, lr}
900048ea:	4604      	mov	r4, r0
900048ec:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900048f0:	f024 ff1e 	bl	90029730 <_ZdlPvj>
900048f4:	4620      	mov	r0, r4
900048f6:	bd10      	pop	{r4, pc}

900048f8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
900048f8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
900048fa:	f012 fc4b 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
900048fe:	6803      	ldr	r3, [r0, #0]
    }
90004900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004904:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004906:	4718      	bx	r3

90004908 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
90004908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000490c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004910:	4607      	mov	r7, r0
90004912:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004914:	68b0      	ldr	r0, [r6, #8]
90004916:	6803      	ldr	r3, [r0, #0]
90004918:	6a1b      	ldr	r3, [r3, #32]
9000491a:	4798      	blx	r3
9000491c:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
90004920:	f0c0 809d 	bcc.w	90004a5e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004924:	6870      	ldr	r0, [r6, #4]
90004926:	6803      	ldr	r3, [r0, #0]
90004928:	6a1b      	ldr	r3, [r3, #32]
9000492a:	4798      	blx	r3
9000492c:	280f      	cmp	r0, #15
9000492e:	f240 80a2 	bls.w	90004a76 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004932:	68f0      	ldr	r0, [r6, #12]
90004934:	6803      	ldr	r3, [r0, #0]
90004936:	6a1b      	ldr	r3, [r3, #32]
90004938:	4798      	blx	r3
9000493a:	280b      	cmp	r0, #11
9000493c:	f240 8095 	bls.w	90004a6a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004940:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004aa8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004944:	f012 fc26 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004948:	3004      	adds	r0, #4
9000494a:	f012 fc48 	bl	900171de <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000494e:	f8d9 0000 	ldr.w	r0, [r9]
90004952:	b130      	cbz	r0, 90004962 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004954:	6803      	ldr	r3, [r0, #0]
90004956:	494b      	ldr	r1, [pc, #300]	@ (90004a84 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
90004958:	68da      	ldr	r2, [r3, #12]
9000495a:	428a      	cmp	r2, r1
9000495c:	d178      	bne.n	90004a50 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
9000495e:	681b      	ldr	r3, [r3, #0]
90004960:	4798      	blx	r3
    if (*currentScreen)
90004962:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004aac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a4>
90004966:	f8d8 0000 	ldr.w	r0, [r8]
9000496a:	2800      	cmp	r0, #0
9000496c:	d062      	beq.n	90004a34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
9000496e:	6803      	ldr	r3, [r0, #0]
90004970:	695b      	ldr	r3, [r3, #20]
90004972:	4798      	blx	r3
    if (*currentPresenter)
90004974:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004978:	2800      	cmp	r0, #0
9000497a:	d056      	beq.n	90004a2a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
9000497c:	6803      	ldr	r3, [r0, #0]
9000497e:	685b      	ldr	r3, [r3, #4]
90004980:	4798      	blx	r3
    if (*currentScreen)
90004982:	f8d8 0000 	ldr.w	r0, [r8]
90004986:	b110      	cbz	r0, 9000498e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004988:	6803      	ldr	r3, [r0, #0]
9000498a:	681b      	ldr	r3, [r3, #0]
9000498c:	4798      	blx	r3
    if (*currentPresenter)
9000498e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004992:	b110      	cbz	r0, 9000499a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004994:	6803      	ldr	r3, [r0, #0]
90004996:	689b      	ldr	r3, [r3, #8]
90004998:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000499a:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000499c:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
9000499e:	f04f 0b00 	mov.w	fp, #0
900049a2:	6803      	ldr	r3, [r0, #0]
900049a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049a6:	4798      	blx	r3
900049a8:	4b37      	ldr	r3, [pc, #220]	@ (90004a88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
900049aa:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900049ac:	68b0      	ldr	r0, [r6, #8]
900049ae:	4659      	mov	r1, fp
900049b0:	6023      	str	r3, [r4, #0]
900049b2:	6803      	ldr	r3, [r0, #0]
900049b4:	f8c4 b004 	str.w	fp, [r4, #4]
900049b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049ba:	f884 b008 	strb.w	fp, [r4, #8]
900049be:	4798      	blx	r3
900049c0:	4605      	mov	r5, r0
900049c2:	f000 fcf1 	bl	900053a8 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900049c6:	6870      	ldr	r0, [r6, #4]
900049c8:	4659      	mov	r1, fp
900049ca:	6803      	ldr	r3, [r0, #0]
900049cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049ce:	4798      	blx	r3
900049d0:	4606      	mov	r6, r0
900049d2:	4629      	mov	r1, r5
900049d4:	f000 fcbe 	bl	90005354 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
900049d8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900049da:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900049de:	4628      	mov	r0, r5
    *currentTrans = newTransition;
900049e0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
900049e4:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900049e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
900049ec:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900049ee:	f8c6 a008 	str.w	sl, [r6, #8]
900049f2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
900049f4:	63ee      	str	r6, [r5, #60]	@ 0x3c
900049f6:	4798      	blx	r3
    newPresenter->activate();
900049f8:	6833      	ldr	r3, [r6, #0]
900049fa:	4630      	mov	r0, r6
900049fc:	681b      	ldr	r3, [r3, #0]
900049fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004a00:	4621      	mov	r1, r4
90004a02:	4628      	mov	r0, r5
90004a04:	f014 fda0 	bl	90019548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004a08:	6823      	ldr	r3, [r4, #0]
90004a0a:	4920      	ldr	r1, [pc, #128]	@ (90004a8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90004a0c:	691a      	ldr	r2, [r3, #16]
90004a0e:	428a      	cmp	r2, r1
90004a10:	d11a      	bne.n	90004a48 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004a12:	695b      	ldr	r3, [r3, #20]
90004a14:	4a1e      	ldr	r2, [pc, #120]	@ (90004a90 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
90004a16:	4293      	cmp	r3, r2
90004a18:	d111      	bne.n	90004a3e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004a1a:	f012 fbbb 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
90004a1e:	6803      	ldr	r3, [r0, #0]
90004a20:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004a22:	b001      	add	sp, #4
90004a24:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a28:	4718      	bx	r3
    if (*currentScreen)
90004a2a:	f8d8 0000 	ldr.w	r0, [r8]
90004a2e:	2800      	cmp	r0, #0
90004a30:	d1aa      	bne.n	90004988 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
90004a32:	e7b2      	b.n	9000499a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004a34:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004a38:	2800      	cmp	r0, #0
90004a3a:	d19f      	bne.n	9000497c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
90004a3c:	e7ad      	b.n	9000499a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004a3e:	4620      	mov	r0, r4
90004a40:	b001      	add	sp, #4
90004a42:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a46:	4718      	bx	r3
    newTransition->init();
90004a48:	4620      	mov	r0, r4
90004a4a:	4790      	blx	r2
    newTransition->invalidate();
90004a4c:	6823      	ldr	r3, [r4, #0]
90004a4e:	e7e0      	b.n	90004a12 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004a50:	4790      	blx	r2
    if (*currentTrans)
90004a52:	f8d9 0000 	ldr.w	r0, [r9]
90004a56:	2800      	cmp	r0, #0
90004a58:	d083      	beq.n	90004962 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004a5a:	6803      	ldr	r3, [r0, #0]
90004a5c:	e77f      	b.n	9000495e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004a5e:	4b0d      	ldr	r3, [pc, #52]	@ (90004a94 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004a60:	21a3      	movs	r1, #163	@ 0xa3
90004a62:	4a0d      	ldr	r2, [pc, #52]	@ (90004a98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a64:	480d      	ldr	r0, [pc, #52]	@ (90004a9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a66:	f025 f9db 	bl	90029e20 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004a6a:	4b0d      	ldr	r3, [pc, #52]	@ (90004aa0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x198>)
90004a6c:	21a5      	movs	r1, #165	@ 0xa5
90004a6e:	4a0a      	ldr	r2, [pc, #40]	@ (90004a98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a70:	480a      	ldr	r0, [pc, #40]	@ (90004a9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a72:	f025 f9d5 	bl	90029e20 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004a76:	4b0b      	ldr	r3, [pc, #44]	@ (90004aa4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x19c>)
90004a78:	21a4      	movs	r1, #164	@ 0xa4
90004a7a:	4a07      	ldr	r2, [pc, #28]	@ (90004a98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a7c:	4807      	ldr	r0, [pc, #28]	@ (90004a9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a7e:	f025 f9cf 	bl	90029e20 <__assert_func>
90004a82:	bf00      	nop
90004a84:	9000485d 	.word	0x9000485d
90004a88:	9002cf90 	.word	0x9002cf90
90004a8c:	90004861 	.word	0x90004861
90004a90:	900048f9 	.word	0x900048f9
90004a94:	9002c4d4 	.word	0x9002c4d4
90004a98:	9002c564 	.word	0x9002c564
90004a9c:	9002c638 	.word	0x9002c638
90004aa0:	9002c724 	.word	0x9002c724
90004aa4:	9002c680 	.word	0x9002c680
90004aa8:	2402188c 	.word	0x2402188c
90004aac:	24021888 	.word	0x24021888

90004ab0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90004ab0:	b570      	push	{r4, r5, r6, lr}
90004ab2:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004ab4:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004ab8:	b1b8      	cbz	r0, 90004aea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004aba:	6802      	ldr	r2, [r0, #0]
90004abc:	4916      	ldr	r1, [pc, #88]	@ (90004b18 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004abe:	68d3      	ldr	r3, [r2, #12]
90004ac0:	428b      	cmp	r3, r1
90004ac2:	d11f      	bne.n	90004b04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004ac4:	6843      	ldr	r3, [r0, #4]
90004ac6:	b183      	cbz	r3, 90004aea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004ac8:	6881      	ldr	r1, [r0, #8]
90004aca:	b179      	cbz	r1, 90004aec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90004acc:	6892      	ldr	r2, [r2, #8]
90004ace:	4b13      	ldr	r3, [pc, #76]	@ (90004b1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004ad0:	429a      	cmp	r2, r3
90004ad2:	d11e      	bne.n	90004b12 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004ad4:	68c2      	ldr	r2, [r0, #12]
90004ad6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90004ada:	eb03 0062 	add.w	r0, r3, r2, asr #1
90004ade:	07d3      	lsls	r3, r2, #31
90004ae0:	d40d      	bmi.n	90004afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004ae2:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004ae4:	2300      	movs	r3, #0
90004ae6:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004aea:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90004aec:	68c5      	ldr	r5, [r0, #12]
90004aee:	07ee      	lsls	r6, r5, #31
90004af0:	d5fb      	bpl.n	90004aea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004af2:	6892      	ldr	r2, [r2, #8]
90004af4:	4e09      	ldr	r6, [pc, #36]	@ (90004b1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004af6:	42b2      	cmp	r2, r6
90004af8:	d10b      	bne.n	90004b12 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004afa:	eb03 0065 	add.w	r0, r3, r5, asr #1
90004afe:	6803      	ldr	r3, [r0, #0]
90004b00:	5859      	ldr	r1, [r3, r1]
90004b02:	e7ee      	b.n	90004ae2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004b04:	4798      	blx	r3
90004b06:	2800      	cmp	r0, #0
90004b08:	d0ef      	beq.n	90004aea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004b0a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004b0e:	6802      	ldr	r2, [r0, #0]
90004b10:	e7dc      	b.n	90004acc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004b12:	4790      	blx	r2
90004b14:	e7e6      	b.n	90004ae4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004b16:	bf00      	nop
90004b18:	900048b1 	.word	0x900048b1
90004b1c:	90004899 	.word	0x90004899

90004b20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004b20:	b570      	push	{r4, r5, r6, lr}
90004b22:	4604      	mov	r4, r0
90004b24:	4615      	mov	r5, r2
90004b26:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004b28:	f012 fbfa 	bl	90017320 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004b2c:	4a22      	ldr	r2, [pc, #136]	@ (90004bb8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004b2e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004b30:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004b34:	6014      	str	r4, [r2, #0]
        return instance;
90004b36:	4d21      	ldr	r5, [pc, #132]	@ (90004bbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004b38:	4a21      	ldr	r2, [pc, #132]	@ (90004bc0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004b3a:	6828      	ldr	r0, [r5, #0]
90004b3c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004b3e:	4a21      	ldr	r2, [pc, #132]	@ (90004bc4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004b40:	4921      	ldr	r1, [pc, #132]	@ (90004bc8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004b42:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004b46:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004b4a:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004b4e:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004b52:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004b56:	6802      	ldr	r2, [r0, #0]
90004b58:	6892      	ldr	r2, [r2, #8]
90004b5a:	428a      	cmp	r2, r1
90004b5c:	d129      	bne.n	90004bb2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004b5e:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004b62:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004b66:	2000      	movs	r0, #0
90004b68:	f000 fb4e 	bl	90005208 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004b6c:	682b      	ldr	r3, [r5, #0]
90004b6e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004b72:	b1e2      	cbz	r2, 90004bae <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004b74:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004b76:	b1d0      	cbz	r0, 90004bae <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004b78:	f01c fcd3 	bl	90021522 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004b7c:	682b      	ldr	r3, [r5, #0]
90004b7e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004b82:	b192      	cbz	r2, 90004baa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004b84:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004b86:	b180      	cbz	r0, 90004baa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004b88:	f01c fd46 	bl	90021618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004b8c:	682b      	ldr	r3, [r5, #0]
90004b8e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004b92:	b12a      	cbz	r2, 90004ba0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004b94:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004b96:	b118      	cbz	r0, 90004ba0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004b98:	f01c fd4a 	bl	90021630 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004b9c:	4620      	mov	r0, r4
90004b9e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004ba0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004ba2:	f01c fd45 	bl	90021630 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004ba6:	4620      	mov	r0, r4
90004ba8:	bd70      	pop	{r4, r5, r6, pc}
90004baa:	6898      	ldr	r0, [r3, #8]
90004bac:	e7ec      	b.n	90004b88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004bae:	6898      	ldr	r0, [r3, #8]
90004bb0:	e7e2      	b.n	90004b78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004bb2:	4619      	mov	r1, r3
90004bb4:	4790      	blx	r2
90004bb6:	e7d6      	b.n	90004b66 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004bb8:	24021898 	.word	0x24021898
90004bbc:	24021844 	.word	0x24021844
90004bc0:	9002cf3c 	.word	0x9002cf3c
90004bc4:	9002cf24 	.word	0x9002cf24
90004bc8:	90000d61 	.word	0x90000d61

90004bcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004bcc:	4905      	ldr	r1, [pc, #20]	@ (90004be4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90004bce:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004bd0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004bd4:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004bd8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004bdc:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004be0:	4770      	bx	lr
90004be2:	bf00      	nop
90004be4:	90004909 	.word	0x90004909

90004be8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004be8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004bea:	4770      	bx	lr

90004bec <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004bec:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004bee:	4770      	bx	lr

90004bf0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004bf0:	4770      	bx	lr
90004bf2:	bf00      	nop

90004bf4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
90004bf4:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
90004bf6:	888a      	ldrh	r2, [r1, #4]
90004bf8:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
90004bfa:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
90004bfc:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90004bfe:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90004c00:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90004c04:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
90004c08:	4418      	add	r0, r3
90004c0a:	4770      	bx	lr

90004c0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004c0c:	b1fa      	cbz	r2, 90004c4e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004c0e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004c10:	7b14      	ldrb	r4, [r2, #12]
90004c12:	b1d4      	cbz	r4, 90004c4a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004c14:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004c18:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004c1c:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004c20:	6a03      	ldr	r3, [r0, #32]
90004c22:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004c26:	ea4e 0202 	orr.w	r2, lr, r2
90004c2a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c2e:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004c32:	e004      	b.n	90004c3e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004c34:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004c38:	d807      	bhi.n	90004c4a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c3a:	4283      	cmp	r3, r0
90004c3c:	d005      	beq.n	90004c4a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004c3e:	881a      	ldrh	r2, [r3, #0]
90004c40:	428a      	cmp	r2, r1
90004c42:	d1f7      	bne.n	90004c34 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004c44:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004c48:	bd10      	pop	{r4, pc}
        return 0;
90004c4a:	2000      	movs	r0, #0
}
90004c4c:	bd10      	pop	{r4, pc}
        return 0;
90004c4e:	4610      	mov	r0, r2
}
90004c50:	4770      	bx	lr
90004c52:	bf00      	nop

90004c54 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004c54:	b510      	push	{r4, lr}
90004c56:	4604      	mov	r4, r0
90004c58:	212c      	movs	r1, #44	@ 0x2c
90004c5a:	f024 fd69 	bl	90029730 <_ZdlPvj>
90004c5e:	4620      	mov	r0, r4
90004c60:	bd10      	pop	{r4, pc}
90004c62:	bf00      	nop

90004c64 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c64:	b530      	push	{r4, r5, lr}
90004c66:	b08b      	sub	sp, #44	@ 0x2c
90004c68:	4604      	mov	r4, r0
90004c6a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004c6e:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c70:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004c74:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c76:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004c7a:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c7c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004c80:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c82:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004c86:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c88:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004c8c:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c8e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004c92:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c94:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004c98:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c9a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004c9e:	9508      	str	r5, [sp, #32]
90004ca0:	f014 f888 	bl	90018db4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004ca4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004ca6:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004ca8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004caa:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004cac:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004cae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004cb0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004cb2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004cb4:	62a3      	str	r3, [r4, #40]	@ 0x28
90004cb6:	4b02      	ldr	r3, [pc, #8]	@ (90004cc0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004cb8:	6023      	str	r3, [r4, #0]
}
90004cba:	b00b      	add	sp, #44	@ 0x2c
90004cbc:	bd30      	pop	{r4, r5, pc}
90004cbe:	bf00      	nop
90004cc0:	9002cfb4 	.word	0x9002cfb4

90004cc4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004cc4:	4770      	bx	lr
90004cc6:	bf00      	nop

90004cc8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004cc8:	4770      	bx	lr
90004cca:	bf00      	nop

90004ccc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004ccc:	4770      	bx	lr
90004cce:	bf00      	nop

90004cd0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004cd0:	4770      	bx	lr
90004cd2:	bf00      	nop

90004cd4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004cd4:	4770      	bx	lr
90004cd6:	bf00      	nop

90004cd8 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90004cd8:	4770      	bx	lr
90004cda:	bf00      	nop

90004cdc <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90004cdc:	4770      	bx	lr
90004cde:	bf00      	nop

90004ce0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004ce0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004ce2:	68c3      	ldr	r3, [r0, #12]
90004ce4:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004ce8:	f013 0f01 	tst.w	r3, #1
90004cec:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004cf0:	d004      	beq.n	90004cfc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90004cf2:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004cf6:	f854 300c 	ldr.w	r3, [r4, ip]
90004cfa:	589a      	ldr	r2, [r3, r2]
    }
90004cfc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004d00:	4710      	bx	r2
90004d02:	bf00      	nop

90004d04 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004d04:	6843      	ldr	r3, [r0, #4]
90004d06:	b13b      	cbz	r3, 90004d18 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004d08:	6883      	ldr	r3, [r0, #8]
90004d0a:	b10b      	cbz	r3, 90004d10 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004d0c:	2001      	movs	r0, #1
    }
90004d0e:	4770      	bx	lr
90004d10:	68c0      	ldr	r0, [r0, #12]
90004d12:	f000 0001 	and.w	r0, r0, #1
90004d16:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004d18:	4618      	mov	r0, r3
90004d1a:	4770      	bx	lr

90004d1c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004d1c:	b510      	push	{r4, lr}
90004d1e:	4604      	mov	r4, r0
90004d20:	2110      	movs	r1, #16
90004d22:	f024 fd05 	bl	90029730 <_ZdlPvj>
90004d26:	4620      	mov	r0, r4
90004d28:	bd10      	pop	{r4, pc}
90004d2a:	bf00      	nop

90004d2c <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
90004d2c:	b510      	push	{r4, lr}
90004d2e:	4604      	mov	r4, r0
}
90004d30:	f44f 719c 	mov.w	r1, #312	@ 0x138
90004d34:	f024 fcfc 	bl	90029730 <_ZdlPvj>
90004d38:	4620      	mov	r0, r4
90004d3a:	bd10      	pop	{r4, pc}

90004d3c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &TC_Button)
90004d3c:	f100 0298 	add.w	r2, r0, #152	@ 0x98
{
90004d40:	4603      	mov	r3, r0
    if (&src == &TC_Button)
90004d42:	428a      	cmp	r2, r1
90004d44:	d000      	beq.n	90004d48 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
        //When TC_Button clicked show TC_TextBox
        //Show TC_TextBox
        TC_TextBox.setVisible(true);
        TC_TextBox.invalidate();
    }
}
90004d46:	4770      	bx	lr
        visible = vis;
90004d48:	2201      	movs	r2, #1
        TC_TextBox.invalidate();
90004d4a:	30e0      	adds	r0, #224	@ 0xe0
90004d4c:	f883 2105 	strb.w	r2, [r3, #261]	@ 0x105
90004d50:	f013 bbd9 	b.w	90018506 <_ZNK8touchgfx8Drawable10invalidateEv>

90004d54 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
90004d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d58:	4604      	mov	r4, r0
90004d5a:	b089      	sub	sp, #36	@ 0x24
        : presenter(0)
90004d5c:	2500      	movs	r5, #0
90004d5e:	f014 fa47 	bl	900191f0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90004d62:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
90004d66:	4a75      	ldr	r2, [pc, #468]	@ (90004f3c <_ZN15Screen1ViewBaseC1Ev+0x1e8>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004d68:	4b75      	ldr	r3, [pc, #468]	@ (90004f40 <_ZN15Screen1ViewBaseC1Ev+0x1ec>)
          touchable(false),
90004d6a:	f44f 7a80 	mov.w	sl, #256	@ 0x100
90004d6e:	26ff      	movs	r6, #255	@ 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004d70:	f64f 78ff 	movw	r8, #65535	@ 0xffff
90004d74:	f104 0798 	add.w	r7, r4, #152	@ 0x98
90004d78:	6022      	str	r2, [r4, #0]
90004d7a:	a906      	add	r1, sp, #24
90004d7c:	6423      	str	r3, [r4, #64]	@ 0x40
90004d7e:	f8a4 a064 	strh.w	sl, [r4, #100]	@ 0x64
90004d82:	4648      	mov	r0, r9
90004d84:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
90004d88:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90004d8a:	66a5      	str	r5, [r4, #104]	@ 0x68
90004d8c:	f8ad 8018 	strh.w	r8, [sp, #24]
        rect.x = x;
90004d90:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90004f74 <_ZN15Screen1ViewBaseC1Ev+0x220>
        : x(0), y(0), width(0), height(0)
90004d94:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90004d98:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90004d9c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90004da0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90004da4:	f00e fe38 	bl	90013a18 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004da8:	4638      	mov	r0, r7
90004daa:	f00f fe3b 	bl	90014a24 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004dae:	4b65      	ldr	r3, [pc, #404]	@ (90004f44 <_ZN15Screen1ViewBaseC1Ev+0x1f0>)
        : typedTextId(id)
90004db0:	f8a4 810c 	strh.w	r8, [r4, #268]	@ 0x10c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004db4:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90004db8:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004dbc:	f04f 33ff 	mov.w	r3, #4294967295
90004dc0:	f8c4 6116 	str.w	r6, [r4, #278]	@ 0x116
90004dc4:	1d26      	adds	r6, r4, #4
90004dc6:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        : pobject(pObject), pmemfun(pmemfun_1)
90004dca:	4b5f      	ldr	r3, [pc, #380]	@ (90004f48 <_ZN15Screen1ViewBaseC1Ev+0x1f4>)
90004dcc:	4630      	mov	r0, r6
90004dce:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 90004f78 <_ZN15Screen1ViewBaseC1Ev+0x224>
90004dd2:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
90004dd6:	4b5d      	ldr	r3, [pc, #372]	@ (90004f4c <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
          touchable(false),
90004dd8:	f8a4 a104 	strh.w	sl, [r4, #260]	@ 0x104
90004ddc:	f04f 0a02 	mov.w	sl, #2
90004de0:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004de4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        : color(col)
90004de8:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
90004dec:	66a3      	str	r3, [r4, #104]	@ 0x68
90004dee:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004df2:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004df6:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
90004dfa:	f8c4 412c 	str.w	r4, [r4, #300]	@ 0x12c
90004dfe:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
        rect.x = x;
90004e02:	6465      	str	r5, [r4, #68]	@ 0x44
90004e04:	f8c4 8108 	str.w	r8, [r4, #264]	@ 0x108
90004e08:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
        : x(0), y(0), width(0), height(0)
90004e0c:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
90004e10:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
90004e14:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
90004e18:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
90004e1c:	f00b fefe 	bl	90010c1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
90004e20:	a906      	add	r1, sp, #24
90004e22:	4648      	mov	r0, r9
90004e24:	f8ad a018 	strh.w	sl, [sp, #24]
90004e28:	f00f fcc5 	bl	900147b6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e2c:	4629      	mov	r1, r5
90004e2e:	4648      	mov	r0, r9
        rect.x = x;
90004e30:	e9c4 5b1c 	strd	r5, fp, [r4, #112]	@ 0x70
90004e34:	f00e fdab 	bl	9001398e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004e38:	4649      	mov	r1, r9
90004e3a:	4630      	mov	r0, r6
90004e3c:	f00b feee 	bl	90010c1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e40:	f44f 035e 	mov.w	r3, #14548992	@ 0xde0000
    TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004e44:	aa06      	add	r2, sp, #24
90004e46:	a905      	add	r1, sp, #20
90004e48:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90004e4c:	2301      	movs	r3, #1
90004e4e:	4638      	mov	r0, r7
90004e50:	f8ad 5014 	strh.w	r5, [sp, #20]
90004e54:	f8ad 3018 	strh.w	r3, [sp, #24]
90004e58:	f00f fbe7 	bl	9001462a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
90004e5c:	4b3c      	ldr	r3, [pc, #240]	@ (90004f50 <_ZN15Screen1ViewBaseC1Ev+0x1fc>)
class TypedText
90004e5e:	f8a4 a0d0 	strh.w	sl, [r4, #208]	@ 0xd0
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90004e62:	881b      	ldrh	r3, [r3, #0]
90004e64:	4553      	cmp	r3, sl
90004e66:	d925      	bls.n	90004eb4 <_ZN15Screen1ViewBaseC1Ev+0x160>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e68:	4b3a      	ldr	r3, [pc, #232]	@ (90004f54 <_ZN15Screen1ViewBaseC1Ev+0x200>)
90004e6a:	681b      	ldr	r3, [r3, #0]
90004e6c:	2b00      	cmp	r3, #0
90004e6e:	d05e      	beq.n	90004f2e <_ZN15Screen1ViewBaseC1Ev+0x1da>
        return fonts[typedTexts[typedTextId].fontIdx];
90004e70:	791a      	ldrb	r2, [r3, #4]
        return texts->getText(typedTextId);
90004e72:	4651      	mov	r1, sl
        return fonts[typedTexts[typedTextId].fontIdx];
90004e74:	4b38      	ldr	r3, [pc, #224]	@ (90004f58 <_ZN15Screen1ViewBaseC1Ev+0x204>)
90004e76:	681b      	ldr	r3, [r3, #0]
90004e78:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004e7c:	4b37      	ldr	r3, [pc, #220]	@ (90004f5c <_ZN15Screen1ViewBaseC1Ev+0x208>)
90004e7e:	6818      	ldr	r0, [r3, #0]
90004e80:	f000 fa00 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004e84:	f8d9 3000 	ldr.w	r3, [r9]
90004e88:	4935      	ldr	r1, [pc, #212]	@ (90004f60 <_ZN15Screen1ViewBaseC1Ev+0x20c>)
90004e8a:	4682      	mov	sl, r0
90004e8c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90004e8e:	428a      	cmp	r2, r1
90004e90:	d147      	bne.n	90004f22 <_ZN15Screen1ViewBaseC1Ev+0x1ce>
        return fontHeight;
90004e92:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90004e96:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90004e98:	4651      	mov	r1, sl
90004e9a:	4648      	mov	r0, r9
90004e9c:	4798      	blx	r3
90004e9e:	fb15 f500 	smulbb	r5, r5, r0
90004ea2:	f8d9 3000 	ldr.w	r3, [r9]
90004ea6:	4651      	mov	r1, sl
90004ea8:	b2ad      	uxth	r5, r5
90004eaa:	4648      	mov	r0, r9
90004eac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004eae:	4798      	blx	r3
90004eb0:	4405      	add	r5, r0
90004eb2:	b22d      	sxth	r5, r5
        color = col;
90004eb4:	f04f 33ff 	mov.w	r3, #4294967295
90004eb8:	4639      	mov	r1, r7
90004eba:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004ebc:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
    TC_TextBox.setXY(55, 202);
90004ec0:	f104 09e0 	add.w	r9, r4, #224	@ 0xe0
        linespace = space;
90004ec4:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
90004ec6:	466d      	mov	r5, sp
        colorPressed = col;
90004ec8:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
    TC_Button.setAction(buttonCallback);
90004ecc:	f504 7394 	add.w	r3, r4, #296	@ 0x128
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90004ed0:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
90004ed4:	f00b fea2 	bl	90010c1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ed8:	4b22      	ldr	r3, [pc, #136]	@ (90004f64 <_ZN15Screen1ViewBaseC1Ev+0x210>)
90004eda:	4649      	mov	r1, r9
90004edc:	4628      	mov	r0, r5
90004ede:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
        color = newColor;
90004ee2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        linespace = space;
90004ee6:	f8a4 7114 	strh.w	r7, [r4, #276]	@ 0x114
        color = newColor;
90004eea:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
        boundingArea = calculateBoundingArea();
90004eee:	f00f f897 	bl	90014020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004ef2:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
        : typedTextId(id)
90004ef6:	f8ad 701c 	strh.w	r7, [sp, #28]
90004efa:	f8cd 8018 	str.w	r8, [sp, #24]
90004efe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004f02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    TC_TextBox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3ZF8));
90004f06:	a906      	add	r1, sp, #24
90004f08:	4648      	mov	r0, r9
90004f0a:	f00f fb31 	bl	90014570 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004f0e:	4630      	mov	r0, r6
90004f10:	4649      	mov	r1, r9
        visible = vis;
90004f12:	f884 7105 	strb.w	r7, [r4, #261]	@ 0x105
90004f16:	f00b fe81 	bl	90010c1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004f1a:	4620      	mov	r0, r4
90004f1c:	b009      	add	sp, #36	@ 0x24
90004f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004f22:	4648      	mov	r0, r9
90004f24:	4790      	blx	r2
90004f26:	f8d9 3000 	ldr.w	r3, [r9]
90004f2a:	4605      	mov	r5, r0
90004f2c:	e7b3      	b.n	90004e96 <_ZN15Screen1ViewBaseC1Ev+0x142>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f2e:	4b0e      	ldr	r3, [pc, #56]	@ (90004f68 <_ZN15Screen1ViewBaseC1Ev+0x214>)
90004f30:	216c      	movs	r1, #108	@ 0x6c
90004f32:	4a0e      	ldr	r2, [pc, #56]	@ (90004f6c <_ZN15Screen1ViewBaseC1Ev+0x218>)
90004f34:	480e      	ldr	r0, [pc, #56]	@ (90004f70 <_ZN15Screen1ViewBaseC1Ev+0x21c>)
90004f36:	f024 ff73 	bl	90029e20 <__assert_func>
90004f3a:	bf00      	nop
90004f3c:	9002d034 	.word	0x9002d034
90004f40:	9002d6f8 	.word	0x9002d6f8
90004f44:	9002d668 	.word	0x9002d668
90004f48:	9002d01c 	.word	0x9002d01c
90004f4c:	90004d3d 	.word	0x90004d3d
90004f50:	240218a0 	.word	0x240218a0
90004f54:	2402189c 	.word	0x2402189c
90004f58:	240218a4 	.word	0x240218a4
90004f5c:	240218a8 	.word	0x240218a8
90004f60:	90004815 	.word	0x90004815
90004f64:	00ca0037 	.word	0x00ca0037
90004f68:	9002c7c8 	.word	0x9002c7c8
90004f6c:	9002c80c 	.word	0x9002c80c
90004f70:	9002c848 	.word	0x9002c848
90004f74:	011001e0 	.word	0x011001e0
90004f78:	9002cf14 	.word	0x9002cf14

90004f7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004f7c:	4770      	bx	lr
90004f7e:	bf00      	nop

90004f80 <_Z23getFont_verdana_10_4bppv>:
{
90004f80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004f82:	4d18      	ldr	r5, [pc, #96]	@ (90004fe4 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90004f84:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004f86:	682c      	ldr	r4, [r5, #0]
90004f88:	f3bf 8f5b 	dmb	ish
90004f8c:	f014 0401 	ands.w	r4, r4, #1
90004f90:	d002      	beq.n	90004f98 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90004f92:	4815      	ldr	r0, [pc, #84]	@ (90004fe8 <_Z23getFont_verdana_10_4bppv+0x68>)
90004f94:	b00f      	add	sp, #60	@ 0x3c
90004f96:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004f98:	4628      	mov	r0, r5
90004f9a:	f024 fbcb 	bl	90029734 <__cxa_guard_acquire>
90004f9e:	2800      	cmp	r0, #0
90004fa0:	d0f7      	beq.n	90004f92 <_Z23getFont_verdana_10_4bppv+0x12>
90004fa2:	213f      	movs	r1, #63	@ 0x3f
90004fa4:	2201      	movs	r2, #1
90004fa6:	230a      	movs	r3, #10
90004fa8:	2004      	movs	r0, #4
90004faa:	9204      	str	r2, [sp, #16]
90004fac:	9300      	str	r3, [sp, #0]
90004fae:	9003      	str	r0, [sp, #12]
90004fb0:	480d      	ldr	r0, [pc, #52]	@ (90004fe8 <_Z23getFont_verdana_10_4bppv+0x68>)
90004fb2:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90004fb6:	490d      	ldr	r1, [pc, #52]	@ (90004fec <_Z23getFont_verdana_10_4bppv+0x6c>)
90004fb8:	9108      	str	r1, [sp, #32]
90004fba:	490d      	ldr	r1, [pc, #52]	@ (90004ff0 <_Z23getFont_verdana_10_4bppv+0x70>)
90004fbc:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90004fc0:	9107      	str	r1, [sp, #28]
90004fc2:	490c      	ldr	r1, [pc, #48]	@ (90004ff4 <_Z23getFont_verdana_10_4bppv+0x74>)
90004fc4:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004fc8:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004fcc:	f7ff fe4a 	bl	90004c64 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004fd0:	4809      	ldr	r0, [pc, #36]	@ (90004ff8 <_Z23getFont_verdana_10_4bppv+0x78>)
90004fd2:	f024 ff43 	bl	90029e5c <atexit>
90004fd6:	4628      	mov	r0, r5
90004fd8:	f024 fbb8 	bl	9002974c <__cxa_guard_release>
}
90004fdc:	4802      	ldr	r0, [pc, #8]	@ (90004fe8 <_Z23getFont_verdana_10_4bppv+0x68>)
90004fde:	b00f      	add	sp, #60	@ 0x3c
90004fe0:	bd30      	pop	{r4, r5, pc}
90004fe2:	bf00      	nop
90004fe4:	240076f4 	.word	0x240076f4
90004fe8:	240076f8 	.word	0x240076f8
90004fec:	9002de7c 	.word	0x9002de7c
90004ff0:	9002de9c 	.word	0x9002de9c
90004ff4:	902003dc 	.word	0x902003dc
90004ff8:	90004f7d 	.word	0x90004f7d

90004ffc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004ffc:	4770      	bx	lr
90004ffe:	bf00      	nop

90005000 <_Z23getFont_verdana_20_4bppv>:
{
90005000:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005002:	4d18      	ldr	r5, [pc, #96]	@ (90005064 <_Z23getFont_verdana_20_4bppv+0x64>)
{
90005004:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005006:	682c      	ldr	r4, [r5, #0]
90005008:	f3bf 8f5b 	dmb	ish
9000500c:	f014 0401 	ands.w	r4, r4, #1
90005010:	d002      	beq.n	90005018 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90005012:	4815      	ldr	r0, [pc, #84]	@ (90005068 <_Z23getFont_verdana_20_4bppv+0x68>)
90005014:	b00f      	add	sp, #60	@ 0x3c
90005016:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90005018:	4628      	mov	r0, r5
9000501a:	f024 fb8b 	bl	90029734 <__cxa_guard_acquire>
9000501e:	2800      	cmp	r0, #0
90005020:	d0f7      	beq.n	90005012 <_Z23getFont_verdana_20_4bppv+0x12>
90005022:	213f      	movs	r1, #63	@ 0x3f
90005024:	2201      	movs	r2, #1
90005026:	2314      	movs	r3, #20
90005028:	480f      	ldr	r0, [pc, #60]	@ (90005068 <_Z23getFont_verdana_20_4bppv+0x68>)
9000502a:	9204      	str	r2, [sp, #16]
9000502c:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005030:	490e      	ldr	r1, [pc, #56]	@ (9000506c <_Z23getFont_verdana_20_4bppv+0x6c>)
90005032:	e9cd 4205 	strd	r4, r2, [sp, #20]
90005036:	9108      	str	r1, [sp, #32]
90005038:	2204      	movs	r2, #4
9000503a:	490d      	ldr	r1, [pc, #52]	@ (90005070 <_Z23getFont_verdana_20_4bppv+0x70>)
9000503c:	e9cd 3400 	strd	r3, r4, [sp]
90005040:	9107      	str	r1, [sp, #28]
90005042:	490c      	ldr	r1, [pc, #48]	@ (90005074 <_Z23getFont_verdana_20_4bppv+0x74>)
90005044:	e9cd 4202 	strd	r4, r2, [sp, #8]
90005048:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000504c:	220b      	movs	r2, #11
9000504e:	f7ff fe09 	bl	90004c64 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005052:	4809      	ldr	r0, [pc, #36]	@ (90005078 <_Z23getFont_verdana_20_4bppv+0x78>)
90005054:	f024 ff02 	bl	90029e5c <atexit>
90005058:	4628      	mov	r0, r5
9000505a:	f024 fb77 	bl	9002974c <__cxa_guard_release>
}
9000505e:	4802      	ldr	r0, [pc, #8]	@ (90005068 <_Z23getFont_verdana_20_4bppv+0x68>)
90005060:	b00f      	add	sp, #60	@ 0x3c
90005062:	bd30      	pop	{r4, r5, pc}
90005064:	24007724 	.word	0x24007724
90005068:	24007728 	.word	0x24007728
9000506c:	9002de80 	.word	0x9002de80
90005070:	9002dea0 	.word	0x9002dea0
90005074:	902003ec 	.word	0x902003ec
90005078:	90004ffd 	.word	0x90004ffd

9000507c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000507c:	4770      	bx	lr
9000507e:	bf00      	nop

90005080 <_Z23getFont_verdana_40_4bppv>:
{
90005080:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005082:	4d18      	ldr	r5, [pc, #96]	@ (900050e4 <_Z23getFont_verdana_40_4bppv+0x64>)
{
90005084:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005086:	682c      	ldr	r4, [r5, #0]
90005088:	f3bf 8f5b 	dmb	ish
9000508c:	f014 0401 	ands.w	r4, r4, #1
90005090:	d002      	beq.n	90005098 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90005092:	4815      	ldr	r0, [pc, #84]	@ (900050e8 <_Z23getFont_verdana_40_4bppv+0x68>)
90005094:	b00f      	add	sp, #60	@ 0x3c
90005096:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005098:	4628      	mov	r0, r5
9000509a:	f024 fb4b 	bl	90029734 <__cxa_guard_acquire>
9000509e:	2800      	cmp	r0, #0
900050a0:	d0f7      	beq.n	90005092 <_Z23getFont_verdana_40_4bppv+0x12>
900050a2:	213f      	movs	r1, #63	@ 0x3f
900050a4:	2201      	movs	r2, #1
900050a6:	2328      	movs	r3, #40	@ 0x28
900050a8:	2004      	movs	r0, #4
900050aa:	9204      	str	r2, [sp, #16]
900050ac:	9300      	str	r3, [sp, #0]
900050ae:	9003      	str	r0, [sp, #12]
900050b0:	480d      	ldr	r0, [pc, #52]	@ (900050e8 <_Z23getFont_verdana_40_4bppv+0x68>)
900050b2:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900050b6:	490d      	ldr	r1, [pc, #52]	@ (900050ec <_Z23getFont_verdana_40_4bppv+0x6c>)
900050b8:	9108      	str	r1, [sp, #32]
900050ba:	490d      	ldr	r1, [pc, #52]	@ (900050f0 <_Z23getFont_verdana_40_4bppv+0x70>)
900050bc:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900050c0:	9107      	str	r1, [sp, #28]
900050c2:	490c      	ldr	r1, [pc, #48]	@ (900050f4 <_Z23getFont_verdana_40_4bppv+0x74>)
900050c4:	e9cd 4405 	strd	r4, r4, [sp, #20]
900050c8:	e9cd 4401 	strd	r4, r4, [sp, #4]
900050cc:	f7ff fdca 	bl	90004c64 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900050d0:	4809      	ldr	r0, [pc, #36]	@ (900050f8 <_Z23getFont_verdana_40_4bppv+0x78>)
900050d2:	f024 fec3 	bl	90029e5c <atexit>
900050d6:	4628      	mov	r0, r5
900050d8:	f024 fb38 	bl	9002974c <__cxa_guard_release>
}
900050dc:	4802      	ldr	r0, [pc, #8]	@ (900050e8 <_Z23getFont_verdana_40_4bppv+0x68>)
900050de:	b00f      	add	sp, #60	@ 0x3c
900050e0:	bd30      	pop	{r4, r5, pc}
900050e2:	bf00      	nop
900050e4:	24007754 	.word	0x24007754
900050e8:	24007758 	.word	0x24007758
900050ec:	9002de98 	.word	0x9002de98
900050f0:	9002dea4 	.word	0x9002dea4
900050f4:	90200488 	.word	0x90200488
900050f8:	9000507d 	.word	0x9000507d

900050fc <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900050fc:	2000      	movs	r0, #0
900050fe:	4770      	bx	lr

90005100 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005100:	2000      	movs	r0, #0
90005102:	4770      	bx	lr

90005104 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005104:	b40e      	push	{r1, r2, r3}
90005106:	b500      	push	{lr}
90005108:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000510a:	2100      	movs	r1, #0
{
9000510c:	ab03      	add	r3, sp, #12
9000510e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005112:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005114:	f013 f8cc 	bl	900182b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005118:	b002      	add	sp, #8
9000511a:	f85d eb04 	ldr.w	lr, [sp], #4
9000511e:	b003      	add	sp, #12
90005120:	4770      	bx	lr
90005122:	bf00      	nop

90005124 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005124:	b40c      	push	{r2, r3}
90005126:	b500      	push	{lr}
90005128:	b083      	sub	sp, #12
9000512a:	ab04      	add	r3, sp, #16
9000512c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005130:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005132:	f013 f8bd 	bl	900182b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005136:	b003      	add	sp, #12
90005138:	f85d eb04 	ldr.w	lr, [sp], #4
9000513c:	b002      	add	sp, #8
9000513e:	4770      	bx	lr

90005140 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005140:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005142:	b510      	push	{r4, lr}
90005144:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90005146:	b133      	cbz	r3, 90005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005148:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000514a:	b39b      	cbz	r3, 900051b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
9000514c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9000514e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005152:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005154:	b923      	cbnz	r3, 90005160 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90005156:	4620      	mov	r0, r4
}
90005158:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
9000515c:	f014 be54 	b.w	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005160:	f014 ff50 	bl	9001a004 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005164:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90005166:	2b01      	cmp	r3, #1
90005168:	d92a      	bls.n	900051c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000516a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9000516c:	1c53      	adds	r3, r2, #1
9000516e:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005170:	2b09      	cmp	r3, #9
90005172:	d812      	bhi.n	9000519a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005174:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005178:	f640 103f 	movw	r0, #2367	@ 0x93f
9000517c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
9000517e:	4281      	cmp	r1, r0
90005180:	d1e9      	bne.n	90005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005182:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005186:	0052      	lsls	r2, r2, #1
90005188:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000518a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000518e:	4422      	add	r2, r4
90005190:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005194:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90005196:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005198:	e7dd      	b.n	90005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000519a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9000519e:	f640 113f 	movw	r1, #2367	@ 0x93f
900051a2:	89db      	ldrh	r3, [r3, #14]
900051a4:	428b      	cmp	r3, r1
900051a6:	d1d6      	bne.n	90005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900051a8:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900051ac:	2300      	movs	r3, #0
900051ae:	0052      	lsls	r2, r2, #1
900051b0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900051b2:	e7ea      	b.n	9000518a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900051b4:	4b05      	ldr	r3, [pc, #20]	@ (900051cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900051b6:	21c5      	movs	r1, #197	@ 0xc5
900051b8:	4a05      	ldr	r2, [pc, #20]	@ (900051d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900051ba:	4806      	ldr	r0, [pc, #24]	@ (900051d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900051bc:	f024 fe30 	bl	90029e20 <__assert_func>
            assert(offset < used);
900051c0:	4b05      	ldr	r3, [pc, #20]	@ (900051d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900051c2:	21cb      	movs	r1, #203	@ 0xcb
900051c4:	4a05      	ldr	r2, [pc, #20]	@ (900051dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900051c6:	4803      	ldr	r0, [pc, #12]	@ (900051d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900051c8:	f024 fe2a 	bl	90029e20 <__assert_func>
900051cc:	9002c890 	.word	0x9002c890
900051d0:	9002c89c 	.word	0x9002c89c
900051d4:	9002c948 	.word	0x9002c948
900051d8:	9002c994 	.word	0x9002c994
900051dc:	9002c9a4 	.word	0x9002c9a4

900051e0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900051e0:	f014 bddb 	b.w	90019d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900051e4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900051e4:	b510      	push	{r4, lr}
900051e6:	b086      	sub	sp, #24
900051e8:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900051ec:	ac0a      	add	r4, sp, #40	@ 0x28
{
900051ee:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900051f2:	461a      	mov	r2, r3
900051f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900051f6:	4661      	mov	r1, ip
900051f8:	9401      	str	r4, [sp, #4]
900051fa:	9300      	str	r3, [sp, #0]
900051fc:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900051fe:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005200:	f011 fb48 	bl	90016894 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005204:	b006      	add	sp, #24
90005206:	bd10      	pop	{r4, pc}

90005208 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005208:	b9e0      	cbnz	r0, 90005244 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000520a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
9000520c:	4b13      	ldr	r3, [pc, #76]	@ (9000525c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000520e:	681b      	ldr	r3, [r3, #0]
90005210:	b1cb      	cbz	r3, 90005246 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005212:	4c13      	ldr	r4, [pc, #76]	@ (90005260 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005214:	4813      	ldr	r0, [pc, #76]	@ (90005264 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005216:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000521a:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000521c:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000521e:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005220:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005222:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005224:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005226:	4b10      	ldr	r3, [pc, #64]	@ (90005268 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005228:	2200      	movs	r2, #0
9000522a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
9000522c:	f000 f83a 	bl	900052a4 <_ZN17TypedTextDatabase8getFontsEv>
90005230:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005232:	f000 f835 	bl	900052a0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005236:	4b0d      	ldr	r3, [pc, #52]	@ (9000526c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005238:	4a0d      	ldr	r2, [pc, #52]	@ (90005270 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000523a:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
9000523c:	4b0d      	ldr	r3, [pc, #52]	@ (90005274 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
9000523e:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005240:	8018      	strh	r0, [r3, #0]
    }
}
90005242:	bd38      	pop	{r3, r4, r5, pc}
90005244:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005246:	4c0c      	ldr	r4, [pc, #48]	@ (90005278 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005248:	4905      	ldr	r1, [pc, #20]	@ (90005260 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000524a:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
9000524c:	480b      	ldr	r0, [pc, #44]	@ (9000527c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
9000524e:	4b05      	ldr	r3, [pc, #20]	@ (90005264 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005250:	4a0b      	ldr	r2, [pc, #44]	@ (90005280 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005252:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005254:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005256:	2c00      	cmp	r4, #0
90005258:	d1e5      	bne.n	90005226 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000525a:	bd38      	pop	{r3, r4, r5, pc}
9000525c:	24007790 	.word	0x24007790
90005260:	24007788 	.word	0x24007788
90005264:	24007784 	.word	0x24007784
90005268:	2400778c 	.word	0x2400778c
9000526c:	2402189c 	.word	0x2402189c
90005270:	240218a4 	.word	0x240218a4
90005274:	240218a0 	.word	0x240218a0
90005278:	902004c0 	.word	0x902004c0
9000527c:	902004a4 	.word	0x902004a4
90005280:	90200498 	.word	0x90200498

90005284 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005284:	4a04      	ldr	r2, [pc, #16]	@ (90005298 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005286:	4b05      	ldr	r3, [pc, #20]	@ (9000529c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005288:	6812      	ldr	r2, [r2, #0]
9000528a:	681b      	ldr	r3, [r3, #0]
9000528c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005290:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005294:	4770      	bx	lr
90005296:	bf00      	nop
90005298:	24007784 	.word	0x24007784
9000529c:	24007788 	.word	0x24007788

900052a0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
900052a0:	2003      	movs	r0, #3
900052a2:	4770      	bx	lr

900052a4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
900052a4:	4800      	ldr	r0, [pc, #0]	@ (900052a8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
900052a6:	4770      	bx	lr
900052a8:	24007794 	.word	0x24007794

900052ac <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
900052ac:	b510      	push	{r4, lr}
};
900052ae:	4c05      	ldr	r4, [pc, #20]	@ (900052c4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
900052b0:	f7ff fea6 	bl	90005000 <_Z23getFont_verdana_20_4bppv>
};
900052b4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
900052b6:	f7ff fee3 	bl	90005080 <_Z23getFont_verdana_40_4bppv>
};
900052ba:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
900052bc:	f7ff fe60 	bl	90004f80 <_Z23getFont_verdana_10_4bppv>
};
900052c0:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
900052c2:	bd10      	pop	{r4, pc}
900052c4:	24007794 	.word	0x24007794

900052c8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900052c8:	b410      	push	{r4}
    pointArray = 0;
900052ca:	2400      	movs	r4, #0
900052cc:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900052ce:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900052d0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900052d2:	601c      	str	r4, [r3, #0]
}
900052d4:	f85d 4b04 	ldr.w	r4, [sp], #4
900052d8:	4770      	bx	lr
900052da:	bf00      	nop

900052dc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900052dc:	4770      	bx	lr
900052de:	bf00      	nop

900052e0 <_ZN19FrontendApplicationD0Ev>:
900052e0:	b510      	push	{r4, lr}
900052e2:	4604      	mov	r4, r0
900052e4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900052e8:	f024 fa22 	bl	90029730 <_ZdlPvj>
900052ec:	4620      	mov	r0, r4
900052ee:	bd10      	pop	{r4, pc}

900052f0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900052f0:	b510      	push	{r4, lr}
900052f2:	4604      	mov	r4, r0
    {
        model.tick();
900052f4:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
900052f8:	f000 f814 	bl	90005324 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900052fc:	4620      	mov	r0, r4
    }
900052fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005302:	f011 bfc9 	b.w	90017298 <_ZN8touchgfx11Application15handleTickEventEv>
90005306:	bf00      	nop

90005308 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005308:	b510      	push	{r4, lr}
9000530a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
9000530c:	f7ff fc08 	bl	90004b20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005310:	4b01      	ldr	r3, [pc, #4]	@ (90005318 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005312:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005314:	6023      	str	r3, [r4, #0]
}
90005316:	bd10      	pop	{r4, pc}
90005318:	9002d068 	.word	0x9002d068

9000531c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
9000531c:	2200      	movs	r2, #0
9000531e:	6002      	str	r2, [r0, #0]
{

}
90005320:	4770      	bx	lr
90005322:	bf00      	nop

90005324 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90005324:	4770      	bx	lr
90005326:	bf00      	nop

90005328 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
90005328:	4770      	bx	lr
9000532a:	bf00      	nop

9000532c <_ZThn4_N16Screen1PresenterD1Ev>:
9000532c:	3804      	subs	r0, #4
9000532e:	4770      	bx	lr

90005330 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
90005330:	4770      	bx	lr
90005332:	bf00      	nop

90005334 <_ZN16Screen1PresenterD0Ev>:
90005334:	b510      	push	{r4, lr}
90005336:	4604      	mov	r4, r0
90005338:	2110      	movs	r1, #16
9000533a:	f024 f9f9 	bl	90029730 <_ZdlPvj>
9000533e:	4620      	mov	r0, r4
90005340:	bd10      	pop	{r4, pc}
90005342:	bf00      	nop

90005344 <_ZThn4_N16Screen1PresenterD0Ev>:
90005344:	b510      	push	{r4, lr}
90005346:	1f04      	subs	r4, r0, #4
90005348:	2110      	movs	r1, #16
9000534a:	4620      	mov	r0, r4
9000534c:	f024 f9f0 	bl	90029730 <_ZdlPvj>
90005350:	4620      	mov	r0, r4
90005352:	bd10      	pop	{r4, pc}

90005354 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
90005354:	b410      	push	{r4}
    : view(v)
90005356:	4a05      	ldr	r2, [pc, #20]	@ (9000536c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
    ModelListener() : model(0) {}
90005358:	2400      	movs	r4, #0
9000535a:	60c1      	str	r1, [r0, #12]
9000535c:	6084      	str	r4, [r0, #8]
9000535e:	f102 0418 	add.w	r4, r2, #24
90005362:	6002      	str	r2, [r0, #0]
90005364:	6044      	str	r4, [r0, #4]
}
90005366:	f85d 4b04 	ldr.w	r4, [sp], #4
9000536a:	4770      	bx	lr
9000536c:	9002d0bc 	.word	0x9002d0bc

90005370 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90005370:	4770      	bx	lr
90005372:	bf00      	nop

90005374 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
90005374:	4b03      	ldr	r3, [pc, #12]	@ (90005384 <_ZN11Screen1ViewD1Ev+0x10>)
90005376:	b510      	push	{r4, lr}
90005378:	4604      	mov	r4, r0
9000537a:	6003      	str	r3, [r0, #0]
9000537c:	f7ff fcac 	bl	90004cd8 <_ZN15Screen1ViewBaseD1Ev>
90005380:	4620      	mov	r0, r4
90005382:	bd10      	pop	{r4, pc}
90005384:	9002d0e4 	.word	0x9002d0e4

90005388 <_ZN11Screen1ViewD0Ev>:
90005388:	4b06      	ldr	r3, [pc, #24]	@ (900053a4 <_ZN11Screen1ViewD0Ev+0x1c>)
9000538a:	b510      	push	{r4, lr}
9000538c:	4604      	mov	r4, r0
9000538e:	6003      	str	r3, [r0, #0]
90005390:	f7ff fca2 	bl	90004cd8 <_ZN15Screen1ViewBaseD1Ev>
90005394:	f44f 719c 	mov.w	r1, #312	@ 0x138
90005398:	4620      	mov	r0, r4
9000539a:	f024 f9c9 	bl	90029730 <_ZdlPvj>
9000539e:	4620      	mov	r0, r4
900053a0:	bd10      	pop	{r4, pc}
900053a2:	bf00      	nop
900053a4:	9002d0e4 	.word	0x9002d0e4

900053a8 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
900053a8:	b510      	push	{r4, lr}
900053aa:	4604      	mov	r4, r0
900053ac:	f7ff fcd2 	bl	90004d54 <_ZN15Screen1ViewBaseC1Ev>
900053b0:	4b01      	ldr	r3, [pc, #4]	@ (900053b8 <_ZN11Screen1ViewC1Ev+0x10>)
}
900053b2:	4620      	mov	r0, r4
Screen1View::Screen1View()
900053b4:	6023      	str	r3, [r4, #0]
}
900053b6:	bd10      	pop	{r4, pc}
900053b8:	9002d0e4 	.word	0x9002d0e4

900053bc <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
900053bc:	f7ff bc8e 	b.w	90004cdc <_ZN15Screen1ViewBase11setupScreenEv>

900053c0 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900053c0:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900053c4:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900053c6:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900053ca:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900053ce:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900053d0:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900053d2:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900053d6:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900053da:	4770      	bx	lr

900053dc <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900053dc:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
900053e0:	2b01      	cmp	r3, #1
900053e2:	d102      	bne.n	900053ea <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900053e4:	2300      	movs	r3, #0
900053e6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
900053ea:	2000      	movs	r0, #0
900053ec:	4770      	bx	lr
900053ee:	bf00      	nop

900053f0 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900053f0:	2000      	movs	r0, #0
900053f2:	4770      	bx	lr

900053f4 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900053f4:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900053f6:	6904      	ldr	r4, [r0, #16]
900053f8:	8900      	ldrh	r0, [r0, #8]
900053fa:	46a4      	mov	ip, r4
}
900053fc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005400:	4760      	bx	ip
90005402:	bf00      	nop

90005404 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005404:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005406:	68c4      	ldr	r4, [r0, #12]
90005408:	8900      	ldrh	r0, [r0, #8]
9000540a:	46a4      	mov	ip, r4
}
9000540c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005410:	4760      	bx	ip
90005412:	bf00      	nop

90005414 <FT5336_GestureConfig>:
{
90005414:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005416:	f100 0518 	add.w	r5, r0, #24
{
9000541a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000541c:	7809      	ldrb	r1, [r1, #0]
9000541e:	4628      	mov	r0, r5
90005420:	f000 f96c 	bl	900056fc <ft5336_radian_value>
90005424:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005426:	7931      	ldrb	r1, [r6, #4]
90005428:	4628      	mov	r0, r5
9000542a:	f000 f975 	bl	90005718 <ft5336_offset_left_right>
9000542e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90005430:	7a31      	ldrb	r1, [r6, #8]
90005432:	4628      	mov	r0, r5
90005434:	f000 f97e 	bl	90005734 <ft5336_offset_up_down>
90005438:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000543a:	7b31      	ldrb	r1, [r6, #12]
9000543c:	4628      	mov	r0, r5
9000543e:	f000 f987 	bl	90005750 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005442:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005444:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005446:	4628      	mov	r0, r5
90005448:	f000 f990 	bl	9000576c <ft5336_distance_up_down>
9000544c:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000544e:	7d31      	ldrb	r1, [r6, #20]
90005450:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005452:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005454:	f000 f998 	bl	90005788 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90005458:	42c4      	cmn	r4, r0
}
9000545a:	bf14      	ite	ne
9000545c:	f04f 30ff 	movne.w	r0, #4294967295
90005460:	2000      	moveq	r0, #0
90005462:	bd70      	pop	{r4, r5, r6, pc}

90005464 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90005464:	3018      	adds	r0, #24
90005466:	f000 b9ab 	b.w	900057c0 <ft5336_chip_id>
9000546a:	bf00      	nop

9000546c <FT5336_GetState>:
{
9000546c:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000546e:	f100 0518 	add.w	r5, r0, #24
{
90005472:	b083      	sub	sp, #12
90005474:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005476:	4628      	mov	r0, r5
90005478:	a901      	add	r1, sp, #4
9000547a:	f000 f931 	bl	900056e0 <ft5336_td_status>
9000547e:	bb10      	cbnz	r0, 900054c6 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005480:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005484:	2b05      	cmp	r3, #5
90005486:	bf94      	ite	ls
90005488:	4619      	movls	r1, r3
9000548a:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000548c:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000548e:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005490:	4628      	mov	r0, r5
90005492:	2103      	movs	r1, #3
90005494:	eb0d 0203 	add.w	r2, sp, r3
90005498:	f000 f910 	bl	900056bc <ft5336_read_reg>
9000549c:	b9b0      	cbnz	r0, 900054cc <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000549e:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900054a2:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900054a6:	0212      	lsls	r2, r2, #8
900054a8:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900054ac:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900054ae:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900054b2:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900054b6:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900054b8:	f89d 1007 	ldrb.w	r1, [sp, #7]
900054bc:	430b      	orrs	r3, r1
900054be:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900054c2:	b003      	add	sp, #12
900054c4:	bd30      	pop	{r4, r5, pc}
900054c6:	f04f 31ff 	mov.w	r1, #4294967295
900054ca:	e7df      	b.n	9000548c <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900054cc:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900054d0:	e7f7      	b.n	900054c2 <FT5336_GetState+0x56>
900054d2:	bf00      	nop

900054d4 <FT5336_GetMultiTouchState>:
{
900054d4:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900054d6:	f100 0518 	add.w	r5, r0, #24
{
900054da:	b088      	sub	sp, #32
900054dc:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900054de:	4628      	mov	r0, r5
900054e0:	4669      	mov	r1, sp
900054e2:	f000 f8fd 	bl	900056e0 <ft5336_td_status>
900054e6:	2800      	cmp	r0, #0
900054e8:	f040 809a 	bne.w	90005620 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900054ec:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900054f0:	2b05      	cmp	r3, #5
900054f2:	bf94      	ite	ls
900054f4:	4619      	movls	r1, r3
900054f6:	2100      	movhi	r1, #0
900054f8:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900054fa:	231e      	movs	r3, #30
900054fc:	466a      	mov	r2, sp
900054fe:	4628      	mov	r0, r5
90005500:	2103      	movs	r1, #3
90005502:	f000 f8db 	bl	900056bc <ft5336_read_reg>
90005506:	2800      	cmp	r0, #0
90005508:	f040 808d 	bne.w	90005626 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000550c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005510:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005514:	020a      	lsls	r2, r1, #8
90005516:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000551a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000551c:	f89d c007 	ldrb.w	ip, [sp, #7]
90005520:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005524:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005526:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000552a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000552e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005530:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005534:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005536:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005538:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000553a:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000553c:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005540:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005542:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005546:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000554a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000554c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000554e:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005552:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005554:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005556:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005558:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000555c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000555e:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005560:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005564:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005568:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000556a:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000556c:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000556e:	ea45 050c 	orr.w	r5, r5, ip
90005572:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005576:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000557a:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000557c:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000557e:	0212      	lsls	r2, r2, #8
90005580:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005584:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005586:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000558a:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000558e:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005590:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005592:	f89d 300e 	ldrb.w	r3, [sp, #14]
90005596:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005598:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000559c:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000559e:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055a0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055a4:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055a6:	f89d 200f 	ldrb.w	r2, [sp, #15]
900055aa:	4313      	orrs	r3, r2
900055ac:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900055ae:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055b0:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055b4:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055b8:	020a      	lsls	r2, r1, #8
900055ba:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055be:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055c0:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900055c4:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055c6:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055ca:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055cc:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900055d0:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055d2:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055d4:	f89d 1018 	ldrb.w	r1, [sp, #24]
900055d8:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900055da:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055dc:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900055de:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900055e2:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900055e4:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900055e8:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900055ea:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900055ee:	f89d 301d 	ldrb.w	r3, [sp, #29]
900055f2:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900055f4:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900055f6:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900055f8:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900055fc:	6625      	str	r5, [r4, #96]	@ 0x60
900055fe:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005600:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005604:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005606:	021b      	lsls	r3, r3, #8
90005608:	f89d 101b 	ldrb.w	r1, [sp, #27]
9000560c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90005610:	430b      	orrs	r3, r1
90005612:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005614:	f89d 3019 	ldrb.w	r3, [sp, #25]
90005618:	4313      	orrs	r3, r2
9000561a:	6163      	str	r3, [r4, #20]
}
9000561c:	b008      	add	sp, #32
9000561e:	bd70      	pop	{r4, r5, r6, pc}
90005620:	f04f 31ff 	mov.w	r1, #4294967295
90005624:	e768      	b.n	900054f8 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90005626:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000562a:	e7f7      	b.n	9000561c <FT5336_GetMultiTouchState+0x148>

9000562c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
9000562c:	3018      	adds	r0, #24
9000562e:	f000 b84d 	b.w	900056cc <ft5336_gest_id>
90005632:	bf00      	nop

90005634 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90005634:	2101      	movs	r1, #1
90005636:	3018      	adds	r0, #24
90005638:	f000 b8b4 	b.w	900057a4 <ft5336_g_mode>

9000563c <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000563c:	2100      	movs	r1, #0
9000563e:	3018      	adds	r0, #24
90005640:	f000 b8b0 	b.w	900057a4 <ft5336_g_mode>

90005644 <FT5336_Init>:
{
90005644:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90005646:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
9000564a:	b98d      	cbnz	r5, 90005670 <FT5336_Init+0x2c>
    pObj->IO.Init();
9000564c:	4606      	mov	r6, r0
9000564e:	4604      	mov	r4, r0
90005650:	f856 3b18 	ldr.w	r3, [r6], #24
90005654:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005656:	4629      	mov	r1, r5
90005658:	4630      	mov	r0, r6
9000565a:	f000 f8a3 	bl	900057a4 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000565e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90005660:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90005664:	bf18      	it	ne
90005666:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90005668:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
9000566c:	4240      	negs	r0, r0
}
9000566e:	bd70      	pop	{r4, r5, r6, pc}
90005670:	2000      	movs	r0, #0
90005672:	bd70      	pop	{r4, r5, r6, pc}

90005674 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90005674:	2000      	movs	r0, #0
90005676:	4770      	bx	lr

90005678 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90005678:	b1c0      	cbz	r0, 900056ac <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
9000567a:	890a      	ldrh	r2, [r1, #8]
{
9000567c:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
9000567e:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90005682:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90005684:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90005688:	694a      	ldr	r2, [r1, #20]
9000568a:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
9000568e:	4909      	ldr	r1, [pc, #36]	@ (900056b4 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90005690:	60c5      	str	r5, [r0, #12]
90005692:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90005696:	4a08      	ldr	r2, [pc, #32]	@ (900056b8 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90005698:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000569c:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
9000569e:	b10b      	cbz	r3, 900056a4 <FT5336_RegisterBusIO+0x2c>
}
900056a0:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900056a2:	4718      	bx	r3
}
900056a4:	f04f 30ff 	mov.w	r0, #4294967295
900056a8:	bc30      	pop	{r4, r5}
900056aa:	4770      	bx	lr
900056ac:	f04f 30ff 	mov.w	r0, #4294967295
900056b0:	4770      	bx	lr
900056b2:	bf00      	nop
900056b4:	900053f5 	.word	0x900053f5
900056b8:	90005405 	.word	0x90005405

900056bc <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900056bc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056be:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900056c2:	46a4      	mov	ip, r4
}
900056c4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056c8:	4760      	bx	ip
900056ca:	bf00      	nop

900056cc <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900056cc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056ce:	2301      	movs	r3, #1
{
900056d0:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056d2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900056d6:	4619      	mov	r1, r3
900056d8:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900056da:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056de:	4760      	bx	ip

900056e0 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900056e0:	b538      	push	{r3, r4, r5, lr}
900056e2:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900056e4:	2301      	movs	r3, #1
900056e6:	2102      	movs	r1, #2
900056e8:	4622      	mov	r2, r4
900056ea:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900056ee:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900056f0:	b918      	cbnz	r0, 900056fa <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900056f2:	7823      	ldrb	r3, [r4, #0]
900056f4:	f003 030f 	and.w	r3, r3, #15
900056f8:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900056fa:	bd38      	pop	{r3, r4, r5, pc}

900056fc <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900056fc:	b510      	push	{r4, lr}
900056fe:	460c      	mov	r4, r1
90005700:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005702:	2301      	movs	r3, #1
90005704:	2191      	movs	r1, #145	@ 0x91
{
90005706:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000570a:	f10d 0207 	add.w	r2, sp, #7
9000570e:	6804      	ldr	r4, [r0, #0]
90005710:	6880      	ldr	r0, [r0, #8]
90005712:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90005714:	b002      	add	sp, #8
90005716:	bd10      	pop	{r4, pc}

90005718 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005718:	b510      	push	{r4, lr}
9000571a:	460c      	mov	r4, r1
9000571c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000571e:	2301      	movs	r3, #1
90005720:	2192      	movs	r1, #146	@ 0x92
{
90005722:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005726:	f10d 0207 	add.w	r2, sp, #7
9000572a:	6804      	ldr	r4, [r0, #0]
9000572c:	6880      	ldr	r0, [r0, #8]
9000572e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90005730:	b002      	add	sp, #8
90005732:	bd10      	pop	{r4, pc}

90005734 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005734:	b510      	push	{r4, lr}
90005736:	460c      	mov	r4, r1
90005738:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000573a:	2301      	movs	r3, #1
9000573c:	2193      	movs	r1, #147	@ 0x93
{
9000573e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005742:	f10d 0207 	add.w	r2, sp, #7
90005746:	6804      	ldr	r4, [r0, #0]
90005748:	6880      	ldr	r0, [r0, #8]
9000574a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
9000574c:	b002      	add	sp, #8
9000574e:	bd10      	pop	{r4, pc}

90005750 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005750:	b510      	push	{r4, lr}
90005752:	460c      	mov	r4, r1
90005754:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005756:	2301      	movs	r3, #1
90005758:	2194      	movs	r1, #148	@ 0x94
{
9000575a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000575e:	f10d 0207 	add.w	r2, sp, #7
90005762:	6804      	ldr	r4, [r0, #0]
90005764:	6880      	ldr	r0, [r0, #8]
90005766:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90005768:	b002      	add	sp, #8
9000576a:	bd10      	pop	{r4, pc}

9000576c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000576c:	b510      	push	{r4, lr}
9000576e:	460c      	mov	r4, r1
90005770:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005772:	2301      	movs	r3, #1
90005774:	2195      	movs	r1, #149	@ 0x95
{
90005776:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000577a:	f10d 0207 	add.w	r2, sp, #7
9000577e:	6804      	ldr	r4, [r0, #0]
90005780:	6880      	ldr	r0, [r0, #8]
90005782:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90005784:	b002      	add	sp, #8
90005786:	bd10      	pop	{r4, pc}

90005788 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90005788:	b510      	push	{r4, lr}
9000578a:	460c      	mov	r4, r1
9000578c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000578e:	2301      	movs	r3, #1
90005790:	2196      	movs	r1, #150	@ 0x96
{
90005792:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005796:	f10d 0207 	add.w	r2, sp, #7
9000579a:	6804      	ldr	r4, [r0, #0]
9000579c:	6880      	ldr	r0, [r0, #8]
9000579e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900057a0:	b002      	add	sp, #8
900057a2:	bd10      	pop	{r4, pc}

900057a4 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900057a4:	b510      	push	{r4, lr}
900057a6:	460c      	mov	r4, r1
900057a8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900057aa:	2301      	movs	r3, #1
900057ac:	21a4      	movs	r1, #164	@ 0xa4
{
900057ae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900057b2:	f10d 0207 	add.w	r2, sp, #7
900057b6:	6804      	ldr	r4, [r0, #0]
900057b8:	6880      	ldr	r0, [r0, #8]
900057ba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900057bc:	b002      	add	sp, #8
900057be:	bd10      	pop	{r4, pc}

900057c0 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900057c0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900057c2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900057c6:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900057c8:	2301      	movs	r3, #1
900057ca:	46a4      	mov	ip, r4
900057cc:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900057ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900057d2:	4760      	bx	ip

900057d4 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900057d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900057d6:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900057d8:	4c2a      	ldr	r4, [pc, #168]	@ (90005884 <MT48LC4M32B2_Init+0xb0>)
900057da:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
900057dc:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900057de:	682a      	ldr	r2, [r5, #0]
{
900057e0:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
900057e2:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900057e4:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
900057e6:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900057e8:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900057ec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900057f0:	f006 fcc6 	bl	9000c180 <HAL_SDRAM_SendCommand>
900057f4:	2800      	cmp	r0, #0
900057f6:	d142      	bne.n	9000587e <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900057f8:	f000 ff52 	bl	900066a0 <HAL_GetTick>
900057fc:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900057fe:	f000 ff4f 	bl	900066a0 <HAL_GetTick>
90005802:	4286      	cmp	r6, r0
90005804:	d0fb      	beq.n	900057fe <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90005806:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90005808:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000580a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000580c:	491d      	ldr	r1, [pc, #116]	@ (90005884 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000580e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90005810:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90005812:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005814:	4638      	mov	r0, r7
90005816:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
9000581a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000581c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000581e:	f006 fcaf 	bl	9000c180 <HAL_SDRAM_SendCommand>
90005822:	bb60      	cbnz	r0, 9000587e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005824:	4917      	ldr	r1, [pc, #92]	@ (90005884 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90005826:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000582a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000582c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000582e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90005832:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005834:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90005838:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000583a:	f006 fca1 	bl	9000c180 <HAL_SDRAM_SendCommand>
9000583e:	b9f0      	cbnz	r0, 9000587e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005840:	4910      	ldr	r1, [pc, #64]	@ (90005884 <MT48LC4M32B2_Init+0xb0>)
90005842:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90005844:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90005848:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000584a:	696a      	ldr	r2, [r5, #20]
9000584c:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
9000584e:	69aa      	ldr	r2, [r5, #24]
90005850:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90005852:	69ea      	ldr	r2, [r5, #28]
90005854:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90005856:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90005858:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000585a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
9000585c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005860:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90005864:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005866:	f006 fc8b 	bl	9000c180 <HAL_SDRAM_SendCommand>
9000586a:	b940      	cbnz	r0, 9000587e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
9000586c:	68a9      	ldr	r1, [r5, #8]
9000586e:	4638      	mov	r0, r7
90005870:	f006 fca6 	bl	9000c1c0 <HAL_SDRAM_ProgramRefreshRate>
90005874:	3800      	subs	r0, #0
90005876:	bf18      	it	ne
90005878:	2001      	movne	r0, #1
9000587a:	4240      	negs	r0, r0
}
9000587c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
9000587e:	f04f 30ff 	mov.w	r0, #4294967295
}
90005882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90005884:	240077a0 	.word	0x240077a0

90005888 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90005888:	4a10      	ldr	r2, [pc, #64]	@ (900058cc <BSP_I2C4_DeInit+0x44>)
{
9000588a:	b508      	push	{r3, lr}
  I2c4InitCounter--;
9000588c:	6813      	ldr	r3, [r2, #0]
9000588e:	3b01      	subs	r3, #1
90005890:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90005892:	b10b      	cbz	r3, 90005898 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90005894:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90005896:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90005898:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
9000589c:	480c      	ldr	r0, [pc, #48]	@ (900058d0 <BSP_I2C4_DeInit+0x48>)
9000589e:	f001 fe03 	bl	900074a8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900058a2:	480b      	ldr	r0, [pc, #44]	@ (900058d0 <BSP_I2C4_DeInit+0x48>)
900058a4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
900058a8:	f001 fdfe 	bl	900074a8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900058ac:	4a09      	ldr	r2, [pc, #36]	@ (900058d4 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900058ae:	480a      	ldr	r0, [pc, #40]	@ (900058d8 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900058b0:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
900058b4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900058b8:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900058bc:	f002 fa6e 	bl	90007d9c <HAL_I2C_DeInit>
900058c0:	2800      	cmp	r0, #0
900058c2:	d0e7      	beq.n	90005894 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900058c4:	f06f 0007 	mvn.w	r0, #7
}
900058c8:	bd08      	pop	{r3, pc}
900058ca:	bf00      	nop
900058cc:	24008208 	.word	0x24008208
900058d0:	58020c00 	.word	0x58020c00
900058d4:	58024400 	.word	0x58024400
900058d8:	240077b0 	.word	0x240077b0

900058dc <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900058dc:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900058de:	2201      	movs	r2, #1
{
900058e0:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900058e2:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900058e6:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900058ea:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900058ee:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900058f2:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900058f4:	f002 f9f6 	bl	90007ce4 <HAL_I2C_Init>
900058f8:	b108      	cbz	r0, 900058fe <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900058fa:	2001      	movs	r0, #1
}
900058fc:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900058fe:	4601      	mov	r1, r0
90005900:	4620      	mov	r0, r4
90005902:	f002 fc69 	bl	900081d8 <HAL_I2CEx_ConfigAnalogFilter>
90005906:	2800      	cmp	r0, #0
90005908:	d1f7      	bne.n	900058fa <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000590a:	4601      	mov	r1, r0
9000590c:	4620      	mov	r0, r4
9000590e:	f002 fc8d 	bl	9000822c <HAL_I2CEx_ConfigDigitalFilter>
90005912:	3800      	subs	r0, #0
90005914:	bf18      	it	ne
90005916:	2001      	movne	r0, #1
}
90005918:	bd10      	pop	{r4, pc}
9000591a:	bf00      	nop

9000591c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000591c:	4b9b      	ldr	r3, [pc, #620]	@ (90005b8c <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
9000591e:	489c      	ldr	r0, [pc, #624]	@ (90005b90 <BSP_I2C4_Init+0x274>)
90005920:	4a9c      	ldr	r2, [pc, #624]	@ (90005b94 <BSP_I2C4_Init+0x278>)
{
90005922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90005926:	681c      	ldr	r4, [r3, #0]
{
90005928:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000592a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000592c:	b11c      	cbz	r4, 90005936 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
9000592e:	2000      	movs	r0, #0
}
90005930:	b01f      	add	sp, #124	@ 0x7c
90005932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90005936:	2201      	movs	r2, #1
90005938:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000593a:	f002 fc47 	bl	900081cc <HAL_I2C_GetState>
9000593e:	2800      	cmp	r0, #0
90005940:	d1f5      	bne.n	9000592e <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90005942:	4d95      	ldr	r5, [pc, #596]	@ (90005b98 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005944:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90005948:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000594a:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000594c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005950:	f04f 0800 	mov.w	r8, #0
90005954:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90005958:	f043 0308 	orr.w	r3, r3, #8
9000595c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90005960:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90005964:	f003 0308 	and.w	r3, r3, #8
90005968:	9315      	str	r3, [sp, #84]	@ 0x54
9000596a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000596c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90005970:	f043 0308 	orr.w	r3, r3, #8
90005974:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90005978:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000597c:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000597e:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005982:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90005986:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90005988:	a918      	add	r1, sp, #96	@ 0x60
9000598a:	4884      	ldr	r0, [pc, #528]	@ (90005b9c <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000598c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000598e:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90005992:	f001 fb83 	bl	9000709c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90005996:	2312      	movs	r3, #18
90005998:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000599c:	a918      	add	r1, sp, #96	@ 0x60
9000599e:	487f      	ldr	r0, [pc, #508]	@ (90005b9c <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900059a0:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900059a2:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
900059a6:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900059aa:	f001 fb77 	bl	9000709c <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900059ae:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900059b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900059b6:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
900059ba:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900059be:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900059c2:	9317      	str	r3, [sp, #92]	@ 0x5c
900059c4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
900059c6:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900059ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900059ce:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
900059d2:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900059d6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900059da:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900059de:	f005 f9b9 	bl	9000ad54 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900059e2:	2800      	cmp	r0, #0
900059e4:	f000 8196 	beq.w	90005d14 <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900059e8:	4b6d      	ldr	r3, [pc, #436]	@ (90005ba0 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
900059ea:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900059ec:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900059f0:	4e6c      	ldr	r6, [pc, #432]	@ (90005ba4 <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900059f2:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900059f6:	9402      	str	r4, [sp, #8]
900059f8:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900059fc:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
900059fe:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90005a00:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90005a04:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90005a06:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
90005a0a:	4b67      	ldr	r3, [pc, #412]	@ (90005ba8 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90005a0c:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90005a10:	0041      	lsls	r1, r0, #1
90005a12:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
90005a14:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
90005a18:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90005a1c:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
90005a1e:	46a9      	mov	r9, r5
90005a20:	9513      	str	r5, [sp, #76]	@ 0x4c
90005a22:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005a24:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
90005a28:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
90005a2c:	bf2c      	ite	cs
90005a2e:	2001      	movcs	r0, #1
90005a30:	2000      	movcc	r0, #0
90005a32:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
90005a36:	f000 0001 	and.w	r0, r0, #1
90005a3a:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
90005a3e:	bf88      	it	hi
90005a40:	2000      	movhi	r0, #0
90005a42:	4590      	cmp	r8, r2
90005a44:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
90005a48:	9004      	str	r0, [sp, #16]
90005a4a:	bf8c      	ite	hi
90005a4c:	2000      	movhi	r0, #0
90005a4e:	2001      	movls	r0, #1
90005a50:	4596      	cmp	lr, r2
90005a52:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
90005a56:	bf38      	it	cc
90005a58:	2000      	movcc	r0, #0
90005a5a:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90005a5e:	9411      	str	r4, [sp, #68]	@ 0x44
90005a60:	465c      	mov	r4, fp
90005a62:	9006      	str	r0, [sp, #24]
90005a64:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
90005a68:	9007      	str	r0, [sp, #28]
90005a6a:	bf94      	ite	ls
90005a6c:	2001      	movls	r0, #1
90005a6e:	2000      	movhi	r0, #0
90005a70:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
90005a74:	f000 0501 	and.w	r5, r0, #1
90005a78:	bf38      	it	cc
90005a7a:	2500      	movcc	r5, #0
90005a7c:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005a7e:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005a82:	9508      	str	r5, [sp, #32]
90005a84:	bf8c      	ite	hi
90005a86:	2500      	movhi	r5, #0
90005a88:	2501      	movls	r5, #1
90005a8a:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005a8c:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005a8e:	bf38      	it	cc
90005a90:	2500      	movcc	r5, #0
90005a92:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
90005a96:	bf98      	it	ls
90005a98:	2001      	movls	r0, #1
90005a9a:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90005a9e:	9509      	str	r5, [sp, #36]	@ 0x24
90005aa0:	4665      	mov	r5, ip
90005aa2:	f000 0001 	and.w	r0, r0, #1
90005aa6:	bf38      	it	cc
90005aa8:	2000      	movcc	r0, #0
90005aaa:	45d8      	cmp	r8, fp
90005aac:	900a      	str	r0, [sp, #40]	@ 0x28
90005aae:	4658      	mov	r0, fp
90005ab0:	bf8c      	ite	hi
90005ab2:	2000      	movhi	r0, #0
90005ab4:	2001      	movls	r0, #1
90005ab6:	45de      	cmp	lr, fp
90005ab8:	bf38      	it	cc
90005aba:	2000      	movcc	r0, #0
90005abc:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
90005ac0:	4683      	mov	fp, r0
90005ac2:	bf94      	ite	ls
90005ac4:	f04f 0b01 	movls.w	fp, #1
90005ac8:	f04f 0b00 	movhi.w	fp, #0
90005acc:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
90005ad0:	900b      	str	r0, [sp, #44]	@ 0x2c
90005ad2:	f00b 0b01 	and.w	fp, fp, #1
90005ad6:	bf38      	it	cc
90005ad8:	f04f 0b00 	movcc.w	fp, #0
90005adc:	4658      	mov	r0, fp
90005ade:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
90005ae2:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
90005ae6:	45d8      	cmp	r8, fp
90005ae8:	bf8c      	ite	hi
90005aea:	2000      	movhi	r0, #0
90005aec:	2001      	movls	r0, #1
90005aee:	45de      	cmp	lr, fp
90005af0:	bf38      	it	cc
90005af2:	2000      	movcc	r0, #0
90005af4:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
90005af8:	900d      	str	r0, [sp, #52]	@ 0x34
90005afa:	bf98      	it	ls
90005afc:	f04f 0b01 	movls.w	fp, #1
90005b00:	9807      	ldr	r0, [sp, #28]
90005b02:	bf88      	it	hi
90005b04:	f04f 0b00 	movhi.w	fp, #0
90005b08:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90005b0c:	f00b 0101 	and.w	r1, fp, #1
90005b10:	bf38      	it	cc
90005b12:	2100      	movcc	r1, #0
90005b14:	4580      	cmp	r8, r0
90005b16:	910e      	str	r1, [sp, #56]	@ 0x38
90005b18:	4601      	mov	r1, r0
90005b1a:	bf8c      	ite	hi
90005b1c:	2100      	movhi	r1, #0
90005b1e:	2101      	movls	r1, #1
90005b20:	4586      	cmp	lr, r0
90005b22:	4620      	mov	r0, r4
90005b24:	bf38      	it	cc
90005b26:	2100      	movcc	r1, #0
90005b28:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
90005b2c:	910f      	str	r1, [sp, #60]	@ 0x3c
90005b2e:	bf94      	ite	ls
90005b30:	2101      	movls	r1, #1
90005b32:	2100      	movhi	r1, #0
90005b34:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
90005b38:	f001 0101 	and.w	r1, r1, #1
90005b3c:	bf38      	it	cc
90005b3e:	2100      	movcc	r1, #0
90005b40:	9110      	str	r1, [sp, #64]	@ 0x40
90005b42:	9911      	ldr	r1, [sp, #68]	@ 0x44
90005b44:	4588      	cmp	r8, r1
90005b46:	460a      	mov	r2, r1
90005b48:	bf8c      	ite	hi
90005b4a:	2200      	movhi	r2, #0
90005b4c:	2201      	movls	r2, #1
90005b4e:	458e      	cmp	lr, r1
90005b50:	bf38      	it	cc
90005b52:	2200      	movcc	r2, #0
90005b54:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
90005b58:	9211      	str	r2, [sp, #68]	@ 0x44
90005b5a:	bf94      	ite	ls
90005b5c:	2201      	movls	r2, #1
90005b5e:	2200      	movhi	r2, #0
90005b60:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90005b64:	f04f 0400 	mov.w	r4, #0
90005b68:	f002 0201 	and.w	r2, r2, #1
90005b6c:	bf38      	it	cc
90005b6e:	2200      	movcc	r2, #0
90005b70:	9212      	str	r2, [sp, #72]	@ 0x48
90005b72:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
90005b76:	4590      	cmp	r8, r2
90005b78:	bf8c      	ite	hi
90005b7a:	2100      	movhi	r1, #0
90005b7c:	2101      	movls	r1, #1
90005b7e:	4596      	cmp	lr, r2
90005b80:	bf38      	it	cc
90005b82:	2100      	movcc	r1, #0
90005b84:	460a      	mov	r2, r1
90005b86:	9107      	str	r1, [sp, #28]
90005b88:	e014      	b.n	90005bb4 <BSP_I2C4_Init+0x298>
90005b8a:	bf00      	nop
90005b8c:	24008208 	.word	0x24008208
90005b90:	240077b0 	.word	0x240077b0
90005b94:	58001c00 	.word	0x58001c00
90005b98:	58024400 	.word	0x58024400
90005b9c:	58020c00 	.word	0x58020c00
90005ba0:	3b9aca00 	.word	0x3b9aca00
90005ba4:	24007808 	.word	0x24007808
90005ba8:	24007804 	.word	0x24007804
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005bac:	2c10      	cmp	r4, #16
90005bae:	4465      	add	r5, ip
90005bb0:	f000 827d 	beq.w	900060ae <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
90005bb4:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90005bb8:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90005bba:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90005bbe:	d3f5      	bcc.n	90005bac <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90005bc0:	fab8 fb88 	clz	fp, r8
90005bc4:	4557      	cmp	r7, sl
90005bc6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90005bca:	bf08      	it	eq
90005bcc:	f04f 0b00 	moveq.w	fp, #0
90005bd0:	f1bb 0f00 	cmp.w	fp, #0
90005bd4:	f040 8200 	bne.w	90005fd8 <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005bd8:	45f4      	cmp	ip, lr
90005bda:	bf8c      	ite	hi
90005bdc:	2200      	movhi	r2, #0
90005bde:	2201      	movls	r2, #1
90005be0:	45c4      	cmp	ip, r8
90005be2:	bf38      	it	cc
90005be4:	2200      	movcc	r2, #0
            if(presc != prev_presc)
90005be6:	4557      	cmp	r7, sl
90005be8:	bf0c      	ite	eq
90005bea:	2200      	moveq	r2, #0
90005bec:	f002 0201 	andne.w	r2, r2, #1
90005bf0:	2a00      	cmp	r2, #0
90005bf2:	f000 8099 	beq.w	90005d28 <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005bf6:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005bfa:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005bfe:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c00:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c04:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c08:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005c0c:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c0e:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005c10:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c12:	f200 80f2 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005c16:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005c18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005c1a:	4557      	cmp	r7, sl
90005c1c:	bf0c      	ite	eq
90005c1e:	2300      	moveq	r3, #0
90005c20:	f003 0301 	andne.w	r3, r3, #1
90005c24:	469b      	mov	fp, r3
90005c26:	2b00      	cmp	r3, #0
90005c28:	f000 8097 	beq.w	90005d5a <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c2c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005c30:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005c34:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c36:	4630      	mov	r0, r6
90005c38:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c3c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c40:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005c44:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005c46:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c48:	f200 80d7 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
90005c4c:	465a      	mov	r2, fp
              prev_presc = presc;
90005c4e:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005c50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90005c52:	4557      	cmp	r7, sl
90005c54:	bf0c      	ite	eq
90005c56:	2300      	moveq	r3, #0
90005c58:	f003 0301 	andne.w	r3, r3, #1
90005c5c:	469b      	mov	fp, r3
90005c5e:	2b00      	cmp	r3, #0
90005c60:	f000 8096 	beq.w	90005d90 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c64:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005c68:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005c6c:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c6e:	4630      	mov	r0, r6
90005c70:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c74:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c78:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005c7c:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005c7e:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005c80:	f200 80bb 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
90005c84:	465a      	mov	r2, fp
              prev_presc = presc;
90005c86:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005c88:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90005c8a:	4557      	cmp	r7, sl
90005c8c:	bf0c      	ite	eq
90005c8e:	2300      	moveq	r3, #0
90005c90:	f003 0301 	andne.w	r3, r3, #1
90005c94:	2b00      	cmp	r3, #0
90005c96:	f000 8096 	beq.w	90005dc6 <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005c9a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005c9e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005ca2:	4630      	mov	r0, r6
90005ca4:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90005ca8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005cac:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005cb0:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005cb2:	f04f 010d 	mov.w	r1, #13
90005cb6:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005cb8:	f200 809f 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005cbc:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90005cbe:	e775      	b.n	90005bac <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90005cc0:	9a06      	ldr	r2, [sp, #24]
90005cc2:	4661      	mov	r1, ip
90005cc4:	f109 0914 	add.w	r9, r9, #20
90005cc8:	3201      	adds	r2, #1
90005cca:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90005cce:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
90005cd2:	4572      	cmp	r2, lr
90005cd4:	9206      	str	r2, [sp, #24]
90005cd6:	f040 80b4 	bne.w	90005e42 <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
90005cda:	9b01      	ldr	r3, [sp, #4]
90005cdc:	2b7f      	cmp	r3, #127	@ 0x7f
90005cde:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90005ce2:	d817      	bhi.n	90005d14 <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90005ce4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90005ce8:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90005cec:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90005cf0:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90005cf2:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90005cf4:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90005cf6:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90005cfa:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90005cfe:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90005d02:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90005d04:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90005d06:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90005d08:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90005d0c:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90005d0e:	430b      	orrs	r3, r1
90005d10:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90005d14:	4621      	mov	r1, r4
90005d16:	48ad      	ldr	r0, [pc, #692]	@ (90005fcc <BSP_I2C4_Init+0x6b0>)
90005d18:	f7ff fde0 	bl	900058dc <MX_I2C4_Init>
90005d1c:	2800      	cmp	r0, #0
90005d1e:	f43f ae06 	beq.w	9000592e <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90005d22:	f06f 0007 	mvn.w	r0, #7
  return ret;
90005d26:	e603      	b.n	90005930 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90005d28:	9a04      	ldr	r2, [sp, #16]
90005d2a:	4557      	cmp	r7, sl
90005d2c:	bf0c      	ite	eq
90005d2e:	2200      	moveq	r2, #0
90005d30:	f002 0201 	andne.w	r2, r2, #1
90005d34:	2a00      	cmp	r2, #0
90005d36:	f000 81cf 	beq.w	900060d8 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d3a:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005d3e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005d42:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d44:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005d48:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d4c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005d50:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d52:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005d54:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005d56:	d850      	bhi.n	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005d58:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005d5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90005d5c:	4557      	cmp	r7, sl
90005d5e:	bf0c      	ite	eq
90005d60:	2300      	moveq	r3, #0
90005d62:	f003 0301 	andne.w	r3, r3, #1
90005d66:	469b      	mov	fp, r3
90005d68:	2b00      	cmp	r3, #0
90005d6a:	f000 80da 	beq.w	90005f22 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d6e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005d72:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005d76:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d78:	4630      	mov	r0, r6
90005d7a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005d7e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d82:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005d86:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005d88:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005d8a:	d836      	bhi.n	90005dfa <BSP_I2C4_Init+0x4de>
90005d8c:	465a      	mov	r2, fp
              prev_presc = presc;
90005d8e:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005d90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90005d92:	4557      	cmp	r7, sl
90005d94:	bf0c      	ite	eq
90005d96:	2300      	moveq	r3, #0
90005d98:	f003 0301 	andne.w	r3, r3, #1
90005d9c:	469b      	mov	fp, r3
90005d9e:	2b00      	cmp	r3, #0
90005da0:	f000 80db 	beq.w	90005f5a <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005da4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005da8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005dac:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005dae:	4630      	mov	r0, r6
90005db0:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005db4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005db8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005dbc:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005dbe:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005dc0:	d81b      	bhi.n	90005dfa <BSP_I2C4_Init+0x4de>
90005dc2:	465a      	mov	r2, fp
              prev_presc = presc;
90005dc4:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005dc6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90005dc8:	4557      	cmp	r7, sl
90005dca:	bf0c      	ite	eq
90005dcc:	2300      	moveq	r3, #0
90005dce:	f003 0301 	andne.w	r3, r3, #1
90005dd2:	2b00      	cmp	r3, #0
90005dd4:	f000 80dd 	beq.w	90005f92 <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005dd8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005ddc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005de0:	4630      	mov	r0, r6
90005de2:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90005de6:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005dea:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005dee:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005df0:	f04f 010e 	mov.w	r1, #14
90005df4:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005df6:	f67f af61 	bls.w	90005cbc <BSP_I2C4_Init+0x3a0>
90005dfa:	4b75      	ldr	r3, [pc, #468]	@ (90005fd0 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90005dfc:	464d      	mov	r5, r9
90005dfe:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
90005e02:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90005e06:	f640 0234 	movw	r2, #2100	@ 0x834
90005e0a:	f101 0332 	add.w	r3, r1, #50	@ 0x32
90005e0e:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e12:	2700      	movs	r7, #0
90005e14:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005e16:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e18:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005e1a:	461c      	mov	r4, r3
90005e1c:	eba2 0c03 	sub.w	ip, r2, r3
90005e20:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e22:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005e26:	460b      	mov	r3, r1
90005e28:	4296      	cmp	r6, r2
90005e2a:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 90005fd4 <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e2e:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005e32:	f240 4a12 	movw	sl, #1042	@ 0x412
90005e36:	bf38      	it	cc
90005e38:	4616      	movcc	r6, r2
90005e3a:	46ae      	mov	lr, r5
90005e3c:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e3e:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005e40:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90005e42:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90005e46:	2500      	movs	r5, #0
90005e48:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90005e4c:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90005e50:	930d      	str	r3, [sp, #52]	@ 0x34
90005e52:	18c2      	adds	r2, r0, r3
90005e54:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
90005e58:	1907      	adds	r7, r0, r4
90005e5a:	468c      	mov	ip, r1
90005e5c:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
90005e60:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90005e64:	9207      	str	r2, [sp, #28]
90005e66:	e006      	b.n	90005e76 <BSP_I2C4_Init+0x55a>
90005e68:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90005e6c:	4407      	add	r7, r0
90005e6e:	eba8 0800 	sub.w	r8, r8, r0
90005e72:	f43f af25 	beq.w	90005cc0 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90005e76:	f240 5314 	movw	r3, #1300	@ 0x514
90005e7a:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e7c:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90005e7e:	429f      	cmp	r7, r3
90005e80:	d9f2      	bls.n	90005e68 <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90005e82:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90005e86:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90005e8a:	d2ed      	bcs.n	90005e68 <BSP_I2C4_Init+0x54c>
90005e8c:	f640 0e34 	movw	lr, #2100	@ 0x834
90005e90:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90005e92:	f8cd 8010 	str.w	r8, [sp, #16]
90005e96:	2200      	movs	r2, #0
90005e98:	ebae 0e03 	sub.w	lr, lr, r3
90005e9c:	9b07      	ldr	r3, [sp, #28]
90005e9e:	9705      	str	r7, [sp, #20]
90005ea0:	443b      	add	r3, r7
90005ea2:	f8dd 8018 	ldr.w	r8, [sp, #24]
90005ea6:	460f      	mov	r7, r1
90005ea8:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90005eac:	46b4      	mov	ip, r6
90005eae:	e005      	b.n	90005ebc <BSP_I2C4_Init+0x5a0>
90005eb0:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90005eb4:	4403      	add	r3, r0
90005eb6:	eba4 0400 	sub.w	r4, r4, r0
90005eba:	d01a      	beq.n	90005ef2 <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005ebc:	eb0e 0103 	add.w	r1, lr, r3
90005ec0:	4616      	mov	r6, r2
90005ec2:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90005ec6:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90005ec8:	4561      	cmp	r1, ip
90005eca:	d9f1      	bls.n	90005eb0 <BSP_I2C4_Init+0x594>
90005ecc:	4555      	cmp	r5, sl
90005ece:	d8ef      	bhi.n	90005eb0 <BSP_I2C4_Init+0x594>
            if (error < 0)
90005ed0:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90005ed4:	bf28      	it	cs
90005ed6:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90005ed8:	458b      	cmp	fp, r1
90005eda:	d9e9      	bls.n	90005eb0 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90005edc:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
90005ee0:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90005ee2:	4403      	add	r3, r0
90005ee4:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
90005ee8:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90005eec:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90005ef0:	d1e4      	bne.n	90005ebc <BSP_I2C4_Init+0x5a0>
90005ef2:	4666      	mov	r6, ip
90005ef4:	9d02      	ldr	r5, [sp, #8]
90005ef6:	f8dd c00c 	ldr.w	ip, [sp, #12]
90005efa:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
90005efe:	e7b3      	b.n	90005e68 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f00:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005f04:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f08:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f0a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f0e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f12:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f16:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f18:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005f1a:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f1c:	f63f af6d 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005f20:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005f22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90005f24:	4557      	cmp	r7, sl
90005f26:	bf0c      	ite	eq
90005f28:	2300      	moveq	r3, #0
90005f2a:	f003 0301 	andne.w	r3, r3, #1
90005f2e:	469b      	mov	fp, r3
90005f30:	2b00      	cmp	r3, #0
90005f32:	f000 8084 	beq.w	9000603e <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f36:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005f3a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f3e:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f40:	4630      	mov	r0, r6
90005f42:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f46:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f4a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005f4e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f50:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f52:	f63f af52 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
90005f56:	465a      	mov	r2, fp
              prev_presc = presc;
90005f58:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005f5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90005f5c:	4557      	cmp	r7, sl
90005f5e:	bf0c      	ite	eq
90005f60:	2300      	moveq	r3, #0
90005f62:	f003 0301 	andne.w	r3, r3, #1
90005f66:	469b      	mov	fp, r3
90005f68:	2b00      	cmp	r3, #0
90005f6a:	f000 8084 	beq.w	90006076 <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f6e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005f72:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f76:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f78:	4630      	mov	r0, r6
90005f7a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f7e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f82:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005f86:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f88:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f8a:	f63f af36 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
90005f8e:	465a      	mov	r2, fp
              prev_presc = presc;
90005f90:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005f92:	9b07      	ldr	r3, [sp, #28]
90005f94:	4557      	cmp	r7, sl
90005f96:	bf0c      	ite	eq
90005f98:	2300      	moveq	r3, #0
90005f9a:	f003 0301 	andne.w	r3, r3, #1
90005f9e:	2b00      	cmp	r3, #0
90005fa0:	f000 8098 	beq.w	900060d4 <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fa4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90005fa8:	480a      	ldr	r0, [pc, #40]	@ (90005fd4 <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90005faa:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fae:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
90005fb2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005fb6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005fba:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005fbc:	f04f 010f 	mov.w	r1, #15
90005fc0:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005fc2:	f63f af1a 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005fc6:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90005fc8:	e5f0      	b.n	90005bac <BSP_I2C4_Init+0x290>
90005fca:	bf00      	nop
90005fcc:	240077b0 	.word	0x240077b0
90005fd0:	24007804 	.word	0x24007804
90005fd4:	24007808 	.word	0x24007808
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fd8:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005fdc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005fe0:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fe2:	4630      	mov	r0, r6
90005fe4:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005fe8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fec:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005ff0:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005ff2:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005ff4:	f63f af01 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005ff8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005ffa:	9a06      	ldr	r2, [sp, #24]
90005ffc:	45ba      	cmp	sl, r7
90005ffe:	bf0c      	ite	eq
90006000:	2200      	moveq	r2, #0
90006002:	f002 0201 	andne.w	r2, r2, #1
90006006:	2a00      	cmp	r2, #0
90006008:	f47f af7a 	bne.w	90005f00 <BSP_I2C4_Init+0x5e4>
9000600c:	9a08      	ldr	r2, [sp, #32]
9000600e:	45ba      	cmp	sl, r7
90006010:	bf0c      	ite	eq
90006012:	2200      	moveq	r2, #0
90006014:	f002 0201 	andne.w	r2, r2, #1
90006018:	2a00      	cmp	r2, #0
9000601a:	d05f      	beq.n	900060dc <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000601c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006020:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006024:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006026:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000602a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000602e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006032:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006034:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006036:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006038:	f63f aedf 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000603c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000603e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90006040:	4557      	cmp	r7, sl
90006042:	bf0c      	ite	eq
90006044:	2300      	moveq	r3, #0
90006046:	f003 0301 	andne.w	r3, r3, #1
9000604a:	469b      	mov	fp, r3
9000604c:	2b00      	cmp	r3, #0
9000604e:	f43f adff 	beq.w	90005c50 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006052:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006056:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000605a:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000605c:	4630      	mov	r0, r6
9000605e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006062:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006066:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000606a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000606c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000606e:	f63f aec4 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
90006072:	465a      	mov	r2, fp
              prev_presc = presc;
90006074:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006076:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90006078:	4557      	cmp	r7, sl
9000607a:	bf0c      	ite	eq
9000607c:	2300      	moveq	r3, #0
9000607e:	f003 0301 	andne.w	r3, r3, #1
90006082:	2b00      	cmp	r3, #0
90006084:	f43f ae00 	beq.w	90005c88 <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006088:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000608c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006090:	4630      	mov	r0, r6
90006092:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006096:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000609a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000609e:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900060a0:	f04f 010c 	mov.w	r1, #12
900060a4:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900060a6:	f63f aea8 	bhi.w	90005dfa <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900060aa:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900060ac:	e57e      	b.n	90005bac <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900060ae:	3701      	adds	r7, #1
900060b0:	9a01      	ldr	r2, [sp, #4]
900060b2:	2f10      	cmp	r7, #16
900060b4:	4494      	add	ip, r2
900060b6:	f47f acb5 	bne.w	90005a24 <BSP_I2C4_Init+0x108>
900060ba:	9c02      	ldr	r4, [sp, #8]
900060bc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900060be:	9903      	ldr	r1, [sp, #12]
900060c0:	b11b      	cbz	r3, 900060ca <BSP_I2C4_Init+0x7ae>
900060c2:	4b07      	ldr	r3, [pc, #28]	@ (900060e0 <BSP_I2C4_Init+0x7c4>)
900060c4:	464d      	mov	r5, r9
900060c6:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900060ca:	2d00      	cmp	r5, #0
900060cc:	f43f ae22 	beq.w	90005d14 <BSP_I2C4_Init+0x3f8>
900060d0:	4804      	ldr	r0, [pc, #16]	@ (900060e4 <BSP_I2C4_Init+0x7c8>)
900060d2:	e698      	b.n	90005e06 <BSP_I2C4_Init+0x4ea>
900060d4:	4613      	mov	r3, r2
900060d6:	e569      	b.n	90005bac <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
900060d8:	469b      	mov	fp, r3
900060da:	e78e      	b.n	90005ffa <BSP_I2C4_Init+0x6de>
900060dc:	465a      	mov	r2, fp
900060de:	e59b      	b.n	90005c18 <BSP_I2C4_Init+0x2fc>
900060e0:	24007804 	.word	0x24007804
900060e4:	24007808 	.word	0x24007808

900060e8 <BSP_I2C4_WriteReg>:
{
900060e8:	b530      	push	{r4, r5, lr}
900060ea:	4614      	mov	r4, r2
900060ec:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900060ee:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900060f2:	460a      	mov	r2, r1
900060f4:	9301      	str	r3, [sp, #4]
900060f6:	4601      	mov	r1, r0
900060f8:	2301      	movs	r3, #1
900060fa:	4809      	ldr	r0, [pc, #36]	@ (90006120 <BSP_I2C4_WriteReg+0x38>)
900060fc:	9502      	str	r5, [sp, #8]
900060fe:	9400      	str	r4, [sp, #0]
90006100:	f001 fe66 	bl	90007dd0 <HAL_I2C_Mem_Write>
90006104:	b908      	cbnz	r0, 9000610a <BSP_I2C4_WriteReg+0x22>
}
90006106:	b005      	add	sp, #20
90006108:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000610a:	4805      	ldr	r0, [pc, #20]	@ (90006120 <BSP_I2C4_WriteReg+0x38>)
9000610c:	f002 f862 	bl	900081d4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006110:	2804      	cmp	r0, #4
90006112:	bf14      	ite	ne
90006114:	f06f 0003 	mvnne.w	r0, #3
90006118:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
9000611c:	e7f3      	b.n	90006106 <BSP_I2C4_WriteReg+0x1e>
9000611e:	bf00      	nop
90006120:	240077b0 	.word	0x240077b0

90006124 <BSP_I2C4_ReadReg>:
{
90006124:	b530      	push	{r4, r5, lr}
90006126:	4614      	mov	r4, r2
90006128:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000612a:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000612e:	460a      	mov	r2, r1
90006130:	9301      	str	r3, [sp, #4]
90006132:	4601      	mov	r1, r0
90006134:	2301      	movs	r3, #1
90006136:	4809      	ldr	r0, [pc, #36]	@ (9000615c <BSP_I2C4_ReadReg+0x38>)
90006138:	9502      	str	r5, [sp, #8]
9000613a:	9400      	str	r4, [sp, #0]
9000613c:	f001 ff46 	bl	90007fcc <HAL_I2C_Mem_Read>
90006140:	b908      	cbnz	r0, 90006146 <BSP_I2C4_ReadReg+0x22>
}
90006142:	b005      	add	sp, #20
90006144:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006146:	4805      	ldr	r0, [pc, #20]	@ (9000615c <BSP_I2C4_ReadReg+0x38>)
90006148:	f002 f844 	bl	900081d4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000614c:	2804      	cmp	r0, #4
9000614e:	bf14      	ite	ne
90006150:	f06f 0003 	mvnne.w	r0, #3
90006154:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006158:	e7f3      	b.n	90006142 <BSP_I2C4_ReadReg+0x1e>
9000615a:	bf00      	nop
9000615c:	240077b0 	.word	0x240077b0

90006160 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90006160:	f000 ba9e 	b.w	900066a0 <HAL_GetTick>

90006164 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90006164:	b970      	cbnz	r0, 90006184 <BSP_SDRAM_DeInit+0x20>
{
90006166:	b510      	push	{r4, lr}
90006168:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000616a:	4808      	ldr	r0, [pc, #32]	@ (9000618c <BSP_SDRAM_DeInit+0x28>)
9000616c:	f005 fffa 	bl	9000c164 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90006170:	207a      	movs	r0, #122	@ 0x7a
90006172:	f000 fafd 	bl	90006770 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006176:	4b06      	ldr	r3, [pc, #24]	@ (90006190 <BSP_SDRAM_DeInit+0x2c>)
90006178:	4806      	ldr	r0, [pc, #24]	@ (90006194 <BSP_SDRAM_DeInit+0x30>)
9000617a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000617c:	f003 fe5e 	bl	90009e3c <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90006180:	4620      	mov	r0, r4
}
90006182:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006184:	f06f 0001 	mvn.w	r0, #1
}
90006188:	4770      	bx	lr
9000618a:	bf00      	nop
9000618c:	24008304 	.word	0x24008304
90006190:	52000040 	.word	0x52000040
90006194:	2400820c 	.word	0x2400820c

90006198 <MX_SDRAM_BANK2_Init>:
{
90006198:	b530      	push	{r4, r5, lr}
9000619a:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000619c:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000619e:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
900061a0:	4c13      	ldr	r4, [pc, #76]	@ (900061f0 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900061a2:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900061a4:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900061a6:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
900061a8:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900061aa:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900061ac:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900061b0:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900061b2:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
900061b4:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
900061b6:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900061b8:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900061ba:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900061bc:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900061be:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900061c0:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900061c2:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900061c6:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900061c8:	f44f 6500 	mov.w	r5, #2048	@ 0x800
900061cc:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900061d0:	2204      	movs	r2, #4
900061d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900061d6:	2202      	movs	r2, #2
900061d8:	2302      	movs	r3, #2
900061da:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900061de:	4b05      	ldr	r3, [pc, #20]	@ (900061f4 <MX_SDRAM_BANK2_Init+0x5c>)
900061e0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900061e2:	f005 ff95 	bl	9000c110 <HAL_SDRAM_Init>
}
900061e6:	3800      	subs	r0, #0
900061e8:	bf18      	it	ne
900061ea:	2001      	movne	r0, #1
900061ec:	b009      	add	sp, #36	@ 0x24
900061ee:	bd30      	pop	{r4, r5, pc}
900061f0:	24008304 	.word	0x24008304
900061f4:	52004140 	.word	0x52004140

900061f8 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900061f8:	2800      	cmp	r0, #0
900061fa:	f040 80cd 	bne.w	90006398 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
900061fe:	4b69      	ldr	r3, [pc, #420]	@ (900063a4 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006200:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90006202:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006206:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
9000620a:	b5f0      	push	{r4, r5, r6, r7, lr}
9000620c:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
9000620e:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90006212:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006216:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006218:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
9000621a:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
9000621c:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006220:	4c61      	ldr	r4, [pc, #388]	@ (900063a8 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006222:	4e62      	ldr	r6, [pc, #392]	@ (900063ac <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006224:	9200      	str	r2, [sp, #0]
90006226:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90006228:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000622c:	430a      	orrs	r2, r1
9000622e:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90006232:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006236:	400a      	ands	r2, r1
90006238:	9201      	str	r2, [sp, #4]
9000623a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000623c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006240:	f042 0208 	orr.w	r2, r2, #8
90006244:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006248:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000624c:	f002 0208 	and.w	r2, r2, #8
90006250:	9202      	str	r2, [sp, #8]
90006252:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90006254:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006258:	f042 0210 	orr.w	r2, r2, #16
9000625c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006260:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006264:	f002 0210 	and.w	r2, r2, #16
90006268:	9203      	str	r2, [sp, #12]
9000626a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000626c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006270:	f042 0220 	orr.w	r2, r2, #32
90006274:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006278:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000627c:	f002 0220 	and.w	r2, r2, #32
90006280:	9204      	str	r2, [sp, #16]
90006282:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90006284:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006288:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000628c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006290:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006294:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90006298:	9205      	str	r2, [sp, #20]
9000629a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000629c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900062a0:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900062a4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900062a8:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
900062aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900062ae:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900062b0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900062b4:	483e      	ldr	r0, [pc, #248]	@ (900063b0 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
900062b6:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
900062b8:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900062ba:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
900062be:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900062c0:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900062c2:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900062c4:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900062c8:	f000 fee8 	bl	9000709c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900062cc:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900062d0:	a907      	add	r1, sp, #28
900062d2:	4838      	ldr	r0, [pc, #224]	@ (900063b4 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900062d4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900062d6:	f000 fee1 	bl	9000709c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900062da:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900062de:	a907      	add	r1, sp, #28
900062e0:	4835      	ldr	r0, [pc, #212]	@ (900063b8 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900062e2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900062e4:	f000 feda 	bl	9000709c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900062e8:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900062ec:	a907      	add	r1, sp, #28
900062ee:	4833      	ldr	r0, [pc, #204]	@ (900063bc <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900062f0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900062f2:	f000 fed3 	bl	9000709c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900062f6:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900062f8:	a907      	add	r1, sp, #28
900062fa:	4831      	ldr	r0, [pc, #196]	@ (900063c0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900062fc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900062fe:	f000 fecd 	bl	9000709c <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006302:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006304:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006308:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000630c:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000630e:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90006310:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006312:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006314:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006318:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000631a:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000631c:	4a29      	ldr	r2, [pc, #164]	@ (900063c4 <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
9000631e:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006320:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90006322:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006324:	6334      	str	r4, [r6, #48]	@ 0x30
90006326:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90006328:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000632c:	f640 0308 	movw	r3, #2056	@ 0x808
90006330:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90006332:	2320      	movs	r3, #32
90006334:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006336:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
9000633a:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000633e:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90006340:	f003 fd7c 	bl	90009e3c <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006344:	4620      	mov	r0, r4
90006346:	f003 fcff 	bl	90009d48 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000634a:	462a      	mov	r2, r5
9000634c:	210f      	movs	r1, #15
9000634e:	207a      	movs	r0, #122	@ 0x7a
90006350:	f000 f9c4 	bl	900066dc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90006354:	207a      	movs	r0, #122	@ 0x7a
90006356:	f000 f9fd 	bl	90006754 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000635a:	2210      	movs	r2, #16
9000635c:	2104      	movs	r1, #4
9000635e:	4630      	mov	r0, r6
90006360:	f7ff ff1a 	bl	90006198 <MX_SDRAM_BANK2_Init>
90006364:	4603      	mov	r3, r0
90006366:	b9d0      	cbnz	r0, 9000639e <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006368:	4917      	ldr	r1, [pc, #92]	@ (900063c8 <BSP_SDRAM_Init+0x1d0>)
9000636a:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
9000636c:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000636e:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006370:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006372:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90006376:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006378:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
9000637c:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006380:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006384:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006388:	f7ff fa24 	bl	900057d4 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000638c:	2800      	cmp	r0, #0
9000638e:	bf18      	it	ne
90006390:	f06f 0004 	mvnne.w	r0, #4
}
90006394:	b00d      	add	sp, #52	@ 0x34
90006396:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006398:	f06f 0001 	mvn.w	r0, #1
}
9000639c:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000639e:	f04f 30ff 	mov.w	r0, #4294967295
900063a2:	e7f7      	b.n	90006394 <BSP_SDRAM_Init+0x19c>
900063a4:	58024400 	.word	0x58024400
900063a8:	24008278 	.word	0x24008278
900063ac:	24008304 	.word	0x24008304
900063b0:	58020c00 	.word	0x58020c00
900063b4:	58021000 	.word	0x58021000
900063b8:	58021400 	.word	0x58021400
900063bc:	58021800 	.word	0x58021800
900063c0:	58021c00 	.word	0x58021c00
900063c4:	52000040 	.word	0x52000040
900063c8:	240082e4 	.word	0x240082e4

900063cc <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900063cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900063d0:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900063d2:	2800      	cmp	r0, #0
900063d4:	d16b      	bne.n	900064ae <BSP_TS_Init+0xe2>
900063d6:	680b      	ldr	r3, [r1, #0]
900063d8:	460d      	mov	r5, r1
900063da:	1e5a      	subs	r2, r3, #1
900063dc:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
900063e0:	d265      	bcs.n	900064ae <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900063e2:	684a      	ldr	r2, [r1, #4]
900063e4:	1e51      	subs	r1, r2, #1
900063e6:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
900063ea:	d260      	bcs.n	900064ae <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900063ec:	4293      	cmp	r3, r2
900063ee:	bf28      	it	cs
900063f0:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900063f2:	68ea      	ldr	r2, [r5, #12]
900063f4:	429a      	cmp	r2, r3
900063f6:	d85a      	bhi.n	900064ae <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900063f8:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900063fa:	4b31      	ldr	r3, [pc, #196]	@ (900064c0 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900063fc:	4c31      	ldr	r4, [pc, #196]	@ (900064c4 <BSP_TS_Init+0xf8>)
900063fe:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90006400:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90006404:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006406:	4a30      	ldr	r2, [pc, #192]	@ (900064c8 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006408:	4b30      	ldr	r3, [pc, #192]	@ (900064cc <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000640a:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000640c:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000640e:	4a30      	ldr	r2, [pc, #192]	@ (900064d0 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90006410:	4b30      	ldr	r3, [pc, #192]	@ (900064d4 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90006412:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006414:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006416:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90006418:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000641a:	f7ff f92d 	bl	90005678 <FT5336_RegisterBusIO>
9000641e:	2800      	cmp	r0, #0
90006420:	d14b      	bne.n	900064ba <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90006422:	a901      	add	r1, sp, #4
90006424:	4620      	mov	r0, r4
90006426:	f7ff f81d 	bl	90005464 <FT5336_ReadID>
9000642a:	2800      	cmp	r0, #0
9000642c:	d145      	bne.n	900064ba <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000642e:	9b01      	ldr	r3, [sp, #4]
90006430:	2b51      	cmp	r3, #81	@ 0x51
90006432:	d142      	bne.n	900064ba <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006434:	4b28      	ldr	r3, [pc, #160]	@ (900064d8 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006436:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006438:	4f28      	ldr	r7, [pc, #160]	@ (900064dc <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000643a:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 900064e4 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000643e:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006440:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006444:	681b      	ldr	r3, [r3, #0]
90006446:	4798      	blx	r3
90006448:	4606      	mov	r6, r0
9000644a:	2800      	cmp	r0, #0
9000644c:	d135      	bne.n	900064ba <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000644e:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006450:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006452:	4c23      	ldr	r4, [pc, #140]	@ (900064e0 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006454:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006458:	6022      	str	r2, [r4, #0]
9000645a:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000645c:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000645e:	6062      	str	r2, [r4, #4]
90006460:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006462:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006464:	60a2      	str	r2, [r4, #8]
90006466:	68ea      	ldr	r2, [r5, #12]
90006468:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000646a:	4798      	blx	r3
9000646c:	2800      	cmp	r0, #0
9000646e:	db18      	blt.n	900064a2 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90006470:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90006474:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006478:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000647a:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000647e:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006480:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006482:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006484:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006486:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000648a:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000648e:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006492:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006496:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006498:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
9000649a:	4630      	mov	r0, r6
9000649c:	b008      	add	sp, #32
9000649e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900064a2:	f06f 0604 	mvn.w	r6, #4
}
900064a6:	4630      	mov	r0, r6
900064a8:	b008      	add	sp, #32
900064aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900064ae:	f06f 0601 	mvn.w	r6, #1
}
900064b2:	4630      	mov	r0, r6
900064b4:	b008      	add	sp, #32
900064b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
900064ba:	f04f 36ff 	mov.w	r6, #4294967295
900064be:	e7ec      	b.n	9000649a <BSP_TS_Init+0xce>
900064c0:	9000591d 	.word	0x9000591d
900064c4:	24008338 	.word	0x24008338
900064c8:	90005889 	.word	0x90005889
900064cc:	90006125 	.word	0x90006125
900064d0:	900060e9 	.word	0x900060e9
900064d4:	90006161 	.word	0x90006161
900064d8:	24000044 	.word	0x24000044
900064dc:	240083a0 	.word	0x240083a0
900064e0:	24008360 	.word	0x24008360
900064e4:	240083a4 	.word	0x240083a4

900064e8 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900064e8:	2800      	cmp	r0, #0
900064ea:	d154      	bne.n	90006596 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900064ec:	4b2b      	ldr	r3, [pc, #172]	@ (9000659c <BSP_TS_GetState+0xb4>)
900064ee:	4a2c      	ldr	r2, [pc, #176]	@ (900065a0 <BSP_TS_GetState+0xb8>)
900064f0:	681b      	ldr	r3, [r3, #0]
900064f2:	6810      	ldr	r0, [r2, #0]
900064f4:	691b      	ldr	r3, [r3, #16]
{
900064f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900064fa:	b084      	sub	sp, #16
900064fc:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900064fe:	a901      	add	r1, sp, #4
90006500:	4798      	blx	r3
90006502:	2800      	cmp	r0, #0
90006504:	db3f      	blt.n	90006586 <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006506:	4b27      	ldr	r3, [pc, #156]	@ (900065a4 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90006508:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000650a:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000650c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
9000650e:	b930      	cbnz	r0, 9000651e <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90006510:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006512:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90006516:	2000      	movs	r0, #0
}
90006518:	b004      	add	sp, #16
9000651a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000651e:	689f      	ldr	r7, [r3, #8]
90006520:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90006522:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006526:	d433      	bmi.n	90006590 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90006528:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
9000652a:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000652c:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006530:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006534:	d003      	beq.n	9000653e <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006536:	f10e 32ff 	add.w	r2, lr, #4294967295
9000653a:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000653e:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90006542:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006544:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006546:	bf48      	it	mi
90006548:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000654c:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006550:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90006552:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006554:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006558:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000655c:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006560:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006562:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006564:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006566:	bf8c      	ite	hi
90006568:	1b90      	subhi	r0, r2, r6
9000656a:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000656c:	42a9      	cmp	r1, r5
9000656e:	bf8c      	ite	hi
90006570:	1b4f      	subhi	r7, r1, r5
90006572:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006574:	42b8      	cmp	r0, r7
90006576:	bf38      	it	cc
90006578:	4638      	movcc	r0, r7
9000657a:	68df      	ldr	r7, [r3, #12]
9000657c:	4287      	cmp	r7, r0
9000657e:	d2c8      	bcs.n	90006512 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90006580:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90006582:	62d9      	str	r1, [r3, #44]	@ 0x2c
90006584:	e7c7      	b.n	90006516 <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90006586:	f06f 0004 	mvn.w	r0, #4
}
9000658a:	b004      	add	sp, #16
9000658c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90006590:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90006592:	4642      	mov	r2, r8
90006594:	e7ca      	b.n	9000652c <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90006596:	f06f 0001 	mvn.w	r0, #1
}
9000659a:	4770      	bx	lr
9000659c:	240083a4 	.word	0x240083a4
900065a0:	240083a0 	.word	0x240083a0
900065a4:	24008360 	.word	0x24008360

900065a8 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900065a8:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900065aa:	4c19      	ldr	r4, [pc, #100]	@ (90006610 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900065ac:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900065ae:	4b19      	ldr	r3, [pc, #100]	@ (90006614 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900065b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
900065b4:	4918      	ldr	r1, [pc, #96]	@ (90006618 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900065b6:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
900065ba:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
900065be:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900065c0:	4c16      	ldr	r4, [pc, #88]	@ (9000661c <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900065c2:	f040 0001 	orr.w	r0, r0, #1
900065c6:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
900065c8:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900065ca:	6818      	ldr	r0, [r3, #0]
900065cc:	4001      	ands	r1, r0
900065ce:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900065d0:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900065d2:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900065d4:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900065d6:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
900065d8:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
900065da:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
900065dc:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
900065de:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
900065e0:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
900065e2:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
900065e4:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
900065e6:	6819      	ldr	r1, [r3, #0]
900065e8:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
900065ec:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
900065ee:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900065f0:	6823      	ldr	r3, [r4, #0]
900065f2:	f36f 030f 	bfc	r3, #0, #16
900065f6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
900065fa:	d203      	bcs.n	90006604 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900065fc:	4b08      	ldr	r3, [pc, #32]	@ (90006620 <SystemInit+0x78>)
900065fe:	2201      	movs	r2, #1
90006600:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006604:	4a07      	ldr	r2, [pc, #28]	@ (90006624 <SystemInit+0x7c>)
90006606:	4b02      	ldr	r3, [pc, #8]	@ (90006610 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90006608:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000660c:	609a      	str	r2, [r3, #8]
}
9000660e:	4770      	bx	lr
90006610:	e000ed00 	.word	0xe000ed00
90006614:	58024400 	.word	0x58024400
90006618:	eaf6ed7f 	.word	0xeaf6ed7f
9000661c:	5c001000 	.word	0x5c001000
90006620:	51008000 	.word	0x51008000
90006624:	90000000 	.word	0x90000000

90006628 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90006628:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000662a:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000662c:	4c12      	ldr	r4, [pc, #72]	@ (90006678 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000662e:	f000 f843 	bl	900066b8 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006632:	f004 f94f 	bl	9000a8d4 <HAL_RCC_GetSysClockFreq>
90006636:	4b11      	ldr	r3, [pc, #68]	@ (9000667c <HAL_Init+0x54>)
90006638:	4911      	ldr	r1, [pc, #68]	@ (90006680 <HAL_Init+0x58>)
9000663a:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000663c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000663e:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006642:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006646:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006648:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000664a:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000664e:	490d      	ldr	r1, [pc, #52]	@ (90006684 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006650:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006654:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006656:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000665a:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000665c:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000665e:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006660:	f7fd ffba 	bl	900045d8 <HAL_InitTick>
90006664:	b110      	cbz	r0, 9000666c <HAL_Init+0x44>
  {
    return HAL_ERROR;
90006666:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90006668:	4620      	mov	r0, r4
9000666a:	bd10      	pop	{r4, pc}
9000666c:	4604      	mov	r4, r0
  HAL_MspInit();
9000666e:	f7fd fd01 	bl	90004074 <HAL_MspInit>
}
90006672:	4620      	mov	r0, r4
90006674:	bd10      	pop	{r4, pc}
90006676:	bf00      	nop
90006678:	24000074 	.word	0x24000074
9000667c:	58024400 	.word	0x58024400
90006680:	9002d110 	.word	0x9002d110
90006684:	24000078 	.word	0x24000078

90006688 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90006688:	4a03      	ldr	r2, [pc, #12]	@ (90006698 <HAL_IncTick+0x10>)
9000668a:	4b04      	ldr	r3, [pc, #16]	@ (9000669c <HAL_IncTick+0x14>)
9000668c:	6811      	ldr	r1, [r2, #0]
9000668e:	781b      	ldrb	r3, [r3, #0]
90006690:	440b      	add	r3, r1
90006692:	6013      	str	r3, [r2, #0]
}
90006694:	4770      	bx	lr
90006696:	bf00      	nop
90006698:	240083a8 	.word	0x240083a8
9000669c:	2400007c 	.word	0x2400007c

900066a0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900066a0:	4b01      	ldr	r3, [pc, #4]	@ (900066a8 <HAL_GetTick+0x8>)
900066a2:	6818      	ldr	r0, [r3, #0]
}
900066a4:	4770      	bx	lr
900066a6:	bf00      	nop
900066a8:	240083a8 	.word	0x240083a8

900066ac <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900066ac:	4b01      	ldr	r3, [pc, #4]	@ (900066b4 <HAL_GetREVID+0x8>)
900066ae:	6818      	ldr	r0, [r3, #0]
}
900066b0:	0c00      	lsrs	r0, r0, #16
900066b2:	4770      	bx	lr
900066b4:	5c001000 	.word	0x5c001000

900066b8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900066b8:	4906      	ldr	r1, [pc, #24]	@ (900066d4 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900066ba:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900066be:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900066c0:	4b05      	ldr	r3, [pc, #20]	@ (900066d8 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900066c2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900066c4:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900066c8:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900066cc:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900066ce:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900066d0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900066d2:	4770      	bx	lr
900066d4:	e000ed00 	.word	0xe000ed00
900066d8:	05fa0000 	.word	0x05fa0000

900066dc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900066dc:	4b1a      	ldr	r3, [pc, #104]	@ (90006748 <HAL_NVIC_SetPriority+0x6c>)
900066de:	68db      	ldr	r3, [r3, #12]
900066e0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900066e4:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900066e6:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900066ea:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900066ee:	f1be 0f04 	cmp.w	lr, #4
900066f2:	bf28      	it	cs
900066f4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900066f8:	f1bc 0f06 	cmp.w	ip, #6
900066fc:	d91a      	bls.n	90006734 <HAL_NVIC_SetPriority+0x58>
900066fe:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006702:	f04f 33ff 	mov.w	r3, #4294967295
90006706:	fa03 f30c 	lsl.w	r3, r3, ip
9000670a:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000670e:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90006712:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006714:	fa03 f30e 	lsl.w	r3, r3, lr
90006718:	ea21 0303 	bic.w	r3, r1, r3
9000671c:	fa03 f30c 	lsl.w	r3, r3, ip
90006720:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006724:	ea4f 1303 	mov.w	r3, r3, lsl #4
90006728:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
9000672a:	db06      	blt.n	9000673a <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000672c:	4a07      	ldr	r2, [pc, #28]	@ (9000674c <HAL_NVIC_SetPriority+0x70>)
9000672e:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90006730:	f85d fb04 	ldr.w	pc, [sp], #4
90006734:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006736:	4694      	mov	ip, r2
90006738:	e7e9      	b.n	9000670e <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000673a:	f000 000f 	and.w	r0, r0, #15
9000673e:	4a04      	ldr	r2, [pc, #16]	@ (90006750 <HAL_NVIC_SetPriority+0x74>)
90006740:	5413      	strb	r3, [r2, r0]
90006742:	f85d fb04 	ldr.w	pc, [sp], #4
90006746:	bf00      	nop
90006748:	e000ed00 	.word	0xe000ed00
9000674c:	e000e400 	.word	0xe000e400
90006750:	e000ed14 	.word	0xe000ed14

90006754 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006754:	2800      	cmp	r0, #0
90006756:	db07      	blt.n	90006768 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006758:	2301      	movs	r3, #1
9000675a:	f000 011f 	and.w	r1, r0, #31
9000675e:	4a03      	ldr	r2, [pc, #12]	@ (9000676c <HAL_NVIC_EnableIRQ+0x18>)
90006760:	0940      	lsrs	r0, r0, #5
90006762:	408b      	lsls	r3, r1
90006764:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90006768:	4770      	bx	lr
9000676a:	bf00      	nop
9000676c:	e000e100 	.word	0xe000e100

90006770 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006770:	2800      	cmp	r0, #0
90006772:	db0c      	blt.n	9000678e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006774:	0943      	lsrs	r3, r0, #5
90006776:	2201      	movs	r2, #1
90006778:	f000 001f 	and.w	r0, r0, #31
9000677c:	4904      	ldr	r1, [pc, #16]	@ (90006790 <HAL_NVIC_DisableIRQ+0x20>)
9000677e:	3320      	adds	r3, #32
90006780:	4082      	lsls	r2, r0
90006782:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90006786:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000678a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000678e:	4770      	bx	lr
90006790:	e000e100 	.word	0xe000e100

90006794 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90006794:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006798:	4b04      	ldr	r3, [pc, #16]	@ (900067ac <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000679a:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000679c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000679e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
900067a2:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
900067a4:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
900067a8:	4770      	bx	lr
900067aa:	bf00      	nop
900067ac:	e000ed00 	.word	0xe000ed00

900067b0 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900067b0:	4b06      	ldr	r3, [pc, #24]	@ (900067cc <HAL_MPU_Enable+0x1c>)
900067b2:	f040 0001 	orr.w	r0, r0, #1
900067b6:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900067ba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900067bc:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
900067c0:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900067c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900067c6:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900067ca:	4770      	bx	lr
900067cc:	e000ed00 	.word	0xe000ed00

900067d0 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900067d0:	4a16      	ldr	r2, [pc, #88]	@ (9000682c <HAL_MPU_ConfigRegion+0x5c>)
900067d2:	7843      	ldrb	r3, [r0, #1]
900067d4:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
900067d8:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
900067dc:	f023 0301 	bic.w	r3, r3, #1
900067e0:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
900067e4:	6843      	ldr	r3, [r0, #4]
900067e6:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900067ea:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900067ec:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900067f0:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
900067f2:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900067f4:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900067f8:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900067fc:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900067fe:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006800:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90006804:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006808:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000680c:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000680e:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90006812:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006816:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000681a:	7a01      	ldrb	r1, [r0, #8]
9000681c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90006820:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006824:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90006828:	4770      	bx	lr
9000682a:	bf00      	nop
9000682c:	e000ed00 	.word	0xe000ed00

90006830 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90006830:	2800      	cmp	r0, #0
90006832:	d036      	beq.n	900068a2 <HAL_CRC_Init+0x72>
{
90006834:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90006836:	7f43      	ldrb	r3, [r0, #29]
90006838:	4604      	mov	r4, r0
9000683a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000683e:	b363      	cbz	r3, 9000689a <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90006840:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90006842:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90006844:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90006846:	b9f3      	cbnz	r3, 90006886 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90006848:	6823      	ldr	r3, [r4, #0]
9000684a:	4a17      	ldr	r2, [pc, #92]	@ (900068a8 <HAL_CRC_Init+0x78>)
9000684c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000684e:	689a      	ldr	r2, [r3, #8]
90006850:	f022 0218 	bic.w	r2, r2, #24
90006854:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90006856:	7962      	ldrb	r2, [r4, #5]
90006858:	b18a      	cbz	r2, 9000687e <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000685a:	6922      	ldr	r2, [r4, #16]
9000685c:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000685e:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006860:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006864:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90006868:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000686a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000686c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000686e:	689a      	ldr	r2, [r3, #8]
90006870:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006874:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90006876:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006878:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000687a:	7761      	strb	r1, [r4, #29]
}
9000687c:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000687e:	f04f 32ff 	mov.w	r2, #4294967295
90006882:	611a      	str	r2, [r3, #16]
90006884:	e7eb      	b.n	9000685e <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90006886:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000688a:	4620      	mov	r0, r4
9000688c:	f000 f80e 	bl	900068ac <HAL_CRCEx_Polynomial_Set>
90006890:	b908      	cbnz	r0, 90006896 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90006892:	6823      	ldr	r3, [r4, #0]
90006894:	e7df      	b.n	90006856 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90006896:	2001      	movs	r0, #1
}
90006898:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000689a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000689c:	f7fd fc04 	bl	900040a8 <HAL_CRC_MspInit>
900068a0:	e7ce      	b.n	90006840 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900068a2:	2001      	movs	r0, #1
}
900068a4:	4770      	bx	lr
900068a6:	bf00      	nop
900068a8:	04c11db7 	.word	0x04c11db7

900068ac <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900068ac:	07cb      	lsls	r3, r1, #31
900068ae:	d51a      	bpl.n	900068e6 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
900068b0:	231f      	movs	r3, #31
{
900068b2:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900068b4:	3b01      	subs	r3, #1
900068b6:	1c5c      	adds	r4, r3, #1
900068b8:	fa21 fc03 	lsr.w	ip, r1, r3
900068bc:	d015      	beq.n	900068ea <HAL_CRCEx_Polynomial_Set+0x3e>
900068be:	f01c 0f01 	tst.w	ip, #1
900068c2:	d0f7      	beq.n	900068b4 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
900068c4:	2a18      	cmp	r2, #24
900068c6:	d811      	bhi.n	900068ec <HAL_CRCEx_Polynomial_Set+0x40>
900068c8:	e8df f002 	tbb	[pc, r2]
900068cc:	10101016 	.word	0x10101016
900068d0:	10101010 	.word	0x10101010
900068d4:	10101024 	.word	0x10101024
900068d8:	10101010 	.word	0x10101010
900068dc:	10101021 	.word	0x10101021
900068e0:	10101010 	.word	0x10101010
900068e4:	14          	.byte	0x14
900068e5:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
900068e6:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900068e8:	4770      	bx	lr
    switch (PolyLength)
900068ea:	b12a      	cbz	r2, 900068f8 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
900068ec:	2001      	movs	r0, #1
}
900068ee:	f85d 4b04 	ldr.w	r4, [sp], #4
900068f2:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900068f4:	2b06      	cmp	r3, #6
900068f6:	d8f9      	bhi.n	900068ec <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900068f8:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900068fa:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900068fc:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900068fe:	68a3      	ldr	r3, [r4, #8]
90006900:	f023 0318 	bic.w	r3, r3, #24
90006904:	4313      	orrs	r3, r2
90006906:	60a3      	str	r3, [r4, #8]
}
90006908:	f85d 4b04 	ldr.w	r4, [sp], #4
9000690c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000690e:	2b07      	cmp	r3, #7
90006910:	d9f2      	bls.n	900068f8 <HAL_CRCEx_Polynomial_Set+0x4c>
90006912:	e7eb      	b.n	900068ec <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90006914:	2b0f      	cmp	r3, #15
90006916:	d9ef      	bls.n	900068f8 <HAL_CRCEx_Polynomial_Set+0x4c>
90006918:	e7e8      	b.n	900068ec <HAL_CRCEx_Polynomial_Set+0x40>
9000691a:	bf00      	nop

9000691c <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
9000691c:	b570      	push	{r4, r5, r6, lr}
9000691e:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
90006920:	f7ff febe 	bl	900066a0 <HAL_GetTick>

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
90006924:	2c00      	cmp	r4, #0
90006926:	d06d      	beq.n	90006a04 <HAL_DMA_Abort+0xe8>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
90006928:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
9000692c:	2b02      	cmp	r3, #2
9000692e:	d164      	bne.n	900069fa <HAL_DMA_Abort+0xde>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006930:	6825      	ldr	r5, [r4, #0]
90006932:	4606      	mov	r6, r0
90006934:	4bad      	ldr	r3, [pc, #692]	@ (90006bec <HAL_DMA_Abort+0x2d0>)
90006936:	429d      	cmp	r5, r3
90006938:	d066      	beq.n	90006a08 <HAL_DMA_Abort+0xec>
9000693a:	3318      	adds	r3, #24
9000693c:	429d      	cmp	r5, r3
9000693e:	d063      	beq.n	90006a08 <HAL_DMA_Abort+0xec>
90006940:	3318      	adds	r3, #24
90006942:	429d      	cmp	r5, r3
90006944:	f000 80f3 	beq.w	90006b2e <HAL_DMA_Abort+0x212>
90006948:	3318      	adds	r3, #24
9000694a:	429d      	cmp	r5, r3
9000694c:	f000 811a 	beq.w	90006b84 <HAL_DMA_Abort+0x268>
90006950:	3318      	adds	r3, #24
90006952:	429d      	cmp	r5, r3
90006954:	f000 8125 	beq.w	90006ba2 <HAL_DMA_Abort+0x286>
90006958:	3318      	adds	r3, #24
9000695a:	429d      	cmp	r5, r3
9000695c:	f000 80ff 	beq.w	90006b5e <HAL_DMA_Abort+0x242>
90006960:	3318      	adds	r3, #24
90006962:	429d      	cmp	r5, r3
90006964:	f000 812e 	beq.w	90006bc4 <HAL_DMA_Abort+0x2a8>
90006968:	3318      	adds	r3, #24
9000696a:	429d      	cmp	r5, r3
9000696c:	f000 814a 	beq.w	90006c04 <HAL_DMA_Abort+0x2e8>
90006970:	f503 7356 	add.w	r3, r3, #856	@ 0x358
90006974:	429d      	cmp	r5, r3
90006976:	f000 8158 	beq.w	90006c2a <HAL_DMA_Abort+0x30e>
9000697a:	3318      	adds	r3, #24
9000697c:	429d      	cmp	r5, r3
9000697e:	f000 8163 	beq.w	90006c48 <HAL_DMA_Abort+0x32c>
90006982:	3318      	adds	r3, #24
90006984:	429d      	cmp	r5, r3
90006986:	f000 816e 	beq.w	90006c66 <HAL_DMA_Abort+0x34a>
9000698a:	3318      	adds	r3, #24
9000698c:	429d      	cmp	r5, r3
9000698e:	f000 816c 	beq.w	90006c6a <HAL_DMA_Abort+0x34e>
90006992:	3318      	adds	r3, #24
90006994:	429d      	cmp	r5, r3
90006996:	f000 816a 	beq.w	90006c6e <HAL_DMA_Abort+0x352>
9000699a:	3318      	adds	r3, #24
9000699c:	429d      	cmp	r5, r3
9000699e:	f000 8168 	beq.w	90006c72 <HAL_DMA_Abort+0x356>
900069a2:	3318      	adds	r3, #24
900069a4:	429d      	cmp	r5, r3
900069a6:	f000 8168 	beq.w	90006c7a <HAL_DMA_Abort+0x35e>
900069aa:	3318      	adds	r3, #24
900069ac:	429d      	cmp	r5, r3
900069ae:	f000 8162 	beq.w	90006c76 <HAL_DMA_Abort+0x35a>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900069b2:	682b      	ldr	r3, [r5, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900069b4:	4a8e      	ldr	r2, [pc, #568]	@ (90006bf0 <HAL_DMA_Abort+0x2d4>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900069b6:	f023 030e 	bic.w	r3, r3, #14
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900069ba:	4295      	cmp	r5, r2
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900069bc:	602b      	str	r3, [r5, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900069be:	f000 80bf 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069c2:	4b8c      	ldr	r3, [pc, #560]	@ (90006bf4 <HAL_DMA_Abort+0x2d8>)
900069c4:	429d      	cmp	r5, r3
900069c6:	f000 80bb 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069ca:	3314      	adds	r3, #20
900069cc:	429d      	cmp	r5, r3
900069ce:	f000 80b7 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069d2:	3314      	adds	r3, #20
900069d4:	429d      	cmp	r5, r3
900069d6:	f000 80b3 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069da:	3314      	adds	r3, #20
900069dc:	429d      	cmp	r5, r3
900069de:	f000 80af 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069e2:	3314      	adds	r3, #20
900069e4:	429d      	cmp	r5, r3
900069e6:	f000 80ab 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069ea:	3314      	adds	r3, #20
900069ec:	429d      	cmp	r5, r3
900069ee:	f000 80a7 	beq.w	90006b40 <HAL_DMA_Abort+0x224>
900069f2:	3314      	adds	r3, #20
900069f4:	429d      	cmp	r5, r3
900069f6:	d114      	bne.n	90006a22 <HAL_DMA_Abort+0x106>
900069f8:	e0a2      	b.n	90006b40 <HAL_DMA_Abort+0x224>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
900069fa:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hdma);
900069fc:	2300      	movs	r3, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
900069fe:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
90006a00:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
90006a04:	2001      	movs	r0, #1
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
90006a06:	bd70      	pop	{r4, r5, r6, pc}
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006a08:	682b      	ldr	r3, [r5, #0]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006a0a:	6e22      	ldr	r2, [r4, #96]	@ 0x60
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006a0c:	f023 031e 	bic.w	r3, r3, #30
90006a10:	602b      	str	r3, [r5, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006a12:	696b      	ldr	r3, [r5, #20]
90006a14:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006a18:	616b      	str	r3, [r5, #20]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006a1a:	6813      	ldr	r3, [r2, #0]
90006a1c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006a20:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006a22:	682b      	ldr	r3, [r5, #0]
90006a24:	f023 0301 	bic.w	r3, r3, #1
90006a28:	602b      	str	r3, [r5, #0]
90006a2a:	e005      	b.n	90006a38 <HAL_DMA_Abort+0x11c>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
90006a2c:	f7ff fe38 	bl	900066a0 <HAL_GetTick>
90006a30:	1b83      	subs	r3, r0, r6
90006a32:	2b05      	cmp	r3, #5
90006a34:	f200 808a 	bhi.w	90006b4c <HAL_DMA_Abort+0x230>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
90006a38:	682b      	ldr	r3, [r5, #0]
90006a3a:	07db      	lsls	r3, r3, #31
90006a3c:	d4f6      	bmi.n	90006a2c <HAL_DMA_Abort+0x110>
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006a3e:	6823      	ldr	r3, [r4, #0]
90006a40:	496a      	ldr	r1, [pc, #424]	@ (90006bec <HAL_DMA_Abort+0x2d0>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006a42:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006a44:	428b      	cmp	r3, r1
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
90006a46:	6da0      	ldr	r0, [r4, #88]	@ 0x58
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006a48:	f002 021f 	and.w	r2, r2, #31
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006a4c:	d05e      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a4e:	3118      	adds	r1, #24
90006a50:	428b      	cmp	r3, r1
90006a52:	d05b      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a54:	3118      	adds	r1, #24
90006a56:	428b      	cmp	r3, r1
90006a58:	d058      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a5a:	3118      	adds	r1, #24
90006a5c:	428b      	cmp	r3, r1
90006a5e:	d055      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a60:	3118      	adds	r1, #24
90006a62:	428b      	cmp	r3, r1
90006a64:	d052      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a66:	3118      	adds	r1, #24
90006a68:	428b      	cmp	r3, r1
90006a6a:	d04f      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a6c:	3118      	adds	r1, #24
90006a6e:	428b      	cmp	r3, r1
90006a70:	d04c      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a72:	3118      	adds	r1, #24
90006a74:	428b      	cmp	r3, r1
90006a76:	d049      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a78:	f501 7156 	add.w	r1, r1, #856	@ 0x358
90006a7c:	428b      	cmp	r3, r1
90006a7e:	d045      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a80:	3118      	adds	r1, #24
90006a82:	428b      	cmp	r3, r1
90006a84:	d042      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a86:	3118      	adds	r1, #24
90006a88:	428b      	cmp	r3, r1
90006a8a:	d03f      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a8c:	3118      	adds	r1, #24
90006a8e:	428b      	cmp	r3, r1
90006a90:	d03c      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a92:	3118      	adds	r1, #24
90006a94:	428b      	cmp	r3, r1
90006a96:	d039      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a98:	3118      	adds	r1, #24
90006a9a:	428b      	cmp	r3, r1
90006a9c:	d036      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006a9e:	3118      	adds	r1, #24
90006aa0:	428b      	cmp	r3, r1
90006aa2:	d033      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
90006aa4:	3118      	adds	r1, #24
90006aa6:	428b      	cmp	r3, r1
90006aa8:	d030      	beq.n	90006b0c <HAL_DMA_Abort+0x1f0>
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006aaa:	2101      	movs	r1, #1
90006aac:	4091      	lsls	r1, r2
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006aae:	4a51      	ldr	r2, [pc, #324]	@ (90006bf4 <HAL_DMA_Abort+0x2d8>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006ab0:	6041      	str	r1, [r0, #4]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006ab2:	484f      	ldr	r0, [pc, #316]	@ (90006bf0 <HAL_DMA_Abort+0x2d4>)
90006ab4:	4950      	ldr	r1, [pc, #320]	@ (90006bf8 <HAL_DMA_Abort+0x2dc>)
90006ab6:	4283      	cmp	r3, r0
90006ab8:	bf18      	it	ne
90006aba:	4293      	cmpne	r3, r2
90006abc:	f100 003c 	add.w	r0, r0, #60	@ 0x3c
90006ac0:	bf0c      	ite	eq
90006ac2:	2201      	moveq	r2, #1
90006ac4:	2200      	movne	r2, #0
90006ac6:	428b      	cmp	r3, r1
90006ac8:	bf08      	it	eq
90006aca:	f042 0201 	orreq.w	r2, r2, #1
90006ace:	3128      	adds	r1, #40	@ 0x28
90006ad0:	4283      	cmp	r3, r0
90006ad2:	bf08      	it	eq
90006ad4:	f042 0201 	orreq.w	r2, r2, #1
90006ad8:	3028      	adds	r0, #40	@ 0x28
90006ada:	428b      	cmp	r3, r1
90006adc:	bf08      	it	eq
90006ade:	f042 0201 	orreq.w	r2, r2, #1
90006ae2:	3128      	adds	r1, #40	@ 0x28
90006ae4:	4283      	cmp	r3, r0
90006ae6:	bf08      	it	eq
90006ae8:	f042 0201 	orreq.w	r2, r2, #1
90006aec:	428b      	cmp	r3, r1
90006aee:	bf08      	it	eq
90006af0:	f042 0201 	orreq.w	r2, r2, #1
90006af4:	b96a      	cbnz	r2, 90006b12 <HAL_DMA_Abort+0x1f6>
90006af6:	4a41      	ldr	r2, [pc, #260]	@ (90006bfc <HAL_DMA_Abort+0x2e0>)
90006af8:	4293      	cmp	r3, r2
90006afa:	d00a      	beq.n	90006b12 <HAL_DMA_Abort+0x1f6>
    __HAL_UNLOCK(hdma);
90006afc:	2300      	movs	r3, #0
    hdma->State = HAL_DMA_STATE_READY;
90006afe:	2201      	movs	r2, #1
  return HAL_OK;
90006b00:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
90006b02:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
90006b06:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
90006b0a:	bd70      	pop	{r4, r5, r6, pc}
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90006b0c:	233f      	movs	r3, #63	@ 0x3f
90006b0e:	4093      	lsls	r3, r2
90006b10:	6083      	str	r3, [r0, #8]
      if(hdma->DMAmuxRequestGen != 0U)
90006b12:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90006b14:	e9d4 2119 	ldrd	r2, r1, [r4, #100]	@ 0x64
90006b18:	6051      	str	r1, [r2, #4]
      if(hdma->DMAmuxRequestGen != 0U)
90006b1a:	2b00      	cmp	r3, #0
90006b1c:	d0ee      	beq.n	90006afc <HAL_DMA_Abort+0x1e0>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006b1e:	681a      	ldr	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006b20:	e9d4 101c 	ldrd	r1, r0, [r4, #112]	@ 0x70
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006b24:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90006b28:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006b2a:	6048      	str	r0, [r1, #4]
90006b2c:	e7e6      	b.n	90006afc <HAL_DMA_Abort+0x1e0>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006b2e:	4b34      	ldr	r3, [pc, #208]	@ (90006c00 <HAL_DMA_Abort+0x2e4>)
90006b30:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90006b32:	f022 021e 	bic.w	r2, r2, #30
90006b36:	641a      	str	r2, [r3, #64]	@ 0x40
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006b38:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
90006b3a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006b3e:	655a      	str	r2, [r3, #84]	@ 0x54
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006b40:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006b42:	6813      	ldr	r3, [r2, #0]
90006b44:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006b48:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006b4a:	e76a      	b.n	90006a22 <HAL_DMA_Abort+0x106>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90006b4c:	2120      	movs	r1, #32
        hdma->State = HAL_DMA_STATE_ERROR;
90006b4e:	2203      	movs	r2, #3
        __HAL_UNLOCK(hdma);
90006b50:	2300      	movs	r3, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90006b52:	6561      	str	r1, [r4, #84]	@ 0x54
        __HAL_UNLOCK(hdma);
90006b54:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
90006b58:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        return HAL_ERROR;
90006b5c:	e752      	b.n	90006a04 <HAL_DMA_Abort+0xe8>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006b5e:	4b28      	ldr	r3, [pc, #160]	@ (90006c00 <HAL_DMA_Abort+0x2e4>)
90006b60:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
90006b64:	f022 021e 	bic.w	r2, r2, #30
90006b68:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006b6c:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
90006b70:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006b74:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006b78:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006b7a:	6813      	ldr	r3, [r2, #0]
90006b7c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006b80:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006b82:	e74e      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006b84:	4b1e      	ldr	r3, [pc, #120]	@ (90006c00 <HAL_DMA_Abort+0x2e4>)
90006b86:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
90006b88:	f022 021e 	bic.w	r2, r2, #30
90006b8c:	659a      	str	r2, [r3, #88]	@ 0x58
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006b8e:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
90006b90:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006b94:	66da      	str	r2, [r3, #108]	@ 0x6c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006b96:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006b98:	6813      	ldr	r3, [r2, #0]
90006b9a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006b9e:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006ba0:	e73f      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006ba2:	4b17      	ldr	r3, [pc, #92]	@ (90006c00 <HAL_DMA_Abort+0x2e4>)
90006ba4:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
90006ba6:	f022 021e 	bic.w	r2, r2, #30
90006baa:	671a      	str	r2, [r3, #112]	@ 0x70
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006bac:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
90006bb0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006bb4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006bb8:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006bba:	6813      	ldr	r3, [r2, #0]
90006bbc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006bc0:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006bc2:	e72e      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006bc4:	4b0e      	ldr	r3, [pc, #56]	@ (90006c00 <HAL_DMA_Abort+0x2e4>)
90006bc6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
90006bca:	f022 021e 	bic.w	r2, r2, #30
90006bce:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006bd2:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
90006bd6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006bda:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006bde:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006be0:	6813      	ldr	r3, [r2, #0]
90006be2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006be6:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006be8:	e71b      	b.n	90006a22 <HAL_DMA_Abort+0x106>
90006bea:	bf00      	nop
90006bec:	40020010 	.word	0x40020010
90006bf0:	58025408 	.word	0x58025408
90006bf4:	5802541c 	.word	0x5802541c
90006bf8:	58025430 	.word	0x58025430
90006bfc:	58025494 	.word	0x58025494
90006c00:	40020000 	.word	0x40020000
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006c04:	4b1e      	ldr	r3, [pc, #120]	@ (90006c80 <HAL_DMA_Abort+0x364>)
90006c06:	f8d3 20b8 	ldr.w	r2, [r3, #184]	@ 0xb8
90006c0a:	f022 021e 	bic.w	r2, r2, #30
90006c0e:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006c12:	f8d3 20cc 	ldr.w	r2, [r3, #204]	@ 0xcc
90006c16:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006c1a:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006c1e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006c20:	6813      	ldr	r3, [r2, #0]
90006c22:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006c26:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006c28:	e6fb      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006c2a:	4b16      	ldr	r3, [pc, #88]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c2c:	691a      	ldr	r2, [r3, #16]
90006c2e:	f022 021e 	bic.w	r2, r2, #30
90006c32:	611a      	str	r2, [r3, #16]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006c34:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006c36:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006c3a:	625a      	str	r2, [r3, #36]	@ 0x24
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006c3c:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006c3e:	6813      	ldr	r3, [r2, #0]
90006c40:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006c44:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006c46:	e6ec      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006c48:	4b0e      	ldr	r3, [pc, #56]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c4a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90006c4c:	f022 021e 	bic.w	r2, r2, #30
90006c50:	629a      	str	r2, [r3, #40]	@ 0x28
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006c52:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90006c54:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006c58:	63da      	str	r2, [r3, #60]	@ 0x3c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006c5a:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006c5c:	6813      	ldr	r3, [r2, #0]
90006c5e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006c62:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006c64:	e6dd      	b.n	90006a22 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006c66:	4b07      	ldr	r3, [pc, #28]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c68:	e762      	b.n	90006b30 <HAL_DMA_Abort+0x214>
90006c6a:	4b06      	ldr	r3, [pc, #24]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c6c:	e78b      	b.n	90006b86 <HAL_DMA_Abort+0x26a>
90006c6e:	4b05      	ldr	r3, [pc, #20]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c70:	e798      	b.n	90006ba4 <HAL_DMA_Abort+0x288>
90006c72:	4b04      	ldr	r3, [pc, #16]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c74:	e774      	b.n	90006b60 <HAL_DMA_Abort+0x244>
90006c76:	4b03      	ldr	r3, [pc, #12]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c78:	e7c5      	b.n	90006c06 <HAL_DMA_Abort+0x2ea>
90006c7a:	4b02      	ldr	r3, [pc, #8]	@ (90006c84 <HAL_DMA_Abort+0x368>)
90006c7c:	e7a3      	b.n	90006bc6 <HAL_DMA_Abort+0x2aa>
90006c7e:	bf00      	nop
90006c80:	40020000 	.word	0x40020000
90006c84:	40020400 	.word	0x40020400

90006c88 <HAL_DMA_Abort_IT>:
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
90006c88:	2800      	cmp	r0, #0
90006c8a:	d062      	beq.n	90006d52 <HAL_DMA_Abort_IT+0xca>
{
90006c8c:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
90006c8e:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90006c92:	2b02      	cmp	r3, #2
90006c94:	d159      	bne.n	90006d4a <HAL_DMA_Abort_IT+0xc2>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006c96:	6802      	ldr	r2, [r0, #0]
90006c98:	4b57      	ldr	r3, [pc, #348]	@ (90006df8 <HAL_DMA_Abort_IT+0x170>)
90006c9a:	4c58      	ldr	r4, [pc, #352]	@ (90006dfc <HAL_DMA_Abort_IT+0x174>)
90006c9c:	4958      	ldr	r1, [pc, #352]	@ (90006e00 <HAL_DMA_Abort_IT+0x178>)
90006c9e:	42a2      	cmp	r2, r4
90006ca0:	bf18      	it	ne
90006ca2:	429a      	cmpne	r2, r3
90006ca4:	f104 0430 	add.w	r4, r4, #48	@ 0x30
90006ca8:	bf0c      	ite	eq
90006caa:	2301      	moveq	r3, #1
90006cac:	2300      	movne	r3, #0
90006cae:	428a      	cmp	r2, r1
90006cb0:	bf08      	it	eq
90006cb2:	f043 0301 	orreq.w	r3, r3, #1
90006cb6:	3130      	adds	r1, #48	@ 0x30
90006cb8:	42a2      	cmp	r2, r4
90006cba:	bf08      	it	eq
90006cbc:	f043 0301 	orreq.w	r3, r3, #1
90006cc0:	3430      	adds	r4, #48	@ 0x30
90006cc2:	428a      	cmp	r2, r1
90006cc4:	bf08      	it	eq
90006cc6:	f043 0301 	orreq.w	r3, r3, #1
90006cca:	3130      	adds	r1, #48	@ 0x30
90006ccc:	42a2      	cmp	r2, r4
90006cce:	bf08      	it	eq
90006cd0:	f043 0301 	orreq.w	r3, r3, #1
90006cd4:	3430      	adds	r4, #48	@ 0x30
90006cd6:	428a      	cmp	r2, r1
90006cd8:	bf08      	it	eq
90006cda:	f043 0301 	orreq.w	r3, r3, #1
90006cde:	f501 715c 	add.w	r1, r1, #880	@ 0x370
90006ce2:	42a2      	cmp	r2, r4
90006ce4:	bf08      	it	eq
90006ce6:	f043 0301 	orreq.w	r3, r3, #1
90006cea:	f504 745c 	add.w	r4, r4, #880	@ 0x370
90006cee:	428a      	cmp	r2, r1
90006cf0:	bf08      	it	eq
90006cf2:	f043 0301 	orreq.w	r3, r3, #1
90006cf6:	3130      	adds	r1, #48	@ 0x30
90006cf8:	42a2      	cmp	r2, r4
90006cfa:	bf08      	it	eq
90006cfc:	f043 0301 	orreq.w	r3, r3, #1
90006d00:	3430      	adds	r4, #48	@ 0x30
90006d02:	428a      	cmp	r2, r1
90006d04:	bf08      	it	eq
90006d06:	f043 0301 	orreq.w	r3, r3, #1
90006d0a:	3130      	adds	r1, #48	@ 0x30
90006d0c:	42a2      	cmp	r2, r4
90006d0e:	bf08      	it	eq
90006d10:	f043 0301 	orreq.w	r3, r3, #1
90006d14:	3430      	adds	r4, #48	@ 0x30
90006d16:	428a      	cmp	r2, r1
90006d18:	bf08      	it	eq
90006d1a:	f043 0301 	orreq.w	r3, r3, #1
90006d1e:	3130      	adds	r1, #48	@ 0x30
90006d20:	42a2      	cmp	r2, r4
90006d22:	bf08      	it	eq
90006d24:	f043 0301 	orreq.w	r3, r3, #1
90006d28:	428a      	cmp	r2, r1
90006d2a:	bf08      	it	eq
90006d2c:	f043 0301 	orreq.w	r3, r3, #1
90006d30:	b913      	cbnz	r3, 90006d38 <HAL_DMA_Abort_IT+0xb0>
90006d32:	4b34      	ldr	r3, [pc, #208]	@ (90006e04 <HAL_DMA_Abort_IT+0x17c>)
90006d34:	429a      	cmp	r2, r3
90006d36:	d10e      	bne.n	90006d56 <HAL_DMA_Abort_IT+0xce>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
90006d38:	2304      	movs	r3, #4
90006d3a:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
90006d3e:	6813      	ldr	r3, [r2, #0]
90006d40:	f023 0301 	bic.w	r3, r3, #1
90006d44:	6013      	str	r3, [r2, #0]
        hdma->XferAbortCallback(hdma);
      }
    }
  }

  return HAL_OK;
90006d46:	2000      	movs	r0, #0
}
90006d48:	bd38      	pop	{r3, r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90006d4a:	2380      	movs	r3, #128	@ 0x80
90006d4c:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
90006d4e:	2001      	movs	r0, #1
}
90006d50:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90006d52:	2001      	movs	r0, #1
}
90006d54:	4770      	bx	lr
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d56:	4b2c      	ldr	r3, [pc, #176]	@ (90006e08 <HAL_DMA_Abort_IT+0x180>)
90006d58:	4d2c      	ldr	r5, [pc, #176]	@ (90006e0c <HAL_DMA_Abort_IT+0x184>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006d5a:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d5c:	42aa      	cmp	r2, r5
90006d5e:	bf18      	it	ne
90006d60:	429a      	cmpne	r2, r3
90006d62:	4c2b      	ldr	r4, [pc, #172]	@ (90006e10 <HAL_DMA_Abort_IT+0x188>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006d64:	f021 010e 	bic.w	r1, r1, #14
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d68:	f105 053c 	add.w	r5, r5, #60	@ 0x3c
90006d6c:	bf0c      	ite	eq
90006d6e:	2301      	moveq	r3, #1
90006d70:	2300      	movne	r3, #0
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006d72:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d74:	42a2      	cmp	r2, r4
90006d76:	bf08      	it	eq
90006d78:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90006d7c:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d7e:	3428      	adds	r4, #40	@ 0x28
90006d80:	42aa      	cmp	r2, r5
90006d82:	bf08      	it	eq
90006d84:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90006d88:	f021 0101 	bic.w	r1, r1, #1
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d8c:	42a2      	cmp	r2, r4
90006d8e:	bf08      	it	eq
90006d90:	f043 0301 	orreq.w	r3, r3, #1
90006d94:	3414      	adds	r4, #20
      __HAL_DMA_DISABLE(hdma);
90006d96:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d98:	42a2      	cmp	r2, r4
90006d9a:	bf08      	it	eq
90006d9c:	f043 0301 	orreq.w	r3, r3, #1
90006da0:	491c      	ldr	r1, [pc, #112]	@ (90006e14 <HAL_DMA_Abort_IT+0x18c>)
90006da2:	428a      	cmp	r2, r1
90006da4:	bf08      	it	eq
90006da6:	f043 0301 	orreq.w	r3, r3, #1
90006daa:	b913      	cbnz	r3, 90006db2 <HAL_DMA_Abort_IT+0x12a>
90006dac:	4b1a      	ldr	r3, [pc, #104]	@ (90006e18 <HAL_DMA_Abort_IT+0x190>)
90006dae:	429a      	cmp	r2, r3
90006db0:	d117      	bne.n	90006de2 <HAL_DMA_Abort_IT+0x15a>
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006db2:	2301      	movs	r3, #1
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
90006db4:	6d85      	ldr	r5, [r0, #88]	@ 0x58
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006db6:	e9d0 1417 	ldrd	r1, r4, [r0, #92]	@ 0x5c
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006dba:	6822      	ldr	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006dbc:	f001 011f 	and.w	r1, r1, #31
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006dc0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006dc4:	408b      	lsls	r3, r1
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006dc6:	6022      	str	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006dc8:	606b      	str	r3, [r5, #4]
        if(hdma->DMAmuxRequestGen != 0U)
90006dca:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90006dcc:	e9d0 2119 	ldrd	r2, r1, [r0, #100]	@ 0x64
90006dd0:	6051      	str	r1, [r2, #4]
        if(hdma->DMAmuxRequestGen != 0U)
90006dd2:	b133      	cbz	r3, 90006de2 <HAL_DMA_Abort_IT+0x15a>
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006dd4:	681a      	ldr	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006dd6:	e9d0 141c 	ldrd	r1, r4, [r0, #112]	@ 0x70
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006dda:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90006dde:	601a      	str	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006de0:	604c      	str	r4, [r1, #4]
      hdma->State = HAL_DMA_STATE_READY;
90006de2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma);
90006de4:	2200      	movs	r2, #0
      if(hdma->XferAbortCallback != NULL)
90006de6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      hdma->State = HAL_DMA_STATE_READY;
90006de8:	f880 1035 	strb.w	r1, [r0, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
90006dec:	f880 2034 	strb.w	r2, [r0, #52]	@ 0x34
      if(hdma->XferAbortCallback != NULL)
90006df0:	2b00      	cmp	r3, #0
90006df2:	d0a8      	beq.n	90006d46 <HAL_DMA_Abort_IT+0xbe>
        hdma->XferAbortCallback(hdma);
90006df4:	4798      	blx	r3
90006df6:	e7a6      	b.n	90006d46 <HAL_DMA_Abort_IT+0xbe>
90006df8:	40020010 	.word	0x40020010
90006dfc:	40020028 	.word	0x40020028
90006e00:	40020040 	.word	0x40020040
90006e04:	400204b8 	.word	0x400204b8
90006e08:	5802541c 	.word	0x5802541c
90006e0c:	58025408 	.word	0x58025408
90006e10:	58025430 	.word	0x58025430
90006e14:	58025480 	.word	0x58025480
90006e18:	58025494 	.word	0x58025494

90006e1c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90006e1c:	2800      	cmp	r0, #0
90006e1e:	d035      	beq.n	90006e8c <HAL_DMA2D_Init+0x70>
{
90006e20:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90006e22:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90006e26:	4604      	mov	r4, r0
90006e28:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90006e2c:	b34b      	cbz	r3, 90006e82 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90006e2e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90006e30:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90006e32:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90006e34:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90006e38:	69e1      	ldr	r1, [r4, #28]
90006e3a:	681d      	ldr	r5, [r3, #0]
90006e3c:	4814      	ldr	r0, [pc, #80]	@ (90006e90 <HAL_DMA2D_Init+0x74>)
90006e3e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90006e40:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90006e42:	4028      	ands	r0, r5
90006e44:	4301      	orrs	r1, r0
90006e46:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90006e48:	69a1      	ldr	r1, [r4, #24]
90006e4a:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90006e4c:	430a      	orrs	r2, r1
90006e4e:	4911      	ldr	r1, [pc, #68]	@ (90006e94 <HAL_DMA2D_Init+0x78>)
90006e50:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90006e52:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90006e54:	430a      	orrs	r2, r1
90006e56:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90006e58:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90006e5a:	f36f 010f 	bfc	r1, #0, #16
90006e5e:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90006e60:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90006e64:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90006e66:	0552      	lsls	r2, r2, #21
90006e68:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90006e6a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
90006e6e:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90006e72:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90006e74:	430a      	orrs	r2, r1
90006e76:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90006e78:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90006e7a:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90006e7c:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90006e80:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90006e82:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90006e86:	f7fd f927 	bl	900040d8 <HAL_DMA2D_MspInit>
90006e8a:	e7d0      	b.n	90006e2e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90006e8c:	2001      	movs	r0, #1
}
90006e8e:	4770      	bx	lr
90006e90:	fff8ffbf 	.word	0xfff8ffbf
90006e94:	fffffef8 	.word	0xfffffef8

90006e98 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90006e98:	4770      	bx	lr
90006e9a:	bf00      	nop

90006e9c <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90006e9c:	4770      	bx	lr
90006e9e:	bf00      	nop

90006ea0 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90006ea0:	6803      	ldr	r3, [r0, #0]
{
90006ea2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90006ea4:	685d      	ldr	r5, [r3, #4]
{
90006ea6:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90006ea8:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90006eaa:	07ea      	lsls	r2, r5, #31
90006eac:	d501      	bpl.n	90006eb2 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90006eae:	05f1      	lsls	r1, r6, #23
90006eb0:	d456      	bmi.n	90006f60 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90006eb2:	06aa      	lsls	r2, r5, #26
90006eb4:	d501      	bpl.n	90006eba <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90006eb6:	04b3      	lsls	r3, r6, #18
90006eb8:	d43b      	bmi.n	90006f32 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90006eba:	0728      	lsls	r0, r5, #28
90006ebc:	d501      	bpl.n	90006ec2 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90006ebe:	0531      	lsls	r1, r6, #20
90006ec0:	d421      	bmi.n	90006f06 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90006ec2:	076a      	lsls	r2, r5, #29
90006ec4:	d501      	bpl.n	90006eca <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90006ec6:	0573      	lsls	r3, r6, #21
90006ec8:	d472      	bmi.n	90006fb0 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90006eca:	07a8      	lsls	r0, r5, #30
90006ecc:	d501      	bpl.n	90006ed2 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90006ece:	05b1      	lsls	r1, r6, #22
90006ed0:	d404      	bmi.n	90006edc <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90006ed2:	06ea      	lsls	r2, r5, #27
90006ed4:	d501      	bpl.n	90006eda <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90006ed6:	04f3      	lsls	r3, r6, #19
90006ed8:	d457      	bmi.n	90006f8a <HAL_DMA2D_IRQHandler+0xea>
}
90006eda:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90006edc:	6823      	ldr	r3, [r4, #0]
90006ede:	681a      	ldr	r2, [r3, #0]
90006ee0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90006ee4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90006ee6:	2202      	movs	r2, #2
90006ee8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90006eea:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90006eec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90006eee:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90006ef0:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90006ef2:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90006ef6:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90006efa:	6a23      	ldr	r3, [r4, #32]
90006efc:	2b00      	cmp	r3, #0
90006efe:	d0e8      	beq.n	90006ed2 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90006f00:	4620      	mov	r0, r4
90006f02:	4798      	blx	r3
90006f04:	e7e5      	b.n	90006ed2 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90006f06:	6823      	ldr	r3, [r4, #0]
90006f08:	681a      	ldr	r2, [r3, #0]
90006f0a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90006f0e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90006f10:	2208      	movs	r2, #8
90006f12:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90006f14:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90006f16:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90006f18:	4313      	orrs	r3, r2
90006f1a:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90006f1c:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90006f20:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90006f22:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90006f24:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90006f28:	2b00      	cmp	r3, #0
90006f2a:	d0ca      	beq.n	90006ec2 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90006f2c:	4620      	mov	r0, r4
90006f2e:	4798      	blx	r3
90006f30:	e7c7      	b.n	90006ec2 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90006f32:	6823      	ldr	r3, [r4, #0]
90006f34:	681a      	ldr	r2, [r3, #0]
90006f36:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90006f3a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90006f3c:	2220      	movs	r2, #32
90006f3e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90006f40:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90006f42:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90006f44:	f043 0302 	orr.w	r3, r3, #2
90006f48:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90006f4a:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90006f4e:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90006f50:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90006f52:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90006f56:	2b00      	cmp	r3, #0
90006f58:	d0af      	beq.n	90006eba <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90006f5a:	4620      	mov	r0, r4
90006f5c:	4798      	blx	r3
90006f5e:	e7ac      	b.n	90006eba <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90006f60:	681a      	ldr	r2, [r3, #0]
90006f62:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90006f66:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90006f68:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90006f6a:	f042 0201 	orr.w	r2, r2, #1
90006f6e:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90006f70:	2201      	movs	r2, #1
90006f72:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90006f74:	2304      	movs	r3, #4
90006f76:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90006f7a:	2300      	movs	r3, #0
90006f7c:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90006f80:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90006f82:	2b00      	cmp	r3, #0
90006f84:	d095      	beq.n	90006eb2 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90006f86:	4798      	blx	r3
90006f88:	e793      	b.n	90006eb2 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90006f8a:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90006f8c:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90006f8e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90006f90:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90006f92:	681a      	ldr	r2, [r3, #0]
90006f94:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90006f98:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90006f9a:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90006f9c:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90006f9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90006fa0:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90006fa4:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90006fa6:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90006faa:	f7ff ff77 	bl	90006e9c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90006fae:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90006fb0:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90006fb2:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90006fb4:	681a      	ldr	r2, [r3, #0]
90006fb6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90006fba:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90006fbc:	2204      	movs	r2, #4
90006fbe:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90006fc0:	f7ff ff6a 	bl	90006e98 <HAL_DMA2D_LineEventCallback>
90006fc4:	e781      	b.n	90006eca <HAL_DMA2D_IRQHandler+0x2a>
90006fc6:	bf00      	nop

90006fc8 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90006fc8:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90006fcc:	2a01      	cmp	r2, #1
90006fce:	d05f      	beq.n	90007090 <HAL_DMA2D_ConfigLayer+0xc8>
90006fd0:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90006fd2:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90006fd6:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90006fd8:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90006fdc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90006fe0:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90006fe2:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90006fe4:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90006fe8:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90006fec:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90006fee:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90006ff0:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90006ff2:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90006ff4:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90006ff6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90006ffa:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90006ffe:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007000:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007002:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007006:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000700a:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000700c:	d923      	bls.n	90007056 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000700e:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007012:	b971      	cbnz	r1, 90007032 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007014:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007016:	491f      	ldr	r1, [pc, #124]	@ (90007094 <HAL_DMA2D_ConfigLayer+0xcc>)
90007018:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000701a:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000701c:	4311      	orrs	r1, r2
9000701e:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007020:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007022:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007024:	2101      	movs	r1, #1

  return HAL_OK;
90007026:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007028:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
9000702c:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90007030:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007032:	2d0b      	cmp	r5, #11
90007034:	d12a      	bne.n	9000708c <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007036:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007038:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
9000703c:	4816      	ldr	r0, [pc, #88]	@ (90007098 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000703e:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007042:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007044:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007048:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000704a:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000704e:	430a      	orrs	r2, r1
90007050:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007052:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007054:	e7e5      	b.n	90007022 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007056:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
9000705a:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000705c:	b959      	cbnz	r1, 90007076 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000705e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007060:	490c      	ldr	r1, [pc, #48]	@ (90007094 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007062:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007064:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007066:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007068:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000706a:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000706e:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007070:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007072:	62a0      	str	r0, [r4, #40]	@ 0x28
90007074:	e7d5      	b.n	90007022 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007076:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007078:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000707c:	4905      	ldr	r1, [pc, #20]	@ (90007094 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000707e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007080:	4029      	ands	r1, r5
90007082:	4311      	orrs	r1, r2
90007084:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007086:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007088:	6226      	str	r6, [r4, #32]
9000708a:	e7ca      	b.n	90007022 <HAL_DMA2D_ConfigLayer+0x5a>
9000708c:	4801      	ldr	r0, [pc, #4]	@ (90007094 <HAL_DMA2D_ConfigLayer+0xcc>)
9000708e:	e7d6      	b.n	9000703e <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007090:	2002      	movs	r0, #2
}
90007092:	4770      	bx	lr
90007094:	00ccfff0 	.word	0x00ccfff0
90007098:	00c0fff0 	.word	0x00c0fff0

9000709c <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000709c:	680b      	ldr	r3, [r1, #0]
9000709e:	2b00      	cmp	r3, #0
900070a0:	f000 81dc 	beq.w	9000745c <HAL_GPIO_Init+0x3c0>
900070a4:	4ab4      	ldr	r2, [pc, #720]	@ (90007378 <HAL_GPIO_Init+0x2dc>)
900070a6:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
900070a8:	f04f 0200 	mov.w	r2, #0
{
900070ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900070b0:	f04f 0b01 	mov.w	fp, #1
{
900070b4:	b085      	sub	sp, #20
900070b6:	f000 8105 	beq.w	900072c4 <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
900070ba:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900070be:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900070c0:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
900070c4:	9b00      	ldr	r3, [sp, #0]
900070c6:	ea1c 0a03 	ands.w	sl, ip, r3
900070ca:	f000 814b 	beq.w	90007364 <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900070ce:	684d      	ldr	r5, [r1, #4]
900070d0:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900070d2:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900070d4:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900070d8:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900070dc:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900070e0:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900070e2:	f1b8 0f01 	cmp.w	r8, #1
900070e6:	f240 815d 	bls.w	900073a4 <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900070ea:	2f03      	cmp	r7, #3
900070ec:	f040 81cf 	bne.w	9000748e <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900070f0:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
900070f4:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900070f6:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900070fa:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900070fe:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
90007102:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007104:	f000 812e 	beq.w	90007364 <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007108:	4e9c      	ldr	r6, [pc, #624]	@ (9000737c <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000710a:	f002 0703 	and.w	r7, r2, #3
9000710e:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007110:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007114:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007116:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000711a:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000711e:	4b98      	ldr	r3, [pc, #608]	@ (90007380 <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007120:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
90007124:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
90007128:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000712c:	4298      	cmp	r0, r3
9000712e:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007132:	f004 0402 	and.w	r4, r4, #2
90007136:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000713a:	9403      	str	r4, [sp, #12]
9000713c:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
9000713e:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007140:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007144:	f000 8178 	beq.w	90007438 <HAL_GPIO_Init+0x39c>
90007148:	4b8e      	ldr	r3, [pc, #568]	@ (90007384 <HAL_GPIO_Init+0x2e8>)
9000714a:	4298      	cmp	r0, r3
9000714c:	f000 80de 	beq.w	9000730c <HAL_GPIO_Init+0x270>
90007150:	f8df c234 	ldr.w	ip, [pc, #564]	@ 90007388 <HAL_GPIO_Init+0x2ec>
90007154:	4560      	cmp	r0, ip
90007156:	f000 817b 	beq.w	90007450 <HAL_GPIO_Init+0x3b4>
9000715a:	f8df c230 	ldr.w	ip, [pc, #560]	@ 9000738c <HAL_GPIO_Init+0x2f0>
9000715e:	4560      	cmp	r0, ip
90007160:	f000 817d 	beq.w	9000745e <HAL_GPIO_Init+0x3c2>
90007164:	f8df c228 	ldr.w	ip, [pc, #552]	@ 90007390 <HAL_GPIO_Init+0x2f4>
90007168:	4560      	cmp	r0, ip
9000716a:	f000 816b 	beq.w	90007444 <HAL_GPIO_Init+0x3a8>
9000716e:	f8df c224 	ldr.w	ip, [pc, #548]	@ 90007394 <HAL_GPIO_Init+0x2f8>
90007172:	4560      	cmp	r0, ip
90007174:	f000 8179 	beq.w	9000746a <HAL_GPIO_Init+0x3ce>
90007178:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 90007398 <HAL_GPIO_Init+0x2fc>
9000717c:	4560      	cmp	r0, ip
9000717e:	f000 817a 	beq.w	90007476 <HAL_GPIO_Init+0x3da>
90007182:	f8df c218 	ldr.w	ip, [pc, #536]	@ 9000739c <HAL_GPIO_Init+0x300>
90007186:	4560      	cmp	r0, ip
90007188:	f000 817b 	beq.w	90007482 <HAL_GPIO_Init+0x3e6>
9000718c:	f8df c210 	ldr.w	ip, [pc, #528]	@ 900073a0 <HAL_GPIO_Init+0x304>
90007190:	4560      	cmp	r0, ip
90007192:	bf0c      	ite	eq
90007194:	f04f 0c09 	moveq.w	ip, #9
90007198:	f04f 0c0a 	movne.w	ip, #10
9000719c:	fa0c f707 	lsl.w	r7, ip, r7
900071a0:	433c      	orrs	r4, r7
900071a2:	e0b8      	b.n	90007316 <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
900071a4:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900071a8:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900071aa:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900071ac:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
900071b0:	fa06 f807 	lsl.w	r8, r6, r7
900071b4:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
900071b8:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900071bc:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900071c0:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900071c4:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900071c8:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900071cc:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
900071d0:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
900071d4:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900071d8:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900071da:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900071de:	fa06 fe07 	lsl.w	lr, r6, r7
900071e2:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
900071e6:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900071ea:	d117      	bne.n	9000721c <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900071ec:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900071f0:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900071f2:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900071f6:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
900071fa:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900071fe:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
90007202:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007206:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007208:	260f      	movs	r6, #15
9000720a:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000720e:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007210:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007214:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
90007218:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000721c:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
9000721e:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007220:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007224:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007228:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
9000722c:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000722e:	d045      	beq.n	900072bc <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007230:	4f52      	ldr	r7, [pc, #328]	@ (9000737c <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007232:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007234:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90007238:	f044 0402 	orr.w	r4, r4, #2
9000723c:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
90007240:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90007244:	f022 0703 	bic.w	r7, r2, #3
90007248:	f004 0402 	and.w	r4, r4, #2
9000724c:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
90007250:	9403      	str	r4, [sp, #12]
90007252:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90007256:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007258:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
9000725c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007260:	00a4      	lsls	r4, r4, #2
90007262:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007266:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007268:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
9000726c:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
9000726e:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
90007272:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
90007276:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007278:	f100 80d2 	bmi.w	90007420 <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
9000727c:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000727e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90007282:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
90007284:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90007286:	02ae      	lsls	r6, r5, #10
90007288:	f100 80d3 	bmi.w	90007432 <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
9000728c:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000728e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90007292:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
90007294:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007298:	03ae      	lsls	r6, r5, #14
9000729a:	f100 80c7 	bmi.w	9000742c <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
9000729e:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900072a0:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900072a4:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900072a6:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900072aa:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900072ae:	f100 80ba 	bmi.w	90007426 <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
900072b2:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
900072b4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
900072b8:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
900072bc:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900072be:	fa33 f402 	lsrs.w	r4, r3, r2
900072c2:	d055      	beq.n	90007370 <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900072c4:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
900072c8:	ea13 0c0e 	ands.w	ip, r3, lr
900072cc:	d0f6      	beq.n	900072bc <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900072ce:	684d      	ldr	r5, [r1, #4]
900072d0:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900072d2:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900072d4:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900072d8:	fa06 f807 	lsl.w	r8, r6, r7
900072dc:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900072e0:	f104 38ff 	add.w	r8, r4, #4294967295
900072e4:	f1b8 0f01 	cmp.w	r8, #1
900072e8:	f67f af5c 	bls.w	900071a4 <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900072ec:	2c03      	cmp	r4, #3
900072ee:	d095      	beq.n	9000721c <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
900072f0:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90007378 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900072f4:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
900072f6:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900072fa:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900072fe:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007302:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
90007306:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000730a:	e787      	b.n	9000721c <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000730c:	f04f 0c02 	mov.w	ip, #2
90007310:	fa0c f707 	lsl.w	r7, ip, r7
90007314:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90007316:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007318:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
9000731a:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
9000731e:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
90007322:	bf4c      	ite	mi
90007324:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
90007328:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000732a:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
9000732c:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
90007330:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
90007334:	bf54      	ite	pl
90007336:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007338:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000733c:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
9000733e:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90007342:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90007346:	bf54      	ite	pl
90007348:	4034      	andpl	r4, r6
          temp |= iocurrent;
9000734a:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000734e:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90007350:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90007354:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90007358:	bf54      	ite	pl
9000735a:	4034      	andpl	r4, r6
          temp |= iocurrent;
9000735c:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
90007360:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
90007364:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007366:	9b00      	ldr	r3, [sp, #0]
90007368:	fa33 f402 	lsrs.w	r4, r3, r2
9000736c:	f47f aea8 	bne.w	900070c0 <HAL_GPIO_Init+0x24>
  }
}
90007370:	b005      	add	sp, #20
90007372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007376:	bf00      	nop
90007378:	58020000 	.word	0x58020000
9000737c:	58024400 	.word	0x58024400
90007380:	58020400 	.word	0x58020400
90007384:	58020800 	.word	0x58020800
90007388:	58020c00 	.word	0x58020c00
9000738c:	58021000 	.word	0x58021000
90007390:	58021400 	.word	0x58021400
90007394:	58021800 	.word	0x58021800
90007398:	58021c00 	.word	0x58021c00
9000739c:	58022000 	.word	0x58022000
900073a0:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
900073a4:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900073a8:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900073aa:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900073ac:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900073b0:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900073b4:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
900073b6:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
900073ba:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900073be:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900073c2:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900073c6:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900073ca:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900073ce:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
900073d2:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900073d6:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
900073da:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900073de:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900073e2:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900073e6:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900073ea:	f47f ae81 	bne.w	900070f0 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900073ee:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900073f2:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900073f4:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900073f8:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
900073fc:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007400:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
90007404:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007408:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000740a:	230f      	movs	r3, #15
9000740c:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007410:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007412:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007416:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
9000741a:	f8c8 c020 	str.w	ip, [r8, #32]
9000741e:	e667      	b.n	900070f0 <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
90007420:	ea44 040c 	orr.w	r4, r4, ip
90007424:	e72b      	b.n	9000727e <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
90007426:	ea44 040c 	orr.w	r4, r4, ip
9000742a:	e743      	b.n	900072b4 <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
9000742c:	ea4c 0404 	orr.w	r4, ip, r4
90007430:	e736      	b.n	900072a0 <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
90007432:	ea44 040c 	orr.w	r4, r4, ip
90007436:	e72a      	b.n	9000728e <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007438:	f04f 0c01 	mov.w	ip, #1
9000743c:	fa0c f707 	lsl.w	r7, ip, r7
90007440:	433c      	orrs	r4, r7
90007442:	e768      	b.n	90007316 <HAL_GPIO_Init+0x27a>
90007444:	f04f 0c05 	mov.w	ip, #5
90007448:	fa0c f707 	lsl.w	r7, ip, r7
9000744c:	433c      	orrs	r4, r7
9000744e:	e762      	b.n	90007316 <HAL_GPIO_Init+0x27a>
90007450:	f04f 0c03 	mov.w	ip, #3
90007454:	fa0c f707 	lsl.w	r7, ip, r7
90007458:	433c      	orrs	r4, r7
9000745a:	e75c      	b.n	90007316 <HAL_GPIO_Init+0x27a>
9000745c:	4770      	bx	lr
9000745e:	f04f 0c04 	mov.w	ip, #4
90007462:	fa0c f707 	lsl.w	r7, ip, r7
90007466:	433c      	orrs	r4, r7
90007468:	e755      	b.n	90007316 <HAL_GPIO_Init+0x27a>
9000746a:	f04f 0c06 	mov.w	ip, #6
9000746e:	fa0c f707 	lsl.w	r7, ip, r7
90007472:	433c      	orrs	r4, r7
90007474:	e74f      	b.n	90007316 <HAL_GPIO_Init+0x27a>
90007476:	f04f 0c07 	mov.w	ip, #7
9000747a:	fa0c f707 	lsl.w	r7, ip, r7
9000747e:	433c      	orrs	r4, r7
90007480:	e749      	b.n	90007316 <HAL_GPIO_Init+0x27a>
90007482:	f04f 0c08 	mov.w	ip, #8
90007486:	fa0c f707 	lsl.w	r7, ip, r7
9000748a:	433c      	orrs	r4, r7
9000748c:	e743      	b.n	90007316 <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
9000748e:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007492:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007494:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007498:	fa03 fc04 	lsl.w	ip, r3, r4
9000749c:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900074a0:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900074a4:	e624      	b.n	900070f0 <HAL_GPIO_Init+0x54>
900074a6:	bf00      	nop

900074a8 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900074a8:	2900      	cmp	r1, #0
900074aa:	f000 810c 	beq.w	900076c6 <HAL_GPIO_DeInit+0x21e>
900074ae:	4b8b      	ldr	r3, [pc, #556]	@ (900076dc <HAL_GPIO_DeInit+0x234>)
900074b0:	4298      	cmp	r0, r3
{
900074b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900074b6:	f000 809a 	beq.w	900075ee <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
900074ba:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900074bc:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900074c0:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900074c4:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
900074c8:	2201      	movs	r2, #1
900074ca:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
900074cc:	ea12 0e01 	ands.w	lr, r2, r1
900074d0:	d077      	beq.n	900075c2 <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
900074d2:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900074d6:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900074da:	4f81      	ldr	r7, [pc, #516]	@ (900076e0 <HAL_GPIO_DeInit+0x238>)
900074dc:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900074e0:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900074e2:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900074e4:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
900074e8:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900074ec:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
900074f0:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900074f4:	d027      	beq.n	90007546 <HAL_GPIO_DeInit+0x9e>
900074f6:	4f7b      	ldr	r7, [pc, #492]	@ (900076e4 <HAL_GPIO_DeInit+0x23c>)
900074f8:	42b8      	cmp	r0, r7
900074fa:	d06e      	beq.n	900075da <HAL_GPIO_DeInit+0x132>
900074fc:	4f7a      	ldr	r7, [pc, #488]	@ (900076e8 <HAL_GPIO_DeInit+0x240>)
900074fe:	42b8      	cmp	r0, r7
90007500:	d070      	beq.n	900075e4 <HAL_GPIO_DeInit+0x13c>
90007502:	4f7a      	ldr	r7, [pc, #488]	@ (900076ec <HAL_GPIO_DeInit+0x244>)
90007504:	42b8      	cmp	r0, r7
90007506:	d063      	beq.n	900075d0 <HAL_GPIO_DeInit+0x128>
90007508:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 900076f4 <HAL_GPIO_DeInit+0x24c>
9000750c:	4558      	cmp	r0, fp
9000750e:	f000 80d5 	beq.w	900076bc <HAL_GPIO_DeInit+0x214>
90007512:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 900076f8 <HAL_GPIO_DeInit+0x250>
90007516:	4558      	cmp	r0, fp
90007518:	f000 80d6 	beq.w	900076c8 <HAL_GPIO_DeInit+0x220>
9000751c:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 900076fc <HAL_GPIO_DeInit+0x254>
90007520:	4558      	cmp	r0, fp
90007522:	f000 80c6 	beq.w	900076b2 <HAL_GPIO_DeInit+0x20a>
90007526:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90007700 <HAL_GPIO_DeInit+0x258>
9000752a:	4558      	cmp	r0, fp
9000752c:	f000 80d1 	beq.w	900076d2 <HAL_GPIO_DeInit+0x22a>
90007530:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 90007704 <HAL_GPIO_DeInit+0x25c>
90007534:	4558      	cmp	r0, fp
90007536:	bf0c      	ite	eq
90007538:	f04f 0b09 	moveq.w	fp, #9
9000753c:	f04f 0b0a 	movne.w	fp, #10
90007540:	fa0b f404 	lsl.w	r4, fp, r4
90007544:	e002      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
90007546:	2701      	movs	r7, #1
90007548:	fa07 f404 	lsl.w	r4, r7, r4
9000754c:	45a4      	cmp	ip, r4
9000754e:	d117      	bne.n	90007580 <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007550:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
90007554:	ea24 040e 	bic.w	r4, r4, lr
90007558:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000755c:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
90007560:	ea24 040e 	bic.w	r4, r4, lr
90007564:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007568:	6874      	ldr	r4, [r6, #4]
9000756a:	ea24 040e 	bic.w	r4, r4, lr
9000756e:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007570:	6834      	ldr	r4, [r6, #0]
90007572:	ea24 040e 	bic.w	r4, r4, lr
90007576:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007578:	68ac      	ldr	r4, [r5, #8]
9000757a:	ea24 0408 	bic.w	r4, r4, r8
9000757e:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007580:	005d      	lsls	r5, r3, #1
90007582:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007584:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007588:	fa0a f505 	lsl.w	r5, sl, r5
9000758c:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
90007590:	432c      	orrs	r4, r5
90007592:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007594:	f003 0407 	and.w	r4, r3, #7
90007598:	f8dc e020 	ldr.w	lr, [ip, #32]
9000759c:	00a4      	lsls	r4, r4, #2
9000759e:	fa09 f404 	lsl.w	r4, r9, r4
900075a2:	ea2e 0404 	bic.w	r4, lr, r4
900075a6:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900075aa:	68c4      	ldr	r4, [r0, #12]
900075ac:	ea24 0405 	bic.w	r4, r4, r5
900075b0:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900075b2:	6844      	ldr	r4, [r0, #4]
900075b4:	ea24 0202 	bic.w	r2, r4, r2
900075b8:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900075ba:	6882      	ldr	r2, [r0, #8]
900075bc:	ea22 0205 	bic.w	r2, r2, r5
900075c0:	6082      	str	r2, [r0, #8]
    }

    position++;
900075c2:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900075c4:	fa31 f203 	lsrs.w	r2, r1, r3
900075c8:	f47f af7e 	bne.w	900074c8 <HAL_GPIO_DeInit+0x20>
  }
}
900075cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900075d0:	f04f 0b04 	mov.w	fp, #4
900075d4:	fa0b f404 	lsl.w	r4, fp, r4
900075d8:	e7b8      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900075da:	f04f 0b02 	mov.w	fp, #2
900075de:	fa0b f404 	lsl.w	r4, fp, r4
900075e2:	e7b3      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900075e4:	f04f 0b03 	mov.w	fp, #3
900075e8:	fa0b f404 	lsl.w	r4, fp, r4
900075ec:	e7ae      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
900075ee:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
900075f0:	f04f 0c01 	mov.w	ip, #1
900075f4:	4f3e      	ldr	r7, [pc, #248]	@ (900076f0 <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900075f6:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900075f8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900075fc:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007600:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90007604:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
90007608:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000760c:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
9000760e:	ea11 0904 	ands.w	r9, r1, r4
90007612:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007614:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
90007618:	d045      	beq.n	900076a6 <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000761a:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000761e:	ea13 0f0a 	tst.w	r3, sl
90007622:	d11d      	bne.n	90007660 <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007624:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
90007628:	ea2a 0a09 	bic.w	sl, sl, r9
9000762c:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90007630:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
90007634:	ea2a 0a09 	bic.w	sl, sl, r9
90007638:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
9000763c:	f8d6 a004 	ldr.w	sl, [r6, #4]
90007640:	ea2a 0a09 	bic.w	sl, sl, r9
90007644:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007648:	f8d6 a000 	ldr.w	sl, [r6]
9000764c:	ea2a 0909 	bic.w	r9, sl, r9
90007650:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007654:	f8d8 9008 	ldr.w	r9, [r8, #8]
90007658:	ea29 0303 	bic.w	r3, r9, r3
9000765c:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007660:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007664:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007666:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000766a:	fa0e f808 	lsl.w	r8, lr, r8
9000766e:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90007672:	ea43 0308 	orr.w	r3, r3, r8
90007676:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007678:	f002 0307 	and.w	r3, r2, #7
9000767c:	f8d9 a020 	ldr.w	sl, [r9, #32]
90007680:	009b      	lsls	r3, r3, #2
90007682:	fa05 f303 	lsl.w	r3, r5, r3
90007686:	ea2a 0303 	bic.w	r3, sl, r3
9000768a:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000768e:	68c3      	ldr	r3, [r0, #12]
90007690:	ea23 0308 	bic.w	r3, r3, r8
90007694:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90007696:	6843      	ldr	r3, [r0, #4]
90007698:	ea23 0304 	bic.w	r3, r3, r4
9000769c:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000769e:	6883      	ldr	r3, [r0, #8]
900076a0:	ea23 0308 	bic.w	r3, r3, r8
900076a4:	6083      	str	r3, [r0, #8]
    position++;
900076a6:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
900076a8:	fa31 f302 	lsrs.w	r3, r1, r2
900076ac:	d1a8      	bne.n	90007600 <HAL_GPIO_DeInit+0x158>
}
900076ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900076b2:	f04f 0b07 	mov.w	fp, #7
900076b6:	fa0b f404 	lsl.w	r4, fp, r4
900076ba:	e747      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900076bc:	f04f 0b05 	mov.w	fp, #5
900076c0:	fa0b f404 	lsl.w	r4, fp, r4
900076c4:	e742      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900076c6:	4770      	bx	lr
900076c8:	f04f 0b06 	mov.w	fp, #6
900076cc:	fa0b f404 	lsl.w	r4, fp, r4
900076d0:	e73c      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900076d2:	f04f 0b08 	mov.w	fp, #8
900076d6:	fa0b f404 	lsl.w	r4, fp, r4
900076da:	e737      	b.n	9000754c <HAL_GPIO_DeInit+0xa4>
900076dc:	58020000 	.word	0x58020000
900076e0:	58020400 	.word	0x58020400
900076e4:	58020800 	.word	0x58020800
900076e8:	58020c00 	.word	0x58020c00
900076ec:	58021000 	.word	0x58021000
900076f0:	58000400 	.word	0x58000400
900076f4:	58021400 	.word	0x58021400
900076f8:	58021800 	.word	0x58021800
900076fc:	58021c00 	.word	0x58021c00
90007700:	58022000 	.word	0x58022000
90007704:	58022400 	.word	0x58022400

90007708 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90007708:	6903      	ldr	r3, [r0, #16]
9000770a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000770c:	bf14      	ite	ne
9000770e:	2001      	movne	r0, #1
90007710:	2000      	moveq	r0, #0
90007712:	4770      	bx	lr

90007714 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90007714:	b902      	cbnz	r2, 90007718 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90007716:	0409      	lsls	r1, r1, #16
90007718:	6181      	str	r1, [r0, #24]
  }
}
9000771a:	4770      	bx	lr

9000771c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000771c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000771e:	ea01 0203 	and.w	r2, r1, r3
90007722:	ea21 0103 	bic.w	r1, r1, r3
90007726:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000772a:	6181      	str	r1, [r0, #24]
}
9000772c:	4770      	bx	lr
9000772e:	bf00      	nop

90007730 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007730:	6803      	ldr	r3, [r0, #0]
90007732:	699a      	ldr	r2, [r3, #24]
90007734:	0412      	lsls	r2, r2, #16
90007736:	f140 8097 	bpl.w	90007868 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
9000773a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000773e:	4604      	mov	r4, r0
90007740:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007742:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007744:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007746:	f012 0810 	ands.w	r8, r2, #16
9000774a:	d07f      	beq.n	9000784c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
9000774c:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000774e:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007750:	699a      	ldr	r2, [r3, #24]
90007752:	f012 0820 	ands.w	r8, r2, #32
90007756:	d17b      	bne.n	90007850 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007758:	f7fe ffa2 	bl	900066a0 <HAL_GetTick>
9000775c:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000775e:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007760:	2819      	cmp	r0, #25
90007762:	d83d      	bhi.n	900077e0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007764:	699a      	ldr	r2, [r3, #24]
90007766:	0690      	lsls	r0, r2, #26
90007768:	d5f6      	bpl.n	90007758 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000776a:	2220      	movs	r2, #32
9000776c:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000776e:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90007772:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007774:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007776:	05d1      	lsls	r1, r2, #23
90007778:	d552      	bpl.n	90007820 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000777a:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000777e:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007780:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007784:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007786:	d504      	bpl.n	90007792 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007788:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000778c:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007790:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007792:	0591      	lsls	r1, r2, #22
90007794:	d504      	bpl.n	900077a0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007796:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000779a:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000779e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900077a0:	699a      	ldr	r2, [r3, #24]
900077a2:	0795      	lsls	r5, r2, #30
900077a4:	d501      	bpl.n	900077aa <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
900077a6:	2200      	movs	r2, #0
900077a8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900077aa:	699a      	ldr	r2, [r3, #24]
900077ac:	07d0      	lsls	r0, r2, #31
900077ae:	d403      	bmi.n	900077b8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900077b0:	699a      	ldr	r2, [r3, #24]
900077b2:	f042 0201 	orr.w	r2, r2, #1
900077b6:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
900077b8:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
900077ba:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900077bc:	4d2b      	ldr	r5, [pc, #172]	@ (9000786c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900077be:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900077c0:	402a      	ands	r2, r5
900077c2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900077c4:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900077c6:	ea43 0308 	orr.w	r3, r3, r8
900077ca:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900077cc:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900077d0:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
900077d4:	2300      	movs	r3, #0
      return HAL_ERROR;
900077d6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
900077d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
900077dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900077e0:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900077e2:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900077e6:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900077e8:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900077ea:	0409      	lsls	r1, r1, #16
900077ec:	d50b      	bpl.n	90007806 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
900077ee:	0441      	lsls	r1, r0, #17
900077f0:	d409      	bmi.n	90007806 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
900077f2:	2a20      	cmp	r2, #32
900077f4:	d007      	beq.n	90007806 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900077f6:	685a      	ldr	r2, [r3, #4]
900077f8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900077fc:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900077fe:	f7fe ff4f 	bl	900066a0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007802:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007804:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007806:	699a      	ldr	r2, [r3, #24]
90007808:	0690      	lsls	r0, r2, #26
9000780a:	d4a1      	bmi.n	90007750 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000780c:	f7fe ff48 	bl	900066a0 <HAL_GetTick>
90007810:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007812:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007814:	2819      	cmp	r0, #25
90007816:	d9f6      	bls.n	90007806 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007818:	f04f 0820 	mov.w	r8, #32
9000781c:	699a      	ldr	r2, [r3, #24]
9000781e:	e7a6      	b.n	9000776e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007820:	0550      	lsls	r0, r2, #21
90007822:	d4b1      	bmi.n	90007788 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007824:	0592      	lsls	r2, r2, #22
90007826:	d4b6      	bmi.n	90007796 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90007828:	2d00      	cmp	r5, #0
9000782a:	d1b9      	bne.n	900077a0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000782c:	f7fe ff38 	bl	900066a0 <HAL_GetTick>
90007830:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007832:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007834:	2819      	cmp	r0, #25
90007836:	d902      	bls.n	9000783e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007838:	699a      	ldr	r2, [r3, #24]
9000783a:	0411      	lsls	r1, r2, #16
9000783c:	d40b      	bmi.n	90007856 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000783e:	699a      	ldr	r2, [r3, #24]
90007840:	0412      	lsls	r2, r2, #16
90007842:	f53f af7f 	bmi.w	90007744 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
90007846:	2000      	movs	r0, #0
}
90007848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000784c:	4645      	mov	r5, r8
9000784e:	e791      	b.n	90007774 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90007850:	f04f 0800 	mov.w	r8, #0
90007854:	e789      	b.n	9000776a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007856:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007858:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000785a:	4313      	orrs	r3, r2
9000785c:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000785e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007862:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007866:	e7b5      	b.n	900077d4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90007868:	2000      	movs	r0, #0
}
9000786a:	4770      	bx	lr
9000786c:	fe00e800 	.word	0xfe00e800

90007870 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007870:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007874:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007876:	2710      	movs	r7, #16
{
90007878:	4605      	mov	r5, r0
9000787a:	460e      	mov	r6, r1
9000787c:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000787e:	699a      	ldr	r2, [r3, #24]
90007880:	f012 0202 	ands.w	r2, r2, #2
90007884:	d168      	bne.n	90007958 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
90007886:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007888:	f011 0c10 	ands.w	ip, r1, #16
9000788c:	d062      	beq.n	90007954 <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000788e:	1c74      	adds	r4, r6, #1
90007890:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007892:	d166      	bne.n	90007962 <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90007894:	699c      	ldr	r4, [r3, #24]
90007896:	f014 0420 	ands.w	r4, r4, #32
9000789a:	d160      	bne.n	9000795e <I2C_WaitOnTXISFlagUntilTimeout+0xee>
9000789c:	699a      	ldr	r2, [r3, #24]
9000789e:	0691      	lsls	r1, r2, #26
900078a0:	d5fc      	bpl.n	9000789c <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900078a2:	2220      	movs	r2, #32
900078a4:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900078a6:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900078aa:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900078ac:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900078ae:	05d0      	lsls	r0, r2, #23
900078b0:	d532      	bpl.n	90007918 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900078b2:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900078b6:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900078b8:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900078bc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900078be:	d504      	bpl.n	900078ca <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900078c0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900078c4:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900078c8:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900078ca:	0596      	lsls	r6, r2, #22
900078cc:	d504      	bpl.n	900078d8 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900078ce:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900078d2:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900078d6:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900078d8:	699a      	ldr	r2, [r3, #24]
900078da:	0790      	lsls	r0, r2, #30
900078dc:	d501      	bpl.n	900078e2 <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
900078de:	2200      	movs	r2, #0
900078e0:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900078e2:	699a      	ldr	r2, [r3, #24]
900078e4:	07d1      	lsls	r1, r2, #31
900078e6:	d403      	bmi.n	900078f0 <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900078e8:	699a      	ldr	r2, [r3, #24]
900078ea:	f042 0201 	orr.w	r2, r2, #1
900078ee:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900078f0:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900078f2:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900078f4:	4c38      	ldr	r4, [pc, #224]	@ (900079d8 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900078f6:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900078f8:	4022      	ands	r2, r4
900078fa:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900078fc:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
900078fe:	ea43 030c 	orr.w	r3, r3, ip
90007902:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007904:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007908:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000790c:	2300      	movs	r3, #0
      return HAL_ERROR;
9000790e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007910:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007918:	0550      	lsls	r0, r2, #21
9000791a:	d4d1      	bmi.n	900078c0 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000791c:	0594      	lsls	r4, r2, #22
9000791e:	d4d6      	bmi.n	900078ce <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90007920:	2900      	cmp	r1, #0
90007922:	d1d9      	bne.n	900078d8 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90007924:	1c72      	adds	r2, r6, #1
90007926:	d0aa      	beq.n	9000787e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007928:	f7fe feba 	bl	900066a0 <HAL_GetTick>
9000792c:	eba0 0308 	sub.w	r3, r0, r8
90007930:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007932:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007934:	d801      	bhi.n	9000793a <I2C_WaitOnTXISFlagUntilTimeout+0xca>
90007936:	2e00      	cmp	r6, #0
90007938:	d1a1      	bne.n	9000787e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000793a:	699a      	ldr	r2, [r3, #24]
9000793c:	f012 0202 	ands.w	r2, r2, #2
90007940:	d19d      	bne.n	9000787e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007942:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007944:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007946:	430b      	orrs	r3, r1
90007948:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000794a:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000794e:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90007952:	e7db      	b.n	9000790c <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90007954:	4661      	mov	r1, ip
90007956:	e7a9      	b.n	900078ac <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90007958:	2000      	movs	r0, #0
}
9000795a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000795e:	4614      	mov	r4, r2
90007960:	e79f      	b.n	900078a2 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007962:	4614      	mov	r4, r2
90007964:	46c1      	mov	r9, r8
90007966:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007968:	699a      	ldr	r2, [r3, #24]
9000796a:	0692      	lsls	r2, r2, #26
9000796c:	d40e      	bmi.n	9000798c <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
9000796e:	f1ba 0f00 	cmp.w	sl, #0
90007972:	d198      	bne.n	900078a6 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007974:	f7fe fe94 	bl	900066a0 <HAL_GetTick>
90007978:	eba0 0309 	sub.w	r3, r0, r9
9000797c:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000797e:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007980:	d308      	bcc.n	90007994 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90007982:	b13e      	cbz	r6, 90007994 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007984:	699a      	ldr	r2, [r3, #24]
90007986:	0690      	lsls	r0, r2, #26
90007988:	d5f4      	bpl.n	90007974 <I2C_WaitOnTXISFlagUntilTimeout+0x104>
9000798a:	e78a      	b.n	900078a2 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
9000798c:	f1ba 0f00 	cmp.w	sl, #0
90007990:	d189      	bne.n	900078a6 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90007992:	e786      	b.n	900078a2 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007994:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007996:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000799a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000799c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000799e:	0409      	lsls	r1, r1, #16
900079a0:	d50b      	bpl.n	900079ba <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
900079a2:	0441      	lsls	r1, r0, #17
900079a4:	d409      	bmi.n	900079ba <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
900079a6:	2a20      	cmp	r2, #32
900079a8:	d007      	beq.n	900079ba <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900079aa:	685a      	ldr	r2, [r3, #4]
900079ac:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900079b0:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900079b2:	f7fe fe75 	bl	900066a0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900079b6:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900079b8:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900079ba:	699a      	ldr	r2, [r3, #24]
900079bc:	0690      	lsls	r0, r2, #26
900079be:	d4d3      	bmi.n	90007968 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900079c0:	f7fe fe6e 	bl	900066a0 <HAL_GetTick>
900079c4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900079c8:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900079ca:	2819      	cmp	r0, #25
900079cc:	d9f5      	bls.n	900079ba <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900079ce:	2420      	movs	r4, #32
              status = HAL_ERROR;
900079d0:	f04f 0a01 	mov.w	sl, #1
900079d4:	e7c8      	b.n	90007968 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900079d6:	bf00      	nop
900079d8:	fe00e800 	.word	0xfe00e800

900079dc <I2C_WaitOnFlagUntilTimeout>:
{
900079dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900079e0:	461d      	mov	r5, r3
900079e2:	4683      	mov	fp, r0
900079e4:	460f      	mov	r7, r1
900079e6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900079e8:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900079ea:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900079ee:	699a      	ldr	r2, [r3, #24]
900079f0:	ea37 0202 	bics.w	r2, r7, r2
900079f4:	bf0c      	ite	eq
900079f6:	2201      	moveq	r2, #1
900079f8:	2200      	movne	r2, #0
900079fa:	42b2      	cmp	r2, r6
900079fc:	d173      	bne.n	90007ae6 <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
900079fe:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007a00:	f012 0c10 	ands.w	ip, r2, #16
90007a04:	d06d      	beq.n	90007ae2 <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a06:	1c6c      	adds	r4, r5, #1
90007a08:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007a0c:	d170      	bne.n	90007af0 <I2C_WaitOnFlagUntilTimeout+0x114>
90007a0e:	699c      	ldr	r4, [r3, #24]
90007a10:	f014 0420 	ands.w	r4, r4, #32
90007a14:	d16a      	bne.n	90007aec <I2C_WaitOnFlagUntilTimeout+0x110>
90007a16:	699a      	ldr	r2, [r3, #24]
90007a18:	0691      	lsls	r1, r2, #26
90007a1a:	d5fc      	bpl.n	90007a16 <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007a1c:	2220      	movs	r2, #32
90007a1e:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007a20:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007a24:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007a26:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007a28:	05d0      	lsls	r0, r2, #23
90007a2a:	d534      	bpl.n	90007a96 <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007a2c:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007a30:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007a32:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007a36:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007a38:	d504      	bpl.n	90007a44 <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007a3a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007a3e:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007a42:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007a44:	0595      	lsls	r5, r2, #22
90007a46:	d504      	bpl.n	90007a52 <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007a48:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007a4c:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007a50:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007a52:	699a      	ldr	r2, [r3, #24]
90007a54:	0790      	lsls	r0, r2, #30
90007a56:	d501      	bpl.n	90007a5c <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90007a58:	2200      	movs	r2, #0
90007a5a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007a5c:	699a      	ldr	r2, [r3, #24]
90007a5e:	07d1      	lsls	r1, r2, #31
90007a60:	d403      	bmi.n	90007a6a <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007a62:	699a      	ldr	r2, [r3, #24]
90007a64:	f042 0201 	orr.w	r2, r2, #1
90007a68:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007a6a:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007a6c:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007a6e:	4c40      	ldr	r4, [pc, #256]	@ (90007b70 <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007a70:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007a72:	4022      	ands	r2, r4
90007a74:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007a76:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90007a7a:	ea43 030c 	orr.w	r3, r3, ip
90007a7e:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007a82:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007a86:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007a8a:	2300      	movs	r3, #0
      return HAL_ERROR;
90007a8c:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007a8e:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90007a92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007a96:	0550      	lsls	r0, r2, #21
90007a98:	d4cf      	bmi.n	90007a3a <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007a9a:	0594      	lsls	r4, r2, #22
90007a9c:	d4d4      	bmi.n	90007a48 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
90007a9e:	2900      	cmp	r1, #0
90007aa0:	d1d7      	bne.n	90007a52 <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
90007aa2:	1c6a      	adds	r2, r5, #1
90007aa4:	d0a3      	beq.n	900079ee <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007aa6:	f7fe fdfb 	bl	900066a0 <HAL_GetTick>
90007aaa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007aac:	1ac3      	subs	r3, r0, r3
90007aae:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007ab0:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007ab4:	d801      	bhi.n	90007aba <I2C_WaitOnFlagUntilTimeout+0xde>
90007ab6:	2d00      	cmp	r5, #0
90007ab8:	d199      	bne.n	900079ee <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007aba:	699a      	ldr	r2, [r3, #24]
90007abc:	ea37 0202 	bics.w	r2, r7, r2
90007ac0:	bf0c      	ite	eq
90007ac2:	2201      	moveq	r2, #1
90007ac4:	2200      	movne	r2, #0
90007ac6:	42b2      	cmp	r2, r6
90007ac8:	d191      	bne.n	900079ee <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007aca:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007ace:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007ad0:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007ad2:	430b      	orrs	r3, r1
90007ad4:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007ad8:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007adc:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90007ae0:	e7d3      	b.n	90007a8a <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
90007ae2:	4661      	mov	r1, ip
90007ae4:	e79f      	b.n	90007a26 <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
90007ae6:	2000      	movs	r0, #0
}
90007ae8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007aec:	2400      	movs	r4, #0
90007aee:	e795      	b.n	90007a1c <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007af0:	2400      	movs	r4, #0
90007af2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90007af6:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007af8:	699a      	ldr	r2, [r3, #24]
90007afa:	0692      	lsls	r2, r2, #26
90007afc:	d40f      	bmi.n	90007b1e <I2C_WaitOnFlagUntilTimeout+0x142>
90007afe:	f1ba 0f00 	cmp.w	sl, #0
90007b02:	d18d      	bne.n	90007a20 <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007b04:	f7fe fdcc 	bl	900066a0 <HAL_GetTick>
90007b08:	eba0 0309 	sub.w	r3, r0, r9
90007b0c:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007b0e:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007b12:	d309      	bcc.n	90007b28 <I2C_WaitOnFlagUntilTimeout+0x14c>
90007b14:	b145      	cbz	r5, 90007b28 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b16:	699a      	ldr	r2, [r3, #24]
90007b18:	0690      	lsls	r0, r2, #26
90007b1a:	d5f3      	bpl.n	90007b04 <I2C_WaitOnFlagUntilTimeout+0x128>
90007b1c:	e77e      	b.n	90007a1c <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90007b1e:	f1ba 0f00 	cmp.w	sl, #0
90007b22:	f47f af7d 	bne.w	90007a20 <I2C_WaitOnFlagUntilTimeout+0x44>
90007b26:	e779      	b.n	90007a1c <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007b28:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007b2a:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b2e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007b30:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b32:	0409      	lsls	r1, r1, #16
90007b34:	d50c      	bpl.n	90007b50 <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90007b36:	0441      	lsls	r1, r0, #17
90007b38:	d40a      	bmi.n	90007b50 <I2C_WaitOnFlagUntilTimeout+0x174>
90007b3a:	2a20      	cmp	r2, #32
90007b3c:	d008      	beq.n	90007b50 <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007b3e:	685a      	ldr	r2, [r3, #4]
90007b40:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007b44:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007b46:	f7fe fdab 	bl	900066a0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b4a:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90007b4e:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b50:	699a      	ldr	r2, [r3, #24]
90007b52:	0690      	lsls	r0, r2, #26
90007b54:	d4d0      	bmi.n	90007af8 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007b56:	f7fe fda3 	bl	900066a0 <HAL_GetTick>
90007b5a:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b5e:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007b62:	2819      	cmp	r0, #25
90007b64:	d9f4      	bls.n	90007b50 <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007b66:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007b68:	f04f 0a01 	mov.w	sl, #1
90007b6c:	e7c4      	b.n	90007af8 <I2C_WaitOnFlagUntilTimeout+0x11c>
90007b6e:	bf00      	nop
90007b70:	fe00e800 	.word	0xfe00e800

90007b74 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b74:	6803      	ldr	r3, [r0, #0]
{
90007b76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007b7a:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b7c:	699a      	ldr	r2, [r3, #24]
90007b7e:	0695      	lsls	r5, r2, #26
90007b80:	d461      	bmi.n	90007c46 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90007b82:	4605      	mov	r5, r0
90007b84:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007b86:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007b8a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007b8c:	f012 0c10 	ands.w	ip, r2, #16
90007b90:	d05c      	beq.n	90007c4c <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007b92:	1c74      	adds	r4, r6, #1
90007b94:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b98:	d165      	bne.n	90007c66 <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90007b9a:	699c      	ldr	r4, [r3, #24]
90007b9c:	f014 0420 	ands.w	r4, r4, #32
90007ba0:	d15f      	bne.n	90007c62 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007ba2:	699a      	ldr	r2, [r3, #24]
90007ba4:	0691      	lsls	r1, r2, #26
90007ba6:	d5fc      	bpl.n	90007ba2 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007ba8:	2220      	movs	r2, #32
90007baa:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007bac:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007bb0:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007bb2:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007bb4:	05d0      	lsls	r0, r2, #23
90007bb6:	d532      	bpl.n	90007c1e <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007bb8:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007bbc:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007bbe:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007bc2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007bc4:	d504      	bpl.n	90007bd0 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007bc6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007bca:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007bce:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007bd0:	0596      	lsls	r6, r2, #22
90007bd2:	d504      	bpl.n	90007bde <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007bd4:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007bd8:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007bdc:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007bde:	699a      	ldr	r2, [r3, #24]
90007be0:	0790      	lsls	r0, r2, #30
90007be2:	d501      	bpl.n	90007be8 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90007be4:	2200      	movs	r2, #0
90007be6:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007be8:	699a      	ldr	r2, [r3, #24]
90007bea:	07d1      	lsls	r1, r2, #31
90007bec:	d403      	bmi.n	90007bf6 <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007bee:	699a      	ldr	r2, [r3, #24]
90007bf0:	f042 0201 	orr.w	r2, r2, #1
90007bf4:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007bf6:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007bf8:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007bfa:	4c38      	ldr	r4, [pc, #224]	@ (90007cdc <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007bfc:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007bfe:	4022      	ands	r2, r4
90007c00:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007c02:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007c04:	ea43 030c 	orr.w	r3, r3, ip
90007c08:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007c0a:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c0e:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90007c12:	2300      	movs	r3, #0
      return HAL_ERROR;
90007c14:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90007c16:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007c1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c1e:	0550      	lsls	r0, r2, #21
90007c20:	d4d1      	bmi.n	90007bc6 <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007c22:	0594      	lsls	r4, r2, #22
90007c24:	d4d6      	bmi.n	90007bd4 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90007c26:	2900      	cmp	r1, #0
90007c28:	d1d9      	bne.n	90007bde <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007c2a:	f7fe fd39 	bl	900066a0 <HAL_GetTick>
90007c2e:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007c30:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007c32:	42b0      	cmp	r0, r6
90007c34:	d800      	bhi.n	90007c38 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90007c36:	b91e      	cbnz	r6, 90007c40 <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007c38:	699a      	ldr	r2, [r3, #24]
90007c3a:	f012 0220 	ands.w	r2, r2, #32
90007c3e:	d007      	beq.n	90007c50 <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007c40:	699a      	ldr	r2, [r3, #24]
90007c42:	0692      	lsls	r2, r2, #26
90007c44:	d5a1      	bpl.n	90007b8a <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90007c46:	2000      	movs	r0, #0
}
90007c48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007c4c:	4661      	mov	r1, ip
90007c4e:	e7b0      	b.n	90007bb2 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c50:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007c52:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c54:	430b      	orrs	r3, r1
90007c56:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007c58:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90007c5c:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90007c60:	e7d7      	b.n	90007c12 <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c62:	2400      	movs	r4, #0
90007c64:	e7a0      	b.n	90007ba8 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007c66:	2400      	movs	r4, #0
90007c68:	46b9      	mov	r9, r7
90007c6a:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c6c:	699a      	ldr	r2, [r3, #24]
90007c6e:	0692      	lsls	r2, r2, #26
90007c70:	d42f      	bmi.n	90007cd2 <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
90007c72:	f1ba 0f00 	cmp.w	sl, #0
90007c76:	d199      	bne.n	90007bac <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c78:	f7fe fd12 	bl	900066a0 <HAL_GetTick>
90007c7c:	eba0 0309 	sub.w	r3, r0, r9
90007c80:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c82:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c84:	d304      	bcc.n	90007c90 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
90007c86:	b11e      	cbz	r6, 90007c90 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c88:	699a      	ldr	r2, [r3, #24]
90007c8a:	0690      	lsls	r0, r2, #26
90007c8c:	d5f4      	bpl.n	90007c78 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90007c8e:	e78b      	b.n	90007ba8 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c90:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007c92:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c96:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007c98:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c9a:	0409      	lsls	r1, r1, #16
90007c9c:	d50b      	bpl.n	90007cb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90007c9e:	0441      	lsls	r1, r0, #17
90007ca0:	d409      	bmi.n	90007cb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
90007ca2:	2a20      	cmp	r2, #32
90007ca4:	d007      	beq.n	90007cb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007ca6:	685a      	ldr	r2, [r3, #4]
90007ca8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007cac:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007cae:	f7fe fcf7 	bl	900066a0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007cb2:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007cb4:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007cb6:	699a      	ldr	r2, [r3, #24]
90007cb8:	0690      	lsls	r0, r2, #26
90007cba:	d4d7      	bmi.n	90007c6c <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007cbc:	f7fe fcf0 	bl	900066a0 <HAL_GetTick>
90007cc0:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007cc4:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007cc6:	2819      	cmp	r0, #25
90007cc8:	d9f5      	bls.n	90007cb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007cca:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007ccc:	f04f 0a01 	mov.w	sl, #1
90007cd0:	e7cc      	b.n	90007c6c <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
90007cd2:	f1ba 0f00 	cmp.w	sl, #0
90007cd6:	f47f af69 	bne.w	90007bac <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90007cda:	e765      	b.n	90007ba8 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90007cdc:	fe00e800 	.word	0xfe00e800

90007ce0 <HAL_I2C_MspInit>:
}
90007ce0:	4770      	bx	lr
90007ce2:	bf00      	nop

90007ce4 <HAL_I2C_Init>:
  if (hi2c == NULL)
90007ce4:	2800      	cmp	r0, #0
90007ce6:	d053      	beq.n	90007d90 <HAL_I2C_Init+0xac>
{
90007ce8:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90007cea:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90007cee:	4604      	mov	r4, r0
90007cf0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007cf4:	2b00      	cmp	r3, #0
90007cf6:	d046      	beq.n	90007d86 <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90007cf8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007cfa:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007cfc:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007cfe:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90007d02:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007d04:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007d08:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90007d0a:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007d0e:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90007d10:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007d12:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90007d14:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90007d16:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90007d18:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90007d1c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007d1e:	d009      	beq.n	90007d34 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007d20:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007d24:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007d26:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007d28:	d107      	bne.n	90007d3a <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90007d2a:	685a      	ldr	r2, [r3, #4]
90007d2c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90007d30:	605a      	str	r2, [r3, #4]
90007d32:	e006      	b.n	90007d42 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90007d34:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90007d38:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90007d3a:	685a      	ldr	r2, [r3, #4]
90007d3c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90007d40:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90007d42:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90007d44:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90007d48:	4912      	ldr	r1, [pc, #72]	@ (90007d94 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90007d4a:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90007d4c:	4301      	orrs	r1, r0
90007d4e:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90007d50:	68d9      	ldr	r1, [r3, #12]
90007d52:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90007d56:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90007d58:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90007d5c:	4302      	orrs	r2, r0
90007d5e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90007d62:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90007d66:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007d68:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90007d6a:	4301      	orrs	r1, r0
  return HAL_OK;
90007d6c:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90007d6e:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90007d70:	6819      	ldr	r1, [r3, #0]
90007d72:	f041 0101 	orr.w	r1, r1, #1
90007d76:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007d78:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90007d7a:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90007d7e:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90007d80:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90007d84:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90007d86:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90007d8a:	f7ff ffa9 	bl	90007ce0 <HAL_I2C_MspInit>
90007d8e:	e7b3      	b.n	90007cf8 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90007d90:	2001      	movs	r0, #1
}
90007d92:	4770      	bx	lr
90007d94:	02008000 	.word	0x02008000

90007d98 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90007d98:	4770      	bx	lr
90007d9a:	bf00      	nop

90007d9c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90007d9c:	b1b0      	cbz	r0, 90007dcc <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90007d9e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007da0:	2324      	movs	r3, #36	@ 0x24
{
90007da2:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90007da4:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90007da8:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90007daa:	6813      	ldr	r3, [r2, #0]
90007dac:	f023 0301 	bic.w	r3, r3, #1
90007db0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90007db2:	f7ff fff1 	bl	90007d98 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007db6:	2300      	movs	r3, #0
90007db8:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90007dba:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90007dbc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90007dc0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90007dc4:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90007dc6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90007dca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90007dcc:	2001      	movs	r0, #1
}
90007dce:	4770      	bx	lr

90007dd0 <HAL_I2C_Mem_Write>:
{
90007dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007dd4:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90007dd6:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90007dda:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90007ddc:	2820      	cmp	r0, #32
{
90007dde:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90007de2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90007de4:	d11e      	bne.n	90007e24 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90007de6:	4698      	mov	r8, r3
90007de8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90007dea:	b1bb      	cbz	r3, 90007e1c <HAL_I2C_Mem_Write+0x4c>
90007dec:	f1ba 0f00 	cmp.w	sl, #0
90007df0:	d014      	beq.n	90007e1c <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90007df2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90007df6:	2b01      	cmp	r3, #1
90007df8:	d014      	beq.n	90007e24 <HAL_I2C_Mem_Write+0x54>
90007dfa:	2301      	movs	r3, #1
90007dfc:	460d      	mov	r5, r1
90007dfe:	4691      	mov	r9, r2
90007e00:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90007e04:	f7fe fc4c 	bl	900066a0 <HAL_GetTick>
90007e08:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90007e0a:	4620      	mov	r0, r4
90007e0c:	4631      	mov	r1, r6
90007e0e:	f7ff fc8f 	bl	90007730 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90007e12:	b158      	cbz	r0, 90007e2c <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90007e14:	2001      	movs	r0, #1
}
90007e16:	b003      	add	sp, #12
90007e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90007e1c:	f44f 7300 	mov.w	r3, #512	@ 0x200
90007e20:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90007e22:	e7f7      	b.n	90007e14 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90007e24:	2002      	movs	r0, #2
}
90007e26:	b003      	add	sp, #12
90007e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90007e2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90007e2e:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90007e32:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90007e34:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90007e36:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90007e38:	4a5f      	ldr	r2, [pc, #380]	@ (90007fb8 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90007e3a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90007e3e:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90007e40:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90007e42:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90007e46:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007e48:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90007e4a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90007e4e:	684b      	ldr	r3, [r1, #4]
90007e50:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90007e52:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90007e56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90007e5a:	4a58      	ldr	r2, [pc, #352]	@ (90007fbc <HAL_I2C_Mem_Write+0x1ec>)
90007e5c:	ea43 030b 	orr.w	r3, r3, fp
90007e60:	431a      	orrs	r2, r3
90007e62:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007e64:	4632      	mov	r2, r6
90007e66:	4639      	mov	r1, r7
90007e68:	f7ff fd02 	bl	90007870 <I2C_WaitOnTXISFlagUntilTimeout>
90007e6c:	2800      	cmp	r0, #0
90007e6e:	d176      	bne.n	90007f5e <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90007e70:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007e74:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90007e76:	d169      	bne.n	90007f4c <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007e78:	fa5f f289 	uxtb.w	r2, r9
90007e7c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90007e7e:	463b      	mov	r3, r7
90007e80:	2200      	movs	r2, #0
90007e82:	2180      	movs	r1, #128	@ 0x80
90007e84:	4620      	mov	r0, r4
90007e86:	9600      	str	r6, [sp, #0]
90007e88:	f7ff fda8 	bl	900079dc <I2C_WaitOnFlagUntilTimeout>
90007e8c:	2800      	cmp	r0, #0
90007e8e:	d166      	bne.n	90007f5e <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007e90:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90007e92:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007e94:	b29b      	uxth	r3, r3
90007e96:	2bff      	cmp	r3, #255	@ 0xff
90007e98:	d965      	bls.n	90007f66 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90007e9a:	6853      	ldr	r3, [r2, #4]
90007e9c:	4948      	ldr	r1, [pc, #288]	@ (90007fc0 <HAL_I2C_Mem_Write+0x1f0>)
90007e9e:	400b      	ands	r3, r1
90007ea0:	4948      	ldr	r1, [pc, #288]	@ (90007fc4 <HAL_I2C_Mem_Write+0x1f4>)
90007ea2:	ea43 030b 	orr.w	r3, r3, fp
90007ea6:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90007ea8:	23ff      	movs	r3, #255	@ 0xff
90007eaa:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90007eac:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90007eae:	e003      	b.n	90007eb8 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90007eb0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90007eb2:	b29b      	uxth	r3, r3
90007eb4:	2b00      	cmp	r3, #0
90007eb6:	d069      	beq.n	90007f8c <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90007eb8:	4632      	mov	r2, r6
90007eba:	4639      	mov	r1, r7
90007ebc:	4620      	mov	r0, r4
90007ebe:	f7ff fcd7 	bl	90007870 <I2C_WaitOnTXISFlagUntilTimeout>
90007ec2:	4602      	mov	r2, r0
90007ec4:	2800      	cmp	r0, #0
90007ec6:	d1a5      	bne.n	90007e14 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90007ec8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007eca:	6825      	ldr	r5, [r4, #0]
90007ecc:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90007ed0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90007ed2:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90007ed4:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90007ed8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90007eda:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90007edc:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90007ee0:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90007ee2:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90007ee6:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90007ee8:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90007eec:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
90007eee:	b289      	uxth	r1, r1
90007ef0:	2900      	cmp	r1, #0
90007ef2:	d0dd      	beq.n	90007eb0 <HAL_I2C_Mem_Write+0xe0>
90007ef4:	2b00      	cmp	r3, #0
90007ef6:	d1db      	bne.n	90007eb0 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90007ef8:	463b      	mov	r3, r7
90007efa:	2180      	movs	r1, #128	@ 0x80
90007efc:	4620      	mov	r0, r4
90007efe:	9600      	str	r6, [sp, #0]
90007f00:	f7ff fd6c 	bl	900079dc <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007f04:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90007f08:	2800      	cmp	r0, #0
90007f0a:	d183      	bne.n	90007e14 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007f0c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90007f0e:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90007fc0 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007f12:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90007f14:	492b      	ldr	r1, [pc, #172]	@ (90007fc4 <HAL_I2C_Mem_Write+0x1f4>)
90007f16:	4670      	mov	r0, lr
90007f18:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90007f1a:	4563      	cmp	r3, ip
90007f1c:	d909      	bls.n	90007f32 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90007f1e:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90007f20:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90007f24:	ea03 030e 	and.w	r3, r3, lr
90007f28:	ea43 030b 	orr.w	r3, r3, fp
90007f2c:	4319      	orrs	r1, r3
90007f2e:	6051      	str	r1, [r2, #4]
}
90007f30:	e7be      	b.n	90007eb0 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90007f32:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90007f34:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90007f36:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90007f38:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90007f3a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90007f3c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90007f3e:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90007f42:	430b      	orrs	r3, r1
90007f44:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90007f48:	6053      	str	r3, [r2, #4]
}
90007f4a:	e7b1      	b.n	90007eb0 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007f4c:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007f50:	4639      	mov	r1, r7
90007f52:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90007f54:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90007f56:	4632      	mov	r2, r6
90007f58:	f7ff fc8a 	bl	90007870 <I2C_WaitOnTXISFlagUntilTimeout>
90007f5c:	b188      	cbz	r0, 90007f82 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
90007f5e:	2300      	movs	r3, #0
90007f60:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90007f64:	e756      	b.n	90007e14 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90007f66:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90007f68:	4815      	ldr	r0, [pc, #84]	@ (90007fc0 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
90007f6a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90007f6c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90007f6e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90007f70:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90007f72:	4001      	ands	r1, r0
90007f74:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90007f78:	430b      	orrs	r3, r1
90007f7a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90007f7e:	6053      	str	r3, [r2, #4]
}
90007f80:	e79a      	b.n	90007eb8 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90007f82:	fa5f f289 	uxtb.w	r2, r9
90007f86:	6823      	ldr	r3, [r4, #0]
90007f88:	629a      	str	r2, [r3, #40]	@ 0x28
90007f8a:	e778      	b.n	90007e7e <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90007f8c:	4632      	mov	r2, r6
90007f8e:	4639      	mov	r1, r7
90007f90:	4620      	mov	r0, r4
90007f92:	f7ff fdef 	bl	90007b74 <I2C_WaitOnSTOPFlagUntilTimeout>
90007f96:	2800      	cmp	r0, #0
90007f98:	f47f af3c 	bne.w	90007e14 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007f9c:	6823      	ldr	r3, [r4, #0]
90007f9e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90007fa0:	4d09      	ldr	r5, [pc, #36]	@ (90007fc8 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007fa2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90007fa4:	685a      	ldr	r2, [r3, #4]
90007fa6:	402a      	ands	r2, r5
90007fa8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007faa:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90007fae:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90007fb2:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90007fb6:	e72e      	b.n	90007e16 <HAL_I2C_Mem_Write+0x46>
90007fb8:	fc009800 	.word	0xfc009800
90007fbc:	01002000 	.word	0x01002000
90007fc0:	fc009c00 	.word	0xfc009c00
90007fc4:	01ff0000 	.word	0x01ff0000
90007fc8:	fe00e800 	.word	0xfe00e800

90007fcc <HAL_I2C_Mem_Read>:
{
90007fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007fd0:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90007fd2:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90007fd6:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90007fd8:	2820      	cmp	r0, #32
{
90007fda:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90007fde:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90007fe0:	d11e      	bne.n	90008020 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90007fe2:	4698      	mov	r8, r3
90007fe4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007fe6:	b1bb      	cbz	r3, 90008018 <HAL_I2C_Mem_Read+0x4c>
90007fe8:	f1ba 0f00 	cmp.w	sl, #0
90007fec:	d014      	beq.n	90008018 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90007fee:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90007ff2:	2b01      	cmp	r3, #1
90007ff4:	d014      	beq.n	90008020 <HAL_I2C_Mem_Read+0x54>
90007ff6:	2301      	movs	r3, #1
90007ff8:	460d      	mov	r5, r1
90007ffa:	4691      	mov	r9, r2
90007ffc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008000:	f7fe fb4e 	bl	900066a0 <HAL_GetTick>
90008004:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008006:	4620      	mov	r0, r4
90008008:	4631      	mov	r1, r6
9000800a:	f7ff fb91 	bl	90007730 <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000800e:	b158      	cbz	r0, 90008028 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90008010:	2001      	movs	r0, #1
}
90008012:	b002      	add	sp, #8
90008014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008018:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000801c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000801e:	e7f7      	b.n	90008010 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90008020:	2002      	movs	r0, #2
}
90008022:	b002      	add	sp, #8
90008024:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008028:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000802a:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
9000802e:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008030:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008032:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90008034:	495f      	ldr	r1, [pc, #380]	@ (900081b4 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008036:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000803a:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
9000803c:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000803e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008042:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008044:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008046:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000804a:	6853      	ldr	r3, [r2, #4]
9000804c:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000804e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008052:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008056:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90008058:	432b      	orrs	r3, r5
9000805a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000805e:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008060:	4632      	mov	r2, r6
90008062:	f7ff fc05 	bl	90007870 <I2C_WaitOnTXISFlagUntilTimeout>
90008066:	2800      	cmp	r0, #0
90008068:	d177      	bne.n	9000815a <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000806a:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000806e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008070:	d16a      	bne.n	90008148 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008072:	fa5f f289 	uxtb.w	r2, r9
90008076:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90008078:	463b      	mov	r3, r7
9000807a:	2200      	movs	r2, #0
9000807c:	2140      	movs	r1, #64	@ 0x40
9000807e:	4620      	mov	r0, r4
90008080:	9600      	str	r6, [sp, #0]
90008082:	f7ff fcab 	bl	900079dc <I2C_WaitOnFlagUntilTimeout>
90008086:	2800      	cmp	r0, #0
90008088:	d167      	bne.n	9000815a <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000808a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000808c:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000808e:	b29b      	uxth	r3, r3
90008090:	2bff      	cmp	r3, #255	@ 0xff
90008092:	d966      	bls.n	90008162 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008094:	6853      	ldr	r3, [r2, #4]
90008096:	4947      	ldr	r1, [pc, #284]	@ (900081b4 <HAL_I2C_Mem_Read+0x1e8>)
90008098:	400b      	ands	r3, r1
9000809a:	4947      	ldr	r1, [pc, #284]	@ (900081b8 <HAL_I2C_Mem_Read+0x1ec>)
9000809c:	432b      	orrs	r3, r5
9000809e:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900080a0:	23ff      	movs	r3, #255	@ 0xff
900080a2:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900080a4:	6051      	str	r1, [r2, #4]
}
900080a6:	e003      	b.n	900080b0 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900080a8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900080aa:	b29b      	uxth	r3, r3
900080ac:	2b00      	cmp	r3, #0
900080ae:	d06b      	beq.n	90008188 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900080b0:	463b      	mov	r3, r7
900080b2:	2200      	movs	r2, #0
900080b4:	2104      	movs	r1, #4
900080b6:	4620      	mov	r0, r4
900080b8:	9600      	str	r6, [sp, #0]
900080ba:	f7ff fc8f 	bl	900079dc <I2C_WaitOnFlagUntilTimeout>
900080be:	2800      	cmp	r0, #0
900080c0:	d1a6      	bne.n	90008010 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
900080c2:	6821      	ldr	r1, [r4, #0]
900080c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900080c6:	6a49      	ldr	r1, [r1, #36]	@ 0x24
900080c8:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
900080ca:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
900080ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900080d0:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900080d4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
900080d6:	3101      	adds	r1, #1
      hi2c->XferCount--;
900080d8:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900080dc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900080de:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900080e0:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900080e4:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900080e6:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900080e8:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900080ea:	b289      	uxth	r1, r1
900080ec:	2900      	cmp	r1, #0
900080ee:	d0db      	beq.n	900080a8 <HAL_I2C_Mem_Read+0xdc>
900080f0:	2b00      	cmp	r3, #0
900080f2:	d1d9      	bne.n	900080a8 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900080f4:	4602      	mov	r2, r0
900080f6:	463b      	mov	r3, r7
900080f8:	2180      	movs	r1, #128	@ 0x80
900080fa:	4620      	mov	r0, r4
900080fc:	9600      	str	r6, [sp, #0]
900080fe:	f7ff fc6d 	bl	900079dc <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008102:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008106:	2800      	cmp	r0, #0
90008108:	d182      	bne.n	90008010 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000810a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000810c:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 900081c8 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008110:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008112:	492a      	ldr	r1, [pc, #168]	@ (900081bc <HAL_I2C_Mem_Read+0x1f0>)
90008114:	4670      	mov	r0, lr
90008116:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008118:	4563      	cmp	r3, ip
9000811a:	d908      	bls.n	9000812e <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000811c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000811e:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008122:	ea03 030e 	and.w	r3, r3, lr
90008126:	432b      	orrs	r3, r5
90008128:	4319      	orrs	r1, r3
9000812a:	6051      	str	r1, [r2, #4]
}
9000812c:	e7bc      	b.n	900080a8 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
9000812e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008130:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90008132:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008134:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008136:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008138:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000813a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000813e:	430b      	orrs	r3, r1
90008140:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008144:	6053      	str	r3, [r2, #4]
}
90008146:	e7af      	b.n	900080a8 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008148:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000814c:	4639      	mov	r1, r7
9000814e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008150:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008152:	4632      	mov	r2, r6
90008154:	f7ff fb8c 	bl	90007870 <I2C_WaitOnTXISFlagUntilTimeout>
90008158:	b188      	cbz	r0, 9000817e <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
9000815a:	2300      	movs	r3, #0
9000815c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008160:	e756      	b.n	90008010 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90008162:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008164:	4813      	ldr	r0, [pc, #76]	@ (900081b4 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90008166:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008168:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000816a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000816c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000816e:	4001      	ands	r1, r0
90008170:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90008174:	430b      	orrs	r3, r1
90008176:	4912      	ldr	r1, [pc, #72]	@ (900081c0 <HAL_I2C_Mem_Read+0x1f4>)
90008178:	4319      	orrs	r1, r3
9000817a:	6051      	str	r1, [r2, #4]
}
9000817c:	e798      	b.n	900080b0 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000817e:	fa5f f289 	uxtb.w	r2, r9
90008182:	6823      	ldr	r3, [r4, #0]
90008184:	629a      	str	r2, [r3, #40]	@ 0x28
90008186:	e777      	b.n	90008078 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008188:	4632      	mov	r2, r6
9000818a:	4639      	mov	r1, r7
9000818c:	4620      	mov	r0, r4
9000818e:	f7ff fcf1 	bl	90007b74 <I2C_WaitOnSTOPFlagUntilTimeout>
90008192:	2800      	cmp	r0, #0
90008194:	f47f af3c 	bne.w	90008010 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008198:	6823      	ldr	r3, [r4, #0]
9000819a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000819c:	4d09      	ldr	r5, [pc, #36]	@ (900081c4 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000819e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900081a0:	685a      	ldr	r2, [r3, #4]
900081a2:	402a      	ands	r2, r5
900081a4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900081a6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900081aa:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900081ae:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900081b2:	e72e      	b.n	90008012 <HAL_I2C_Mem_Read+0x46>
900081b4:	fc009800 	.word	0xfc009800
900081b8:	01ff2400 	.word	0x01ff2400
900081bc:	01ff0000 	.word	0x01ff0000
900081c0:	02002400 	.word	0x02002400
900081c4:	fe00e800 	.word	0xfe00e800
900081c8:	fc009c00 	.word	0xfc009c00

900081cc <HAL_I2C_GetState>:
  return hi2c->State;
900081cc:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
900081d0:	4770      	bx	lr
900081d2:	bf00      	nop

900081d4 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900081d4:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
900081d6:	4770      	bx	lr

900081d8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900081d8:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900081dc:	2a20      	cmp	r2, #32
900081de:	d123      	bne.n	90008228 <HAL_I2CEx_ConfigAnalogFilter+0x50>
900081e0:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900081e4:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900081e8:	4603      	mov	r3, r0
900081ea:	2a01      	cmp	r2, #1
900081ec:	d01c      	beq.n	90008228 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900081ee:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900081f0:	2024      	movs	r0, #36	@ 0x24
{
900081f2:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900081f4:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900081f8:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
900081fc:	6810      	ldr	r0, [r2, #0]
900081fe:	f020 0001 	bic.w	r0, r0, #1
90008202:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008204:	6810      	ldr	r0, [r2, #0]
90008206:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000820a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000820c:	6810      	ldr	r0, [r2, #0]
9000820e:	4301      	orrs	r1, r0

    return HAL_OK;
90008210:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90008212:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008214:	6811      	ldr	r1, [r2, #0]
90008216:	f041 0101 	orr.w	r1, r1, #1
9000821a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000821c:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008220:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008224:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008228:	2002      	movs	r0, #2
}
9000822a:	4770      	bx	lr

9000822c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000822c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008230:	2a20      	cmp	r2, #32
90008232:	d122      	bne.n	9000827a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008234:	4603      	mov	r3, r0
{
90008236:	b500      	push	{lr}
90008238:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000823c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008240:	2a01      	cmp	r2, #1
90008242:	d01c      	beq.n	9000827e <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008244:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008246:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008248:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000824c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90008250:	6810      	ldr	r0, [r2, #0]
90008252:	f020 0001 	bic.w	r0, r0, #1
90008256:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008258:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000825a:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
9000825e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008262:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008264:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008266:	6811      	ldr	r1, [r2, #0]
90008268:	f041 0101 	orr.w	r1, r1, #1
9000826c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000826e:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008272:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008276:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000827a:	2002      	movs	r0, #2
}
9000827c:	4770      	bx	lr
    __HAL_LOCK(hi2c);
9000827e:	2002      	movs	r0, #2
}
90008280:	f85d fb04 	ldr.w	pc, [sp], #4

90008284 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008284:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008288:	4681      	mov	r9, r0
9000828a:	460d      	mov	r5, r1
9000828c:	4614      	mov	r4, r2
9000828e:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008290:	7806      	ldrb	r6, [r0, #0]
90008292:	2701      	movs	r7, #1
  p = 0;
90008294:	f04f 0800 	mov.w	r8, #0
90008298:	e006      	b.n	900082a8 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000829a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000829e:	eb06 0308 	add.w	r3, r6, r8
900082a2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900082a6:	d83c      	bhi.n	90008322 <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900082a8:	4632      	mov	r2, r6
900082aa:	4639      	mov	r1, r7
900082ac:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
900082b0:	b116      	cbz	r6, 900082b8 <JPEG_Bits_To_SizeCodes+0x34>
900082b2:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
900082b4:	f022 f850 	bl	9002a358 <memset>
  for (l = 0; l < 16UL; l++)
900082b8:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
900082ba:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
900082be:	d1ec      	bne.n	9000829a <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
900082c0:	f04f 0900 	mov.w	r9, #0
900082c4:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
900082c8:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
900082cc:	7829      	ldrb	r1, [r5, #0]
900082ce:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
900082d0:	b321      	cbz	r1, 9000831c <JPEG_Bits_To_SizeCodes+0x98>
900082d2:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900082d6:	2701      	movs	r7, #1
  p = 0;
900082d8:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
900082da:	4291      	cmp	r1, r2
900082dc:	d124      	bne.n	90008328 <JPEG_Bits_To_SizeCodes+0xa4>
900082de:	eb06 0008 	add.w	r0, r6, r8
900082e2:	eb05 0c06 	add.w	ip, r5, r6
900082e6:	464b      	mov	r3, r9
900082e8:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
900082ec:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
900082f0:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
900082f2:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
900082f6:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
900082f8:	4596      	cmp	lr, r2
900082fa:	d0f7      	beq.n	900082ec <JPEG_Bits_To_SizeCodes+0x68>
900082fc:	3601      	adds	r6, #1
900082fe:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90008302:	440e      	add	r6, r1
    if(si > 31UL)
90008304:	2a1f      	cmp	r2, #31
90008306:	d80c      	bhi.n	90008322 <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008308:	fa07 f102 	lsl.w	r1, r7, r2
9000830c:	4299      	cmp	r1, r3
9000830e:	d908      	bls.n	90008322 <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
90008310:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008312:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90008316:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90008318:	2900      	cmp	r1, #0
9000831a:	d1de      	bne.n	900082da <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
9000831c:	2000      	movs	r0, #0
}
9000831e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90008322:	2001      	movs	r0, #1
}
90008324:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
90008328:	464b      	mov	r3, r9
9000832a:	e7eb      	b.n	90008304 <JPEG_Bits_To_SizeCodes+0x80>

9000832c <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000832c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000832e:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90008332:	460d      	mov	r5, r1
90008334:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008336:	ab01      	add	r3, sp, #4
90008338:	aa43      	add	r2, sp, #268	@ 0x10c
9000833a:	a902      	add	r1, sp, #8
9000833c:	f7ff ffa2 	bl	90008284 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008340:	b9d0      	cbnz	r0, 90008378 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008342:	9f01      	ldr	r7, [sp, #4]
90008344:	b1c7      	cbz	r7, 90008378 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008346:	370f      	adds	r7, #15
90008348:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
9000834c:	a902      	add	r1, sp, #8
9000834e:	f104 0c0f 	add.w	ip, r4, #15
90008352:	4427      	add	r7, r4
90008354:	e009      	b.n	9000836a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008356:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000835a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000835c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008360:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008364:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008366:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008368:	d006      	beq.n	90008378 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000836a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000836e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008370:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008374:	d9ef      	bls.n	90008356 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008376:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008378:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
9000837c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000837e:	bf00      	nop

90008380 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008384:	6804      	ldr	r4, [r0, #0]
{
90008386:	b093      	sub	sp, #76	@ 0x4c
90008388:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000838a:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
9000838e:	429a      	cmp	r2, r3
90008390:	f000 809d 	beq.w	900084ce <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008394:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90008398:	429a      	cmp	r2, r3
9000839a:	d003      	beq.n	900083a4 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000839c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000839e:	b013      	add	sp, #76	@ 0x4c
900083a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900083a4:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900083a8:	a903      	add	r1, sp, #12
900083aa:	f7ff ffbf 	bl	9000832c <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900083ae:	2800      	cmp	r0, #0
900083b0:	d1f5      	bne.n	9000839e <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900083b2:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083b6:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083ba:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
900083be:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083c0:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
900083c4:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083c6:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
900083ca:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083ce:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
900083d2:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083d6:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
900083da:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083dc:	f89d 9015 	ldrb.w	r9, [sp, #21]
900083e0:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083e4:	f89d c014 	ldrb.w	ip, [sp, #20]
900083e8:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083ec:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083f0:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083f4:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083f8:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083fa:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900083fe:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90008402:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90008406:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000840a:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000840e:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008412:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008416:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000841a:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000841c:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008420:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008424:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008428:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000842a:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000842e:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008430:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90008434:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008438:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000843c:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008440:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008444:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008448:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000844a:	9b01      	ldr	r3, [sp, #4]
9000844c:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008450:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008454:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008458:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000845c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008460:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008462:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008466:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000846a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9000846e:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008472:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008476:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000847a:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
9000847e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008482:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008486:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000848a:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
9000848e:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008490:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90008494:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008496:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000849a:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000849e:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
900084a2:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900084a4:	f89d 2020 	ldrb.w	r2, [sp, #32]
900084a8:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900084aa:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900084ae:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900084b2:	f89d 301c 	ldrb.w	r3, [sp, #28]
900084b6:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900084b8:	f89d 3018 	ldrb.w	r3, [sp, #24]
900084bc:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
900084c0:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
900084c4:	f844 3c18 	str.w	r3, [r4, #-24]
}
900084c8:	b013      	add	sp, #76	@ 0x4c
900084ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900084ce:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
900084d2:	e769      	b.n	900083a8 <JPEG_Set_HuffDC_Mem+0x28>

900084d4 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
900084d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900084d8:	6804      	ldr	r4, [r0, #0]
{
900084da:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
900084de:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900084e0:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
900084e4:	429a      	cmp	r2, r3
900084e6:	d041      	beq.n	9000856c <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
900084e8:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
900084ec:	429a      	cmp	r2, r3
900084ee:	d004      	beq.n	900084fa <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900084f0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900084f2:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900084f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900084fa:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900084fe:	4628      	mov	r0, r5
90008500:	466b      	mov	r3, sp
90008502:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90008506:	a901      	add	r1, sp, #4
90008508:	f7ff febc 	bl	90008284 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000850c:	2800      	cmp	r0, #0
9000850e:	d1f0      	bne.n	900084f2 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008510:	9b00      	ldr	r3, [sp, #0]
90008512:	b373      	cbz	r3, 90008572 <JPEG_Set_HuffAC_Mem+0x9e>
90008514:	330f      	adds	r3, #15
90008516:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000851a:	af01      	add	r7, sp, #4
9000851c:	f105 020f 	add.w	r2, r5, #15
90008520:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008524:	ae42      	add	r6, sp, #264	@ 0x108
90008526:	e011      	b.n	9000854c <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90008528:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000852c:	2ba1      	cmp	r3, #161	@ 0xa1
9000852e:	d8df      	bhi.n	900084f0 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008530:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008534:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008538:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
9000853c:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000853e:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008542:	46b1      	mov	r9, r6
90008544:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008548:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000854a:	d014      	beq.n	90008576 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000854c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90008550:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90008552:	2900      	cmp	r1, #0
90008554:	d0ec      	beq.n	90008530 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
90008556:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90008558:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000855c:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000855e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90008562:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008566:	d1df      	bne.n	90008528 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90008568:	23a1      	movs	r3, #161	@ 0xa1
9000856a:	e7e1      	b.n	90008530 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000856c:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90008570:	e7c5      	b.n	900084fe <JPEG_Set_HuffAC_Mem+0x2a>
90008572:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90008576:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000857a:	4a1a      	ldr	r2, [pc, #104]	@ (900085e4 <JPEG_Set_HuffAC_Mem+0x110>)
9000857c:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90008580:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90008582:	6023      	str	r3, [r4, #0]
90008584:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90008588:	6063      	str	r3, [r4, #4]
9000858a:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000858e:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008590:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90008594:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90008596:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000859a:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000859e:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900085a0:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900085a4:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900085a6:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900085aa:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085ac:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085b0:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085b4:	0212      	lsls	r2, r2, #8
900085b6:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085ba:	021b      	lsls	r3, r3, #8
900085bc:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085c0:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
900085c4:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085c6:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085ca:	433a      	orrs	r2, r7
    while (i > 1UL)
900085cc:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900085ce:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900085d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900085d6:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900085da:	d1e7      	bne.n	900085ac <JPEG_Set_HuffAC_Mem+0xd8>
}
900085dc:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900085e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900085e4:	0fd10fd0 	.word	0x0fd10fd0

900085e8 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900085e8:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900085ea:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900085ec:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900085f0:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900085f2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900085f4:	f002 0203 	and.w	r2, r2, #3
900085f8:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900085fa:	685a      	ldr	r2, [r3, #4]
900085fc:	bf0c      	ite	eq
900085fe:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90008602:	f022 0208 	bicne.w	r2, r2, #8
90008606:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008608:	681a      	ldr	r2, [r3, #0]
9000860a:	f022 0201 	bic.w	r2, r2, #1
9000860e:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008610:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008612:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008616:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008618:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000861a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000861e:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008620:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008622:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008626:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008628:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000862a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000862e:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90008630:	681a      	ldr	r2, [r3, #0]
90008632:	f042 0201 	orr.w	r2, r2, #1
90008636:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008638:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000863a:	f002 020c 	and.w	r2, r2, #12
9000863e:	2a08      	cmp	r2, #8
90008640:	d00a      	beq.n	90008658 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008642:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008644:	f002 020c 	and.w	r2, r2, #12
90008648:	2a0c      	cmp	r2, #12
9000864a:	d000      	beq.n	9000864e <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000864c:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000864e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008650:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008654:	631a      	str	r2, [r3, #48]	@ 0x30
}
90008656:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90008658:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000865a:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
9000865e:	631a      	str	r2, [r3, #48]	@ 0x30
90008660:	4770      	bx	lr
90008662:	bf00      	nop

90008664 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008664:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008666:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90008668:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000866a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
9000866c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000866e:	42aa      	cmp	r2, r5
90008670:	d32a      	bcc.n	900086c8 <JPEG_DMA_StartProcess+0x64>
90008672:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008674:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008676:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008678:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000867a:	42b3      	cmp	r3, r6
9000867c:	d324      	bcc.n	900086c8 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000867e:	4f19      	ldr	r7, [pc, #100]	@ (900086e4 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008680:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 900086f0 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008684:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008686:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000868a:	4917      	ldr	r1, [pc, #92]	@ (900086e8 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000868c:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000868e:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008690:	4916      	ldr	r1, [pc, #88]	@ (900086ec <JPEG_DMA_StartProcess+0x88>)
90008692:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90008694:	b1a5      	cbz	r5, 900086c0 <JPEG_DMA_StartProcess+0x5c>
90008696:	b19e      	cbz	r6, 900086c0 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008698:	fbb2 f1f5 	udiv	r1, r2, r5
9000869c:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900086a0:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900086a2:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900086a4:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900086a6:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900086a8:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900086aa:	fbb3 f2f6 	udiv	r2, r3, r6
900086ae:	fb06 3212 	mls	r2, r6, r2, r3
900086b2:	1a9b      	subs	r3, r3, r2
900086b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900086b6:	9500      	str	r5, [sp, #0]
900086b8:	69e2      	ldr	r2, [r4, #28]
900086ba:	f001 fc0f 	bl	90009edc <HAL_MDMA_Start_IT>
900086be:	b130      	cbz	r0, 900086ce <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900086c0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900086c2:	f043 0304 	orr.w	r3, r3, #4
900086c6:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
900086c8:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900086ca:	b003      	add	sp, #12
900086cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900086ce:	6822      	ldr	r2, [r4, #0]
900086d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900086d2:	69a1      	ldr	r1, [r4, #24]
900086d4:	3240      	adds	r2, #64	@ 0x40
900086d6:	9500      	str	r5, [sp, #0]
900086d8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900086da:	f001 fbff 	bl	90009edc <HAL_MDMA_Start_IT>
900086de:	2800      	cmp	r0, #0
900086e0:	d0f3      	beq.n	900086ca <JPEG_DMA_StartProcess+0x66>
900086e2:	e7ed      	b.n	900086c0 <JPEG_DMA_StartProcess+0x5c>
900086e4:	90008ce1 	.word	0x90008ce1
900086e8:	90008f55 	.word	0x90008f55
900086ec:	90008fd5 	.word	0x90008fd5
900086f0:	90008d0d 	.word	0x90008d0d

900086f4 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900086f4:	6803      	ldr	r3, [r0, #0]
900086f6:	685a      	ldr	r2, [r3, #4]
900086f8:	f002 0203 	and.w	r2, r2, #3
900086fc:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900086fe:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90008700:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90008704:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008706:	f000 80a0 	beq.w	9000884a <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000870a:	f012 0203 	ands.w	r2, r2, #3
9000870e:	d177      	bne.n	90008800 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008710:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008712:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008716:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008718:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000871a:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000871c:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008720:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008724:	2100      	movs	r1, #0
90008726:	4a5e      	ldr	r2, [pc, #376]	@ (900088a0 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008728:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000872c:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90008730:	2600      	movs	r6, #0
90008732:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008736:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000873a:	f241 3188 	movw	r1, #5000	@ 0x1388
9000873e:	e033      	b.n	900087a8 <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008740:	f892 8001 	ldrb.w	r8, [r2, #1]
90008744:	fb0e f707 	mul.w	r7, lr, r7
90008748:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000874a:	f815 8008 	ldrb.w	r8, [r5, r8]
9000874e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008752:	2f64      	cmp	r7, #100	@ 0x64
90008754:	d96a      	bls.n	9000882c <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
90008756:	fbb1 f7f7 	udiv	r7, r1, r7
9000875a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000875c:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008760:	2f01      	cmp	r7, #1
90008762:	d03d      	beq.n	900087e0 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008764:	f892 8002 	ldrb.w	r8, [r2, #2]
90008768:	fb0e f707 	mul.w	r7, lr, r7
9000876c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000876e:	f815 8008 	ldrb.w	r8, [r5, r8]
90008772:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008776:	2f64      	cmp	r7, #100	@ 0x64
90008778:	d953      	bls.n	90008822 <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
9000877a:	fbb1 f7f7 	udiv	r7, r1, r7
9000877e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008780:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008782:	2b01      	cmp	r3, #1
90008784:	d030      	beq.n	900087e8 <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008786:	78d7      	ldrb	r7, [r2, #3]
90008788:	fb0e f303 	mul.w	r3, lr, r3
9000878c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000878e:	5def      	ldrb	r7, [r5, r7]
90008790:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008794:	2b64      	cmp	r3, #100	@ 0x64
90008796:	d953      	bls.n	90008840 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
90008798:	fbb1 f3f3 	udiv	r3, r1, r3
9000879c:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000879e:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
900087a0:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900087a4:	42a2      	cmp	r2, r4
900087a6:	d025      	beq.n	900087f4 <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
900087a8:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900087ac:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
900087ae:	2f01      	cmp	r7, #1
900087b0:	d035      	beq.n	9000881e <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900087b2:	f892 8000 	ldrb.w	r8, [r2]
900087b6:	fb0e f707 	mul.w	r7, lr, r7
900087ba:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900087bc:	f815 8008 	ldrb.w	r8, [r5, r8]
900087c0:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900087c4:	2f64      	cmp	r7, #100	@ 0x64
900087c6:	d936      	bls.n	90008836 <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
900087c8:	fbb1 f7f7 	udiv	r7, r1, r7
900087cc:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900087ce:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
900087d2:	2f01      	cmp	r7, #1
900087d4:	d1b4      	bne.n	90008740 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900087d6:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
900087da:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900087dc:	2f01      	cmp	r7, #1
900087de:	d1c1      	bne.n	90008764 <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900087e0:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
900087e2:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900087e4:	2b01      	cmp	r3, #1
900087e6:	d1ce      	bne.n	90008786 <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900087e8:	3204      	adds	r2, #4
        quality += 100UL;
900087ea:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
900087ec:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900087f0:	42a2      	cmp	r2, r4
900087f2:	d1d9      	bne.n	900087a8 <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
900087f4:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
900087f6:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
900087f8:	f8c9 6010 	str.w	r6, [r9, #16]
}
900087fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008800:	685a      	ldr	r2, [r3, #4]
90008802:	f002 0203 	and.w	r2, r2, #3
90008806:	2a03      	cmp	r2, #3
90008808:	d147      	bne.n	9000889a <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000880a:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000880c:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000880e:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008810:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008814:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008818:	68da      	ldr	r2, [r3, #12]
9000881a:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000881c:	e01d      	b.n	9000885a <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
9000881e:	3664      	adds	r6, #100	@ 0x64
90008820:	e7d5      	b.n	900087ce <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90008822:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008826:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000882a:	e7a9      	b.n	90008780 <HAL_JPEG_GetInfo.part.0+0x8c>
9000882c:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008830:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008834:	e792      	b.n	9000875c <HAL_JPEG_GetInfo.part.0+0x68>
90008836:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000883a:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000883e:	e7c6      	b.n	900087ce <HAL_JPEG_GetInfo.part.0+0xda>
90008840:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008844:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008848:	e7a9      	b.n	9000879e <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000884a:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000884c:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000884e:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008852:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008856:	68da      	ldr	r2, [r3, #12]
90008858:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000885a:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000885c:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000885e:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008862:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008866:	699a      	ldr	r2, [r3, #24]
90008868:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000886c:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000886e:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008872:	d105      	bne.n	90008880 <HAL_JPEG_GetInfo.part.0+0x18c>
90008874:	b927      	cbnz	r7, 90008880 <HAL_JPEG_GetInfo.part.0+0x18c>
90008876:	2a00      	cmp	r2, #0
90008878:	f47f af54 	bne.w	90008724 <HAL_JPEG_GetInfo.part.0+0x30>
9000887c:	2102      	movs	r1, #2
9000887e:	e752      	b.n	90008726 <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008880:	4321      	orrs	r1, r4
90008882:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
90008886:	f43f af4d 	beq.w	90008724 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000888a:	433a      	orrs	r2, r7
9000888c:	f47f af4a 	bne.w	90008724 <HAL_JPEG_GetInfo.part.0+0x30>
90008890:	2e03      	cmp	r6, #3
90008892:	f47f af47 	bne.w	90008724 <HAL_JPEG_GetInfo.part.0+0x30>
90008896:	2101      	movs	r1, #1
90008898:	e745      	b.n	90008726 <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
9000889a:	2001      	movs	r0, #1
}
9000889c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900088a0:	9002d1a0 	.word	0x9002d1a0

900088a4 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900088a4:	2800      	cmp	r0, #0
900088a6:	f000 8108 	beq.w	90008aba <HAL_JPEG_Init+0x216>
{
900088aa:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
900088ac:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
900088b0:	4605      	mov	r5, r0
900088b2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900088b6:	2b00      	cmp	r3, #0
900088b8:	f000 80fa 	beq.w	90008ab0 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
900088bc:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900088be:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
900088c0:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900088c2:	497f      	ldr	r1, [pc, #508]	@ (90008ac0 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900088c4:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
900088c8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900088ca:	f042 0201 	orr.w	r2, r2, #1
900088ce:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900088d0:	6822      	ldr	r2, [r4, #0]
900088d2:	f022 0201 	bic.w	r2, r2, #1
900088d6:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900088d8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900088da:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900088de:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900088e0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900088e2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900088e6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900088e8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900088ea:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900088ee:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900088f0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900088f2:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900088f6:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900088f8:	4a72      	ldr	r2, [pc, #456]	@ (90008ac4 <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900088fa:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900088fc:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
900088fe:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008900:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008904:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90008908:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000890c:	4b6e      	ldr	r3, [pc, #440]	@ (90008ac8 <HAL_JPEG_Init+0x224>)
9000890e:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90008912:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008916:	496d      	ldr	r1, [pc, #436]	@ (90008acc <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008918:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000891c:	4b6c      	ldr	r3, [pc, #432]	@ (90008ad0 <HAL_JPEG_Init+0x22c>)
9000891e:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90008922:	4a6c      	ldr	r2, [pc, #432]	@ (90008ad4 <HAL_JPEG_Init+0x230>)
90008924:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008928:	4b6b      	ldr	r3, [pc, #428]	@ (90008ad8 <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000892a:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000892e:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90008932:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90008936:	4969      	ldr	r1, [pc, #420]	@ (90008adc <HAL_JPEG_Init+0x238>)
90008938:	4b69      	ldr	r3, [pc, #420]	@ (90008ae0 <HAL_JPEG_Init+0x23c>)
9000893a:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000893e:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008942:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008946:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000894a:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
9000894e:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90008952:	4a64      	ldr	r2, [pc, #400]	@ (90008ae4 <HAL_JPEG_Init+0x240>)
90008954:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008958:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000895c:	4303      	orrs	r3, r0
  *address = value;
9000895e:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008962:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90008966:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008968:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000896c:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000896e:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008972:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90008976:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008978:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000897c:	ea43 030c 	orr.w	r3, r3, ip
90008980:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008984:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008988:	d1eb      	bne.n	90008962 <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
9000898a:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000898e:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90008992:	4955      	ldr	r1, [pc, #340]	@ (90008ae8 <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008994:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90008996:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90008998:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000899c:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
900089a0:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900089a4:	400b      	ands	r3, r1
  *address = value;
900089a6:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900089aa:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
900089ae:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
900089b2:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900089b6:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
900089ba:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900089be:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
900089c0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
900089c4:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
900089c8:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
900089cc:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900089ce:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900089d0:	4b46      	ldr	r3, [pc, #280]	@ (90008aec <HAL_JPEG_Init+0x248>)
  *address = value;
900089d2:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900089d6:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900089da:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
900089de:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
900089e2:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
900089e6:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
900089ea:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
900089ec:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
900089f0:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
900089f4:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
900089f8:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900089fa:	493d      	ldr	r1, [pc, #244]	@ (90008af0 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900089fc:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900089fe:	4b3d      	ldr	r3, [pc, #244]	@ (90008af4 <HAL_JPEG_Init+0x250>)
  *address = value;
90008a00:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008a04:	4a3c      	ldr	r2, [pc, #240]	@ (90008af8 <HAL_JPEG_Init+0x254>)
90008a06:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90008a0a:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008a0e:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90008a12:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90008a16:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008a1a:	4a38      	ldr	r2, [pc, #224]	@ (90008afc <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90008a1c:	b29b      	uxth	r3, r3
90008a1e:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008a22:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008a26:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008a2a:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90008a2e:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008a30:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008a34:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90008a36:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008a3a:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90008a3e:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008a40:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90008a44:	ea43 030c 	orr.w	r3, r3, ip
90008a48:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008a4c:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008a50:	d1eb      	bne.n	90008a2a <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90008a52:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90008a56:	4923      	ldr	r1, [pc, #140]	@ (90008ae4 <HAL_JPEG_Init+0x240>)
90008a58:	4628      	mov	r0, r5
90008a5a:	f7ff fd3b 	bl	900084d4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008a5e:	b118      	cbz	r0, 90008a68 <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008a60:	2301      	movs	r3, #1
    return HAL_ERROR;
90008a62:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008a64:	652b      	str	r3, [r5, #80]	@ 0x50
}
90008a66:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90008a68:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90008a6c:	4923      	ldr	r1, [pc, #140]	@ (90008afc <HAL_JPEG_Init+0x258>)
90008a6e:	4628      	mov	r0, r5
90008a70:	f7ff fd30 	bl	900084d4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008a74:	2800      	cmp	r0, #0
90008a76:	d1f3      	bne.n	90008a60 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90008a78:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90008a7c:	4920      	ldr	r1, [pc, #128]	@ (90008b00 <HAL_JPEG_Init+0x25c>)
90008a7e:	4628      	mov	r0, r5
90008a80:	f7ff fc7e 	bl	90008380 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90008a84:	2800      	cmp	r0, #0
90008a86:	d1eb      	bne.n	90008a60 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90008a88:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90008a8c:	491d      	ldr	r1, [pc, #116]	@ (90008b04 <HAL_JPEG_Init+0x260>)
90008a8e:	4628      	mov	r0, r5
90008a90:	f7ff fc76 	bl	90008380 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90008a94:	2800      	cmp	r0, #0
90008a96:	d1e3      	bne.n	90008a60 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008a98:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90008a9a:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008a9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90008aa0:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90008aa2:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90008aa4:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90008aa6:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90008aaa:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90008aac:	6568      	str	r0, [r5, #84]	@ 0x54
}
90008aae:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90008ab0:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90008ab4:	f7fb fb34 	bl	90004120 <HAL_JPEG_MspInit>
90008ab8:	e700      	b.n	900088bc <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90008aba:	2001      	movs	r0, #1
}
90008abc:	4770      	bx	lr
90008abe:	bf00      	nop
90008ac0:	9002d160 	.word	0x9002d160
90008ac4:	9002d120 	.word	0x9002d120
90008ac8:	01050100 	.word	0x01050100
90008acc:	0b0a0908 	.word	0x0b0a0908
90008ad0:	07060504 	.word	0x07060504
90008ad4:	03020100 	.word	0x03020100
90008ad8:	7d010000 	.word	0x7d010000
90008adc:	04040505 	.word	0x04040505
90008ae0:	03040203 	.word	0x03040203
90008ae4:	9002d294 	.word	0x9002d294
90008ae8:	ffff0000 	.word	0xffff0000
90008aec:	09080706 	.word	0x09080706
90008af0:	01000404 	.word	0x01000404
90008af4:	04040201 	.word	0x04040201
90008af8:	05070403 	.word	0x05070403
90008afc:	9002d1e0 	.word	0x9002d1e0
90008b00:	9002d364 	.word	0x9002d364
90008b04:	9002d348 	.word	0x9002d348

90008b08 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008b08:	2b00      	cmp	r3, #0
90008b0a:	bf18      	it	ne
90008b0c:	2900      	cmpne	r1, #0
90008b0e:	d036      	beq.n	90008b7e <HAL_JPEG_Decode_DMA+0x76>
{
90008b10:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008b12:	fab0 f580 	clz	r5, r0
90008b16:	4604      	mov	r4, r0
90008b18:	096d      	lsrs	r5, r5, #5
90008b1a:	b370      	cbz	r0, 90008b7a <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90008b1c:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90008b20:	f1bc 0f01 	cmp.w	ip, #1
90008b24:	d022      	beq.n	90008b6c <HAL_JPEG_Decode_DMA+0x64>
90008b26:	f04f 0c01 	mov.w	ip, #1
90008b2a:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90008b2e:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90008b32:	f1bc 0f01 	cmp.w	ip, #1
90008b36:	d117      	bne.n	90008b68 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90008b38:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90008b3a:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90008b3e:	9b04      	ldr	r3, [sp, #16]
90008b40:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90008b42:	2304      	movs	r3, #4
90008b44:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90008b48:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008b4a:	f023 030f 	bic.w	r3, r3, #15
90008b4e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90008b50:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008b52:	f043 030e 	orr.w	r3, r3, #14
90008b56:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90008b58:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90008b5a:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90008b5c:	f7ff fd44 	bl	900085e8 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90008b60:	f7ff fd80 	bl	90008664 <JPEG_DMA_StartProcess>
90008b64:	b920      	cbnz	r0, 90008b70 <HAL_JPEG_Decode_DMA+0x68>
}
90008b66:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90008b68:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90008b6c:	2002      	movs	r0, #2
}
90008b6e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008b70:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90008b72:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008b76:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008b7a:	2001      	movs	r0, #1
}
90008b7c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90008b7e:	2001      	movs	r0, #1
}
90008b80:	4770      	bx	lr
90008b82:	bf00      	nop

90008b84 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008b84:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008b86:	f003 030c 	and.w	r3, r3, #12
90008b8a:	2b0c      	cmp	r3, #12
90008b8c:	d01a      	beq.n	90008bc4 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008b8e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008b90:	f003 030c 	and.w	r3, r3, #12
90008b94:	2b08      	cmp	r3, #8
90008b96:	d001      	beq.n	90008b9c <HAL_JPEG_Pause+0x18>
}
90008b98:	2000      	movs	r0, #0
90008b9a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008b9c:	07ca      	lsls	r2, r1, #31
90008b9e:	d41f      	bmi.n	90008be0 <HAL_JPEG_Pause+0x5c>
90008ba0:	f04f 3cff 	mov.w	ip, #4294967295
90008ba4:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008ba8:	078b      	lsls	r3, r1, #30
90008baa:	d504      	bpl.n	90008bb6 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008bac:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008bae:	4694      	mov	ip, r2
90008bb0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008bb4:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008bb6:	6802      	ldr	r2, [r0, #0]
}
90008bb8:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008bba:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008bbc:	ea03 030c 	and.w	r3, r3, ip
90008bc0:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008bc2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008bc4:	07cb      	lsls	r3, r1, #31
90008bc6:	d503      	bpl.n	90008bd0 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008bc8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008bca:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008bce:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008bd0:	0789      	lsls	r1, r1, #30
90008bd2:	d5e1      	bpl.n	90008b98 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008bd4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008bd6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008bda:	6543      	str	r3, [r0, #84]	@ 0x54
}
90008bdc:	2000      	movs	r0, #0
90008bde:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008be0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008be2:	f06f 0c06 	mvn.w	ip, #6
90008be6:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90008bea:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008bee:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008bf0:	e7da      	b.n	90008ba8 <HAL_JPEG_Pause+0x24>
90008bf2:	bf00      	nop

90008bf4 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90008bf4:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90008bf6:	6282      	str	r2, [r0, #40]	@ 0x28
}
90008bf8:	4770      	bx	lr
90008bfa:	bf00      	nop

90008bfc <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90008bfc:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90008bfe:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90008c00:	4770      	bx	lr
90008c02:	bf00      	nop

90008c04 <HAL_JPEG_Abort>:
{
90008c04:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90008c06:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90008c08:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008c0a:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90008c0c:	4a32      	ldr	r2, [pc, #200]	@ (90008cd8 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008c0e:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008c12:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008c14:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008c16:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008c18:	d043      	beq.n	90008ca2 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008c1a:	6822      	ldr	r2, [r4, #0]
90008c1c:	6813      	ldr	r3, [r2, #0]
90008c1e:	f023 0301 	bic.w	r3, r3, #1
90008c22:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90008c24:	f7fd fd3c 	bl	900066a0 <HAL_GetTick>
90008c28:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008c2a:	e005      	b.n	90008c38 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90008c2c:	f7fd fd38 	bl	900066a0 <HAL_GetTick>
90008c30:	1b40      	subs	r0, r0, r5
90008c32:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90008c36:	d82b      	bhi.n	90008c90 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008c38:	6823      	ldr	r3, [r4, #0]
90008c3a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008c3c:	0612      	lsls	r2, r2, #24
90008c3e:	d4f5      	bmi.n	90008c2c <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008c40:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90008c42:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008c44:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008c48:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008c4a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008c4c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008c50:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008c52:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008c54:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c58:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008c5a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008c5c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008c60:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90008c62:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90008c64:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90008c66:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008c68:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90008c6c:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90008c6e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90008c70:	b138      	cbz	r0, 90008c82 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008c72:	2306      	movs	r3, #6
    return HAL_ERROR;
90008c74:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008c76:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008c7a:	2300      	movs	r3, #0
90008c7c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008c80:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90008c82:	2301      	movs	r3, #1
90008c84:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90008c88:	2300      	movs	r3, #0
90008c8a:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008c8e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008c90:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008c92:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008c94:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008c96:	f042 0208 	orr.w	r2, r2, #8
90008c9a:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008c9c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90008ca0:	e7ce      	b.n	90008c40 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90008ca2:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90008ca4:	f001 f986 	bl	90009fb4 <HAL_MDMA_Abort>
90008ca8:	b118      	cbz	r0, 90008cb2 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008caa:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90008cac:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008cae:	2b40      	cmp	r3, #64	@ 0x40
90008cb0:	d00d      	beq.n	90008cce <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90008cb2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008cb4:	f001 f97e 	bl	90009fb4 <HAL_MDMA_Abort>
90008cb8:	2800      	cmp	r0, #0
90008cba:	d0ae      	beq.n	90008c1a <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008cbc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90008cbe:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008cc0:	2b40      	cmp	r3, #64	@ 0x40
90008cc2:	d1aa      	bne.n	90008c1a <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008cc4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008cc6:	f043 0304 	orr.w	r3, r3, #4
90008cca:	6523      	str	r3, [r4, #80]	@ 0x50
90008ccc:	e7a5      	b.n	90008c1a <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008cce:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008cd0:	f043 0304 	orr.w	r3, r3, #4
90008cd4:	6523      	str	r3, [r4, #80]	@ 0x50
90008cd6:	e7ec      	b.n	90008cb2 <HAL_JPEG_Abort+0xae>
90008cd8:	ffff7ff0 	.word	0xffff7ff0

90008cdc <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90008cdc:	4770      	bx	lr
90008cde:	bf00      	nop

90008ce0 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008ce0:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90008ce2:	2101      	movs	r1, #1
{
90008ce4:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008ce6:	6803      	ldr	r3, [r0, #0]
90008ce8:	681a      	ldr	r2, [r3, #0]
90008cea:	f022 0201 	bic.w	r2, r2, #1
90008cee:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008cf0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008cf2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008cf6:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90008cf8:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008cfc:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90008cfe:	f043 0304 	orr.w	r3, r3, #4
90008d02:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90008d04:	f7f9 fa04 	bl	90002110 <HAL_JPEG_ErrorCallback>
}
90008d08:	bd08      	pop	{r3, pc}
90008d0a:	bf00      	nop

90008d0c <JPEG_MDMAInCpltCallback>:
{
90008d0c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008d0e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90008d10:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90008d12:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008d16:	6822      	ldr	r2, [r4, #0]
90008d18:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008d1a:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90008d1e:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90008d20:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008d22:	400b      	ands	r3, r1
90008d24:	2b0c      	cmp	r3, #12
90008d26:	d001      	beq.n	90008d2c <JPEG_MDMAInCpltCallback+0x20>
}
90008d28:	b003      	add	sp, #12
90008d2a:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008d2c:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90008d2e:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008d30:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008d32:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008d34:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008d36:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008d3a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008d3c:	1a9b      	subs	r3, r3, r2
90008d3e:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90008d40:	6a21      	ldr	r1, [r4, #32]
90008d42:	f7f9 f919 	bl	90001f78 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90008d46:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008d48:	42ab      	cmp	r3, r5
90008d4a:	d311      	bcc.n	90008d70 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90008d4c:	b305      	cbz	r5, 90008d90 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008d4e:	fbb3 f2f5 	udiv	r2, r3, r5
90008d52:	fb05 3212 	mls	r2, r5, r2, r3
90008d56:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90008d58:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008d5a:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90008d5c:	04d1      	lsls	r1, r2, #19
90008d5e:	d400      	bmi.n	90008d62 <JPEG_MDMAInCpltCallback+0x56>
90008d60:	b963      	cbnz	r3, 90008d7c <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008d62:	6822      	ldr	r2, [r4, #0]
90008d64:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008d66:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90008d6a:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008d6c:	b003      	add	sp, #12
90008d6e:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90008d70:	b1cb      	cbz	r3, 90008da6 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90008d72:	0798      	lsls	r0, r3, #30
90008d74:	d119      	bne.n	90008daa <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90008d76:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90008d78:	04d2      	lsls	r2, r2, #19
90008d7a:	d4f2      	bmi.n	90008d62 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008d7c:	6822      	ldr	r2, [r4, #0]
90008d7e:	2501      	movs	r5, #1
90008d80:	69a1      	ldr	r1, [r4, #24]
90008d82:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008d84:	3240      	adds	r2, #64	@ 0x40
90008d86:	9500      	str	r5, [sp, #0]
90008d88:	f001 f8a8 	bl	90009edc <HAL_MDMA_Start_IT>
90008d8c:	2800      	cmp	r0, #0
90008d8e:	d0e8      	beq.n	90008d62 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008d90:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90008d92:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90008d94:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008d96:	f043 0304 	orr.w	r3, r3, #4
90008d9a:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90008d9c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90008da0:	f7f9 f9b6 	bl	90002110 <HAL_JPEG_ErrorCallback>
        return;
90008da4:	e7c0      	b.n	90008d28 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90008da6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008da8:	e7db      	b.n	90008d62 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
90008daa:	f023 0303 	bic.w	r3, r3, #3
90008dae:	3304      	adds	r3, #4
90008db0:	e7d2      	b.n	90008d58 <JPEG_MDMAInCpltCallback+0x4c>
90008db2:	bf00      	nop

90008db4 <JPEG_DMA_PollResidualData>:
{
90008db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90008db6:	6802      	ldr	r2, [r0, #0]
90008db8:	2610      	movs	r6, #16
{
90008dba:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90008dbc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90008dbe:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90008dc2:	d11d      	bne.n	90008e00 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90008dc4:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90008dc6:	06df      	lsls	r7, r3, #27
90008dc8:	d51a      	bpl.n	90008e00 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90008dca:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90008dcc:	69e7      	ldr	r7, [r4, #28]
90008dce:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90008dd0:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90008dd2:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90008dd4:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90008dd6:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90008dd8:	6a67      	ldr	r7, [r4, #36]	@ 0x24
90008dda:	69e2      	ldr	r2, [r4, #28]
90008ddc:	443a      	add	r2, r7
90008dde:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90008de0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008de2:	69e2      	ldr	r2, [r4, #28]
90008de4:	4402      	add	r2, r0
90008de6:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90008de8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90008dea:	69e2      	ldr	r2, [r4, #28]
90008dec:	440a      	add	r2, r1
90008dee:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90008df0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90008df2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90008df4:	3304      	adds	r3, #4
90008df6:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90008df8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008dfa:	4293      	cmp	r3, r2
90008dfc:	d021      	beq.n	90008e42 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90008dfe:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90008e00:	3e01      	subs	r6, #1
90008e02:	d1db      	bne.n	90008dbc <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90008e04:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90008e06:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90008e08:	06d8      	lsls	r0, r3, #27
90008e0a:	d501      	bpl.n	90008e10 <JPEG_DMA_PollResidualData+0x5c>
90008e0c:	048b      	lsls	r3, r1, #18
90008e0e:	d417      	bmi.n	90008e40 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008e10:	6813      	ldr	r3, [r2, #0]
90008e12:	f023 0301 	bic.w	r3, r3, #1
90008e16:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90008e18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008e1a:	b9eb      	cbnz	r3, 90008e58 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90008e1c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90008e1e:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90008e20:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90008e22:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008e24:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90008e28:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90008e2c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90008e30:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008e32:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90008e34:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90008e36:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008e3a:	d00a      	beq.n	90008e52 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90008e3c:	f7ff ff4e 	bl	90008cdc <HAL_JPEG_EncodeCpltCallback>
}
90008e40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90008e42:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90008e44:	4620      	mov	r0, r4
90008e46:	69e1      	ldr	r1, [r4, #28]
90008e48:	f7f9 f8b6 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90008e4c:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90008e4e:	6265      	str	r5, [r4, #36]	@ 0x24
90008e50:	e7d6      	b.n	90008e00 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90008e52:	f7f9 f95f 	bl	90002114 <HAL_JPEG_DecodeCpltCallback>
}
90008e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90008e58:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90008e5a:	4620      	mov	r0, r4
90008e5c:	69e1      	ldr	r1, [r4, #28]
90008e5e:	f7f9 f8ab 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90008e62:	2300      	movs	r3, #0
90008e64:	6263      	str	r3, [r4, #36]	@ 0x24
90008e66:	e7d9      	b.n	90008e1c <JPEG_DMA_PollResidualData+0x68>

90008e68 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90008e68:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e6a:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90008e6e:	d06f      	beq.n	90008f50 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008e70:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e72:	f003 030c 	and.w	r3, r3, #12
90008e76:	2b0c      	cmp	r3, #12
{
90008e78:	b530      	push	{r4, r5, lr}
90008e7a:	4604      	mov	r4, r0
90008e7c:	b083      	sub	sp, #12
90008e7e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008e80:	d007      	beq.n	90008e92 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008e82:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e84:	f003 030c 	and.w	r3, r3, #12
90008e88:	2b08      	cmp	r3, #8
90008e8a:	d035      	beq.n	90008ef8 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90008e8c:	2000      	movs	r0, #0
}
90008e8e:	b003      	add	sp, #12
90008e90:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008e92:	07c8      	lsls	r0, r1, #31
90008e94:	d415      	bmi.n	90008ec2 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008e96:	07a9      	lsls	r1, r5, #30
90008e98:	d5f8      	bpl.n	90008e8c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90008e9a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008e9c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90008ea0:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90008ea2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008ea4:	041a      	lsls	r2, r3, #16
90008ea6:	d44f      	bmi.n	90008f48 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008ea8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90008eaa:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90008eac:	2a00      	cmp	r2, #0
90008eae:	d13a      	bne.n	90008f26 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008eb0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90008eb2:	2206      	movs	r2, #6
    return HAL_ERROR;
90008eb4:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008eb6:	f043 0304 	orr.w	r3, r3, #4
90008eba:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90008ebc:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90008ec0:	e7e5      	b.n	90008e8e <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90008ec2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008ec4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90008ec6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008eca:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90008ecc:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
90008ece:	2a00      	cmp	r2, #0
90008ed0:	d0ee      	beq.n	90008eb0 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90008ed2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008ed4:	fbb3 f1f2 	udiv	r1, r3, r2
90008ed8:	fb02 3211 	mls	r2, r2, r1, r3
90008edc:	1a9b      	subs	r3, r3, r2
90008ede:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90008ee0:	2b00      	cmp	r3, #0
90008ee2:	d0d8      	beq.n	90008e96 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008ee4:	6822      	ldr	r2, [r4, #0]
90008ee6:	2101      	movs	r1, #1
90008ee8:	3240      	adds	r2, #64	@ 0x40
90008eea:	9100      	str	r1, [sp, #0]
90008eec:	69a1      	ldr	r1, [r4, #24]
90008eee:	f000 fff5 	bl	90009edc <HAL_MDMA_Start_IT>
90008ef2:	2800      	cmp	r0, #0
90008ef4:	d0cf      	beq.n	90008e96 <HAL_JPEG_Resume+0x2e>
90008ef6:	e7db      	b.n	90008eb0 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008ef8:	f011 0101 	ands.w	r1, r1, #1
90008efc:	d011      	beq.n	90008f22 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90008efe:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f00:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008f02:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90008f04:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90008f08:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008f0a:	07ab      	lsls	r3, r5, #30
90008f0c:	d504      	bpl.n	90008f18 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90008f0e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90008f10:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90008f12:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90008f16:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90008f18:	6822      	ldr	r2, [r4, #0]
90008f1a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008f1c:	430b      	orrs	r3, r1
90008f1e:	6313      	str	r3, [r2, #48]	@ 0x30
90008f20:	e7b4      	b.n	90008e8c <HAL_JPEG_Resume+0x24>
90008f22:	2228      	movs	r2, #40	@ 0x28
90008f24:	e7f1      	b.n	90008f0a <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90008f26:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90008f28:	fbb3 f1f2 	udiv	r1, r3, r2
90008f2c:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008f30:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90008f32:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008f34:	2201      	movs	r2, #1
90008f36:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90008f38:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008f3a:	9200      	str	r2, [sp, #0]
90008f3c:	69e2      	ldr	r2, [r4, #28]
90008f3e:	f000 ffcd 	bl	90009edc <HAL_MDMA_Start_IT>
90008f42:	2800      	cmp	r0, #0
90008f44:	d0a2      	beq.n	90008e8c <HAL_JPEG_Resume+0x24>
90008f46:	e7b3      	b.n	90008eb0 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90008f48:	4620      	mov	r0, r4
90008f4a:	f7ff ff33 	bl	90008db4 <JPEG_DMA_PollResidualData>
90008f4e:	e79d      	b.n	90008e8c <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
90008f50:	2001      	movs	r0, #1
}
90008f52:	4770      	bx	lr

90008f54 <JPEG_MDMAOutCpltCallback>:
{
90008f54:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008f56:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90008f58:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90008f5a:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f5e:	6823      	ldr	r3, [r4, #0]
90008f60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f62:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008f66:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90008f68:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90008f6a:	400a      	ands	r2, r1
90008f6c:	2a0c      	cmp	r2, #12
90008f6e:	d001      	beq.n	90008f74 <JPEG_MDMAOutCpltCallback+0x20>
}
90008f70:	b003      	add	sp, #12
90008f72:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90008f74:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008f76:	0692      	lsls	r2, r2, #26
90008f78:	d505      	bpl.n	90008f86 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008f7a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f7c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008f80:	631a      	str	r2, [r3, #48]	@ 0x30
}
90008f82:	b003      	add	sp, #12
90008f84:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008f86:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90008f88:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008f8a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90008f8c:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90008f8e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008f90:	f3c2 0210 	ubfx	r2, r2, #0, #17
90008f94:	1a9b      	subs	r3, r3, r2
90008f96:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90008f98:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90008f9a:	f7f9 f80d 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90008f9e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008fa0:	049b      	lsls	r3, r3, #18
90008fa2:	d501      	bpl.n	90008fa8 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008fa4:	6823      	ldr	r3, [r4, #0]
90008fa6:	e7e8      	b.n	90008f7a <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008fa8:	6821      	ldr	r1, [r4, #0]
90008faa:	2501      	movs	r5, #1
90008fac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90008fae:	69e2      	ldr	r2, [r4, #28]
90008fb0:	3144      	adds	r1, #68	@ 0x44
90008fb2:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90008fb4:	9500      	str	r5, [sp, #0]
90008fb6:	f000 ff91 	bl	90009edc <HAL_MDMA_Start_IT>
90008fba:	2800      	cmp	r0, #0
90008fbc:	d0f2      	beq.n	90008fa4 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fbe:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fc0:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90008fc2:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fc4:	f043 0304 	orr.w	r3, r3, #4
90008fc8:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fca:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90008fce:	f7f9 f89f 	bl	90002110 <HAL_JPEG_ErrorCallback>
          return;
90008fd2:	e7cd      	b.n	90008f70 <JPEG_MDMAOutCpltCallback+0x1c>

90008fd4 <JPEG_MDMAOutAbortCallback>:
{
90008fd4:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008fd6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90008fd8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008fda:	041a      	lsls	r2, r3, #16
90008fdc:	d400      	bmi.n	90008fe0 <JPEG_MDMAOutAbortCallback+0xc>
}
90008fde:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008fe0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90008fe2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90008fe4:	681b      	ldr	r3, [r3, #0]
90008fe6:	695b      	ldr	r3, [r3, #20]
90008fe8:	f3c3 0310 	ubfx	r3, r3, #0, #17
90008fec:	1ad3      	subs	r3, r2, r3
90008fee:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90008ff0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008ff2:	429a      	cmp	r2, r3
90008ff4:	d025      	beq.n	90009042 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90008ff6:	6822      	ldr	r2, [r4, #0]
90008ff8:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90008ffa:	f015 0510 	ands.w	r5, r5, #16
90008ffe:	d118      	bne.n	90009032 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009000:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009002:	bb4b      	cbnz	r3, 90009058 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009004:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009006:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009008:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000900a:	f023 0301 	bic.w	r3, r3, #1
9000900e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009010:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009012:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009014:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009018:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000901c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009020:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009022:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009024:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009026:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000902a:	d012      	beq.n	90009052 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000902c:	f7ff fe56 	bl	90008cdc <HAL_JPEG_EncodeCpltCallback>
}
90009030:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009032:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009034:	049b      	lsls	r3, r3, #18
90009036:	d4d2      	bmi.n	90008fde <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009038:	4620      	mov	r0, r4
}
9000903a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000903e:	f7ff beb9 	b.w	90008db4 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009042:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009044:	4620      	mov	r0, r4
90009046:	69e1      	ldr	r1, [r4, #28]
90009048:	f7f8 ffb6 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000904c:	2300      	movs	r3, #0
9000904e:	6263      	str	r3, [r4, #36]	@ 0x24
90009050:	e7d1      	b.n	90008ff6 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009052:	f7f9 f85f 	bl	90002114 <HAL_JPEG_DecodeCpltCallback>
}
90009056:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009058:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000905a:	4620      	mov	r0, r4
9000905c:	69e1      	ldr	r1, [r4, #28]
9000905e:	f7f8 ffab 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009062:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009064:	6265      	str	r5, [r4, #36]	@ 0x24
90009066:	e7cd      	b.n	90009004 <JPEG_MDMAOutAbortCallback+0x30>

90009068 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009068:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000906a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000906c:	f002 0203 	and.w	r2, r2, #3
90009070:	2a02      	cmp	r2, #2
{
90009072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009076:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009078:	d01e      	beq.n	900090b8 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000907a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000907c:	04d7      	lsls	r7, r2, #19
9000907e:	d407      	bmi.n	90009090 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009080:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009082:	0796      	lsls	r6, r2, #30
90009084:	f100 811b 	bmi.w	900092be <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009088:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000908a:	0750      	lsls	r0, r2, #29
9000908c:	f100 81cc 	bmi.w	90009428 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009090:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009092:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009096:	d107      	bne.n	900090a8 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009098:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000909a:	f016 0608 	ands.w	r6, r6, #8
9000909e:	d14a      	bne.n	90009136 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900090a0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900090a2:	06d2      	lsls	r2, r2, #27
900090a4:	f100 81fe 	bmi.w	900094a4 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900090a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900090aa:	f002 0238 	and.w	r2, r2, #56	@ 0x38
900090ae:	2a20      	cmp	r2, #32
900090b0:	d019      	beq.n	900090e6 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
900090b2:	2000      	movs	r0, #0
}
900090b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
900090b8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900090ba:	0652      	lsls	r2, r2, #25
900090bc:	d5dd      	bpl.n	9000907a <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
900090be:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
900090c0:	4629      	mov	r1, r5
900090c2:	f7ff fb17 	bl	900086f4 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
900090c6:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900090c8:	4629      	mov	r1, r5
900090ca:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
900090cc:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900090ce:	f7f8 ff25 	bl	90001f1c <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
900090d2:	6823      	ldr	r3, [r4, #0]
900090d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900090d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
900090da:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
900090dc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900090de:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900090e2:	639a      	str	r2, [r3, #56]	@ 0x38
900090e4:	e7c9      	b.n	9000907a <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090e6:	681a      	ldr	r2, [r3, #0]
900090e8:	f022 0201 	bic.w	r2, r2, #1
900090ec:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900090ee:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900090f0:	f002 020c 	and.w	r2, r2, #12
900090f4:	2a08      	cmp	r2, #8
900090f6:	f000 8201 	beq.w	900094fc <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900090fa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900090fc:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009100:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009102:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009104:	2b00      	cmp	r3, #0
90009106:	f040 81fe 	bne.w	90009506 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000910a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000910c:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000910e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009110:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009112:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009116:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000911a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000911e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009120:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009122:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009124:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009128:	f000 81e5 	beq.w	900094f6 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000912c:	f7ff fdd6 	bl	90008cdc <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009130:	2001      	movs	r0, #1
}
90009132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009136:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009138:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000913a:	3220      	adds	r2, #32
9000913c:	4296      	cmp	r6, r2
9000913e:	f0c0 8200 	bcc.w	90009542 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
90009142:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009144:	69e1      	ldr	r1, [r4, #28]
90009146:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009148:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000914a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000914c:	69e2      	ldr	r2, [r4, #28]
9000914e:	440a      	add	r2, r1
90009150:	0a19      	lsrs	r1, r3, #8
90009152:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009154:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009156:	69e2      	ldr	r2, [r4, #28]
90009158:	440a      	add	r2, r1
9000915a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000915c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000915e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009160:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009162:	69e2      	ldr	r2, [r4, #28]
90009164:	440a      	add	r2, r1
90009166:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009168:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000916a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000916c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000916e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009170:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009172:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009174:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009176:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009178:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000917a:	69e2      	ldr	r2, [r4, #28]
9000917c:	440a      	add	r2, r1
9000917e:	0a19      	lsrs	r1, r3, #8
90009180:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009182:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009184:	69e2      	ldr	r2, [r4, #28]
90009186:	440a      	add	r2, r1
90009188:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000918a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000918c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000918e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009190:	69e2      	ldr	r2, [r4, #28]
90009192:	440a      	add	r2, r1
90009194:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009196:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009198:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000919a:	3304      	adds	r3, #4
9000919c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000919e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900091a0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091a2:	69e1      	ldr	r1, [r4, #28]
900091a4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900091a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091a8:	69e2      	ldr	r2, [r4, #28]
900091aa:	440a      	add	r2, r1
900091ac:	0a19      	lsrs	r1, r3, #8
900091ae:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900091b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091b2:	69e2      	ldr	r2, [r4, #28]
900091b4:	440a      	add	r2, r1
900091b6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900091b8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900091ba:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900091bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091be:	69e2      	ldr	r2, [r4, #28]
900091c0:	440a      	add	r2, r1
900091c2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900091c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900091c6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900091c8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900091ca:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900091cc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900091ce:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900091d0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091d2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900091d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091d6:	69e2      	ldr	r2, [r4, #28]
900091d8:	440a      	add	r2, r1
900091da:	0a19      	lsrs	r1, r3, #8
900091dc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900091de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091e0:	69e2      	ldr	r2, [r4, #28]
900091e2:	440a      	add	r2, r1
900091e4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900091e6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900091e8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900091ea:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900091ec:	69e2      	ldr	r2, [r4, #28]
900091ee:	440a      	add	r2, r1
900091f0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900091f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900091f4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900091f6:	3304      	adds	r3, #4
900091f8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900091fa:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900091fc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091fe:	69e1      	ldr	r1, [r4, #28]
90009200:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009202:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009204:	69e2      	ldr	r2, [r4, #28]
90009206:	440a      	add	r2, r1
90009208:	0a19      	lsrs	r1, r3, #8
9000920a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000920c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000920e:	69e2      	ldr	r2, [r4, #28]
90009210:	440a      	add	r2, r1
90009212:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009214:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009216:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009218:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000921a:	69e2      	ldr	r2, [r4, #28]
9000921c:	440a      	add	r2, r1
9000921e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009220:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009222:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009224:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009226:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009228:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000922a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000922c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000922e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009230:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009232:	69e2      	ldr	r2, [r4, #28]
90009234:	440a      	add	r2, r1
90009236:	0a19      	lsrs	r1, r3, #8
90009238:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000923a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000923c:	69e2      	ldr	r2, [r4, #28]
9000923e:	440a      	add	r2, r1
90009240:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009242:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009244:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009246:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009248:	69e2      	ldr	r2, [r4, #28]
9000924a:	440a      	add	r2, r1
9000924c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000924e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009250:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009252:	3304      	adds	r3, #4
90009254:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009256:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009258:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000925a:	69e1      	ldr	r1, [r4, #28]
9000925c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000925e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009260:	69e2      	ldr	r2, [r4, #28]
90009262:	440a      	add	r2, r1
90009264:	0a19      	lsrs	r1, r3, #8
90009266:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009268:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000926a:	69e2      	ldr	r2, [r4, #28]
9000926c:	440a      	add	r2, r1
9000926e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009270:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009272:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009274:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009276:	69e2      	ldr	r2, [r4, #28]
90009278:	440a      	add	r2, r1
9000927a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000927c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000927e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009280:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009282:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009284:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009286:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009288:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000928a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000928c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000928e:	69e2      	ldr	r2, [r4, #28]
90009290:	440a      	add	r2, r1
90009292:	0a19      	lsrs	r1, r3, #8
90009294:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009296:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009298:	69e2      	ldr	r2, [r4, #28]
9000929a:	440a      	add	r2, r1
9000929c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000929e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900092a0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900092a2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900092a4:	69e2      	ldr	r2, [r4, #28]
900092a6:	440a      	add	r2, r1
900092a8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900092aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092ac:	3304      	adds	r3, #4
900092ae:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900092b0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092b2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900092b4:	429a      	cmp	r2, r3
900092b6:	f000 82d8 	beq.w	9000986a <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900092ba:	6823      	ldr	r3, [r4, #0]
900092bc:	e6f4      	b.n	900090a8 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900092be:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900092c0:	2a00      	cmp	r2, #0
900092c2:	f000 8128 	beq.w	90009516 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900092c6:	6a21      	ldr	r1, [r4, #32]
900092c8:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900092ca:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900092cc:	f240 81b9 	bls.w	90009642 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900092d0:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900092d2:	6d61      	ldr	r1, [r4, #84]	@ 0x54
900092d4:	04cd      	lsls	r5, r1, #19
900092d6:	f53f aedb 	bmi.w	90009090 <JPEG_Process+0x28>
900092da:	2a00      	cmp	r2, #0
900092dc:	f43f aed8 	beq.w	90009090 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
900092e0:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
900092e2:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900092e6:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
900092e8:	f200 824e 	bhi.w	90009788 <JPEG_Process+0x720>
      if (nb_words > 0UL)
900092ec:	2a03      	cmp	r2, #3
900092ee:	f240 82cc 	bls.w	9000988a <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
900092f2:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900092f4:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900092f6:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900092fa:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900092fc:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900092fe:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009300:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009304:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009306:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000930a:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000930e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009312:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009314:	6a22      	ldr	r2, [r4, #32]
90009316:	f102 0204 	add.w	r2, r2, #4
9000931a:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000931c:	f43f aeb8 	beq.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009320:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009322:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009324:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009328:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000932a:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000932c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000932e:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009332:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009334:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009338:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000933c:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009340:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009342:	6a22      	ldr	r2, [r4, #32]
90009344:	f102 0204 	add.w	r2, r2, #4
90009348:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000934a:	f43f aea1 	beq.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000934e:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009350:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009352:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009356:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009358:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000935a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000935c:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009360:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009362:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009366:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000936a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000936e:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009370:	6a22      	ldr	r2, [r4, #32]
90009372:	f102 0204 	add.w	r2, r2, #4
90009376:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009378:	f43f ae8a 	beq.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000937c:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000937e:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009380:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009384:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009386:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009388:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000938a:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000938e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009390:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009394:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009398:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000939c:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000939e:	6a22      	ldr	r2, [r4, #32]
900093a0:	f102 0204 	add.w	r2, r2, #4
900093a4:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900093a6:	f43f ae73 	beq.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900093aa:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900093ac:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093ae:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900093b2:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093b4:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093b6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093b8:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900093bc:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093be:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900093c2:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093c6:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900093ca:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900093cc:	6a22      	ldr	r2, [r4, #32]
900093ce:	f102 0204 	add.w	r2, r2, #4
900093d2:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900093d4:	f43f ae5c 	beq.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900093d8:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900093da:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093dc:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900093e0:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093e2:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093e4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093e6:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900093ea:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900093ec:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900093f0:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900093f4:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900093f8:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900093fa:	6a22      	ldr	r2, [r4, #32]
900093fc:	f102 0204 	add.w	r2, r2, #4
90009400:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009402:	f47f ae45 	bne.w	90009090 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009406:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009408:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000940a:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000940c:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000940e:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009410:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009412:	7840      	ldrb	r0, [r0, #1]
90009414:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
90009418:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000941a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000941e:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009420:	6a22      	ldr	r2, [r4, #32]
90009422:	3204      	adds	r2, #4
90009424:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009426:	e633      	b.n	90009090 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009428:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000942a:	2a00      	cmp	r2, #0
9000942c:	d073      	beq.n	90009516 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000942e:	6a21      	ldr	r1, [r4, #32]
90009430:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009432:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009434:	f200 8182 	bhi.w	9000973c <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009438:	428a      	cmp	r2, r1
9000943a:	f040 8104 	bne.w	90009646 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000943e:	6a21      	ldr	r1, [r4, #32]
90009440:	4620      	mov	r0, r4
90009442:	f7f8 fd99 	bl	90001f78 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009446:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009448:	2a04      	cmp	r2, #4
9000944a:	d902      	bls.n	90009452 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000944c:	f022 0203 	bic.w	r2, r2, #3
90009450:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009452:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009454:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009456:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009458:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000945a:	04c9      	lsls	r1, r1, #19
9000945c:	f53f ae18 	bmi.w	90009090 <JPEG_Process+0x28>
90009460:	2a00      	cmp	r2, #0
90009462:	f43f ae15 	beq.w	90009090 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009466:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009468:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000946a:	f040 8177 	bne.w	9000975c <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000946e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009470:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009472:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009474:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
90009476:	f105 0501 	add.w	r5, r5, #1
9000947a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000947c:	d010      	beq.n	900094a0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000947e:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009480:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009482:	5d45      	ldrb	r5, [r0, r5]
90009484:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
90009488:	6a25      	ldr	r5, [r4, #32]
9000948a:	f105 0501 	add.w	r5, r5, #1
9000948e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009490:	d106      	bne.n	900094a0 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009492:	6a22      	ldr	r2, [r4, #32]
90009494:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
90009496:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009498:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000949c:	3201      	adds	r2, #1
9000949e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
900094a0:	6419      	str	r1, [r3, #64]	@ 0x40
900094a2:	e5f5      	b.n	90009090 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
900094a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094a6:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
900094a8:	3204      	adds	r2, #4
900094aa:	4295      	cmp	r5, r2
900094ac:	f0c0 80cd 	bcc.w	9000964a <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
900094b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094b2:	69e1      	ldr	r1, [r4, #28]
900094b4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094b6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094ba:	69e2      	ldr	r2, [r4, #28]
900094bc:	440a      	add	r2, r1
900094be:	0a19      	lsrs	r1, r3, #8
900094c0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094c4:	69e2      	ldr	r2, [r4, #28]
900094c6:	440a      	add	r2, r1
900094c8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ca:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094cc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094d0:	69e2      	ldr	r2, [r4, #28]
900094d2:	440a      	add	r2, r1
900094d4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900094d8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
900094da:	3304      	adds	r3, #4
900094dc:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900094de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900094e0:	429a      	cmp	r2, r3
900094e2:	f47f aeea 	bne.w	900092ba <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900094e6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094e8:	4620      	mov	r0, r4
900094ea:	69e1      	ldr	r1, [r4, #28]
900094ec:	f7f8 fd64 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094f0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
900094f2:	6266      	str	r6, [r4, #36]	@ 0x24
900094f4:	e5d8      	b.n	900090a8 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900094f6:	f7f8 fe0d 	bl	90002114 <HAL_JPEG_DecodeCpltCallback>
900094fa:	e619      	b.n	90009130 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900094fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900094fe:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009502:	631a      	str	r2, [r3, #48]	@ 0x30
90009504:	e5f9      	b.n	900090fa <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009506:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009508:	4620      	mov	r0, r4
9000950a:	69e1      	ldr	r1, [r4, #28]
9000950c:	f7f8 fd54 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009510:	2300      	movs	r3, #0
90009512:	6263      	str	r3, [r4, #36]	@ 0x24
90009514:	e5f9      	b.n	9000910a <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009516:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009518:	f002 020c 	and.w	r2, r2, #12
9000951c:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000951e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009520:	f000 812d 	beq.w	9000977e <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009524:	f002 020c 	and.w	r2, r2, #12
90009528:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000952a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000952c:	f47f adb0 	bne.w	90009090 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009530:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009534:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009536:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009538:	f022 0206 	bic.w	r2, r2, #6
9000953c:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000953e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009540:	e5a6      	b.n	90009090 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009542:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009544:	4296      	cmp	r6, r2
90009546:	f67f adaf 	bls.w	900090a8 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000954a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000954c:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000954e:	0880      	lsrs	r0, r0, #2
90009550:	d020      	beq.n	90009594 <JPEG_Process+0x52c>
90009552:	4629      	mov	r1, r5
90009554:	e000      	b.n	90009558 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
90009556:	6823      	ldr	r3, [r4, #0]
90009558:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000955a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000955c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000955e:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009560:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009562:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009564:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009566:	69e2      	ldr	r2, [r4, #28]
90009568:	4432      	add	r2, r6
9000956a:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000956e:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009570:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009572:	69e2      	ldr	r2, [r4, #28]
90009574:	4432      	add	r2, r6
90009576:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000957a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000957e:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009580:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009582:	69e2      	ldr	r2, [r4, #28]
90009584:	4432      	add	r2, r6
90009586:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009588:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000958a:	f103 0304 	add.w	r3, r3, #4
9000958e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009590:	d1e1      	bne.n	90009556 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009592:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009594:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009596:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009598:	429e      	cmp	r6, r3
9000959a:	f000 816e 	beq.w	9000987a <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000959e:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900095a2:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
900095a4:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
900095a8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
900095aa:	d00e      	beq.n	900095ca <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900095ac:	f005 0303 	and.w	r3, r5, #3
900095b0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900095b2:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900095b4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
900095b6:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900095b8:	fa27 f303 	lsr.w	r3, r7, r3
900095bc:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
900095be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900095c0:	69e1      	ldr	r1, [r4, #28]
900095c2:	f103 0301 	add.w	r3, r3, #1
900095c6:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900095c8:	d1f0      	bne.n	900095ac <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
900095ca:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900095ce:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900095d0:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
900095d2:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900095d6:	f7f8 fcef 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900095da:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900095dc:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
900095de:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900095e0:	f63f ae6b 	bhi.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900095e4:	ea4f 02c6 	mov.w	r2, r6, lsl #3
900095e8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095ea:	69e0      	ldr	r0, [r4, #28]
900095ec:	fa27 f502 	lsr.w	r5, r7, r2
900095f0:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900095f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095f4:	f101 0101 	add.w	r1, r1, #1
900095f8:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900095fa:	f43f ae5e 	beq.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900095fe:	f102 0108 	add.w	r1, r2, #8
90009602:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009604:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009606:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009608:	fa27 f101 	lsr.w	r1, r7, r1
9000960c:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000960e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009610:	f101 0101 	add.w	r1, r1, #1
90009614:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009616:	f43f ae50 	beq.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000961a:	3210      	adds	r2, #16
9000961c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000961e:	69e0      	ldr	r0, [r4, #28]
90009620:	fa27 f202 	lsr.w	r2, r7, r2
90009624:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009626:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009628:	3201      	adds	r2, #1
9000962a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000962c:	2e00      	cmp	r6, #0
9000962e:	f47f ae44 	bne.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009632:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009634:	0e3f      	lsrs	r7, r7, #24
90009636:	69e2      	ldr	r2, [r4, #28]
90009638:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000963a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000963c:	3301      	adds	r3, #1
9000963e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009640:	e63b      	b.n	900092ba <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009642:	428a      	cmp	r2, r1
90009644:	d07c      	beq.n	90009740 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009646:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009648:	e522      	b.n	90009090 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000964a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000964c:	4295      	cmp	r5, r2
9000964e:	f67f ad2b 	bls.w	900090a8 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009652:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009654:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
90009656:	0880      	lsrs	r0, r0, #2
90009658:	d020      	beq.n	9000969c <JPEG_Process+0x634>
9000965a:	4631      	mov	r1, r6
9000965c:	e000      	b.n	90009660 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000965e:	6823      	ldr	r3, [r4, #0]
90009660:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009662:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009664:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009666:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009668:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000966a:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000966c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000966e:	69e2      	ldr	r2, [r4, #28]
90009670:	442a      	add	r2, r5
90009672:	ea4f 2513 	mov.w	r5, r3, lsr #8
90009676:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009678:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000967a:	69e2      	ldr	r2, [r4, #28]
9000967c:	442a      	add	r2, r5
9000967e:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009682:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009686:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009688:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000968a:	69e2      	ldr	r2, [r4, #28]
9000968c:	442a      	add	r2, r5
9000968e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009690:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009692:	f103 0304 	add.w	r3, r3, #4
90009696:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009698:	d1e1      	bne.n	9000965e <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000969a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000969c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000969e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900096a0:	429d      	cmp	r5, r3
900096a2:	f000 80ea 	beq.w	9000987a <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
900096a6:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900096aa:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
900096ac:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
900096b0:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
900096b2:	d00e      	beq.n	900096d2 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900096b4:	f006 0303 	and.w	r3, r6, #3
900096b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900096ba:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900096bc:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
900096be:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900096c0:	fa27 f303 	lsr.w	r3, r7, r3
900096c4:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
900096c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900096c8:	69e1      	ldr	r1, [r4, #28]
900096ca:	f103 0301 	add.w	r3, r3, #1
900096ce:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900096d0:	d1f0      	bne.n	900096b4 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
900096d2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900096d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900096d8:	4620      	mov	r0, r4
900096da:	f7f8 fc6d 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
900096de:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
900096e2:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900096e4:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
900096e6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900096e8:	f63f ade7 	bhi.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900096ec:	ea4f 02c3 	mov.w	r2, r3, lsl #3
900096f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900096f2:	69e0      	ldr	r0, [r4, #28]
900096f4:	fa27 f502 	lsr.w	r5, r7, r2
900096f8:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900096fa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900096fc:	f101 0101 	add.w	r1, r1, #1
90009700:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009702:	f43f adda 	beq.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009706:	f102 0108 	add.w	r1, r2, #8
9000970a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000970c:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000970e:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009710:	fa27 f101 	lsr.w	r1, r7, r1
90009714:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
90009716:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009718:	f101 0101 	add.w	r1, r1, #1
9000971c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000971e:	f43f adcc 	beq.w	900092ba <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009722:	3210      	adds	r2, #16
90009724:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009726:	69e0      	ldr	r0, [r4, #28]
90009728:	fa27 f202 	lsr.w	r2, r7, r2
9000972c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000972e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009730:	3201      	adds	r2, #1
90009732:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009734:	2b00      	cmp	r3, #0
90009736:	f43f af7c 	beq.w	90009632 <JPEG_Process+0x5ca>
9000973a:	e5be      	b.n	900092ba <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000973c:	1a52      	subs	r2, r2, r1
9000973e:	e68b      	b.n	90009458 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009740:	6a21      	ldr	r1, [r4, #32]
90009742:	4620      	mov	r0, r4
90009744:	f7f8 fc18 	bl	90001f78 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009748:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000974a:	2a04      	cmp	r2, #4
9000974c:	d902      	bls.n	90009754 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000974e:	f022 0203 	bic.w	r2, r2, #3
90009752:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009754:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009756:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009758:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000975a:	e5ba      	b.n	900092d2 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000975c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000975e:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009760:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009762:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009764:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009766:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009768:	7849      	ldrb	r1, [r1, #1]
9000976a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000976e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009770:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009774:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009776:	6a22      	ldr	r2, [r4, #32]
90009778:	3204      	adds	r2, #4
9000977a:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000977c:	e488      	b.n	90009090 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000977e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009782:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009784:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009786:	e483      	b.n	90009090 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
90009788:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000978a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000978c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000978e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009790:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009792:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009794:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009796:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000979a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000979c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097a0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
900097a2:	6a22      	ldr	r2, [r4, #32]
900097a4:	3204      	adds	r2, #4
900097a6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
900097a8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097aa:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097ac:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097ae:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097b0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097b2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900097b4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097b6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
900097ba:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097bc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097c0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
900097c2:	6a22      	ldr	r2, [r4, #32]
900097c4:	3204      	adds	r2, #4
900097c6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
900097c8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097ca:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097cc:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097ce:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097d0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097d2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900097d4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097d6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
900097da:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097dc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097e0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
900097e2:	6a22      	ldr	r2, [r4, #32]
900097e4:	3204      	adds	r2, #4
900097e6:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
900097e8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097ea:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097ec:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097ee:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097f0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097f2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900097f4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900097f6:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
900097fa:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900097fc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009800:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009802:	6a22      	ldr	r2, [r4, #32]
90009804:	3204      	adds	r2, #4
90009806:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009808:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000980a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000980c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000980e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009810:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009812:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009814:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009816:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000981a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000981c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009820:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009822:	6a22      	ldr	r2, [r4, #32]
90009824:	3204      	adds	r2, #4
90009826:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009828:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000982a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000982c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000982e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009830:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009832:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009834:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009836:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000983a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000983c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009840:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009842:	6a22      	ldr	r2, [r4, #32]
90009844:	3204      	adds	r2, #4
90009846:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009848:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000984a:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000984c:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000984e:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009850:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009852:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009854:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009856:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000985a:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000985c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009860:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009862:	6a22      	ldr	r2, [r4, #32]
90009864:	3204      	adds	r2, #4
90009866:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009868:	e5cd      	b.n	90009406 <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000986a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000986c:	4620      	mov	r0, r4
9000986e:	69e1      	ldr	r1, [r4, #28]
90009870:	f7f8 fba2 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009874:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009876:	6265      	str	r5, [r4, #36]	@ 0x24
90009878:	e416      	b.n	900090a8 <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000987a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000987c:	4620      	mov	r0, r4
9000987e:	f7f8 fb9b 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009882:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009884:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009886:	6262      	str	r2, [r4, #36]	@ 0x24
90009888:	e40e      	b.n	900090a8 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000988a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000988c:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000988e:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009890:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
90009892:	f105 0501 	add.w	r5, r5, #1
90009896:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009898:	d010      	beq.n	900098bc <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000989a:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000989c:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000989e:	5d4d      	ldrb	r5, [r1, r5]
900098a0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
900098a4:	6a25      	ldr	r5, [r4, #32]
900098a6:	f105 0501 	add.w	r5, r5, #1
900098aa:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
900098ac:	d106      	bne.n	900098bc <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900098ae:	6a22      	ldr	r2, [r4, #32]
900098b0:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
900098b2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900098b4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
900098b8:	3201      	adds	r2, #1
900098ba:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
900098bc:	6418      	str	r0, [r3, #64]	@ 0x40
900098be:	f7ff bbe7 	b.w	90009090 <JPEG_Process+0x28>
900098c2:	bf00      	nop

900098c4 <HAL_JPEG_IRQHandler>:
{
900098c4:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
900098c6:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
900098ca:	3b03      	subs	r3, #3
900098cc:	2b01      	cmp	r3, #1
900098ce:	d900      	bls.n	900098d2 <HAL_JPEG_IRQHandler+0xe>
}
900098d0:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098d2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900098d4:	4604      	mov	r4, r0
900098d6:	f003 030c 	and.w	r3, r3, #12
900098da:	2b08      	cmp	r3, #8
900098dc:	d050      	beq.n	90009980 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098de:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900098e0:	f003 030c 	and.w	r3, r3, #12
900098e4:	2b0c      	cmp	r3, #12
900098e6:	d1f3      	bne.n	900098d0 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900098e8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
900098ea:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900098ec:	f002 0203 	and.w	r2, r2, #3
900098f0:	2a02      	cmp	r2, #2
900098f2:	d049      	beq.n	90009988 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
900098f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900098f6:	0692      	lsls	r2, r2, #26
900098f8:	d5ea      	bpl.n	900098d0 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
900098fa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
900098fc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
900098fe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90009902:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009904:	681a      	ldr	r2, [r3, #0]
90009906:	f022 0201 	bic.w	r2, r2, #1
9000990a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000990c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000990e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009912:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009914:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009916:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000991a:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000991c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009920:	2b02      	cmp	r3, #2
90009922:	d054      	beq.n	900099ce <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009924:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009926:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000992a:	2b02      	cmp	r3, #2
9000992c:	d043      	beq.n	900099b6 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000992e:	6803      	ldr	r3, [r0, #0]
90009930:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009932:	695b      	ldr	r3, [r3, #20]
90009934:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009938:	1ad3      	subs	r3, r2, r3
9000993a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000993c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000993e:	429a      	cmp	r2, r3
90009940:	d048      	beq.n	900099d4 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009942:	6822      	ldr	r2, [r4, #0]
90009944:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009946:	f015 0510 	ands.w	r5, r5, #16
9000994a:	d138      	bne.n	900099be <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000994c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000994e:	2b00      	cmp	r3, #0
90009950:	d14b      	bne.n	900099ea <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009952:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009954:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009956:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009958:	f023 0301 	bic.w	r3, r3, #1
9000995c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000995e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009960:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009962:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009966:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000996a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000996e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009970:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009972:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009974:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009978:	d034      	beq.n	900099e4 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000997a:	f7ff f9af 	bl	90008cdc <HAL_JPEG_EncodeCpltCallback>
}
9000997e:	bd38      	pop	{r3, r4, r5, pc}
90009980:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009984:	f7ff bb70 	b.w	90009068 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009988:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000998a:	0651      	lsls	r1, r2, #25
9000998c:	d5b2      	bpl.n	900098f4 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000998e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009990:	4629      	mov	r1, r5
90009992:	f7fe feaf 	bl	900086f4 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009996:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009998:	4629      	mov	r1, r5
9000999a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000999c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000999e:	f7f8 fabd 	bl	90001f1c <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
900099a2:	6823      	ldr	r3, [r4, #0]
900099a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900099a6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
900099aa:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
900099ac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900099ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900099b2:	639a      	str	r2, [r3, #56]	@ 0x38
900099b4:	e79e      	b.n	900098f4 <HAL_JPEG_IRQHandler+0x30>
}
900099b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
900099ba:	f000 bb35 	b.w	9000a028 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900099be:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900099c0:	049b      	lsls	r3, r3, #18
900099c2:	d485      	bmi.n	900098d0 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
900099c4:	4620      	mov	r0, r4
}
900099c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
900099ca:	f7ff b9f3 	b.w	90008db4 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
900099ce:	f000 fb2b 	bl	9000a028 <HAL_MDMA_Abort_IT>
900099d2:	e7a7      	b.n	90009924 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099d6:	4620      	mov	r0, r4
900099d8:	69e1      	ldr	r1, [r4, #28]
900099da:	f7f8 faed 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
900099de:	2300      	movs	r3, #0
900099e0:	6263      	str	r3, [r4, #36]	@ 0x24
900099e2:	e7ae      	b.n	90009942 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900099e4:	f7f8 fb96 	bl	90002114 <HAL_JPEG_DecodeCpltCallback>
}
900099e8:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099ec:	4620      	mov	r0, r4
900099ee:	69e1      	ldr	r1, [r4, #28]
900099f0:	f7f8 fae2 	bl	90001fb8 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900099f4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
900099f6:	6265      	str	r5, [r4, #36]	@ 0x24
900099f8:	e7ab      	b.n	90009952 <HAL_JPEG_IRQHandler+0x8e>
900099fa:	bf00      	nop

900099fc <HAL_JPEG_GetState>:
  return hjpeg->State;
900099fc:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
90009a00:	4770      	bx	lr
90009a02:	bf00      	nop

90009a04 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
90009a04:	2800      	cmp	r0, #0
90009a06:	d052      	beq.n	90009aae <HAL_LTDC_Init+0xaa>
{
90009a08:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90009a0a:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90009a0e:	4604      	mov	r4, r0
90009a10:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009a14:	2b00      	cmp	r3, #0
90009a16:	d045      	beq.n	90009aa4 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a18:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009a1a:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a1c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009a20:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a24:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009a26:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a28:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009a2a:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a2e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009a30:	6920      	ldr	r0, [r4, #16]
90009a32:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
90009a34:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009a36:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009a38:	6999      	ldr	r1, [r3, #24]
90009a3a:	430a      	orrs	r2, r1
90009a3c:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90009a3e:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
90009a42:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009a46:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90009a48:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
90009a4c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009a50:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
90009a52:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
90009a56:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009a5a:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
90009a5c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009a5e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009a62:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009a64:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90009a66:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009a6a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90009a6e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009a72:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009a74:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90009a76:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90009a7a:	432a      	orrs	r2, r5
90009a7c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009a80:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009a82:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009a86:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90009a88:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009a8a:	f042 0206 	orr.w	r2, r2, #6
90009a8e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90009a90:	699a      	ldr	r2, [r3, #24]
90009a92:	f042 0201 	orr.w	r2, r2, #1
90009a96:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
90009a98:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009a9a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90009a9e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
90009aa2:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
90009aa4:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90009aa8:	f7fa fbc6 	bl	90004238 <HAL_LTDC_MspInit>
90009aac:	e7b4      	b.n	90009a18 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90009aae:	2001      	movs	r0, #1
}
90009ab0:	4770      	bx	lr
90009ab2:	bf00      	nop

90009ab4 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90009ab4:	4770      	bx	lr
90009ab6:	bf00      	nop

90009ab8 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90009ab8:	4770      	bx	lr
90009aba:	bf00      	nop

90009abc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009abc:	6803      	ldr	r3, [r0, #0]
{
90009abe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009ac0:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
90009ac2:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90009ac4:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90009ac6:	076a      	lsls	r2, r5, #29
90009ac8:	d501      	bpl.n	90009ace <HAL_LTDC_IRQHandler+0x12>
90009aca:	0771      	lsls	r1, r6, #29
90009acc:	d41d      	bmi.n	90009b0a <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90009ace:	07aa      	lsls	r2, r5, #30
90009ad0:	d501      	bpl.n	90009ad6 <HAL_LTDC_IRQHandler+0x1a>
90009ad2:	07b3      	lsls	r3, r6, #30
90009ad4:	d42d      	bmi.n	90009b32 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90009ad6:	07e8      	lsls	r0, r5, #31
90009ad8:	d501      	bpl.n	90009ade <HAL_LTDC_IRQHandler+0x22>
90009ada:	07f1      	lsls	r1, r6, #31
90009adc:	d440      	bmi.n	90009b60 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90009ade:	072a      	lsls	r2, r5, #28
90009ae0:	d501      	bpl.n	90009ae6 <HAL_LTDC_IRQHandler+0x2a>
90009ae2:	0733      	lsls	r3, r6, #28
90009ae4:	d400      	bmi.n	90009ae8 <HAL_LTDC_IRQHandler+0x2c>
}
90009ae6:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009ae8:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009aea:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90009aec:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90009aee:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009af0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009af2:	f022 0208 	bic.w	r2, r2, #8
90009af6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009af8:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
90009afa:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
90009afc:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009b00:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90009b04:	f7ff ffd8 	bl	90009ab8 <HAL_LTDC_ReloadEventCallback>
}
90009b08:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90009b0a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b0c:	f022 0204 	bic.w	r2, r2, #4
90009b10:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90009b12:	2204      	movs	r2, #4
90009b14:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90009b16:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90009b1a:	f043 0301 	orr.w	r3, r3, #1
90009b1e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009b22:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009b24:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009b28:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009b2c:	f7ff ffc2 	bl	90009ab4 <HAL_LTDC_ErrorCallback>
90009b30:	e7cd      	b.n	90009ace <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009b32:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90009b34:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009b36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b38:	f022 0202 	bic.w	r2, r2, #2
90009b3c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90009b3e:	2202      	movs	r2, #2
90009b40:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009b42:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90009b44:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90009b48:	f043 0302 	orr.w	r3, r3, #2
90009b4c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009b50:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009b52:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009b56:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009b5a:	f7ff ffab 	bl	90009ab4 <HAL_LTDC_ErrorCallback>
90009b5e:	e7ba      	b.n	90009ad6 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009b60:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90009b62:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009b64:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b66:	f022 0201 	bic.w	r2, r2, #1
90009b6a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90009b6c:	2201      	movs	r2, #1
90009b6e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90009b70:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90009b72:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009b76:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90009b7a:	f7f9 fd7b 	bl	90003674 <HAL_LTDC_LineEventCallback>
90009b7e:	e7ae      	b.n	90009ade <HAL_LTDC_IRQHandler+0x22>

90009b80 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
90009b80:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
90009b84:	2b01      	cmp	r3, #1
90009b86:	f000 80b6 	beq.w	90009cf6 <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009b8a:	2302      	movs	r3, #2
{
90009b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009b90:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009b94:	f8d0 9000 	ldr.w	r9, [r0]
{
90009b98:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009b9a:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009b9e:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009ba2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009ba4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009ba8:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009baa:	f102 0684 	add.w	r6, r2, #132	@ 0x84
90009bae:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009bb0:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
90009bb4:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009bb6:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009bba:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009bbe:	f8df a140 	ldr.w	sl, [pc, #320]	@ 90009d00 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009bc2:	f8dc 3004 	ldr.w	r3, [ip, #4]
90009bc6:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
90009bca:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009bcc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009bce:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009bd2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009bd4:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009bd6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009bda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009bdc:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009be0:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009be2:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009be4:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009be6:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009bea:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009bec:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009bee:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009bf0:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009bf4:	f8d9 300c 	ldr.w	r3, [r9, #12]
90009bf8:	f3c3 430b 	ubfx	r3, r3, #16, #12
90009bfc:	440b      	add	r3, r1
90009bfe:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009c02:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009c06:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009c0a:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009c0e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009c12:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009c16:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009c18:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009c1c:	68ab      	ldr	r3, [r5, #8]
90009c1e:	f8d9 000c 	ldr.w	r0, [r9, #12]
90009c22:	3301      	adds	r3, #1
90009c24:	f3c0 000a 	ubfx	r0, r0, #0, #11
90009c28:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90009c2a:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009c2c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009c30:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009c32:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90009c36:	2907      	cmp	r1, #7
90009c38:	f8dc 3010 	ldr.w	r3, [ip, #16]
90009c3c:	f023 0307 	bic.w	r3, r3, #7
90009c40:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009c44:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009c48:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
90009c4c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90009c50:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009c54:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90009c58:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009c5c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
90009c60:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90009c64:	f8dc 3014 	ldr.w	r3, [ip, #20]
90009c68:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
90009c6c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90009c70:	696b      	ldr	r3, [r5, #20]
90009c72:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009c76:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009c7a:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009c7c:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009c80:	6a28      	ldr	r0, [r5, #32]
90009c82:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009c86:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009c8a:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
90009c8e:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
90009c90:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90009c94:	d82d      	bhi.n	90009cf2 <HAL_LTDC_ConfigLayer+0x172>
90009c96:	4b19      	ldr	r3, [pc, #100]	@ (90009cfc <HAL_LTDC_ConfigLayer+0x17c>)
90009c98:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009c9c:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009c9e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009ca0:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009ca4:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009ca8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009caa:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009cac:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90009cb0:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
90009cb4:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
90009cb8:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009cbc:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90009cc0:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
90009cc4:	f36f 030a 	bfc	r3, #0, #11
90009cc8:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009ccc:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009cd0:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90009cd2:	f859 3006 	ldr.w	r3, [r9, r6]
90009cd6:	4313      	orrs	r3, r2
90009cd8:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
90009cdc:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009cde:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
90009ce2:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
90009ce4:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
90009ce8:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
90009cec:	b003      	add	sp, #12
90009cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
90009cf2:	2301      	movs	r3, #1
90009cf4:	e7d2      	b.n	90009c9c <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
90009cf6:	2002      	movs	r0, #2
}
90009cf8:	4770      	bx	lr
90009cfa:	bf00      	nop
90009cfc:	9002d380 	.word	0x9002d380
90009d00:	fffff8f8 	.word	0xfffff8f8

90009d04 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
90009d04:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
90009d08:	2a01      	cmp	r2, #1
90009d0a:	d019      	beq.n	90009d40 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009d0c:	6802      	ldr	r2, [r0, #0]
90009d0e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009d10:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
90009d12:	f04f 0c00 	mov.w	ip, #0
{
90009d16:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009d18:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009d1c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
90009d1e:	4c09      	ldr	r4, [pc, #36]	@ (90009d44 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009d20:	f020 0001 	bic.w	r0, r0, #1
90009d24:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90009d26:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
90009d28:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
90009d2a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
90009d2c:	4301      	orrs	r1, r0
90009d2e:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90009d30:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
90009d34:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
90009d36:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
90009d3a:	f85d 4b04 	ldr.w	r4, [sp], #4
90009d3e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
90009d40:	2002      	movs	r0, #2
}
90009d42:	4770      	bx	lr
90009d44:	50001000 	.word	0x50001000

90009d48 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
90009d48:	b538      	push	{r3, r4, r5, lr}
90009d4a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90009d4c:	f7fc fca8 	bl	900066a0 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
90009d50:	2c00      	cmp	r4, #0
90009d52:	d058      	beq.n	90009e06 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
90009d54:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
90009d56:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
90009d58:	2100      	movs	r1, #0
90009d5a:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
90009d5c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
90009d60:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
90009d64:	68da      	ldr	r2, [r3, #12]
90009d66:	f022 0201 	bic.w	r2, r2, #1
90009d6a:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
90009d6c:	e005      	b.n	90009d7a <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
90009d6e:	f7fc fc97 	bl	900066a0 <HAL_GetTick>
90009d72:	1b43      	subs	r3, r0, r5
90009d74:	2b05      	cmp	r3, #5
90009d76:	d841      	bhi.n	90009dfc <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
90009d78:	6823      	ldr	r3, [r4, #0]
90009d7a:	68da      	ldr	r2, [r3, #12]
90009d7c:	07d2      	lsls	r2, r2, #31
90009d7e:	d4f6      	bmi.n	90009d6e <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
90009d80:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
90009d84:	69e0      	ldr	r0, [r4, #28]
90009d86:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
90009d88:	68e1      	ldr	r1, [r4, #12]
90009d8a:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
90009d8c:	4302      	orrs	r2, r0
90009d8e:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
90009d90:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
90009d92:	4302      	orrs	r2, r0
90009d94:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009d96:	4302      	orrs	r2, r0
90009d98:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90009d9a:	4302      	orrs	r2, r0
90009d9c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009d9e:	4302      	orrs	r2, r0
90009da0:	68a0      	ldr	r0, [r4, #8]
90009da2:	4302      	orrs	r2, r0
90009da4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90009da6:	3801      	subs	r0, #1
90009da8:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009dac:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
90009dae:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009db0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
90009db4:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009db6:	d103      	bne.n	90009dc0 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
90009db8:	691a      	ldr	r2, [r3, #16]
90009dba:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
90009dbe:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
90009dc0:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
90009dc2:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90009dc4:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
90009dc6:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
90009dc8:	db1f      	blt.n	90009e0a <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
90009dca:	b292      	uxth	r2, r2
90009dcc:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
90009dce:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009dd0:	2a00      	cmp	r2, #0
90009dd2:	db24      	blt.n	90009e1e <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
90009dd4:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
90009dd6:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
90009dda:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
90009dde:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
90009de0:	d029      	beq.n	90009e36 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
90009de2:	b2c0      	uxtb	r0, r0
90009de4:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
90009de6:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
90009de8:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
90009dea:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
90009dec:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
90009dee:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
90009df0:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
90009df2:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
90009df6:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
90009dfa:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
90009dfc:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
90009dfe:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
90009e00:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
90009e02:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
90009e06:	2001      	movs	r0, #1
}
90009e08:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
90009e0a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
90009e0c:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
90009e0e:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
90009e12:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
90009e14:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
90009e16:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
90009e18:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009e1a:	2a00      	cmp	r2, #0
90009e1c:	dada      	bge.n	90009dd4 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
90009e1e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
90009e20:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
90009e22:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
90009e26:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
90009e2a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
90009e2c:	6a19      	ldr	r1, [r3, #32]
90009e2e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
90009e32:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
90009e34:	d1d5      	bne.n	90009de2 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
90009e36:	2200      	movs	r2, #0
90009e38:	629a      	str	r2, [r3, #40]	@ 0x28
90009e3a:	e7d4      	b.n	90009de6 <HAL_MDMA_Init+0x9e>

90009e3c <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
90009e3c:	b1f8      	cbz	r0, 90009e7e <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
90009e3e:	6802      	ldr	r2, [r0, #0]
90009e40:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
90009e42:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
90009e44:	68d0      	ldr	r0, [r2, #12]
{
90009e46:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
90009e48:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
90009e4c:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
90009e4e:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
90009e50:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
90009e52:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
90009e54:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
90009e56:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
90009e58:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
90009e5a:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
90009e5c:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
90009e5e:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
90009e60:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
90009e62:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
90009e64:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
90009e66:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
90009e68:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
90009e6a:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
90009e6e:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
90009e72:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
90009e76:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
90009e78:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
90009e7c:	4770      	bx	lr
    return HAL_ERROR;
90009e7e:	2001      	movs	r0, #1
}
90009e80:	4770      	bx	lr
90009e82:	bf00      	nop

90009e84 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
90009e84:	b308      	cbz	r0, 90009eca <HAL_MDMA_ConfigPostRequestMask+0x46>
90009e86:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
90009e88:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
90009e8c:	2801      	cmp	r0, #1
90009e8e:	d01e      	beq.n	90009ece <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
90009e90:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
90009e92:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
90009e96:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
90009e9a:	45f4      	cmp	ip, lr
90009e9c:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
90009ea0:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
90009ea4:	d004      	beq.n	90009eb0 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
90009ea6:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
90009ea8:	2200      	movs	r2, #0
90009eaa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
90009eae:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
90009eb0:	681c      	ldr	r4, [r3, #0]
90009eb2:	6925      	ldr	r5, [r4, #16]
90009eb4:	006d      	lsls	r5, r5, #1
90009eb6:	d4f7      	bmi.n	90009ea8 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
90009eb8:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
90009eba:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
90009ebc:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
90009ebe:	b941      	cbnz	r1, 90009ed2 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
90009ec0:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
90009ec4:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
90009ec6:	2000      	movs	r0, #0
90009ec8:	e7ee      	b.n	90009ea8 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
90009eca:	2001      	movs	r0, #1
90009ecc:	4770      	bx	lr
  __HAL_LOCK(hmdma);
90009ece:	2002      	movs	r0, #2
}
90009ed0:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
90009ed2:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
90009ed6:	6122      	str	r2, [r4, #16]
90009ed8:	e7f5      	b.n	90009ec6 <HAL_MDMA_ConfigPostRequestMask+0x42>
90009eda:	bf00      	nop

90009edc <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
90009edc:	2800      	cmp	r0, #0
90009ede:	d066      	beq.n	90009fae <HAL_MDMA_Start_IT+0xd2>
{
90009ee0:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
90009ee2:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
90009ee6:	2c01      	cmp	r4, #1
90009ee8:	d009      	beq.n	90009efe <HAL_MDMA_Start_IT+0x22>
90009eea:	2401      	movs	r4, #1
90009eec:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
90009ef0:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
90009ef4:	2c01      	cmp	r4, #1
90009ef6:	d005      	beq.n	90009f04 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
90009ef8:	2300      	movs	r3, #0
90009efa:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
90009efe:	2002      	movs	r0, #2
}
90009f00:	bc70      	pop	{r4, r5, r6}
90009f02:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
90009f04:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
90009f06:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
90009f08:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
90009f0a:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
90009f0e:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
90009f12:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
90009f16:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
90009f1a:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
90009f1c:	6804      	ldr	r4, [r0, #0]
90009f1e:	68e5      	ldr	r5, [r4, #12]
90009f20:	f025 0501 	bic.w	r5, r5, #1
90009f24:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
90009f26:	6965      	ldr	r5, [r4, #20]
90009f28:	f363 0510 	bfi	r5, r3, #0, #17
90009f2c:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
90009f2e:	6963      	ldr	r3, [r4, #20]
90009f30:	f3c3 0313 	ubfx	r3, r3, #0, #20
90009f34:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
90009f38:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
90009f3a:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
90009f3c:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
90009f3e:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
90009f40:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009f42:	bf0c      	ite	eq
90009f44:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
90009f48:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
90009f4c:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
90009f50:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
90009f52:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
90009f54:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009f56:	bf0c      	ite	eq
90009f58:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
90009f5c:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
90009f60:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
90009f62:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
90009f64:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
90009f66:	68e3      	ldr	r3, [r4, #12]
90009f68:	f043 0306 	orr.w	r3, r3, #6
90009f6c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
90009f6e:	b11a      	cbz	r2, 90009f78 <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
90009f70:	68e3      	ldr	r3, [r4, #12]
90009f72:	f043 0310 	orr.w	r3, r3, #16
90009f76:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
90009f78:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90009f7a:	b11b      	cbz	r3, 90009f84 <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
90009f7c:	68e3      	ldr	r3, [r4, #12]
90009f7e:	f043 0308 	orr.w	r3, r3, #8
90009f82:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
90009f84:	6c83      	ldr	r3, [r0, #72]	@ 0x48
90009f86:	b11b      	cbz	r3, 90009f90 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
90009f88:	68e3      	ldr	r3, [r4, #12]
90009f8a:	f043 0320 	orr.w	r3, r3, #32
90009f8e:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
90009f90:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009f92:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
90009f94:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009f98:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
90009f9c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
90009f9e:	d103      	bne.n	90009fa8 <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
90009fa0:	68e3      	ldr	r3, [r4, #12]
90009fa2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90009fa6:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
90009fa8:	2000      	movs	r0, #0
}
90009faa:	bc70      	pop	{r4, r5, r6}
90009fac:	4770      	bx	lr
    return HAL_ERROR;
90009fae:	2001      	movs	r0, #1
}
90009fb0:	4770      	bx	lr
90009fb2:	bf00      	nop

90009fb4 <HAL_MDMA_Abort>:
{
90009fb4:	b538      	push	{r3, r4, r5, lr}
90009fb6:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
90009fb8:	f7fc fb72 	bl	900066a0 <HAL_GetTick>
  if(hmdma == NULL)
90009fbc:	b334      	cbz	r4, 9000a00c <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
90009fbe:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
90009fc2:	2b02      	cmp	r3, #2
90009fc4:	d11d      	bne.n	9000a002 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
90009fc6:	6822      	ldr	r2, [r4, #0]
90009fc8:	4605      	mov	r5, r0
90009fca:	68d3      	ldr	r3, [r2, #12]
90009fcc:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
90009fd0:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
90009fd2:	68d3      	ldr	r3, [r2, #12]
90009fd4:	f023 0301 	bic.w	r3, r3, #1
90009fd8:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
90009fda:	e005      	b.n	90009fe8 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
90009fdc:	f7fc fb60 	bl	900066a0 <HAL_GetTick>
90009fe0:	1b43      	subs	r3, r0, r5
90009fe2:	2b05      	cmp	r3, #5
90009fe4:	d814      	bhi.n	9000a010 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
90009fe6:	6822      	ldr	r2, [r4, #0]
90009fe8:	68d3      	ldr	r3, [r2, #12]
90009fea:	f013 0301 	ands.w	r3, r3, #1
90009fee:	d1f5      	bne.n	90009fdc <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
90009ff0:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
90009ff2:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
90009ff4:	6050      	str	r0, [r2, #4]
  return HAL_OK;
90009ff6:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
90009ff8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
90009ffc:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a000:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a002:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a004:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a006:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a008:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a00c:	2001      	movs	r0, #1
}
9000a00e:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a010:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a012:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a014:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a016:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a01a:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a01e:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a020:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a024:	e7f2      	b.n	9000a00c <HAL_MDMA_Abort+0x58>
9000a026:	bf00      	nop

9000a028 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a028:	4603      	mov	r3, r0
9000a02a:	b128      	cbz	r0, 9000a038 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a02c:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a030:	2a02      	cmp	r2, #2
9000a032:	d003      	beq.n	9000a03c <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a034:	2280      	movs	r2, #128	@ 0x80
9000a036:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a038:	2001      	movs	r0, #1
9000a03a:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a03c:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a03e:	2104      	movs	r1, #4
  return HAL_OK;
9000a040:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a042:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a046:	68d3      	ldr	r3, [r2, #12]
9000a048:	f023 0301 	bic.w	r3, r3, #1
9000a04c:	60d3      	str	r3, [r2, #12]
}
9000a04e:	4770      	bx	lr

9000a050 <HAL_MDMA_IRQHandler>:
{
9000a050:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a052:	2300      	movs	r3, #0
{
9000a054:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a056:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a05a:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a05c:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a05e:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a060:	4b57      	ldr	r3, [pc, #348]	@ (9000a1c0 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a062:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a064:	4a57      	ldr	r2, [pc, #348]	@ (9000a1c4 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a066:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a068:	6823      	ldr	r3, [r4, #0]
9000a06a:	441a      	add	r2, r3
9000a06c:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a070:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a074:	4202      	tst	r2, r0
9000a076:	f000 80a0 	beq.w	9000a1ba <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a07a:	681a      	ldr	r2, [r3, #0]
9000a07c:	07d1      	lsls	r1, r2, #31
9000a07e:	d529      	bpl.n	9000a0d4 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a080:	68da      	ldr	r2, [r3, #12]
9000a082:	0792      	lsls	r2, r2, #30
9000a084:	d526      	bpl.n	9000a0d4 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a086:	68da      	ldr	r2, [r3, #12]
9000a088:	f022 0202 	bic.w	r2, r2, #2
9000a08c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a08e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a090:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a092:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a094:	bf54      	ite	pl
9000a096:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a09a:	f041 0102 	orrmi.w	r1, r1, #2
9000a09e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a0a0:	0591      	lsls	r1, r2, #22
9000a0a2:	d503      	bpl.n	9000a0ac <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a0a4:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a0a6:	f041 0104 	orr.w	r1, r1, #4
9000a0aa:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a0ac:	05d0      	lsls	r0, r2, #23
9000a0ae:	d503      	bpl.n	9000a0b8 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a0b0:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a0b2:	f041 0108 	orr.w	r1, r1, #8
9000a0b6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a0b8:	0551      	lsls	r1, r2, #21
9000a0ba:	d503      	bpl.n	9000a0c4 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a0bc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a0be:	f041 0110 	orr.w	r1, r1, #16
9000a0c2:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a0c4:	0510      	lsls	r0, r2, #20
9000a0c6:	d503      	bpl.n	9000a0d0 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a0c8:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a0ca:	f042 0220 	orr.w	r2, r2, #32
9000a0ce:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a0d0:	2201      	movs	r2, #1
9000a0d2:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a0d4:	681a      	ldr	r2, [r3, #0]
9000a0d6:	06d1      	lsls	r1, r2, #27
9000a0d8:	d509      	bpl.n	9000a0ee <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a0da:	68da      	ldr	r2, [r3, #12]
9000a0dc:	0692      	lsls	r2, r2, #26
9000a0de:	d506      	bpl.n	9000a0ee <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a0e0:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a0e2:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a0e4:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a0e6:	b112      	cbz	r2, 9000a0ee <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a0e8:	4620      	mov	r0, r4
9000a0ea:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a0ec:	6823      	ldr	r3, [r4, #0]
9000a0ee:	681a      	ldr	r2, [r3, #0]
9000a0f0:	0710      	lsls	r0, r2, #28
9000a0f2:	d509      	bpl.n	9000a108 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a0f4:	68da      	ldr	r2, [r3, #12]
9000a0f6:	06d1      	lsls	r1, r2, #27
9000a0f8:	d506      	bpl.n	9000a108 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a0fa:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a0fc:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a0fe:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a100:	b112      	cbz	r2, 9000a108 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a102:	4620      	mov	r0, r4
9000a104:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a106:	6823      	ldr	r3, [r4, #0]
9000a108:	681a      	ldr	r2, [r3, #0]
9000a10a:	0752      	lsls	r2, r2, #29
9000a10c:	d509      	bpl.n	9000a122 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a10e:	68da      	ldr	r2, [r3, #12]
9000a110:	0710      	lsls	r0, r2, #28
9000a112:	d506      	bpl.n	9000a122 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a114:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a116:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a118:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a11a:	b112      	cbz	r2, 9000a122 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a11c:	4620      	mov	r0, r4
9000a11e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a120:	6823      	ldr	r3, [r4, #0]
9000a122:	681a      	ldr	r2, [r3, #0]
9000a124:	0791      	lsls	r1, r2, #30
9000a126:	d516      	bpl.n	9000a156 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a128:	68da      	ldr	r2, [r3, #12]
9000a12a:	0752      	lsls	r2, r2, #29
9000a12c:	d513      	bpl.n	9000a156 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a12e:	68da      	ldr	r2, [r3, #12]
9000a130:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a134:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a136:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a13a:	2a04      	cmp	r2, #4
9000a13c:	d034      	beq.n	9000a1a8 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a13e:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a140:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a142:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a144:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a146:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a148:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a14c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a150:	b10b      	cbz	r3, 9000a156 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a152:	4620      	mov	r0, r4
9000a154:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a156:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a158:	2b00      	cmp	r3, #0
9000a15a:	d02e      	beq.n	9000a1ba <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a15c:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a15e:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a160:	4b19      	ldr	r3, [pc, #100]	@ (9000a1c8 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a162:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a166:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a16a:	68cb      	ldr	r3, [r1, #12]
9000a16c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a170:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a172:	60cb      	str	r3, [r1, #12]
9000a174:	e002      	b.n	9000a17c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a176:	68cb      	ldr	r3, [r1, #12]
9000a178:	07d8      	lsls	r0, r3, #31
9000a17a:	d504      	bpl.n	9000a186 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a17c:	9b01      	ldr	r3, [sp, #4]
9000a17e:	3301      	adds	r3, #1
9000a180:	4293      	cmp	r3, r2
9000a182:	9301      	str	r3, [sp, #4]
9000a184:	d9f7      	bls.n	9000a176 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a186:	2300      	movs	r3, #0
9000a188:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a18c:	68cb      	ldr	r3, [r1, #12]
9000a18e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a190:	bf4c      	ite	mi
9000a192:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a194:	2301      	movpl	r3, #1
9000a196:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a19a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a19c:	b16b      	cbz	r3, 9000a1ba <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a19e:	4620      	mov	r0, r4
}
9000a1a0:	b003      	add	sp, #12
9000a1a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a1a6:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a1a8:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a1aa:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a1ac:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a1ae:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a1b2:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a1b6:	2b00      	cmp	r3, #0
9000a1b8:	d1f1      	bne.n	9000a19e <HAL_MDMA_IRQHandler+0x14e>
}
9000a1ba:	b003      	add	sp, #12
9000a1bc:	bd30      	pop	{r4, r5, pc}
9000a1be:	bf00      	nop
9000a1c0:	24000078 	.word	0x24000078
9000a1c4:	adffffc0 	.word	0xadffffc0
9000a1c8:	1b4e81b5 	.word	0x1b4e81b5

9000a1cc <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a1cc:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a1ce:	4c10      	ldr	r4, [pc, #64]	@ (9000a210 <HAL_PWREx_ConfigSupply+0x44>)
9000a1d0:	68e3      	ldr	r3, [r4, #12]
9000a1d2:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a1d6:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a1d8:	d105      	bne.n	9000a1e6 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a1da:	f003 0307 	and.w	r3, r3, #7
9000a1de:	1a18      	subs	r0, r3, r0
9000a1e0:	bf18      	it	ne
9000a1e2:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a1e4:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a1e6:	f023 0307 	bic.w	r3, r3, #7
9000a1ea:	4303      	orrs	r3, r0
9000a1ec:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a1ee:	f7fc fa57 	bl	900066a0 <HAL_GetTick>
9000a1f2:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a1f4:	e005      	b.n	9000a202 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a1f6:	f7fc fa53 	bl	900066a0 <HAL_GetTick>
9000a1fa:	1b40      	subs	r0, r0, r5
9000a1fc:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a200:	d804      	bhi.n	9000a20c <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a202:	6863      	ldr	r3, [r4, #4]
9000a204:	049b      	lsls	r3, r3, #18
9000a206:	d5f6      	bpl.n	9000a1f6 <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a208:	2000      	movs	r0, #0
}
9000a20a:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a20c:	2001      	movs	r0, #1
}
9000a20e:	bd38      	pop	{r3, r4, r5, pc}
9000a210:	58024800 	.word	0x58024800

9000a214 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a214:	4b33      	ldr	r3, [pc, #204]	@ (9000a2e4 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a216:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a218:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a21a:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a21c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a21e:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a222:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a224:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a228:	d036      	beq.n	9000a298 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a22a:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a22e:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a232:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a236:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a23a:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000a23e:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a240:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a244:	ee06 2a90 	vmov	s13, r2
9000a248:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000a24c:	d002      	beq.n	9000a254 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a24e:	2902      	cmp	r1, #2
9000a250:	d042      	beq.n	9000a2d8 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a252:	b319      	cbz	r1, 9000a29c <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a254:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000a2e8 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a258:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a25c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a25e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a262:	ee07 3a90 	vmov	s15, r3
9000a266:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a26a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a26e:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a272:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a276:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a27a:	4b1a      	ldr	r3, [pc, #104]	@ (9000a2e4 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a27c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a27e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a282:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a284:	ee07 3a10 	vmov	s14, r3
9000a288:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000a28c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000a290:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000a294:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a298:	bc30      	pop	{r4, r5}
9000a29a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a29c:	681a      	ldr	r2, [r3, #0]
9000a29e:	0692      	lsls	r2, r2, #26
9000a2a0:	d51d      	bpl.n	9000a2de <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a2a2:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2a4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a2a8:	4a10      	ldr	r2, [pc, #64]	@ (9000a2ec <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a2ac:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2b0:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a2b4:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2b6:	ee07 3a90 	vmov	s15, r3
9000a2ba:	ee06 2a10 	vmov	s12, r2
9000a2be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a2c2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a2c6:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000a2ca:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000a2ce:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000a2d2:	ee67 7a87 	vmul.f32	s15, s15, s14
9000a2d6:	e7d0      	b.n	9000a27a <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2d8:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a2f0 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000a2dc:	e7bc      	b.n	9000a258 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a2de:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a2f4 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000a2e2:	e7b9      	b.n	9000a258 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a2e4:	58024400 	.word	0x58024400
9000a2e8:	4a742400 	.word	0x4a742400
9000a2ec:	03d09000 	.word	0x03d09000
9000a2f0:	4bbebc20 	.word	0x4bbebc20
9000a2f4:	4c742400 	.word	0x4c742400

9000a2f8 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a2f8:	2800      	cmp	r0, #0
9000a2fa:	f000 82e7 	beq.w	9000a8cc <HAL_RCC_OscConfig+0x5d4>
{
9000a2fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a300:	6803      	ldr	r3, [r0, #0]
9000a302:	4604      	mov	r4, r0
9000a304:	07d9      	lsls	r1, r3, #31
9000a306:	d52e      	bpl.n	9000a366 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a308:	4997      	ldr	r1, [pc, #604]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a30a:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a30c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a30e:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a312:	2a10      	cmp	r2, #16
9000a314:	f000 80ee 	beq.w	9000a4f4 <HAL_RCC_OscConfig+0x1fc>
9000a318:	2a18      	cmp	r2, #24
9000a31a:	f000 80e6 	beq.w	9000a4ea <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a31e:	6863      	ldr	r3, [r4, #4]
9000a320:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000a324:	f000 8111 	beq.w	9000a54a <HAL_RCC_OscConfig+0x252>
9000a328:	2b00      	cmp	r3, #0
9000a32a:	f000 8167 	beq.w	9000a5fc <HAL_RCC_OscConfig+0x304>
9000a32e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000a332:	4b8d      	ldr	r3, [pc, #564]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a334:	681a      	ldr	r2, [r3, #0]
9000a336:	f000 8288 	beq.w	9000a84a <HAL_RCC_OscConfig+0x552>
9000a33a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000a33e:	601a      	str	r2, [r3, #0]
9000a340:	681a      	ldr	r2, [r3, #0]
9000a342:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000a346:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000a348:	f7fc f9aa 	bl	900066a0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a34c:	4e86      	ldr	r6, [pc, #536]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000a34e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a350:	e005      	b.n	9000a35e <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a352:	f7fc f9a5 	bl	900066a0 <HAL_GetTick>
9000a356:	1b40      	subs	r0, r0, r5
9000a358:	2864      	cmp	r0, #100	@ 0x64
9000a35a:	f200 814d 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a35e:	6833      	ldr	r3, [r6, #0]
9000a360:	039b      	lsls	r3, r3, #14
9000a362:	d5f6      	bpl.n	9000a352 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000a364:	6823      	ldr	r3, [r4, #0]
9000a366:	079d      	lsls	r5, r3, #30
9000a368:	d470      	bmi.n	9000a44c <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a36a:	06d9      	lsls	r1, r3, #27
9000a36c:	d533      	bpl.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a36e:	4a7e      	ldr	r2, [pc, #504]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a370:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a372:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a374:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a378:	2b08      	cmp	r3, #8
9000a37a:	f000 80cb 	beq.w	9000a514 <HAL_RCC_OscConfig+0x21c>
9000a37e:	2b18      	cmp	r3, #24
9000a380:	f000 80c3 	beq.w	9000a50a <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a384:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000a386:	4d78      	ldr	r5, [pc, #480]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a388:	2b00      	cmp	r3, #0
9000a38a:	f000 816f 	beq.w	9000a66c <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000a38e:	682b      	ldr	r3, [r5, #0]
9000a390:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000a394:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a396:	f7fc f983 	bl	900066a0 <HAL_GetTick>
9000a39a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a39c:	e005      	b.n	9000a3aa <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a39e:	f7fc f97f 	bl	900066a0 <HAL_GetTick>
9000a3a2:	1b80      	subs	r0, r0, r6
9000a3a4:	2802      	cmp	r0, #2
9000a3a6:	f200 8127 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a3aa:	682b      	ldr	r3, [r5, #0]
9000a3ac:	05db      	lsls	r3, r3, #23
9000a3ae:	d5f6      	bpl.n	9000a39e <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a3b0:	f7fc f97c 	bl	900066ac <HAL_GetREVID>
9000a3b4:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a3b8:	4298      	cmp	r0, r3
9000a3ba:	f200 8267 	bhi.w	9000a88c <HAL_RCC_OscConfig+0x594>
9000a3be:	6a22      	ldr	r2, [r4, #32]
9000a3c0:	686b      	ldr	r3, [r5, #4]
9000a3c2:	2a20      	cmp	r2, #32
9000a3c4:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a3c8:	bf0c      	ite	eq
9000a3ca:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000a3ce:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000a3d2:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a3d4:	6823      	ldr	r3, [r4, #0]
9000a3d6:	071d      	lsls	r5, r3, #28
9000a3d8:	d516      	bpl.n	9000a408 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a3da:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000a3dc:	4d62      	ldr	r5, [pc, #392]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a3de:	2b00      	cmp	r3, #0
9000a3e0:	f000 8122 	beq.w	9000a628 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000a3e4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a3e6:	f043 0301 	orr.w	r3, r3, #1
9000a3ea:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a3ec:	f7fc f958 	bl	900066a0 <HAL_GetTick>
9000a3f0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a3f2:	e005      	b.n	9000a400 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a3f4:	f7fc f954 	bl	900066a0 <HAL_GetTick>
9000a3f8:	1b80      	subs	r0, r0, r6
9000a3fa:	2802      	cmp	r0, #2
9000a3fc:	f200 80fc 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a400:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a402:	0798      	lsls	r0, r3, #30
9000a404:	d5f6      	bpl.n	9000a3f4 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000a406:	6823      	ldr	r3, [r4, #0]
9000a408:	069a      	lsls	r2, r3, #26
9000a40a:	d516      	bpl.n	9000a43a <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a40c:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000a40e:	4d56      	ldr	r5, [pc, #344]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a410:	2b00      	cmp	r3, #0
9000a412:	f000 811a 	beq.w	9000a64a <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000a416:	682b      	ldr	r3, [r5, #0]
9000a418:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a41c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a41e:	f7fc f93f 	bl	900066a0 <HAL_GetTick>
9000a422:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a424:	e005      	b.n	9000a432 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a426:	f7fc f93b 	bl	900066a0 <HAL_GetTick>
9000a42a:	1b80      	subs	r0, r0, r6
9000a42c:	2802      	cmp	r0, #2
9000a42e:	f200 80e3 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a432:	682b      	ldr	r3, [r5, #0]
9000a434:	049f      	lsls	r7, r3, #18
9000a436:	d5f6      	bpl.n	9000a426 <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000a438:	6823      	ldr	r3, [r4, #0]
9000a43a:	0759      	lsls	r1, r3, #29
9000a43c:	f100 808b 	bmi.w	9000a556 <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000a440:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a442:	2b00      	cmp	r3, #0
9000a444:	f040 80bf 	bne.w	9000a5c6 <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000a448:	2000      	movs	r0, #0
}
9000a44a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a44c:	4a46      	ldr	r2, [pc, #280]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a44e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a450:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a452:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000a456:	d12d      	bne.n	9000a4b4 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a458:	4b43      	ldr	r3, [pc, #268]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a45a:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a45c:	681b      	ldr	r3, [r3, #0]
9000a45e:	0759      	lsls	r1, r3, #29
9000a460:	d501      	bpl.n	9000a466 <HAL_RCC_OscConfig+0x16e>
9000a462:	2a00      	cmp	r2, #0
9000a464:	d04f      	beq.n	9000a506 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a466:	4d40      	ldr	r5, [pc, #256]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a468:	682b      	ldr	r3, [r5, #0]
9000a46a:	f023 0319 	bic.w	r3, r3, #25
9000a46e:	4313      	orrs	r3, r2
9000a470:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a472:	f7fc f915 	bl	900066a0 <HAL_GetTick>
9000a476:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a478:	e005      	b.n	9000a486 <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a47a:	f7fc f911 	bl	900066a0 <HAL_GetTick>
9000a47e:	1b80      	subs	r0, r0, r6
9000a480:	2802      	cmp	r0, #2
9000a482:	f200 80b9 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a486:	682b      	ldr	r3, [r5, #0]
9000a488:	075b      	lsls	r3, r3, #29
9000a48a:	d5f6      	bpl.n	9000a47a <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a48c:	f7fc f90e 	bl	900066ac <HAL_GetREVID>
9000a490:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a494:	4298      	cmp	r0, r3
9000a496:	f200 8110 	bhi.w	9000a6ba <HAL_RCC_OscConfig+0x3c2>
9000a49a:	6922      	ldr	r2, [r4, #16]
9000a49c:	686b      	ldr	r3, [r5, #4]
9000a49e:	2a40      	cmp	r2, #64	@ 0x40
9000a4a0:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000a4a4:	bf0c      	ite	eq
9000a4a6:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000a4aa:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000a4ae:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a4b0:	6823      	ldr	r3, [r4, #0]
9000a4b2:	e75a      	b.n	9000a36a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a4b4:	2b18      	cmp	r3, #24
9000a4b6:	f000 80fc 	beq.w	9000a6b2 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a4ba:	4d2b      	ldr	r5, [pc, #172]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a4bc:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a4be:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a4c0:	2a00      	cmp	r2, #0
9000a4c2:	f000 80e5 	beq.w	9000a690 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a4c6:	f023 0319 	bic.w	r3, r3, #25
9000a4ca:	4313      	orrs	r3, r2
9000a4cc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a4ce:	f7fc f8e7 	bl	900066a0 <HAL_GetTick>
9000a4d2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a4d4:	e005      	b.n	9000a4e2 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a4d6:	f7fc f8e3 	bl	900066a0 <HAL_GetTick>
9000a4da:	1b80      	subs	r0, r0, r6
9000a4dc:	2802      	cmp	r0, #2
9000a4de:	f200 808b 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a4e2:	682b      	ldr	r3, [r5, #0]
9000a4e4:	075f      	lsls	r7, r3, #29
9000a4e6:	d5f6      	bpl.n	9000a4d6 <HAL_RCC_OscConfig+0x1de>
9000a4e8:	e7d0      	b.n	9000a48c <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a4ea:	f001 0103 	and.w	r1, r1, #3
9000a4ee:	2902      	cmp	r1, #2
9000a4f0:	f47f af15 	bne.w	9000a31e <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000a4f4:	4a1c      	ldr	r2, [pc, #112]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a4f6:	6812      	ldr	r2, [r2, #0]
9000a4f8:	0392      	lsls	r2, r2, #14
9000a4fa:	f57f af34 	bpl.w	9000a366 <HAL_RCC_OscConfig+0x6e>
9000a4fe:	6862      	ldr	r2, [r4, #4]
9000a500:	2a00      	cmp	r2, #0
9000a502:	f47f af30 	bne.w	9000a366 <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000a506:	2001      	movs	r0, #1
}
9000a508:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a50a:	f002 0203 	and.w	r2, r2, #3
9000a50e:	2a01      	cmp	r2, #1
9000a510:	f47f af38 	bne.w	9000a384 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000a514:	4b14      	ldr	r3, [pc, #80]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a516:	681b      	ldr	r3, [r3, #0]
9000a518:	05da      	lsls	r2, r3, #23
9000a51a:	d502      	bpl.n	9000a522 <HAL_RCC_OscConfig+0x22a>
9000a51c:	69e3      	ldr	r3, [r4, #28]
9000a51e:	2b80      	cmp	r3, #128	@ 0x80
9000a520:	d1f1      	bne.n	9000a506 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a522:	f7fc f8c3 	bl	900066ac <HAL_GetREVID>
9000a526:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a52a:	4298      	cmp	r0, r3
9000a52c:	f200 80ce 	bhi.w	9000a6cc <HAL_RCC_OscConfig+0x3d4>
9000a530:	6a22      	ldr	r2, [r4, #32]
9000a532:	2a20      	cmp	r2, #32
9000a534:	f000 81b9 	beq.w	9000a8aa <HAL_RCC_OscConfig+0x5b2>
9000a538:	490b      	ldr	r1, [pc, #44]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a53a:	684b      	ldr	r3, [r1, #4]
9000a53c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a540:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000a544:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a546:	6823      	ldr	r3, [r4, #0]
9000a548:	e745      	b.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a54a:	4a07      	ldr	r2, [pc, #28]	@ (9000a568 <HAL_RCC_OscConfig+0x270>)
9000a54c:	6813      	ldr	r3, [r2, #0]
9000a54e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a552:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a554:	e6f8      	b.n	9000a348 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000a556:	4d05      	ldr	r5, [pc, #20]	@ (9000a56c <HAL_RCC_OscConfig+0x274>)
9000a558:	682b      	ldr	r3, [r5, #0]
9000a55a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a55e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000a560:	f7fc f89e 	bl	900066a0 <HAL_GetTick>
9000a564:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a566:	e008      	b.n	9000a57a <HAL_RCC_OscConfig+0x282>
9000a568:	58024400 	.word	0x58024400
9000a56c:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000a570:	f7fc f896 	bl	900066a0 <HAL_GetTick>
9000a574:	1b80      	subs	r0, r0, r6
9000a576:	2864      	cmp	r0, #100	@ 0x64
9000a578:	d83e      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a57a:	682b      	ldr	r3, [r5, #0]
9000a57c:	05da      	lsls	r2, r3, #23
9000a57e:	d5f7      	bpl.n	9000a570 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a580:	68a3      	ldr	r3, [r4, #8]
9000a582:	2b01      	cmp	r3, #1
9000a584:	f000 818b 	beq.w	9000a89e <HAL_RCC_OscConfig+0x5a6>
9000a588:	2b00      	cmp	r3, #0
9000a58a:	f000 8166 	beq.w	9000a85a <HAL_RCC_OscConfig+0x562>
9000a58e:	2b05      	cmp	r3, #5
9000a590:	4b85      	ldr	r3, [pc, #532]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
9000a592:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a594:	f000 8192 	beq.w	9000a8bc <HAL_RCC_OscConfig+0x5c4>
9000a598:	f022 0201 	bic.w	r2, r2, #1
9000a59c:	671a      	str	r2, [r3, #112]	@ 0x70
9000a59e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a5a0:	f022 0204 	bic.w	r2, r2, #4
9000a5a4:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a5a6:	f7fc f87b 	bl	900066a0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a5aa:	4e7f      	ldr	r6, [pc, #508]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a5ac:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000a5b0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a5b2:	e004      	b.n	9000a5be <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a5b4:	f7fc f874 	bl	900066a0 <HAL_GetTick>
9000a5b8:	1b40      	subs	r0, r0, r5
9000a5ba:	42b8      	cmp	r0, r7
9000a5bc:	d81c      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a5be:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000a5c0:	079b      	lsls	r3, r3, #30
9000a5c2:	d5f7      	bpl.n	9000a5b4 <HAL_RCC_OscConfig+0x2bc>
9000a5c4:	e73c      	b.n	9000a440 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000a5c6:	4d78      	ldr	r5, [pc, #480]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
9000a5c8:	692a      	ldr	r2, [r5, #16]
9000a5ca:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a5ce:	2a18      	cmp	r2, #24
9000a5d0:	f000 80ee 	beq.w	9000a7b0 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a5d4:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000a5d6:	682b      	ldr	r3, [r5, #0]
9000a5d8:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000a5dc:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a5de:	d07f      	beq.n	9000a6e0 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000a5e0:	f7fc f85e 	bl	900066a0 <HAL_GetTick>
9000a5e4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a5e6:	682b      	ldr	r3, [r5, #0]
9000a5e8:	019b      	lsls	r3, r3, #6
9000a5ea:	f57f af2d 	bpl.w	9000a448 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a5ee:	f7fc f857 	bl	900066a0 <HAL_GetTick>
9000a5f2:	1b00      	subs	r0, r0, r4
9000a5f4:	2802      	cmp	r0, #2
9000a5f6:	d9f6      	bls.n	9000a5e6 <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000a5f8:	2003      	movs	r0, #3
}
9000a5fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a5fc:	4d6a      	ldr	r5, [pc, #424]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
9000a5fe:	682b      	ldr	r3, [r5, #0]
9000a600:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000a604:	602b      	str	r3, [r5, #0]
9000a606:	682b      	ldr	r3, [r5, #0]
9000a608:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000a60c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a60e:	f7fc f847 	bl	900066a0 <HAL_GetTick>
9000a612:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a614:	e004      	b.n	9000a620 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a616:	f7fc f843 	bl	900066a0 <HAL_GetTick>
9000a61a:	1b80      	subs	r0, r0, r6
9000a61c:	2864      	cmp	r0, #100	@ 0x64
9000a61e:	d8eb      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a620:	682b      	ldr	r3, [r5, #0]
9000a622:	039f      	lsls	r7, r3, #14
9000a624:	d4f7      	bmi.n	9000a616 <HAL_RCC_OscConfig+0x31e>
9000a626:	e69d      	b.n	9000a364 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000a628:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a62a:	f023 0301 	bic.w	r3, r3, #1
9000a62e:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a630:	f7fc f836 	bl	900066a0 <HAL_GetTick>
9000a634:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a636:	e004      	b.n	9000a642 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a638:	f7fc f832 	bl	900066a0 <HAL_GetTick>
9000a63c:	1b80      	subs	r0, r0, r6
9000a63e:	2802      	cmp	r0, #2
9000a640:	d8da      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a642:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a644:	0799      	lsls	r1, r3, #30
9000a646:	d4f7      	bmi.n	9000a638 <HAL_RCC_OscConfig+0x340>
9000a648:	e6dd      	b.n	9000a406 <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000a64a:	682b      	ldr	r3, [r5, #0]
9000a64c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a650:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a652:	f7fc f825 	bl	900066a0 <HAL_GetTick>
9000a656:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a658:	e004      	b.n	9000a664 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a65a:	f7fc f821 	bl	900066a0 <HAL_GetTick>
9000a65e:	1b80      	subs	r0, r0, r6
9000a660:	2802      	cmp	r0, #2
9000a662:	d8c9      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a664:	682b      	ldr	r3, [r5, #0]
9000a666:	0498      	lsls	r0, r3, #18
9000a668:	d4f7      	bmi.n	9000a65a <HAL_RCC_OscConfig+0x362>
9000a66a:	e6e5      	b.n	9000a438 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000a66c:	682b      	ldr	r3, [r5, #0]
9000a66e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000a672:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a674:	f7fc f814 	bl	900066a0 <HAL_GetTick>
9000a678:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a67a:	e004      	b.n	9000a686 <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a67c:	f7fc f810 	bl	900066a0 <HAL_GetTick>
9000a680:	1b80      	subs	r0, r0, r6
9000a682:	2802      	cmp	r0, #2
9000a684:	d8b8      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a686:	682b      	ldr	r3, [r5, #0]
9000a688:	05df      	lsls	r7, r3, #23
9000a68a:	d4f7      	bmi.n	9000a67c <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a68c:	6823      	ldr	r3, [r4, #0]
9000a68e:	e6a2      	b.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000a690:	f023 0301 	bic.w	r3, r3, #1
9000a694:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a696:	f7fc f803 	bl	900066a0 <HAL_GetTick>
9000a69a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a69c:	e004      	b.n	9000a6a8 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a69e:	f7fb ffff 	bl	900066a0 <HAL_GetTick>
9000a6a2:	1b80      	subs	r0, r0, r6
9000a6a4:	2802      	cmp	r0, #2
9000a6a6:	d8a7      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a6a8:	682b      	ldr	r3, [r5, #0]
9000a6aa:	0758      	lsls	r0, r3, #29
9000a6ac:	d4f7      	bmi.n	9000a69e <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a6ae:	6823      	ldr	r3, [r4, #0]
9000a6b0:	e65b      	b.n	9000a36a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a6b2:	0790      	lsls	r0, r2, #30
9000a6b4:	f47f af01 	bne.w	9000a4ba <HAL_RCC_OscConfig+0x1c2>
9000a6b8:	e6ce      	b.n	9000a458 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a6ba:	686b      	ldr	r3, [r5, #4]
9000a6bc:	6922      	ldr	r2, [r4, #16]
9000a6be:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000a6c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000a6c6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a6c8:	6823      	ldr	r3, [r4, #0]
9000a6ca:	e64e      	b.n	9000a36a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a6cc:	4a36      	ldr	r2, [pc, #216]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
9000a6ce:	6a21      	ldr	r1, [r4, #32]
9000a6d0:	68d3      	ldr	r3, [r2, #12]
9000a6d2:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000a6d6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000a6da:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a6dc:	6823      	ldr	r3, [r4, #0]
9000a6de:	e67a      	b.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000a6e0:	f7fb ffde 	bl	900066a0 <HAL_GetTick>
9000a6e4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a6e6:	e004      	b.n	9000a6f2 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a6e8:	f7fb ffda 	bl	900066a0 <HAL_GetTick>
9000a6ec:	1b80      	subs	r0, r0, r6
9000a6ee:	2802      	cmp	r0, #2
9000a6f0:	d882      	bhi.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a6f2:	682b      	ldr	r3, [r5, #0]
9000a6f4:	0199      	lsls	r1, r3, #6
9000a6f6:	d4f7      	bmi.n	9000a6e8 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000a6f8:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000a6fa:	4b2c      	ldr	r3, [pc, #176]	@ (9000a7ac <HAL_RCC_OscConfig+0x4b4>)
9000a6fc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a6fe:	400b      	ands	r3, r1
9000a700:	4313      	orrs	r3, r2
9000a702:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a704:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000a708:	62ab      	str	r3, [r5, #40]	@ 0x28
9000a70a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000a70c:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000a710:	3901      	subs	r1, #1
9000a712:	3b01      	subs	r3, #1
9000a714:	3a01      	subs	r2, #1
9000a716:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000a71a:	025b      	lsls	r3, r3, #9
9000a71c:	0412      	lsls	r2, r2, #16
9000a71e:	b29b      	uxth	r3, r3
9000a720:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000a724:	4313      	orrs	r3, r2
9000a726:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000a728:	3a01      	subs	r2, #1
9000a72a:	430b      	orrs	r3, r1
9000a72c:	0612      	lsls	r2, r2, #24
9000a72e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000a732:	4313      	orrs	r3, r2
9000a734:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000a736:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a738:	f023 0301 	bic.w	r3, r3, #1
9000a73c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000a73e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000a740:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000a742:	f36f 03cf 	bfc	r3, #3, #13
9000a746:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000a74a:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000a74c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a74e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000a750:	f023 030c 	bic.w	r3, r3, #12
9000a754:	4313      	orrs	r3, r2
9000a756:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000a758:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a75a:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000a75c:	f023 0302 	bic.w	r3, r3, #2
9000a760:	4313      	orrs	r3, r2
9000a762:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000a764:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a766:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a76a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000a76c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a76e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000a772:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000a774:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a776:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000a77a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000a77c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000a77e:	f043 0301 	orr.w	r3, r3, #1
9000a782:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000a784:	682b      	ldr	r3, [r5, #0]
9000a786:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000a78a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a78c:	f7fb ff88 	bl	900066a0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000a790:	4d05      	ldr	r5, [pc, #20]	@ (9000a7a8 <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000a792:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000a794:	682b      	ldr	r3, [r5, #0]
9000a796:	019a      	lsls	r2, r3, #6
9000a798:	f53f ae56 	bmi.w	9000a448 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a79c:	f7fb ff80 	bl	900066a0 <HAL_GetTick>
9000a7a0:	1b00      	subs	r0, r0, r4
9000a7a2:	2802      	cmp	r0, #2
9000a7a4:	d9f6      	bls.n	9000a794 <HAL_RCC_OscConfig+0x49c>
9000a7a6:	e727      	b.n	9000a5f8 <HAL_RCC_OscConfig+0x300>
9000a7a8:	58024400 	.word	0x58024400
9000a7ac:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000a7b0:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000a7b2:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000a7b4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000a7b6:	f43f aea6 	beq.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000a7ba:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000a7be:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000a7c0:	428b      	cmp	r3, r1
9000a7c2:	f47f aea0 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000a7c6:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000a7ca:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a7cc:	429a      	cmp	r2, r3
9000a7ce:	f47f ae9a 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000a7d2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000a7d4:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000a7d8:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000a7da:	429a      	cmp	r2, r3
9000a7dc:	f47f ae93 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000a7e0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a7e2:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000a7e6:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000a7e8:	429a      	cmp	r2, r3
9000a7ea:	f47f ae8c 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000a7ee:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000a7f0:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000a7f4:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000a7f6:	429a      	cmp	r2, r3
9000a7f8:	f47f ae85 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000a7fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000a7fe:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000a802:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000a804:	4298      	cmp	r0, r3
9000a806:	f47f ae7e 	bne.w	9000a506 <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000a80a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000a80c:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000a80e:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000a812:	429a      	cmp	r2, r3
9000a814:	f43f ae18 	beq.w	9000a448 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000a818:	4a2d      	ldr	r2, [pc, #180]	@ (9000a8d0 <HAL_RCC_OscConfig+0x5d8>)
9000a81a:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000a81c:	f023 0301 	bic.w	r3, r3, #1
9000a820:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000a822:	f7fb ff3d 	bl	900066a0 <HAL_GetTick>
9000a826:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000a828:	f7fb ff3a 	bl	900066a0 <HAL_GetTick>
9000a82c:	42a8      	cmp	r0, r5
9000a82e:	d0fb      	beq.n	9000a828 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000a830:	4a27      	ldr	r2, [pc, #156]	@ (9000a8d0 <HAL_RCC_OscConfig+0x5d8>)
9000a832:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000a834:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a836:	f36f 03cf 	bfc	r3, #3, #13
9000a83a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000a83e:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000a840:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000a842:	f043 0301 	orr.w	r3, r3, #1
9000a846:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000a848:	e5fe      	b.n	9000a448 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a84a:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000a84e:	601a      	str	r2, [r3, #0]
9000a850:	681a      	ldr	r2, [r3, #0]
9000a852:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000a856:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a858:	e576      	b.n	9000a348 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a85a:	4d1d      	ldr	r5, [pc, #116]	@ (9000a8d0 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a85c:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a860:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000a862:	f023 0301 	bic.w	r3, r3, #1
9000a866:	672b      	str	r3, [r5, #112]	@ 0x70
9000a868:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000a86a:	f023 0304 	bic.w	r3, r3, #4
9000a86e:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a870:	f7fb ff16 	bl	900066a0 <HAL_GetTick>
9000a874:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000a876:	e005      	b.n	9000a884 <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a878:	f7fb ff12 	bl	900066a0 <HAL_GetTick>
9000a87c:	1b80      	subs	r0, r0, r6
9000a87e:	42b8      	cmp	r0, r7
9000a880:	f63f aeba 	bhi.w	9000a5f8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000a884:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000a886:	0798      	lsls	r0, r3, #30
9000a888:	d4f6      	bmi.n	9000a878 <HAL_RCC_OscConfig+0x580>
9000a88a:	e5d9      	b.n	9000a440 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a88c:	68eb      	ldr	r3, [r5, #12]
9000a88e:	6a22      	ldr	r2, [r4, #32]
9000a890:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000a894:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000a898:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a89a:	6823      	ldr	r3, [r4, #0]
9000a89c:	e59b      	b.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a89e:	4a0c      	ldr	r2, [pc, #48]	@ (9000a8d0 <HAL_RCC_OscConfig+0x5d8>)
9000a8a0:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000a8a2:	f043 0301 	orr.w	r3, r3, #1
9000a8a6:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000a8a8:	e67d      	b.n	9000a5a6 <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a8aa:	4a09      	ldr	r2, [pc, #36]	@ (9000a8d0 <HAL_RCC_OscConfig+0x5d8>)
9000a8ac:	6853      	ldr	r3, [r2, #4]
9000a8ae:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a8b2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000a8b6:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a8b8:	6823      	ldr	r3, [r4, #0]
9000a8ba:	e58c      	b.n	9000a3d6 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a8bc:	f042 0204 	orr.w	r2, r2, #4
9000a8c0:	671a      	str	r2, [r3, #112]	@ 0x70
9000a8c2:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a8c4:	f042 0201 	orr.w	r2, r2, #1
9000a8c8:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000a8ca:	e66c      	b.n	9000a5a6 <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000a8cc:	2001      	movs	r0, #1
}
9000a8ce:	4770      	bx	lr
9000a8d0:	58024400 	.word	0x58024400

9000a8d4 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000a8d4:	4a3f      	ldr	r2, [pc, #252]	@ (9000a9d4 <HAL_RCC_GetSysClockFreq+0x100>)
9000a8d6:	6913      	ldr	r3, [r2, #16]
9000a8d8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000a8dc:	2b10      	cmp	r3, #16
9000a8de:	d04f      	beq.n	9000a980 <HAL_RCC_GetSysClockFreq+0xac>
9000a8e0:	2b18      	cmp	r3, #24
9000a8e2:	d00a      	beq.n	9000a8fa <HAL_RCC_GetSysClockFreq+0x26>
9000a8e4:	2b00      	cmp	r3, #0
9000a8e6:	d14d      	bne.n	9000a984 <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a8e8:	6813      	ldr	r3, [r2, #0]
9000a8ea:	0699      	lsls	r1, r3, #26
9000a8ec:	d54c      	bpl.n	9000a988 <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a8ee:	6813      	ldr	r3, [r2, #0]
9000a8f0:	4839      	ldr	r0, [pc, #228]	@ (9000a9d8 <HAL_RCC_GetSysClockFreq+0x104>)
9000a8f2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000a8f6:	40d8      	lsrs	r0, r3
9000a8f8:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a8fa:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000a8fc:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a8fe:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a900:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000a902:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a906:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a908:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a90c:	d036      	beq.n	9000a97c <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a90e:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a912:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a916:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a91a:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a91e:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000a922:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a924:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a928:	ee06 3a90 	vmov	s13, r3
9000a92c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000a930:	d002      	beq.n	9000a938 <HAL_RCC_GetSysClockFreq+0x64>
9000a932:	2902      	cmp	r1, #2
9000a934:	d048      	beq.n	9000a9c8 <HAL_RCC_GetSysClockFreq+0xf4>
9000a936:	b349      	cbz	r1, 9000a98c <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a938:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000a9dc <HAL_RCC_GetSysClockFreq+0x108>
9000a93c:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000a940:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a942:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a946:	ee07 3a10 	vmov	s14, r3
9000a94a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a94e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000a952:	ee37 7a26 	vadd.f32	s14, s14, s13
9000a956:	ee37 7a25 	vadd.f32	s14, s14, s11
9000a95a:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a95e:	4b1d      	ldr	r3, [pc, #116]	@ (9000a9d4 <HAL_RCC_GetSysClockFreq+0x100>)
9000a960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a962:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a966:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a968:	ee07 3a90 	vmov	s15, r3
9000a96c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000a970:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000a974:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000a978:	ee17 0a90 	vmov	r0, s15
}
9000a97c:	bc30      	pop	{r4, r5}
9000a97e:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000a980:	4817      	ldr	r0, [pc, #92]	@ (9000a9e0 <HAL_RCC_GetSysClockFreq+0x10c>)
9000a982:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000a984:	4817      	ldr	r0, [pc, #92]	@ (9000a9e4 <HAL_RCC_GetSysClockFreq+0x110>)
9000a986:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000a988:	4813      	ldr	r0, [pc, #76]	@ (9000a9d8 <HAL_RCC_GetSysClockFreq+0x104>)
}
9000a98a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a98c:	6813      	ldr	r3, [r2, #0]
9000a98e:	069b      	lsls	r3, r3, #26
9000a990:	d51d      	bpl.n	9000a9ce <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a992:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a994:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a998:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a99a:	490f      	ldr	r1, [pc, #60]	@ (9000a9d8 <HAL_RCC_GetSysClockFreq+0x104>)
9000a99c:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9a0:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a9a4:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9a6:	ee07 3a10 	vmov	s14, r3
9000a9aa:	ee06 1a10 	vmov	s12, r1
9000a9ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000a9b2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a9b6:	ee77 6a26 	vadd.f32	s13, s14, s13
9000a9ba:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000a9be:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000a9c2:	ee27 7a27 	vmul.f32	s14, s14, s15
9000a9c6:	e7ca      	b.n	9000a95e <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9c8:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000a9e8 <HAL_RCC_GetSysClockFreq+0x114>
9000a9cc:	e7b6      	b.n	9000a93c <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9ce:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000a9ec <HAL_RCC_GetSysClockFreq+0x118>
9000a9d2:	e7b3      	b.n	9000a93c <HAL_RCC_GetSysClockFreq+0x68>
9000a9d4:	58024400 	.word	0x58024400
9000a9d8:	03d09000 	.word	0x03d09000
9000a9dc:	4a742400 	.word	0x4a742400
9000a9e0:	017d7840 	.word	0x017d7840
9000a9e4:	003d0900 	.word	0x003d0900
9000a9e8:	4bbebc20 	.word	0x4bbebc20
9000a9ec:	4c742400 	.word	0x4c742400

9000a9f0 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000a9f0:	2800      	cmp	r0, #0
9000a9f2:	f000 810e 	beq.w	9000ac12 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000a9f6:	4a8d      	ldr	r2, [pc, #564]	@ (9000ac2c <HAL_RCC_ClockConfig+0x23c>)
9000a9f8:	6813      	ldr	r3, [r2, #0]
9000a9fa:	f003 030f 	and.w	r3, r3, #15
9000a9fe:	428b      	cmp	r3, r1
{
9000aa00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000aa04:	4604      	mov	r4, r0
9000aa06:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000aa08:	d20c      	bcs.n	9000aa24 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000aa0a:	6813      	ldr	r3, [r2, #0]
9000aa0c:	f023 030f 	bic.w	r3, r3, #15
9000aa10:	430b      	orrs	r3, r1
9000aa12:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000aa14:	6813      	ldr	r3, [r2, #0]
9000aa16:	f003 030f 	and.w	r3, r3, #15
9000aa1a:	428b      	cmp	r3, r1
9000aa1c:	d002      	beq.n	9000aa24 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000aa1e:	2001      	movs	r0, #1
}
9000aa20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000aa24:	6823      	ldr	r3, [r4, #0]
9000aa26:	0758      	lsls	r0, r3, #29
9000aa28:	d50b      	bpl.n	9000aa42 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000aa2a:	4981      	ldr	r1, [pc, #516]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aa2c:	6920      	ldr	r0, [r4, #16]
9000aa2e:	698a      	ldr	r2, [r1, #24]
9000aa30:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aa34:	4290      	cmp	r0, r2
9000aa36:	d904      	bls.n	9000aa42 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000aa38:	698a      	ldr	r2, [r1, #24]
9000aa3a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aa3e:	4302      	orrs	r2, r0
9000aa40:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000aa42:	0719      	lsls	r1, r3, #28
9000aa44:	d50b      	bpl.n	9000aa5e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000aa46:	497a      	ldr	r1, [pc, #488]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aa48:	6960      	ldr	r0, [r4, #20]
9000aa4a:	69ca      	ldr	r2, [r1, #28]
9000aa4c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aa50:	4290      	cmp	r0, r2
9000aa52:	d904      	bls.n	9000aa5e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000aa54:	69ca      	ldr	r2, [r1, #28]
9000aa56:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aa5a:	4302      	orrs	r2, r0
9000aa5c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000aa5e:	06da      	lsls	r2, r3, #27
9000aa60:	d50b      	bpl.n	9000aa7a <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000aa62:	4973      	ldr	r1, [pc, #460]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aa64:	69a0      	ldr	r0, [r4, #24]
9000aa66:	69ca      	ldr	r2, [r1, #28]
9000aa68:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000aa6c:	4290      	cmp	r0, r2
9000aa6e:	d904      	bls.n	9000aa7a <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000aa70:	69ca      	ldr	r2, [r1, #28]
9000aa72:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000aa76:	4302      	orrs	r2, r0
9000aa78:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000aa7a:	069f      	lsls	r7, r3, #26
9000aa7c:	d50b      	bpl.n	9000aa96 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000aa7e:	496c      	ldr	r1, [pc, #432]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aa80:	69e0      	ldr	r0, [r4, #28]
9000aa82:	6a0a      	ldr	r2, [r1, #32]
9000aa84:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aa88:	4290      	cmp	r0, r2
9000aa8a:	d904      	bls.n	9000aa96 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000aa8c:	6a0a      	ldr	r2, [r1, #32]
9000aa8e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aa92:	4302      	orrs	r2, r0
9000aa94:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000aa96:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000aa98:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000aa9c:	f140 80ab 	bpl.w	9000abf6 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000aaa0:	4e63      	ldr	r6, [pc, #396]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aaa2:	68e0      	ldr	r0, [r4, #12]
9000aaa4:	69b1      	ldr	r1, [r6, #24]
9000aaa6:	f001 010f 	and.w	r1, r1, #15
9000aaaa:	4288      	cmp	r0, r1
9000aaac:	d904      	bls.n	9000aab8 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000aaae:	69b1      	ldr	r1, [r6, #24]
9000aab0:	f021 010f 	bic.w	r1, r1, #15
9000aab4:	4301      	orrs	r1, r0
9000aab6:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000aab8:	2a00      	cmp	r2, #0
9000aaba:	d030      	beq.n	9000ab1e <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000aabc:	4a5c      	ldr	r2, [pc, #368]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aabe:	68a1      	ldr	r1, [r4, #8]
9000aac0:	6993      	ldr	r3, [r2, #24]
9000aac2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000aac6:	430b      	orrs	r3, r1
9000aac8:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000aaca:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aacc:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000aace:	2902      	cmp	r1, #2
9000aad0:	f000 80a1 	beq.w	9000ac16 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000aad4:	2903      	cmp	r1, #3
9000aad6:	f000 8098 	beq.w	9000ac0a <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000aada:	2901      	cmp	r1, #1
9000aadc:	f000 80a1 	beq.w	9000ac22 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000aae0:	075f      	lsls	r7, r3, #29
9000aae2:	d59c      	bpl.n	9000aa1e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000aae4:	4e52      	ldr	r6, [pc, #328]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000aae6:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000aaea:	6933      	ldr	r3, [r6, #16]
9000aaec:	f023 0307 	bic.w	r3, r3, #7
9000aaf0:	430b      	orrs	r3, r1
9000aaf2:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000aaf4:	f7fb fdd4 	bl	900066a0 <HAL_GetTick>
9000aaf8:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000aafa:	e005      	b.n	9000ab08 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000aafc:	f7fb fdd0 	bl	900066a0 <HAL_GetTick>
9000ab00:	1bc0      	subs	r0, r0, r7
9000ab02:	4540      	cmp	r0, r8
9000ab04:	f200 808b 	bhi.w	9000ac1e <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ab08:	6933      	ldr	r3, [r6, #16]
9000ab0a:	6862      	ldr	r2, [r4, #4]
9000ab0c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ab10:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ab14:	d1f2      	bne.n	9000aafc <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ab16:	6823      	ldr	r3, [r4, #0]
9000ab18:	079e      	lsls	r6, r3, #30
9000ab1a:	d506      	bpl.n	9000ab2a <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ab1c:	68e0      	ldr	r0, [r4, #12]
9000ab1e:	4944      	ldr	r1, [pc, #272]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000ab20:	698a      	ldr	r2, [r1, #24]
9000ab22:	f002 020f 	and.w	r2, r2, #15
9000ab26:	4290      	cmp	r0, r2
9000ab28:	d369      	bcc.n	9000abfe <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ab2a:	4940      	ldr	r1, [pc, #256]	@ (9000ac2c <HAL_RCC_ClockConfig+0x23c>)
9000ab2c:	680a      	ldr	r2, [r1, #0]
9000ab2e:	f002 020f 	and.w	r2, r2, #15
9000ab32:	42aa      	cmp	r2, r5
9000ab34:	d90a      	bls.n	9000ab4c <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ab36:	680a      	ldr	r2, [r1, #0]
9000ab38:	f022 020f 	bic.w	r2, r2, #15
9000ab3c:	432a      	orrs	r2, r5
9000ab3e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ab40:	680a      	ldr	r2, [r1, #0]
9000ab42:	f002 020f 	and.w	r2, r2, #15
9000ab46:	42aa      	cmp	r2, r5
9000ab48:	f47f af69 	bne.w	9000aa1e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ab4c:	0758      	lsls	r0, r3, #29
9000ab4e:	d50b      	bpl.n	9000ab68 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ab50:	4937      	ldr	r1, [pc, #220]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000ab52:	6920      	ldr	r0, [r4, #16]
9000ab54:	698a      	ldr	r2, [r1, #24]
9000ab56:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ab5a:	4290      	cmp	r0, r2
9000ab5c:	d204      	bcs.n	9000ab68 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ab5e:	698a      	ldr	r2, [r1, #24]
9000ab60:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ab64:	4302      	orrs	r2, r0
9000ab66:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ab68:	0719      	lsls	r1, r3, #28
9000ab6a:	d50b      	bpl.n	9000ab84 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ab6c:	4930      	ldr	r1, [pc, #192]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000ab6e:	6960      	ldr	r0, [r4, #20]
9000ab70:	69ca      	ldr	r2, [r1, #28]
9000ab72:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ab76:	4290      	cmp	r0, r2
9000ab78:	d204      	bcs.n	9000ab84 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ab7a:	69ca      	ldr	r2, [r1, #28]
9000ab7c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ab80:	4302      	orrs	r2, r0
9000ab82:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ab84:	06da      	lsls	r2, r3, #27
9000ab86:	d50b      	bpl.n	9000aba0 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ab88:	4929      	ldr	r1, [pc, #164]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000ab8a:	69a0      	ldr	r0, [r4, #24]
9000ab8c:	69ca      	ldr	r2, [r1, #28]
9000ab8e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ab92:	4290      	cmp	r0, r2
9000ab94:	d204      	bcs.n	9000aba0 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ab96:	69ca      	ldr	r2, [r1, #28]
9000ab98:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000ab9c:	4302      	orrs	r2, r0
9000ab9e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000aba0:	069b      	lsls	r3, r3, #26
9000aba2:	d50b      	bpl.n	9000abbc <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000aba4:	4a22      	ldr	r2, [pc, #136]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000aba6:	69e1      	ldr	r1, [r4, #28]
9000aba8:	6a13      	ldr	r3, [r2, #32]
9000abaa:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000abae:	4299      	cmp	r1, r3
9000abb0:	d204      	bcs.n	9000abbc <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000abb2:	6a13      	ldr	r3, [r2, #32]
9000abb4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000abb8:	430b      	orrs	r3, r1
9000abba:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000abbc:	f7ff fe8a 	bl	9000a8d4 <HAL_RCC_GetSysClockFreq>
9000abc0:	4a1b      	ldr	r2, [pc, #108]	@ (9000ac30 <HAL_RCC_ClockConfig+0x240>)
9000abc2:	4603      	mov	r3, r0
9000abc4:	481b      	ldr	r0, [pc, #108]	@ (9000ac34 <HAL_RCC_ClockConfig+0x244>)
9000abc6:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000abc8:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000abca:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000abce:	4d1a      	ldr	r5, [pc, #104]	@ (9000ac38 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000abd0:	f002 020f 	and.w	r2, r2, #15
9000abd4:	4c19      	ldr	r4, [pc, #100]	@ (9000ac3c <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000abd6:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000abd8:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000abda:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000abde:	4818      	ldr	r0, [pc, #96]	@ (9000ac40 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000abe0:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000abe4:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000abe6:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000abe8:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000abea:	40d3      	lsrs	r3, r2
9000abec:	6023      	str	r3, [r4, #0]
}
9000abee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000abf2:	f7f9 bcf1 	b.w	900045d8 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000abf6:	2a00      	cmp	r2, #0
9000abf8:	f47f af60 	bne.w	9000aabc <HAL_RCC_ClockConfig+0xcc>
9000abfc:	e795      	b.n	9000ab2a <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000abfe:	698a      	ldr	r2, [r1, #24]
9000ac00:	f022 020f 	bic.w	r2, r2, #15
9000ac04:	4302      	orrs	r2, r0
9000ac06:	618a      	str	r2, [r1, #24]
9000ac08:	e78f      	b.n	9000ab2a <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ac0a:	019a      	lsls	r2, r3, #6
9000ac0c:	f53f af6a 	bmi.w	9000aae4 <HAL_RCC_ClockConfig+0xf4>
9000ac10:	e705      	b.n	9000aa1e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000ac12:	2001      	movs	r0, #1
}
9000ac14:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ac16:	0398      	lsls	r0, r3, #14
9000ac18:	f53f af64 	bmi.w	9000aae4 <HAL_RCC_ClockConfig+0xf4>
9000ac1c:	e6ff      	b.n	9000aa1e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000ac1e:	2003      	movs	r0, #3
9000ac20:	e6fe      	b.n	9000aa20 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ac22:	05db      	lsls	r3, r3, #23
9000ac24:	f53f af5e 	bmi.w	9000aae4 <HAL_RCC_ClockConfig+0xf4>
9000ac28:	e6f9      	b.n	9000aa1e <HAL_RCC_ClockConfig+0x2e>
9000ac2a:	bf00      	nop
9000ac2c:	52002000 	.word	0x52002000
9000ac30:	58024400 	.word	0x58024400
9000ac34:	9002d110 	.word	0x9002d110
9000ac38:	24000078 	.word	0x24000078
9000ac3c:	24000074 	.word	0x24000074
9000ac40:	24000080 	.word	0x24000080

9000ac44 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac44:	4a18      	ldr	r2, [pc, #96]	@ (9000aca8 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000ac46:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac48:	6913      	ldr	r3, [r2, #16]
9000ac4a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ac4e:	2b10      	cmp	r3, #16
9000ac50:	d024      	beq.n	9000ac9c <HAL_RCC_GetHCLKFreq+0x58>
9000ac52:	2b18      	cmp	r3, #24
9000ac54:	d009      	beq.n	9000ac6a <HAL_RCC_GetHCLKFreq+0x26>
9000ac56:	bb1b      	cbnz	r3, 9000aca0 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac58:	6813      	ldr	r3, [r2, #0]
9000ac5a:	069b      	lsls	r3, r3, #26
9000ac5c:	d522      	bpl.n	9000aca4 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac5e:	6812      	ldr	r2, [r2, #0]
9000ac60:	4b12      	ldr	r3, [pc, #72]	@ (9000acac <HAL_RCC_GetHCLKFreq+0x68>)
9000ac62:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000ac66:	40d3      	lsrs	r3, r2
9000ac68:	e002      	b.n	9000ac70 <HAL_RCC_GetHCLKFreq+0x2c>
9000ac6a:	f7ff fad3 	bl	9000a214 <HAL_RCC_GetSysClockFreq.part.0>
9000ac6e:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ac70:	490d      	ldr	r1, [pc, #52]	@ (9000aca8 <HAL_RCC_GetHCLKFreq+0x64>)
9000ac72:	480f      	ldr	r0, [pc, #60]	@ (9000acb0 <HAL_RCC_GetHCLKFreq+0x6c>)
9000ac74:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac76:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ac78:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac7c:	4c0d      	ldr	r4, [pc, #52]	@ (9000acb4 <HAL_RCC_GetHCLKFreq+0x70>)
9000ac7e:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000ac82:	4d0d      	ldr	r5, [pc, #52]	@ (9000acb8 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ac84:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac86:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ac88:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac8c:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ac90:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac92:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000ac96:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ac98:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000ac9a:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac9c:	4b07      	ldr	r3, [pc, #28]	@ (9000acbc <HAL_RCC_GetHCLKFreq+0x78>)
9000ac9e:	e7e7      	b.n	9000ac70 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000aca0:	4b07      	ldr	r3, [pc, #28]	@ (9000acc0 <HAL_RCC_GetHCLKFreq+0x7c>)
9000aca2:	e7e5      	b.n	9000ac70 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000aca4:	4b01      	ldr	r3, [pc, #4]	@ (9000acac <HAL_RCC_GetHCLKFreq+0x68>)
9000aca6:	e7e3      	b.n	9000ac70 <HAL_RCC_GetHCLKFreq+0x2c>
9000aca8:	58024400 	.word	0x58024400
9000acac:	03d09000 	.word	0x03d09000
9000acb0:	9002d110 	.word	0x9002d110
9000acb4:	24000074 	.word	0x24000074
9000acb8:	24000078 	.word	0x24000078
9000acbc:	017d7840 	.word	0x017d7840
9000acc0:	003d0900 	.word	0x003d0900

9000acc4 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000acc4:	4a1c      	ldr	r2, [pc, #112]	@ (9000ad38 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000acc6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000acc8:	6913      	ldr	r3, [r2, #16]
9000acca:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000acce:	2b10      	cmp	r3, #16
9000acd0:	d02b      	beq.n	9000ad2a <HAL_RCC_GetPCLK1Freq+0x66>
9000acd2:	2b18      	cmp	r3, #24
9000acd4:	d009      	beq.n	9000acea <HAL_RCC_GetPCLK1Freq+0x26>
9000acd6:	bb53      	cbnz	r3, 9000ad2e <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000acd8:	6813      	ldr	r3, [r2, #0]
9000acda:	069b      	lsls	r3, r3, #26
9000acdc:	d529      	bpl.n	9000ad32 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acde:	6812      	ldr	r2, [r2, #0]
9000ace0:	4b16      	ldr	r3, [pc, #88]	@ (9000ad3c <HAL_RCC_GetPCLK1Freq+0x78>)
9000ace2:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000ace6:	40d3      	lsrs	r3, r2
9000ace8:	e002      	b.n	9000acf0 <HAL_RCC_GetPCLK1Freq+0x2c>
9000acea:	f7ff fa93 	bl	9000a214 <HAL_RCC_GetSysClockFreq.part.0>
9000acee:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000acf0:	4a11      	ldr	r2, [pc, #68]	@ (9000ad38 <HAL_RCC_GetPCLK1Freq+0x74>)
9000acf2:	4913      	ldr	r1, [pc, #76]	@ (9000ad40 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000acf4:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000acf6:	4d13      	ldr	r5, [pc, #76]	@ (9000ad44 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000acf8:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000acfc:	4c12      	ldr	r4, [pc, #72]	@ (9000ad48 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000acfe:	5c08      	ldrb	r0, [r1, r0]
9000ad00:	f000 001f 	and.w	r0, r0, #31
9000ad04:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ad06:	6990      	ldr	r0, [r2, #24]
9000ad08:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000ad0c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ad0e:	5c08      	ldrb	r0, [r1, r0]
9000ad10:	f000 001f 	and.w	r0, r0, #31
9000ad14:	40c3      	lsrs	r3, r0
9000ad16:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000ad18:	69d2      	ldr	r2, [r2, #28]
9000ad1a:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000ad1e:	5c88      	ldrb	r0, [r1, r2]
9000ad20:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000ad24:	fa23 f000 	lsr.w	r0, r3, r0
9000ad28:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ad2a:	4b08      	ldr	r3, [pc, #32]	@ (9000ad4c <HAL_RCC_GetPCLK1Freq+0x88>)
9000ad2c:	e7e0      	b.n	9000acf0 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000ad2e:	4b08      	ldr	r3, [pc, #32]	@ (9000ad50 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000ad30:	e7de      	b.n	9000acf0 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000ad32:	4b02      	ldr	r3, [pc, #8]	@ (9000ad3c <HAL_RCC_GetPCLK1Freq+0x78>)
9000ad34:	e7dc      	b.n	9000acf0 <HAL_RCC_GetPCLK1Freq+0x2c>
9000ad36:	bf00      	nop
9000ad38:	58024400 	.word	0x58024400
9000ad3c:	03d09000 	.word	0x03d09000
9000ad40:	9002d110 	.word	0x9002d110
9000ad44:	24000078 	.word	0x24000078
9000ad48:	24000074 	.word	0x24000074
9000ad4c:	017d7840 	.word	0x017d7840
9000ad50:	003d0900 	.word	0x003d0900

9000ad54 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ad54:	4a1c      	ldr	r2, [pc, #112]	@ (9000adc8 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000ad56:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ad58:	6913      	ldr	r3, [r2, #16]
9000ad5a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ad5e:	2b10      	cmp	r3, #16
9000ad60:	d02b      	beq.n	9000adba <HAL_RCC_GetPCLK2Freq+0x66>
9000ad62:	2b18      	cmp	r3, #24
9000ad64:	d009      	beq.n	9000ad7a <HAL_RCC_GetPCLK2Freq+0x26>
9000ad66:	bb53      	cbnz	r3, 9000adbe <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ad68:	6813      	ldr	r3, [r2, #0]
9000ad6a:	069b      	lsls	r3, r3, #26
9000ad6c:	d529      	bpl.n	9000adc2 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad6e:	6812      	ldr	r2, [r2, #0]
9000ad70:	4b16      	ldr	r3, [pc, #88]	@ (9000adcc <HAL_RCC_GetPCLK2Freq+0x78>)
9000ad72:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000ad76:	40d3      	lsrs	r3, r2
9000ad78:	e002      	b.n	9000ad80 <HAL_RCC_GetPCLK2Freq+0x2c>
9000ad7a:	f7ff fa4b 	bl	9000a214 <HAL_RCC_GetSysClockFreq.part.0>
9000ad7e:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ad80:	4a11      	ldr	r2, [pc, #68]	@ (9000adc8 <HAL_RCC_GetPCLK2Freq+0x74>)
9000ad82:	4913      	ldr	r1, [pc, #76]	@ (9000add0 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000ad84:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000ad86:	4d13      	ldr	r5, [pc, #76]	@ (9000add4 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ad88:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ad8c:	4c12      	ldr	r4, [pc, #72]	@ (9000add8 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ad8e:	5c08      	ldrb	r0, [r1, r0]
9000ad90:	f000 001f 	and.w	r0, r0, #31
9000ad94:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ad96:	6990      	ldr	r0, [r2, #24]
9000ad98:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000ad9c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ad9e:	5c08      	ldrb	r0, [r1, r0]
9000ada0:	f000 001f 	and.w	r0, r0, #31
9000ada4:	40c3      	lsrs	r3, r0
9000ada6:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000ada8:	69d2      	ldr	r2, [r2, #28]
9000adaa:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000adae:	5c88      	ldrb	r0, [r1, r2]
9000adb0:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000adb4:	fa23 f000 	lsr.w	r0, r3, r0
9000adb8:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000adba:	4b08      	ldr	r3, [pc, #32]	@ (9000addc <HAL_RCC_GetPCLK2Freq+0x88>)
9000adbc:	e7e0      	b.n	9000ad80 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000adbe:	4b08      	ldr	r3, [pc, #32]	@ (9000ade0 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000adc0:	e7de      	b.n	9000ad80 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000adc2:	4b02      	ldr	r3, [pc, #8]	@ (9000adcc <HAL_RCC_GetPCLK2Freq+0x78>)
9000adc4:	e7dc      	b.n	9000ad80 <HAL_RCC_GetPCLK2Freq+0x2c>
9000adc6:	bf00      	nop
9000adc8:	58024400 	.word	0x58024400
9000adcc:	03d09000 	.word	0x03d09000
9000add0:	9002d110 	.word	0x9002d110
9000add4:	24000078 	.word	0x24000078
9000add8:	24000074 	.word	0x24000074
9000addc:	017d7840 	.word	0x017d7840
9000ade0:	003d0900 	.word	0x003d0900

9000ade4 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000ade4:	4b13      	ldr	r3, [pc, #76]	@ (9000ae34 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000ade6:	223f      	movs	r2, #63	@ 0x3f
{
9000ade8:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000adea:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000adec:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000adee:	4c12      	ldr	r4, [pc, #72]	@ (9000ae38 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000adf0:	f002 0207 	and.w	r2, r2, #7
9000adf4:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000adf6:	699a      	ldr	r2, [r3, #24]
9000adf8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000adfc:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000adfe:	699a      	ldr	r2, [r3, #24]
9000ae00:	f002 020f 	and.w	r2, r2, #15
9000ae04:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000ae06:	699a      	ldr	r2, [r3, #24]
9000ae08:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae0c:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000ae0e:	69da      	ldr	r2, [r3, #28]
9000ae10:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae14:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000ae16:	69da      	ldr	r2, [r3, #28]
9000ae18:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ae1c:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000ae1e:	6a1b      	ldr	r3, [r3, #32]
9000ae20:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000ae24:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000ae26:	6823      	ldr	r3, [r4, #0]
}
9000ae28:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000ae2c:	f003 030f 	and.w	r3, r3, #15
9000ae30:	600b      	str	r3, [r1, #0]
}
9000ae32:	4770      	bx	lr
9000ae34:	58024400 	.word	0x58024400
9000ae38:	52002000 	.word	0x52002000

9000ae3c <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000ae3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000ae3e:	4c36      	ldr	r4, [pc, #216]	@ (9000af18 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000ae40:	4606      	mov	r6, r0
9000ae42:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000ae44:	6823      	ldr	r3, [r4, #0]
9000ae46:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000ae4a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ae4c:	f7fb fc28 	bl	900066a0 <HAL_GetTick>
9000ae50:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000ae52:	e004      	b.n	9000ae5e <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000ae54:	f7fb fc24 	bl	900066a0 <HAL_GetTick>
9000ae58:	1b40      	subs	r0, r0, r5
9000ae5a:	2802      	cmp	r0, #2
9000ae5c:	d856      	bhi.n	9000af0c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000ae5e:	6823      	ldr	r3, [r4, #0]
9000ae60:	011a      	lsls	r2, r3, #4
9000ae62:	d4f7      	bmi.n	9000ae54 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000ae64:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ae66:	6832      	ldr	r2, [r6, #0]
9000ae68:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000ae6c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000ae70:	62a3      	str	r3, [r4, #40]	@ 0x28
9000ae72:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ae76:	3b01      	subs	r3, #1
9000ae78:	3a01      	subs	r2, #1
9000ae7a:	025b      	lsls	r3, r3, #9
9000ae7c:	0412      	lsls	r2, r2, #16
9000ae7e:	b29b      	uxth	r3, r3
9000ae80:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000ae84:	4313      	orrs	r3, r2
9000ae86:	6872      	ldr	r2, [r6, #4]
9000ae88:	3a01      	subs	r2, #1
9000ae8a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ae8e:	4313      	orrs	r3, r2
9000ae90:	6932      	ldr	r2, [r6, #16]
9000ae92:	3a01      	subs	r2, #1
9000ae94:	0612      	lsls	r2, r2, #24
9000ae96:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000ae9a:	4313      	orrs	r3, r2
9000ae9c:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000ae9e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aea0:	6972      	ldr	r2, [r6, #20]
9000aea2:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000aea6:	4313      	orrs	r3, r2
9000aea8:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000aeaa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aeac:	69b2      	ldr	r2, [r6, #24]
9000aeae:	f023 0320 	bic.w	r3, r3, #32
9000aeb2:	4313      	orrs	r3, r2
9000aeb4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000aeb6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aeb8:	f023 0310 	bic.w	r3, r3, #16
9000aebc:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000aebe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000aec0:	69f2      	ldr	r2, [r6, #28]
9000aec2:	f36f 03cf 	bfc	r3, #3, #13
9000aec6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000aeca:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000aecc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aece:	f043 0310 	orr.w	r3, r3, #16
9000aed2:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000aed4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000aed6:	b1df      	cbz	r7, 9000af10 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000aed8:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000aeda:	bf0c      	ite	eq
9000aedc:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000aee0:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000aee4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000aee6:	4c0c      	ldr	r4, [pc, #48]	@ (9000af18 <RCCEx_PLL2_Config.part.0+0xdc>)
9000aee8:	6823      	ldr	r3, [r4, #0]
9000aeea:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000aeee:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000aef0:	f7fb fbd6 	bl	900066a0 <HAL_GetTick>
9000aef4:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000aef6:	e004      	b.n	9000af02 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000aef8:	f7fb fbd2 	bl	900066a0 <HAL_GetTick>
9000aefc:	1b40      	subs	r0, r0, r5
9000aefe:	2802      	cmp	r0, #2
9000af00:	d804      	bhi.n	9000af0c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000af02:	6823      	ldr	r3, [r4, #0]
9000af04:	011b      	lsls	r3, r3, #4
9000af06:	d5f7      	bpl.n	9000aef8 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000af08:	2000      	movs	r0, #0
}
9000af0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000af0c:	2003      	movs	r0, #3
}
9000af0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000af10:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000af14:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000af16:	e7e6      	b.n	9000aee6 <RCCEx_PLL2_Config.part.0+0xaa>
9000af18:	58024400 	.word	0x58024400

9000af1c <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000af1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000af1e:	4c36      	ldr	r4, [pc, #216]	@ (9000aff8 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000af20:	4606      	mov	r6, r0
9000af22:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000af24:	6823      	ldr	r3, [r4, #0]
9000af26:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000af2a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000af2c:	f7fb fbb8 	bl	900066a0 <HAL_GetTick>
9000af30:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000af32:	e004      	b.n	9000af3e <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000af34:	f7fb fbb4 	bl	900066a0 <HAL_GetTick>
9000af38:	1b40      	subs	r0, r0, r5
9000af3a:	2802      	cmp	r0, #2
9000af3c:	d856      	bhi.n	9000afec <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000af3e:	6823      	ldr	r3, [r4, #0]
9000af40:	009a      	lsls	r2, r3, #2
9000af42:	d4f7      	bmi.n	9000af34 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000af44:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000af46:	6832      	ldr	r2, [r6, #0]
9000af48:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000af4c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000af50:	62a3      	str	r3, [r4, #40]	@ 0x28
9000af52:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000af56:	3b01      	subs	r3, #1
9000af58:	3a01      	subs	r2, #1
9000af5a:	025b      	lsls	r3, r3, #9
9000af5c:	0412      	lsls	r2, r2, #16
9000af5e:	b29b      	uxth	r3, r3
9000af60:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000af64:	4313      	orrs	r3, r2
9000af66:	6872      	ldr	r2, [r6, #4]
9000af68:	3a01      	subs	r2, #1
9000af6a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000af6e:	4313      	orrs	r3, r2
9000af70:	6932      	ldr	r2, [r6, #16]
9000af72:	3a01      	subs	r2, #1
9000af74:	0612      	lsls	r2, r2, #24
9000af76:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000af7a:	4313      	orrs	r3, r2
9000af7c:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000af7e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000af80:	6972      	ldr	r2, [r6, #20]
9000af82:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000af86:	4313      	orrs	r3, r2
9000af88:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000af8a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000af8c:	69b2      	ldr	r2, [r6, #24]
9000af8e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000af92:	4313      	orrs	r3, r2
9000af94:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000af96:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000af98:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000af9c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000af9e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000afa0:	69f2      	ldr	r2, [r6, #28]
9000afa2:	f36f 03cf 	bfc	r3, #3, #13
9000afa6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000afaa:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000afac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000afae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000afb2:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000afb4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000afb6:	b1df      	cbz	r7, 9000aff0 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000afb8:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000afba:	bf0c      	ite	eq
9000afbc:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000afc0:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000afc4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000afc6:	4c0c      	ldr	r4, [pc, #48]	@ (9000aff8 <RCCEx_PLL3_Config.part.0+0xdc>)
9000afc8:	6823      	ldr	r3, [r4, #0]
9000afca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000afce:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000afd0:	f7fb fb66 	bl	900066a0 <HAL_GetTick>
9000afd4:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000afd6:	e004      	b.n	9000afe2 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000afd8:	f7fb fb62 	bl	900066a0 <HAL_GetTick>
9000afdc:	1b40      	subs	r0, r0, r5
9000afde:	2802      	cmp	r0, #2
9000afe0:	d804      	bhi.n	9000afec <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000afe2:	6823      	ldr	r3, [r4, #0]
9000afe4:	009b      	lsls	r3, r3, #2
9000afe6:	d5f7      	bpl.n	9000afd8 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000afe8:	2000      	movs	r0, #0
}
9000afea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000afec:	2003      	movs	r0, #3
}
9000afee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000aff0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000aff4:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000aff6:	e7e6      	b.n	9000afc6 <RCCEx_PLL3_Config.part.0+0xaa>
9000aff8:	58024400 	.word	0x58024400

9000affc <HAL_RCCEx_PeriphCLKConfig>:
{
9000affc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b000:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b004:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b006:	011d      	lsls	r5, r3, #4
9000b008:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b00c:	d524      	bpl.n	9000b058 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b00e:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b010:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b014:	f000 85df 	beq.w	9000bbd6 <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000b018:	f200 86a8 	bhi.w	9000bd6c <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000b01c:	2900      	cmp	r1, #0
9000b01e:	f000 85f6 	beq.w	9000bc0e <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000b022:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b026:	f040 86a5 	bne.w	9000bd74 <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b02a:	49a9      	ldr	r1, [pc, #676]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b02c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b02e:	f001 0103 	and.w	r1, r1, #3
9000b032:	2903      	cmp	r1, #3
9000b034:	f000 869e 	beq.w	9000bd74 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000b038:	2102      	movs	r1, #2
9000b03a:	3008      	adds	r0, #8
9000b03c:	f7ff fefe 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b040:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b042:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b046:	b93e      	cbnz	r6, 9000b058 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b048:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b04a:	4da1      	ldr	r5, [pc, #644]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b04c:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b04e:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b050:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b054:	4301      	orrs	r1, r0
9000b056:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b058:	05d8      	lsls	r0, r3, #23
9000b05a:	d50a      	bpl.n	9000b072 <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b05c:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b05e:	2904      	cmp	r1, #4
9000b060:	d806      	bhi.n	9000b070 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000b062:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b066:	03ff      	.short	0x03ff
9000b068:	0582056d 	.word	0x0582056d
9000b06c:	04040404 	.word	0x04040404
      status = ret;
9000b070:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b072:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b074:	0599      	lsls	r1, r3, #22
9000b076:	d524      	bpl.n	9000b0c2 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b078:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b07a:	2980      	cmp	r1, #128	@ 0x80
9000b07c:	f000 854b 	beq.w	9000bb16 <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000b080:	f200 8687 	bhi.w	9000bd92 <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000b084:	2900      	cmp	r1, #0
9000b086:	f000 85bb 	beq.w	9000bc00 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000b08a:	2940      	cmp	r1, #64	@ 0x40
9000b08c:	f040 8688 	bne.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b090:	498f      	ldr	r1, [pc, #572]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b092:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b094:	f001 0103 	and.w	r1, r1, #3
9000b098:	2903      	cmp	r1, #3
9000b09a:	f000 8681 	beq.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000b09e:	2100      	movs	r1, #0
9000b0a0:	f104 0008 	add.w	r0, r4, #8
9000b0a4:	f7ff feca 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b0a8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b0aa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b0ae:	2d00      	cmp	r5, #0
9000b0b0:	f040 8543 	bne.w	9000bb3a <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b0b4:	4f86      	ldr	r7, [pc, #536]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b0b6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b0b8:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b0ba:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b0be:	4301      	orrs	r1, r0
9000b0c0:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b0c2:	055f      	lsls	r7, r3, #21
9000b0c4:	d528      	bpl.n	9000b118 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b0c6:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b0ca:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b0ce:	f000 855c 	beq.w	9000bb8a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000b0d2:	f200 8652 	bhi.w	9000bd7a <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000b0d6:	2900      	cmp	r1, #0
9000b0d8:	f000 858b 	beq.w	9000bbf2 <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000b0dc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b0e0:	f040 8653 	bne.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b0e4:	497a      	ldr	r1, [pc, #488]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b0e6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b0e8:	f001 0103 	and.w	r1, r1, #3
9000b0ec:	2903      	cmp	r1, #3
9000b0ee:	f000 864c 	beq.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000b0f2:	2100      	movs	r1, #0
9000b0f4:	f104 0008 	add.w	r0, r4, #8
9000b0f8:	f7ff fea0 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b0fc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b0fe:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b102:	2d00      	cmp	r5, #0
9000b104:	f040 8553 	bne.w	9000bbae <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b108:	4f71      	ldr	r7, [pc, #452]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b10a:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b10e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b110:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b114:	4301      	orrs	r1, r0
9000b116:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b118:	0518      	lsls	r0, r3, #20
9000b11a:	d528      	bpl.n	9000b16e <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b11c:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b120:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b124:	f000 8546 	beq.w	9000bbb4 <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000b128:	f200 8614 	bhi.w	9000bd54 <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000b12c:	2900      	cmp	r1, #0
9000b12e:	f000 84d6 	beq.w	9000bade <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000b132:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b136:	f040 8615 	bne.w	9000bd64 <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b13a:	4965      	ldr	r1, [pc, #404]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b13c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b13e:	f001 0103 	and.w	r1, r1, #3
9000b142:	2903      	cmp	r1, #3
9000b144:	f000 860e 	beq.w	9000bd64 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000b148:	2100      	movs	r1, #0
9000b14a:	f104 0008 	add.w	r0, r4, #8
9000b14e:	f7ff fe75 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b152:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b154:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b158:	2d00      	cmp	r5, #0
9000b15a:	f040 84c8 	bne.w	9000baee <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b15e:	4f5c      	ldr	r7, [pc, #368]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b160:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b164:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b166:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b16a:	4301      	orrs	r1, r0
9000b16c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b16e:	0199      	lsls	r1, r3, #6
9000b170:	d518      	bpl.n	9000b1a4 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000b172:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b174:	2920      	cmp	r1, #32
9000b176:	f000 8434 	beq.w	9000b9e2 <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000b17a:	f200 8615 	bhi.w	9000bda8 <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000b17e:	b139      	cbz	r1, 9000b190 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000b180:	2910      	cmp	r1, #16
9000b182:	f040 8614 	bne.w	9000bdae <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b186:	4852      	ldr	r0, [pc, #328]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b188:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b18a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b18e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b190:	2d00      	cmp	r5, #0
9000b192:	f040 83bf 	bne.w	9000b914 <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b196:	4f4e      	ldr	r7, [pc, #312]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b198:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b19a:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b19c:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b1a0:	4301      	orrs	r1, r0
9000b1a2:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b1a4:	04df      	lsls	r7, r3, #19
9000b1a6:	d526      	bpl.n	9000b1f6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b1a8:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b1aa:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b1ae:	f000 84a1 	beq.w	9000baf4 <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000b1b2:	f200 85c3 	bhi.w	9000bd3c <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000b1b6:	2900      	cmp	r1, #0
9000b1b8:	f000 8486 	beq.w	9000bac8 <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000b1bc:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b1c0:	f040 85c4 	bne.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b1c4:	4942      	ldr	r1, [pc, #264]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b1c6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b1c8:	f001 0103 	and.w	r1, r1, #3
9000b1cc:	2903      	cmp	r1, #3
9000b1ce:	f000 85bd 	beq.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000b1d2:	2100      	movs	r1, #0
9000b1d4:	f104 0008 	add.w	r0, r4, #8
9000b1d8:	f7ff fe30 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b1dc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b1de:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b1e2:	2d00      	cmp	r5, #0
9000b1e4:	f040 8478 	bne.w	9000bad8 <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b1e8:	4f39      	ldr	r7, [pc, #228]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b1ea:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b1ec:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b1ee:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b1f2:	4301      	orrs	r1, r0
9000b1f4:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b1f6:	0498      	lsls	r0, r3, #18
9000b1f8:	d524      	bpl.n	9000b244 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b1fa:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b1fc:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b200:	f000 8415 	beq.w	9000ba2e <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000b204:	f200 8556 	bhi.w	9000bcb4 <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000b208:	b191      	cbz	r1, 9000b230 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000b20a:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b20e:	f040 855b 	bne.w	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b212:	492f      	ldr	r1, [pc, #188]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b214:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b216:	f001 0103 	and.w	r1, r1, #3
9000b21a:	2903      	cmp	r1, #3
9000b21c:	f000 8554 	beq.w	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000b220:	2101      	movs	r1, #1
9000b222:	f104 0008 	add.w	r0, r4, #8
9000b226:	f7ff fe09 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b22a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b22c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b230:	2d00      	cmp	r5, #0
9000b232:	f040 838f 	bne.w	9000b954 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b236:	4f26      	ldr	r7, [pc, #152]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b238:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b23a:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b23c:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b240:	4301      	orrs	r1, r0
9000b242:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b244:	0459      	lsls	r1, r3, #17
9000b246:	d526      	bpl.n	9000b296 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b248:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b24c:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b250:	f000 8426 	beq.w	9000baa0 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000b254:	f200 854a 	bhi.w	9000bcec <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000b258:	b191      	cbz	r1, 9000b280 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000b25a:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b25e:	f040 854f 	bne.w	9000bd00 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b262:	491b      	ldr	r1, [pc, #108]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b264:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b266:	f001 0103 	and.w	r1, r1, #3
9000b26a:	2903      	cmp	r1, #3
9000b26c:	f000 8548 	beq.w	9000bd00 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000b270:	2101      	movs	r1, #1
9000b272:	f104 0008 	add.w	r0, r4, #8
9000b276:	f7ff fde1 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b27a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b27c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b280:	2d00      	cmp	r5, #0
9000b282:	f040 835b 	bne.w	9000b93c <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b286:	4f12      	ldr	r7, [pc, #72]	@ (9000b2d0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b288:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b28c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b28e:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b292:	4301      	orrs	r1, r0
9000b294:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b296:	041f      	lsls	r7, r3, #16
9000b298:	d50d      	bpl.n	9000b2b6 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000b29a:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b29c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b2a0:	f000 8260 	beq.w	9000b764 <HAL_RCCEx_PeriphCLKConfig+0x768>
9000b2a4:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b2a8:	f000 8591 	beq.w	9000bdce <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000b2ac:	2900      	cmp	r1, #0
9000b2ae:	f000 825e 	beq.w	9000b76e <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000b2b2:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b2b4:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b2b6:	01d8      	lsls	r0, r3, #7
9000b2b8:	d515      	bpl.n	9000b2e6 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000b2ba:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b2bc:	2903      	cmp	r1, #3
9000b2be:	f200 85b4 	bhi.w	9000be2a <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b2c2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b2c6:	000c      	.short	0x000c
9000b2c8:	03a10007 	.word	0x03a10007
9000b2cc:	000c      	.short	0x000c
9000b2ce:	bf00      	nop
9000b2d0:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b2d4:	4836      	ldr	r0, [pc, #216]	@ (9000b3b0 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b2d6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b2d8:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b2dc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b2de:	2d00      	cmp	r5, #0
9000b2e0:	f000 831a 	beq.w	9000b918 <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000b2e4:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b2e6:	0259      	lsls	r1, r3, #9
9000b2e8:	f100 827a 	bmi.w	9000b7e0 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b2ec:	07df      	lsls	r7, r3, #31
9000b2ee:	d52f      	bpl.n	9000b350 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b2f0:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000b2f2:	2928      	cmp	r1, #40	@ 0x28
9000b2f4:	d82a      	bhi.n	9000b34c <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b2f6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b2fa:	0257      	.short	0x0257
9000b2fc:	00290029 	.word	0x00290029
9000b300:	00290029 	.word	0x00290029
9000b304:	00290029 	.word	0x00290029
9000b308:	02480029 	.word	0x02480029
9000b30c:	00290029 	.word	0x00290029
9000b310:	00290029 	.word	0x00290029
9000b314:	00290029 	.word	0x00290029
9000b318:	04b90029 	.word	0x04b90029
9000b31c:	00290029 	.word	0x00290029
9000b320:	00290029 	.word	0x00290029
9000b324:	00290029 	.word	0x00290029
9000b328:	02570029 	.word	0x02570029
9000b32c:	00290029 	.word	0x00290029
9000b330:	00290029 	.word	0x00290029
9000b334:	00290029 	.word	0x00290029
9000b338:	02570029 	.word	0x02570029
9000b33c:	00290029 	.word	0x00290029
9000b340:	00290029 	.word	0x00290029
9000b344:	00290029 	.word	0x00290029
9000b348:	02570029 	.word	0x02570029
      status = ret;
9000b34c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b34e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b350:	0798      	lsls	r0, r3, #30
9000b352:	d51e      	bpl.n	9000b392 <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000b354:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000b356:	2905      	cmp	r1, #5
9000b358:	f200 8550 	bhi.w	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b35c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b360:	00060015 	.word	0x00060015
9000b364:	00150471 	.word	0x00150471
9000b368:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b36c:	4910      	ldr	r1, [pc, #64]	@ (9000b3b0 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b36e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b370:	f001 0103 	and.w	r1, r1, #3
9000b374:	2903      	cmp	r1, #3
9000b376:	f000 8541 	beq.w	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b37a:	2101      	movs	r1, #1
9000b37c:	f104 0008 	add.w	r0, r4, #8
9000b380:	f7ff fd5c 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b384:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b386:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b38a:	2d00      	cmp	r5, #0
9000b38c:	f000 82cc 	beq.w	9000b928 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000b390:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b392:	0759      	lsls	r1, r3, #29
9000b394:	d521      	bpl.n	9000b3da <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000b396:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000b39a:	2905      	cmp	r1, #5
9000b39c:	f200 852a 	bhi.w	9000bdf4 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b3a0:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b3a4:	00080017 	.word	0x00080017
9000b3a8:	0017043c 	.word	0x0017043c
9000b3ac:	00170017 	.word	0x00170017
9000b3b0:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3b4:	49ae      	ldr	r1, [pc, #696]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b3b6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3b8:	f001 0103 	and.w	r1, r1, #3
9000b3bc:	2903      	cmp	r1, #3
9000b3be:	f000 8519 	beq.w	9000bdf4 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b3c2:	2101      	movs	r1, #1
9000b3c4:	f104 0008 	add.w	r0, r4, #8
9000b3c8:	f7ff fd38 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b3cc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b3ce:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b3d2:	2d00      	cmp	r5, #0
9000b3d4:	f000 82c2 	beq.w	9000b95c <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000b3d8:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b3da:	069f      	lsls	r7, r3, #26
9000b3dc:	d526      	bpl.n	9000b42c <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000b3de:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000b3e2:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b3e6:	f000 82c6 	beq.w	9000b976 <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000b3ea:	f200 8455 	bhi.w	9000bc98 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000b3ee:	b191      	cbz	r1, 9000b416 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000b3f0:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b3f4:	f040 845a 	bne.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3f8:	499d      	ldr	r1, [pc, #628]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b3fa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3fc:	f001 0103 	and.w	r1, r1, #3
9000b400:	2903      	cmp	r1, #3
9000b402:	f000 8453 	beq.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000b406:	2100      	movs	r1, #0
9000b408:	f104 0008 	add.w	r0, r4, #8
9000b40c:	f7ff fd16 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b410:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b412:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b416:	2d00      	cmp	r5, #0
9000b418:	f040 828e 	bne.w	9000b938 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000b41c:	4f94      	ldr	r7, [pc, #592]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b41e:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000b422:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b424:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b428:	4301      	orrs	r1, r0
9000b42a:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b42c:	0658      	lsls	r0, r3, #25
9000b42e:	d526      	bpl.n	9000b47e <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000b430:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000b434:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000b438:	f000 82af 	beq.w	9000b99a <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000b43c:	f200 8464 	bhi.w	9000bd08 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000b440:	b191      	cbz	r1, 9000b468 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000b442:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000b446:	f040 8469 	bne.w	9000bd1c <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b44a:	4989      	ldr	r1, [pc, #548]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b44c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b44e:	f001 0103 	and.w	r1, r1, #3
9000b452:	2903      	cmp	r1, #3
9000b454:	f000 8462 	beq.w	9000bd1c <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000b458:	2100      	movs	r1, #0
9000b45a:	f104 0008 	add.w	r0, r4, #8
9000b45e:	f7ff fced 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b462:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b464:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b468:	2d00      	cmp	r5, #0
9000b46a:	f040 8269 	bne.w	9000b940 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000b46e:	4f80      	ldr	r7, [pc, #512]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b470:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000b474:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b476:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000b47a:	4301      	orrs	r1, r0
9000b47c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b47e:	0619      	lsls	r1, r3, #24
9000b480:	d526      	bpl.n	9000b4d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000b482:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000b486:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b48a:	f000 8298 	beq.w	9000b9be <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000b48e:	f200 841f 	bhi.w	9000bcd0 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000b492:	b191      	cbz	r1, 9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000b494:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b498:	f040 8424 	bne.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b49c:	4974      	ldr	r1, [pc, #464]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b49e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b4a0:	f001 0103 	and.w	r1, r1, #3
9000b4a4:	2903      	cmp	r1, #3
9000b4a6:	f000 841d 	beq.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000b4aa:	2100      	movs	r1, #0
9000b4ac:	f104 0008 	add.w	r0, r4, #8
9000b4b0:	f7ff fcc4 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b4b4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b4b6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4ba:	2d00      	cmp	r5, #0
9000b4bc:	f040 8244 	bne.w	9000b948 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000b4c0:	4f6b      	ldr	r7, [pc, #428]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b4c2:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000b4c6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b4c8:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000b4cc:	4301      	orrs	r1, r0
9000b4ce:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b4d0:	071f      	lsls	r7, r3, #28
9000b4d2:	d50b      	bpl.n	9000b4ec <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000b4d4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000b4d8:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000b4dc:	f000 81d4 	beq.w	9000b888 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b4e0:	4f63      	ldr	r7, [pc, #396]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b4e2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b4e4:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000b4e8:	4301      	orrs	r1, r0
9000b4ea:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b4ec:	06d8      	lsls	r0, r3, #27
9000b4ee:	d50b      	bpl.n	9000b508 <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000b4f0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000b4f4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000b4f8:	f000 81db 	beq.w	9000b8b2 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b4fc:	4f5c      	ldr	r7, [pc, #368]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b4fe:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b500:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000b504:	4301      	orrs	r1, r0
9000b506:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b508:	0319      	lsls	r1, r3, #12
9000b50a:	d524      	bpl.n	9000b556 <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000b50c:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000b510:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b514:	f000 82b1 	beq.w	9000ba7a <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000b518:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b51c:	d010      	beq.n	9000b540 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000b51e:	2900      	cmp	r1, #0
9000b520:	f040 8130 	bne.w	9000b784 <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b524:	4852      	ldr	r0, [pc, #328]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b526:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000b528:	f000 0003 	and.w	r0, r0, #3
9000b52c:	2803      	cmp	r0, #3
9000b52e:	f000 8129 	beq.w	9000b784 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000b532:	f104 0008 	add.w	r0, r4, #8
9000b536:	f7ff fc81 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b53a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b53c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b540:	2d00      	cmp	r5, #0
9000b542:	f040 81ff 	bne.w	9000b944 <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000b546:	4f4a      	ldr	r7, [pc, #296]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b548:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000b54c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b54e:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000b552:	4301      	orrs	r1, r0
9000b554:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b556:	035f      	lsls	r7, r3, #13
9000b558:	d50f      	bpl.n	9000b57a <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000b55a:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000b55e:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b562:	f000 8277 	beq.w	9000ba54 <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000b566:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b56a:	f000 812d 	beq.w	9000b7c8 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000b56e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b572:	f000 8124 	beq.w	9000b7be <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000b576:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b578:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000b57a:	03d8      	lsls	r0, r3, #15
9000b57c:	d520      	bpl.n	9000b5c0 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000b57e:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000b580:	2900      	cmp	r1, #0
9000b582:	f000 81aa 	beq.w	9000b8da <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000b586:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b58a:	f040 80e8 	bne.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b58e:	4938      	ldr	r1, [pc, #224]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b590:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b592:	f001 0103 	and.w	r1, r1, #3
9000b596:	2903      	cmp	r1, #3
9000b598:	f000 80e1 	beq.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x762>
9000b59c:	2102      	movs	r1, #2
9000b59e:	f104 0008 	add.w	r0, r4, #8
9000b5a2:	f7ff fc4b 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b5a6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b5a8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b5ac:	2d00      	cmp	r5, #0
9000b5ae:	f040 819c 	bne.w	9000b8ea <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000b5b2:	4f2f      	ldr	r7, [pc, #188]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b5b4:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000b5b6:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b5b8:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000b5bc:	4301      	orrs	r1, r0
9000b5be:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b5c0:	0099      	lsls	r1, r3, #2
9000b5c2:	d50e      	bpl.n	9000b5e2 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b5c4:	492a      	ldr	r1, [pc, #168]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b5c6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b5c8:	f001 0103 	and.w	r1, r1, #3
9000b5cc:	2903      	cmp	r1, #3
9000b5ce:	d007      	beq.n	9000b5e0 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000b5d0:	2102      	movs	r1, #2
9000b5d2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b5d6:	f7ff fca1 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b5da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b5de:	b100      	cbz	r0, 9000b5e2 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000b5e0:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b5e2:	039f      	lsls	r7, r3, #14
9000b5e4:	f100 80ab 	bmi.w	9000b73e <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000b5e8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000b5ea:	02d8      	lsls	r0, r3, #11
9000b5ec:	d506      	bpl.n	9000b5fc <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000b5ee:	4820      	ldr	r0, [pc, #128]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b5f0:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000b5f2:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b5f4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000b5f8:	4331      	orrs	r1, r6
9000b5fa:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000b5fc:	00d9      	lsls	r1, r3, #3
9000b5fe:	d507      	bpl.n	9000b610 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000b600:	481b      	ldr	r0, [pc, #108]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b602:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000b606:	6901      	ldr	r1, [r0, #16]
9000b608:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000b60c:	4331      	orrs	r1, r6
9000b60e:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000b610:	029f      	lsls	r7, r3, #10
9000b612:	d506      	bpl.n	9000b622 <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000b614:	4816      	ldr	r0, [pc, #88]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b616:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000b618:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b61a:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000b61e:	4331      	orrs	r1, r6
9000b620:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000b622:	005e      	lsls	r6, r3, #1
9000b624:	d509      	bpl.n	9000b63a <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000b626:	4912      	ldr	r1, [pc, #72]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b628:	6908      	ldr	r0, [r1, #16]
9000b62a:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000b62e:	6108      	str	r0, [r1, #16]
9000b630:	6908      	ldr	r0, [r1, #16]
9000b632:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000b636:	4330      	orrs	r0, r6
9000b638:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000b63a:	2b00      	cmp	r3, #0
9000b63c:	da06      	bge.n	9000b64c <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000b63e:	480c      	ldr	r0, [pc, #48]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b640:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000b642:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000b644:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b648:	4331      	orrs	r1, r6
9000b64a:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000b64c:	0218      	lsls	r0, r3, #8
9000b64e:	d507      	bpl.n	9000b660 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000b650:	4907      	ldr	r1, [pc, #28]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b652:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000b656:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000b658:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000b65c:	4303      	orrs	r3, r0
9000b65e:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000b660:	07d1      	lsls	r1, r2, #31
9000b662:	d511      	bpl.n	9000b688 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b664:	4b02      	ldr	r3, [pc, #8]	@ (9000b670 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b666:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b668:	f003 0303 	and.w	r3, r3, #3
9000b66c:	2b03      	cmp	r3, #3
9000b66e:	e001      	b.n	9000b674 <HAL_RCCEx_PeriphCLKConfig+0x678>
9000b670:	58024400 	.word	0x58024400
9000b674:	f000 835c 	beq.w	9000bd30 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000b678:	2100      	movs	r1, #0
9000b67a:	f104 0008 	add.w	r0, r4, #8
9000b67e:	f7ff fbdd 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b682:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b684:	b100      	cbz	r0, 9000b688 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b686:	4605      	mov	r5, r0
9000b688:	0793      	lsls	r3, r2, #30
9000b68a:	d50e      	bpl.n	9000b6aa <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b68c:	4baf      	ldr	r3, [pc, #700]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b68e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b690:	f003 0303 	and.w	r3, r3, #3
9000b694:	2b03      	cmp	r3, #3
9000b696:	f000 834d 	beq.w	9000bd34 <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000b69a:	2101      	movs	r1, #1
9000b69c:	f104 0008 	add.w	r0, r4, #8
9000b6a0:	f7ff fbcc 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b6a4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b6a6:	b100      	cbz	r0, 9000b6aa <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b6a8:	4605      	mov	r5, r0
9000b6aa:	0757      	lsls	r7, r2, #29
9000b6ac:	d50e      	bpl.n	9000b6cc <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6ae:	4ba7      	ldr	r3, [pc, #668]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b6b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b6b2:	f003 0303 	and.w	r3, r3, #3
9000b6b6:	2b03      	cmp	r3, #3
9000b6b8:	f000 833e 	beq.w	9000bd38 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000b6bc:	2102      	movs	r1, #2
9000b6be:	f104 0008 	add.w	r0, r4, #8
9000b6c2:	f7ff fbbb 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000b6c6:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b6c8:	b100      	cbz	r0, 9000b6cc <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000b6ca:	4605      	mov	r5, r0
9000b6cc:	0716      	lsls	r6, r2, #28
9000b6ce:	d50e      	bpl.n	9000b6ee <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6d0:	4b9e      	ldr	r3, [pc, #632]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b6d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b6d4:	f003 0303 	and.w	r3, r3, #3
9000b6d8:	2b03      	cmp	r3, #3
9000b6da:	f000 8323 	beq.w	9000bd24 <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000b6de:	2100      	movs	r1, #0
9000b6e0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b6e4:	f7ff fc1a 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000b6e8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b6ea:	b100      	cbz	r0, 9000b6ee <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000b6ec:	4605      	mov	r5, r0
9000b6ee:	06d0      	lsls	r0, r2, #27
9000b6f0:	d50f      	bpl.n	9000b712 <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6f2:	4b96      	ldr	r3, [pc, #600]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b6f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b6f6:	f003 0303 	and.w	r3, r3, #3
9000b6fa:	2b03      	cmp	r3, #3
9000b6fc:	f000 8314 	beq.w	9000bd28 <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000b700:	2101      	movs	r1, #1
9000b702:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b706:	f7ff fc09 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000b70a:	2800      	cmp	r0, #0
9000b70c:	f040 8359 	bne.w	9000bdc2 <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000b710:	6862      	ldr	r2, [r4, #4]
9000b712:	0693      	lsls	r3, r2, #26
9000b714:	d50e      	bpl.n	9000b734 <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b716:	4b8d      	ldr	r3, [pc, #564]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b718:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b71a:	f003 0303 	and.w	r3, r3, #3
9000b71e:	2b03      	cmp	r3, #3
9000b720:	f000 82b7 	beq.w	9000bc92 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000b724:	2102      	movs	r1, #2
9000b726:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b72a:	f7ff fbf7 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000b72e:	2800      	cmp	r0, #0
9000b730:	f040 82af 	bne.w	9000bc92 <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000b734:	1e28      	subs	r0, r5, #0
9000b736:	bf18      	it	ne
9000b738:	2001      	movne	r0, #1
}
9000b73a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000b73e:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000b742:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000b746:	f000 80d2 	beq.w	9000b8ee <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000b74a:	f240 8110 	bls.w	9000b96e <HAL_RCCEx_PeriphCLKConfig+0x972>
9000b74e:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000b752:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000b756:	f000 80cf 	beq.w	9000b8f8 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000b75a:	2501      	movs	r5, #1
9000b75c:	e745      	b.n	9000b5ea <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000b75e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b760:	4635      	mov	r5, r6
9000b762:	e72d      	b.n	9000b5c0 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b764:	4879      	ldr	r0, [pc, #484]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b766:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b768:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b76c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b76e:	2d00      	cmp	r5, #0
9000b770:	f040 80ce 	bne.w	9000b910 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000b774:	4f75      	ldr	r7, [pc, #468]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b776:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000b778:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b77a:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b77e:	4301      	orrs	r1, r0
9000b780:	6539      	str	r1, [r7, #80]	@ 0x50
9000b782:	e598      	b.n	9000b2b6 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000b784:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b786:	4635      	mov	r5, r6
9000b788:	e6e5      	b.n	9000b556 <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b78a:	4970      	ldr	r1, [pc, #448]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b78c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b78e:	f001 0103 	and.w	r1, r1, #3
9000b792:	2903      	cmp	r1, #3
9000b794:	f43f adda 	beq.w	9000b34c <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b798:	2101      	movs	r1, #1
9000b79a:	f104 0008 	add.w	r0, r4, #8
9000b79e:	f7ff fb4d 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b7a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b7a4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7a8:	2d00      	cmp	r5, #0
9000b7aa:	f040 80d5 	bne.w	9000b958 <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000b7ae:	4f67      	ldr	r7, [pc, #412]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b7b0:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000b7b2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b7b4:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000b7b8:	4301      	orrs	r1, r0
9000b7ba:	6579      	str	r1, [r7, #84]	@ 0x54
9000b7bc:	e5c8      	b.n	9000b350 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b7be:	4863      	ldr	r0, [pc, #396]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b7c0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b7c2:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b7c6:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b7c8:	2d00      	cmp	r5, #0
9000b7ca:	f040 809f 	bne.w	9000b90c <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000b7ce:	4f5f      	ldr	r7, [pc, #380]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b7d0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000b7d4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b7d6:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000b7da:	4301      	orrs	r1, r0
9000b7dc:	6579      	str	r1, [r7, #84]	@ 0x54
9000b7de:	e6cc      	b.n	9000b57a <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000b7e0:	4f5b      	ldr	r7, [pc, #364]	@ (9000b950 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000b7e2:	683b      	ldr	r3, [r7, #0]
9000b7e4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b7e8:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000b7ea:	f7fa ff59 	bl	900066a0 <HAL_GetTick>
9000b7ee:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b7f0:	e006      	b.n	9000b800 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b7f2:	f7fa ff55 	bl	900066a0 <HAL_GetTick>
9000b7f6:	eba0 0008 	sub.w	r0, r0, r8
9000b7fa:	2864      	cmp	r0, #100	@ 0x64
9000b7fc:	f200 82db 	bhi.w	9000bdb6 <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b800:	683b      	ldr	r3, [r7, #0]
9000b802:	05da      	lsls	r2, r3, #23
9000b804:	d5f5      	bpl.n	9000b7f2 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000b806:	2d00      	cmp	r5, #0
9000b808:	f040 82d6 	bne.w	9000bdb8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000b80c:	4a4f      	ldr	r2, [pc, #316]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b80e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000b812:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000b814:	4059      	eors	r1, r3
9000b816:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000b81a:	d00b      	beq.n	9000b834 <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000b81c:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000b81e:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000b820:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000b824:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000b828:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000b82a:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000b82c:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000b830:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000b832:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000b834:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000b838:	f000 82fb 	beq.w	9000be32 <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000b83c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000b840:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000b844:	f000 8309 	beq.w	9000be5a <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000b848:	4940      	ldr	r1, [pc, #256]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b84a:	690a      	ldr	r2, [r1, #16]
9000b84c:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000b850:	610a      	str	r2, [r1, #16]
9000b852:	483e      	ldr	r0, [pc, #248]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b854:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000b858:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000b85a:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b85c:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000b860:	6701      	str	r1, [r0, #112]	@ 0x70
9000b862:	e543      	b.n	9000b2ec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b864:	4839      	ldr	r0, [pc, #228]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b866:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b868:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b86c:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000b86e:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000b870:	2d00      	cmp	r5, #0
9000b872:	f040 8177 	bne.w	9000bb64 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000b876:	4f35      	ldr	r7, [pc, #212]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b878:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000b87a:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b87c:	f021 0107 	bic.w	r1, r1, #7
9000b880:	4301      	orrs	r1, r0
9000b882:	6539      	str	r1, [r7, #80]	@ 0x50
9000b884:	f7ff bbf6 	b.w	9000b074 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b888:	4930      	ldr	r1, [pc, #192]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b88a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b88c:	f001 0103 	and.w	r1, r1, #3
9000b890:	2903      	cmp	r1, #3
9000b892:	f000 82ba 	beq.w	9000be0a <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000b896:	2102      	movs	r1, #2
9000b898:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b89c:	f7ff fb3e 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b8a0:	2800      	cmp	r0, #0
9000b8a2:	f000 82b5 	beq.w	9000be10 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b8a6:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000b8aa:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b8ac:	e9d4 3200 	ldrd	r3, r2, [r4]
9000b8b0:	e616      	b.n	9000b4e0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8b2:	4926      	ldr	r1, [pc, #152]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b8b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b8b6:	f001 0103 	and.w	r1, r1, #3
9000b8ba:	2903      	cmp	r1, #3
9000b8bc:	f000 82a2 	beq.w	9000be04 <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000b8c0:	2102      	movs	r1, #2
9000b8c2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b8c6:	f7ff fb29 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b8ca:	2800      	cmp	r0, #0
9000b8cc:	f040 82a6 	bne.w	9000be1c <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b8d0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b8d4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000b8d8:	e610      	b.n	9000b4fc <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b8da:	481c      	ldr	r0, [pc, #112]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b8dc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b8de:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b8e2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b8e4:	2d00      	cmp	r5, #0
9000b8e6:	f43f ae64 	beq.w	9000b5b2 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000b8ea:	462e      	mov	r6, r5
9000b8ec:	e668      	b.n	9000b5c0 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b8ee:	4f17      	ldr	r7, [pc, #92]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b8f0:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000b8f2:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000b8f6:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b8f8:	2d00      	cmp	r5, #0
9000b8fa:	f47f ae76 	bne.w	9000b5ea <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000b8fe:	4d13      	ldr	r5, [pc, #76]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b900:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000b902:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000b906:	4301      	orrs	r1, r0
9000b908:	6569      	str	r1, [r5, #84]	@ 0x54
9000b90a:	e66d      	b.n	9000b5e8 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000b90c:	462e      	mov	r6, r5
9000b90e:	e634      	b.n	9000b57a <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000b910:	462e      	mov	r6, r5
9000b912:	e4d0      	b.n	9000b2b6 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000b914:	462e      	mov	r6, r5
9000b916:	e445      	b.n	9000b1a4 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000b918:	4f0c      	ldr	r7, [pc, #48]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b91a:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000b91c:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b91e:	f021 0103 	bic.w	r1, r1, #3
9000b922:	4301      	orrs	r1, r0
9000b924:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000b926:	e4de      	b.n	9000b2e6 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000b928:	4f08      	ldr	r7, [pc, #32]	@ (9000b94c <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b92a:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000b92c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b92e:	f021 0107 	bic.w	r1, r1, #7
9000b932:	4301      	orrs	r1, r0
9000b934:	6579      	str	r1, [r7, #84]	@ 0x54
9000b936:	e52c      	b.n	9000b392 <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000b938:	462e      	mov	r6, r5
9000b93a:	e577      	b.n	9000b42c <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000b93c:	462e      	mov	r6, r5
9000b93e:	e4aa      	b.n	9000b296 <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000b940:	462e      	mov	r6, r5
9000b942:	e59c      	b.n	9000b47e <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000b944:	462e      	mov	r6, r5
9000b946:	e606      	b.n	9000b556 <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000b948:	462e      	mov	r6, r5
9000b94a:	e5c1      	b.n	9000b4d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000b94c:	58024400 	.word	0x58024400
9000b950:	58024800 	.word	0x58024800
      status = ret;
9000b954:	462e      	mov	r6, r5
9000b956:	e475      	b.n	9000b244 <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000b958:	462e      	mov	r6, r5
9000b95a:	e4f9      	b.n	9000b350 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000b95c:	4fc2      	ldr	r7, [pc, #776]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000b95e:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000b962:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b964:	f021 0107 	bic.w	r1, r1, #7
9000b968:	4301      	orrs	r1, r0
9000b96a:	65b9      	str	r1, [r7, #88]	@ 0x58
9000b96c:	e535      	b.n	9000b3da <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000b96e:	2900      	cmp	r1, #0
9000b970:	f47f aef3 	bne.w	9000b75a <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000b974:	e7c0      	b.n	9000b8f8 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b976:	49bc      	ldr	r1, [pc, #752]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000b978:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b97a:	f001 0103 	and.w	r1, r1, #3
9000b97e:	2903      	cmp	r1, #3
9000b980:	f000 8194 	beq.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000b984:	2102      	movs	r1, #2
9000b986:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b98a:	f7ff fac7 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000b98e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b990:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b994:	2d00      	cmp	r5, #0
9000b996:	d1cf      	bne.n	9000b938 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000b998:	e540      	b.n	9000b41c <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b99a:	49b3      	ldr	r1, [pc, #716]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000b99c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b99e:	f001 0103 	and.w	r1, r1, #3
9000b9a2:	2903      	cmp	r1, #3
9000b9a4:	f000 81ba 	beq.w	9000bd1c <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000b9a8:	2102      	movs	r1, #2
9000b9aa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b9ae:	f7ff fab5 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000b9b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b9b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b9b8:	2d00      	cmp	r5, #0
9000b9ba:	d1c1      	bne.n	9000b940 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000b9bc:	e557      	b.n	9000b46e <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9be:	49aa      	ldr	r1, [pc, #680]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000b9c0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b9c2:	f001 0103 	and.w	r1, r1, #3
9000b9c6:	2903      	cmp	r1, #3
9000b9c8:	f000 818c 	beq.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000b9cc:	2102      	movs	r1, #2
9000b9ce:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b9d2:	f7ff faa3 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000b9d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b9d8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b9dc:	2d00      	cmp	r5, #0
9000b9de:	d1b3      	bne.n	9000b948 <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000b9e0:	e56e      	b.n	9000b4c0 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9e2:	49a1      	ldr	r1, [pc, #644]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000b9e4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b9e6:	f001 0103 	and.w	r1, r1, #3
9000b9ea:	2903      	cmp	r1, #3
9000b9ec:	f000 81df 	beq.w	9000bdae <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000b9f0:	2102      	movs	r1, #2
9000b9f2:	f104 0008 	add.w	r0, r4, #8
9000b9f6:	f7ff fa21 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000b9fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b9fc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba00:	2d00      	cmp	r5, #0
9000ba02:	d187      	bne.n	9000b914 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000ba04:	f7ff bbc7 	b.w	9000b196 <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba08:	4997      	ldr	r1, [pc, #604]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ba0a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ba0c:	f001 0103 	and.w	r1, r1, #3
9000ba10:	2903      	cmp	r1, #3
9000ba12:	f000 820a 	beq.w	9000be2a <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000ba16:	2102      	movs	r1, #2
9000ba18:	f104 0008 	add.w	r0, r4, #8
9000ba1c:	f7ff fa0e 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000ba20:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ba22:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba26:	2d00      	cmp	r5, #0
9000ba28:	f47f ac5c 	bne.w	9000b2e4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000ba2c:	e774      	b.n	9000b918 <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba2e:	498e      	ldr	r1, [pc, #568]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ba30:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ba32:	f001 0103 	and.w	r1, r1, #3
9000ba36:	2903      	cmp	r1, #3
9000ba38:	f000 8146 	beq.w	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000ba3c:	2101      	movs	r1, #1
9000ba3e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba42:	f7ff fa6b 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000ba46:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ba48:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba4c:	2d00      	cmp	r5, #0
9000ba4e:	d181      	bne.n	9000b954 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000ba50:	f7ff bbf1 	b.w	9000b236 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba54:	4984      	ldr	r1, [pc, #528]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ba56:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ba58:	f001 0103 	and.w	r1, r1, #3
9000ba5c:	2903      	cmp	r1, #3
9000ba5e:	f43f ad8a 	beq.w	9000b576 <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000ba62:	2101      	movs	r1, #1
9000ba64:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba68:	f7ff fa58 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000ba6c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ba6e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba72:	2d00      	cmp	r5, #0
9000ba74:	f47f af4a 	bne.w	9000b90c <HAL_RCCEx_PeriphCLKConfig+0x910>
9000ba78:	e6a9      	b.n	9000b7ce <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba7a:	497b      	ldr	r1, [pc, #492]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ba7c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ba7e:	f001 0103 	and.w	r1, r1, #3
9000ba82:	2903      	cmp	r1, #3
9000ba84:	f43f ae7e 	beq.w	9000b784 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000ba88:	2102      	movs	r1, #2
9000ba8a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba8e:	f7ff fa45 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000ba92:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ba94:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba98:	2d00      	cmp	r5, #0
9000ba9a:	f47f af53 	bne.w	9000b944 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000ba9e:	e552      	b.n	9000b546 <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000baa0:	4971      	ldr	r1, [pc, #452]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000baa2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000baa4:	f001 0103 	and.w	r1, r1, #3
9000baa8:	2903      	cmp	r1, #3
9000baaa:	f000 8129 	beq.w	9000bd00 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000baae:	2101      	movs	r1, #1
9000bab0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bab4:	f7ff fa32 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bab8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000baba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000babe:	2d00      	cmp	r5, #0
9000bac0:	f47f af3c 	bne.w	9000b93c <HAL_RCCEx_PeriphCLKConfig+0x940>
9000bac4:	f7ff bbdf 	b.w	9000b286 <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bac8:	4867      	ldr	r0, [pc, #412]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000baca:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bacc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bad0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bad2:	2d00      	cmp	r5, #0
9000bad4:	f43f ab88 	beq.w	9000b1e8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000bad8:	462e      	mov	r6, r5
9000bada:	f7ff bb8c 	b.w	9000b1f6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bade:	4862      	ldr	r0, [pc, #392]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bae0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bae2:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bae6:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bae8:	2d00      	cmp	r5, #0
9000baea:	f43f ab38 	beq.w	9000b15e <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000baee:	462e      	mov	r6, r5
9000baf0:	f7ff bb3d 	b.w	9000b16e <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000baf4:	495c      	ldr	r1, [pc, #368]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000baf6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000baf8:	f001 0103 	and.w	r1, r1, #3
9000bafc:	2903      	cmp	r1, #3
9000bafe:	f000 8125 	beq.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000bb02:	2100      	movs	r1, #0
9000bb04:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb08:	f7ff fa08 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bb0c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bb0e:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bb12:	f7ff bb66 	b.w	9000b1e2 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb16:	4954      	ldr	r1, [pc, #336]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bb18:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb1a:	f001 0103 	and.w	r1, r1, #3
9000bb1e:	2903      	cmp	r1, #3
9000bb20:	f000 813e 	beq.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000bb24:	2100      	movs	r1, #0
9000bb26:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb2a:	f7ff f9f7 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bb2e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bb30:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb34:	2d00      	cmp	r5, #0
9000bb36:	f43f aabd 	beq.w	9000b0b4 <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000bb3a:	462e      	mov	r6, r5
9000bb3c:	f7ff bac1 	b.w	9000b0c2 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb40:	4949      	ldr	r1, [pc, #292]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bb42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb44:	f001 0103 	and.w	r1, r1, #3
9000bb48:	2903      	cmp	r1, #3
9000bb4a:	f43f aa91 	beq.w	9000b070 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000bb4e:	2100      	movs	r1, #0
9000bb50:	f104 0008 	add.w	r0, r4, #8
9000bb54:	f7ff f972 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000bb58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bb5a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb5e:	2d00      	cmp	r5, #0
9000bb60:	f43f ae89 	beq.w	9000b876 <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000bb64:	462e      	mov	r6, r5
9000bb66:	f7ff ba85 	b.w	9000b074 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb6a:	493f      	ldr	r1, [pc, #252]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bb6c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb6e:	f001 0103 	and.w	r1, r1, #3
9000bb72:	2903      	cmp	r1, #3
9000bb74:	f43f aa7c 	beq.w	9000b070 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000bb78:	2100      	movs	r1, #0
9000bb7a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb7e:	f7ff f9cd 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bb82:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bb84:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bb88:	e672      	b.n	9000b870 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb8a:	4937      	ldr	r1, [pc, #220]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bb8c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb8e:	f001 0103 	and.w	r1, r1, #3
9000bb92:	2903      	cmp	r1, #3
9000bb94:	f000 80f9 	beq.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000bb98:	2100      	movs	r1, #0
9000bb9a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb9e:	f7ff f9bd 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bba2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bba4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bba8:	2d00      	cmp	r5, #0
9000bbaa:	f43f aaad 	beq.w	9000b108 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000bbae:	462e      	mov	r6, r5
9000bbb0:	f7ff bab2 	b.w	9000b118 <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbb4:	492c      	ldr	r1, [pc, #176]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bbb6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bbb8:	f001 0103 	and.w	r1, r1, #3
9000bbbc:	2903      	cmp	r1, #3
9000bbbe:	f000 80d1 	beq.w	9000bd64 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000bbc2:	2100      	movs	r1, #0
9000bbc4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bbc8:	f7ff f9a8 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bbcc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bbce:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bbd2:	f7ff bac1 	b.w	9000b158 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbd6:	4924      	ldr	r1, [pc, #144]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bbd8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bbda:	f001 0103 	and.w	r1, r1, #3
9000bbde:	2903      	cmp	r1, #3
9000bbe0:	f000 80c8 	beq.w	9000bd74 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000bbe4:	2102      	movs	r1, #2
9000bbe6:	3028      	adds	r0, #40	@ 0x28
9000bbe8:	f7ff f998 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bbec:	4606      	mov	r6, r0
        break;
9000bbee:	f7ff ba28 	b.w	9000b042 <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bbf2:	481d      	ldr	r0, [pc, #116]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bbf4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bbf6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bbfa:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bbfc:	f7ff ba81 	b.w	9000b102 <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc00:	4819      	ldr	r0, [pc, #100]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc02:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc04:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc08:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bc0a:	f7ff ba50 	b.w	9000b0ae <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc0e:	4d16      	ldr	r5, [pc, #88]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc10:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000bc12:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bc16:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc18:	f7ff ba17 	b.w	9000b04a <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc1c:	4912      	ldr	r1, [pc, #72]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc1e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc20:	f001 0103 	and.w	r1, r1, #3
9000bc24:	2903      	cmp	r1, #3
9000bc26:	f000 80e5 	beq.w	9000bdf4 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000bc2a:	2101      	movs	r1, #1
9000bc2c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc30:	f7ff f974 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bc34:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bc36:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc3a:	2d00      	cmp	r5, #0
9000bc3c:	f47f abcc 	bne.w	9000b3d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000bc40:	e68c      	b.n	9000b95c <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc42:	4909      	ldr	r1, [pc, #36]	@ (9000bc68 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc44:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc46:	f001 0103 	and.w	r1, r1, #3
9000bc4a:	2903      	cmp	r1, #3
9000bc4c:	f000 80d6 	beq.w	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000bc50:	2101      	movs	r1, #1
9000bc52:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc56:	f7ff f961 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bc5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bc5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc60:	2d00      	cmp	r5, #0
9000bc62:	f47f ab95 	bne.w	9000b390 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000bc66:	e65f      	b.n	9000b928 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000bc68:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc6c:	4983      	ldr	r1, [pc, #524]	@ (9000be7c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000bc6e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc70:	f001 0103 	and.w	r1, r1, #3
9000bc74:	2903      	cmp	r1, #3
9000bc76:	f43f ab69 	beq.w	9000b34c <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bc7a:	2101      	movs	r1, #1
9000bc7c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc80:	f7ff f94c 	bl	9000af1c <RCCEx_PLL3_Config.part.0>
9000bc84:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bc86:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc8a:	2d00      	cmp	r5, #0
9000bc8c:	f47f ae64 	bne.w	9000b958 <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000bc90:	e58d      	b.n	9000b7ae <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000bc92:	2001      	movs	r0, #1
}
9000bc94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bc98:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bc9c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bca0:	f43f abb9 	beq.w	9000b416 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000bca4:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bca8:	f43f abb5 	beq.w	9000b416 <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000bcac:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bcae:	4635      	mov	r5, r6
9000bcb0:	f7ff bbbc 	b.w	9000b42c <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bcb4:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000bcb8:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000bcbc:	f43f aab8 	beq.w	9000b230 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000bcc0:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000bcc4:	f43f aab4 	beq.w	9000b230 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000bcc8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bcca:	4635      	mov	r5, r6
9000bccc:	f7ff baba 	b.w	9000b244 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bcd0:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000bcd4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000bcd8:	f43f abef 	beq.w	9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000bcdc:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000bce0:	f43f abeb 	beq.w	9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000bce4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bce6:	4635      	mov	r5, r6
9000bce8:	f7ff bbf2 	b.w	9000b4d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bcec:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bcf0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bcf4:	f43f aac4 	beq.w	9000b280 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000bcf8:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bcfc:	f43f aac0 	beq.w	9000b280 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000bd00:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bd02:	4635      	mov	r5, r6
9000bd04:	f7ff bac7 	b.w	9000b296 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bd08:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000bd0c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000bd10:	f43f abaa 	beq.w	9000b468 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000bd14:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000bd18:	f43f aba6 	beq.w	9000b468 <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000bd1c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bd1e:	4635      	mov	r5, r6
9000bd20:	f7ff bbad 	b.w	9000b47e <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000bd24:	2501      	movs	r5, #1
9000bd26:	e4e2      	b.n	9000b6ee <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bd28:	0691      	lsls	r1, r2, #26
9000bd2a:	d5b2      	bpl.n	9000bc92 <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000bd2c:	2501      	movs	r5, #1
9000bd2e:	e4f2      	b.n	9000b716 <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000bd30:	2501      	movs	r5, #1
9000bd32:	e4a9      	b.n	9000b688 <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000bd34:	2501      	movs	r5, #1
9000bd36:	e4b8      	b.n	9000b6aa <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000bd38:	2501      	movs	r5, #1
9000bd3a:	e4c7      	b.n	9000b6cc <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bd3c:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000bd40:	f43f aa4f 	beq.w	9000b1e2 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000bd44:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000bd48:	f43f aa4b 	beq.w	9000b1e2 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000bd4c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bd4e:	4635      	mov	r5, r6
9000bd50:	f7ff ba51 	b.w	9000b1f6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bd54:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000bd58:	f43f a9fe 	beq.w	9000b158 <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000bd5c:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000bd60:	f43f a9fa 	beq.w	9000b158 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000bd64:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bd66:	4635      	mov	r5, r6
9000bd68:	f7ff ba01 	b.w	9000b16e <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bd6c:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000bd70:	f43f a96b 	beq.w	9000b04a <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000bd74:	2601      	movs	r6, #1
9000bd76:	f7ff b96f 	b.w	9000b058 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bd7a:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000bd7e:	f43f a9c0 	beq.w	9000b102 <HAL_RCCEx_PeriphCLKConfig+0x106>
9000bd82:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000bd86:	f43f a9bc 	beq.w	9000b102 <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000bd8a:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bd8c:	4635      	mov	r5, r6
9000bd8e:	f7ff b9c3 	b.w	9000b118 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000bd92:	29c0      	cmp	r1, #192	@ 0xc0
9000bd94:	f43f a98b 	beq.w	9000b0ae <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000bd98:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000bd9c:	f43f a987 	beq.w	9000b0ae <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000bda0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bda2:	4635      	mov	r5, r6
9000bda4:	f7ff b98d 	b.w	9000b0c2 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000bda8:	2930      	cmp	r1, #48	@ 0x30
9000bdaa:	f43f a9f1 	beq.w	9000b190 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000bdae:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bdb0:	4635      	mov	r5, r6
9000bdb2:	f7ff b9f7 	b.w	9000b1a4 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000bdb6:	2503      	movs	r5, #3
      status = ret;
9000bdb8:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bdba:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bdbe:	f7ff ba95 	b.w	9000b2ec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bdc2:	6863      	ldr	r3, [r4, #4]
9000bdc4:	069a      	lsls	r2, r3, #26
9000bdc6:	f57f af64 	bpl.w	9000bc92 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000bdca:	4605      	mov	r5, r0
9000bdcc:	e4a3      	b.n	9000b716 <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdce:	492b      	ldr	r1, [pc, #172]	@ (9000be7c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000bdd0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdd2:	f001 0103 	and.w	r1, r1, #3
9000bdd6:	2903      	cmp	r1, #3
9000bdd8:	f43f aa6b 	beq.w	9000b2b2 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000bddc:	2101      	movs	r1, #1
9000bdde:	f104 0008 	add.w	r0, r4, #8
9000bde2:	f7ff f82b 	bl	9000ae3c <RCCEx_PLL2_Config.part.0>
9000bde6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bde8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdec:	2d00      	cmp	r5, #0
9000bdee:	f47f ad8f 	bne.w	9000b910 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000bdf2:	e4bf      	b.n	9000b774 <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000bdf4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bdf6:	4635      	mov	r5, r6
9000bdf8:	f7ff baef 	b.w	9000b3da <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000bdfc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bdfe:	4635      	mov	r5, r6
9000be00:	f7ff bac7 	b.w	9000b392 <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000be04:	2601      	movs	r6, #1
9000be06:	f7ff bb79 	b.w	9000b4fc <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000be0a:	2601      	movs	r6, #1
9000be0c:	f7ff bb68 	b.w	9000b4e0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000be10:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000be14:	e9d4 3200 	ldrd	r3, r2, [r4]
9000be18:	f7ff bb62 	b.w	9000b4e0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000be1c:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000be20:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000be22:	e9d4 3200 	ldrd	r3, r2, [r4]
9000be26:	f7ff bb69 	b.w	9000b4fc <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000be2a:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000be2c:	4635      	mov	r5, r6
9000be2e:	f7ff ba5a 	b.w	9000b2e6 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000be32:	f7fa fc35 	bl	900066a0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000be36:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000be7c <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000be3a:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000be3c:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000be40:	e004      	b.n	9000be4c <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000be42:	f7fa fc2d 	bl	900066a0 <HAL_GetTick>
9000be46:	1bc0      	subs	r0, r0, r7
9000be48:	4548      	cmp	r0, r9
9000be4a:	d810      	bhi.n	9000be6e <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000be4c:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000be50:	079b      	lsls	r3, r3, #30
9000be52:	d5f6      	bpl.n	9000be42 <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000be54:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000be58:	e4f0      	b.n	9000b83c <HAL_RCCEx_PeriphCLKConfig+0x840>
9000be5a:	4808      	ldr	r0, [pc, #32]	@ (9000be7c <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000be5c:	4a08      	ldr	r2, [pc, #32]	@ (9000be80 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000be5e:	6901      	ldr	r1, [r0, #16]
9000be60:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000be64:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000be68:	430a      	orrs	r2, r1
9000be6a:	6102      	str	r2, [r0, #16]
9000be6c:	e4f1      	b.n	9000b852 <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000be6e:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000be70:	e9d4 3200 	ldrd	r3, r2, [r4]
9000be74:	4635      	mov	r5, r6
9000be76:	f7ff ba39 	b.w	9000b2ec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000be7a:	bf00      	nop
9000be7c:	58024400 	.word	0x58024400
9000be80:	00ffffcf 	.word	0x00ffffcf

9000be84 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000be84:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000be86:	f7fe fedd 	bl	9000ac44 <HAL_RCC_GetHCLKFreq>
9000be8a:	4b05      	ldr	r3, [pc, #20]	@ (9000bea0 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000be8c:	4a05      	ldr	r2, [pc, #20]	@ (9000bea4 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000be8e:	6a1b      	ldr	r3, [r3, #32]
9000be90:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000be94:	5cd3      	ldrb	r3, [r2, r3]
9000be96:	f003 031f 	and.w	r3, r3, #31
}
9000be9a:	40d8      	lsrs	r0, r3
9000be9c:	bd08      	pop	{r3, pc}
9000be9e:	bf00      	nop
9000bea0:	58024400 	.word	0x58024400
9000bea4:	9002d110 	.word	0x9002d110

9000bea8 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bea8:	4a47      	ldr	r2, [pc, #284]	@ (9000bfc8 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000beaa:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000beac:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000beae:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000beb0:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000beb2:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000beb6:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000beba:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000bebc:	d05b      	beq.n	9000bf76 <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000bebe:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000bec2:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bec6:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000beca:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000bece:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000bed2:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bed4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000bed8:	ee06 1a90 	vmov	s13, r1
9000bedc:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000bee0:	d003      	beq.n	9000beea <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000bee2:	2c02      	cmp	r4, #2
9000bee4:	d06a      	beq.n	9000bfbc <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000bee6:	2c00      	cmp	r4, #0
9000bee8:	d04a      	beq.n	9000bf80 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000beea:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000bfcc <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000beee:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000bef2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000bef4:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bef8:	ee07 3a90 	vmov	s15, r3
9000befc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bf00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bf04:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000bf08:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000bf0c:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000bf10:	4a2d      	ldr	r2, [pc, #180]	@ (9000bfc8 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000bf12:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000bf16:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000bf18:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bf1c:	ee07 3a10 	vmov	s14, r3
9000bf20:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000bf24:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000bf26:	ee37 7a06 	vadd.f32	s14, s14, s12
9000bf2a:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000bf2e:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000bf32:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000bf36:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000bf38:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000bf3c:	ee07 3a10 	vmov	s14, r3
9000bf40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000bf44:	ee37 7a06 	vadd.f32	s14, s14, s12
9000bf48:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000bf4c:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000bf50:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000bf54:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000bf56:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000bf5a:	ee06 3a90 	vmov	s13, r3
9000bf5e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000bf62:	ee76 6a86 	vadd.f32	s13, s13, s12
9000bf66:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000bf6a:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000bf6e:	ee17 3a90 	vmov	r3, s15
9000bf72:	6083      	str	r3, [r0, #8]
}
9000bf74:	4770      	bx	lr
9000bf76:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000bf78:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000bf7c:	6083      	str	r3, [r0, #8]
}
9000bf7e:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bf80:	6813      	ldr	r3, [r2, #0]
9000bf82:	069b      	lsls	r3, r3, #26
9000bf84:	d51d      	bpl.n	9000bfc2 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bf86:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bf88:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bf8c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bf8e:	4910      	ldr	r1, [pc, #64]	@ (9000bfd0 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000bf90:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bf94:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bf98:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bf9a:	ee07 3a90 	vmov	s15, r3
9000bf9e:	ee06 1a10 	vmov	s12, r1
9000bfa2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bfa6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bfaa:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000bfae:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000bfb2:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000bfb6:	ee67 7a87 	vmul.f32	s15, s15, s14
9000bfba:	e7a9      	b.n	9000bf10 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bfbc:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bfd4 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000bfc0:	e795      	b.n	9000beee <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000bfc2:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bfd8 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000bfc6:	e792      	b.n	9000beee <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000bfc8:	58024400 	.word	0x58024400
9000bfcc:	4a742400 	.word	0x4a742400
9000bfd0:	03d09000 	.word	0x03d09000
9000bfd4:	4bbebc20 	.word	0x4bbebc20
9000bfd8:	4c742400 	.word	0x4c742400

9000bfdc <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bfdc:	4a47      	ldr	r2, [pc, #284]	@ (9000c0fc <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000bfde:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bfe0:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000bfe2:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000bfe4:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000bfe6:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000bfea:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000bfee:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000bff0:	d05b      	beq.n	9000c0aa <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000bff2:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000bff6:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bffa:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000bffe:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c002:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c006:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c008:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c00c:	ee06 1a90 	vmov	s13, r1
9000c010:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c014:	d003      	beq.n	9000c01e <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000c016:	2c02      	cmp	r4, #2
9000c018:	d06a      	beq.n	9000c0f0 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000c01a:	2c00      	cmp	r4, #0
9000c01c:	d04a      	beq.n	9000c0b4 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c01e:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c100 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000c022:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c026:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c028:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c02c:	ee07 3a90 	vmov	s15, r3
9000c030:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c034:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c038:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c03c:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c040:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c044:	4a2d      	ldr	r2, [pc, #180]	@ (9000c0fc <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000c046:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c04a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c04c:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c050:	ee07 3a10 	vmov	s14, r3
9000c054:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c058:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c05a:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c05e:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c062:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c066:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000c06a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c06c:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c070:	ee07 3a10 	vmov	s14, r3
9000c074:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c078:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c07c:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c080:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c084:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c088:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c08a:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c08e:	ee06 3a90 	vmov	s13, r3
9000c092:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c096:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c09a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c09e:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c0a2:	ee17 3a90 	vmov	r3, s15
9000c0a6:	6083      	str	r3, [r0, #8]
}
9000c0a8:	4770      	bx	lr
9000c0aa:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000c0ac:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c0b0:	6083      	str	r3, [r0, #8]
}
9000c0b2:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c0b4:	6813      	ldr	r3, [r2, #0]
9000c0b6:	069b      	lsls	r3, r3, #26
9000c0b8:	d51d      	bpl.n	9000c0f6 <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c0ba:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c0bc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c0c0:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c0c2:	4910      	ldr	r1, [pc, #64]	@ (9000c104 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000c0c4:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c0c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c0cc:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c0ce:	ee07 3a90 	vmov	s15, r3
9000c0d2:	ee06 1a10 	vmov	s12, r1
9000c0d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c0da:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c0de:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c0e2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c0e6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c0ea:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c0ee:	e7a9      	b.n	9000c044 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c0f0:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c108 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000c0f4:	e795      	b.n	9000c022 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c0f6:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c10c <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000c0fa:	e792      	b.n	9000c022 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000c0fc:	58024400 	.word	0x58024400
9000c100:	4a742400 	.word	0x4a742400
9000c104:	03d09000 	.word	0x03d09000
9000c108:	4bbebc20 	.word	0x4bbebc20
9000c10c:	4c742400 	.word	0x4c742400

9000c110 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c110:	b318      	cbz	r0, 9000c15a <HAL_SDRAM_Init+0x4a>
{
9000c112:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c114:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c118:	4604      	mov	r4, r0
9000c11a:	460d      	mov	r5, r1
9000c11c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c120:	b1b3      	cbz	r3, 9000c150 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c122:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c124:	2302      	movs	r3, #2
9000c126:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c12a:	f851 0b04 	ldr.w	r0, [r1], #4
9000c12e:	f001 fdbd 	bl	9000dcac <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c132:	6862      	ldr	r2, [r4, #4]
9000c134:	4629      	mov	r1, r5
9000c136:	6820      	ldr	r0, [r4, #0]
9000c138:	f001 fdee 	bl	9000dd18 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c13c:	4a08      	ldr	r2, [pc, #32]	@ (9000c160 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c13e:	2101      	movs	r1, #1

  return HAL_OK;
9000c140:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c142:	6813      	ldr	r3, [r2, #0]
9000c144:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c148:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c14a:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c14e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c150:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c154:	f7f8 f98e 	bl	90004474 <HAL_SDRAM_MspInit>
9000c158:	e7e3      	b.n	9000c122 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c15a:	2001      	movs	r0, #1
}
9000c15c:	4770      	bx	lr
9000c15e:	bf00      	nop
9000c160:	52004000 	.word	0x52004000

9000c164 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c164:	b510      	push	{r4, lr}
9000c166:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c168:	f7f8 fa00 	bl	9000456c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c16c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c170:	f001 fe10 	bl	9000dd94 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c174:	2000      	movs	r0, #0
9000c176:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c17a:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c17e:	bd10      	pop	{r4, pc}

9000c180 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c180:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c182:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c186:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c188:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c18a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c18c:	d004      	beq.n	9000c198 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c18e:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c192:	2c01      	cmp	r4, #1
9000c194:	d001      	beq.n	9000c19a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c196:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c198:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c19a:	2302      	movs	r3, #2
9000c19c:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c19e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c1a0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c1a4:	f001 fe0a 	bl	9000ddbc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c1a8:	6833      	ldr	r3, [r6, #0]
9000c1aa:	2b02      	cmp	r3, #2
9000c1ac:	d003      	beq.n	9000c1b6 <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c1ae:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c1b2:	2000      	movs	r0, #0
}
9000c1b4:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c1b6:	2305      	movs	r3, #5
9000c1b8:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c1bc:	e7f9      	b.n	9000c1b2 <HAL_SDRAM_SendCommand+0x32>
9000c1be:	bf00      	nop

9000c1c0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c1c0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c1c2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c1c6:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c1c8:	2b02      	cmp	r3, #2
9000c1ca:	b2d8      	uxtb	r0, r3
9000c1cc:	d005      	beq.n	9000c1da <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c1ce:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c1d2:	2b01      	cmp	r3, #1
9000c1d4:	b2dd      	uxtb	r5, r3
9000c1d6:	d001      	beq.n	9000c1dc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c1d8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c1da:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c1dc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c1de:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c1e0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c1e4:	f001 fe04 	bl	9000ddf0 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c1e8:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c1ea:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c1ee:	bd38      	pop	{r3, r4, r5, pc}

9000c1f0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c1f0:	4770      	bx	lr
9000c1f2:	bf00      	nop

9000c1f4 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c1f4:	2800      	cmp	r0, #0
9000c1f6:	f000 8095 	beq.w	9000c324 <HAL_TIM_Base_Init+0x130>
{
9000c1fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c1fc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c200:	4604      	mov	r4, r0
9000c202:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c206:	2b00      	cmp	r3, #0
9000c208:	f000 8087 	beq.w	9000c31a <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c20c:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c20e:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c210:	4945      	ldr	r1, [pc, #276]	@ (9000c328 <HAL_TIM_Base_Init+0x134>)
9000c212:	4d46      	ldr	r5, [pc, #280]	@ (9000c32c <HAL_TIM_Base_Init+0x138>)
9000c214:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c218:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c21c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c220:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000c224:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c226:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c22a:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c22c:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c230:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c232:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c236:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c238:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c23c:	d01f      	beq.n	9000c27e <HAL_TIM_Base_Init+0x8a>
9000c23e:	b9f1      	cbnz	r1, 9000c27e <HAL_TIM_Base_Init+0x8a>
9000c240:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000c33c <HAL_TIM_Base_Init+0x148>
9000c244:	4563      	cmp	r3, ip
9000c246:	d050      	beq.n	9000c2ea <HAL_TIM_Base_Init+0xf6>
9000c248:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c24c:	4563      	cmp	r3, ip
9000c24e:	d04c      	beq.n	9000c2ea <HAL_TIM_Base_Init+0xf6>
9000c250:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c254:	4563      	cmp	r3, ip
9000c256:	d012      	beq.n	9000c27e <HAL_TIM_Base_Init+0x8a>
9000c258:	f1be 0f00 	cmp.w	lr, #0
9000c25c:	d10f      	bne.n	9000c27e <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c25e:	4d34      	ldr	r5, [pc, #208]	@ (9000c330 <HAL_TIM_Base_Init+0x13c>)
9000c260:	4934      	ldr	r1, [pc, #208]	@ (9000c334 <HAL_TIM_Base_Init+0x140>)
9000c262:	428b      	cmp	r3, r1
9000c264:	bf18      	it	ne
9000c266:	42ab      	cmpne	r3, r5
9000c268:	d043      	beq.n	9000c2f2 <HAL_TIM_Base_Init+0xfe>
9000c26a:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c26e:	428b      	cmp	r3, r1
9000c270:	d03f      	beq.n	9000c2f2 <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c272:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c276:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c278:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c27a:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c27c:	e014      	b.n	9000c2a8 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000c27e:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c280:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c284:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000c288:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c28a:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c28c:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000c28e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c292:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c296:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c29a:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c29c:	b911      	cbnz	r1, 9000c2a4 <HAL_TIM_Base_Init+0xb0>
9000c29e:	f1be 0f00 	cmp.w	lr, #0
9000c2a2:	d02f      	beq.n	9000c304 <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c2a4:	6962      	ldr	r2, [r4, #20]
9000c2a6:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c2a8:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c2aa:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c2ac:	f041 0104 	orr.w	r1, r1, #4
9000c2b0:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000c2b2:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000c2b4:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000c2b6:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c2b8:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c2bc:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000c2c0:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000c2c4:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000c2c8:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000c2cc:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000c2d0:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c2d4:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000c2d8:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000c2dc:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000c2e0:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c2e4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000c2e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c2ea:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c2ee:	68a1      	ldr	r1, [r4, #8]
9000c2f0:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c2f2:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c2f4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c2f8:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c2fa:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000c2fc:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c2fe:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c302:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c304:	490c      	ldr	r1, [pc, #48]	@ (9000c338 <HAL_TIM_Base_Init+0x144>)
9000c306:	4a0a      	ldr	r2, [pc, #40]	@ (9000c330 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c308:	4293      	cmp	r3, r2
9000c30a:	bf18      	it	ne
9000c30c:	428b      	cmpne	r3, r1
9000c30e:	d0c9      	beq.n	9000c2a4 <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c310:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c314:	4293      	cmp	r3, r2
9000c316:	d0c5      	beq.n	9000c2a4 <HAL_TIM_Base_Init+0xb0>
9000c318:	e7c6      	b.n	9000c2a8 <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000c31a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c31e:	f7ff ff67 	bl	9000c1f0 <HAL_TIM_Base_MspInit>
9000c322:	e773      	b.n	9000c20c <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000c324:	2001      	movs	r0, #1
}
9000c326:	4770      	bx	lr
9000c328:	40010000 	.word	0x40010000
9000c32c:	40010400 	.word	0x40010400
9000c330:	40014000 	.word	0x40014000
9000c334:	40014400 	.word	0x40014400
9000c338:	40014800 	.word	0x40014800
9000c33c:	40000400 	.word	0x40000400

9000c340 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c340:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c344:	2b01      	cmp	r3, #1
9000c346:	d13d      	bne.n	9000c3c4 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c348:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c34a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c34c:	4b1e      	ldr	r3, [pc, #120]	@ (9000c3c8 <HAL_TIM_Base_Start_IT+0x88>)
9000c34e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c352:	bf18      	it	ne
9000c354:	429a      	cmpne	r2, r3
{
9000c356:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c358:	bf0c      	ite	eq
9000c35a:	2301      	moveq	r3, #1
9000c35c:	2300      	movne	r3, #0
9000c35e:	4d1b      	ldr	r5, [pc, #108]	@ (9000c3cc <HAL_TIM_Base_Start_IT+0x8c>)
9000c360:	4c1b      	ldr	r4, [pc, #108]	@ (9000c3d0 <HAL_TIM_Base_Start_IT+0x90>)
9000c362:	42aa      	cmp	r2, r5
9000c364:	bf08      	it	eq
9000c366:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c36a:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c36e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c370:	42a2      	cmp	r2, r4
9000c372:	bf08      	it	eq
9000c374:	f043 0301 	orreq.w	r3, r3, #1
9000c378:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c37c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c380:	4814      	ldr	r0, [pc, #80]	@ (9000c3d4 <HAL_TIM_Base_Start_IT+0x94>)
9000c382:	42a2      	cmp	r2, r4
9000c384:	bf08      	it	eq
9000c386:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c38a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c38c:	4282      	cmp	r2, r0
9000c38e:	bf08      	it	eq
9000c390:	f043 0301 	orreq.w	r3, r3, #1
9000c394:	4910      	ldr	r1, [pc, #64]	@ (9000c3d8 <HAL_TIM_Base_Start_IT+0x98>)
9000c396:	428a      	cmp	r2, r1
9000c398:	bf08      	it	eq
9000c39a:	f043 0301 	orreq.w	r3, r3, #1
9000c39e:	b913      	cbnz	r3, 9000c3a6 <HAL_TIM_Base_Start_IT+0x66>
9000c3a0:	4b0e      	ldr	r3, [pc, #56]	@ (9000c3dc <HAL_TIM_Base_Start_IT+0x9c>)
9000c3a2:	429a      	cmp	r2, r3
9000c3a4:	d107      	bne.n	9000c3b6 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c3a6:	6891      	ldr	r1, [r2, #8]
9000c3a8:	4b0d      	ldr	r3, [pc, #52]	@ (9000c3e0 <HAL_TIM_Base_Start_IT+0xa0>)
9000c3aa:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c3ac:	2b06      	cmp	r3, #6
9000c3ae:	d006      	beq.n	9000c3be <HAL_TIM_Base_Start_IT+0x7e>
9000c3b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c3b4:	d003      	beq.n	9000c3be <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000c3b6:	6813      	ldr	r3, [r2, #0]
9000c3b8:	f043 0301 	orr.w	r3, r3, #1
9000c3bc:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000c3be:	2000      	movs	r0, #0
}
9000c3c0:	bc30      	pop	{r4, r5}
9000c3c2:	4770      	bx	lr
    return HAL_ERROR;
9000c3c4:	2001      	movs	r0, #1
}
9000c3c6:	4770      	bx	lr
9000c3c8:	40010000 	.word	0x40010000
9000c3cc:	40000400 	.word	0x40000400
9000c3d0:	40000800 	.word	0x40000800
9000c3d4:	40010400 	.word	0x40010400
9000c3d8:	40001800 	.word	0x40001800
9000c3dc:	40014000 	.word	0x40014000
9000c3e0:	00010007 	.word	0x00010007

9000c3e4 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000c3e4:	4770      	bx	lr
9000c3e6:	bf00      	nop

9000c3e8 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000c3e8:	4770      	bx	lr
9000c3ea:	bf00      	nop

9000c3ec <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000c3ec:	4770      	bx	lr
9000c3ee:	bf00      	nop

9000c3f0 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000c3f0:	4770      	bx	lr
9000c3f2:	bf00      	nop

9000c3f4 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000c3f4:	6803      	ldr	r3, [r0, #0]
{
9000c3f6:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000c3f8:	68de      	ldr	r6, [r3, #12]
{
9000c3fa:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000c3fc:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000c3fe:	07aa      	lsls	r2, r5, #30
9000c400:	d501      	bpl.n	9000c406 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000c402:	07b1      	lsls	r1, r6, #30
9000c404:	d452      	bmi.n	9000c4ac <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000c406:	076b      	lsls	r3, r5, #29
9000c408:	d501      	bpl.n	9000c40e <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000c40a:	0770      	lsls	r0, r6, #29
9000c40c:	d43b      	bmi.n	9000c486 <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000c40e:	0729      	lsls	r1, r5, #28
9000c410:	d501      	bpl.n	9000c416 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000c412:	0732      	lsls	r2, r6, #28
9000c414:	d425      	bmi.n	9000c462 <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000c416:	06e8      	lsls	r0, r5, #27
9000c418:	d501      	bpl.n	9000c41e <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000c41a:	06f1      	lsls	r1, r6, #27
9000c41c:	d411      	bmi.n	9000c442 <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000c41e:	07ea      	lsls	r2, r5, #31
9000c420:	d501      	bpl.n	9000c426 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000c422:	07f3      	lsls	r3, r6, #31
9000c424:	d464      	bmi.n	9000c4f0 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c426:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000c42a:	d04c      	beq.n	9000c4c6 <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c42c:	0630      	lsls	r0, r6, #24
9000c42e:	d467      	bmi.n	9000c500 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000c430:	0668      	lsls	r0, r5, #25
9000c432:	d501      	bpl.n	9000c438 <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000c434:	0671      	lsls	r1, r6, #25
9000c436:	d46d      	bmi.n	9000c514 <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000c438:	06aa      	lsls	r2, r5, #26
9000c43a:	d501      	bpl.n	9000c440 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000c43c:	06b3      	lsls	r3, r6, #26
9000c43e:	d44e      	bmi.n	9000c4de <HAL_TIM_IRQHandler+0xea>
}
9000c440:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c442:	6823      	ldr	r3, [r4, #0]
9000c444:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000c448:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c44a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c44c:	2208      	movs	r2, #8
9000c44e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c450:	69db      	ldr	r3, [r3, #28]
9000c452:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c456:	d071      	beq.n	9000c53c <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000c458:	f7ff ffc6 	bl	9000c3e8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c45c:	2300      	movs	r3, #0
9000c45e:	7723      	strb	r3, [r4, #28]
9000c460:	e7dd      	b.n	9000c41e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c462:	6823      	ldr	r3, [r4, #0]
9000c464:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c468:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c46a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c46c:	2204      	movs	r2, #4
9000c46e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c470:	69db      	ldr	r3, [r3, #28]
9000c472:	079b      	lsls	r3, r3, #30
9000c474:	d15f      	bne.n	9000c536 <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c476:	f7ff ffb5 	bl	9000c3e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c47a:	4620      	mov	r0, r4
9000c47c:	f7ff ffb6 	bl	9000c3ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c480:	2300      	movs	r3, #0
9000c482:	7723      	strb	r3, [r4, #28]
9000c484:	e7c7      	b.n	9000c416 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c486:	6823      	ldr	r3, [r4, #0]
9000c488:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c48c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c48e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c490:	2202      	movs	r2, #2
9000c492:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c494:	699b      	ldr	r3, [r3, #24]
9000c496:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c49a:	d149      	bne.n	9000c530 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c49c:	f7ff ffa2 	bl	9000c3e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c4a0:	4620      	mov	r0, r4
9000c4a2:	f7ff ffa3 	bl	9000c3ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c4a6:	2300      	movs	r3, #0
9000c4a8:	7723      	strb	r3, [r4, #28]
9000c4aa:	e7b0      	b.n	9000c40e <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000c4ac:	f06f 0202 	mvn.w	r2, #2
9000c4b0:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c4b2:	2201      	movs	r2, #1
9000c4b4:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c4b6:	699b      	ldr	r3, [r3, #24]
9000c4b8:	079a      	lsls	r2, r3, #30
9000c4ba:	d033      	beq.n	9000c524 <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000c4bc:	f7ff ff94 	bl	9000c3e8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c4c0:	2300      	movs	r3, #0
9000c4c2:	7723      	strb	r3, [r4, #28]
9000c4c4:	e79f      	b.n	9000c406 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c4c6:	05ea      	lsls	r2, r5, #23
9000c4c8:	d5b2      	bpl.n	9000c430 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c4ca:	0633      	lsls	r3, r6, #24
9000c4cc:	d5b0      	bpl.n	9000c430 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c4ce:	6823      	ldr	r3, [r4, #0]
9000c4d0:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c4d4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c4d6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c4d8:	f000 f83a 	bl	9000c550 <HAL_TIMEx_Break2Callback>
9000c4dc:	e7a8      	b.n	9000c430 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c4de:	6823      	ldr	r3, [r4, #0]
9000c4e0:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c4e4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c4e6:	611a      	str	r2, [r3, #16]
}
9000c4e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c4ec:	f000 b82c 	b.w	9000c548 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c4f0:	6823      	ldr	r3, [r4, #0]
9000c4f2:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c4f6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c4f8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c4fa:	f7f7 fdaf 	bl	9000405c <HAL_TIM_PeriodElapsedCallback>
9000c4fe:	e792      	b.n	9000c426 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c500:	6823      	ldr	r3, [r4, #0]
9000c502:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000c506:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c508:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c50a:	f000 f81f 	bl	9000c54c <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c50e:	05e9      	lsls	r1, r5, #23
9000c510:	d58e      	bpl.n	9000c430 <HAL_TIM_IRQHandler+0x3c>
9000c512:	e7dc      	b.n	9000c4ce <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c514:	6823      	ldr	r3, [r4, #0]
9000c516:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000c51a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c51c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c51e:	f7ff ff67 	bl	9000c3f0 <HAL_TIM_TriggerCallback>
9000c522:	e789      	b.n	9000c438 <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c524:	f7ff ff5e 	bl	9000c3e4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c528:	4620      	mov	r0, r4
9000c52a:	f7ff ff5f 	bl	9000c3ec <HAL_TIM_PWM_PulseFinishedCallback>
9000c52e:	e7c7      	b.n	9000c4c0 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c530:	f7ff ff5a 	bl	9000c3e8 <HAL_TIM_IC_CaptureCallback>
9000c534:	e7b7      	b.n	9000c4a6 <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000c536:	f7ff ff57 	bl	9000c3e8 <HAL_TIM_IC_CaptureCallback>
9000c53a:	e7a1      	b.n	9000c480 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c53c:	f7ff ff52 	bl	9000c3e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c540:	4620      	mov	r0, r4
9000c542:	f7ff ff53 	bl	9000c3ec <HAL_TIM_PWM_PulseFinishedCallback>
9000c546:	e789      	b.n	9000c45c <HAL_TIM_IRQHandler+0x68>

9000c548 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000c548:	4770      	bx	lr
9000c54a:	bf00      	nop

9000c54c <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000c54c:	4770      	bx	lr
9000c54e:	bf00      	nop

9000c550 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000c550:	4770      	bx	lr
9000c552:	bf00      	nop

9000c554 <UART_TxISR_16BIT>:
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c554:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c558:	2b21      	cmp	r3, #33	@ 0x21
9000c55a:	d000      	beq.n	9000c55e <UART_TxISR_16BIT+0xa>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
9000c55c:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000c55e:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c562:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000c564:	b29b      	uxth	r3, r3
9000c566:	b983      	cbnz	r3, 9000c58a <UART_TxISR_16BIT+0x36>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c568:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000c56c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c570:	e842 3100 	strex	r1, r3, [r2]
9000c574:	2900      	cmp	r1, #0
9000c576:	d1f7      	bne.n	9000c568 <UART_TxISR_16BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c578:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c57c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c580:	e842 3100 	strex	r1, r3, [r2]
9000c584:	2900      	cmp	r1, #0
9000c586:	d1f7      	bne.n	9000c578 <UART_TxISR_16BIT+0x24>
9000c588:	4770      	bx	lr
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c58a:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c58c:	f831 3b02 	ldrh.w	r3, [r1], #2
9000c590:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c594:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000c596:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr += 2U;
9000c59a:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000c59c:	3b01      	subs	r3, #1
9000c59e:	b29b      	uxth	r3, r3
9000c5a0:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000c5a4:	4770      	bx	lr
9000c5a6:	bf00      	nop

9000c5a8 <UART_TxISR_16BIT_FIFOEN>:
{
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c5a8:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c5ac:	2b21      	cmp	r3, #33	@ 0x21
9000c5ae:	d000      	beq.n	9000c5b2 <UART_TxISR_16BIT_FIFOEN+0xa>
9000c5b0:	4770      	bx	lr
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c5b2:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000c5b6:	2b00      	cmp	r3, #0
9000c5b8:	d0fa      	beq.n	9000c5b0 <UART_TxISR_16BIT_FIFOEN+0x8>
        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);

        break; /* force exit loop */
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c5ba:	6801      	ldr	r1, [r0, #0]
{
9000c5bc:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000c5be:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c5c2:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000c5c4:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c5c6:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000c5c8:	b1a2      	cbz	r2, 9000c5f4 <UART_TxISR_16BIT_FIFOEN+0x4c>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c5ca:	69ca      	ldr	r2, [r1, #28]
9000c5cc:	0612      	lsls	r2, r2, #24
9000c5ce:	d50c      	bpl.n	9000c5ea <UART_TxISR_16BIT_FIFOEN+0x42>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c5d0:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000c5d2:	f834 2b02 	ldrh.w	r2, [r4], #2
9000c5d6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c5da:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->pTxBuffPtr += 2U;
        huart->TxXferCount--;
9000c5dc:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr += 2U;
9000c5e0:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000c5e2:	3a01      	subs	r2, #1
9000c5e4:	b292      	uxth	r2, r2
9000c5e6:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c5ea:	2b00      	cmp	r3, #0
9000c5ec:	d1e7      	bne.n	9000c5be <UART_TxISR_16BIT_FIFOEN+0x16>
      {
        /* Nothing to do */
      }
    }
  }
}
9000c5ee:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c5f2:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c5f4:	f101 0308 	add.w	r3, r1, #8
9000c5f8:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000c5fc:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c600:	f101 0008 	add.w	r0, r1, #8
9000c604:	e840 3200 	strex	r2, r3, [r0]
9000c608:	2a00      	cmp	r2, #0
9000c60a:	d1f3      	bne.n	9000c5f4 <UART_TxISR_16BIT_FIFOEN+0x4c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c60c:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c610:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c614:	e841 3200 	strex	r2, r3, [r1]
9000c618:	2a00      	cmp	r2, #0
9000c61a:	d0e8      	beq.n	9000c5ee <UART_TxISR_16BIT_FIFOEN+0x46>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c61c:	e851 3f00 	ldrex	r3, [r1]
9000c620:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c624:	e841 3200 	strex	r2, r3, [r1]
9000c628:	2a00      	cmp	r2, #0
9000c62a:	d1ef      	bne.n	9000c60c <UART_TxISR_16BIT_FIFOEN+0x64>
9000c62c:	e7df      	b.n	9000c5ee <UART_TxISR_16BIT_FIFOEN+0x46>
9000c62e:	bf00      	nop

9000c630 <UART_TxISR_8BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c630:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c634:	2b21      	cmp	r3, #33	@ 0x21
9000c636:	d000      	beq.n	9000c63a <UART_TxISR_8BIT+0xa>
}
9000c638:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000c63a:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c63e:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000c640:	b29b      	uxth	r3, r3
9000c642:	b983      	cbnz	r3, 9000c666 <UART_TxISR_8BIT+0x36>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c644:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000c648:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c64c:	e842 3100 	strex	r1, r3, [r2]
9000c650:	2900      	cmp	r1, #0
9000c652:	d1f7      	bne.n	9000c644 <UART_TxISR_8BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c654:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c658:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c65c:	e842 3100 	strex	r1, r3, [r2]
9000c660:	2900      	cmp	r1, #0
9000c662:	d1f7      	bne.n	9000c654 <UART_TxISR_8BIT+0x24>
9000c664:	4770      	bx	lr
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c666:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c668:	f811 3b01 	ldrb.w	r3, [r1], #1
9000c66c:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000c66e:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr++;
9000c672:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000c674:	3b01      	subs	r3, #1
9000c676:	b29b      	uxth	r3, r3
9000c678:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000c67c:	4770      	bx	lr
9000c67e:	bf00      	nop

9000c680 <UART_TxISR_8BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c680:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c684:	2b21      	cmp	r3, #33	@ 0x21
9000c686:	d000      	beq.n	9000c68a <UART_TxISR_8BIT_FIFOEN+0xa>
9000c688:	4770      	bx	lr
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c68a:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000c68e:	2b00      	cmp	r3, #0
9000c690:	d0fa      	beq.n	9000c688 <UART_TxISR_8BIT_FIFOEN+0x8>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c692:	6801      	ldr	r1, [r0, #0]
{
9000c694:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000c696:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c69a:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000c69c:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c69e:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000c6a0:	b192      	cbz	r2, 9000c6c8 <UART_TxISR_8BIT_FIFOEN+0x48>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c6a2:	69ca      	ldr	r2, [r1, #28]
9000c6a4:	0612      	lsls	r2, r2, #24
9000c6a6:	d50a      	bpl.n	9000c6be <UART_TxISR_8BIT_FIFOEN+0x3e>
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c6a8:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000c6aa:	f814 2b01 	ldrb.w	r2, [r4], #1
9000c6ae:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->TxXferCount--;
9000c6b0:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr++;
9000c6b4:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000c6b6:	3a01      	subs	r2, #1
9000c6b8:	b292      	uxth	r2, r2
9000c6ba:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c6be:	2b00      	cmp	r3, #0
9000c6c0:	d1e9      	bne.n	9000c696 <UART_TxISR_8BIT_FIFOEN+0x16>
}
9000c6c2:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c6c6:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c6c8:	f101 0308 	add.w	r3, r1, #8
9000c6cc:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000c6d0:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c6d4:	f101 0008 	add.w	r0, r1, #8
9000c6d8:	e840 3200 	strex	r2, r3, [r0]
9000c6dc:	2a00      	cmp	r2, #0
9000c6de:	d1f3      	bne.n	9000c6c8 <UART_TxISR_8BIT_FIFOEN+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c6e0:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c6e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c6e8:	e841 3200 	strex	r2, r3, [r1]
9000c6ec:	2a00      	cmp	r2, #0
9000c6ee:	d0e8      	beq.n	9000c6c2 <UART_TxISR_8BIT_FIFOEN+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c6f0:	e851 3f00 	ldrex	r3, [r1]
9000c6f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c6f8:	e841 3200 	strex	r2, r3, [r1]
9000c6fc:	2a00      	cmp	r2, #0
9000c6fe:	d1ef      	bne.n	9000c6e0 <UART_TxISR_8BIT_FIFOEN+0x60>
9000c700:	e7df      	b.n	9000c6c2 <UART_TxISR_8BIT_FIFOEN+0x42>
9000c702:	bf00      	nop

9000c704 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
9000c704:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c708:	2b20      	cmp	r3, #32
9000c70a:	d128      	bne.n	9000c75e <HAL_UART_Transmit_IT+0x5a>
    if ((pData == NULL) || (Size == 0U))
9000c70c:	b329      	cbz	r1, 9000c75a <HAL_UART_Transmit_IT+0x56>
9000c70e:	fab2 f382 	clz	r3, r2
9000c712:	095b      	lsrs	r3, r3, #5
9000c714:	b30a      	cbz	r2, 9000c75a <HAL_UART_Transmit_IT+0x56>
{
9000c716:	b410      	push	{r4}
    huart->pTxBuffPtr  = pData;
9000c718:	6501      	str	r1, [r0, #80]	@ 0x50
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000c71a:	2421      	movs	r4, #33	@ 0x21
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000c71c:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    huart->TxXferCount = Size;
9000c71e:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000c722:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000c726:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
    huart->TxXferSize  = Size;
9000c72a:	f8a0 2054 	strh.w	r2, [r0, #84]	@ 0x54
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c72e:	6883      	ldr	r3, [r0, #8]
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000c730:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000c734:	d01c      	beq.n	9000c770 <HAL_UART_Transmit_IT+0x6c>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c736:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000c73a:	d012      	beq.n	9000c762 <HAL_UART_Transmit_IT+0x5e>
        huart->TxISR = UART_TxISR_8BIT;
9000c73c:	4b1b      	ldr	r3, [pc, #108]	@ (9000c7ac <HAL_UART_Transmit_IT+0xa8>)
9000c73e:	6802      	ldr	r2, [r0, #0]
9000c740:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c742:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000c746:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c74a:	e842 3100 	strex	r1, r3, [r2]
9000c74e:	2900      	cmp	r1, #0
9000c750:	d1f7      	bne.n	9000c742 <HAL_UART_Transmit_IT+0x3e>
    return HAL_OK;
9000c752:	2000      	movs	r0, #0
}
9000c754:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c758:	4770      	bx	lr
      return HAL_ERROR;
9000c75a:	2001      	movs	r0, #1
}
9000c75c:	4770      	bx	lr
    return HAL_BUSY;
9000c75e:	2002      	movs	r0, #2
9000c760:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c762:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT;
9000c764:	4b12      	ldr	r3, [pc, #72]	@ (9000c7b0 <HAL_UART_Transmit_IT+0xac>)
9000c766:	4a11      	ldr	r2, [pc, #68]	@ (9000c7ac <HAL_UART_Transmit_IT+0xa8>)
9000c768:	2900      	cmp	r1, #0
9000c76a:	bf18      	it	ne
9000c76c:	4613      	movne	r3, r2
9000c76e:	e7e6      	b.n	9000c73e <HAL_UART_Transmit_IT+0x3a>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c770:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000c774:	d012      	beq.n	9000c79c <HAL_UART_Transmit_IT+0x98>
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000c776:	4b0f      	ldr	r3, [pc, #60]	@ (9000c7b4 <HAL_UART_Transmit_IT+0xb0>)
9000c778:	6802      	ldr	r2, [r0, #0]
9000c77a:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c77c:	f102 0308 	add.w	r3, r2, #8
9000c780:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000c784:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c788:	f102 0008 	add.w	r0, r2, #8
9000c78c:	e840 3100 	strex	r1, r3, [r0]
9000c790:	2900      	cmp	r1, #0
9000c792:	d1f3      	bne.n	9000c77c <HAL_UART_Transmit_IT+0x78>
    return HAL_OK;
9000c794:	2000      	movs	r0, #0
}
9000c796:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c79a:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c79c:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000c79e:	4b06      	ldr	r3, [pc, #24]	@ (9000c7b8 <HAL_UART_Transmit_IT+0xb4>)
9000c7a0:	4a04      	ldr	r2, [pc, #16]	@ (9000c7b4 <HAL_UART_Transmit_IT+0xb0>)
9000c7a2:	2900      	cmp	r1, #0
9000c7a4:	bf18      	it	ne
9000c7a6:	4613      	movne	r3, r2
9000c7a8:	e7e6      	b.n	9000c778 <HAL_UART_Transmit_IT+0x74>
9000c7aa:	bf00      	nop
9000c7ac:	9000c631 	.word	0x9000c631
9000c7b0:	9000c555 	.word	0x9000c555
9000c7b4:	9000c681 	.word	0x9000c681
9000c7b8:	9000c5a9 	.word	0x9000c5a9

9000c7bc <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
9000c7bc:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
9000c7c0:	2b20      	cmp	r3, #32
9000c7c2:	d15d      	bne.n	9000c880 <HAL_UART_Receive_IT+0xc4>
    if ((pData == NULL) || (Size == 0U))
9000c7c4:	2900      	cmp	r1, #0
9000c7c6:	d060      	beq.n	9000c88a <HAL_UART_Receive_IT+0xce>
{
9000c7c8:	b430      	push	{r4, r5}
    if ((pData == NULL) || (Size == 0U))
9000c7ca:	fab2 f482 	clz	r4, r2
9000c7ce:	0964      	lsrs	r4, r4, #5
9000c7d0:	2a00      	cmp	r2, #0
9000c7d2:	d057      	beq.n	9000c884 <HAL_UART_Receive_IT+0xc8>
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000c7d4:	6803      	ldr	r3, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000c7d6:	66c4      	str	r4, [r0, #108]	@ 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000c7d8:	4c57      	ldr	r4, [pc, #348]	@ (9000c938 <HAL_UART_Receive_IT+0x17c>)
9000c7da:	42a3      	cmp	r3, r4
9000c7dc:	d002      	beq.n	9000c7e4 <HAL_UART_Receive_IT+0x28>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000c7de:	685c      	ldr	r4, [r3, #4]
9000c7e0:	0224      	lsls	r4, r4, #8
9000c7e2:	d43c      	bmi.n	9000c85e <HAL_UART_Receive_IT+0xa2>
  huart->pRxBuffPtr  = pData;
9000c7e4:	6581      	str	r1, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
9000c7e6:	2400      	movs	r4, #0
  UART_MASK_COMPUTATION(huart);
9000c7e8:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
9000c7ea:	f8a0 205c 	strh.w	r2, [r0, #92]	@ 0x5c
  UART_MASK_COMPUTATION(huart);
9000c7ee:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
  huart->RxXferCount = Size;
9000c7f2:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
  huart->RxISR       = NULL;
9000c7f6:	6744      	str	r4, [r0, #116]	@ 0x74
  UART_MASK_COMPUTATION(huart);
9000c7f8:	d066      	beq.n	9000c8c8 <HAL_UART_Receive_IT+0x10c>
9000c7fa:	2900      	cmp	r1, #0
9000c7fc:	d147      	bne.n	9000c88e <HAL_UART_Receive_IT+0xd2>
9000c7fe:	6901      	ldr	r1, [r0, #16]
9000c800:	2900      	cmp	r1, #0
9000c802:	bf0c      	ite	eq
9000c804:	24ff      	moveq	r4, #255	@ 0xff
9000c806:	247f      	movne	r4, #127	@ 0x7f
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000c808:	2100      	movs	r1, #0
  UART_MASK_COMPUTATION(huart);
9000c80a:	f8a0 4060 	strh.w	r4, [r0, #96]	@ 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000c80e:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
9000c812:	2122      	movs	r1, #34	@ 0x22
9000c814:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c818:	f103 0108 	add.w	r1, r3, #8
9000c81c:	e851 1f00 	ldrex	r1, [r1]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000c820:	f041 0101 	orr.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c824:	f103 0508 	add.w	r5, r3, #8
9000c828:	e845 1400 	strex	r4, r1, [r5]
9000c82c:	2c00      	cmp	r4, #0
9000c82e:	d1f3      	bne.n	9000c818 <HAL_UART_Receive_IT+0x5c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000c830:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c832:	6885      	ldr	r5, [r0, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000c834:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c838:	6904      	ldr	r4, [r0, #16]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000c83a:	d04c      	beq.n	9000c8d6 <HAL_UART_Receive_IT+0x11a>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c83c:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000c840:	d02e      	beq.n	9000c8a0 <HAL_UART_Receive_IT+0xe4>
9000c842:	4a3e      	ldr	r2, [pc, #248]	@ (9000c93c <HAL_UART_Receive_IT+0x180>)
9000c844:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000c846:	b374      	cbz	r4, 9000c8a6 <HAL_UART_Receive_IT+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c848:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
9000c84c:	f442 7290 	orr.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c850:	e843 2100 	strex	r1, r2, [r3]
9000c854:	2900      	cmp	r1, #0
9000c856:	d1f7      	bne.n	9000c848 <HAL_UART_Receive_IT+0x8c>
    return (UART_Start_Receive_IT(huart, pData, Size));
9000c858:	2000      	movs	r0, #0
}
9000c85a:	bc30      	pop	{r4, r5}
9000c85c:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c85e:	e853 4f00 	ldrex	r4, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000c862:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c866:	e843 4500 	strex	r5, r4, [r3]
9000c86a:	2d00      	cmp	r5, #0
9000c86c:	d0ba      	beq.n	9000c7e4 <HAL_UART_Receive_IT+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c86e:	e853 4f00 	ldrex	r4, [r3]
9000c872:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c876:	e843 4500 	strex	r5, r4, [r3]
9000c87a:	2d00      	cmp	r5, #0
9000c87c:	d1ef      	bne.n	9000c85e <HAL_UART_Receive_IT+0xa2>
9000c87e:	e7b1      	b.n	9000c7e4 <HAL_UART_Receive_IT+0x28>
    return HAL_BUSY;
9000c880:	2002      	movs	r0, #2
9000c882:	4770      	bx	lr
      return HAL_ERROR;
9000c884:	2001      	movs	r0, #1
}
9000c886:	bc30      	pop	{r4, r5}
9000c888:	4770      	bx	lr
      return HAL_ERROR;
9000c88a:	2001      	movs	r0, #1
}
9000c88c:	4770      	bx	lr
  UART_MASK_COMPUTATION(huart);
9000c88e:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c892:	d1b9      	bne.n	9000c808 <HAL_UART_Receive_IT+0x4c>
9000c894:	6901      	ldr	r1, [r0, #16]
9000c896:	2900      	cmp	r1, #0
9000c898:	bf0c      	ite	eq
9000c89a:	247f      	moveq	r4, #127	@ 0x7f
9000c89c:	243f      	movne	r4, #63	@ 0x3f
9000c89e:	e7b3      	b.n	9000c808 <HAL_UART_Receive_IT+0x4c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c8a0:	bb84      	cbnz	r4, 9000c904 <HAL_UART_Receive_IT+0x148>
9000c8a2:	4a27      	ldr	r2, [pc, #156]	@ (9000c940 <HAL_UART_Receive_IT+0x184>)
9000c8a4:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c8a6:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000c8aa:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c8ae:	e843 2100 	strex	r1, r2, [r3]
9000c8b2:	2900      	cmp	r1, #0
9000c8b4:	d0d0      	beq.n	9000c858 <HAL_UART_Receive_IT+0x9c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c8b6:	e853 2f00 	ldrex	r2, [r3]
9000c8ba:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c8be:	e843 2100 	strex	r1, r2, [r3]
9000c8c2:	2900      	cmp	r1, #0
9000c8c4:	d1ef      	bne.n	9000c8a6 <HAL_UART_Receive_IT+0xea>
9000c8c6:	e7c7      	b.n	9000c858 <HAL_UART_Receive_IT+0x9c>
  UART_MASK_COMPUTATION(huart);
9000c8c8:	6901      	ldr	r1, [r0, #16]
9000c8ca:	f240 14ff 	movw	r4, #511	@ 0x1ff
9000c8ce:	2900      	cmp	r1, #0
9000c8d0:	bf18      	it	ne
9000c8d2:	24ff      	movne	r4, #255	@ 0xff
9000c8d4:	e798      	b.n	9000c808 <HAL_UART_Receive_IT+0x4c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000c8d6:	f8b0 1068 	ldrh.w	r1, [r0, #104]	@ 0x68
9000c8da:	4291      	cmp	r1, r2
9000c8dc:	d8ae      	bhi.n	9000c83c <HAL_UART_Receive_IT+0x80>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c8de:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000c8e2:	d012      	beq.n	9000c90a <HAL_UART_Receive_IT+0x14e>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000c8e4:	4a17      	ldr	r2, [pc, #92]	@ (9000c944 <HAL_UART_Receive_IT+0x188>)
9000c8e6:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000c8e8:	b994      	cbnz	r4, 9000c910 <HAL_UART_Receive_IT+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c8ea:	f103 0208 	add.w	r2, r3, #8
9000c8ee:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000c8f2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c8f6:	f103 0008 	add.w	r0, r3, #8
9000c8fa:	e840 2100 	strex	r1, r2, [r0]
9000c8fe:	2900      	cmp	r1, #0
9000c900:	d1f3      	bne.n	9000c8ea <HAL_UART_Receive_IT+0x12e>
9000c902:	e7a9      	b.n	9000c858 <HAL_UART_Receive_IT+0x9c>
9000c904:	4a0d      	ldr	r2, [pc, #52]	@ (9000c93c <HAL_UART_Receive_IT+0x180>)
9000c906:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000c908:	e79e      	b.n	9000c848 <HAL_UART_Receive_IT+0x8c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000c90a:	b194      	cbz	r4, 9000c932 <HAL_UART_Receive_IT+0x176>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000c90c:	4a0d      	ldr	r2, [pc, #52]	@ (9000c944 <HAL_UART_Receive_IT+0x188>)
9000c90e:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c910:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000c914:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c918:	e843 2100 	strex	r1, r2, [r3]
9000c91c:	2900      	cmp	r1, #0
9000c91e:	d0e4      	beq.n	9000c8ea <HAL_UART_Receive_IT+0x12e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c920:	e853 2f00 	ldrex	r2, [r3]
9000c924:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c928:	e843 2100 	strex	r1, r2, [r3]
9000c92c:	2900      	cmp	r1, #0
9000c92e:	d1ef      	bne.n	9000c910 <HAL_UART_Receive_IT+0x154>
9000c930:	e7db      	b.n	9000c8ea <HAL_UART_Receive_IT+0x12e>
9000c932:	4a05      	ldr	r2, [pc, #20]	@ (9000c948 <HAL_UART_Receive_IT+0x18c>)
9000c934:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000c936:	e7d8      	b.n	9000c8ea <HAL_UART_Receive_IT+0x12e>
9000c938:	58000c00 	.word	0x58000c00
9000c93c:	9000cfe5 	.word	0x9000cfe5
9000c940:	9000cf9d 	.word	0x9000cf9d
9000c944:	9000d029 	.word	0x9000d029
9000c948:	9000d251 	.word	0x9000d251

9000c94c <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
9000c94c:	4770      	bx	lr
9000c94e:	bf00      	nop

9000c950 <UART_DMAAbortOnError>:
{
9000c950:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000c952:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
9000c954:	2300      	movs	r3, #0
9000c956:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  HAL_UART_ErrorCallback(huart);
9000c95a:	f7ff fff7 	bl	9000c94c <HAL_UART_ErrorCallback>
}
9000c95e:	bd08      	pop	{r3, pc}

9000c960 <HAL_UART_AbortCpltCallback>:
__weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
9000c960:	4770      	bx	lr
9000c962:	bf00      	nop

9000c964 <HAL_UART_Abort_IT>:
{
9000c964:	b570      	push	{r4, r5, r6, lr}
9000c966:	6803      	ldr	r3, [r0, #0]
9000c968:	4605      	mov	r5, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c96a:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
9000c96e:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c972:	e843 2100 	strex	r1, r2, [r3]
9000c976:	2900      	cmp	r1, #0
9000c978:	d1f7      	bne.n	9000c96a <HAL_UART_Abort_IT+0x6>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
9000c97a:	494e      	ldr	r1, [pc, #312]	@ (9000cab4 <HAL_UART_Abort_IT+0x150>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c97c:	f103 0208 	add.w	r2, r3, #8
9000c980:	e852 2f00 	ldrex	r2, [r2]
9000c984:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c986:	f103 0008 	add.w	r0, r3, #8
9000c98a:	e840 2400 	strex	r4, r2, [r0]
9000c98e:	2c00      	cmp	r4, #0
9000c990:	d1f4      	bne.n	9000c97c <HAL_UART_Abort_IT+0x18>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000c992:	6eea      	ldr	r2, [r5, #108]	@ 0x6c
9000c994:	2a01      	cmp	r2, #1
9000c996:	d06c      	beq.n	9000ca72 <HAL_UART_Abort_IT+0x10e>
  if (huart->hdmatx != NULL)
9000c998:	6fee      	ldr	r6, [r5, #124]	@ 0x7c
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000c99a:	4619      	mov	r1, r3
  if (huart->hdmatx != NULL)
9000c99c:	b12e      	cbz	r6, 9000c9aa <HAL_UART_Abort_IT+0x46>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000c99e:	689a      	ldr	r2, [r3, #8]
9000c9a0:	f012 0280 	ands.w	r2, r2, #128	@ 0x80
      huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
9000c9a4:	bf18      	it	ne
9000c9a6:	4a44      	ldrne	r2, [pc, #272]	@ (9000cab8 <HAL_UART_Abort_IT+0x154>)
      huart->hdmatx->XferAbortCallback = NULL;
9000c9a8:	6532      	str	r2, [r6, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000c9aa:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000c9ae:	b128      	cbz	r0, 9000c9bc <HAL_UART_Abort_IT+0x58>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000c9b0:	689a      	ldr	r2, [r3, #8]
9000c9b2:	f012 0240 	ands.w	r2, r2, #64	@ 0x40
      huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
9000c9b6:	bf18      	it	ne
9000c9b8:	4a40      	ldrne	r2, [pc, #256]	@ (9000cabc <HAL_UART_Abort_IT+0x158>)
      huart->hdmarx->XferAbortCallback = NULL;
9000c9ba:	6502      	str	r2, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000c9bc:	689a      	ldr	r2, [r3, #8]
9000c9be:	0612      	lsls	r2, r2, #24
9000c9c0:	d43c      	bmi.n	9000ca3c <HAL_UART_Abort_IT+0xd8>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000c9c2:	689a      	ldr	r2, [r3, #8]
9000c9c4:	0654      	lsls	r4, r2, #25
9000c9c6:	d516      	bpl.n	9000c9f6 <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000c9c8:	2401      	movs	r4, #1
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c9ca:	f103 0208 	add.w	r2, r3, #8
9000c9ce:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000c9d2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c9d6:	f103 0608 	add.w	r6, r3, #8
9000c9da:	e846 2100 	strex	r1, r2, [r6]
9000c9de:	2900      	cmp	r1, #0
9000c9e0:	d1f3      	bne.n	9000c9ca <HAL_UART_Abort_IT+0x66>
    if (huart->hdmarx != NULL)
9000c9e2:	2800      	cmp	r0, #0
9000c9e4:	d05b      	beq.n	9000ca9e <HAL_UART_Abort_IT+0x13a>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000c9e6:	f7fa f94f 	bl	90006c88 <HAL_DMA_Abort_IT>
9000c9ea:	b328      	cbz	r0, 9000ca38 <HAL_UART_Abort_IT+0xd4>
        huart->hdmarx->XferAbortCallback = NULL;
9000c9ec:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
9000c9f0:	2200      	movs	r2, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000c9f2:	6829      	ldr	r1, [r5, #0]
        huart->hdmarx->XferAbortCallback = NULL;
9000c9f4:	651a      	str	r2, [r3, #80]	@ 0x50
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000c9f6:	6e6a      	ldr	r2, [r5, #100]	@ 0x64
    huart->TxXferCount = 0U;
9000c9f8:	2300      	movs	r3, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000c9fa:	200f      	movs	r0, #15
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000c9fc:	f1b2 5f00 	cmp.w	r2, #536870912	@ 0x20000000
    huart->TxXferCount = 0U;
9000ca00:	f8a5 3056 	strh.w	r3, [r5, #86]	@ 0x56
    huart->RxISR = NULL;
9000ca04:	676b      	str	r3, [r5, #116]	@ 0x74
    huart->RxXferCount = 0U;
9000ca06:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
    huart->RxISR = NULL;
9000ca0a:	67ab      	str	r3, [r5, #120]	@ 0x78
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ca0c:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ca10:	6208      	str	r0, [r1, #32]
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ca12:	d103      	bne.n	9000ca1c <HAL_UART_Abort_IT+0xb8>
      __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000ca14:	698b      	ldr	r3, [r1, #24]
9000ca16:	f043 0310 	orr.w	r3, r3, #16
9000ca1a:	618b      	str	r3, [r1, #24]
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000ca1c:	698b      	ldr	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000ca1e:	2220      	movs	r2, #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ca20:	2400      	movs	r4, #0
    HAL_UART_AbortCpltCallback(huart);
9000ca22:	4628      	mov	r0, r5
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000ca24:	f043 0308 	orr.w	r3, r3, #8
9000ca28:	618b      	str	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000ca2a:	f8c5 2088 	str.w	r2, [r5, #136]	@ 0x88
    huart->RxState = HAL_UART_STATE_READY;
9000ca2e:	f8c5 208c 	str.w	r2, [r5, #140]	@ 0x8c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ca32:	66ec      	str	r4, [r5, #108]	@ 0x6c
    HAL_UART_AbortCpltCallback(huart);
9000ca34:	f7ff ff94 	bl	9000c960 <HAL_UART_AbortCpltCallback>
}
9000ca38:	2000      	movs	r0, #0
9000ca3a:	bd70      	pop	{r4, r5, r6, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca3c:	f103 0208 	add.w	r2, r3, #8
9000ca40:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
9000ca44:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca48:	f103 0c08 	add.w	ip, r3, #8
9000ca4c:	e84c 2100 	strex	r1, r2, [ip]
9000ca50:	2900      	cmp	r1, #0
9000ca52:	d1f3      	bne.n	9000ca3c <HAL_UART_Abort_IT+0xd8>
    if (huart->hdmatx != NULL)
9000ca54:	b1f6      	cbz	r6, 9000ca94 <HAL_UART_Abort_IT+0x130>
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000ca56:	4630      	mov	r0, r6
9000ca58:	f7fa f916 	bl	90006c88 <HAL_DMA_Abort_IT>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ca5c:	682b      	ldr	r3, [r5, #0]
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000ca5e:	b310      	cbz	r0, 9000caa6 <HAL_UART_Abort_IT+0x142>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ca60:	689a      	ldr	r2, [r3, #8]
        huart->hdmatx->XferAbortCallback = NULL;
9000ca62:	2400      	movs	r4, #0
9000ca64:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ca66:	4619      	mov	r1, r3
9000ca68:	0656      	lsls	r6, r2, #25
        huart->hdmatx->XferAbortCallback = NULL;
9000ca6a:	6504      	str	r4, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ca6c:	d5c3      	bpl.n	9000c9f6 <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000ca6e:	2401      	movs	r4, #1
9000ca70:	e01c      	b.n	9000caac <HAL_UART_Abort_IT+0x148>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca72:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
9000ca76:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca7a:	e843 2100 	strex	r1, r2, [r3]
9000ca7e:	2900      	cmp	r1, #0
9000ca80:	d08a      	beq.n	9000c998 <HAL_UART_Abort_IT+0x34>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca82:	e853 2f00 	ldrex	r2, [r3]
9000ca86:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca8a:	e843 2100 	strex	r1, r2, [r3]
9000ca8e:	2900      	cmp	r1, #0
9000ca90:	d1ef      	bne.n	9000ca72 <HAL_UART_Abort_IT+0x10e>
9000ca92:	e781      	b.n	9000c998 <HAL_UART_Abort_IT+0x34>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ca94:	689a      	ldr	r2, [r3, #8]
9000ca96:	4619      	mov	r1, r3
9000ca98:	0652      	lsls	r2, r2, #25
9000ca9a:	d495      	bmi.n	9000c9c8 <HAL_UART_Abort_IT+0x64>
9000ca9c:	e7ab      	b.n	9000c9f6 <HAL_UART_Abort_IT+0x92>
  if (abortcplt == 1U)
9000ca9e:	2c01      	cmp	r4, #1
9000caa0:	d1ca      	bne.n	9000ca38 <HAL_UART_Abort_IT+0xd4>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000caa2:	4619      	mov	r1, r3
9000caa4:	e7a7      	b.n	9000c9f6 <HAL_UART_Abort_IT+0x92>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000caa6:	689a      	ldr	r2, [r3, #8]
9000caa8:	0652      	lsls	r2, r2, #25
9000caaa:	d5c5      	bpl.n	9000ca38 <HAL_UART_Abort_IT+0xd4>
9000caac:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000cab0:	e78b      	b.n	9000c9ca <HAL_UART_Abort_IT+0x66>
9000cab2:	bf00      	nop
9000cab4:	ef7ffffe 	.word	0xef7ffffe
9000cab8:	9000cb05 	.word	0x9000cb05
9000cabc:	9000cac1 	.word	0x9000cac1

9000cac0 <UART_DMARxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000cac0:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmarx->XferAbortCallback = NULL;
9000cac2:	2100      	movs	r1, #0
  if (huart->hdmatx != NULL)
9000cac4:	e9d0 321f 	ldrd	r3, r2, [r0, #124]	@ 0x7c
  huart->hdmarx->XferAbortCallback = NULL;
9000cac8:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmatx != NULL)
9000caca:	b113      	cbz	r3, 9000cad2 <UART_DMARxAbortCallback+0x12>
    if (huart->hdmatx->XferAbortCallback != NULL)
9000cacc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000cace:	b103      	cbz	r3, 9000cad2 <UART_DMARxAbortCallback+0x12>
9000cad0:	4770      	bx	lr
  huart->TxXferCount = 0U;
9000cad2:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cad4:	6802      	ldr	r2, [r0, #0]
9000cad6:	210f      	movs	r1, #15
{
9000cad8:	b510      	push	{r4, lr}
  huart->TxXferCount = 0U;
9000cada:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->gState  = HAL_UART_STATE_READY;
9000cade:	2420      	movs	r4, #32
  huart->RxXferCount = 0U;
9000cae0:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cae4:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cae8:	6211      	str	r1, [r2, #32]
  __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000caea:	6991      	ldr	r1, [r2, #24]
9000caec:	f041 0108 	orr.w	r1, r1, #8
9000caf0:	6191      	str	r1, [r2, #24]
  huart->gState  = HAL_UART_STATE_READY;
9000caf2:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000caf6:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cafa:	66c3      	str	r3, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000cafc:	f7ff ff30 	bl	9000c960 <HAL_UART_AbortCpltCallback>
}
9000cb00:	bd10      	pop	{r4, pc}
9000cb02:	bf00      	nop

9000cb04 <UART_DMATxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000cb04:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmatx->XferAbortCallback = NULL;
9000cb06:	2100      	movs	r1, #0
  if (huart->hdmarx != NULL)
9000cb08:	e9d0 231f 	ldrd	r2, r3, [r0, #124]	@ 0x7c
  huart->hdmatx->XferAbortCallback = NULL;
9000cb0c:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000cb0e:	b113      	cbz	r3, 9000cb16 <UART_DMATxAbortCallback+0x12>
    if (huart->hdmarx->XferAbortCallback != NULL)
9000cb10:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000cb12:	b103      	cbz	r3, 9000cb16 <UART_DMATxAbortCallback+0x12>
9000cb14:	4770      	bx	lr
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cb16:	6e41      	ldr	r1, [r0, #100]	@ 0x64
  huart->TxXferCount = 0U;
9000cb18:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cb1a:	6802      	ldr	r2, [r0, #0]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cb1c:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
{
9000cb20:	b510      	push	{r4, lr}
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cb22:	f04f 040f 	mov.w	r4, #15
  huart->TxXferCount = 0U;
9000cb26:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->RxXferCount = 0U;
9000cb2a:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cb2e:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cb32:	6214      	str	r4, [r2, #32]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cb34:	d009      	beq.n	9000cb4a <UART_DMATxAbortCallback+0x46>
  huart->gState  = HAL_UART_STATE_READY;
9000cb36:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cb38:	2200      	movs	r2, #0
  huart->gState  = HAL_UART_STATE_READY;
9000cb3a:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000cb3e:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cb42:	66c2      	str	r2, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000cb44:	f7ff ff0c 	bl	9000c960 <HAL_UART_AbortCpltCallback>
}
9000cb48:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000cb4a:	6993      	ldr	r3, [r2, #24]
9000cb4c:	f043 0310 	orr.w	r3, r3, #16
9000cb50:	6193      	str	r3, [r2, #24]
9000cb52:	e7f0      	b.n	9000cb36 <UART_DMATxAbortCallback+0x32>

9000cb54 <HAL_UARTEx_RxEventCallback>:
}
9000cb54:	4770      	bx	lr
9000cb56:	bf00      	nop

9000cb58 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000cb58:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
9000cb5a:	f640 0c0f 	movw	ip, #2063	@ 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000cb5e:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
9000cb60:	ea12 0f0c 	tst.w	r2, ip
{
9000cb64:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
9000cb66:	681d      	ldr	r5, [r3, #0]
{
9000cb68:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
9000cb6a:	6899      	ldr	r1, [r3, #8]
  if (errorflags == 0U)
9000cb6c:	d145      	bne.n	9000cbfa <HAL_UART_IRQHandler+0xa2>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000cb6e:	0696      	lsls	r6, r2, #26
9000cb70:	d507      	bpl.n	9000cb82 <HAL_UART_IRQHandler+0x2a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000cb72:	f005 0c20 	and.w	ip, r5, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000cb76:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
9000cb7a:	ea5c 0c06 	orrs.w	ip, ip, r6
9000cb7e:	f040 812a 	bne.w	9000cdd6 <HAL_UART_IRQHandler+0x27e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cb82:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
9000cb84:	2801      	cmp	r0, #1
9000cb86:	f000 80cd 	beq.w	9000cd24 <HAL_UART_IRQHandler+0x1cc>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000cb8a:	02d0      	lsls	r0, r2, #11
9000cb8c:	d41d      	bmi.n	9000cbca <HAL_UART_IRQHandler+0x72>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9000cb8e:	0610      	lsls	r0, r2, #24
9000cb90:	d506      	bpl.n	9000cba0 <HAL_UART_IRQHandler+0x48>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000cb92:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
9000cb96:	f005 0080 	and.w	r0, r5, #128	@ 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000cb9a:	4308      	orrs	r0, r1
9000cb9c:	f040 8122 	bne.w	9000cde4 <HAL_UART_IRQHandler+0x28c>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9000cba0:	0651      	lsls	r1, r2, #25
9000cba2:	d51c      	bpl.n	9000cbde <HAL_UART_IRQHandler+0x86>
9000cba4:	066e      	lsls	r6, r5, #25
9000cba6:	d51a      	bpl.n	9000cbde <HAL_UART_IRQHandler+0x86>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cba8:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000cbac:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cbb0:	e843 2100 	strex	r1, r2, [r3]
9000cbb4:	2900      	cmp	r1, #0
9000cbb6:	d1f7      	bne.n	9000cba8 <HAL_UART_IRQHandler+0x50>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
9000cbb8:	2220      	movs	r2, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
9000cbba:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
9000cbbc:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_READY;
9000cbbe:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->TxISR = NULL;
9000cbc2:	67a3      	str	r3, [r4, #120]	@ 0x78
  HAL_UART_TxCpltCallback(huart);
9000cbc4:	f7f6 fe3a 	bl	9000383c <HAL_UART_TxCpltCallback>
}
9000cbc8:	bd70      	pop	{r4, r5, r6, pc}
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000cbca:	024e      	lsls	r6, r1, #9
9000cbcc:	d5df      	bpl.n	9000cb8e <HAL_UART_IRQHandler+0x36>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000cbce:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9000cbd2:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000cbd4:	621a      	str	r2, [r3, #32]
}
9000cbd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_WakeupCallback(huart);
9000cbda:	f000 bfbf 	b.w	9000db5c <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9000cbde:	0210      	lsls	r0, r2, #8
9000cbe0:	d502      	bpl.n	9000cbe8 <HAL_UART_IRQHandler+0x90>
9000cbe2:	0069      	lsls	r1, r5, #1
9000cbe4:	f100 813d 	bmi.w	9000ce62 <HAL_UART_IRQHandler+0x30a>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
9000cbe8:	01d3      	lsls	r3, r2, #7
9000cbea:	d5ed      	bpl.n	9000cbc8 <HAL_UART_IRQHandler+0x70>
9000cbec:	2d00      	cmp	r5, #0
9000cbee:	daeb      	bge.n	9000cbc8 <HAL_UART_IRQHandler+0x70>
    HAL_UARTEx_RxFifoFullCallback(huart);
9000cbf0:	4620      	mov	r0, r4
}
9000cbf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
9000cbf6:	f000 bfb3 	b.w	9000db60 <HAL_UARTEx_RxFifoFullCallback>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
9000cbfa:	48b9      	ldr	r0, [pc, #740]	@ (9000cee0 <HAL_UART_IRQHandler+0x388>)
9000cbfc:	4008      	ands	r0, r1
9000cbfe:	f040 8125 	bne.w	9000ce4c <HAL_UART_IRQHandler+0x2f4>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
9000cc02:	4eb8      	ldr	r6, [pc, #736]	@ (9000cee4 <HAL_UART_IRQHandler+0x38c>)
9000cc04:	4235      	tst	r5, r6
9000cc06:	d0bc      	beq.n	9000cb82 <HAL_UART_IRQHandler+0x2a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000cc08:	07d6      	lsls	r6, r2, #31
9000cc0a:	d51a      	bpl.n	9000cc42 <HAL_UART_IRQHandler+0xea>
9000cc0c:	05ee      	lsls	r6, r5, #23
9000cc0e:	f140 8103 	bpl.w	9000ce18 <HAL_UART_IRQHandler+0x2c0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000cc12:	2601      	movs	r6, #1
9000cc14:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
9000cc16:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000cc1a:	f046 0601 	orr.w	r6, r6, #1
9000cc1e:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000cc22:	0796      	lsls	r6, r2, #30
9000cc24:	f140 80fb 	bpl.w	9000ce1e <HAL_UART_IRQHandler+0x2c6>
9000cc28:	07ce      	lsls	r6, r1, #31
9000cc2a:	d50a      	bpl.n	9000cc42 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000cc2c:	2602      	movs	r6, #2
9000cc2e:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
9000cc30:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000cc34:	f046 0604 	orr.w	r6, r6, #4
9000cc38:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000cc3c:	0756      	lsls	r6, r2, #29
9000cc3e:	f100 80f4 	bmi.w	9000ce2a <HAL_UART_IRQHandler+0x2d2>
    if (((isrflags & USART_ISR_ORE) != 0U)
9000cc42:	0716      	lsls	r6, r2, #28
9000cc44:	d50b      	bpl.n	9000cc5e <HAL_UART_IRQHandler+0x106>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
9000cc46:	f005 0620 	and.w	r6, r5, #32
9000cc4a:	4306      	orrs	r6, r0
9000cc4c:	d007      	beq.n	9000cc5e <HAL_UART_IRQHandler+0x106>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000cc4e:	2008      	movs	r0, #8
9000cc50:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
9000cc52:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cc56:	f040 0008 	orr.w	r0, r0, #8
9000cc5a:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
9000cc5e:	0510      	lsls	r0, r2, #20
9000cc60:	d50a      	bpl.n	9000cc78 <HAL_UART_IRQHandler+0x120>
9000cc62:	016e      	lsls	r6, r5, #5
9000cc64:	d508      	bpl.n	9000cc78 <HAL_UART_IRQHandler+0x120>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000cc66:	f44f 6000 	mov.w	r0, #2048	@ 0x800
9000cc6a:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
9000cc6c:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cc70:	f040 0020 	orr.w	r0, r0, #32
9000cc74:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000cc78:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cc7c:	2800      	cmp	r0, #0
9000cc7e:	d0a3      	beq.n	9000cbc8 <HAL_UART_IRQHandler+0x70>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000cc80:	0690      	lsls	r0, r2, #26
9000cc82:	d506      	bpl.n	9000cc92 <HAL_UART_IRQHandler+0x13a>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000cc84:	f005 0520 	and.w	r5, r5, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000cc88:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
9000cc8c:	430d      	orrs	r5, r1
9000cc8e:	f040 80d5 	bne.w	9000ce3c <HAL_UART_IRQHandler+0x2e4>
      errorcode = huart->ErrorCode;
9000cc92:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000cc96:	689a      	ldr	r2, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
9000cc98:	f001 0128 	and.w	r1, r1, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000cc9c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000cca0:	ea52 0501 	orrs.w	r5, r2, r1
9000cca4:	f000 80e2 	beq.w	9000ce6c <HAL_UART_IRQHandler+0x314>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cca8:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ccac:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccb0:	e843 2100 	strex	r1, r2, [r3]
9000ccb4:	2900      	cmp	r1, #0
9000ccb6:	d1f7      	bne.n	9000cca8 <HAL_UART_IRQHandler+0x150>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ccb8:	488b      	ldr	r0, [pc, #556]	@ (9000cee8 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccba:	f103 0208 	add.w	r2, r3, #8
9000ccbe:	e852 2f00 	ldrex	r2, [r2]
9000ccc2:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccc4:	f103 0508 	add.w	r5, r3, #8
9000ccc8:	e845 2100 	strex	r1, r2, [r5]
9000cccc:	2900      	cmp	r1, #0
9000ccce:	d1f4      	bne.n	9000ccba <HAL_UART_IRQHandler+0x162>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ccd0:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ccd2:	2a01      	cmp	r2, #1
9000ccd4:	f000 808e 	beq.w	9000cdf4 <HAL_UART_IRQHandler+0x29c>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ccd8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ccda:	2120      	movs	r1, #32
9000ccdc:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cce0:	66e2      	str	r2, [r4, #108]	@ 0x6c
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cce2:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
9000cce4:	6762      	str	r2, [r4, #116]	@ 0x74
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cce6:	064a      	lsls	r2, r1, #25
9000cce8:	f140 80b7 	bpl.w	9000ce5a <HAL_UART_IRQHandler+0x302>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccec:	f103 0208 	add.w	r2, r3, #8
9000ccf0:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000ccf4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccf8:	f103 0008 	add.w	r0, r3, #8
9000ccfc:	e840 2100 	strex	r1, r2, [r0]
9000cd00:	2900      	cmp	r1, #0
9000cd02:	d1f3      	bne.n	9000ccec <HAL_UART_IRQHandler+0x194>
          if (huart->hdmarx != NULL)
9000cd04:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000cd08:	2800      	cmp	r0, #0
9000cd0a:	f000 80a6 	beq.w	9000ce5a <HAL_UART_IRQHandler+0x302>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
9000cd0e:	4b77      	ldr	r3, [pc, #476]	@ (9000ceec <HAL_UART_IRQHandler+0x394>)
9000cd10:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000cd12:	f7f9 ffb9 	bl	90006c88 <HAL_DMA_Abort_IT>
9000cd16:	2800      	cmp	r0, #0
9000cd18:	f43f af56 	beq.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000cd1c:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000cd20:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000cd22:	e05c      	b.n	9000cdde <HAL_UART_IRQHandler+0x286>
      && ((isrflags & USART_ISR_IDLE) != 0U)
9000cd24:	06d6      	lsls	r6, r2, #27
9000cd26:	f57f af30 	bpl.w	9000cb8a <HAL_UART_IRQHandler+0x32>
      && ((cr1its & USART_ISR_IDLE) != 0U))
9000cd2a:	06e8      	lsls	r0, r5, #27
9000cd2c:	f57f af2d 	bpl.w	9000cb8a <HAL_UART_IRQHandler+0x32>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000cd30:	2210      	movs	r2, #16
          && (nb_remaining_rx_data < huart->RxXferSize))
9000cd32:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000cd36:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cd38:	689a      	ldr	r2, [r3, #8]
9000cd3a:	0656      	lsls	r6, r2, #25
9000cd3c:	f140 809c 	bpl.w	9000ce78 <HAL_UART_IRQHandler+0x320>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
9000cd40:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000cd44:	6801      	ldr	r1, [r0, #0]
9000cd46:	6849      	ldr	r1, [r1, #4]
9000cd48:	b289      	uxth	r1, r1
      if ((nb_remaining_rx_data > 0U)
9000cd4a:	2900      	cmp	r1, #0
9000cd4c:	f000 80d0 	beq.w	9000cef0 <HAL_UART_IRQHandler+0x398>
          && (nb_remaining_rx_data < huart->RxXferSize))
9000cd50:	42a9      	cmp	r1, r5
9000cd52:	f080 80cd 	bcs.w	9000cef0 <HAL_UART_IRQHandler+0x398>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000cd56:	69c2      	ldr	r2, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
9000cd58:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000cd5c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000cd60:	d02f      	beq.n	9000cdc2 <HAL_UART_IRQHandler+0x26a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd62:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000cd66:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd6a:	e843 2100 	strex	r1, r2, [r3]
9000cd6e:	2900      	cmp	r1, #0
9000cd70:	d1f7      	bne.n	9000cd62 <HAL_UART_IRQHandler+0x20a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd72:	f103 0208 	add.w	r2, r3, #8
9000cd76:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000cd7a:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd7e:	f103 0508 	add.w	r5, r3, #8
9000cd82:	e845 2100 	strex	r1, r2, [r5]
9000cd86:	2900      	cmp	r1, #0
9000cd88:	d1f3      	bne.n	9000cd72 <HAL_UART_IRQHandler+0x21a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd8a:	f103 0208 	add.w	r2, r3, #8
9000cd8e:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000cd92:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd96:	f103 0508 	add.w	r5, r3, #8
9000cd9a:	e845 2100 	strex	r1, r2, [r5]
9000cd9e:	2900      	cmp	r1, #0
9000cda0:	d1f3      	bne.n	9000cd8a <HAL_UART_IRQHandler+0x232>
          huart->RxState = HAL_UART_STATE_READY;
9000cda2:	2220      	movs	r2, #32
9000cda4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cda8:	66e1      	str	r1, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdaa:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cdae:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdb2:	e843 2100 	strex	r1, r2, [r3]
9000cdb6:	2900      	cmp	r1, #0
9000cdb8:	d1f7      	bne.n	9000cdaa <HAL_UART_IRQHandler+0x252>
          (void)HAL_DMA_Abort(huart->hdmarx);
9000cdba:	f7f9 fdaf 	bl	9000691c <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000cdbe:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000cdc2:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000cdc4:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000cdc6:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000cdc8:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
9000cdcc:	1a69      	subs	r1, r5, r1
9000cdce:	b289      	uxth	r1, r1
9000cdd0:	f7ff fec0 	bl	9000cb54 <HAL_UARTEx_RxEventCallback>
}
9000cdd4:	bd70      	pop	{r4, r5, r6, pc}
      if (huart->RxISR != NULL)
9000cdd6:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9000cdd8:	2b00      	cmp	r3, #0
9000cdda:	f43f aef5 	beq.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
}
9000cdde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000cde2:	4718      	bx	r3
    if (huart->TxISR != NULL)
9000cde4:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
9000cde6:	2b00      	cmp	r3, #0
9000cde8:	f43f aeee 	beq.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
      huart->TxISR(huart);
9000cdec:	4620      	mov	r0, r4
}
9000cdee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
9000cdf2:	4718      	bx	r3
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdf4:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cdf8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdfc:	e843 2100 	strex	r1, r2, [r3]
9000ce00:	2900      	cmp	r1, #0
9000ce02:	f43f af69 	beq.w	9000ccd8 <HAL_UART_IRQHandler+0x180>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce06:	e853 2f00 	ldrex	r2, [r3]
9000ce0a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce0e:	e843 2100 	strex	r1, r2, [r3]
9000ce12:	2900      	cmp	r1, #0
9000ce14:	d1ee      	bne.n	9000cdf4 <HAL_UART_IRQHandler+0x29c>
9000ce16:	e75f      	b.n	9000ccd8 <HAL_UART_IRQHandler+0x180>
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000ce18:	0796      	lsls	r6, r2, #30
9000ce1a:	f53f af12 	bmi.w	9000cc42 <HAL_UART_IRQHandler+0xea>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000ce1e:	0756      	lsls	r6, r2, #29
9000ce20:	f57f af0f 	bpl.w	9000cc42 <HAL_UART_IRQHandler+0xea>
9000ce24:	07ce      	lsls	r6, r1, #31
9000ce26:	f57f af0c 	bpl.w	9000cc42 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000ce2a:	2604      	movs	r6, #4
9000ce2c:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
9000ce2e:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000ce32:	f046 0602 	orr.w	r6, r6, #2
9000ce36:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000ce3a:	e702      	b.n	9000cc42 <HAL_UART_IRQHandler+0xea>
        if (huart->RxISR != NULL)
9000ce3c:	6f62      	ldr	r2, [r4, #116]	@ 0x74
9000ce3e:	2a00      	cmp	r2, #0
9000ce40:	f43f af27 	beq.w	9000cc92 <HAL_UART_IRQHandler+0x13a>
          huart->RxISR(huart);
9000ce44:	4620      	mov	r0, r4
9000ce46:	4790      	blx	r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000ce48:	6823      	ldr	r3, [r4, #0]
9000ce4a:	e722      	b.n	9000cc92 <HAL_UART_IRQHandler+0x13a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000ce4c:	07d6      	lsls	r6, r2, #31
9000ce4e:	f57f aee8 	bpl.w	9000cc22 <HAL_UART_IRQHandler+0xca>
9000ce52:	05ee      	lsls	r6, r5, #23
9000ce54:	f57f aee5 	bpl.w	9000cc22 <HAL_UART_IRQHandler+0xca>
9000ce58:	e6db      	b.n	9000cc12 <HAL_UART_IRQHandler+0xba>
            HAL_UART_ErrorCallback(huart);
9000ce5a:	4620      	mov	r0, r4
9000ce5c:	f7ff fd76 	bl	9000c94c <HAL_UART_ErrorCallback>
}
9000ce60:	bd70      	pop	{r4, r5, r6, pc}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000ce62:	4620      	mov	r0, r4
}
9000ce64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000ce68:	f000 be7c 	b.w	9000db64 <HAL_UARTEx_TxFifoEmptyCallback>
        HAL_UART_ErrorCallback(huart);
9000ce6c:	4620      	mov	r0, r4
9000ce6e:	f7ff fd6d 	bl	9000c94c <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ce72:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
}
9000ce76:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000ce78:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
      if ((huart->RxXferCount > 0U)
9000ce7c:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000ce80:	1a6d      	subs	r5, r5, r1
      if ((huart->RxXferCount > 0U)
9000ce82:	b292      	uxth	r2, r2
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000ce84:	b2a9      	uxth	r1, r5
          && (nb_rx_data > 0U))
9000ce86:	2900      	cmp	r1, #0
9000ce88:	f43f ae9e 	beq.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
9000ce8c:	2a00      	cmp	r2, #0
9000ce8e:	f43f ae9b 	beq.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce92:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ce96:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce9a:	e843 2000 	strex	r0, r2, [r3]
9000ce9e:	2800      	cmp	r0, #0
9000cea0:	d1f7      	bne.n	9000ce92 <HAL_UART_IRQHandler+0x33a>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000cea2:	4d11      	ldr	r5, [pc, #68]	@ (9000cee8 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cea4:	f103 0208 	add.w	r2, r3, #8
9000cea8:	e852 2f00 	ldrex	r2, [r2]
9000ceac:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ceae:	f103 0608 	add.w	r6, r3, #8
9000ceb2:	e846 2000 	strex	r0, r2, [r6]
9000ceb6:	2800      	cmp	r0, #0
9000ceb8:	d1f4      	bne.n	9000cea4 <HAL_UART_IRQHandler+0x34c>
        huart->RxState = HAL_UART_STATE_READY;
9000ceba:	2220      	movs	r2, #32
        huart->RxISR = NULL;
9000cebc:	6760      	str	r0, [r4, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
9000cebe:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cec2:	66e0      	str	r0, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cec4:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cec8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cecc:	e843 2000 	strex	r0, r2, [r3]
9000ced0:	2800      	cmp	r0, #0
9000ced2:	d1f7      	bne.n	9000cec4 <HAL_UART_IRQHandler+0x36c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000ced4:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000ced6:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000ced8:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000ceda:	f7ff fe3b 	bl	9000cb54 <HAL_UARTEx_RxEventCallback>
}
9000cede:	bd70      	pop	{r4, r5, r6, pc}
9000cee0:	10000001 	.word	0x10000001
9000cee4:	04000120 	.word	0x04000120
9000cee8:	effffffe 	.word	0xeffffffe
9000ceec:	9000c951 	.word	0x9000c951
        if (nb_remaining_rx_data == huart->RxXferSize)
9000cef0:	42a9      	cmp	r1, r5
9000cef2:	f47f ae69 	bne.w	9000cbc8 <HAL_UART_IRQHandler+0x70>
          if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
9000cef6:	69c3      	ldr	r3, [r0, #28]
9000cef8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000cefc:	d0ea      	beq.n	9000ced4 <HAL_UART_IRQHandler+0x37c>
}
9000cefe:	bd70      	pop	{r4, r5, r6, pc}

9000cf00 <UART_RxISR_16BIT.part.0>:
/**
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
9000cf00:	6803      	ldr	r3, [r0, #0]
9000cf02:	b510      	push	{r4, lr}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf04:	e853 2f00 	ldrex	r2, [r3]
    huart->RxXferCount--;

    if (huart->RxXferCount == 0U)
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cf08:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf0c:	e843 2100 	strex	r1, r2, [r3]
9000cf10:	2900      	cmp	r1, #0
9000cf12:	d1f7      	bne.n	9000cf04 <UART_RxISR_16BIT.part.0+0x4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf14:	f103 0208 	add.w	r2, r3, #8
9000cf18:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000cf1c:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf20:	f103 0408 	add.w	r4, r3, #8
9000cf24:	e844 2100 	strex	r1, r2, [r4]
9000cf28:	2900      	cmp	r1, #0
9000cf2a:	d1f3      	bne.n	9000cf14 <UART_RxISR_16BIT.part.0+0x14>
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000cf2c:	4a1a      	ldr	r2, [pc, #104]	@ (9000cf98 <UART_RxISR_16BIT.part.0+0x98>)
      huart->RxState = HAL_UART_STATE_READY;
9000cf2e:	2420      	movs	r4, #32
      huart->RxISR = NULL;
9000cf30:	6741      	str	r1, [r0, #116]	@ 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000cf32:	4293      	cmp	r3, r2
      huart->RxState = HAL_UART_STATE_READY;
9000cf34:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
      huart->RxEventType = HAL_UART_RXEVENT_TC;
9000cf38:	6701      	str	r1, [r0, #112]	@ 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000cf3a:	d002      	beq.n	9000cf42 <UART_RxISR_16BIT.part.0+0x42>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000cf3c:	685a      	ldr	r2, [r3, #4]
9000cf3e:	0211      	lsls	r1, r2, #8
9000cf40:	d416      	bmi.n	9000cf70 <UART_RxISR_16BIT.part.0+0x70>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cf42:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
9000cf44:	2a01      	cmp	r2, #1
9000cf46:	d124      	bne.n	9000cf92 <UART_RxISR_16BIT.part.0+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cf48:	2200      	movs	r2, #0
9000cf4a:	66c2      	str	r2, [r0, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf4c:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cf50:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf54:	e843 2100 	strex	r1, r2, [r3]
9000cf58:	2900      	cmp	r1, #0
9000cf5a:	d1f7      	bne.n	9000cf4c <UART_RxISR_16BIT.part.0+0x4c>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000cf5c:	69da      	ldr	r2, [r3, #28]
9000cf5e:	06d2      	lsls	r2, r2, #27
9000cf60:	d501      	bpl.n	9000cf66 <UART_RxISR_16BIT.part.0+0x66>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000cf62:	2210      	movs	r2, #16
9000cf64:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000cf66:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
9000cf6a:	f7ff fdf3 	bl	9000cb54 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000cf6e:	bd10      	pop	{r4, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf70:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000cf74:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf78:	e843 2100 	strex	r1, r2, [r3]
9000cf7c:	2900      	cmp	r1, #0
9000cf7e:	d0e0      	beq.n	9000cf42 <UART_RxISR_16BIT.part.0+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cf80:	e853 2f00 	ldrex	r2, [r3]
9000cf84:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cf88:	e843 2100 	strex	r1, r2, [r3]
9000cf8c:	2900      	cmp	r1, #0
9000cf8e:	d1ef      	bne.n	9000cf70 <UART_RxISR_16BIT.part.0+0x70>
9000cf90:	e7d7      	b.n	9000cf42 <UART_RxISR_16BIT.part.0+0x42>
        HAL_UART_RxCpltCallback(huart);
9000cf92:	f7f6 fc29 	bl	900037e8 <HAL_UART_RxCpltCallback>
}
9000cf96:	bd10      	pop	{r4, pc}
9000cf98:	58000c00 	.word	0x58000c00

9000cf9c <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
9000cf9c:	b410      	push	{r4}
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cf9e:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000cfa2:	f8b0 1060 	ldrh.w	r1, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cfa6:	2c22      	cmp	r4, #34	@ 0x22
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000cfa8:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cfaa:	d006      	beq.n	9000cfba <UART_RxISR_16BIT+0x1e>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000cfac:	6993      	ldr	r3, [r2, #24]
9000cfae:	f043 0308 	orr.w	r3, r3, #8
9000cfb2:	6193      	str	r3, [r2, #24]
  }
}
9000cfb4:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cfb8:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000cfba:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *tmp = (uint16_t)(uhdata & uhMask);
9000cfbc:	6d84      	ldr	r4, [r0, #88]	@ 0x58
9000cfbe:	4011      	ands	r1, r2
9000cfc0:	f824 1b02 	strh.w	r1, [r4], #2
    huart->RxXferCount--;
9000cfc4:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr += 2U;
9000cfc8:	6584      	str	r4, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000cfca:	3a01      	subs	r2, #1
9000cfcc:	b292      	uxth	r2, r2
9000cfce:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000cfd2:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000cfd6:	b29b      	uxth	r3, r3
9000cfd8:	2b00      	cmp	r3, #0
9000cfda:	d1eb      	bne.n	9000cfb4 <UART_RxISR_16BIT+0x18>
}
9000cfdc:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cfe0:	f7ff bf8e 	b.w	9000cf00 <UART_RxISR_16BIT.part.0>

9000cfe4 <UART_RxISR_8BIT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cfe4:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000cfe8:	f8b0 c060 	ldrh.w	ip, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cfec:	2922      	cmp	r1, #34	@ 0x22
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000cfee:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000cff0:	d004      	beq.n	9000cffc <UART_RxISR_8BIT+0x18>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000cff2:	6993      	ldr	r3, [r2, #24]
9000cff4:	f043 0308 	orr.w	r3, r3, #8
9000cff8:	6193      	str	r3, [r2, #24]
}
9000cffa:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000cffc:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000cffe:	6d81      	ldr	r1, [r0, #88]	@ 0x58
9000d000:	ea02 020c 	and.w	r2, r2, ip
9000d004:	700a      	strb	r2, [r1, #0]
    huart->RxXferCount--;
9000d006:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr++;
9000d00a:	6d81      	ldr	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000d00c:	3a01      	subs	r2, #1
    huart->pRxBuffPtr++;
9000d00e:	3101      	adds	r1, #1
    huart->RxXferCount--;
9000d010:	b292      	uxth	r2, r2
    huart->pRxBuffPtr++;
9000d012:	6581      	str	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000d014:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000d018:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000d01c:	b29b      	uxth	r3, r3
9000d01e:	2b00      	cmp	r3, #0
9000d020:	d1eb      	bne.n	9000cffa <UART_RxISR_8BIT+0x16>
9000d022:	f7ff bf6d 	b.w	9000cf00 <UART_RxISR_16BIT.part.0>
9000d026:	bf00      	nop

9000d028 <UART_RxISR_8BIT_FIFOEN>:
{
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d028:	6803      	ldr	r3, [r0, #0]
{
9000d02a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d02e:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000d030:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000d032:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d034:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000d038:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d03c:	2a22      	cmp	r2, #34	@ 0x22
9000d03e:	d005      	beq.n	9000d04c <UART_RxISR_8BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d040:	699a      	ldr	r2, [r3, #24]
9000d042:	f042 0208 	orr.w	r2, r2, #8
9000d046:	619a      	str	r2, [r3, #24]
  }
}
9000d048:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d04c:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000d050:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d052:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d056:	f007 0701 	and.w	r7, r7, #1
9000d05a:	2b00      	cmp	r3, #0
9000d05c:	f000 80d8 	beq.w	9000d210 <UART_RxISR_8BIT_FIFOEN+0x1e8>
9000d060:	2f00      	cmp	r7, #0
9000d062:	f000 80a3 	beq.w	9000d1ac <UART_RxISR_8BIT_FIFOEN+0x184>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d066:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d068:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d06a:	f04f 0802 	mov.w	r8, #2
9000d06e:	e004      	b.n	9000d07a <UART_RxISR_8BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000d070:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d074:	b29b      	uxth	r3, r3
9000d076:	2b00      	cmp	r3, #0
9000d078:	d03e      	beq.n	9000d0f8 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d07a:	06ab      	lsls	r3, r5, #26
9000d07c:	d573      	bpl.n	9000d166 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d07e:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d080:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d082:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d084:	ea03 0309 	and.w	r3, r3, r9
9000d088:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000d08a:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d08e:	6823      	ldr	r3, [r4, #0]
      huart->RxXferCount--;
9000d090:	3a01      	subs	r2, #1
      huart->pRxBuffPtr++;
9000d092:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d094:	b292      	uxth	r2, r2
      huart->pRxBuffPtr++;
9000d096:	3101      	adds	r1, #1
      huart->RxXferCount--;
9000d098:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d09c:	69dd      	ldr	r5, [r3, #28]
      huart->pRxBuffPtr++;
9000d09e:	65a1      	str	r1, [r4, #88]	@ 0x58
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d0a0:	0768      	lsls	r0, r5, #29
9000d0a2:	d0e5      	beq.n	9000d070 <UART_RxISR_8BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d0a4:	07e9      	lsls	r1, r5, #31
9000d0a6:	d50a      	bpl.n	9000d0be <UART_RxISR_8BIT_FIFOEN+0x96>
9000d0a8:	f1ba 0f00 	cmp.w	sl, #0
9000d0ac:	d007      	beq.n	9000d0be <UART_RxISR_8BIT_FIFOEN+0x96>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d0ae:	2201      	movs	r2, #1
9000d0b0:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d0b2:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d0b6:	f042 0201 	orr.w	r2, r2, #1
9000d0ba:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d0be:	07aa      	lsls	r2, r5, #30
9000d0c0:	d507      	bpl.n	9000d0d2 <UART_RxISR_8BIT_FIFOEN+0xaa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d0c2:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000d0c6:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d0ca:	f042 0204 	orr.w	r2, r2, #4
9000d0ce:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d0d2:	0768      	lsls	r0, r5, #29
9000d0d4:	d506      	bpl.n	9000d0e4 <UART_RxISR_8BIT_FIFOEN+0xbc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d0d6:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000d0d8:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d0dc:	f043 0302 	orr.w	r3, r3, #2
9000d0e0:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d0e4:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d0e8:	2b00      	cmp	r3, #0
9000d0ea:	d0c1      	beq.n	9000d070 <UART_RxISR_8BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000d0ec:	4620      	mov	r0, r4
9000d0ee:	f7ff fc2d 	bl	9000c94c <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d0f2:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000d0f6:	e7bb      	b.n	9000d070 <UART_RxISR_8BIT_FIFOEN+0x48>
9000d0f8:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d0fa:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d0fe:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d102:	e843 2100 	strex	r1, r2, [r3]
9000d106:	2900      	cmp	r1, #0
9000d108:	d1f7      	bne.n	9000d0fa <UART_RxISR_8BIT_FIFOEN+0xd2>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d10a:	484e      	ldr	r0, [pc, #312]	@ (9000d244 <UART_RxISR_8BIT_FIFOEN+0x21c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d10c:	f103 0208 	add.w	r2, r3, #8
9000d110:	e852 2f00 	ldrex	r2, [r2]
9000d114:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d116:	f103 0508 	add.w	r5, r3, #8
9000d11a:	e845 2100 	strex	r1, r2, [r5]
9000d11e:	2900      	cmp	r1, #0
9000d120:	d1f4      	bne.n	9000d10c <UART_RxISR_8BIT_FIFOEN+0xe4>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d122:	4a49      	ldr	r2, [pc, #292]	@ (9000d248 <UART_RxISR_8BIT_FIFOEN+0x220>)
        huart->RxState = HAL_UART_STATE_READY;
9000d124:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000d126:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d128:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000d12a:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d12e:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d130:	d002      	beq.n	9000d138 <UART_RxISR_8BIT_FIFOEN+0x110>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d132:	685a      	ldr	r2, [r3, #4]
9000d134:	0211      	lsls	r1, r2, #8
9000d136:	d46f      	bmi.n	9000d218 <UART_RxISR_8BIT_FIFOEN+0x1f0>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d138:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d13a:	2a01      	cmp	r2, #1
9000d13c:	d17d      	bne.n	9000d23a <UART_RxISR_8BIT_FIFOEN+0x212>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d13e:	2200      	movs	r2, #0
9000d140:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d142:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d146:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d14a:	e843 2100 	strex	r1, r2, [r3]
9000d14e:	2900      	cmp	r1, #0
9000d150:	d1f7      	bne.n	9000d142 <UART_RxISR_8BIT_FIFOEN+0x11a>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000d152:	69da      	ldr	r2, [r3, #28]
9000d154:	06d2      	lsls	r2, r2, #27
9000d156:	d501      	bpl.n	9000d15c <UART_RxISR_8BIT_FIFOEN+0x134>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d158:	2210      	movs	r2, #16
9000d15a:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000d15c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000d160:	4620      	mov	r0, r4
9000d162:	f7ff fcf7 	bl	9000cb54 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000d166:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d16a:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000d16c:	2b00      	cmp	r3, #0
9000d16e:	f43f af6b 	beq.w	9000d048 <UART_RxISR_8BIT_FIFOEN+0x20>
9000d172:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000d176:	429a      	cmp	r2, r3
9000d178:	f67f af66 	bls.w	9000d048 <UART_RxISR_8BIT_FIFOEN+0x20>
9000d17c:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d17e:	f103 0208 	add.w	r2, r3, #8
9000d182:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000d186:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d18a:	f103 0008 	add.w	r0, r3, #8
9000d18e:	e840 2100 	strex	r1, r2, [r0]
9000d192:	2900      	cmp	r1, #0
9000d194:	d1f3      	bne.n	9000d17e <UART_RxISR_8BIT_FIFOEN+0x156>
      huart->RxISR = UART_RxISR_8BIT;
9000d196:	4a2d      	ldr	r2, [pc, #180]	@ (9000d24c <UART_RxISR_8BIT_FIFOEN+0x224>)
9000d198:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d19a:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000d19e:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d1a2:	e843 2100 	strex	r1, r2, [r3]
9000d1a6:	2900      	cmp	r1, #0
9000d1a8:	d1f7      	bne.n	9000d19a <UART_RxISR_8BIT_FIFOEN+0x172>
9000d1aa:	e74d      	b.n	9000d048 <UART_RxISR_8BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d1ac:	2601      	movs	r6, #1
9000d1ae:	e004      	b.n	9000d1ba <UART_RxISR_8BIT_FIFOEN+0x192>
      if (huart->RxXferCount == 0U)
9000d1b0:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d1b4:	b29b      	uxth	r3, r3
9000d1b6:	2b00      	cmp	r3, #0
9000d1b8:	d09e      	beq.n	9000d0f8 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d1ba:	06a8      	lsls	r0, r5, #26
9000d1bc:	d5d3      	bpl.n	9000d166 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d1be:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d1c0:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d1c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d1c4:	ea03 0309 	and.w	r3, r3, r9
9000d1c8:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000d1ca:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr++;
9000d1ce:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d1d0:	3b01      	subs	r3, #1
      huart->pRxBuffPtr++;
9000d1d2:	3201      	adds	r2, #1
      huart->RxXferCount--;
9000d1d4:	b29b      	uxth	r3, r3
      huart->pRxBuffPtr++;
9000d1d6:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d1d8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d1dc:	6823      	ldr	r3, [r4, #0]
9000d1de:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d1e0:	0769      	lsls	r1, r5, #29
9000d1e2:	d0e5      	beq.n	9000d1b0 <UART_RxISR_8BIT_FIFOEN+0x188>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d1e4:	07ea      	lsls	r2, r5, #31
9000d1e6:	d509      	bpl.n	9000d1fc <UART_RxISR_8BIT_FIFOEN+0x1d4>
9000d1e8:	f1ba 0f00 	cmp.w	sl, #0
9000d1ec:	d006      	beq.n	9000d1fc <UART_RxISR_8BIT_FIFOEN+0x1d4>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d1ee:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d1f0:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d1f4:	f043 0301 	orr.w	r3, r3, #1
9000d1f8:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d1fc:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d200:	2b00      	cmp	r3, #0
9000d202:	d0d5      	beq.n	9000d1b0 <UART_RxISR_8BIT_FIFOEN+0x188>
          HAL_UART_ErrorCallback(huart);
9000d204:	4620      	mov	r0, r4
9000d206:	f7ff fba1 	bl	9000c94c <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d20a:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000d20e:	e7cf      	b.n	9000d1b0 <UART_RxISR_8BIT_FIFOEN+0x188>
    rxdatacount = huart->RxXferCount;
9000d210:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000d214:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d218:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d21c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d220:	e843 2100 	strex	r1, r2, [r3]
9000d224:	2900      	cmp	r1, #0
9000d226:	d087      	beq.n	9000d138 <UART_RxISR_8BIT_FIFOEN+0x110>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d228:	e853 2f00 	ldrex	r2, [r3]
9000d22c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d230:	e843 2100 	strex	r1, r2, [r3]
9000d234:	2900      	cmp	r1, #0
9000d236:	d1ef      	bne.n	9000d218 <UART_RxISR_8BIT_FIFOEN+0x1f0>
9000d238:	e77e      	b.n	9000d138 <UART_RxISR_8BIT_FIFOEN+0x110>
          HAL_UART_RxCpltCallback(huart);
9000d23a:	4620      	mov	r0, r4
9000d23c:	f7f6 fad4 	bl	900037e8 <HAL_UART_RxCpltCallback>
9000d240:	e791      	b.n	9000d166 <UART_RxISR_8BIT_FIFOEN+0x13e>
9000d242:	bf00      	nop
9000d244:	effffffe 	.word	0xeffffffe
9000d248:	58000c00 	.word	0x58000c00
9000d24c:	9000cfe5 	.word	0x9000cfe5

9000d250 <UART_RxISR_16BIT_FIFOEN>:
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d250:	6803      	ldr	r3, [r0, #0]
{
9000d252:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d256:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000d258:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000d25a:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d25c:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000d260:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d264:	2a22      	cmp	r2, #34	@ 0x22
9000d266:	d005      	beq.n	9000d274 <UART_RxISR_16BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d268:	699a      	ldr	r2, [r3, #24]
9000d26a:	f042 0208 	orr.w	r2, r2, #8
9000d26e:	619a      	str	r2, [r3, #24]
  }
}
9000d270:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d274:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000d278:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d27a:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d27e:	f007 0701 	and.w	r7, r7, #1
9000d282:	2b00      	cmp	r3, #0
9000d284:	f000 80d4 	beq.w	9000d430 <UART_RxISR_16BIT_FIFOEN+0x1e0>
9000d288:	2f00      	cmp	r7, #0
9000d28a:	f000 80a1 	beq.w	9000d3d0 <UART_RxISR_16BIT_FIFOEN+0x180>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d28e:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d290:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d292:	f04f 0802 	mov.w	r8, #2
9000d296:	e004      	b.n	9000d2a2 <UART_RxISR_16BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000d298:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d29c:	b29b      	uxth	r3, r3
9000d29e:	2b00      	cmp	r3, #0
9000d2a0:	d03c      	beq.n	9000d31c <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d2a2:	06ab      	lsls	r3, r5, #26
9000d2a4:	d571      	bpl.n	9000d38a <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d2a6:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000d2a8:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d2aa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000d2ac:	ea09 0202 	and.w	r2, r9, r2
9000d2b0:	f821 2b02 	strh.w	r2, [r1], #2
      huart->RxXferCount--;
9000d2b4:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr += 2U;
9000d2b8:	65a1      	str	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d2ba:	3a01      	subs	r2, #1
9000d2bc:	b292      	uxth	r2, r2
9000d2be:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d2c2:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d2c4:	0768      	lsls	r0, r5, #29
9000d2c6:	d0e7      	beq.n	9000d298 <UART_RxISR_16BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d2c8:	07e9      	lsls	r1, r5, #31
9000d2ca:	d50a      	bpl.n	9000d2e2 <UART_RxISR_16BIT_FIFOEN+0x92>
9000d2cc:	f1ba 0f00 	cmp.w	sl, #0
9000d2d0:	d007      	beq.n	9000d2e2 <UART_RxISR_16BIT_FIFOEN+0x92>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d2d2:	2201      	movs	r2, #1
9000d2d4:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d2d6:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d2da:	f042 0201 	orr.w	r2, r2, #1
9000d2de:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d2e2:	07aa      	lsls	r2, r5, #30
9000d2e4:	d507      	bpl.n	9000d2f6 <UART_RxISR_16BIT_FIFOEN+0xa6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d2e6:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000d2ea:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d2ee:	f042 0204 	orr.w	r2, r2, #4
9000d2f2:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d2f6:	0768      	lsls	r0, r5, #29
9000d2f8:	d506      	bpl.n	9000d308 <UART_RxISR_16BIT_FIFOEN+0xb8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d2fa:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000d2fc:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d300:	f043 0302 	orr.w	r3, r3, #2
9000d304:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d308:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d30c:	2b00      	cmp	r3, #0
9000d30e:	d0c3      	beq.n	9000d298 <UART_RxISR_16BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000d310:	4620      	mov	r0, r4
9000d312:	f7ff fb1b 	bl	9000c94c <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d316:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000d31a:	e7bd      	b.n	9000d298 <UART_RxISR_16BIT_FIFOEN+0x48>
9000d31c:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d31e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d322:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d326:	e843 2100 	strex	r1, r2, [r3]
9000d32a:	2900      	cmp	r1, #0
9000d32c:	d1f7      	bne.n	9000d31e <UART_RxISR_16BIT_FIFOEN+0xce>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d32e:	484d      	ldr	r0, [pc, #308]	@ (9000d464 <UART_RxISR_16BIT_FIFOEN+0x214>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d330:	f103 0208 	add.w	r2, r3, #8
9000d334:	e852 2f00 	ldrex	r2, [r2]
9000d338:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d33a:	f103 0508 	add.w	r5, r3, #8
9000d33e:	e845 2100 	strex	r1, r2, [r5]
9000d342:	2900      	cmp	r1, #0
9000d344:	d1f4      	bne.n	9000d330 <UART_RxISR_16BIT_FIFOEN+0xe0>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d346:	4a48      	ldr	r2, [pc, #288]	@ (9000d468 <UART_RxISR_16BIT_FIFOEN+0x218>)
        huart->RxState = HAL_UART_STATE_READY;
9000d348:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000d34a:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d34c:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000d34e:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d352:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d354:	d002      	beq.n	9000d35c <UART_RxISR_16BIT_FIFOEN+0x10c>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d356:	685a      	ldr	r2, [r3, #4]
9000d358:	0211      	lsls	r1, r2, #8
9000d35a:	d46d      	bmi.n	9000d438 <UART_RxISR_16BIT_FIFOEN+0x1e8>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d35c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d35e:	2a01      	cmp	r2, #1
9000d360:	d17b      	bne.n	9000d45a <UART_RxISR_16BIT_FIFOEN+0x20a>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d362:	2200      	movs	r2, #0
9000d364:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d366:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d36a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d36e:	e843 2100 	strex	r1, r2, [r3]
9000d372:	2900      	cmp	r1, #0
9000d374:	d1f7      	bne.n	9000d366 <UART_RxISR_16BIT_FIFOEN+0x116>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000d376:	69da      	ldr	r2, [r3, #28]
9000d378:	06d2      	lsls	r2, r2, #27
9000d37a:	d501      	bpl.n	9000d380 <UART_RxISR_16BIT_FIFOEN+0x130>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d37c:	2210      	movs	r2, #16
9000d37e:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000d380:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000d384:	4620      	mov	r0, r4
9000d386:	f7ff fbe5 	bl	9000cb54 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000d38a:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d38e:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000d390:	2b00      	cmp	r3, #0
9000d392:	f43f af6d 	beq.w	9000d270 <UART_RxISR_16BIT_FIFOEN+0x20>
9000d396:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000d39a:	429a      	cmp	r2, r3
9000d39c:	f67f af68 	bls.w	9000d270 <UART_RxISR_16BIT_FIFOEN+0x20>
9000d3a0:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d3a2:	f103 0208 	add.w	r2, r3, #8
9000d3a6:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000d3aa:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d3ae:	f103 0008 	add.w	r0, r3, #8
9000d3b2:	e840 2100 	strex	r1, r2, [r0]
9000d3b6:	2900      	cmp	r1, #0
9000d3b8:	d1f3      	bne.n	9000d3a2 <UART_RxISR_16BIT_FIFOEN+0x152>
      huart->RxISR = UART_RxISR_16BIT;
9000d3ba:	4a2c      	ldr	r2, [pc, #176]	@ (9000d46c <UART_RxISR_16BIT_FIFOEN+0x21c>)
9000d3bc:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d3be:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000d3c2:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d3c6:	e843 2100 	strex	r1, r2, [r3]
9000d3ca:	2900      	cmp	r1, #0
9000d3cc:	d1f7      	bne.n	9000d3be <UART_RxISR_16BIT_FIFOEN+0x16e>
9000d3ce:	e74f      	b.n	9000d270 <UART_RxISR_16BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d3d0:	2601      	movs	r6, #1
9000d3d2:	e004      	b.n	9000d3de <UART_RxISR_16BIT_FIFOEN+0x18e>
      if (huart->RxXferCount == 0U)
9000d3d4:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d3d8:	b29b      	uxth	r3, r3
9000d3da:	2b00      	cmp	r3, #0
9000d3dc:	d09e      	beq.n	9000d31c <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d3de:	06a8      	lsls	r0, r5, #26
9000d3e0:	d5d3      	bpl.n	9000d38a <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d3e2:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000d3e4:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d3e6:	6a59      	ldr	r1, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000d3e8:	ea09 0101 	and.w	r1, r9, r1
9000d3ec:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
9000d3f0:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d3f2:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
9000d3f6:	3a01      	subs	r2, #1
9000d3f8:	b292      	uxth	r2, r2
9000d3fa:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d3fe:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d400:	0769      	lsls	r1, r5, #29
9000d402:	d0e7      	beq.n	9000d3d4 <UART_RxISR_16BIT_FIFOEN+0x184>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d404:	07ea      	lsls	r2, r5, #31
9000d406:	d509      	bpl.n	9000d41c <UART_RxISR_16BIT_FIFOEN+0x1cc>
9000d408:	f1ba 0f00 	cmp.w	sl, #0
9000d40c:	d006      	beq.n	9000d41c <UART_RxISR_16BIT_FIFOEN+0x1cc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d40e:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d410:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d414:	f043 0301 	orr.w	r3, r3, #1
9000d418:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d41c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d420:	2b00      	cmp	r3, #0
9000d422:	d0d7      	beq.n	9000d3d4 <UART_RxISR_16BIT_FIFOEN+0x184>
          HAL_UART_ErrorCallback(huart);
9000d424:	4620      	mov	r0, r4
9000d426:	f7ff fa91 	bl	9000c94c <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d42a:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000d42e:	e7d1      	b.n	9000d3d4 <UART_RxISR_16BIT_FIFOEN+0x184>
    rxdatacount = huart->RxXferCount;
9000d430:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000d434:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d438:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d43c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d440:	e843 2100 	strex	r1, r2, [r3]
9000d444:	2900      	cmp	r1, #0
9000d446:	d089      	beq.n	9000d35c <UART_RxISR_16BIT_FIFOEN+0x10c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d448:	e853 2f00 	ldrex	r2, [r3]
9000d44c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d450:	e843 2100 	strex	r1, r2, [r3]
9000d454:	2900      	cmp	r1, #0
9000d456:	d1ef      	bne.n	9000d438 <UART_RxISR_16BIT_FIFOEN+0x1e8>
9000d458:	e780      	b.n	9000d35c <UART_RxISR_16BIT_FIFOEN+0x10c>
          HAL_UART_RxCpltCallback(huart);
9000d45a:	4620      	mov	r0, r4
9000d45c:	f7f6 f9c4 	bl	900037e8 <HAL_UART_RxCpltCallback>
9000d460:	e793      	b.n	9000d38a <UART_RxISR_16BIT_FIFOEN+0x13a>
9000d462:	bf00      	nop
9000d464:	effffffe 	.word	0xeffffffe
9000d468:	58000c00 	.word	0x58000c00
9000d46c:	9000cf9d 	.word	0x9000cf9d

9000d470 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d470:	6901      	ldr	r1, [r0, #16]
9000d472:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d474:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d476:	430a      	orrs	r2, r1
{
9000d478:	b570      	push	{r4, r5, r6, lr}
9000d47a:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d47c:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d47e:	69c0      	ldr	r0, [r0, #28]
{
9000d480:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d482:	6961      	ldr	r1, [r4, #20]
9000d484:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d486:	49a0      	ldr	r1, [pc, #640]	@ (9000d708 <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d488:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d48a:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d48c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d48e:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d490:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d492:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d494:	685a      	ldr	r2, [r3, #4]
9000d496:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000d49a:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000d49c:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d49e:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000d4a0:	4a9a      	ldr	r2, [pc, #616]	@ (9000d70c <UART_SetConfig+0x29c>)
9000d4a2:	4293      	cmp	r3, r2
9000d4a4:	f000 8119 	beq.w	9000d6da <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000d4a8:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d4aa:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000d4ac:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d4ae:	4a98      	ldr	r2, [pc, #608]	@ (9000d710 <UART_SetConfig+0x2a0>)
9000d4b0:	4032      	ands	r2, r6
9000d4b2:	4311      	orrs	r1, r2
9000d4b4:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d4b6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000d4b8:	f022 020f 	bic.w	r2, r2, #15
9000d4bc:	432a      	orrs	r2, r5
9000d4be:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d4c0:	4a94      	ldr	r2, [pc, #592]	@ (9000d714 <UART_SetConfig+0x2a4>)
9000d4c2:	4293      	cmp	r3, r2
9000d4c4:	d028      	beq.n	9000d518 <UART_SetConfig+0xa8>
9000d4c6:	4a94      	ldr	r2, [pc, #592]	@ (9000d718 <UART_SetConfig+0x2a8>)
9000d4c8:	4293      	cmp	r3, r2
9000d4ca:	d01a      	beq.n	9000d502 <UART_SetConfig+0x92>
9000d4cc:	4a93      	ldr	r2, [pc, #588]	@ (9000d71c <UART_SetConfig+0x2ac>)
9000d4ce:	4293      	cmp	r3, r2
9000d4d0:	d017      	beq.n	9000d502 <UART_SetConfig+0x92>
9000d4d2:	4a93      	ldr	r2, [pc, #588]	@ (9000d720 <UART_SetConfig+0x2b0>)
9000d4d4:	4293      	cmp	r3, r2
9000d4d6:	d014      	beq.n	9000d502 <UART_SetConfig+0x92>
9000d4d8:	4a92      	ldr	r2, [pc, #584]	@ (9000d724 <UART_SetConfig+0x2b4>)
9000d4da:	4293      	cmp	r3, r2
9000d4dc:	d011      	beq.n	9000d502 <UART_SetConfig+0x92>
9000d4de:	4a92      	ldr	r2, [pc, #584]	@ (9000d728 <UART_SetConfig+0x2b8>)
9000d4e0:	4293      	cmp	r3, r2
9000d4e2:	d019      	beq.n	9000d518 <UART_SetConfig+0xa8>
9000d4e4:	4a91      	ldr	r2, [pc, #580]	@ (9000d72c <UART_SetConfig+0x2bc>)
9000d4e6:	4293      	cmp	r3, r2
9000d4e8:	d00b      	beq.n	9000d502 <UART_SetConfig+0x92>
9000d4ea:	4a91      	ldr	r2, [pc, #580]	@ (9000d730 <UART_SetConfig+0x2c0>)
9000d4ec:	4293      	cmp	r3, r2
9000d4ee:	d008      	beq.n	9000d502 <UART_SetConfig+0x92>
        ret = HAL_ERROR;
9000d4f0:	2001      	movs	r0, #1
  huart->RxISR = NULL;
9000d4f2:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000d4f4:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000d4f8:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000d4fa:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000d4fc:	67a3      	str	r3, [r4, #120]	@ 0x78
}
9000d4fe:	b006      	add	sp, #24
9000d500:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d502:	4b8c      	ldr	r3, [pc, #560]	@ (9000d734 <UART_SetConfig+0x2c4>)
9000d504:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000d506:	f003 0307 	and.w	r3, r3, #7
9000d50a:	2b05      	cmp	r3, #5
9000d50c:	d8f0      	bhi.n	9000d4f0 <UART_SetConfig+0x80>
9000d50e:	e8df f003 	tbb	[pc, r3]
9000d512:	7e9e      	.short	0x7e9e
9000d514:	785f9189 	.word	0x785f9189
9000d518:	4b86      	ldr	r3, [pc, #536]	@ (9000d734 <UART_SetConfig+0x2c4>)
9000d51a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000d51c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d520:	2b28      	cmp	r3, #40	@ 0x28
9000d522:	d8e5      	bhi.n	9000d4f0 <UART_SetConfig+0x80>
9000d524:	a201      	add	r2, pc, #4	@ (adr r2, 9000d52c <UART_SetConfig+0xbc>)
9000d526:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000d52a:	bf00      	nop
9000d52c:	9000d6a9 	.word	0x9000d6a9
9000d530:	9000d4f1 	.word	0x9000d4f1
9000d534:	9000d4f1 	.word	0x9000d4f1
9000d538:	9000d4f1 	.word	0x9000d4f1
9000d53c:	9000d4f1 	.word	0x9000d4f1
9000d540:	9000d4f1 	.word	0x9000d4f1
9000d544:	9000d4f1 	.word	0x9000d4f1
9000d548:	9000d4f1 	.word	0x9000d4f1
9000d54c:	9000d60f 	.word	0x9000d60f
9000d550:	9000d4f1 	.word	0x9000d4f1
9000d554:	9000d4f1 	.word	0x9000d4f1
9000d558:	9000d4f1 	.word	0x9000d4f1
9000d55c:	9000d4f1 	.word	0x9000d4f1
9000d560:	9000d4f1 	.word	0x9000d4f1
9000d564:	9000d4f1 	.word	0x9000d4f1
9000d568:	9000d4f1 	.word	0x9000d4f1
9000d56c:	9000d625 	.word	0x9000d625
9000d570:	9000d4f1 	.word	0x9000d4f1
9000d574:	9000d4f1 	.word	0x9000d4f1
9000d578:	9000d4f1 	.word	0x9000d4f1
9000d57c:	9000d4f1 	.word	0x9000d4f1
9000d580:	9000d4f1 	.word	0x9000d4f1
9000d584:	9000d4f1 	.word	0x9000d4f1
9000d588:	9000d4f1 	.word	0x9000d4f1
9000d58c:	9000d635 	.word	0x9000d635
9000d590:	9000d4f1 	.word	0x9000d4f1
9000d594:	9000d4f1 	.word	0x9000d4f1
9000d598:	9000d4f1 	.word	0x9000d4f1
9000d59c:	9000d4f1 	.word	0x9000d4f1
9000d5a0:	9000d4f1 	.word	0x9000d4f1
9000d5a4:	9000d4f1 	.word	0x9000d4f1
9000d5a8:	9000d4f1 	.word	0x9000d4f1
9000d5ac:	9000d5d1 	.word	0x9000d5d1
9000d5b0:	9000d4f1 	.word	0x9000d4f1
9000d5b4:	9000d4f1 	.word	0x9000d4f1
9000d5b8:	9000d4f1 	.word	0x9000d4f1
9000d5bc:	9000d4f1 	.word	0x9000d4f1
9000d5c0:	9000d4f1 	.word	0x9000d4f1
9000d5c4:	9000d4f1 	.word	0x9000d4f1
9000d5c8:	9000d4f1 	.word	0x9000d4f1
9000d5cc:	9000d603 	.word	0x9000d603
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d5d0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000d5d4:	4858      	ldr	r0, [pc, #352]	@ (9000d738 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d5d6:	d047      	beq.n	9000d668 <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d5d8:	4a58      	ldr	r2, [pc, #352]	@ (9000d73c <UART_SetConfig+0x2cc>)
9000d5da:	6863      	ldr	r3, [r4, #4]
9000d5dc:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d5e0:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d5e4:	fbb0 f0f1 	udiv	r0, r0, r1
9000d5e8:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000d5ec:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d5f0:	f1a0 0310 	sub.w	r3, r0, #16
9000d5f4:	4293      	cmp	r3, r2
9000d5f6:	f63f af7b 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000d5fa:	6823      	ldr	r3, [r4, #0]
9000d5fc:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000d5fe:	2000      	movs	r0, #0
9000d600:	e777      	b.n	9000d4f2 <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d602:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d606:	d02f      	beq.n	9000d668 <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000d608:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000d60c:	e7e4      	b.n	9000d5d8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d60e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d612:	d022      	beq.n	9000d65a <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000d614:	4668      	mov	r0, sp
9000d616:	f7fe fc47 	bl	9000bea8 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000d61a:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000d61c:	2800      	cmp	r0, #0
9000d61e:	d0ee      	beq.n	9000d5fe <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d620:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d622:	e7d9      	b.n	9000d5d8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d624:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d628:	d04f      	beq.n	9000d6ca <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000d62a:	a803      	add	r0, sp, #12
9000d62c:	f7fe fcd6 	bl	9000bfdc <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000d630:	9804      	ldr	r0, [sp, #16]
        break;
9000d632:	e7f3      	b.n	9000d61c <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d634:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d638:	d03c      	beq.n	9000d6b4 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d63a:	4b3e      	ldr	r3, [pc, #248]	@ (9000d734 <UART_SetConfig+0x2c4>)
9000d63c:	681a      	ldr	r2, [r3, #0]
9000d63e:	0691      	lsls	r1, r2, #26
9000d640:	d52d      	bpl.n	9000d69e <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000d642:	681b      	ldr	r3, [r3, #0]
9000d644:	483e      	ldr	r0, [pc, #248]	@ (9000d740 <UART_SetConfig+0x2d0>)
9000d646:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d64a:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000d64c:	e7c4      	b.n	9000d5d8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d64e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d652:	d026      	beq.n	9000d6a2 <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000d654:	f7fd fb36 	bl	9000acc4 <HAL_RCC_GetPCLK1Freq>
        break;
9000d658:	e7e0      	b.n	9000d61c <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000d65a:	4668      	mov	r0, sp
9000d65c:	f7fe fc24 	bl	9000bea8 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000d660:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000d662:	2800      	cmp	r0, #0
9000d664:	d0cb      	beq.n	9000d5fe <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d666:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d668:	4b34      	ldr	r3, [pc, #208]	@ (9000d73c <UART_SetConfig+0x2cc>)
9000d66a:	6862      	ldr	r2, [r4, #4]
9000d66c:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000d670:	0853      	lsrs	r3, r2, #1
9000d672:	fbb0 f0f1 	udiv	r0, r0, r1
9000d676:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d67a:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d67e:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d682:	f1a3 0210 	sub.w	r2, r3, #16
9000d686:	428a      	cmp	r2, r1
9000d688:	f63f af32 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000d68c:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000d690:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000d694:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000d696:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000d698:	4313      	orrs	r3, r2
9000d69a:	60cb      	str	r3, [r1, #12]
9000d69c:	e7af      	b.n	9000d5fe <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000d69e:	4828      	ldr	r0, [pc, #160]	@ (9000d740 <UART_SetConfig+0x2d0>)
9000d6a0:	e79a      	b.n	9000d5d8 <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000d6a2:	f7fd fb0f 	bl	9000acc4 <HAL_RCC_GetPCLK1Freq>
        break;
9000d6a6:	e7dc      	b.n	9000d662 <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d6a8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d6ac:	d012      	beq.n	9000d6d4 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000d6ae:	f7fd fb51 	bl	9000ad54 <HAL_RCC_GetPCLK2Freq>
        break;
9000d6b2:	e7b3      	b.n	9000d61c <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d6b4:	4b1f      	ldr	r3, [pc, #124]	@ (9000d734 <UART_SetConfig+0x2c4>)
9000d6b6:	681a      	ldr	r2, [r3, #0]
9000d6b8:	0690      	lsls	r0, r2, #26
9000d6ba:	f140 808b 	bpl.w	9000d7d4 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000d6be:	681b      	ldr	r3, [r3, #0]
9000d6c0:	481f      	ldr	r0, [pc, #124]	@ (9000d740 <UART_SetConfig+0x2d0>)
9000d6c2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d6c6:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000d6c8:	e7ce      	b.n	9000d668 <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000d6ca:	a803      	add	r0, sp, #12
9000d6cc:	f7fe fc86 	bl	9000bfdc <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000d6d0:	9804      	ldr	r0, [sp, #16]
        break;
9000d6d2:	e7c6      	b.n	9000d662 <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000d6d4:	f7fd fb3e 	bl	9000ad54 <HAL_RCC_GetPCLK2Freq>
        break;
9000d6d8:	e7c3      	b.n	9000d662 <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d6da:	6898      	ldr	r0, [r3, #8]
9000d6dc:	4a0c      	ldr	r2, [pc, #48]	@ (9000d710 <UART_SetConfig+0x2a0>)
9000d6de:	4002      	ands	r2, r0
9000d6e0:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d6e2:	4914      	ldr	r1, [pc, #80]	@ (9000d734 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d6e4:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d6e6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000d6e8:	f022 020f 	bic.w	r2, r2, #15
9000d6ec:	432a      	orrs	r2, r5
9000d6ee:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d6f0:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000d6f2:	f003 0307 	and.w	r3, r3, #7
9000d6f6:	2b05      	cmp	r3, #5
9000d6f8:	f63f aefa 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
9000d6fc:	e8df f003 	tbb	[pc, r3]
9000d700:	224e575c 	.word	0x224e575c
9000d704:	5f62      	.short	0x5f62
9000d706:	bf00      	nop
9000d708:	cfff69f3 	.word	0xcfff69f3
9000d70c:	58000c00 	.word	0x58000c00
9000d710:	11fff4ff 	.word	0x11fff4ff
9000d714:	40011000 	.word	0x40011000
9000d718:	40004400 	.word	0x40004400
9000d71c:	40004800 	.word	0x40004800
9000d720:	40004c00 	.word	0x40004c00
9000d724:	40005000 	.word	0x40005000
9000d728:	40011400 	.word	0x40011400
9000d72c:	40007800 	.word	0x40007800
9000d730:	40007c00 	.word	0x40007c00
9000d734:	58024400 	.word	0x58024400
9000d738:	003d0900 	.word	0x003d0900
9000d73c:	9002d3a0 	.word	0x9002d3a0
9000d740:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d744:	4b24      	ldr	r3, [pc, #144]	@ (9000d7d8 <UART_SetConfig+0x368>)
9000d746:	681a      	ldr	r2, [r3, #0]
9000d748:	0692      	lsls	r2, r2, #26
9000d74a:	d43d      	bmi.n	9000d7c8 <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000d74c:	4823      	ldr	r0, [pc, #140]	@ (9000d7dc <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000d74e:	4b24      	ldr	r3, [pc, #144]	@ (9000d7e0 <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000d750:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000d752:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000d756:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000d75a:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000d75e:	4299      	cmp	r1, r3
9000d760:	f63f aec6 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
9000d764:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000d768:	f63f aec2 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d76c:	2300      	movs	r3, #0
9000d76e:	4619      	mov	r1, r3
9000d770:	f7f3 f812 	bl	90000798 <__aeabi_uldivmod>
9000d774:	4632      	mov	r2, r6
9000d776:	0209      	lsls	r1, r1, #8
9000d778:	0203      	lsls	r3, r0, #8
9000d77a:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000d77e:	0870      	lsrs	r0, r6, #1
9000d780:	1818      	adds	r0, r3, r0
9000d782:	f04f 0300 	mov.w	r3, #0
9000d786:	f141 0100 	adc.w	r1, r1, #0
9000d78a:	f7f3 f805 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000d78e:	4b15      	ldr	r3, [pc, #84]	@ (9000d7e4 <UART_SetConfig+0x374>)
9000d790:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000d794:	429a      	cmp	r2, r3
9000d796:	f63f aeab 	bhi.w	9000d4f0 <UART_SetConfig+0x80>
9000d79a:	e72e      	b.n	9000d5fa <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000d79c:	a803      	add	r0, sp, #12
9000d79e:	f7fe fc1d 	bl	9000bfdc <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000d7a2:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000d7a4:	2800      	cmp	r0, #0
9000d7a6:	f43f af2a 	beq.w	9000d5fe <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000d7aa:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d7ac:	e7cf      	b.n	9000d74e <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000d7ae:	4668      	mov	r0, sp
9000d7b0:	f7fe fb7a 	bl	9000bea8 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000d7b4:	9801      	ldr	r0, [sp, #4]
        break;
9000d7b6:	e7f5      	b.n	9000d7a4 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000d7b8:	f7fe fb64 	bl	9000be84 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000d7bc:	e7f2      	b.n	9000d7a4 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000d7be:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000d7c2:	e7c4      	b.n	9000d74e <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000d7c4:	4808      	ldr	r0, [pc, #32]	@ (9000d7e8 <UART_SetConfig+0x378>)
9000d7c6:	e7c2      	b.n	9000d74e <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000d7c8:	681b      	ldr	r3, [r3, #0]
9000d7ca:	4804      	ldr	r0, [pc, #16]	@ (9000d7dc <UART_SetConfig+0x36c>)
9000d7cc:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d7d0:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000d7d2:	e7bc      	b.n	9000d74e <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000d7d4:	4801      	ldr	r0, [pc, #4]	@ (9000d7dc <UART_SetConfig+0x36c>)
9000d7d6:	e747      	b.n	9000d668 <UART_SetConfig+0x1f8>
9000d7d8:	58024400 	.word	0x58024400
9000d7dc:	03d09000 	.word	0x03d09000
9000d7e0:	9002d3a0 	.word	0x9002d3a0
9000d7e4:	000ffcff 	.word	0x000ffcff
9000d7e8:	003d0900 	.word	0x003d0900

9000d7ec <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000d7ec:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000d7ee:	071a      	lsls	r2, r3, #28
{
9000d7f0:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000d7f2:	d506      	bpl.n	9000d802 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000d7f4:	6801      	ldr	r1, [r0, #0]
9000d7f6:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000d7f8:	684a      	ldr	r2, [r1, #4]
9000d7fa:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000d7fe:	4322      	orrs	r2, r4
9000d800:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000d802:	07dc      	lsls	r4, r3, #31
9000d804:	d506      	bpl.n	9000d814 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000d806:	6801      	ldr	r1, [r0, #0]
9000d808:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000d80a:	684a      	ldr	r2, [r1, #4]
9000d80c:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000d810:	4322      	orrs	r2, r4
9000d812:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000d814:	0799      	lsls	r1, r3, #30
9000d816:	d506      	bpl.n	9000d826 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000d818:	6801      	ldr	r1, [r0, #0]
9000d81a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000d81c:	684a      	ldr	r2, [r1, #4]
9000d81e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000d822:	4322      	orrs	r2, r4
9000d824:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000d826:	075a      	lsls	r2, r3, #29
9000d828:	d506      	bpl.n	9000d838 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000d82a:	6801      	ldr	r1, [r0, #0]
9000d82c:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000d82e:	684a      	ldr	r2, [r1, #4]
9000d830:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000d834:	4322      	orrs	r2, r4
9000d836:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000d838:	06dc      	lsls	r4, r3, #27
9000d83a:	d506      	bpl.n	9000d84a <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000d83c:	6801      	ldr	r1, [r0, #0]
9000d83e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000d840:	688a      	ldr	r2, [r1, #8]
9000d842:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000d846:	4322      	orrs	r2, r4
9000d848:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000d84a:	0699      	lsls	r1, r3, #26
9000d84c:	d506      	bpl.n	9000d85c <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000d84e:	6801      	ldr	r1, [r0, #0]
9000d850:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000d852:	688a      	ldr	r2, [r1, #8]
9000d854:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000d858:	4322      	orrs	r2, r4
9000d85a:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000d85c:	065a      	lsls	r2, r3, #25
9000d85e:	d50a      	bpl.n	9000d876 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000d860:	6801      	ldr	r1, [r0, #0]
9000d862:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000d864:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000d866:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000d86a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000d86e:	ea42 0204 	orr.w	r2, r2, r4
9000d872:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000d874:	d00b      	beq.n	9000d88e <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000d876:	061b      	lsls	r3, r3, #24
9000d878:	d506      	bpl.n	9000d888 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000d87a:	6802      	ldr	r2, [r0, #0]
9000d87c:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000d87e:	6853      	ldr	r3, [r2, #4]
9000d880:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000d884:	430b      	orrs	r3, r1
9000d886:	6053      	str	r3, [r2, #4]
}
9000d888:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d88c:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000d88e:	684a      	ldr	r2, [r1, #4]
9000d890:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000d892:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000d896:	4322      	orrs	r2, r4
9000d898:	604a      	str	r2, [r1, #4]
9000d89a:	e7ec      	b.n	9000d876 <UART_AdvFeatureConfig+0x8a>

9000d89c <UART_CheckIdleState>:
{
9000d89c:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d89e:	2300      	movs	r3, #0
{
9000d8a0:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d8a2:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  tickstart = HAL_GetTick();
9000d8a6:	f7f8 fefb 	bl	900066a0 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000d8aa:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000d8ac:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000d8ae:	6813      	ldr	r3, [r2, #0]
9000d8b0:	071b      	lsls	r3, r3, #28
9000d8b2:	d40f      	bmi.n	9000d8d4 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000d8b4:	6813      	ldr	r3, [r2, #0]
9000d8b6:	0759      	lsls	r1, r3, #29
9000d8b8:	d431      	bmi.n	9000d91e <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d8ba:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000d8bc:	2220      	movs	r2, #32
  return HAL_OK;
9000d8be:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000d8c0:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000d8c4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d8c8:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d8ca:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000d8cc:	2300      	movs	r3, #0
9000d8ce:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000d8d2:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000d8d4:	69d3      	ldr	r3, [r2, #28]
9000d8d6:	0298      	lsls	r0, r3, #10
9000d8d8:	d4ec      	bmi.n	9000d8b4 <UART_CheckIdleState+0x18>
9000d8da:	e00c      	b.n	9000d8f6 <UART_CheckIdleState+0x5a>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000d8dc:	6819      	ldr	r1, [r3, #0]
9000d8de:	461a      	mov	r2, r3
9000d8e0:	0749      	lsls	r1, r1, #29
9000d8e2:	d505      	bpl.n	9000d8f0 <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000d8e4:	69d9      	ldr	r1, [r3, #28]
9000d8e6:	0708      	lsls	r0, r1, #28
9000d8e8:	d44a      	bmi.n	9000d980 <UART_CheckIdleState+0xe4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000d8ea:	69d9      	ldr	r1, [r3, #28]
9000d8ec:	0509      	lsls	r1, r1, #20
9000d8ee:	d475      	bmi.n	9000d9dc <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000d8f0:	69db      	ldr	r3, [r3, #28]
9000d8f2:	0298      	lsls	r0, r3, #10
9000d8f4:	d4de      	bmi.n	9000d8b4 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000d8f6:	f7f8 fed3 	bl	900066a0 <HAL_GetTick>
9000d8fa:	1b43      	subs	r3, r0, r5
9000d8fc:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000d900:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000d902:	d3eb      	bcc.n	9000d8dc <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d904:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000d908:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d90c:	e843 2100 	strex	r1, r2, [r3]
9000d910:	2900      	cmp	r1, #0
9000d912:	d1f7      	bne.n	9000d904 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000d914:	2320      	movs	r3, #32
9000d916:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000d91a:	2003      	movs	r0, #3
9000d91c:	e7d6      	b.n	9000d8cc <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000d91e:	69d3      	ldr	r3, [r2, #28]
9000d920:	025b      	lsls	r3, r3, #9
9000d922:	d4ca      	bmi.n	9000d8ba <UART_CheckIdleState+0x1e>
9000d924:	e00d      	b.n	9000d942 <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000d926:	681a      	ldr	r2, [r3, #0]
9000d928:	0750      	lsls	r0, r2, #29
9000d92a:	d507      	bpl.n	9000d93c <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000d92c:	69da      	ldr	r2, [r3, #28]
9000d92e:	0711      	lsls	r1, r2, #28
9000d930:	f100 8082 	bmi.w	9000da38 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000d934:	69da      	ldr	r2, [r3, #28]
9000d936:	0512      	lsls	r2, r2, #20
9000d938:	f100 80ac 	bmi.w	9000da94 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000d93c:	69db      	ldr	r3, [r3, #28]
9000d93e:	025b      	lsls	r3, r3, #9
9000d940:	d4bb      	bmi.n	9000d8ba <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000d942:	f7f8 fead 	bl	900066a0 <HAL_GetTick>
9000d946:	1b43      	subs	r3, r0, r5
9000d948:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000d94c:	6823      	ldr	r3, [r4, #0]
9000d94e:	d3ea      	bcc.n	9000d926 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d950:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000d954:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d958:	e843 2100 	strex	r1, r2, [r3]
9000d95c:	2900      	cmp	r1, #0
9000d95e:	d1f7      	bne.n	9000d950 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d960:	f103 0208 	add.w	r2, r3, #8
9000d964:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000d968:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d96c:	f103 0008 	add.w	r0, r3, #8
9000d970:	e840 2100 	strex	r1, r2, [r0]
9000d974:	2900      	cmp	r1, #0
9000d976:	d1f3      	bne.n	9000d960 <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000d978:	2320      	movs	r3, #32
9000d97a:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000d97e:	e7cc      	b.n	9000d91a <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000d980:	2208      	movs	r2, #8
9000d982:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d984:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000d988:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d98c:	e843 2100 	strex	r1, r2, [r3]
9000d990:	2900      	cmp	r1, #0
9000d992:	d1f7      	bne.n	9000d984 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d994:	4856      	ldr	r0, [pc, #344]	@ (9000daf0 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d996:	f103 0208 	add.w	r2, r3, #8
9000d99a:	e852 2f00 	ldrex	r2, [r2]
9000d99e:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d9a0:	f103 0508 	add.w	r5, r3, #8
9000d9a4:	e845 2100 	strex	r1, r2, [r5]
9000d9a8:	2900      	cmp	r1, #0
9000d9aa:	d1f4      	bne.n	9000d996 <UART_CheckIdleState+0xfa>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d9ac:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d9ae:	2a01      	cmp	r2, #1
9000d9b0:	d00b      	beq.n	9000d9ca <UART_CheckIdleState+0x12e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d9b2:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000d9b4:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000d9b6:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000d9b8:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000d9bc:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d9be:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000d9c0:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000d9c4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000d9c8:	e79c      	b.n	9000d904 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d9ca:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d9ce:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d9d2:	e843 2100 	strex	r1, r2, [r3]
9000d9d6:	2900      	cmp	r1, #0
9000d9d8:	d1f7      	bne.n	9000d9ca <UART_CheckIdleState+0x12e>
9000d9da:	e7ea      	b.n	9000d9b2 <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000d9dc:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000d9e0:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d9e2:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000d9e6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d9ea:	e843 2100 	strex	r1, r2, [r3]
9000d9ee:	2900      	cmp	r1, #0
9000d9f0:	d1f7      	bne.n	9000d9e2 <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d9f2:	483f      	ldr	r0, [pc, #252]	@ (9000daf0 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d9f4:	f103 0208 	add.w	r2, r3, #8
9000d9f8:	e852 2f00 	ldrex	r2, [r2]
9000d9fc:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d9fe:	f103 0508 	add.w	r5, r3, #8
9000da02:	e845 2100 	strex	r1, r2, [r5]
9000da06:	2900      	cmp	r1, #0
9000da08:	d1f4      	bne.n	9000d9f4 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000da0a:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000da0c:	2a01      	cmp	r2, #1
9000da0e:	d00a      	beq.n	9000da26 <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da10:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000da12:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000da14:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000da16:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000da1a:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da1e:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000da20:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000da24:	e76e      	b.n	9000d904 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000da26:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000da2a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000da2e:	e843 2100 	strex	r1, r2, [r3]
9000da32:	2900      	cmp	r1, #0
9000da34:	d1f7      	bne.n	9000da26 <UART_CheckIdleState+0x18a>
9000da36:	e7eb      	b.n	9000da10 <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000da38:	2208      	movs	r2, #8
9000da3a:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000da3c:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000da40:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000da44:	e843 2100 	strex	r1, r2, [r3]
9000da48:	2900      	cmp	r1, #0
9000da4a:	d1f7      	bne.n	9000da3c <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000da4c:	4828      	ldr	r0, [pc, #160]	@ (9000daf0 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000da4e:	f103 0208 	add.w	r2, r3, #8
9000da52:	e852 2f00 	ldrex	r2, [r2]
9000da56:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000da58:	f103 0508 	add.w	r5, r3, #8
9000da5c:	e845 2100 	strex	r1, r2, [r5]
9000da60:	2900      	cmp	r1, #0
9000da62:	d1f4      	bne.n	9000da4e <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000da64:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000da66:	2a01      	cmp	r2, #1
9000da68:	d00b      	beq.n	9000da82 <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da6a:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000da6c:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000da6e:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000da70:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000da74:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da76:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000da78:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000da7c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000da80:	e766      	b.n	9000d950 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000da82:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000da86:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000da8a:	e843 2100 	strex	r1, r2, [r3]
9000da8e:	2900      	cmp	r1, #0
9000da90:	d1f7      	bne.n	9000da82 <UART_CheckIdleState+0x1e6>
9000da92:	e7ea      	b.n	9000da6a <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000da94:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000da98:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000da9a:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000da9e:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000daa2:	e843 2100 	strex	r1, r2, [r3]
9000daa6:	2900      	cmp	r1, #0
9000daa8:	d1f7      	bne.n	9000da9a <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000daaa:	4811      	ldr	r0, [pc, #68]	@ (9000daf0 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000daac:	f103 0208 	add.w	r2, r3, #8
9000dab0:	e852 2f00 	ldrex	r2, [r2]
9000dab4:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dab6:	f103 0508 	add.w	r5, r3, #8
9000daba:	e845 2100 	strex	r1, r2, [r5]
9000dabe:	2900      	cmp	r1, #0
9000dac0:	d1f4      	bne.n	9000daac <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000dac2:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000dac4:	2a01      	cmp	r2, #1
9000dac6:	d00a      	beq.n	9000dade <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dac8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000daca:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000dacc:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000dace:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000dad2:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dad6:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000dad8:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000dadc:	e738      	b.n	9000d950 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dade:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dae2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dae6:	e843 2100 	strex	r1, r2, [r3]
9000daea:	2900      	cmp	r1, #0
9000daec:	d1f7      	bne.n	9000dade <UART_CheckIdleState+0x242>
9000daee:	e7eb      	b.n	9000dac8 <UART_CheckIdleState+0x22c>
9000daf0:	effffffe 	.word	0xeffffffe

9000daf4 <HAL_UART_Init>:
  if (huart == NULL)
9000daf4:	b380      	cbz	r0, 9000db58 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000daf6:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000dafa:	b510      	push	{r4, lr}
9000dafc:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000dafe:	b333      	cbz	r3, 9000db4e <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000db00:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000db02:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000db04:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000db06:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000db0a:	6813      	ldr	r3, [r2, #0]
9000db0c:	f023 0301 	bic.w	r3, r3, #1
9000db10:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000db12:	b9c1      	cbnz	r1, 9000db46 <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000db14:	4620      	mov	r0, r4
9000db16:	f7ff fcab 	bl	9000d470 <UART_SetConfig>
9000db1a:	2801      	cmp	r0, #1
9000db1c:	d011      	beq.n	9000db42 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000db1e:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000db20:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000db22:	685a      	ldr	r2, [r3, #4]
9000db24:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000db28:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000db2a:	689a      	ldr	r2, [r3, #8]
9000db2c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000db30:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000db32:	681a      	ldr	r2, [r3, #0]
9000db34:	f042 0201 	orr.w	r2, r2, #1
}
9000db38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000db3c:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000db3e:	f7ff bead 	b.w	9000d89c <UART_CheckIdleState>
}
9000db42:	2001      	movs	r0, #1
9000db44:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000db46:	4620      	mov	r0, r4
9000db48:	f7ff fe50 	bl	9000d7ec <UART_AdvFeatureConfig>
9000db4c:	e7e2      	b.n	9000db14 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000db4e:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000db52:	f7f6 fc1f 	bl	90004394 <HAL_UART_MspInit>
9000db56:	e7d3      	b.n	9000db00 <HAL_UART_Init+0xc>
}
9000db58:	2001      	movs	r0, #1
9000db5a:	4770      	bx	lr

9000db5c <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
9000db5c:	4770      	bx	lr
9000db5e:	bf00      	nop

9000db60 <HAL_UARTEx_RxFifoFullCallback>:
/**
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
9000db60:	4770      	bx	lr
9000db62:	bf00      	nop

9000db64 <HAL_UARTEx_TxFifoEmptyCallback>:
/**
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
9000db64:	4770      	bx	lr
9000db66:	bf00      	nop

9000db68 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000db68:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000db6c:	2a01      	cmp	r2, #1
9000db6e:	d017      	beq.n	9000dba0 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000db70:	6802      	ldr	r2, [r0, #0]
9000db72:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000db74:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000db76:	2100      	movs	r1, #0
{
9000db78:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000db7a:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000db7e:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000db80:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000db82:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000db84:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000db88:	f024 0401 	bic.w	r4, r4, #1
9000db8c:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000db8e:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000db90:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000db92:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000db94:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000db98:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000db9c:	bc30      	pop	{r4, r5}
9000db9e:	4770      	bx	lr
  __HAL_LOCK(huart);
9000dba0:	2002      	movs	r0, #2
}
9000dba2:	4770      	bx	lr

9000dba4 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000dba4:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000dba8:	2a01      	cmp	r2, #1
9000dbaa:	d037      	beq.n	9000dc1c <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000dbac:	6802      	ldr	r2, [r0, #0]
9000dbae:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000dbb0:	2024      	movs	r0, #36	@ 0x24
{
9000dbb2:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000dbb4:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000dbb8:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000dbba:	6810      	ldr	r0, [r2, #0]
9000dbbc:	f020 0001 	bic.w	r0, r0, #1
9000dbc0:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000dbc2:	6890      	ldr	r0, [r2, #8]
9000dbc4:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000dbc8:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000dbca:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000dbcc:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000dbce:	b310      	cbz	r0, 9000dc16 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000dbd0:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dbd2:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dbd4:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dbd8:	4911      	ldr	r1, [pc, #68]	@ (9000dc20 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dbda:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000dbde:	4d11      	ldr	r5, [pc, #68]	@ (9000dc24 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dbe0:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dbe4:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000dbe8:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dbec:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000dbee:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dbf2:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dbf4:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dbf8:	fbb1 f1f5 	udiv	r1, r1, r5
9000dbfc:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000dc00:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000dc02:	2100      	movs	r1, #0
9000dc04:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000dc08:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000dc0a:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000dc0c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000dc10:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000dc14:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000dc16:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000dc18:	4608      	mov	r0, r1
9000dc1a:	e7ef      	b.n	9000dbfc <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000dc1c:	2002      	movs	r0, #2
}
9000dc1e:	4770      	bx	lr
9000dc20:	9002d3c0 	.word	0x9002d3c0
9000dc24:	9002d3b8 	.word	0x9002d3b8

9000dc28 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000dc28:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000dc2c:	2a01      	cmp	r2, #1
9000dc2e:	d037      	beq.n	9000dca0 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000dc30:	6802      	ldr	r2, [r0, #0]
9000dc32:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000dc34:	2024      	movs	r0, #36	@ 0x24
{
9000dc36:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000dc38:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000dc3c:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000dc3e:	6810      	ldr	r0, [r2, #0]
9000dc40:	f020 0001 	bic.w	r0, r0, #1
9000dc44:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000dc46:	6890      	ldr	r0, [r2, #8]
9000dc48:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000dc4c:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000dc4e:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000dc50:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000dc52:	b310      	cbz	r0, 9000dc9a <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000dc54:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dc56:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dc58:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dc5c:	4911      	ldr	r1, [pc, #68]	@ (9000dca4 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dc5e:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000dc62:	4d11      	ldr	r5, [pc, #68]	@ (9000dca8 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dc64:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dc68:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000dc6c:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dc70:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000dc72:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dc76:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dc78:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dc7c:	fbb1 f1f5 	udiv	r1, r1, r5
9000dc80:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000dc84:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000dc86:	2100      	movs	r1, #0
9000dc88:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000dc8c:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000dc8e:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000dc90:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000dc94:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000dc98:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000dc9a:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000dc9c:	4608      	mov	r0, r1
9000dc9e:	e7ef      	b.n	9000dc80 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000dca0:	2002      	movs	r0, #2
}
9000dca2:	4770      	bx	lr
9000dca4:	9002d3c0 	.word	0x9002d3c0
9000dca8:	9002d3b8 	.word	0x9002d3b8

9000dcac <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000dcac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dcb0:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000dcb4:	e9d1 8200 	ldrd	r8, r2, [r1]
9000dcb8:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000dcba:	ea43 030e 	orr.w	r3, r3, lr
9000dcbe:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000dcc2:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000dcc6:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000dcc8:	f1b8 0f00 	cmp.w	r8, #0
9000dccc:	d10f      	bne.n	9000dcee <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dcce:	433b      	orrs	r3, r7
9000dcd0:	4313      	orrs	r3, r2
9000dcd2:	6802      	ldr	r2, [r0, #0]
9000dcd4:	ea43 030c 	orr.w	r3, r3, ip
9000dcd8:	f36f 020e 	bfc	r2, #0, #15
9000dcdc:	4333      	orrs	r3, r6
9000dcde:	432b      	orrs	r3, r5
9000dce0:	4323      	orrs	r3, r4
9000dce2:	430b      	orrs	r3, r1
9000dce4:	4313      	orrs	r3, r2
9000dce6:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000dce8:	2000      	movs	r0, #0
9000dcea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dcee:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dcf2:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dcf4:	4332      	orrs	r2, r6
9000dcf6:	432a      	orrs	r2, r5
9000dcf8:	4322      	orrs	r2, r4
9000dcfa:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dcfc:	6801      	ldr	r1, [r0, #0]
9000dcfe:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000dd02:	430b      	orrs	r3, r1
9000dd04:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dd06:	6843      	ldr	r3, [r0, #4]
9000dd08:	f36f 030e 	bfc	r3, #0, #15
9000dd0c:	4313      	orrs	r3, r2
9000dd0e:	6043      	str	r3, [r0, #4]
}
9000dd10:	2000      	movs	r0, #0
9000dd12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000dd16:	bf00      	nop

9000dd18 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000dd18:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dd1a:	68cc      	ldr	r4, [r1, #12]
9000dd1c:	694b      	ldr	r3, [r1, #20]
9000dd1e:	3c01      	subs	r4, #1
9000dd20:	688d      	ldr	r5, [r1, #8]
9000dd22:	698f      	ldr	r7, [r1, #24]
9000dd24:	3b01      	subs	r3, #1
9000dd26:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000dd2a:	684c      	ldr	r4, [r1, #4]
9000dd2c:	680e      	ldr	r6, [r1, #0]
9000dd2e:	3d01      	subs	r5, #1
9000dd30:	3c01      	subs	r4, #1
9000dd32:	051b      	lsls	r3, r3, #20
9000dd34:	022d      	lsls	r5, r5, #8
9000dd36:	3e01      	subs	r6, #1
9000dd38:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000dd3c:	690c      	ldr	r4, [r1, #16]
9000dd3e:	1e79      	subs	r1, r7, #1
9000dd40:	3c01      	subs	r4, #1
9000dd42:	0609      	lsls	r1, r1, #24
9000dd44:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000dd46:	b972      	cbnz	r2, 9000dd66 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dd48:	ea4e 0303 	orr.w	r3, lr, r3
9000dd4c:	6882      	ldr	r2, [r0, #8]
9000dd4e:	4333      	orrs	r3, r6
9000dd50:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000dd54:	ea43 030c 	orr.w	r3, r3, ip
9000dd58:	432b      	orrs	r3, r5
9000dd5a:	4323      	orrs	r3, r4
9000dd5c:	430b      	orrs	r3, r1
9000dd5e:	4313      	orrs	r3, r2
9000dd60:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000dd62:	2000      	movs	r0, #0
9000dd64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dd66:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dd6a:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dd6e:	4a08      	ldr	r2, [pc, #32]	@ (9000dd90 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dd70:	4333      	orrs	r3, r6
9000dd72:	4323      	orrs	r3, r4
9000dd74:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dd76:	6881      	ldr	r1, [r0, #8]
9000dd78:	400a      	ands	r2, r1
9000dd7a:	ea4e 0202 	orr.w	r2, lr, r2
9000dd7e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dd80:	68c2      	ldr	r2, [r0, #12]
9000dd82:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000dd86:	4313      	orrs	r3, r2
9000dd88:	60c3      	str	r3, [r0, #12]
}
9000dd8a:	2000      	movs	r0, #0
9000dd8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000dd8e:	bf00      	nop
9000dd90:	ff0f0fff 	.word	0xff0f0fff

9000dd94 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000dd94:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000dd96:	2200      	movs	r2, #0
{
9000dd98:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000dd9a:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000dd9e:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000dda2:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000dda6:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000ddaa:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000ddac:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000ddb0:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000ddb2:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000ddb4:	619a      	str	r2, [r3, #24]
}
9000ddb6:	bc30      	pop	{r4, r5}
9000ddb8:	4770      	bx	lr
9000ddba:	bf00      	nop

9000ddbc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000ddbc:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ddbe:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000ddc2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ddc4:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000ddec <FMC_SDRAM_SendCommand+0x30>
9000ddc8:	6900      	ldr	r0, [r0, #16]
9000ddca:	4323      	orrs	r3, r4
9000ddcc:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000ddd0:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000ddd4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ddd6:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000ddda:	3901      	subs	r1, #1
}
9000dddc:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000dde0:	ea43 030c 	orr.w	r3, r3, ip
9000dde4:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000dde8:	6113      	str	r3, [r2, #16]
}
9000ddea:	4770      	bx	lr
9000ddec:	ffc00000 	.word	0xffc00000

9000ddf0 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000ddf0:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000ddf2:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ddf4:	6953      	ldr	r3, [r2, #20]
9000ddf6:	f36f 034d 	bfc	r3, #1, #13
9000ddfa:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000ddfe:	6153      	str	r3, [r2, #20]
}
9000de00:	4770      	bx	lr
9000de02:	bf00      	nop

9000de04 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000de04:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000de06:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000de0a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000de0c:	f002 fbea 	bl	900105e4 <xTaskGetSchedulerState>
9000de10:	2801      	cmp	r0, #1
9000de12:	d100      	bne.n	9000de16 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000de14:	bd08      	pop	{r3, pc}
9000de16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000de1a:	f000 bc73 	b.w	9000e704 <xPortSysTickHandler>
9000de1e:	bf00      	nop

9000de20 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000de20:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000de24:	b92b      	cbnz	r3, 9000de32 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000de26:	4b06      	ldr	r3, [pc, #24]	@ (9000de40 <osKernelInitialize+0x20>)
9000de28:	6818      	ldr	r0, [r3, #0]
9000de2a:	b928      	cbnz	r0, 9000de38 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000de2c:	2201      	movs	r2, #1
9000de2e:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000de30:	4770      	bx	lr
    stat = osErrorISR;
9000de32:	f06f 0005 	mvn.w	r0, #5
9000de36:	4770      	bx	lr
    } else {
      stat = osError;
9000de38:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000de3c:	4770      	bx	lr
9000de3e:	bf00      	nop
9000de40:	24008b04 	.word	0x24008b04

9000de44 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000de44:	b510      	push	{r4, lr}
9000de46:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000de4a:	b974      	cbnz	r4, 9000de6a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000de4c:	4b08      	ldr	r3, [pc, #32]	@ (9000de70 <osKernelStart+0x2c>)
9000de4e:	681a      	ldr	r2, [r3, #0]
9000de50:	2a01      	cmp	r2, #1
9000de52:	d107      	bne.n	9000de64 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000de54:	4907      	ldr	r1, [pc, #28]	@ (9000de74 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000de56:	2202      	movs	r2, #2
9000de58:	77cc      	strb	r4, [r1, #31]
9000de5a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000de5c:	f002 f974 	bl	90010148 <vTaskStartScheduler>
      stat = osOK;
9000de60:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000de62:	bd10      	pop	{r4, pc}
      stat = osError;
9000de64:	f04f 30ff 	mov.w	r0, #4294967295
}
9000de68:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000de6a:	f06f 0005 	mvn.w	r0, #5
}
9000de6e:	bd10      	pop	{r4, pc}
9000de70:	24008b04 	.word	0x24008b04
9000de74:	e000ed00 	.word	0xe000ed00

9000de78 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000de78:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000de7a:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000de7c:	b087      	sub	sp, #28
  hTask = NULL;
9000de7e:	9505      	str	r5, [sp, #20]
9000de80:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000de84:	b340      	cbz	r0, 9000ded8 <osThreadNew+0x60>
9000de86:	bb3b      	cbnz	r3, 9000ded8 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000de88:	4614      	mov	r4, r2
9000de8a:	b1d2      	cbz	r2, 9000dec2 <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000de8c:	6996      	ldr	r6, [r2, #24]
9000de8e:	bb36      	cbnz	r6, 9000dede <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000de90:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000de92:	6863      	ldr	r3, [r4, #4]
9000de94:	07db      	lsls	r3, r3, #31
9000de96:	d41f      	bmi.n	9000ded8 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000de98:	6963      	ldr	r3, [r4, #20]
9000de9a:	b323      	cbz	r3, 9000dee6 <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000de9c:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000de9e:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000dea0:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dea4:	68e7      	ldr	r7, [r4, #12]
9000dea6:	b305      	cbz	r5, 9000deea <osThreadNew+0x72>
9000dea8:	2fab      	cmp	r7, #171	@ 0xab
9000deaa:	d915      	bls.n	9000ded8 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000deac:	6924      	ldr	r4, [r4, #16]
9000deae:	b19c      	cbz	r4, 9000ded8 <osThreadNew+0x60>
9000deb0:	b193      	cbz	r3, 9000ded8 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000deb2:	460b      	mov	r3, r1
9000deb4:	9600      	str	r6, [sp, #0]
9000deb6:	4661      	mov	r1, ip
9000deb8:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000debc:	f001 fffe 	bl	9000febc <xTaskCreateStatic>
9000dec0:	e00b      	b.n	9000deda <osThreadNew+0x62>
9000dec2:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000dec4:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dec6:	460b      	mov	r3, r1
9000dec8:	4621      	mov	r1, r4
9000deca:	ac05      	add	r4, sp, #20
9000decc:	9600      	str	r6, [sp, #0]
9000dece:	9401      	str	r4, [sp, #4]
9000ded0:	f002 f82e 	bl	9000ff30 <xTaskCreate>
9000ded4:	2801      	cmp	r0, #1
9000ded6:	d010      	beq.n	9000defa <osThreadNew+0x82>
        return (NULL);
9000ded8:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000deda:	b007      	add	sp, #28
9000dedc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dede:	1e72      	subs	r2, r6, #1
9000dee0:	2a37      	cmp	r2, #55	@ 0x37
9000dee2:	d9d6      	bls.n	9000de92 <osThreadNew+0x1a>
9000dee4:	e7f8      	b.n	9000ded8 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000dee6:	2280      	movs	r2, #128	@ 0x80
9000dee8:	e7d9      	b.n	9000de9e <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000deea:	2f00      	cmp	r7, #0
9000deec:	d1f4      	bne.n	9000ded8 <osThreadNew+0x60>
9000deee:	6923      	ldr	r3, [r4, #16]
9000def0:	2b00      	cmp	r3, #0
9000def2:	d1f1      	bne.n	9000ded8 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000def4:	b292      	uxth	r2, r2
9000def6:	4664      	mov	r4, ip
9000def8:	e7e5      	b.n	9000dec6 <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000defa:	9805      	ldr	r0, [sp, #20]
9000defc:	e7ed      	b.n	9000deda <osThreadNew+0x62>
9000defe:	bf00      	nop

9000df00 <osThreadExit>:
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
9000df00:	2000      	movs	r0, #0
__NO_RETURN void osThreadExit (void) {
9000df02:	b508      	push	{r3, lr}
  vTaskDelete (NULL);
9000df04:	f002 f844 	bl	9000ff90 <vTaskDelete>
#endif
  for (;;);
9000df08:	e7fe      	b.n	9000df08 <osThreadExit+0x8>
9000df0a:	bf00      	nop

9000df0c <osDelay>:
9000df0c:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000df10:	b93a      	cbnz	r2, 9000df22 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000df12:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000df14:	b908      	cbnz	r0, 9000df1a <osDelay+0xe>
    stat = osOK;
9000df16:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000df18:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000df1a:	f002 f8bf 	bl	9001009c <vTaskDelay>
    stat = osOK;
9000df1e:	2000      	movs	r0, #0
}
9000df20:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000df22:	f06f 0005 	mvn.w	r0, #5
}
9000df26:	4770      	bx	lr

9000df28 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000df28:	b5f0      	push	{r4, r5, r6, r7, lr}
9000df2a:	b083      	sub	sp, #12
9000df2c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000df30:	b98e      	cbnz	r6, 9000df56 <osSemaphoreNew+0x2e>
9000df32:	4605      	mov	r5, r0
9000df34:	b178      	cbz	r0, 9000df56 <osSemaphoreNew+0x2e>
9000df36:	4288      	cmp	r0, r1
9000df38:	460f      	mov	r7, r1
9000df3a:	d30c      	bcc.n	9000df56 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000df3c:	4614      	mov	r4, r2
9000df3e:	b172      	cbz	r2, 9000df5e <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000df40:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000df44:	b14a      	cbz	r2, 9000df5a <osSemaphoreNew+0x32>
9000df46:	2b4f      	cmp	r3, #79	@ 0x4f
9000df48:	d905      	bls.n	9000df56 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000df4a:	2801      	cmp	r0, #1
9000df4c:	d02e      	beq.n	9000dfac <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000df4e:	f000 fdb9 	bl	9000eac4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000df52:	4605      	mov	r5, r0
9000df54:	b96d      	cbnz	r5, 9000df72 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000df56:	2500      	movs	r5, #0
9000df58:	e010      	b.n	9000df7c <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000df5a:	2b00      	cmp	r3, #0
9000df5c:	d1fb      	bne.n	9000df56 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000df5e:	2d01      	cmp	r5, #1
9000df60:	d00f      	beq.n	9000df82 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000df62:	4628      	mov	r0, r5
9000df64:	4639      	mov	r1, r7
9000df66:	f000 fe0d 	bl	9000eb84 <xQueueCreateCountingSemaphore>
9000df6a:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000df6c:	2d00      	cmp	r5, #0
9000df6e:	d0f2      	beq.n	9000df56 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000df70:	b104      	cbz	r4, 9000df74 <osSemaphoreNew+0x4c>
          name = attr->name;
9000df72:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000df74:	4621      	mov	r1, r4
9000df76:	4628      	mov	r0, r5
9000df78:	f001 fc38 	bl	9000f7ec <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000df7c:	4628      	mov	r0, r5
9000df7e:	b003      	add	sp, #12
9000df80:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000df82:	4628      	mov	r0, r5
9000df84:	2203      	movs	r2, #3
9000df86:	2100      	movs	r1, #0
9000df88:	f000 fd5a 	bl	9000ea40 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000df8c:	4605      	mov	r5, r0
9000df8e:	2800      	cmp	r0, #0
9000df90:	d0ec      	beq.n	9000df6c <osSemaphoreNew+0x44>
9000df92:	2f00      	cmp	r7, #0
9000df94:	d0ea      	beq.n	9000df6c <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000df96:	2300      	movs	r3, #0
9000df98:	461a      	mov	r2, r3
9000df9a:	4619      	mov	r1, r3
9000df9c:	f000 fe38 	bl	9000ec10 <xQueueGenericSend>
9000dfa0:	2801      	cmp	r0, #1
9000dfa2:	d0e5      	beq.n	9000df70 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000dfa4:	4628      	mov	r0, r5
9000dfa6:	f001 fbdb 	bl	9000f760 <vQueueDelete>
      if (hSemaphore != NULL) {
9000dfaa:	e7d4      	b.n	9000df56 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000dfac:	4613      	mov	r3, r2
9000dfae:	2203      	movs	r2, #3
9000dfb0:	4631      	mov	r1, r6
9000dfb2:	9200      	str	r2, [sp, #0]
9000dfb4:	4632      	mov	r2, r6
9000dfb6:	f000 fcd7 	bl	9000e968 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000dfba:	4605      	mov	r5, r0
9000dfbc:	2800      	cmp	r0, #0
9000dfbe:	d0c9      	beq.n	9000df54 <osSemaphoreNew+0x2c>
9000dfc0:	2f00      	cmp	r7, #0
9000dfc2:	d0c7      	beq.n	9000df54 <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000dfc4:	4633      	mov	r3, r6
9000dfc6:	4632      	mov	r2, r6
9000dfc8:	4631      	mov	r1, r6
9000dfca:	f000 fe21 	bl	9000ec10 <xQueueGenericSend>
9000dfce:	2801      	cmp	r0, #1
9000dfd0:	d0cf      	beq.n	9000df72 <osSemaphoreNew+0x4a>
9000dfd2:	e7e7      	b.n	9000dfa4 <osSemaphoreNew+0x7c>

9000dfd4 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000dfd4:	b360      	cbz	r0, 9000e030 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000dfd6:	b510      	push	{r4, lr}
9000dfd8:	460c      	mov	r4, r1
9000dfda:	b082      	sub	sp, #8
9000dfdc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000dfe0:	b1b3      	cbz	r3, 9000e010 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000dfe2:	bb11      	cbnz	r1, 9000e02a <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dfe4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000dfe6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dfe8:	f001 fb5e 	bl	9000f6a8 <xQueueReceiveFromISR>
9000dfec:	2801      	cmp	r0, #1
9000dfee:	d118      	bne.n	9000e022 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000dff0:	9b01      	ldr	r3, [sp, #4]
9000dff2:	b913      	cbnz	r3, 9000dffa <osSemaphoreAcquire+0x26>
  stat = osOK;
9000dff4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000dff6:	b002      	add	sp, #8
9000dff8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000dffa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dffe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e002:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e006:	f3bf 8f4f 	dsb	sy
9000e00a:	f3bf 8f6f 	isb	sy
9000e00e:	e7f1      	b.n	9000dff4 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000e010:	f001 f9ba 	bl	9000f388 <xQueueSemaphoreTake>
9000e014:	2801      	cmp	r0, #1
9000e016:	d0ed      	beq.n	9000dff4 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000e018:	b11c      	cbz	r4, 9000e022 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000e01a:	f06f 0001 	mvn.w	r0, #1
}
9000e01e:	b002      	add	sp, #8
9000e020:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000e022:	f06f 0002 	mvn.w	r0, #2
}
9000e026:	b002      	add	sp, #8
9000e028:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000e02a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e02e:	e7e2      	b.n	9000dff6 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000e030:	f06f 0003 	mvn.w	r0, #3
}
9000e034:	4770      	bx	lr
9000e036:	bf00      	nop

9000e038 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e038:	b328      	cbz	r0, 9000e086 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000e03a:	b500      	push	{lr}
9000e03c:	b083      	sub	sp, #12
9000e03e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e042:	b19b      	cbz	r3, 9000e06c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000e044:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e046:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e048:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e04a:	f000 ffc9 	bl	9000efe0 <xQueueGiveFromISR>
9000e04e:	2801      	cmp	r0, #1
9000e050:	d116      	bne.n	9000e080 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e052:	9b01      	ldr	r3, [sp, #4]
9000e054:	b183      	cbz	r3, 9000e078 <osSemaphoreRelease+0x40>
9000e056:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e05a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e05e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e062:	f3bf 8f4f 	dsb	sy
9000e066:	f3bf 8f6f 	isb	sy
9000e06a:	e005      	b.n	9000e078 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e06c:	461a      	mov	r2, r3
9000e06e:	4619      	mov	r1, r3
9000e070:	f000 fdce 	bl	9000ec10 <xQueueGenericSend>
9000e074:	2801      	cmp	r0, #1
9000e076:	d103      	bne.n	9000e080 <osSemaphoreRelease+0x48>
  stat = osOK;
9000e078:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e07a:	b003      	add	sp, #12
9000e07c:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000e080:	f06f 0002 	mvn.w	r0, #2
9000e084:	e7f9      	b.n	9000e07a <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000e086:	f06f 0003 	mvn.w	r0, #3
}
9000e08a:	4770      	bx	lr

9000e08c <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
9000e08c:	b538      	push	{r3, r4, r5, lr}
9000e08e:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
9000e092:	b944      	cbnz	r4, 9000e0a6 <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
9000e094:	4605      	mov	r5, r0
9000e096:	b148      	cbz	r0, 9000e0ac <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
9000e098:	f001 fbd0 	bl	9000f83c <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
9000e09c:	4628      	mov	r0, r5
9000e09e:	f001 fb5f 	bl	9000f760 <vQueueDelete>
    stat = osOK;
9000e0a2:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
9000e0a4:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
9000e0a6:	f06f 0005 	mvn.w	r0, #5
}
9000e0aa:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorParameter;
9000e0ac:	f06f 0003 	mvn.w	r0, #3
}
9000e0b0:	bd38      	pop	{r3, r4, r5, pc}
9000e0b2:	bf00      	nop

9000e0b4 <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e0b4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e0b6:	b083      	sub	sp, #12
9000e0b8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e0bc:	b987      	cbnz	r7, 9000e0e0 <osMessageQueueNew+0x2c>
9000e0be:	4605      	mov	r5, r0
9000e0c0:	b170      	cbz	r0, 9000e0e0 <osMessageQueueNew+0x2c>
9000e0c2:	b169      	cbz	r1, 9000e0e0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e0c4:	4614      	mov	r4, r2
9000e0c6:	b17a      	cbz	r2, 9000e0e8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e0c8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000e0cc:	b1c3      	cbz	r3, 9000e100 <osMessageQueueNew+0x4c>
9000e0ce:	2a4f      	cmp	r2, #79	@ 0x4f
9000e0d0:	d906      	bls.n	9000e0e0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e0d2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e0d4:	b122      	cbz	r2, 9000e0e0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e0d6:	fb01 f505 	mul.w	r5, r1, r5
9000e0da:	6966      	ldr	r6, [r4, #20]
9000e0dc:	42ae      	cmp	r6, r5
9000e0de:	d21e      	bcs.n	9000e11e <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000e0e0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e0e2:	4628      	mov	r0, r5
9000e0e4:	b003      	add	sp, #12
9000e0e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e0e8:	f000 fcaa 	bl	9000ea40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e0ec:	4605      	mov	r5, r0
9000e0ee:	2800      	cmp	r0, #0
9000e0f0:	d0f6      	beq.n	9000e0e0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e0f2:	4628      	mov	r0, r5
9000e0f4:	4621      	mov	r1, r4
9000e0f6:	f001 fb79 	bl	9000f7ec <vQueueAddToRegistry>
}
9000e0fa:	4628      	mov	r0, r5
9000e0fc:	b003      	add	sp, #12
9000e0fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e100:	2a00      	cmp	r2, #0
9000e102:	d1ed      	bne.n	9000e0e0 <osMessageQueueNew+0x2c>
9000e104:	6923      	ldr	r3, [r4, #16]
9000e106:	2b00      	cmp	r3, #0
9000e108:	d1ea      	bne.n	9000e0e0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e10a:	6962      	ldr	r2, [r4, #20]
9000e10c:	2a00      	cmp	r2, #0
9000e10e:	d1e7      	bne.n	9000e0e0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e110:	f000 fc96 	bl	9000ea40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e114:	4605      	mov	r5, r0
9000e116:	2800      	cmp	r0, #0
9000e118:	d0e2      	beq.n	9000e0e0 <osMessageQueueNew+0x2c>
        name = attr->name;
9000e11a:	6824      	ldr	r4, [r4, #0]
9000e11c:	e7e9      	b.n	9000e0f2 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e11e:	9700      	str	r7, [sp, #0]
9000e120:	f000 fc22 	bl	9000e968 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e124:	4605      	mov	r5, r0
9000e126:	2800      	cmp	r0, #0
9000e128:	d1f7      	bne.n	9000e11a <osMessageQueueNew+0x66>
9000e12a:	e7d9      	b.n	9000e0e0 <osMessageQueueNew+0x2c>

9000e12c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e12c:	b560      	push	{r5, r6, lr}
9000e12e:	461e      	mov	r6, r3
9000e130:	b083      	sub	sp, #12
9000e132:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e136:	fab0 f580 	clz	r5, r0
9000e13a:	fab1 f381 	clz	r3, r1
9000e13e:	096d      	lsrs	r5, r5, #5
9000e140:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000e142:	b1da      	cbz	r2, 9000e17c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e144:	2e00      	cmp	r6, #0
9000e146:	bf18      	it	ne
9000e148:	f043 0301 	orrne.w	r3, r3, #1
9000e14c:	bb33      	cbnz	r3, 9000e19c <osMessageQueuePut+0x70>
9000e14e:	bb2d      	cbnz	r5, 9000e19c <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e150:	462b      	mov	r3, r5
9000e152:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e154:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e156:	f000 fedd 	bl	9000ef14 <xQueueGenericSendFromISR>
9000e15a:	2801      	cmp	r0, #1
9000e15c:	d11a      	bne.n	9000e194 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e15e:	9b01      	ldr	r3, [sp, #4]
9000e160:	b14b      	cbz	r3, 9000e176 <osMessageQueuePut+0x4a>
9000e162:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e166:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e16a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e16e:	f3bf 8f4f 	dsb	sy
9000e172:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e176:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e178:	b003      	add	sp, #12
9000e17a:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e17c:	b975      	cbnz	r5, 9000e19c <osMessageQueuePut+0x70>
9000e17e:	b96b      	cbnz	r3, 9000e19c <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e180:	4632      	mov	r2, r6
9000e182:	f000 fd45 	bl	9000ec10 <xQueueGenericSend>
9000e186:	2801      	cmp	r0, #1
9000e188:	d0f5      	beq.n	9000e176 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000e18a:	b11e      	cbz	r6, 9000e194 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000e18c:	f06f 0001 	mvn.w	r0, #1
}
9000e190:	b003      	add	sp, #12
9000e192:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000e194:	f06f 0002 	mvn.w	r0, #2
}
9000e198:	b003      	add	sp, #12
9000e19a:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000e19c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e1a0:	e7ea      	b.n	9000e178 <osMessageQueuePut+0x4c>
9000e1a2:	bf00      	nop

9000e1a4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e1a4:	b570      	push	{r4, r5, r6, lr}
9000e1a6:	461e      	mov	r6, r3
9000e1a8:	b082      	sub	sp, #8
9000e1aa:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e1ae:	fab0 f580 	clz	r5, r0
9000e1b2:	fab1 f481 	clz	r4, r1
9000e1b6:	096d      	lsrs	r5, r5, #5
9000e1b8:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000e1ba:	b1d3      	cbz	r3, 9000e1f2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e1bc:	2e00      	cmp	r6, #0
9000e1be:	bf18      	it	ne
9000e1c0:	f044 0401 	orrne.w	r4, r4, #1
9000e1c4:	bb2c      	cbnz	r4, 9000e212 <osMessageQueueGet+0x6e>
9000e1c6:	bb25      	cbnz	r5, 9000e212 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e1c8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e1ca:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e1cc:	f001 fa6c 	bl	9000f6a8 <xQueueReceiveFromISR>
9000e1d0:	2801      	cmp	r0, #1
9000e1d2:	d11a      	bne.n	9000e20a <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e1d4:	9b01      	ldr	r3, [sp, #4]
9000e1d6:	b14b      	cbz	r3, 9000e1ec <osMessageQueueGet+0x48>
9000e1d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e1dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e1e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e1e4:	f3bf 8f4f 	dsb	sy
9000e1e8:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e1ec:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e1ee:	b002      	add	sp, #8
9000e1f0:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e1f2:	b975      	cbnz	r5, 9000e212 <osMessageQueueGet+0x6e>
9000e1f4:	b96c      	cbnz	r4, 9000e212 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e1f6:	4632      	mov	r2, r6
9000e1f8:	f000 ff48 	bl	9000f08c <xQueueReceive>
9000e1fc:	2801      	cmp	r0, #1
9000e1fe:	d0f5      	beq.n	9000e1ec <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000e200:	b11e      	cbz	r6, 9000e20a <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000e202:	f06f 0001 	mvn.w	r0, #1
}
9000e206:	b002      	add	sp, #8
9000e208:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000e20a:	f06f 0002 	mvn.w	r0, #2
}
9000e20e:	b002      	add	sp, #8
9000e210:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000e212:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e216:	e7ea      	b.n	9000e1ee <osMessageQueueGet+0x4a>

9000e218 <osMessageQueueDelete>:
  }

  return (stat);
}

osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {
9000e218:	b538      	push	{r3, r4, r5, lr}
9000e21a:	f3ef 8405 	mrs	r4, IPSR
9000e21e:	b944      	cbnz	r4, 9000e232 <osMessageQueueDelete+0x1a>
9000e220:	4605      	mov	r5, r0
9000e222:	b148      	cbz	r0, 9000e238 <osMessageQueueDelete+0x20>
9000e224:	f001 fb0a 	bl	9000f83c <vQueueUnregisterQueue>
9000e228:	4628      	mov	r0, r5
9000e22a:	f001 fa99 	bl	9000f760 <vQueueDelete>
9000e22e:	4620      	mov	r0, r4
9000e230:	bd38      	pop	{r3, r4, r5, pc}
9000e232:	f06f 0005 	mvn.w	r0, #5
9000e236:	bd38      	pop	{r3, r4, r5, pc}
9000e238:	f06f 0003 	mvn.w	r0, #3
9000e23c:	bd38      	pop	{r3, r4, r5, pc}
9000e23e:	bf00      	nop

9000e240 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e240:	4b04      	ldr	r3, [pc, #16]	@ (9000e254 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e242:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e244:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e246:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e248:	4c03      	ldr	r4, [pc, #12]	@ (9000e258 <vApplicationGetIdleTaskMemory+0x18>)
9000e24a:	600c      	str	r4, [r1, #0]
}
9000e24c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e250:	6013      	str	r3, [r2, #0]
}
9000e252:	4770      	bx	lr
9000e254:	24008a58 	.word	0x24008a58
9000e258:	24008858 	.word	0x24008858

9000e25c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e25c:	4b05      	ldr	r3, [pc, #20]	@ (9000e274 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e25e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e260:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e262:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e266:	4c04      	ldr	r4, [pc, #16]	@ (9000e278 <vApplicationGetTimerTaskMemory+0x1c>)
9000e268:	600c      	str	r4, [r1, #0]
}
9000e26a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e26e:	6013      	str	r3, [r2, #0]
}
9000e270:	4770      	bx	lr
9000e272:	bf00      	nop
9000e274:	240087ac 	.word	0x240087ac
9000e278:	240083ac 	.word	0x240083ac

9000e27c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e27c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e280:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e282:	f001 ffe5 	bl	90010250 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e286:	4a54      	ldr	r2, [pc, #336]	@ (9000e3d8 <pvPortMalloc+0x15c>)
9000e288:	6815      	ldr	r5, [r2, #0]
9000e28a:	2d00      	cmp	r5, #0
9000e28c:	d035      	beq.n	9000e2fa <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e28e:	4b53      	ldr	r3, [pc, #332]	@ (9000e3dc <pvPortMalloc+0x160>)
9000e290:	681e      	ldr	r6, [r3, #0]
9000e292:	4234      	tst	r4, r6
9000e294:	d12b      	bne.n	9000e2ee <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e296:	b354      	cbz	r4, 9000e2ee <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000e298:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e29c:	0764      	lsls	r4, r4, #29
9000e29e:	d002      	beq.n	9000e2a6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e2a0:	f020 0007 	bic.w	r0, r0, #7
9000e2a4:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e2a6:	b310      	cbz	r0, 9000e2ee <pvPortMalloc+0x72>
9000e2a8:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000e3f0 <pvPortMalloc+0x174>
9000e2ac:	f8de c000 	ldr.w	ip, [lr]
9000e2b0:	4584      	cmp	ip, r0
9000e2b2:	d31c      	bcc.n	9000e2ee <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e2b4:	4c4a      	ldr	r4, [pc, #296]	@ (9000e3e0 <pvPortMalloc+0x164>)
9000e2b6:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e2b8:	e003      	b.n	9000e2c2 <pvPortMalloc+0x46>
9000e2ba:	681a      	ldr	r2, [r3, #0]
9000e2bc:	b122      	cbz	r2, 9000e2c8 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000e2be:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000e2c0:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e2c2:	6859      	ldr	r1, [r3, #4]
9000e2c4:	4281      	cmp	r1, r0
9000e2c6:	d3f8      	bcc.n	9000e2ba <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e2c8:	42ab      	cmp	r3, r5
9000e2ca:	d010      	beq.n	9000e2ee <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e2cc:	681a      	ldr	r2, [r3, #0]
9000e2ce:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e2d0:	1a0c      	subs	r4, r1, r0
9000e2d2:	2c10      	cmp	r4, #16
9000e2d4:	d947      	bls.n	9000e366 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e2d6:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e2d8:	0751      	lsls	r1, r2, #29
9000e2da:	d02d      	beq.n	9000e338 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e2dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2e0:	f383 8811 	msr	BASEPRI, r3
9000e2e4:	f3bf 8f6f 	isb	sy
9000e2e8:	f3bf 8f4f 	dsb	sy
9000e2ec:	e7fe      	b.n	9000e2ec <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000e2ee:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e2f0:	f001 ffb6 	bl	90010260 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e2f4:	4620      	mov	r0, r4
9000e2f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000e2fa:	4b3a      	ldr	r3, [pc, #232]	@ (9000e3e4 <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e2fc:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e300:	4e37      	ldr	r6, [pc, #220]	@ (9000e3e0 <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e302:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000e304:	4d38      	ldr	r5, [pc, #224]	@ (9000e3e8 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e306:	bf18      	it	ne
9000e308:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e30a:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e30e:	bf18      	it	ne
9000e310:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000e314:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e316:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e318:	6033      	str	r3, [r6, #0]
9000e31a:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000e31c:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e31e:	1aeb      	subs	r3, r5, r3
}
9000e320:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000e322:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e326:	4a31      	ldr	r2, [pc, #196]	@ (9000e3ec <pvPortMalloc+0x170>)
9000e328:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e32a:	4a31      	ldr	r2, [pc, #196]	@ (9000e3f0 <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e32c:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e330:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e332:	4b2a      	ldr	r3, [pc, #168]	@ (9000e3dc <pvPortMalloc+0x160>)
9000e334:	6018      	str	r0, [r3, #0]
}
9000e336:	e7ac      	b.n	9000e292 <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e338:	4929      	ldr	r1, [pc, #164]	@ (9000e3e0 <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e33a:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000e33c:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e33e:	460c      	mov	r4, r1
9000e340:	6809      	ldr	r1, [r1, #0]
9000e342:	428a      	cmp	r2, r1
9000e344:	d8fb      	bhi.n	9000e33e <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e346:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e348:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e34c:	eb04 0907 	add.w	r9, r4, r7
9000e350:	454a      	cmp	r2, r9
9000e352:	d028      	beq.n	9000e3a6 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e354:	eb02 0708 	add.w	r7, r2, r8
9000e358:	42b9      	cmp	r1, r7
9000e35a:	d02b      	beq.n	9000e3b4 <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000e35c:	6011      	str	r1, [r2, #0]
9000e35e:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e360:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e362:	bf18      	it	ne
9000e364:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e366:	4821      	ldr	r0, [pc, #132]	@ (9000e3ec <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e368:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e36c:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000e36e:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e370:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e372:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e376:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e378:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e37c:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e37e:	bf38      	it	cc
9000e380:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000e382:	481c      	ldr	r0, [pc, #112]	@ (9000e3f4 <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000e384:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000e386:	6802      	ldr	r2, [r0, #0]
9000e388:	3201      	adds	r2, #1
9000e38a:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000e38c:	f001 ff68 	bl	90010260 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e390:	0763      	lsls	r3, r4, #29
9000e392:	d0af      	beq.n	9000e2f4 <pvPortMalloc+0x78>
9000e394:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e398:	f383 8811 	msr	BASEPRI, r3
9000e39c:	f3bf 8f6f 	isb	sy
9000e3a0:	f3bf 8f4f 	dsb	sy
9000e3a4:	e7fe      	b.n	9000e3a4 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e3a6:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e3a8:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e3aa:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e3ac:	4281      	cmp	r1, r0
9000e3ae:	d00a      	beq.n	9000e3c6 <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e3b0:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000e3b2:	e7d8      	b.n	9000e366 <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e3b4:	42a9      	cmp	r1, r5
9000e3b6:	d0d1      	beq.n	9000e35c <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3b8:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e3ba:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3bc:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e3be:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3c0:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e3c2:	6859      	ldr	r1, [r3, #4]
9000e3c4:	e7cc      	b.n	9000e360 <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e3c6:	42a9      	cmp	r1, r5
9000e3c8:	d0f2      	beq.n	9000e3b0 <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3ca:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e3cc:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3ce:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e3d0:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e3d2:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e3d4:	e7ec      	b.n	9000e3b0 <pvPortMalloc+0x134>
9000e3d6:	bf00      	nop
9000e3d8:	24008b1c 	.word	0x24008b1c
9000e3dc:	24008b08 	.word	0x24008b08
9000e3e0:	24008b20 	.word	0x24008b20
9000e3e4:	24008b28 	.word	0x24008b28
9000e3e8:	240211c0 	.word	0x240211c0
9000e3ec:	24008b14 	.word	0x24008b14
9000e3f0:	24008b18 	.word	0x24008b18
9000e3f4:	24008b10 	.word	0x24008b10

9000e3f8 <vPortFree>:
	if( pv != NULL )
9000e3f8:	b1d0      	cbz	r0, 9000e430 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e3fa:	4a2f      	ldr	r2, [pc, #188]	@ (9000e4b8 <vPortFree+0xc0>)
9000e3fc:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e400:	6812      	ldr	r2, [r2, #0]
9000e402:	4213      	tst	r3, r2
9000e404:	d00b      	beq.n	9000e41e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e406:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e40a:	b191      	cbz	r1, 9000e432 <vPortFree+0x3a>
9000e40c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e410:	f383 8811 	msr	BASEPRI, r3
9000e414:	f3bf 8f6f 	isb	sy
9000e418:	f3bf 8f4f 	dsb	sy
9000e41c:	e7fe      	b.n	9000e41c <vPortFree+0x24>
9000e41e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e422:	f383 8811 	msr	BASEPRI, r3
9000e426:	f3bf 8f6f 	isb	sy
9000e42a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e42e:	e7fe      	b.n	9000e42e <vPortFree+0x36>
9000e430:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e432:	ea23 0302 	bic.w	r3, r3, r2
{
9000e436:	b530      	push	{r4, r5, lr}
9000e438:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e43a:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e43e:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e442:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e444:	f001 ff04 	bl	90010250 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e448:	4a1c      	ldr	r2, [pc, #112]	@ (9000e4bc <vPortFree+0xc4>)
9000e44a:	9801      	ldr	r0, [sp, #4]
9000e44c:	6813      	ldr	r3, [r2, #0]
9000e44e:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000e452:	440b      	add	r3, r1
9000e454:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e456:	4b1a      	ldr	r3, [pc, #104]	@ (9000e4c0 <vPortFree+0xc8>)
9000e458:	461a      	mov	r2, r3
9000e45a:	681b      	ldr	r3, [r3, #0]
9000e45c:	429c      	cmp	r4, r3
9000e45e:	d8fb      	bhi.n	9000e458 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e460:	6855      	ldr	r5, [r2, #4]
9000e462:	eb02 0e05 	add.w	lr, r2, r5
9000e466:	4574      	cmp	r4, lr
9000e468:	d011      	beq.n	9000e48e <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e46a:	eb04 0c01 	add.w	ip, r4, r1
9000e46e:	4563      	cmp	r3, ip
9000e470:	d01d      	beq.n	9000e4ae <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000e472:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000e476:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e478:	bf18      	it	ne
9000e47a:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e47c:	4a11      	ldr	r2, [pc, #68]	@ (9000e4c4 <vPortFree+0xcc>)
9000e47e:	6813      	ldr	r3, [r2, #0]
9000e480:	3301      	adds	r3, #1
9000e482:	6013      	str	r3, [r2, #0]
}
9000e484:	b003      	add	sp, #12
9000e486:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e48a:	f001 bee9 	b.w	90010260 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e48e:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e490:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e492:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e494:	4283      	cmp	r3, r0
9000e496:	d1f1      	bne.n	9000e47c <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e498:	480b      	ldr	r0, [pc, #44]	@ (9000e4c8 <vPortFree+0xd0>)
9000e49a:	6800      	ldr	r0, [r0, #0]
9000e49c:	4283      	cmp	r3, r0
9000e49e:	d0ed      	beq.n	9000e47c <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000e4a0:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e4a2:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e4a6:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e4a8:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e4aa:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e4ac:	e7e3      	b.n	9000e476 <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e4ae:	4d06      	ldr	r5, [pc, #24]	@ (9000e4c8 <vPortFree+0xd0>)
9000e4b0:	682d      	ldr	r5, [r5, #0]
9000e4b2:	42ab      	cmp	r3, r5
9000e4b4:	d1f5      	bne.n	9000e4a2 <vPortFree+0xaa>
9000e4b6:	e7dc      	b.n	9000e472 <vPortFree+0x7a>
9000e4b8:	24008b08 	.word	0x24008b08
9000e4bc:	24008b18 	.word	0x24008b18
9000e4c0:	24008b20 	.word	0x24008b20
9000e4c4:	24008b0c 	.word	0x24008b0c
9000e4c8:	24008b1c 	.word	0x24008b1c

9000e4cc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e4cc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e4d0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e4d4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e4d6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e4d8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e4da:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e4dc:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e4e0:	4770      	bx	lr
9000e4e2:	bf00      	nop

9000e4e4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e4e4:	2300      	movs	r3, #0
9000e4e6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e4e8:	4770      	bx	lr
9000e4ea:	bf00      	nop

9000e4ec <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e4ec:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000e4ee:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000e4f0:	3301      	adds	r3, #1
{
9000e4f2:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e4f4:	6894      	ldr	r4, [r2, #8]
9000e4f6:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e4fa:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e4fc:	6091      	str	r1, [r2, #8]
}
9000e4fe:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e502:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e504:	6003      	str	r3, [r0, #0]
}
9000e506:	4770      	bx	lr

9000e508 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e508:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e50a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e50c:	1c6b      	adds	r3, r5, #1
9000e50e:	d010      	beq.n	9000e532 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e510:	f100 0308 	add.w	r3, r0, #8
9000e514:	461c      	mov	r4, r3
9000e516:	685b      	ldr	r3, [r3, #4]
9000e518:	681a      	ldr	r2, [r3, #0]
9000e51a:	42aa      	cmp	r2, r5
9000e51c:	d9fa      	bls.n	9000e514 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e51e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e520:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e522:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e524:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e526:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e528:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e52a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e52c:	6002      	str	r2, [r0, #0]
}
9000e52e:	bc30      	pop	{r4, r5}
9000e530:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e532:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e534:	6863      	ldr	r3, [r4, #4]
9000e536:	e7f2      	b.n	9000e51e <vListInsert+0x16>

9000e538 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e538:	6903      	ldr	r3, [r0, #16]
{
9000e53a:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e53c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e53e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e542:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e544:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e548:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e54a:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e54c:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e550:	bf08      	it	eq
9000e552:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e554:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e556:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e558:	3a01      	subs	r2, #1
9000e55a:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e55c:	6818      	ldr	r0, [r3, #0]
}
9000e55e:	4770      	bx	lr

9000e560 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e560:	4808      	ldr	r0, [pc, #32]	@ (9000e584 <prvPortStartFirstTask+0x24>)
9000e562:	6800      	ldr	r0, [r0, #0]
9000e564:	6800      	ldr	r0, [r0, #0]
9000e566:	f380 8808 	msr	MSP, r0
9000e56a:	f04f 0000 	mov.w	r0, #0
9000e56e:	f380 8814 	msr	CONTROL, r0
9000e572:	b662      	cpsie	i
9000e574:	b661      	cpsie	f
9000e576:	f3bf 8f4f 	dsb	sy
9000e57a:	f3bf 8f6f 	isb	sy
9000e57e:	df00      	svc	0
9000e580:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e582:	0000      	.short	0x0000
9000e584:	e000ed08 	.word	0xe000ed08

9000e588 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e588:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000e598 <vPortEnableVFP+0x10>
9000e58c:	6801      	ldr	r1, [r0, #0]
9000e58e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000e592:	6001      	str	r1, [r0, #0]
9000e594:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e596:	0000      	.short	0x0000
9000e598:	e000ed88 	.word	0xe000ed88

9000e59c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e59c:	4b0e      	ldr	r3, [pc, #56]	@ (9000e5d8 <prvTaskExitError+0x3c>)
{
9000e59e:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e5a0:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e5a2:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e5a4:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e5a6:	3301      	adds	r3, #1
9000e5a8:	d008      	beq.n	9000e5bc <prvTaskExitError+0x20>
9000e5aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5ae:	f383 8811 	msr	BASEPRI, r3
9000e5b2:	f3bf 8f6f 	isb	sy
9000e5b6:	f3bf 8f4f 	dsb	sy
9000e5ba:	e7fe      	b.n	9000e5ba <prvTaskExitError+0x1e>
9000e5bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e5c0:	f383 8811 	msr	BASEPRI, r3
9000e5c4:	f3bf 8f6f 	isb	sy
9000e5c8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e5cc:	9b01      	ldr	r3, [sp, #4]
9000e5ce:	2b00      	cmp	r3, #0
9000e5d0:	d0fc      	beq.n	9000e5cc <prvTaskExitError+0x30>
}
9000e5d2:	b002      	add	sp, #8
9000e5d4:	4770      	bx	lr
9000e5d6:	bf00      	nop
9000e5d8:	24000084 	.word	0x24000084

9000e5dc <pxPortInitialiseStack>:
{
9000e5dc:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e5de:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e5e2:	4809      	ldr	r0, [pc, #36]	@ (9000e608 <pxPortInitialiseStack+0x2c>)
{
9000e5e4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e5e6:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e5ea:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e5ee:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e5f2:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e5f6:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e5fa:	f06f 0102 	mvn.w	r1, #2
}
9000e5fe:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e602:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000e606:	4770      	bx	lr
9000e608:	9000e59d 	.word	0x9000e59d
9000e60c:	00000000 	.word	0x00000000

9000e610 <SVC_Handler>:
	__asm volatile (
9000e610:	4b07      	ldr	r3, [pc, #28]	@ (9000e630 <pxCurrentTCBConst2>)
9000e612:	6819      	ldr	r1, [r3, #0]
9000e614:	6808      	ldr	r0, [r1, #0]
9000e616:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e61a:	f380 8809 	msr	PSP, r0
9000e61e:	f3bf 8f6f 	isb	sy
9000e622:	f04f 0000 	mov.w	r0, #0
9000e626:	f380 8811 	msr	BASEPRI, r0
9000e62a:	4770      	bx	lr
9000e62c:	f3af 8000 	nop.w

9000e630 <pxCurrentTCBConst2>:
9000e630:	24021708 	.word	0x24021708

9000e634 <vPortEnterCritical>:
9000e634:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e638:	f383 8811 	msr	BASEPRI, r3
9000e63c:	f3bf 8f6f 	isb	sy
9000e640:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000e644:	4a0b      	ldr	r2, [pc, #44]	@ (9000e674 <vPortEnterCritical+0x40>)
9000e646:	6813      	ldr	r3, [r2, #0]
9000e648:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000e64a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000e64c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000e64e:	d000      	beq.n	9000e652 <vPortEnterCritical+0x1e>
}
9000e650:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000e652:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e656:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000e65a:	b2db      	uxtb	r3, r3
9000e65c:	2b00      	cmp	r3, #0
9000e65e:	d0f7      	beq.n	9000e650 <vPortEnterCritical+0x1c>
9000e660:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e664:	f383 8811 	msr	BASEPRI, r3
9000e668:	f3bf 8f6f 	isb	sy
9000e66c:	f3bf 8f4f 	dsb	sy
9000e670:	e7fe      	b.n	9000e670 <vPortEnterCritical+0x3c>
9000e672:	bf00      	nop
9000e674:	24000084 	.word	0x24000084

9000e678 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000e678:	4a08      	ldr	r2, [pc, #32]	@ (9000e69c <vPortExitCritical+0x24>)
9000e67a:	6813      	ldr	r3, [r2, #0]
9000e67c:	b943      	cbnz	r3, 9000e690 <vPortExitCritical+0x18>
9000e67e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e682:	f383 8811 	msr	BASEPRI, r3
9000e686:	f3bf 8f6f 	isb	sy
9000e68a:	f3bf 8f4f 	dsb	sy
9000e68e:	e7fe      	b.n	9000e68e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000e690:	3b01      	subs	r3, #1
9000e692:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000e694:	b90b      	cbnz	r3, 9000e69a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000e696:	f383 8811 	msr	BASEPRI, r3
}
9000e69a:	4770      	bx	lr
9000e69c:	24000084 	.word	0x24000084

9000e6a0 <PendSV_Handler>:
	__asm volatile
9000e6a0:	f3ef 8009 	mrs	r0, PSP
9000e6a4:	f3bf 8f6f 	isb	sy
9000e6a8:	4b15      	ldr	r3, [pc, #84]	@ (9000e700 <pxCurrentTCBConst>)
9000e6aa:	681a      	ldr	r2, [r3, #0]
9000e6ac:	f01e 0f10 	tst.w	lr, #16
9000e6b0:	bf08      	it	eq
9000e6b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000e6b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e6ba:	6010      	str	r0, [r2, #0]
9000e6bc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000e6c0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000e6c4:	f380 8811 	msr	BASEPRI, r0
9000e6c8:	f3bf 8f4f 	dsb	sy
9000e6cc:	f3bf 8f6f 	isb	sy
9000e6d0:	f001 fe02 	bl	900102d8 <vTaskSwitchContext>
9000e6d4:	f04f 0000 	mov.w	r0, #0
9000e6d8:	f380 8811 	msr	BASEPRI, r0
9000e6dc:	bc09      	pop	{r0, r3}
9000e6de:	6819      	ldr	r1, [r3, #0]
9000e6e0:	6808      	ldr	r0, [r1, #0]
9000e6e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e6e6:	f01e 0f10 	tst.w	lr, #16
9000e6ea:	bf08      	it	eq
9000e6ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000e6f0:	f380 8809 	msr	PSP, r0
9000e6f4:	f3bf 8f6f 	isb	sy
9000e6f8:	4770      	bx	lr
9000e6fa:	bf00      	nop
9000e6fc:	f3af 8000 	nop.w

9000e700 <pxCurrentTCBConst>:
9000e700:	24021708 	.word	0x24021708

9000e704 <xPortSysTickHandler>:
{
9000e704:	b508      	push	{r3, lr}
	__asm volatile
9000e706:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e70a:	f383 8811 	msr	BASEPRI, r3
9000e70e:	f3bf 8f6f 	isb	sy
9000e712:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000e716:	f001 fdb9 	bl	9001028c <xTaskIncrementTick>
9000e71a:	b128      	cbz	r0, 9000e728 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000e71c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e720:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e724:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000e728:	2300      	movs	r3, #0
9000e72a:	f383 8811 	msr	BASEPRI, r3
}
9000e72e:	bd08      	pop	{r3, pc}

9000e730 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e730:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000e734:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e736:	4806      	ldr	r0, [pc, #24]	@ (9000e750 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e738:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e73a:	4906      	ldr	r1, [pc, #24]	@ (9000e754 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000e73c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e73e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e740:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e742:	fba1 1303 	umull	r1, r3, r1, r3
9000e746:	099b      	lsrs	r3, r3, #6
9000e748:	3b01      	subs	r3, #1
9000e74a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e74c:	6110      	str	r0, [r2, #16]
}
9000e74e:	4770      	bx	lr
9000e750:	24000078 	.word	0x24000078
9000e754:	10624dd3 	.word	0x10624dd3

9000e758 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e758:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e75c:	4a48      	ldr	r2, [pc, #288]	@ (9000e880 <xPortStartScheduler+0x128>)
9000e75e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000e762:	4291      	cmp	r1, r2
9000e764:	d041      	beq.n	9000e7ea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e766:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000e76a:	4b46      	ldr	r3, [pc, #280]	@ (9000e884 <xPortStartScheduler+0x12c>)
9000e76c:	429a      	cmp	r2, r3
9000e76e:	d033      	beq.n	9000e7d8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e770:	4b45      	ldr	r3, [pc, #276]	@ (9000e888 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e772:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e776:	4845      	ldr	r0, [pc, #276]	@ (9000e88c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e778:	4945      	ldr	r1, [pc, #276]	@ (9000e890 <xPortStartScheduler+0x138>)
{
9000e77a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e77c:	781a      	ldrb	r2, [r3, #0]
{
9000e77e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e780:	b2d2      	uxtb	r2, r2
9000e782:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e784:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e786:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e78a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e78c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e78e:	b2db      	uxtb	r3, r3
9000e790:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e794:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e798:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e79c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e7a0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e7a2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e7a4:	d50f      	bpl.n	9000e7c6 <xPortStartScheduler+0x6e>
9000e7a6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e7a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e7ac:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e7ae:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e7b0:	005b      	lsls	r3, r3, #1
9000e7b2:	b2db      	uxtb	r3, r3
9000e7b4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e7b8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e7bc:	061b      	lsls	r3, r3, #24
9000e7be:	d4f3      	bmi.n	9000e7a8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000e7c0:	2903      	cmp	r1, #3
9000e7c2:	d01b      	beq.n	9000e7fc <xPortStartScheduler+0xa4>
9000e7c4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000e7c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7ca:	f383 8811 	msr	BASEPRI, r3
9000e7ce:	f3bf 8f6f 	isb	sy
9000e7d2:	f3bf 8f4f 	dsb	sy
9000e7d6:	e7fe      	b.n	9000e7d6 <xPortStartScheduler+0x7e>
9000e7d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7dc:	f383 8811 	msr	BASEPRI, r3
9000e7e0:	f3bf 8f6f 	isb	sy
9000e7e4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e7e8:	e7fe      	b.n	9000e7e8 <xPortStartScheduler+0x90>
9000e7ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7ee:	f383 8811 	msr	BASEPRI, r3
9000e7f2:	f3bf 8f6f 	isb	sy
9000e7f6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e7fa:	e7fe      	b.n	9000e7fa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e7fc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e7fe:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e802:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e806:	4a20      	ldr	r2, [pc, #128]	@ (9000e888 <xPortStartScheduler+0x130>)
9000e808:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000e80a:	4e22      	ldr	r6, [pc, #136]	@ (9000e894 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e80c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000e80e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e810:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e812:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e816:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000e81a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000e81e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e822:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000e826:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000e82a:	f7ff ff81 	bl	9000e730 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000e82e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000e830:	f7ff feaa 	bl	9000e588 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000e834:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000e838:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000e83c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000e840:	f7ff fe8e 	bl	9000e560 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000e844:	f001 fd48 	bl	900102d8 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000e848:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000e84a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000e84c:	3301      	adds	r3, #1
9000e84e:	d008      	beq.n	9000e862 <xPortStartScheduler+0x10a>
9000e850:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e854:	f383 8811 	msr	BASEPRI, r3
9000e858:	f3bf 8f6f 	isb	sy
9000e85c:	f3bf 8f4f 	dsb	sy
9000e860:	e7fe      	b.n	9000e860 <xPortStartScheduler+0x108>
9000e862:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e866:	f383 8811 	msr	BASEPRI, r3
9000e86a:	f3bf 8f6f 	isb	sy
9000e86e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e872:	9b03      	ldr	r3, [sp, #12]
9000e874:	2b00      	cmp	r3, #0
9000e876:	d0fc      	beq.n	9000e872 <xPortStartScheduler+0x11a>
}
9000e878:	2000      	movs	r0, #0
9000e87a:	b004      	add	sp, #16
9000e87c:	bd70      	pop	{r4, r5, r6, pc}
9000e87e:	bf00      	nop
9000e880:	410fc271 	.word	0x410fc271
9000e884:	410fc270 	.word	0x410fc270
9000e888:	e000e400 	.word	0xe000e400
9000e88c:	240211c8 	.word	0x240211c8
9000e890:	240211cc 	.word	0x240211cc
9000e894:	24000084 	.word	0x24000084

9000e898 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000e898:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000e89c:	2b0f      	cmp	r3, #15
9000e89e:	d90e      	bls.n	9000e8be <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e8a0:	4911      	ldr	r1, [pc, #68]	@ (9000e8e8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e8a2:	4a12      	ldr	r2, [pc, #72]	@ (9000e8ec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e8a4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e8a6:	7812      	ldrb	r2, [r2, #0]
9000e8a8:	429a      	cmp	r2, r3
9000e8aa:	d908      	bls.n	9000e8be <vPortValidateInterruptPriority+0x26>
9000e8ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8b0:	f383 8811 	msr	BASEPRI, r3
9000e8b4:	f3bf 8f6f 	isb	sy
9000e8b8:	f3bf 8f4f 	dsb	sy
9000e8bc:	e7fe      	b.n	9000e8bc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000e8be:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e8c2:	4a0b      	ldr	r2, [pc, #44]	@ (9000e8f0 <vPortValidateInterruptPriority+0x58>)
9000e8c4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000e8c8:	6812      	ldr	r2, [r2, #0]
9000e8ca:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000e8ce:	4293      	cmp	r3, r2
9000e8d0:	d908      	bls.n	9000e8e4 <vPortValidateInterruptPriority+0x4c>
9000e8d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8d6:	f383 8811 	msr	BASEPRI, r3
9000e8da:	f3bf 8f6f 	isb	sy
9000e8de:	f3bf 8f4f 	dsb	sy
9000e8e2:	e7fe      	b.n	9000e8e2 <vPortValidateInterruptPriority+0x4a>
	}
9000e8e4:	4770      	bx	lr
9000e8e6:	bf00      	nop
9000e8e8:	e000e3f0 	.word	0xe000e3f0
9000e8ec:	240211cc 	.word	0x240211cc
9000e8f0:	240211c8 	.word	0x240211c8

9000e8f4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000e8f4:	b570      	push	{r4, r5, r6, lr}
9000e8f6:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e8f8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000e8fa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e8fc:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e8fe:	b92a      	cbnz	r2, 9000e90c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e900:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e902:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e904:	b32e      	cbz	r6, 9000e952 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000e906:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e908:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000e90a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000e90c:	b97e      	cbnz	r6, 9000e92e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e90e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e910:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e912:	f01b fe60 	bl	9002a5d6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e916:	6863      	ldr	r3, [r4, #4]
9000e918:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e91a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e91c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e91e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e920:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e922:	bf24      	itt	cs
9000e924:	6823      	ldrcs	r3, [r4, #0]
9000e926:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000e928:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e92a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000e92c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000e92e:	68c0      	ldr	r0, [r0, #12]
9000e930:	f01b fe51 	bl	9002a5d6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e934:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e936:	68e3      	ldr	r3, [r4, #12]
9000e938:	4251      	negs	r1, r2
9000e93a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e93c:	6822      	ldr	r2, [r4, #0]
9000e93e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e940:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e942:	d202      	bcs.n	9000e94a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000e944:	68a3      	ldr	r3, [r4, #8]
9000e946:	440b      	add	r3, r1
9000e948:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000e94a:	2e02      	cmp	r6, #2
9000e94c:	d006      	beq.n	9000e95c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e94e:	3501      	adds	r5, #1
9000e950:	e7ea      	b.n	9000e928 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e952:	6880      	ldr	r0, [r0, #8]
9000e954:	f001 fe96 	bl	90010684 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000e958:	60a6      	str	r6, [r4, #8]
9000e95a:	e7d5      	b.n	9000e908 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e95c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000e95e:	f04f 0000 	mov.w	r0, #0
9000e962:	bf38      	it	cc
9000e964:	2501      	movcc	r5, #1
9000e966:	e7cf      	b.n	9000e908 <prvCopyDataToQueue+0x14>

9000e968 <xQueueGenericCreateStatic>:
	{
9000e968:	b530      	push	{r4, r5, lr}
9000e96a:	b083      	sub	sp, #12
9000e96c:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e970:	b940      	cbnz	r0, 9000e984 <xQueueGenericCreateStatic+0x1c>
9000e972:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e976:	f383 8811 	msr	BASEPRI, r3
9000e97a:	f3bf 8f6f 	isb	sy
9000e97e:	f3bf 8f4f 	dsb	sy
9000e982:	e7fe      	b.n	9000e982 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000e984:	461c      	mov	r4, r3
9000e986:	b153      	cbz	r3, 9000e99e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000e988:	b30a      	cbz	r2, 9000e9ce <xQueueGenericCreateStatic+0x66>
9000e98a:	b989      	cbnz	r1, 9000e9b0 <xQueueGenericCreateStatic+0x48>
9000e98c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e990:	f383 8811 	msr	BASEPRI, r3
9000e994:	f3bf 8f6f 	isb	sy
9000e998:	f3bf 8f4f 	dsb	sy
9000e99c:	e7fe      	b.n	9000e99c <xQueueGenericCreateStatic+0x34>
9000e99e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9a2:	f383 8811 	msr	BASEPRI, r3
9000e9a6:	f3bf 8f6f 	isb	sy
9000e9aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e9ae:	e7fe      	b.n	9000e9ae <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e9b0:	b16a      	cbz	r2, 9000e9ce <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e9b2:	2350      	movs	r3, #80	@ 0x50
9000e9b4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e9b6:	9b01      	ldr	r3, [sp, #4]
9000e9b8:	2b50      	cmp	r3, #80	@ 0x50
9000e9ba:	d013      	beq.n	9000e9e4 <xQueueGenericCreateStatic+0x7c>
9000e9bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9c0:	f383 8811 	msr	BASEPRI, r3
9000e9c4:	f3bf 8f6f 	isb	sy
9000e9c8:	f3bf 8f4f 	dsb	sy
9000e9cc:	e7fe      	b.n	9000e9cc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e9ce:	2900      	cmp	r1, #0
9000e9d0:	d0ef      	beq.n	9000e9b2 <xQueueGenericCreateStatic+0x4a>
9000e9d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9d6:	f383 8811 	msr	BASEPRI, r3
9000e9da:	f3bf 8f6f 	isb	sy
9000e9de:	f3bf 8f4f 	dsb	sy
9000e9e2:	e7fe      	b.n	9000e9e2 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e9e4:	2900      	cmp	r1, #0
9000e9e6:	bf08      	it	eq
9000e9e8:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e9ea:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e9ec:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000e9ee:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000e9f0:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e9f2:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e9f4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000e9f8:	f7ff fe1c 	bl	9000e634 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9fc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e9fe:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ea02:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea04:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ea08:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea0c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea0e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea10:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea12:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea14:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ea16:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea18:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea1a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000ea1c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ea20:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ea24:	f7ff fd52 	bl	9000e4cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ea28:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ea2c:	f7ff fd4e 	bl	9000e4cc <vListInitialise>
	taskEXIT_CRITICAL();
9000ea30:	f7ff fe22 	bl	9000e678 <vPortExitCritical>
	}
9000ea34:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000ea36:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000ea3a:	b003      	add	sp, #12
9000ea3c:	bd30      	pop	{r4, r5, pc}
9000ea3e:	bf00      	nop

9000ea40 <xQueueGenericCreate>:
	{
9000ea40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ea42:	b940      	cbnz	r0, 9000ea56 <xQueueGenericCreate+0x16>
9000ea44:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea48:	f383 8811 	msr	BASEPRI, r3
9000ea4c:	f3bf 8f6f 	isb	sy
9000ea50:	f3bf 8f4f 	dsb	sy
9000ea54:	e7fe      	b.n	9000ea54 <xQueueGenericCreate+0x14>
9000ea56:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ea58:	fb01 f000 	mul.w	r0, r1, r0
9000ea5c:	460e      	mov	r6, r1
9000ea5e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ea60:	3050      	adds	r0, #80	@ 0x50
9000ea62:	f7ff fc0b 	bl	9000e27c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ea66:	4604      	mov	r4, r0
9000ea68:	b340      	cbz	r0, 9000eabc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ea6a:	2300      	movs	r3, #0
9000ea6c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000ea70:	b336      	cbz	r6, 9000eac0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea72:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000ea76:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ea78:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000ea7c:	f7ff fdda 	bl	9000e634 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea80:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ea82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ea86:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea88:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ea8c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea90:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea92:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea94:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea96:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea98:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ea9a:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea9c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea9e:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000eaa0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000eaa4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eaa8:	f7ff fd10 	bl	9000e4cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eaac:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000eab0:	f7ff fd0c 	bl	9000e4cc <vListInitialise>
	taskEXIT_CRITICAL();
9000eab4:	f7ff fde0 	bl	9000e678 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eab8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000eabc:	4620      	mov	r0, r4
9000eabe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eac0:	4603      	mov	r3, r0
9000eac2:	e7d8      	b.n	9000ea76 <xQueueGenericCreate+0x36>

9000eac4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000eac4:	b940      	cbnz	r0, 9000ead8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000eac6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eaca:	f383 8811 	msr	BASEPRI, r3
9000eace:	f3bf 8f6f 	isb	sy
9000ead2:	f3bf 8f4f 	dsb	sy
9000ead6:	e7fe      	b.n	9000ead6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000ead8:	4288      	cmp	r0, r1
9000eada:	d208      	bcs.n	9000eaee <xQueueCreateCountingSemaphoreStatic+0x2a>
9000eadc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eae0:	f383 8811 	msr	BASEPRI, r3
9000eae4:	f3bf 8f6f 	isb	sy
9000eae8:	f3bf 8f4f 	dsb	sy
9000eaec:	e7fe      	b.n	9000eaec <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000eaee:	b530      	push	{r4, r5, lr}
9000eaf0:	4614      	mov	r4, r2
9000eaf2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000eaf4:	2a00      	cmp	r2, #0
9000eaf6:	d03b      	beq.n	9000eb70 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000eaf8:	2350      	movs	r3, #80	@ 0x50
9000eafa:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000eafc:	9b03      	ldr	r3, [sp, #12]
9000eafe:	2b50      	cmp	r3, #80	@ 0x50
9000eb00:	d008      	beq.n	9000eb14 <xQueueCreateCountingSemaphoreStatic+0x50>
9000eb02:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb06:	f383 8811 	msr	BASEPRI, r3
9000eb0a:	f3bf 8f6f 	isb	sy
9000eb0e:	f3bf 8f4f 	dsb	sy
9000eb12:	e7fe      	b.n	9000eb12 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000eb14:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eb16:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eb18:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000eb1a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eb1c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000eb20:	6415      	str	r5, [r2, #64]	@ 0x40
9000eb22:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000eb24:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000eb26:	f7ff fd85 	bl	9000e634 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb2a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000eb2c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000eb2e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb30:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000eb34:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb38:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb3a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb3c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb3e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000eb40:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eb42:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb46:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000eb48:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000eb4c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eb50:	f7ff fcbc 	bl	9000e4cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eb54:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000eb58:	f7ff fcb8 	bl	9000e4cc <vListInitialise>
	taskEXIT_CRITICAL();
9000eb5c:	f7ff fd8c 	bl	9000e678 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eb60:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eb62:	9901      	ldr	r1, [sp, #4]
	}
9000eb64:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000eb66:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eb6a:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000eb6c:	b005      	add	sp, #20
9000eb6e:	bd30      	pop	{r4, r5, pc}
9000eb70:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb74:	f383 8811 	msr	BASEPRI, r3
9000eb78:	f3bf 8f6f 	isb	sy
9000eb7c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000eb80:	e7fe      	b.n	9000eb80 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000eb82:	bf00      	nop

9000eb84 <xQueueCreateCountingSemaphore>:
	{
9000eb84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000eb86:	b940      	cbnz	r0, 9000eb9a <xQueueCreateCountingSemaphore+0x16>
9000eb88:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb8c:	f383 8811 	msr	BASEPRI, r3
9000eb90:	f3bf 8f6f 	isb	sy
9000eb94:	f3bf 8f4f 	dsb	sy
9000eb98:	e7fe      	b.n	9000eb98 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000eb9a:	4288      	cmp	r0, r1
9000eb9c:	4604      	mov	r4, r0
9000eb9e:	460e      	mov	r6, r1
9000eba0:	d208      	bcs.n	9000ebb4 <xQueueCreateCountingSemaphore+0x30>
9000eba2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eba6:	f383 8811 	msr	BASEPRI, r3
9000ebaa:	f3bf 8f6f 	isb	sy
9000ebae:	f3bf 8f4f 	dsb	sy
9000ebb2:	e7fe      	b.n	9000ebb2 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ebb4:	2050      	movs	r0, #80	@ 0x50
9000ebb6:	f7ff fb61 	bl	9000e27c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ebba:	4605      	mov	r5, r0
9000ebbc:	b330      	cbz	r0, 9000ec0c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ebbe:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ebc0:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000ebc2:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ebc4:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000ebc8:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000ebca:	f7ff fd33 	bl	9000e634 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebce:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ebd0:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ebd2:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ebd6:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebd8:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000ebdc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebe0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebe2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebe4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebe6:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ebe8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ebea:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ebec:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ebf0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ebf4:	f7ff fc6a 	bl	9000e4cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ebf8:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000ebfc:	f7ff fc66 	bl	9000e4cc <vListInitialise>
	taskEXIT_CRITICAL();
9000ec00:	f7ff fd3a 	bl	9000e678 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ec04:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ec06:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000ec08:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000ec0c:	4628      	mov	r0, r5
9000ec0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000ec10 <xQueueGenericSend>:
{
9000ec10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ec14:	b084      	sub	sp, #16
9000ec16:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000ec18:	2800      	cmp	r0, #0
9000ec1a:	f000 8103 	beq.w	9000ee24 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ec1e:	4688      	mov	r8, r1
9000ec20:	4604      	mov	r4, r0
9000ec22:	461f      	mov	r7, r3
9000ec24:	2900      	cmp	r1, #0
9000ec26:	f000 8097 	beq.w	9000ed58 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ec2a:	2f02      	cmp	r7, #2
9000ec2c:	d10b      	bne.n	9000ec46 <xQueueGenericSend+0x36>
9000ec2e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ec30:	2b01      	cmp	r3, #1
9000ec32:	d008      	beq.n	9000ec46 <xQueueGenericSend+0x36>
9000ec34:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec38:	f383 8811 	msr	BASEPRI, r3
9000ec3c:	f3bf 8f6f 	isb	sy
9000ec40:	f3bf 8f4f 	dsb	sy
9000ec44:	e7fe      	b.n	9000ec44 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ec46:	f001 fccd 	bl	900105e4 <xTaskGetSchedulerState>
9000ec4a:	2800      	cmp	r0, #0
9000ec4c:	f000 80f3 	beq.w	9000ee36 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ec50:	f1a7 0902 	sub.w	r9, r7, #2
9000ec54:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec56:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ec5a:	fab9 f989 	clz	r9, r9
9000ec5e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000ec62:	f7ff fce7 	bl	9000e634 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ec66:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ec68:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ec6a:	429a      	cmp	r2, r3
9000ec6c:	f0c0 80f0 	bcc.w	9000ee50 <xQueueGenericSend+0x240>
9000ec70:	f1b9 0f00 	cmp.w	r9, #0
9000ec74:	f040 80ec 	bne.w	9000ee50 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ec78:	9b01      	ldr	r3, [sp, #4]
9000ec7a:	2b00      	cmp	r3, #0
9000ec7c:	f000 8101 	beq.w	9000ee82 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000ec80:	2d00      	cmp	r5, #0
9000ec82:	f000 80cb 	beq.w	9000ee1c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000ec86:	f7ff fcf7 	bl	9000e678 <vPortExitCritical>
		vTaskSuspendAll();
9000ec8a:	f001 fae1 	bl	90010250 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ec8e:	f7ff fcd1 	bl	9000e634 <vPortEnterCritical>
9000ec92:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ec96:	2bff      	cmp	r3, #255	@ 0xff
9000ec98:	d102      	bne.n	9000eca0 <xQueueGenericSend+0x90>
9000ec9a:	2300      	movs	r3, #0
9000ec9c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000eca0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eca4:	2bff      	cmp	r3, #255	@ 0xff
9000eca6:	d102      	bne.n	9000ecae <xQueueGenericSend+0x9e>
9000eca8:	2300      	movs	r3, #0
9000ecaa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000ecae:	f7ff fce3 	bl	9000e678 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000ecb2:	a901      	add	r1, sp, #4
9000ecb4:	a802      	add	r0, sp, #8
9000ecb6:	f001 fc4d 	bl	90010554 <xTaskCheckForTimeOut>
9000ecba:	2800      	cmp	r0, #0
9000ecbc:	f040 80e5 	bne.w	9000ee8a <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000ecc0:	f7ff fcb8 	bl	9000e634 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000ecc4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ecc6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ecc8:	429a      	cmp	r2, r3
9000ecca:	d052      	beq.n	9000ed72 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000eccc:	f7ff fcd4 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ecd0:	f7ff fcb0 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ecd4:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000ecd8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ecda:	2d00      	cmp	r5, #0
9000ecdc:	dc04      	bgt.n	9000ece8 <xQueueGenericSend+0xd8>
9000ecde:	e011      	b.n	9000ed04 <xQueueGenericSend+0xf4>
			--cTxLock;
9000ece0:	1e6a      	subs	r2, r5, #1
9000ece2:	b2d3      	uxtb	r3, r2
9000ece4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ece6:	b16b      	cbz	r3, 9000ed04 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ece8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecec:	b153      	cbz	r3, 9000ed04 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecee:	f001 fbdf 	bl	900104b0 <xTaskRemoveFromEventList>
9000ecf2:	2800      	cmp	r0, #0
9000ecf4:	d0f4      	beq.n	9000ece0 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000ecf6:	f001 fc6f 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000ecfa:	1e6a      	subs	r2, r5, #1
9000ecfc:	b2d3      	uxtb	r3, r2
9000ecfe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed00:	2b00      	cmp	r3, #0
9000ed02:	d1f1      	bne.n	9000ece8 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000ed04:	23ff      	movs	r3, #255	@ 0xff
9000ed06:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ed0a:	f7ff fcb5 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ed0e:	f7ff fc91 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ed12:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000ed16:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed18:	2d00      	cmp	r5, #0
9000ed1a:	dd14      	ble.n	9000ed46 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed1c:	f104 0a10 	add.w	sl, r4, #16
9000ed20:	e003      	b.n	9000ed2a <xQueueGenericSend+0x11a>
				--cRxLock;
9000ed22:	1e6a      	subs	r2, r5, #1
9000ed24:	b2d3      	uxtb	r3, r2
9000ed26:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed28:	b16b      	cbz	r3, 9000ed46 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed2c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed2e:	b153      	cbz	r3, 9000ed46 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed30:	f001 fbbe 	bl	900104b0 <xTaskRemoveFromEventList>
9000ed34:	2800      	cmp	r0, #0
9000ed36:	d0f4      	beq.n	9000ed22 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000ed38:	f001 fc4e 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000ed3c:	1e6a      	subs	r2, r5, #1
9000ed3e:	b2d3      	uxtb	r3, r2
9000ed40:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed42:	2b00      	cmp	r3, #0
9000ed44:	d1f1      	bne.n	9000ed2a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed46:	23ff      	movs	r3, #255	@ 0xff
9000ed48:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ed4c:	f7ff fc94 	bl	9000e678 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000ed50:	f001 fa86 	bl	90010260 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ed54:	2501      	movs	r5, #1
9000ed56:	e784      	b.n	9000ec62 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ed58:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ed5a:	2b00      	cmp	r3, #0
9000ed5c:	f43f af65 	beq.w	9000ec2a <xQueueGenericSend+0x1a>
9000ed60:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed64:	f383 8811 	msr	BASEPRI, r3
9000ed68:	f3bf 8f6f 	isb	sy
9000ed6c:	f3bf 8f4f 	dsb	sy
9000ed70:	e7fe      	b.n	9000ed70 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ed72:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ed76:	f7ff fc7f 	bl	9000e678 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ed7a:	9901      	ldr	r1, [sp, #4]
9000ed7c:	4650      	mov	r0, sl
9000ed7e:	f001 fb09 	bl	90010394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ed82:	f7ff fc57 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ed86:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ed8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed8c:	2d00      	cmp	r5, #0
9000ed8e:	dc04      	bgt.n	9000ed9a <xQueueGenericSend+0x18a>
9000ed90:	e011      	b.n	9000edb6 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000ed92:	1e6b      	subs	r3, r5, #1
9000ed94:	b2da      	uxtb	r2, r3
9000ed96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed98:	b16a      	cbz	r2, 9000edb6 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ed9a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ed9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ed9e:	b153      	cbz	r3, 9000edb6 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eda0:	f001 fb86 	bl	900104b0 <xTaskRemoveFromEventList>
9000eda4:	2800      	cmp	r0, #0
9000eda6:	d0f4      	beq.n	9000ed92 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000eda8:	f001 fc16 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000edac:	1e6b      	subs	r3, r5, #1
9000edae:	b2da      	uxtb	r2, r3
9000edb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000edb2:	2a00      	cmp	r2, #0
9000edb4:	d1f1      	bne.n	9000ed9a <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000edb6:	23ff      	movs	r3, #255	@ 0xff
9000edb8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000edbc:	f7ff fc5c 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000edc0:	f7ff fc38 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000edc4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000edc8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000edca:	2d00      	cmp	r5, #0
9000edcc:	dc04      	bgt.n	9000edd8 <xQueueGenericSend+0x1c8>
9000edce:	e011      	b.n	9000edf4 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000edd0:	1e6b      	subs	r3, r5, #1
9000edd2:	b2da      	uxtb	r2, r3
9000edd4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000edd6:	b16a      	cbz	r2, 9000edf4 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000edd8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000edda:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eddc:	b153      	cbz	r3, 9000edf4 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000edde:	f001 fb67 	bl	900104b0 <xTaskRemoveFromEventList>
9000ede2:	2800      	cmp	r0, #0
9000ede4:	d0f4      	beq.n	9000edd0 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000ede6:	f001 fbf7 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000edea:	1e6b      	subs	r3, r5, #1
9000edec:	b2da      	uxtb	r2, r3
9000edee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000edf0:	2a00      	cmp	r2, #0
9000edf2:	d1f1      	bne.n	9000edd8 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000edf4:	23ff      	movs	r3, #255	@ 0xff
9000edf6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000edfa:	f7ff fc3d 	bl	9000e678 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000edfe:	f001 fa2f 	bl	90010260 <xTaskResumeAll>
9000ee02:	2800      	cmp	r0, #0
9000ee04:	d1a6      	bne.n	9000ed54 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000ee06:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ee0a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ee0e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ee12:	f3bf 8f4f 	dsb	sy
9000ee16:	f3bf 8f6f 	isb	sy
9000ee1a:	e79b      	b.n	9000ed54 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ee1c:	a802      	add	r0, sp, #8
9000ee1e:	f001 fb8d 	bl	9001053c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000ee22:	e730      	b.n	9000ec86 <xQueueGenericSend+0x76>
9000ee24:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee28:	f383 8811 	msr	BASEPRI, r3
9000ee2c:	f3bf 8f6f 	isb	sy
9000ee30:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ee34:	e7fe      	b.n	9000ee34 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ee36:	9b01      	ldr	r3, [sp, #4]
9000ee38:	2b00      	cmp	r3, #0
9000ee3a:	f43f af09 	beq.w	9000ec50 <xQueueGenericSend+0x40>
9000ee3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee42:	f383 8811 	msr	BASEPRI, r3
9000ee46:	f3bf 8f6f 	isb	sy
9000ee4a:	f3bf 8f4f 	dsb	sy
9000ee4e:	e7fe      	b.n	9000ee4e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ee50:	463a      	mov	r2, r7
9000ee52:	4641      	mov	r1, r8
9000ee54:	4620      	mov	r0, r4
9000ee56:	f7ff fd4d 	bl	9000e8f4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ee5a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ee5c:	2b00      	cmp	r3, #0
9000ee5e:	d151      	bne.n	9000ef04 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000ee60:	b148      	cbz	r0, 9000ee76 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000ee62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ee66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ee6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ee6e:	f3bf 8f4f 	dsb	sy
9000ee72:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000ee76:	f7ff fbff 	bl	9000e678 <vPortExitCritical>
				return pdPASS;
9000ee7a:	2001      	movs	r0, #1
}
9000ee7c:	b004      	add	sp, #16
9000ee7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000ee82:	f7ff fbf9 	bl	9000e678 <vPortExitCritical>
					return errQUEUE_FULL;
9000ee86:	2000      	movs	r0, #0
9000ee88:	e7f8      	b.n	9000ee7c <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000ee8a:	f7ff fbd3 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ee8e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ee92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ee94:	2d00      	cmp	r5, #0
9000ee96:	dd10      	ble.n	9000eeba <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee98:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000ee9c:	e003      	b.n	9000eea6 <xQueueGenericSend+0x296>
			--cTxLock;
9000ee9e:	1e6b      	subs	r3, r5, #1
9000eea0:	b2da      	uxtb	r2, r3
9000eea2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eea4:	b14a      	cbz	r2, 9000eeba <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eea6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eea8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eeaa:	b133      	cbz	r3, 9000eeba <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eeac:	f001 fb00 	bl	900104b0 <xTaskRemoveFromEventList>
9000eeb0:	2800      	cmp	r0, #0
9000eeb2:	d0f4      	beq.n	9000ee9e <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000eeb4:	f001 fb90 	bl	900105d8 <vTaskMissedYield>
9000eeb8:	e7f1      	b.n	9000ee9e <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000eeba:	23ff      	movs	r3, #255	@ 0xff
9000eebc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eec0:	f7ff fbda 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eec4:	f7ff fbb6 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eec8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000eecc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eece:	2d00      	cmp	r5, #0
9000eed0:	dd10      	ble.n	9000eef4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eed2:	f104 0610 	add.w	r6, r4, #16
9000eed6:	e003      	b.n	9000eee0 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000eed8:	1e6b      	subs	r3, r5, #1
9000eeda:	b2da      	uxtb	r2, r3
9000eedc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eede:	b14a      	cbz	r2, 9000eef4 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eee0:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eee2:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eee4:	b133      	cbz	r3, 9000eef4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eee6:	f001 fae3 	bl	900104b0 <xTaskRemoveFromEventList>
9000eeea:	2800      	cmp	r0, #0
9000eeec:	d0f4      	beq.n	9000eed8 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000eeee:	f001 fb73 	bl	900105d8 <vTaskMissedYield>
9000eef2:	e7f1      	b.n	9000eed8 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000eef4:	23ff      	movs	r3, #255	@ 0xff
9000eef6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000eefa:	f7ff fbbd 	bl	9000e678 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000eefe:	f001 f9af 	bl	90010260 <xTaskResumeAll>
			return errQUEUE_FULL;
9000ef02:	e7c0      	b.n	9000ee86 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ef04:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ef08:	f001 fad2 	bl	900104b0 <xTaskRemoveFromEventList>
9000ef0c:	2800      	cmp	r0, #0
9000ef0e:	d0b2      	beq.n	9000ee76 <xQueueGenericSend+0x266>
9000ef10:	e7a7      	b.n	9000ee62 <xQueueGenericSend+0x252>
9000ef12:	bf00      	nop

9000ef14 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000ef14:	2800      	cmp	r0, #0
9000ef16:	d04b      	beq.n	9000efb0 <xQueueGenericSendFromISR+0x9c>
{
9000ef18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ef1c:	460e      	mov	r6, r1
9000ef1e:	4604      	mov	r4, r0
9000ef20:	4617      	mov	r7, r2
9000ef22:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ef24:	b339      	cbz	r1, 9000ef76 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ef26:	2d02      	cmp	r5, #2
9000ef28:	d10b      	bne.n	9000ef42 <xQueueGenericSendFromISR+0x2e>
9000ef2a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ef2c:	2b01      	cmp	r3, #1
9000ef2e:	d008      	beq.n	9000ef42 <xQueueGenericSendFromISR+0x2e>
9000ef30:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef34:	f383 8811 	msr	BASEPRI, r3
9000ef38:	f3bf 8f6f 	isb	sy
9000ef3c:	f3bf 8f4f 	dsb	sy
9000ef40:	e7fe      	b.n	9000ef40 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000ef42:	f7ff fca9 	bl	9000e898 <vPortValidateInterruptPriority>
	__asm volatile
9000ef46:	f3ef 8811 	mrs	r8, BASEPRI
9000ef4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef4e:	f383 8811 	msr	BASEPRI, r3
9000ef52:	f3bf 8f6f 	isb	sy
9000ef56:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ef5a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ef5c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ef5e:	429a      	cmp	r2, r3
9000ef60:	d315      	bcc.n	9000ef8e <xQueueGenericSendFromISR+0x7a>
9000ef62:	f1a5 0002 	sub.w	r0, r5, #2
9000ef66:	fab0 f080 	clz	r0, r0
9000ef6a:	0940      	lsrs	r0, r0, #5
9000ef6c:	b978      	cbnz	r0, 9000ef8e <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000ef6e:	f388 8811 	msr	BASEPRI, r8
}
9000ef72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ef76:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ef78:	2b00      	cmp	r3, #0
9000ef7a:	d0d4      	beq.n	9000ef26 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000ef7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef80:	f383 8811 	msr	BASEPRI, r3
9000ef84:	f3bf 8f6f 	isb	sy
9000ef88:	f3bf 8f4f 	dsb	sy
9000ef8c:	e7fe      	b.n	9000ef8c <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ef8e:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000ef90:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ef94:	4631      	mov	r1, r6
9000ef96:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000ef98:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ef9a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ef9c:	f7ff fcaa 	bl	9000e8f4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000efa0:	1c6b      	adds	r3, r5, #1
9000efa2:	d00e      	beq.n	9000efc2 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000efa4:	1c6b      	adds	r3, r5, #1
9000efa6:	b25b      	sxtb	r3, r3
9000efa8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000efac:	2001      	movs	r0, #1
9000efae:	e7de      	b.n	9000ef6e <xQueueGenericSendFromISR+0x5a>
9000efb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efb4:	f383 8811 	msr	BASEPRI, r3
9000efb8:	f3bf 8f6f 	isb	sy
9000efbc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000efc0:	e7fe      	b.n	9000efc0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000efc2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000efc4:	2b00      	cmp	r3, #0
9000efc6:	d0f1      	beq.n	9000efac <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000efc8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000efcc:	f001 fa70 	bl	900104b0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000efd0:	2f00      	cmp	r7, #0
9000efd2:	d0eb      	beq.n	9000efac <xQueueGenericSendFromISR+0x98>
9000efd4:	2800      	cmp	r0, #0
9000efd6:	d0e9      	beq.n	9000efac <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000efd8:	2301      	movs	r3, #1
9000efda:	603b      	str	r3, [r7, #0]
9000efdc:	e7e6      	b.n	9000efac <xQueueGenericSendFromISR+0x98>
9000efde:	bf00      	nop

9000efe0 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000efe0:	b360      	cbz	r0, 9000f03c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000efe2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000efe4:	b570      	push	{r4, r5, r6, lr}
9000efe6:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000efe8:	b143      	cbz	r3, 9000effc <xQueueGiveFromISR+0x1c>
9000efea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efee:	f383 8811 	msr	BASEPRI, r3
9000eff2:	f3bf 8f6f 	isb	sy
9000eff6:	f3bf 8f4f 	dsb	sy
9000effa:	e7fe      	b.n	9000effa <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000effc:	6803      	ldr	r3, [r0, #0]
9000effe:	460d      	mov	r5, r1
9000f000:	b32b      	cbz	r3, 9000f04e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f002:	f7ff fc49 	bl	9000e898 <vPortValidateInterruptPriority>
	__asm volatile
9000f006:	f3ef 8611 	mrs	r6, BASEPRI
9000f00a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f00e:	f383 8811 	msr	BASEPRI, r3
9000f012:	f3bf 8f6f 	isb	sy
9000f016:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f01a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f01c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000f01e:	429a      	cmp	r2, r3
9000f020:	d921      	bls.n	9000f066 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f022:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f026:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f028:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f02a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f02c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f02e:	d01e      	beq.n	9000f06e <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f030:	3301      	adds	r3, #1
9000f032:	b25b      	sxtb	r3, r3
9000f034:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000f038:	2001      	movs	r0, #1
9000f03a:	e015      	b.n	9000f068 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f03c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f040:	f383 8811 	msr	BASEPRI, r3
9000f044:	f3bf 8f6f 	isb	sy
9000f048:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f04c:	e7fe      	b.n	9000f04c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f04e:	6883      	ldr	r3, [r0, #8]
9000f050:	2b00      	cmp	r3, #0
9000f052:	d0d6      	beq.n	9000f002 <xQueueGiveFromISR+0x22>
9000f054:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f058:	f383 8811 	msr	BASEPRI, r3
9000f05c:	f3bf 8f6f 	isb	sy
9000f060:	f3bf 8f4f 	dsb	sy
9000f064:	e7fe      	b.n	9000f064 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f066:	2000      	movs	r0, #0
	__asm volatile
9000f068:	f386 8811 	msr	BASEPRI, r6
}
9000f06c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f06e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f070:	2b00      	cmp	r3, #0
9000f072:	d0e1      	beq.n	9000f038 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f074:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f078:	f001 fa1a 	bl	900104b0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f07c:	2d00      	cmp	r5, #0
9000f07e:	d0db      	beq.n	9000f038 <xQueueGiveFromISR+0x58>
9000f080:	2800      	cmp	r0, #0
9000f082:	d0d9      	beq.n	9000f038 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f084:	2301      	movs	r3, #1
9000f086:	602b      	str	r3, [r5, #0]
9000f088:	e7d6      	b.n	9000f038 <xQueueGiveFromISR+0x58>
9000f08a:	bf00      	nop

9000f08c <xQueueReceive>:
{
9000f08c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f090:	b085      	sub	sp, #20
9000f092:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f094:	2800      	cmp	r0, #0
9000f096:	f000 8147 	beq.w	9000f328 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f09a:	460f      	mov	r7, r1
9000f09c:	4604      	mov	r4, r0
9000f09e:	2900      	cmp	r1, #0
9000f0a0:	d07b      	beq.n	9000f19a <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f0a2:	f001 fa9f 	bl	900105e4 <xTaskGetSchedulerState>
9000f0a6:	2800      	cmp	r0, #0
9000f0a8:	f000 8083 	beq.w	9000f1b2 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000f0ac:	f7ff fac2 	bl	9000e634 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f0b0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f0b2:	2d00      	cmp	r5, #0
9000f0b4:	f040 8141 	bne.w	9000f33a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f0b8:	9b01      	ldr	r3, [sp, #4]
9000f0ba:	2b00      	cmp	r3, #0
9000f0bc:	f000 80d7 	beq.w	9000f26e <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000f0c0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0c2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f0c6:	a802      	add	r0, sp, #8
9000f0c8:	f001 fa38 	bl	9001053c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f0cc:	f7ff fad4 	bl	9000e678 <vPortExitCritical>
		vTaskSuspendAll();
9000f0d0:	f001 f8be 	bl	90010250 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f0d4:	f7ff faae 	bl	9000e634 <vPortEnterCritical>
9000f0d8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f0dc:	2bff      	cmp	r3, #255	@ 0xff
9000f0de:	d101      	bne.n	9000f0e4 <xQueueReceive+0x58>
9000f0e0:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f0e4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f0e8:	2bff      	cmp	r3, #255	@ 0xff
9000f0ea:	d101      	bne.n	9000f0f0 <xQueueReceive+0x64>
9000f0ec:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f0f0:	f7ff fac2 	bl	9000e678 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f0f4:	a901      	add	r1, sp, #4
9000f0f6:	a802      	add	r0, sp, #8
9000f0f8:	f001 fa2c 	bl	90010554 <xTaskCheckForTimeOut>
9000f0fc:	2800      	cmp	r0, #0
9000f0fe:	d165      	bne.n	9000f1cc <xQueueReceive+0x140>
	taskENTER_CRITICAL();
9000f100:	f7ff fa98 	bl	9000e634 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f104:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f106:	2b00      	cmp	r3, #0
9000f108:	f000 80b7 	beq.w	9000f27a <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9000f10c:	f7ff fab4 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f110:	f7ff fa90 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f114:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f118:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f11a:	2d00      	cmp	r5, #0
9000f11c:	dd14      	ble.n	9000f148 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f11e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f122:	e003      	b.n	9000f12c <xQueueReceive+0xa0>
			--cTxLock;
9000f124:	1e6b      	subs	r3, r5, #1
9000f126:	b2da      	uxtb	r2, r3
9000f128:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f12a:	b16a      	cbz	r2, 9000f148 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f12c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f12e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f130:	b153      	cbz	r3, 9000f148 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f132:	f001 f9bd 	bl	900104b0 <xTaskRemoveFromEventList>
9000f136:	2800      	cmp	r0, #0
9000f138:	d0f4      	beq.n	9000f124 <xQueueReceive+0x98>
						vTaskMissedYield();
9000f13a:	f001 fa4d 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000f13e:	1e6b      	subs	r3, r5, #1
9000f140:	b2da      	uxtb	r2, r3
9000f142:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f144:	2a00      	cmp	r2, #0
9000f146:	d1f1      	bne.n	9000f12c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
9000f148:	23ff      	movs	r3, #255	@ 0xff
9000f14a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f14e:	f7ff fa93 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f152:	f7ff fa6f 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f156:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f15a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f15c:	2d00      	cmp	r5, #0
9000f15e:	dd14      	ble.n	9000f18a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f160:	f104 0910 	add.w	r9, r4, #16
9000f164:	e003      	b.n	9000f16e <xQueueReceive+0xe2>
				--cRxLock;
9000f166:	1e6b      	subs	r3, r5, #1
9000f168:	b2da      	uxtb	r2, r3
9000f16a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f16c:	b16a      	cbz	r2, 9000f18a <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f16e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f170:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f172:	b153      	cbz	r3, 9000f18a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f174:	f001 f99c 	bl	900104b0 <xTaskRemoveFromEventList>
9000f178:	2800      	cmp	r0, #0
9000f17a:	d0f4      	beq.n	9000f166 <xQueueReceive+0xda>
					vTaskMissedYield();
9000f17c:	f001 fa2c 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000f180:	1e6b      	subs	r3, r5, #1
9000f182:	b2da      	uxtb	r2, r3
9000f184:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f186:	2a00      	cmp	r2, #0
9000f188:	d1f1      	bne.n	9000f16e <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f18a:	23ff      	movs	r3, #255	@ 0xff
9000f18c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f190:	f7ff fa72 	bl	9000e678 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f194:	f001 f864 	bl	90010260 <xTaskResumeAll>
9000f198:	e060      	b.n	9000f25c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f19a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f19c:	2b00      	cmp	r3, #0
9000f19e:	d080      	beq.n	9000f0a2 <xQueueReceive+0x16>
	__asm volatile
9000f1a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f1a4:	f383 8811 	msr	BASEPRI, r3
9000f1a8:	f3bf 8f6f 	isb	sy
9000f1ac:	f3bf 8f4f 	dsb	sy
9000f1b0:	e7fe      	b.n	9000f1b0 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f1b2:	9b01      	ldr	r3, [sp, #4]
9000f1b4:	2b00      	cmp	r3, #0
9000f1b6:	f43f af79 	beq.w	9000f0ac <xQueueReceive+0x20>
9000f1ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f1be:	f383 8811 	msr	BASEPRI, r3
9000f1c2:	f3bf 8f6f 	isb	sy
9000f1c6:	f3bf 8f4f 	dsb	sy
9000f1ca:	e7fe      	b.n	9000f1ca <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
9000f1cc:	f7ff fa32 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f1d0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f1d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1d6:	2d00      	cmp	r5, #0
9000f1d8:	dc04      	bgt.n	9000f1e4 <xQueueReceive+0x158>
9000f1da:	e011      	b.n	9000f200 <xQueueReceive+0x174>
			--cTxLock;
9000f1dc:	1e6b      	subs	r3, r5, #1
9000f1de:	b2da      	uxtb	r2, r3
9000f1e0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1e2:	b16a      	cbz	r2, 9000f200 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1e6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1e8:	b153      	cbz	r3, 9000f200 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1ea:	f001 f961 	bl	900104b0 <xTaskRemoveFromEventList>
9000f1ee:	2800      	cmp	r0, #0
9000f1f0:	d0f4      	beq.n	9000f1dc <xQueueReceive+0x150>
						vTaskMissedYield();
9000f1f2:	f001 f9f1 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000f1f6:	1e6b      	subs	r3, r5, #1
9000f1f8:	b2da      	uxtb	r2, r3
9000f1fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1fc:	2a00      	cmp	r2, #0
9000f1fe:	d1f1      	bne.n	9000f1e4 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
9000f200:	23ff      	movs	r3, #255	@ 0xff
9000f202:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f206:	f7ff fa37 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f20a:	f7ff fa13 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f20e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f212:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f214:	2d00      	cmp	r5, #0
9000f216:	dd14      	ble.n	9000f242 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f218:	f104 0910 	add.w	r9, r4, #16
9000f21c:	e003      	b.n	9000f226 <xQueueReceive+0x19a>
				--cRxLock;
9000f21e:	1e6b      	subs	r3, r5, #1
9000f220:	b2da      	uxtb	r2, r3
9000f222:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f224:	b16a      	cbz	r2, 9000f242 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f226:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f228:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f22a:	b153      	cbz	r3, 9000f242 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f22c:	f001 f940 	bl	900104b0 <xTaskRemoveFromEventList>
9000f230:	2800      	cmp	r0, #0
9000f232:	d0f4      	beq.n	9000f21e <xQueueReceive+0x192>
					vTaskMissedYield();
9000f234:	f001 f9d0 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000f238:	1e6b      	subs	r3, r5, #1
9000f23a:	b2da      	uxtb	r2, r3
9000f23c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f23e:	2a00      	cmp	r2, #0
9000f240:	d1f1      	bne.n	9000f226 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f242:	23ff      	movs	r3, #255	@ 0xff
9000f244:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f248:	f7ff fa16 	bl	9000e678 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f24c:	f001 f808 	bl	90010260 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f250:	f7ff f9f0 	bl	9000e634 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f254:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f256:	b153      	cbz	r3, 9000f26e <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
9000f258:	f7ff fa0e 	bl	9000e678 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f25c:	f7ff f9ea 	bl	9000e634 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f260:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f262:	2d00      	cmp	r5, #0
9000f264:	d169      	bne.n	9000f33a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f266:	9b01      	ldr	r3, [sp, #4]
9000f268:	2b00      	cmp	r3, #0
9000f26a:	f47f af2f 	bne.w	9000f0cc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f26e:	f7ff fa03 	bl	9000e678 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f272:	2000      	movs	r0, #0
}
9000f274:	b005      	add	sp, #20
9000f276:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f27a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000f27e:	f7ff f9fb 	bl	9000e678 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f282:	9901      	ldr	r1, [sp, #4]
9000f284:	4648      	mov	r0, r9
9000f286:	f001 f885 	bl	90010394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f28a:	f7ff f9d3 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f28e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f292:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f294:	2d00      	cmp	r5, #0
9000f296:	dc04      	bgt.n	9000f2a2 <xQueueReceive+0x216>
9000f298:	e011      	b.n	9000f2be <xQueueReceive+0x232>
			--cTxLock;
9000f29a:	1e6b      	subs	r3, r5, #1
9000f29c:	b2da      	uxtb	r2, r3
9000f29e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2a0:	b16a      	cbz	r2, 9000f2be <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2a4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2a6:	b153      	cbz	r3, 9000f2be <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2a8:	f001 f902 	bl	900104b0 <xTaskRemoveFromEventList>
9000f2ac:	2800      	cmp	r0, #0
9000f2ae:	d0f4      	beq.n	9000f29a <xQueueReceive+0x20e>
						vTaskMissedYield();
9000f2b0:	f001 f992 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000f2b4:	1e6b      	subs	r3, r5, #1
9000f2b6:	b2da      	uxtb	r2, r3
9000f2b8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2ba:	2a00      	cmp	r2, #0
9000f2bc:	d1f1      	bne.n	9000f2a2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
9000f2be:	23ff      	movs	r3, #255	@ 0xff
9000f2c0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f2c4:	f7ff f9d8 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f2c8:	f7ff f9b4 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f2cc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f2d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2d2:	2d00      	cmp	r5, #0
9000f2d4:	dd14      	ble.n	9000f300 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2d6:	f104 0910 	add.w	r9, r4, #16
9000f2da:	e003      	b.n	9000f2e4 <xQueueReceive+0x258>
				--cRxLock;
9000f2dc:	1e6b      	subs	r3, r5, #1
9000f2de:	b2da      	uxtb	r2, r3
9000f2e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2e2:	b16a      	cbz	r2, 9000f300 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2e6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2e8:	b153      	cbz	r3, 9000f300 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2ea:	f001 f8e1 	bl	900104b0 <xTaskRemoveFromEventList>
9000f2ee:	2800      	cmp	r0, #0
9000f2f0:	d0f4      	beq.n	9000f2dc <xQueueReceive+0x250>
					vTaskMissedYield();
9000f2f2:	f001 f971 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000f2f6:	1e6b      	subs	r3, r5, #1
9000f2f8:	b2da      	uxtb	r2, r3
9000f2fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2fc:	2a00      	cmp	r2, #0
9000f2fe:	d1f1      	bne.n	9000f2e4 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
9000f300:	23ff      	movs	r3, #255	@ 0xff
9000f302:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f306:	f7ff f9b7 	bl	9000e678 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f30a:	f000 ffa9 	bl	90010260 <xTaskResumeAll>
9000f30e:	2800      	cmp	r0, #0
9000f310:	d1a4      	bne.n	9000f25c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
9000f312:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f316:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f31a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f31e:	f3bf 8f4f 	dsb	sy
9000f322:	f3bf 8f6f 	isb	sy
9000f326:	e799      	b.n	9000f25c <xQueueReceive+0x1d0>
9000f328:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f32c:	f383 8811 	msr	BASEPRI, r3
9000f330:	f3bf 8f6f 	isb	sy
9000f334:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f338:	e7fe      	b.n	9000f338 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f33a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000f33c:	b152      	cbz	r2, 9000f354 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f33e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f340:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f342:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f344:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f346:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f348:	d301      	bcc.n	9000f34e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f34a:	6821      	ldr	r1, [r4, #0]
9000f34c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f34e:	4638      	mov	r0, r7
9000f350:	f01b f941 	bl	9002a5d6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f354:	3d01      	subs	r5, #1
9000f356:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f358:	6923      	ldr	r3, [r4, #16]
9000f35a:	b91b      	cbnz	r3, 9000f364 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f35c:	f7ff f98c 	bl	9000e678 <vPortExitCritical>
				return pdPASS;
9000f360:	2001      	movs	r0, #1
9000f362:	e787      	b.n	9000f274 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f364:	f104 0010 	add.w	r0, r4, #16
9000f368:	f001 f8a2 	bl	900104b0 <xTaskRemoveFromEventList>
9000f36c:	2800      	cmp	r0, #0
9000f36e:	d0f5      	beq.n	9000f35c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
9000f370:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f374:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f378:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f37c:	f3bf 8f4f 	dsb	sy
9000f380:	f3bf 8f6f 	isb	sy
9000f384:	e7ea      	b.n	9000f35c <xQueueReceive+0x2d0>
9000f386:	bf00      	nop

9000f388 <xQueueSemaphoreTake>:
{
9000f388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f38c:	b085      	sub	sp, #20
9000f38e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f390:	2800      	cmp	r0, #0
9000f392:	d05f      	beq.n	9000f454 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f394:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f396:	4604      	mov	r4, r0
9000f398:	b143      	cbz	r3, 9000f3ac <xQueueSemaphoreTake+0x24>
9000f39a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f39e:	f383 8811 	msr	BASEPRI, r3
9000f3a2:	f3bf 8f6f 	isb	sy
9000f3a6:	f3bf 8f4f 	dsb	sy
9000f3aa:	e7fe      	b.n	9000f3aa <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f3ac:	f001 f91a 	bl	900105e4 <xTaskGetSchedulerState>
9000f3b0:	2800      	cmp	r0, #0
9000f3b2:	d058      	beq.n	9000f466 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
9000f3b4:	f7ff f93e 	bl	9000e634 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f3b8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f3ba:	2d00      	cmp	r5, #0
9000f3bc:	f040 8155 	bne.w	9000f66a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f3c0:	9b01      	ldr	r3, [sp, #4]
9000f3c2:	2b00      	cmp	r3, #0
9000f3c4:	f000 8145 	beq.w	9000f652 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f3c8:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
9000f3ca:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3cc:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f3d0:	a802      	add	r0, sp, #8
9000f3d2:	f001 f8b3 	bl	9001053c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f3d6:	f7ff f94f 	bl	9000e678 <vPortExitCritical>
		vTaskSuspendAll();
9000f3da:	f000 ff39 	bl	90010250 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f3de:	f7ff f929 	bl	9000e634 <vPortEnterCritical>
9000f3e2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f3e6:	2bff      	cmp	r3, #255	@ 0xff
9000f3e8:	d101      	bne.n	9000f3ee <xQueueSemaphoreTake+0x66>
9000f3ea:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f3ee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f3f2:	2bff      	cmp	r3, #255	@ 0xff
9000f3f4:	d101      	bne.n	9000f3fa <xQueueSemaphoreTake+0x72>
9000f3f6:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f3fa:	f7ff f93d 	bl	9000e678 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f3fe:	a901      	add	r1, sp, #4
9000f400:	a802      	add	r0, sp, #8
9000f402:	f001 f8a7 	bl	90010554 <xTaskCheckForTimeOut>
9000f406:	2800      	cmp	r0, #0
9000f408:	d139      	bne.n	9000f47e <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000f40a:	f7ff f913 	bl	9000e634 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f40e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f410:	2b00      	cmp	r3, #0
9000f412:	f000 80c0 	beq.w	9000f596 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
9000f416:	f7ff f92f 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f41a:	f7ff f90b 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f41e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f422:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f424:	2d00      	cmp	r5, #0
9000f426:	f340 8091 	ble.w	9000f54c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f42a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f42e:	e005      	b.n	9000f43c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000f430:	1e6b      	subs	r3, r5, #1
9000f432:	b2da      	uxtb	r2, r3
9000f434:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f436:	2a00      	cmp	r2, #0
9000f438:	f000 8088 	beq.w	9000f54c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f43c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f43e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f440:	2b00      	cmp	r3, #0
9000f442:	f000 8083 	beq.w	9000f54c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f446:	f001 f833 	bl	900104b0 <xTaskRemoveFromEventList>
9000f44a:	2800      	cmp	r0, #0
9000f44c:	d0f0      	beq.n	9000f430 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9000f44e:	f001 f8c3 	bl	900105d8 <vTaskMissedYield>
9000f452:	e7ed      	b.n	9000f430 <xQueueSemaphoreTake+0xa8>
9000f454:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f458:	f383 8811 	msr	BASEPRI, r3
9000f45c:	f3bf 8f6f 	isb	sy
9000f460:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f464:	e7fe      	b.n	9000f464 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f466:	9b01      	ldr	r3, [sp, #4]
9000f468:	2b00      	cmp	r3, #0
9000f46a:	d0a3      	beq.n	9000f3b4 <xQueueSemaphoreTake+0x2c>
9000f46c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f470:	f383 8811 	msr	BASEPRI, r3
9000f474:	f3bf 8f6f 	isb	sy
9000f478:	f3bf 8f4f 	dsb	sy
9000f47c:	e7fe      	b.n	9000f47c <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000f47e:	f7ff f8d9 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f482:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f486:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f488:	2d00      	cmp	r5, #0
9000f48a:	dc04      	bgt.n	9000f496 <xQueueSemaphoreTake+0x10e>
9000f48c:	e011      	b.n	9000f4b2 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000f48e:	1e6b      	subs	r3, r5, #1
9000f490:	b2da      	uxtb	r2, r3
9000f492:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f494:	b16a      	cbz	r2, 9000f4b2 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f496:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f498:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f49a:	b153      	cbz	r3, 9000f4b2 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f49c:	f001 f808 	bl	900104b0 <xTaskRemoveFromEventList>
9000f4a0:	2800      	cmp	r0, #0
9000f4a2:	d0f4      	beq.n	9000f48e <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000f4a4:	f001 f898 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000f4a8:	1e6b      	subs	r3, r5, #1
9000f4aa:	b2da      	uxtb	r2, r3
9000f4ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4ae:	2a00      	cmp	r2, #0
9000f4b0:	d1f1      	bne.n	9000f496 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f4b2:	23ff      	movs	r3, #255	@ 0xff
9000f4b4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f4b8:	f7ff f8de 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f4bc:	f7ff f8ba 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f4c0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f4c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4c6:	2d00      	cmp	r5, #0
9000f4c8:	dd14      	ble.n	9000f4f4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4ca:	f104 0910 	add.w	r9, r4, #16
9000f4ce:	e003      	b.n	9000f4d8 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000f4d0:	1e6b      	subs	r3, r5, #1
9000f4d2:	b2da      	uxtb	r2, r3
9000f4d4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4d6:	b16a      	cbz	r2, 9000f4f4 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4d8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4da:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4dc:	b153      	cbz	r3, 9000f4f4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4de:	f000 ffe7 	bl	900104b0 <xTaskRemoveFromEventList>
9000f4e2:	2800      	cmp	r0, #0
9000f4e4:	d0f4      	beq.n	9000f4d0 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000f4e6:	f001 f877 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000f4ea:	1e6b      	subs	r3, r5, #1
9000f4ec:	b2da      	uxtb	r2, r3
9000f4ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4f0:	2a00      	cmp	r2, #0
9000f4f2:	d1f1      	bne.n	9000f4d8 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000f4f4:	23ff      	movs	r3, #255	@ 0xff
9000f4f6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f4fa:	f7ff f8bd 	bl	9000e678 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f4fe:	f000 feaf 	bl	90010260 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f502:	f7ff f897 	bl	9000e634 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f506:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f508:	b943      	cbnz	r3, 9000f51c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9000f50a:	f7ff f8b5 	bl	9000e678 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000f50e:	2f00      	cmp	r7, #0
9000f510:	f040 8094 	bne.w	9000f63c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
9000f514:	2000      	movs	r0, #0
}
9000f516:	b005      	add	sp, #20
9000f518:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000f51c:	f7ff f8ac 	bl	9000e678 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f520:	f7ff f888 	bl	9000e634 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f524:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f526:	2d00      	cmp	r5, #0
9000f528:	f040 809f 	bne.w	9000f66a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f52c:	9b01      	ldr	r3, [sp, #4]
9000f52e:	2b00      	cmp	r3, #0
9000f530:	f47f af51 	bne.w	9000f3d6 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000f534:	2f00      	cmp	r7, #0
9000f536:	f000 808c 	beq.w	9000f652 <xQueueSemaphoreTake+0x2ca>
9000f53a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f53e:	f383 8811 	msr	BASEPRI, r3
9000f542:	f3bf 8f6f 	isb	sy
9000f546:	f3bf 8f4f 	dsb	sy
9000f54a:	e7fe      	b.n	9000f54a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9000f54c:	23ff      	movs	r3, #255	@ 0xff
9000f54e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f552:	f7ff f891 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f556:	f7ff f86d 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f55a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f55e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f560:	2d00      	cmp	r5, #0
9000f562:	dd10      	ble.n	9000f586 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f564:	f104 0910 	add.w	r9, r4, #16
9000f568:	e003      	b.n	9000f572 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9000f56a:	1e6b      	subs	r3, r5, #1
9000f56c:	b2da      	uxtb	r2, r3
9000f56e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f570:	b14a      	cbz	r2, 9000f586 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f572:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f574:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f576:	b133      	cbz	r3, 9000f586 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f578:	f000 ff9a 	bl	900104b0 <xTaskRemoveFromEventList>
9000f57c:	2800      	cmp	r0, #0
9000f57e:	d0f4      	beq.n	9000f56a <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
9000f580:	f001 f82a 	bl	900105d8 <vTaskMissedYield>
9000f584:	e7f1      	b.n	9000f56a <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f586:	23ff      	movs	r3, #255	@ 0xff
9000f588:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f58c:	f7ff f874 	bl	9000e678 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f590:	f000 fe66 	bl	90010260 <xTaskResumeAll>
9000f594:	e7c4      	b.n	9000f520 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
9000f596:	f7ff f86f 	bl	9000e678 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f59a:	6823      	ldr	r3, [r4, #0]
9000f59c:	2b00      	cmp	r3, #0
9000f59e:	d05b      	beq.n	9000f658 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f5a0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f5a4:	9901      	ldr	r1, [sp, #4]
9000f5a6:	4648      	mov	r0, r9
9000f5a8:	f000 fef4 	bl	90010394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f5ac:	f7ff f842 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f5b0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f5b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f5b6:	2d00      	cmp	r5, #0
9000f5b8:	dc04      	bgt.n	9000f5c4 <xQueueSemaphoreTake+0x23c>
9000f5ba:	e00d      	b.n	9000f5d8 <xQueueSemaphoreTake+0x250>
			--cTxLock;
9000f5bc:	1e6b      	subs	r3, r5, #1
9000f5be:	b2da      	uxtb	r2, r3
9000f5c0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f5c2:	b14a      	cbz	r2, 9000f5d8 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f5c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5c6:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f5c8:	b133      	cbz	r3, 9000f5d8 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5ca:	f000 ff71 	bl	900104b0 <xTaskRemoveFromEventList>
9000f5ce:	2800      	cmp	r0, #0
9000f5d0:	d0f4      	beq.n	9000f5bc <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
9000f5d2:	f001 f801 	bl	900105d8 <vTaskMissedYield>
9000f5d6:	e7f1      	b.n	9000f5bc <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
9000f5d8:	23ff      	movs	r3, #255	@ 0xff
9000f5da:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f5de:	f7ff f84b 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f5e2:	f7ff f827 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f5e6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f5ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5ec:	2d00      	cmp	r5, #0
9000f5ee:	dd10      	ble.n	9000f612 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5f0:	f104 0910 	add.w	r9, r4, #16
9000f5f4:	e003      	b.n	9000f5fe <xQueueSemaphoreTake+0x276>
				--cRxLock;
9000f5f6:	1e6b      	subs	r3, r5, #1
9000f5f8:	b2da      	uxtb	r2, r3
9000f5fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5fc:	b14a      	cbz	r2, 9000f612 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5fe:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f600:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f602:	b133      	cbz	r3, 9000f612 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f604:	f000 ff54 	bl	900104b0 <xTaskRemoveFromEventList>
9000f608:	2800      	cmp	r0, #0
9000f60a:	d0f4      	beq.n	9000f5f6 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9000f60c:	f000 ffe4 	bl	900105d8 <vTaskMissedYield>
9000f610:	e7f1      	b.n	9000f5f6 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
9000f612:	23ff      	movs	r3, #255	@ 0xff
9000f614:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f618:	f7ff f82e 	bl	9000e678 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f61c:	f000 fe20 	bl	90010260 <xTaskResumeAll>
9000f620:	2800      	cmp	r0, #0
9000f622:	f47f af7d 	bne.w	9000f520 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
9000f626:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f62a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f62e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f632:	f3bf 8f4f 	dsb	sy
9000f636:	f3bf 8f6f 	isb	sy
9000f63a:	e771      	b.n	9000f520 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9000f63c:	f7fe fffa 	bl	9000e634 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000f640:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000f642:	b119      	cbz	r1, 9000f64c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000f644:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f646:	6819      	ldr	r1, [r3, #0]
9000f648:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f64c:	68a0      	ldr	r0, [r4, #8]
9000f64e:	f001 f85d 	bl	9001070c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000f652:	f7ff f811 	bl	9000e678 <vPortExitCritical>
9000f656:	e75d      	b.n	9000f514 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000f658:	f7fe ffec 	bl	9000e634 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f65c:	68a0      	ldr	r0, [r4, #8]
9000f65e:	f000 ffd1 	bl	90010604 <xTaskPriorityInherit>
9000f662:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000f664:	f7ff f808 	bl	9000e678 <vPortExitCritical>
9000f668:	e79a      	b.n	9000f5a0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f66a:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f66c:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f66e:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f670:	b12b      	cbz	r3, 9000f67e <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f672:	6923      	ldr	r3, [r4, #16]
9000f674:	b93b      	cbnz	r3, 9000f686 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
9000f676:	f7fe ffff 	bl	9000e678 <vPortExitCritical>
				return pdPASS;
9000f67a:	2001      	movs	r0, #1
9000f67c:	e74b      	b.n	9000f516 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000f67e:	f001 f895 	bl	900107ac <pvTaskIncrementMutexHeldCount>
9000f682:	60a0      	str	r0, [r4, #8]
9000f684:	e7f5      	b.n	9000f672 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f686:	f104 0010 	add.w	r0, r4, #16
9000f68a:	f000 ff11 	bl	900104b0 <xTaskRemoveFromEventList>
9000f68e:	2800      	cmp	r0, #0
9000f690:	d0f1      	beq.n	9000f676 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
9000f692:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f696:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f69a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f69e:	f3bf 8f4f 	dsb	sy
9000f6a2:	f3bf 8f6f 	isb	sy
9000f6a6:	e7e6      	b.n	9000f676 <xQueueSemaphoreTake+0x2ee>

9000f6a8 <xQueueReceiveFromISR>:
{
9000f6a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000f6ac:	b310      	cbz	r0, 9000f6f4 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f6ae:	460f      	mov	r7, r1
9000f6b0:	4604      	mov	r4, r0
9000f6b2:	4616      	mov	r6, r2
9000f6b4:	b191      	cbz	r1, 9000f6dc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f6b6:	f7ff f8ef 	bl	9000e898 <vPortValidateInterruptPriority>
	__asm volatile
9000f6ba:	f3ef 8911 	mrs	r9, BASEPRI
9000f6be:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6c2:	f383 8811 	msr	BASEPRI, r3
9000f6c6:	f3bf 8f6f 	isb	sy
9000f6ca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f6ce:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f6d0:	b9cd      	cbnz	r5, 9000f706 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000f6d2:	4628      	mov	r0, r5
	__asm volatile
9000f6d4:	f389 8811 	msr	BASEPRI, r9
}
9000f6d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f6dc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f6de:	2b00      	cmp	r3, #0
9000f6e0:	d0e9      	beq.n	9000f6b6 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000f6e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6e6:	f383 8811 	msr	BASEPRI, r3
9000f6ea:	f3bf 8f6f 	isb	sy
9000f6ee:	f3bf 8f4f 	dsb	sy
9000f6f2:	e7fe      	b.n	9000f6f2 <xQueueReceiveFromISR+0x4a>
9000f6f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6f8:	f383 8811 	msr	BASEPRI, r3
9000f6fc:	f3bf 8f6f 	isb	sy
9000f700:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f704:	e7fe      	b.n	9000f704 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000f706:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f70a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000f70c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f710:	b142      	cbz	r2, 9000f724 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f712:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f714:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f716:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f718:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f71a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f71c:	d21c      	bcs.n	9000f758 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f71e:	4638      	mov	r0, r7
9000f720:	f01a ff59 	bl	9002a5d6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f724:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000f726:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f72a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000f72c:	d006      	beq.n	9000f73c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f72e:	f108 0301 	add.w	r3, r8, #1
9000f732:	b25b      	sxtb	r3, r3
9000f734:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000f738:	2001      	movs	r0, #1
9000f73a:	e7cb      	b.n	9000f6d4 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f73c:	6923      	ldr	r3, [r4, #16]
9000f73e:	2b00      	cmp	r3, #0
9000f740:	d0fa      	beq.n	9000f738 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f742:	f104 0010 	add.w	r0, r4, #16
9000f746:	f000 feb3 	bl	900104b0 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000f74a:	2e00      	cmp	r6, #0
9000f74c:	d0f4      	beq.n	9000f738 <xQueueReceiveFromISR+0x90>
9000f74e:	2800      	cmp	r0, #0
9000f750:	d0f2      	beq.n	9000f738 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f752:	2301      	movs	r3, #1
9000f754:	6033      	str	r3, [r6, #0]
9000f756:	e7ef      	b.n	9000f738 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f758:	6821      	ldr	r1, [r4, #0]
9000f75a:	60e1      	str	r1, [r4, #12]
9000f75c:	e7df      	b.n	9000f71e <xQueueReceiveFromISR+0x76>
9000f75e:	bf00      	nop

9000f760 <vQueueDelete>:
	configASSERT( pxQueue );
9000f760:	b1e0      	cbz	r0, 9000f79c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000f762:	4b21      	ldr	r3, [pc, #132]	@ (9000f7e8 <vQueueDelete+0x88>)
9000f764:	685a      	ldr	r2, [r3, #4]
9000f766:	4290      	cmp	r0, r2
9000f768:	d02b      	beq.n	9000f7c2 <vQueueDelete+0x62>
9000f76a:	68da      	ldr	r2, [r3, #12]
9000f76c:	4290      	cmp	r0, r2
9000f76e:	d02a      	beq.n	9000f7c6 <vQueueDelete+0x66>
9000f770:	695a      	ldr	r2, [r3, #20]
9000f772:	4290      	cmp	r0, r2
9000f774:	d029      	beq.n	9000f7ca <vQueueDelete+0x6a>
9000f776:	69da      	ldr	r2, [r3, #28]
9000f778:	4290      	cmp	r0, r2
9000f77a:	d028      	beq.n	9000f7ce <vQueueDelete+0x6e>
9000f77c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000f77e:	4290      	cmp	r0, r2
9000f780:	d027      	beq.n	9000f7d2 <vQueueDelete+0x72>
9000f782:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000f784:	4290      	cmp	r0, r2
9000f786:	d014      	beq.n	9000f7b2 <vQueueDelete+0x52>
9000f788:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000f78a:	4290      	cmp	r0, r2
9000f78c:	d023      	beq.n	9000f7d6 <vQueueDelete+0x76>
9000f78e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000f790:	4290      	cmp	r0, r2
9000f792:	d022      	beq.n	9000f7da <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000f794:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000f798:	b14b      	cbz	r3, 9000f7ae <vQueueDelete+0x4e>
}
9000f79a:	4770      	bx	lr
9000f79c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7a0:	f383 8811 	msr	BASEPRI, r3
9000f7a4:	f3bf 8f6f 	isb	sy
9000f7a8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f7ac:	e7fe      	b.n	9000f7ac <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000f7ae:	f7fe be23 	b.w	9000e3f8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f7b2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000f7b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000f7b8:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000f7e0 <vQueueDelete+0x80>
9000f7bc:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000f7c0:	e7e8      	b.n	9000f794 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f7c2:	2200      	movs	r2, #0
9000f7c4:	e7f6      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7c6:	2201      	movs	r2, #1
9000f7c8:	e7f4      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7ca:	2202      	movs	r2, #2
9000f7cc:	e7f2      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7ce:	2203      	movs	r2, #3
9000f7d0:	e7f0      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7d2:	2204      	movs	r2, #4
9000f7d4:	e7ee      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7d6:	2206      	movs	r2, #6
9000f7d8:	e7ec      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7da:	2207      	movs	r2, #7
9000f7dc:	e7ea      	b.n	9000f7b4 <vQueueDelete+0x54>
9000f7de:	bf00      	nop
	...
9000f7e8:	240211d0 	.word	0x240211d0

9000f7ec <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000f7ec:	4b12      	ldr	r3, [pc, #72]	@ (9000f838 <vQueueAddToRegistry+0x4c>)
9000f7ee:	681a      	ldr	r2, [r3, #0]
9000f7f0:	b17a      	cbz	r2, 9000f812 <vQueueAddToRegistry+0x26>
9000f7f2:	689a      	ldr	r2, [r3, #8]
9000f7f4:	b162      	cbz	r2, 9000f810 <vQueueAddToRegistry+0x24>
9000f7f6:	691a      	ldr	r2, [r3, #16]
9000f7f8:	b192      	cbz	r2, 9000f820 <vQueueAddToRegistry+0x34>
9000f7fa:	699a      	ldr	r2, [r3, #24]
9000f7fc:	b192      	cbz	r2, 9000f824 <vQueueAddToRegistry+0x38>
9000f7fe:	6a1a      	ldr	r2, [r3, #32]
9000f800:	b192      	cbz	r2, 9000f828 <vQueueAddToRegistry+0x3c>
9000f802:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000f804:	b192      	cbz	r2, 9000f82c <vQueueAddToRegistry+0x40>
9000f806:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000f808:	b192      	cbz	r2, 9000f830 <vQueueAddToRegistry+0x44>
9000f80a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000f80c:	b192      	cbz	r2, 9000f834 <vQueueAddToRegistry+0x48>
	}
9000f80e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f810:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f812:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000f816:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f81a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000f81e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f820:	2202      	movs	r2, #2
9000f822:	e7f6      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f824:	2203      	movs	r2, #3
9000f826:	e7f4      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f828:	2204      	movs	r2, #4
9000f82a:	e7f2      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f82c:	2205      	movs	r2, #5
9000f82e:	e7f0      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f830:	2206      	movs	r2, #6
9000f832:	e7ee      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f834:	2207      	movs	r2, #7
9000f836:	e7ec      	b.n	9000f812 <vQueueAddToRegistry+0x26>
9000f838:	240211d0 	.word	0x240211d0

9000f83c <vQueueUnregisterQueue>:
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000f83c:	4b17      	ldr	r3, [pc, #92]	@ (9000f89c <vQueueUnregisterQueue+0x60>)
9000f83e:	685a      	ldr	r2, [r3, #4]
9000f840:	4290      	cmp	r0, r2
9000f842:	d015      	beq.n	9000f870 <vQueueUnregisterQueue+0x34>
9000f844:	68da      	ldr	r2, [r3, #12]
9000f846:	4290      	cmp	r0, r2
9000f848:	d01a      	beq.n	9000f880 <vQueueUnregisterQueue+0x44>
9000f84a:	695a      	ldr	r2, [r3, #20]
9000f84c:	4290      	cmp	r0, r2
9000f84e:	d019      	beq.n	9000f884 <vQueueUnregisterQueue+0x48>
9000f850:	69da      	ldr	r2, [r3, #28]
9000f852:	4290      	cmp	r0, r2
9000f854:	d018      	beq.n	9000f888 <vQueueUnregisterQueue+0x4c>
9000f856:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000f858:	4290      	cmp	r0, r2
9000f85a:	d017      	beq.n	9000f88c <vQueueUnregisterQueue+0x50>
9000f85c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000f85e:	4290      	cmp	r0, r2
9000f860:	d016      	beq.n	9000f890 <vQueueUnregisterQueue+0x54>
9000f862:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000f864:	4290      	cmp	r0, r2
9000f866:	d015      	beq.n	9000f894 <vQueueUnregisterQueue+0x58>
9000f868:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000f86a:	4282      	cmp	r2, r0
9000f86c:	d014      	beq.n	9000f898 <vQueueUnregisterQueue+0x5c>
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9000f86e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f870:	2200      	movs	r2, #0
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000f872:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000f876:	2000      	movs	r0, #0
9000f878:	2100      	movs	r1, #0
9000f87a:	e9c3 0100 	strd	r0, r1, [r3]
	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9000f87e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f880:	2201      	movs	r2, #1
9000f882:	e7f6      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f884:	2202      	movs	r2, #2
9000f886:	e7f4      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f888:	2203      	movs	r2, #3
9000f88a:	e7f2      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f88c:	2204      	movs	r2, #4
9000f88e:	e7f0      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f890:	2205      	movs	r2, #5
9000f892:	e7ee      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f894:	2206      	movs	r2, #6
9000f896:	e7ec      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f898:	2207      	movs	r2, #7
9000f89a:	e7ea      	b.n	9000f872 <vQueueUnregisterQueue+0x36>
9000f89c:	240211d0 	.word	0x240211d0

9000f8a0 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000f8a0:	b570      	push	{r4, r5, r6, lr}
9000f8a2:	4605      	mov	r5, r0
9000f8a4:	460e      	mov	r6, r1
9000f8a6:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000f8a8:	f7fe fec4 	bl	9000e634 <vPortEnterCritical>
9000f8ac:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f8b0:	2bff      	cmp	r3, #255	@ 0xff
9000f8b2:	d102      	bne.n	9000f8ba <vQueueWaitForMessageRestricted+0x1a>
9000f8b4:	2300      	movs	r3, #0
9000f8b6:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000f8ba:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f8be:	2bff      	cmp	r3, #255	@ 0xff
9000f8c0:	d102      	bne.n	9000f8c8 <vQueueWaitForMessageRestricted+0x28>
9000f8c2:	2300      	movs	r3, #0
9000f8c4:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000f8c8:	f7fe fed6 	bl	9000e678 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000f8cc:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000f8ce:	2b00      	cmp	r3, #0
9000f8d0:	d043      	beq.n	9000f95a <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000f8d2:	f7fe feaf 	bl	9000e634 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f8d6:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f8da:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f8dc:	2c00      	cmp	r4, #0
9000f8de:	dd14      	ble.n	9000f90a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f8e0:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000f8e4:	e003      	b.n	9000f8ee <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000f8e6:	1e63      	subs	r3, r4, #1
9000f8e8:	b2da      	uxtb	r2, r3
9000f8ea:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f8ec:	b16a      	cbz	r2, 9000f90a <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f8ee:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f8f0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f8f2:	b153      	cbz	r3, 9000f90a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f8f4:	f000 fddc 	bl	900104b0 <xTaskRemoveFromEventList>
9000f8f8:	2800      	cmp	r0, #0
9000f8fa:	d0f4      	beq.n	9000f8e6 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000f8fc:	f000 fe6c 	bl	900105d8 <vTaskMissedYield>
			--cTxLock;
9000f900:	1e63      	subs	r3, r4, #1
9000f902:	b2da      	uxtb	r2, r3
9000f904:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f906:	2a00      	cmp	r2, #0
9000f908:	d1f1      	bne.n	9000f8ee <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f90a:	23ff      	movs	r3, #255	@ 0xff
9000f90c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f910:	f7fe feb2 	bl	9000e678 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f914:	f7fe fe8e 	bl	9000e634 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f918:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f91c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f91e:	2c00      	cmp	r4, #0
9000f920:	dd14      	ble.n	9000f94c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f922:	f105 0610 	add.w	r6, r5, #16
9000f926:	e003      	b.n	9000f930 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000f928:	1e63      	subs	r3, r4, #1
9000f92a:	b2da      	uxtb	r2, r3
9000f92c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f92e:	b16a      	cbz	r2, 9000f94c <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f930:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f932:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f934:	b153      	cbz	r3, 9000f94c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f936:	f000 fdbb 	bl	900104b0 <xTaskRemoveFromEventList>
9000f93a:	2800      	cmp	r0, #0
9000f93c:	d0f4      	beq.n	9000f928 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000f93e:	f000 fe4b 	bl	900105d8 <vTaskMissedYield>
				--cRxLock;
9000f942:	1e63      	subs	r3, r4, #1
9000f944:	b2da      	uxtb	r2, r3
9000f946:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f948:	2a00      	cmp	r2, #0
9000f94a:	d1f1      	bne.n	9000f930 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000f94c:	23ff      	movs	r3, #255	@ 0xff
9000f94e:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000f952:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000f956:	f7fe be8f 	b.w	9000e678 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000f95a:	4622      	mov	r2, r4
9000f95c:	4631      	mov	r1, r6
9000f95e:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000f962:	f000 fd5b 	bl	9001041c <vTaskPlaceOnEventListRestricted>
9000f966:	e7b4      	b.n	9000f8d2 <vQueueWaitForMessageRestricted+0x32>

9000f968 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000f968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f96c:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000f96e:	f7fe fe61 	bl	9000e634 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000f972:	4a33      	ldr	r2, [pc, #204]	@ (9000fa40 <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
9000f974:	4e33      	ldr	r6, [pc, #204]	@ (9000fa44 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
9000f976:	6813      	ldr	r3, [r2, #0]
9000f978:	3301      	adds	r3, #1
9000f97a:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000f97c:	6833      	ldr	r3, [r6, #0]
9000f97e:	2b00      	cmp	r3, #0
9000f980:	d031      	beq.n	9000f9e6 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000f982:	4c31      	ldr	r4, [pc, #196]	@ (9000fa48 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f984:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000f986:	6823      	ldr	r3, [r4, #0]
9000f988:	b333      	cbz	r3, 9000f9d8 <prvAddNewTaskToReadyList+0x70>
9000f98a:	4f30      	ldr	r7, [pc, #192]	@ (9000fa4c <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000f98c:	4a30      	ldr	r2, [pc, #192]	@ (9000fa50 <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000f98e:	4931      	ldr	r1, [pc, #196]	@ (9000fa54 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
9000f990:	6813      	ldr	r3, [r2, #0]
9000f992:	3301      	adds	r3, #1
9000f994:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000f996:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000f998:	680b      	ldr	r3, [r1, #0]
9000f99a:	4283      	cmp	r3, r0
9000f99c:	d200      	bcs.n	9000f9a0 <prvAddNewTaskToReadyList+0x38>
9000f99e:	6008      	str	r0, [r1, #0]
9000f9a0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f9a4:	1d29      	adds	r1, r5, #4
9000f9a6:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000f9aa:	f7fe fd9f 	bl	9000e4ec <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000f9ae:	f7fe fe63 	bl	9000e678 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000f9b2:	6823      	ldr	r3, [r4, #0]
9000f9b4:	b173      	cbz	r3, 9000f9d4 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000f9b6:	6832      	ldr	r2, [r6, #0]
9000f9b8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000f9ba:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f9bc:	429a      	cmp	r2, r3
9000f9be:	d209      	bcs.n	9000f9d4 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000f9c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f9c4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f9c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f9cc:	f3bf 8f4f 	dsb	sy
9000f9d0:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000f9d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f9d8:	6833      	ldr	r3, [r6, #0]
9000f9da:	4f1c      	ldr	r7, [pc, #112]	@ (9000fa4c <prvAddNewTaskToReadyList+0xe4>)
9000f9dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f9de:	4283      	cmp	r3, r0
9000f9e0:	d8d4      	bhi.n	9000f98c <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000f9e2:	6035      	str	r5, [r6, #0]
9000f9e4:	e7d2      	b.n	9000f98c <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000f9e6:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000f9e8:	6813      	ldr	r3, [r2, #0]
9000f9ea:	2b01      	cmp	r3, #1
9000f9ec:	d003      	beq.n	9000f9f6 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f9ee:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000f9f0:	4f16      	ldr	r7, [pc, #88]	@ (9000fa4c <prvAddNewTaskToReadyList+0xe4>)
9000f9f2:	4c15      	ldr	r4, [pc, #84]	@ (9000fa48 <prvAddNewTaskToReadyList+0xe0>)
9000f9f4:	e7ca      	b.n	9000f98c <prvAddNewTaskToReadyList+0x24>
9000f9f6:	4f15      	ldr	r7, [pc, #84]	@ (9000fa4c <prvAddNewTaskToReadyList+0xe4>)
9000f9f8:	463c      	mov	r4, r7
9000f9fa:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f9fe:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fa00:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fa02:	f7fe fd63 	bl	9000e4cc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fa06:	45a0      	cmp	r8, r4
9000fa08:	d1f9      	bne.n	9000f9fe <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000fa0a:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000fa70 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000fa0e:	4c12      	ldr	r4, [pc, #72]	@ (9000fa58 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9000fa10:	4640      	mov	r0, r8
9000fa12:	f7fe fd5b 	bl	9000e4cc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000fa16:	4620      	mov	r0, r4
9000fa18:	f7fe fd58 	bl	9000e4cc <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000fa1c:	480f      	ldr	r0, [pc, #60]	@ (9000fa5c <prvAddNewTaskToReadyList+0xf4>)
9000fa1e:	f7fe fd55 	bl	9000e4cc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000fa22:	480f      	ldr	r0, [pc, #60]	@ (9000fa60 <prvAddNewTaskToReadyList+0xf8>)
9000fa24:	f7fe fd52 	bl	9000e4cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000fa28:	480e      	ldr	r0, [pc, #56]	@ (9000fa64 <prvAddNewTaskToReadyList+0xfc>)
9000fa2a:	f7fe fd4f 	bl	9000e4cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000fa2e:	4b0e      	ldr	r3, [pc, #56]	@ (9000fa68 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000fa30:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000fa32:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000fa36:	4b0d      	ldr	r3, [pc, #52]	@ (9000fa6c <prvAddNewTaskToReadyList+0x104>)
9000fa38:	601c      	str	r4, [r3, #0]
9000fa3a:	4c03      	ldr	r4, [pc, #12]	@ (9000fa48 <prvAddNewTaskToReadyList+0xe0>)
}
9000fa3c:	e7a6      	b.n	9000f98c <prvAddNewTaskToReadyList+0x24>
9000fa3e:	bf00      	nop
9000fa40:	24021234 	.word	0x24021234
9000fa44:	24021708 	.word	0x24021708
9000fa48:	24021228 	.word	0x24021228
9000fa4c:	240212a8 	.word	0x240212a8
9000fa50:	24021218 	.word	0x24021218
9000fa54:	2402122c 	.word	0x2402122c
9000fa58:	24021280 	.word	0x24021280
9000fa5c:	24021264 	.word	0x24021264
9000fa60:	24021250 	.word	0x24021250
9000fa64:	24021238 	.word	0x24021238
9000fa68:	2402127c 	.word	0x2402127c
9000fa6c:	24021278 	.word	0x24021278
9000fa70:	24021294 	.word	0x24021294

9000fa74 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fa74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fa78:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fa7a:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fa7c:	4607      	mov	r7, r0
9000fa7e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fa80:	4632      	mov	r2, r6
9000fa82:	21a5      	movs	r1, #165	@ 0xa5
9000fa84:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fa86:	4698      	mov	r8, r3
9000fa88:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fa8c:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fa8e:	f01a fc63 	bl	9002a358 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fa92:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000fa94:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fa96:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000fa9a:	2d00      	cmp	r5, #0
9000fa9c:	d074      	beq.n	9000fb88 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fa9e:	782b      	ldrb	r3, [r5, #0]
9000faa0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000faa4:	2b00      	cmp	r3, #0
9000faa6:	d036      	beq.n	9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000faa8:	786b      	ldrb	r3, [r5, #1]
9000faaa:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000faae:	b393      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fab0:	78ab      	ldrb	r3, [r5, #2]
9000fab2:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fab6:	b373      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fab8:	78eb      	ldrb	r3, [r5, #3]
9000faba:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fabe:	b353      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fac0:	792b      	ldrb	r3, [r5, #4]
9000fac2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fac6:	b333      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fac8:	796b      	ldrb	r3, [r5, #5]
9000faca:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000face:	b313      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fad0:	79ab      	ldrb	r3, [r5, #6]
9000fad2:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000fad6:	b1f3      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fad8:	79eb      	ldrb	r3, [r5, #7]
9000fada:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000fade:	b1d3      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fae0:	7a2b      	ldrb	r3, [r5, #8]
9000fae2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000fae6:	b1b3      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fae8:	7a6b      	ldrb	r3, [r5, #9]
9000faea:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000faee:	b193      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000faf0:	7aab      	ldrb	r3, [r5, #10]
9000faf2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000faf6:	b173      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000faf8:	7aeb      	ldrb	r3, [r5, #11]
9000fafa:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fafe:	b153      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb00:	7b2b      	ldrb	r3, [r5, #12]
9000fb02:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000fb06:	b133      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb08:	7b6b      	ldrb	r3, [r5, #13]
9000fb0a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fb0e:	b113      	cbz	r3, 9000fb16 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fb10:	7bab      	ldrb	r3, [r5, #14]
9000fb12:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fb16:	2300      	movs	r3, #0
9000fb18:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fb1c:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000fb1e:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fb22:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fb24:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000fb26:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fb2a:	bf28      	it	cs
9000fb2c:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000fb2e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000fb30:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fb32:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fb36:	f7fe fcd5 	bl	9000e4e4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000fb3a:	f104 0018 	add.w	r0, r4, #24
9000fb3e:	f7fe fcd1 	bl	9000e4e4 <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fb42:	4651      	mov	r1, sl
9000fb44:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fb46:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
9000fb48:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fb4c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000fb50:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000fb52:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000fb54:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000fb58:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fb5c:	f01a fbfc 	bl	9002a358 <memset>
9000fb60:	4b0b      	ldr	r3, [pc, #44]	@ (9000fb90 <prvInitialiseNewTask.constprop.0+0x11c>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fb62:	4642      	mov	r2, r8
9000fb64:	4639      	mov	r1, r7
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fb66:	f103 0568 	add.w	r5, r3, #104	@ 0x68
9000fb6a:	65e3      	str	r3, [r4, #92]	@ 0x5c
9000fb6c:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fb6e:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fb70:	6625      	str	r5, [r4, #96]	@ 0x60
9000fb72:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fb74:	f7fe fd32 	bl	9000e5dc <pxPortInitialiseStack>
9000fb78:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000fb7a:	f1b9 0f00 	cmp.w	r9, #0
9000fb7e:	d001      	beq.n	9000fb84 <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000fb80:	f8c9 4000 	str.w	r4, [r9]
}
9000fb84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000fb88:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000fb8c:	e7c6      	b.n	9000fb1c <prvInitialiseNewTask.constprop.0+0xa8>
9000fb8e:	bf00      	nop
9000fb90:	240222a8 	.word	0x240222a8

9000fb94 <prvIdleTask>:
{
9000fb94:	b580      	push	{r7, lr}
9000fb96:	4d24      	ldr	r5, [pc, #144]	@ (9000fc28 <prvIdleTask+0x94>)
9000fb98:	4f24      	ldr	r7, [pc, #144]	@ (9000fc2c <prvIdleTask+0x98>)
9000fb9a:	4e25      	ldr	r6, [pc, #148]	@ (9000fc30 <prvIdleTask+0x9c>)
9000fb9c:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 9000fc34 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fba0:	682b      	ldr	r3, [r5, #0]
9000fba2:	b35b      	cbz	r3, 9000fbfc <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
9000fba4:	f7fe fd46 	bl	9000e634 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fba8:	68fb      	ldr	r3, [r7, #12]
9000fbaa:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fbac:	1d20      	adds	r0, r4, #4
9000fbae:	f7fe fcc3 	bl	9000e538 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000fbb2:	6833      	ldr	r3, [r6, #0]
9000fbb4:	3b01      	subs	r3, #1
9000fbb6:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
9000fbb8:	682b      	ldr	r3, [r5, #0]
9000fbba:	3b01      	subs	r3, #1
9000fbbc:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
9000fbbe:	f7fe fd5b 	bl	9000e678 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9000fbc2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9000fbc6:	f01a fc21 	bl	9002a40c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000fbca:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
9000fbce:	b163      	cbz	r3, 9000fbea <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000fbd0:	2b01      	cmp	r3, #1
9000fbd2:	d024      	beq.n	9000fc1e <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000fbd4:	2b02      	cmp	r3, #2
9000fbd6:	d0e3      	beq.n	9000fba0 <prvIdleTask+0xc>
9000fbd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbdc:	f383 8811 	msr	BASEPRI, r3
9000fbe0:	f3bf 8f6f 	isb	sy
9000fbe4:	f3bf 8f4f 	dsb	sy
9000fbe8:	e7fe      	b.n	9000fbe8 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
9000fbea:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000fbec:	f7fe fc04 	bl	9000e3f8 <vPortFree>
				vPortFree( pxTCB );
9000fbf0:	4620      	mov	r0, r4
9000fbf2:	f7fe fc01 	bl	9000e3f8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fbf6:	682b      	ldr	r3, [r5, #0]
9000fbf8:	2b00      	cmp	r3, #0
9000fbfa:	d1d3      	bne.n	9000fba4 <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000fbfc:	f8d8 3000 	ldr.w	r3, [r8]
9000fc00:	2b01      	cmp	r3, #1
9000fc02:	d909      	bls.n	9000fc18 <prvIdleTask+0x84>
				taskYIELD();
9000fc04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fc08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fc0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fc10:	f3bf 8f4f 	dsb	sy
9000fc14:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000fc18:	f7f3 ff10 	bl	90003a3c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000fc1c:	e7c0      	b.n	9000fba0 <prvIdleTask+0xc>
				vPortFree( pxTCB );
9000fc1e:	4620      	mov	r0, r4
9000fc20:	f7fe fbea 	bl	9000e3f8 <vPortFree>
9000fc24:	e7bc      	b.n	9000fba0 <prvIdleTask+0xc>
9000fc26:	bf00      	nop
9000fc28:	2402124c 	.word	0x2402124c
9000fc2c:	24021250 	.word	0x24021250
9000fc30:	24021234 	.word	0x24021234
9000fc34:	240212a8 	.word	0x240212a8

9000fc38 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fc38:	4b49      	ldr	r3, [pc, #292]	@ (9000fd60 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000fc3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fc3e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000fc40:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fc42:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000fc44:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000fc46:	2e00      	cmp	r6, #0
9000fc48:	d03e      	beq.n	9000fcc8 <xTaskIncrementTick.part.0+0x90>
9000fc4a:	4b46      	ldr	r3, [pc, #280]	@ (9000fd64 <xTaskIncrementTick.part.0+0x12c>)
9000fc4c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000fc4e:	681b      	ldr	r3, [r3, #0]
9000fc50:	429e      	cmp	r6, r3
9000fc52:	d346      	bcc.n	9000fce2 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc54:	4f44      	ldr	r7, [pc, #272]	@ (9000fd68 <xTaskIncrementTick.part.0+0x130>)
9000fc56:	683b      	ldr	r3, [r7, #0]
9000fc58:	681d      	ldr	r5, [r3, #0]
9000fc5a:	2d00      	cmp	r5, #0
9000fc5c:	d077      	beq.n	9000fd4e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000fc5e:	2500      	movs	r5, #0
9000fc60:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000fd78 <xTaskIncrementTick.part.0+0x140>
9000fc64:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000fd7c <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000fc68:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000fd80 <xTaskIncrementTick.part.0+0x148>
9000fc6c:	e020      	b.n	9000fcb0 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fc6e:	f7fe fc63 	bl	9000e538 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fc72:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fc74:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fc78:	b10b      	cbz	r3, 9000fc7e <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fc7a:	f7fe fc5d 	bl	9000e538 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fc7e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000fc80:	4659      	mov	r1, fp
9000fc82:	f8d8 2000 	ldr.w	r2, [r8]
9000fc86:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fc8a:	4293      	cmp	r3, r2
9000fc8c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fc90:	d901      	bls.n	9000fc96 <xTaskIncrementTick.part.0+0x5e>
9000fc92:	f8c8 3000 	str.w	r3, [r8]
9000fc96:	f7fe fc29 	bl	9000e4ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fc9a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc9e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fca0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000fca2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fca4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000fca6:	4291      	cmp	r1, r2
9000fca8:	bf28      	it	cs
9000fcaa:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fcac:	2b00      	cmp	r3, #0
9000fcae:	d052      	beq.n	9000fd56 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fcb0:	683b      	ldr	r3, [r7, #0]
9000fcb2:	68db      	ldr	r3, [r3, #12]
9000fcb4:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000fcb6:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fcb8:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000fcbc:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fcbe:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000fcc0:	d2d5      	bcs.n	9000fc6e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000fcc2:	9a01      	ldr	r2, [sp, #4]
9000fcc4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000fcc6:	e011      	b.n	9000fcec <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000fcc8:	4b27      	ldr	r3, [pc, #156]	@ (9000fd68 <xTaskIncrementTick.part.0+0x130>)
9000fcca:	681a      	ldr	r2, [r3, #0]
9000fccc:	6812      	ldr	r2, [r2, #0]
9000fcce:	b30a      	cbz	r2, 9000fd14 <xTaskIncrementTick.part.0+0xdc>
9000fcd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcd4:	f383 8811 	msr	BASEPRI, r3
9000fcd8:	f3bf 8f6f 	isb	sy
9000fcdc:	f3bf 8f4f 	dsb	sy
9000fce0:	e7fe      	b.n	9000fce0 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000fce2:	2500      	movs	r5, #0
9000fce4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000fd78 <xTaskIncrementTick.part.0+0x140>
9000fce8:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000fd7c <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fcec:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000fcf0:	491e      	ldr	r1, [pc, #120]	@ (9000fd6c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fcf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fcf4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000fcf8:	009b      	lsls	r3, r3, #2
9000fcfa:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000fcfe:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000fd00:	2a02      	cmp	r2, #2
9000fd02:	bf28      	it	cs
9000fd04:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000fd06:	2b00      	cmp	r3, #0
}
9000fd08:	bf0c      	ite	eq
9000fd0a:	4628      	moveq	r0, r5
9000fd0c:	2001      	movne	r0, #1
9000fd0e:	b003      	add	sp, #12
9000fd10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000fd14:	4a16      	ldr	r2, [pc, #88]	@ (9000fd70 <xTaskIncrementTick.part.0+0x138>)
9000fd16:	6818      	ldr	r0, [r3, #0]
9000fd18:	6811      	ldr	r1, [r2, #0]
9000fd1a:	6019      	str	r1, [r3, #0]
9000fd1c:	4915      	ldr	r1, [pc, #84]	@ (9000fd74 <xTaskIncrementTick.part.0+0x13c>)
9000fd1e:	6010      	str	r0, [r2, #0]
9000fd20:	680a      	ldr	r2, [r1, #0]
9000fd22:	3201      	adds	r2, #1
9000fd24:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fd26:	681a      	ldr	r2, [r3, #0]
9000fd28:	6812      	ldr	r2, [r2, #0]
9000fd2a:	b93a      	cbnz	r2, 9000fd3c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000fd2c:	4b0d      	ldr	r3, [pc, #52]	@ (9000fd64 <xTaskIncrementTick.part.0+0x12c>)
9000fd2e:	461a      	mov	r2, r3
9000fd30:	9301      	str	r3, [sp, #4]
9000fd32:	f04f 33ff 	mov.w	r3, #4294967295
9000fd36:	6013      	str	r3, [r2, #0]
9000fd38:	4613      	mov	r3, r2
9000fd3a:	e788      	b.n	9000fc4e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fd3c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fd3e:	4a09      	ldr	r2, [pc, #36]	@ (9000fd64 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fd40:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fd42:	9201      	str	r2, [sp, #4]
9000fd44:	68db      	ldr	r3, [r3, #12]
9000fd46:	685b      	ldr	r3, [r3, #4]
9000fd48:	6013      	str	r3, [r2, #0]
9000fd4a:	4613      	mov	r3, r2
	}
}
9000fd4c:	e77f      	b.n	9000fc4e <xTaskIncrementTick.part.0+0x16>
9000fd4e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000fd78 <xTaskIncrementTick.part.0+0x140>
9000fd52:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000fd7c <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fd56:	f04f 33ff 	mov.w	r3, #4294967295
9000fd5a:	9a01      	ldr	r2, [sp, #4]
9000fd5c:	6013      	str	r3, [r2, #0]
					break;
9000fd5e:	e7c5      	b.n	9000fcec <xTaskIncrementTick.part.0+0xb4>
9000fd60:	24021230 	.word	0x24021230
9000fd64:	24021214 	.word	0x24021214
9000fd68:	2402127c 	.word	0x2402127c
9000fd6c:	24021220 	.word	0x24021220
9000fd70:	24021278 	.word	0x24021278
9000fd74:	2402121c 	.word	0x2402121c
9000fd78:	240212a8 	.word	0x240212a8
9000fd7c:	24021708 	.word	0x24021708
9000fd80:	2402122c 	.word	0x2402122c

9000fd84 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000fd84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000fd88:	4d42      	ldr	r5, [pc, #264]	@ (9000fe94 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
9000fd8a:	f7fe fc53 	bl	9000e634 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000fd8e:	682b      	ldr	r3, [r5, #0]
9000fd90:	3b01      	subs	r3, #1
9000fd92:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fd94:	682b      	ldr	r3, [r5, #0]
9000fd96:	2b00      	cmp	r3, #0
9000fd98:	d165      	bne.n	9000fe66 <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000fd9a:	4b3f      	ldr	r3, [pc, #252]	@ (9000fe98 <xTaskResumeAll.part.0+0x114>)
9000fd9c:	681b      	ldr	r3, [r3, #0]
9000fd9e:	2b00      	cmp	r3, #0
9000fda0:	d061      	beq.n	9000fe66 <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fda2:	4e3e      	ldr	r6, [pc, #248]	@ (9000fe9c <xTaskResumeAll.part.0+0x118>)
9000fda4:	6833      	ldr	r3, [r6, #0]
9000fda6:	2b00      	cmp	r3, #0
9000fda8:	d070      	beq.n	9000fe8c <xTaskResumeAll.part.0+0x108>
9000fdaa:	4f3d      	ldr	r7, [pc, #244]	@ (9000fea0 <xTaskResumeAll.part.0+0x11c>)
9000fdac:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 9000feb0 <xTaskResumeAll.part.0+0x12c>
9000fdb0:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 9000feb4 <xTaskResumeAll.part.0+0x130>
9000fdb4:	f8df a100 	ldr.w	sl, [pc, #256]	@ 9000feb8 <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fdb8:	68f3      	ldr	r3, [r6, #12]
9000fdba:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fdbc:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fdc0:	f104 0018 	add.w	r0, r4, #24
9000fdc4:	f7fe fbb8 	bl	9000e538 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fdc8:	4658      	mov	r0, fp
9000fdca:	f7fe fbb5 	bl	9000e538 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fdce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000fdd0:	683a      	ldr	r2, [r7, #0]
9000fdd2:	4659      	mov	r1, fp
9000fdd4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fdd8:	4293      	cmp	r3, r2
9000fdda:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fdde:	d900      	bls.n	9000fde2 <xTaskResumeAll.part.0+0x5e>
9000fde0:	603b      	str	r3, [r7, #0]
9000fde2:	f7fe fb83 	bl	9000e4ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fde6:	f8d8 3000 	ldr.w	r3, [r8]
9000fdea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000fdec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fdee:	429a      	cmp	r2, r3
9000fdf0:	d33f      	bcc.n	9000fe72 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
9000fdf2:	2301      	movs	r3, #1
9000fdf4:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fdf8:	6833      	ldr	r3, [r6, #0]
9000fdfa:	2b00      	cmp	r3, #0
9000fdfc:	d1dc      	bne.n	9000fdb8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fdfe:	4b29      	ldr	r3, [pc, #164]	@ (9000fea4 <xTaskResumeAll.part.0+0x120>)
9000fe00:	681a      	ldr	r2, [r3, #0]
9000fe02:	6812      	ldr	r2, [r2, #0]
9000fe04:	2a00      	cmp	r2, #0
9000fe06:	d03c      	beq.n	9000fe82 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fe08:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fe0a:	4b27      	ldr	r3, [pc, #156]	@ (9000fea8 <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fe0c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fe0e:	68d2      	ldr	r2, [r2, #12]
9000fe10:	6852      	ldr	r2, [r2, #4]
9000fe12:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000fe14:	4e25      	ldr	r6, [pc, #148]	@ (9000feac <xTaskResumeAll.part.0+0x128>)
9000fe16:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000fe18:	b194      	cbz	r4, 9000fe40 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
9000fe1a:	2701      	movs	r7, #1
9000fe1c:	e006      	b.n	9000fe2c <xTaskResumeAll.part.0+0xa8>
9000fe1e:	f7ff ff0b 	bl	9000fc38 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000fe22:	b108      	cbz	r0, 9000fe28 <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
9000fe24:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fe28:	3c01      	subs	r4, #1
9000fe2a:	d008      	beq.n	9000fe3e <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fe2c:	682b      	ldr	r3, [r5, #0]
9000fe2e:	2b00      	cmp	r3, #0
9000fe30:	d0f5      	beq.n	9000fe1e <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
9000fe32:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fe34:	3c01      	subs	r4, #1
		++xPendedTicks;
9000fe36:	f103 0301 	add.w	r3, r3, #1
9000fe3a:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fe3c:	d1f6      	bne.n	9000fe2c <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
9000fe3e:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000fe40:	f8da 3000 	ldr.w	r3, [sl]
9000fe44:	b17b      	cbz	r3, 9000fe66 <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
9000fe46:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fe4a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fe4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fe52:	f3bf 8f4f 	dsb	sy
9000fe56:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000fe5a:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000fe5c:	f7fe fc0c 	bl	9000e678 <vPortExitCritical>
}
9000fe60:	4620      	mov	r0, r4
9000fe62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000fe66:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000fe68:	f7fe fc06 	bl	9000e678 <vPortExitCritical>
}
9000fe6c:	4620      	mov	r0, r4
9000fe6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fe72:	6833      	ldr	r3, [r6, #0]
9000fe74:	2b00      	cmp	r3, #0
9000fe76:	d19f      	bne.n	9000fdb8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fe78:	4b0a      	ldr	r3, [pc, #40]	@ (9000fea4 <xTaskResumeAll.part.0+0x120>)
9000fe7a:	681a      	ldr	r2, [r3, #0]
9000fe7c:	6812      	ldr	r2, [r2, #0]
9000fe7e:	2a00      	cmp	r2, #0
9000fe80:	d1c2      	bne.n	9000fe08 <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
9000fe82:	4b09      	ldr	r3, [pc, #36]	@ (9000fea8 <xTaskResumeAll.part.0+0x124>)
9000fe84:	f04f 32ff 	mov.w	r2, #4294967295
9000fe88:	601a      	str	r2, [r3, #0]
9000fe8a:	e7c3      	b.n	9000fe14 <xTaskResumeAll.part.0+0x90>
9000fe8c:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000feb8 <xTaskResumeAll.part.0+0x134>
9000fe90:	e7c0      	b.n	9000fe14 <xTaskResumeAll.part.0+0x90>
9000fe92:	bf00      	nop
9000fe94:	24021210 	.word	0x24021210
9000fe98:	24021234 	.word	0x24021234
9000fe9c:	24021264 	.word	0x24021264
9000fea0:	2402122c 	.word	0x2402122c
9000fea4:	2402127c 	.word	0x2402127c
9000fea8:	24021214 	.word	0x24021214
9000feac:	24021224 	.word	0x24021224
9000feb0:	240212a8 	.word	0x240212a8
9000feb4:	24021708 	.word	0x24021708
9000feb8:	24021220 	.word	0x24021220

9000febc <xTaskCreateStatic>:
	{
9000febc:	b530      	push	{r4, r5, lr}
9000febe:	b087      	sub	sp, #28
9000fec0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
9000fec2:	b1c4      	cbz	r4, 9000fef6 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
9000fec4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000fec6:	b16d      	cbz	r5, 9000fee4 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
9000fec8:	25ac      	movs	r5, #172	@ 0xac
9000feca:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
9000fecc:	9d05      	ldr	r5, [sp, #20]
9000fece:	2dac      	cmp	r5, #172	@ 0xac
9000fed0:	d01a      	beq.n	9000ff08 <xTaskCreateStatic+0x4c>
9000fed2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fed6:	f383 8811 	msr	BASEPRI, r3
9000feda:	f3bf 8f6f 	isb	sy
9000fede:	f3bf 8f4f 	dsb	sy
9000fee2:	e7fe      	b.n	9000fee2 <xTaskCreateStatic+0x26>
9000fee4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fee8:	f383 8811 	msr	BASEPRI, r3
9000feec:	f3bf 8f6f 	isb	sy
9000fef0:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000fef4:	e7fe      	b.n	9000fef4 <xTaskCreateStatic+0x38>
9000fef6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fefa:	f383 8811 	msr	BASEPRI, r3
9000fefe:	f3bf 8f6f 	isb	sy
9000ff02:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000ff06:	e7fe      	b.n	9000ff06 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ff08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000ff0a:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ff0c:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000ff0e:	9502      	str	r5, [sp, #8]
9000ff10:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9000ff12:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ff14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000ff16:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000ff1a:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000ff1c:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000ff1e:	9401      	str	r4, [sp, #4]
9000ff20:	f7ff fda8 	bl	9000fa74 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000ff24:	980c      	ldr	r0, [sp, #48]	@ 0x30
9000ff26:	f7ff fd1f 	bl	9000f968 <prvAddNewTaskToReadyList>
	}
9000ff2a:	9804      	ldr	r0, [sp, #16]
9000ff2c:	b007      	add	sp, #28
9000ff2e:	bd30      	pop	{r4, r5, pc}

9000ff30 <xTaskCreate>:
	{
9000ff30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ff34:	4607      	mov	r7, r0
9000ff36:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ff38:	0090      	lsls	r0, r2, #2
	{
9000ff3a:	4615      	mov	r5, r2
9000ff3c:	4688      	mov	r8, r1
9000ff3e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ff40:	f7fe f99c 	bl	9000e27c <pvPortMalloc>
			if( pxStack != NULL )
9000ff44:	b1f0      	cbz	r0, 9000ff84 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000ff46:	4604      	mov	r4, r0
9000ff48:	20ac      	movs	r0, #172	@ 0xac
9000ff4a:	f7fe f997 	bl	9000e27c <pvPortMalloc>
				if( pxNewTCB != NULL )
9000ff4e:	4606      	mov	r6, r0
9000ff50:	b1a8      	cbz	r0, 9000ff7e <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
9000ff52:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ff54:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000ff56:	464b      	mov	r3, r9
9000ff58:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ff5a:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000ff5e:	4641      	mov	r1, r8
9000ff60:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9000ff62:	4638      	mov	r0, r7
9000ff64:	9602      	str	r6, [sp, #8]
9000ff66:	9401      	str	r4, [sp, #4]
9000ff68:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9000ff6a:	9400      	str	r4, [sp, #0]
9000ff6c:	f7ff fd82 	bl	9000fa74 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000ff70:	4630      	mov	r0, r6
9000ff72:	f7ff fcf9 	bl	9000f968 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000ff76:	2001      	movs	r0, #1
	}
9000ff78:	b005      	add	sp, #20
9000ff7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000ff7e:	4620      	mov	r0, r4
9000ff80:	f7fe fa3a 	bl	9000e3f8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000ff84:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000ff88:	b005      	add	sp, #20
9000ff8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000ff8e:	bf00      	nop

9000ff90 <vTaskDelete>:
	{
9000ff90:	b570      	push	{r4, r5, r6, lr}
9000ff92:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
9000ff94:	4d38      	ldr	r5, [pc, #224]	@ (90010078 <vTaskDelete+0xe8>)
		taskENTER_CRITICAL();
9000ff96:	f7fe fb4d 	bl	9000e634 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
9000ff9a:	2c00      	cmp	r4, #0
9000ff9c:	d048      	beq.n	90010030 <vTaskDelete+0xa0>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ff9e:	1d26      	adds	r6, r4, #4
9000ffa0:	4630      	mov	r0, r6
9000ffa2:	f7fe fac9 	bl	9000e538 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ffa6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ffa8:	b11b      	cbz	r3, 9000ffb2 <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ffaa:	f104 0018 	add.w	r0, r4, #24
9000ffae:	f7fe fac3 	bl	9000e538 <uxListRemove>
			uxTaskNumber++;
9000ffb2:	4a32      	ldr	r2, [pc, #200]	@ (9001007c <vTaskDelete+0xec>)
9000ffb4:	6813      	ldr	r3, [r2, #0]
9000ffb6:	3301      	adds	r3, #1
9000ffb8:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
9000ffba:	682b      	ldr	r3, [r5, #0]
9000ffbc:	42a3      	cmp	r3, r4
9000ffbe:	d02e      	beq.n	9001001e <vTaskDelete+0x8e>
				--uxCurrentNumberOfTasks;
9000ffc0:	4a2f      	ldr	r2, [pc, #188]	@ (90010080 <vTaskDelete+0xf0>)
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9000ffc2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
				--uxCurrentNumberOfTasks;
9000ffc6:	6813      	ldr	r3, [r2, #0]
9000ffc8:	3b01      	subs	r3, #1
9000ffca:	6013      	str	r3, [r2, #0]
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9000ffcc:	f01a fa1e 	bl	9002a40c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ffd0:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
9000ffd4:	b163      	cbz	r3, 9000fff0 <vTaskDelete+0x60>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ffd6:	2b01      	cmp	r3, #1
9000ffd8:	d03f      	beq.n	9001005a <vTaskDelete+0xca>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ffda:	2b02      	cmp	r3, #2
9000ffdc:	d00e      	beq.n	9000fffc <vTaskDelete+0x6c>
9000ffde:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ffe2:	f383 8811 	msr	BASEPRI, r3
9000ffe6:	f3bf 8f6f 	isb	sy
9000ffea:	f3bf 8f4f 	dsb	sy
9000ffee:	e7fe      	b.n	9000ffee <vTaskDelete+0x5e>
				vPortFree( pxTCB->pxStack );
9000fff0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000fff2:	f7fe fa01 	bl	9000e3f8 <vPortFree>
				vPortFree( pxTCB );
9000fff6:	4620      	mov	r0, r4
9000fff8:	f7fe f9fe 	bl	9000e3f8 <vPortFree>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fffc:	4b21      	ldr	r3, [pc, #132]	@ (90010084 <vTaskDelete+0xf4>)
9000fffe:	681a      	ldr	r2, [r3, #0]
90010000:	6812      	ldr	r2, [r2, #0]
90010002:	b9ba      	cbnz	r2, 90010034 <vTaskDelete+0xa4>
		xNextTaskUnblockTime = portMAX_DELAY;
90010004:	4b20      	ldr	r3, [pc, #128]	@ (90010088 <vTaskDelete+0xf8>)
90010006:	f04f 32ff 	mov.w	r2, #4294967295
9001000a:	601a      	str	r2, [r3, #0]
		taskEXIT_CRITICAL();
9001000c:	f7fe fb34 	bl	9000e678 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
90010010:	4b1e      	ldr	r3, [pc, #120]	@ (9001008c <vTaskDelete+0xfc>)
90010012:	681b      	ldr	r3, [r3, #0]
90010014:	b113      	cbz	r3, 9001001c <vTaskDelete+0x8c>
			if( pxTCB == pxCurrentTCB )
90010016:	682b      	ldr	r3, [r5, #0]
90010018:	42a3      	cmp	r3, r4
9001001a:	d012      	beq.n	90010042 <vTaskDelete+0xb2>
	}
9001001c:	bd70      	pop	{r4, r5, r6, pc}
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
9001001e:	4631      	mov	r1, r6
90010020:	481b      	ldr	r0, [pc, #108]	@ (90010090 <vTaskDelete+0x100>)
90010022:	f7fe fa63 	bl	9000e4ec <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
90010026:	4a1b      	ldr	r2, [pc, #108]	@ (90010094 <vTaskDelete+0x104>)
90010028:	6813      	ldr	r3, [r2, #0]
9001002a:	3301      	adds	r3, #1
9001002c:	6013      	str	r3, [r2, #0]
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
9001002e:	e7ed      	b.n	9001000c <vTaskDelete+0x7c>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010030:	682c      	ldr	r4, [r5, #0]
90010032:	e7b4      	b.n	9000ff9e <vTaskDelete+0xe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010034:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010036:	4b14      	ldr	r3, [pc, #80]	@ (90010088 <vTaskDelete+0xf8>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010038:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001003a:	68d2      	ldr	r2, [r2, #12]
9001003c:	6852      	ldr	r2, [r2, #4]
9001003e:	601a      	str	r2, [r3, #0]
}
90010040:	e7e4      	b.n	9001000c <vTaskDelete+0x7c>
				configASSERT( uxSchedulerSuspended == 0 );
90010042:	4b15      	ldr	r3, [pc, #84]	@ (90010098 <vTaskDelete+0x108>)
90010044:	681b      	ldr	r3, [r3, #0]
90010046:	b163      	cbz	r3, 90010062 <vTaskDelete+0xd2>
90010048:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001004c:	f383 8811 	msr	BASEPRI, r3
90010050:	f3bf 8f6f 	isb	sy
90010054:	f3bf 8f4f 	dsb	sy
90010058:	e7fe      	b.n	90010058 <vTaskDelete+0xc8>
				vPortFree( pxTCB );
9001005a:	4620      	mov	r0, r4
9001005c:	f7fe f9cc 	bl	9000e3f8 <vPortFree>
90010060:	e7cc      	b.n	9000fffc <vTaskDelete+0x6c>
				portYIELD_WITHIN_API();
90010062:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010066:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001006a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001006e:	f3bf 8f4f 	dsb	sy
90010072:	f3bf 8f6f 	isb	sy
	}
90010076:	bd70      	pop	{r4, r5, r6, pc}
90010078:	24021708 	.word	0x24021708
9001007c:	24021218 	.word	0x24021218
90010080:	24021234 	.word	0x24021234
90010084:	2402127c 	.word	0x2402127c
90010088:	24021214 	.word	0x24021214
9001008c:	24021228 	.word	0x24021228
90010090:	24021250 	.word	0x24021250
90010094:	2402124c 	.word	0x2402124c
90010098:	24021210 	.word	0x24021210

9001009c <vTaskDelay>:
	{
9001009c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001009e:	b950      	cbnz	r0, 900100b6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900100a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900100a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900100a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900100ac:	f3bf 8f4f 	dsb	sy
900100b0:	f3bf 8f6f 	isb	sy
	}
900100b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
900100b6:	4d1e      	ldr	r5, [pc, #120]	@ (90010130 <vTaskDelay+0x94>)
900100b8:	682b      	ldr	r3, [r5, #0]
900100ba:	b143      	cbz	r3, 900100ce <vTaskDelay+0x32>
900100bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100c0:	f383 8811 	msr	BASEPRI, r3
900100c4:	f3bf 8f6f 	isb	sy
900100c8:	f3bf 8f4f 	dsb	sy
900100cc:	e7fe      	b.n	900100cc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
900100ce:	682b      	ldr	r3, [r5, #0]
900100d0:	4604      	mov	r4, r0
900100d2:	3301      	adds	r3, #1
900100d4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900100d6:	4b17      	ldr	r3, [pc, #92]	@ (90010134 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900100d8:	4e17      	ldr	r6, [pc, #92]	@ (90010138 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900100da:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900100dc:	6830      	ldr	r0, [r6, #0]
900100de:	3004      	adds	r0, #4
900100e0:	f7fe fa2a 	bl	9000e538 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900100e4:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900100e6:	6833      	ldr	r3, [r6, #0]
900100e8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900100ea:	d315      	bcc.n	90010118 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900100ec:	4b13      	ldr	r3, [pc, #76]	@ (9001013c <vTaskDelay+0xa0>)
900100ee:	6818      	ldr	r0, [r3, #0]
900100f0:	6831      	ldr	r1, [r6, #0]
900100f2:	3104      	adds	r1, #4
900100f4:	f7fe fa08 	bl	9000e508 <vListInsert>
	configASSERT( uxSchedulerSuspended );
900100f8:	682b      	ldr	r3, [r5, #0]
900100fa:	b943      	cbnz	r3, 9001010e <vTaskDelay+0x72>
900100fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010100:	f383 8811 	msr	BASEPRI, r3
90010104:	f3bf 8f6f 	isb	sy
90010108:	f3bf 8f4f 	dsb	sy
9001010c:	e7fe      	b.n	9001010c <vTaskDelay+0x70>
9001010e:	f7ff fe39 	bl	9000fd84 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90010112:	2800      	cmp	r0, #0
90010114:	d0c4      	beq.n	900100a0 <vTaskDelay+0x4>
	}
90010116:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010118:	4b09      	ldr	r3, [pc, #36]	@ (90010140 <vTaskDelay+0xa4>)
9001011a:	6818      	ldr	r0, [r3, #0]
9001011c:	6831      	ldr	r1, [r6, #0]
9001011e:	3104      	adds	r1, #4
90010120:	f7fe f9f2 	bl	9000e508 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90010124:	4b07      	ldr	r3, [pc, #28]	@ (90010144 <vTaskDelay+0xa8>)
90010126:	681a      	ldr	r2, [r3, #0]
90010128:	4294      	cmp	r4, r2
9001012a:	d2e5      	bcs.n	900100f8 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9001012c:	601c      	str	r4, [r3, #0]
9001012e:	e7e3      	b.n	900100f8 <vTaskDelay+0x5c>
90010130:	24021210 	.word	0x24021210
90010134:	24021230 	.word	0x24021230
90010138:	24021708 	.word	0x24021708
9001013c:	24021278 	.word	0x24021278
90010140:	2402127c 	.word	0x2402127c
90010144:	24021214 	.word	0x24021214

90010148 <vTaskStartScheduler>:
{
90010148:	b530      	push	{r4, r5, lr}
9001014a:	b08b      	sub	sp, #44	@ 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9001014c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001014e:	aa07      	add	r2, sp, #28
90010150:	a906      	add	r1, sp, #24
90010152:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
90010154:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90010158:	f7fe f872 	bl	9000e240 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9001015c:	9d05      	ldr	r5, [sp, #20]
9001015e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
90010162:	b1bb      	cbz	r3, 90010194 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90010164:	b16d      	cbz	r5, 90010182 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90010166:	21ac      	movs	r1, #172	@ 0xac
90010168:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
9001016a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001016c:	29ac      	cmp	r1, #172	@ 0xac
9001016e:	d01a      	beq.n	900101a6 <vTaskStartScheduler+0x5e>
90010170:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010174:	f383 8811 	msr	BASEPRI, r3
90010178:	f3bf 8f6f 	isb	sy
9001017c:	f3bf 8f4f 	dsb	sy
90010180:	e7fe      	b.n	90010180 <vTaskStartScheduler+0x38>
90010182:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010186:	f383 8811 	msr	BASEPRI, r3
9001018a:	f3bf 8f6f 	isb	sy
9001018e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010192:	e7fe      	b.n	90010192 <vTaskStartScheduler+0x4a>
90010194:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010198:	f383 8811 	msr	BASEPRI, r3
9001019c:	f3bf 8f6f 	isb	sy
900101a0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
900101a4:	e7fe      	b.n	900101a4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900101a6:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900101a8:	632b      	str	r3, [r5, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900101aa:	4822      	ldr	r0, [pc, #136]	@ (90010234 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900101ac:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900101b0:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
900101b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900101b4:	4623      	mov	r3, r4
900101b6:	9400      	str	r4, [sp, #0]
900101b8:	e9cd 1501 	strd	r1, r5, [sp, #4]
900101bc:	491e      	ldr	r1, [pc, #120]	@ (90010238 <vTaskStartScheduler+0xf0>)
900101be:	f7ff fc59 	bl	9000fa74 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
900101c2:	4628      	mov	r0, r5
900101c4:	f7ff fbd0 	bl	9000f968 <prvAddNewTaskToReadyList>
		return xReturn;
900101c8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
900101ca:	b17b      	cbz	r3, 900101ec <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
900101cc:	f000 fc90 	bl	90010af0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900101d0:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
900101d2:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
900101d4:	d00c      	beq.n	900101f0 <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900101d6:	3301      	adds	r3, #1
900101d8:	d108      	bne.n	900101ec <vTaskStartScheduler+0xa4>
900101da:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101de:	f383 8811 	msr	BASEPRI, r3
900101e2:	f3bf 8f6f 	isb	sy
900101e6:	f3bf 8f4f 	dsb	sy
900101ea:	e7fe      	b.n	900101ea <vTaskStartScheduler+0xa2>
}
900101ec:	b00b      	add	sp, #44	@ 0x2c
900101ee:	bd30      	pop	{r4, r5, pc}
900101f0:	f04f 0250 	mov.w	r2, #80	@ 0x50
900101f4:	f382 8811 	msr	BASEPRI, r2
900101f8:	f3bf 8f6f 	isb	sy
900101fc:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
90010200:	4a0e      	ldr	r2, [pc, #56]	@ (9001023c <vTaskStartScheduler+0xf4>)
90010202:	480f      	ldr	r0, [pc, #60]	@ (90010240 <vTaskStartScheduler+0xf8>)
90010204:	6811      	ldr	r1, [r2, #0]
90010206:	3158      	adds	r1, #88	@ 0x58
90010208:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
9001020a:	f04f 30ff 	mov.w	r0, #4294967295
9001020e:	490d      	ldr	r1, [pc, #52]	@ (90010244 <vTaskStartScheduler+0xfc>)
90010210:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
90010212:	480d      	ldr	r0, [pc, #52]	@ (90010248 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010214:	490d      	ldr	r1, [pc, #52]	@ (9001024c <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
90010216:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010218:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
9001021a:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001021c:	b143      	cbz	r3, 90010230 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
9001021e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010220:	b10b      	cbz	r3, 90010226 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010222:	2000      	movs	r0, #0
90010224:	4798      	blx	r3
}
90010226:	b00b      	add	sp, #44	@ 0x2c
90010228:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
9001022c:	f7fe ba94 	b.w	9000e758 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90010230:	6813      	ldr	r3, [r2, #0]
90010232:	e7f4      	b.n	9001021e <vTaskStartScheduler+0xd6>
90010234:	9000fb95 	.word	0x9000fb95
90010238:	9002ca78 	.word	0x9002ca78
9001023c:	24021708 	.word	0x24021708
90010240:	24000114 	.word	0x24000114
90010244:	24021214 	.word	0x24021214
90010248:	24021228 	.word	0x24021228
9001024c:	24021230 	.word	0x24021230

90010250 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90010250:	4a02      	ldr	r2, [pc, #8]	@ (9001025c <vTaskSuspendAll+0xc>)
90010252:	6813      	ldr	r3, [r2, #0]
90010254:	3301      	adds	r3, #1
90010256:	6013      	str	r3, [r2, #0]
}
90010258:	4770      	bx	lr
9001025a:	bf00      	nop
9001025c:	24021210 	.word	0x24021210

90010260 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90010260:	4b06      	ldr	r3, [pc, #24]	@ (9001027c <xTaskResumeAll+0x1c>)
90010262:	681b      	ldr	r3, [r3, #0]
90010264:	b943      	cbnz	r3, 90010278 <xTaskResumeAll+0x18>
90010266:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001026a:	f383 8811 	msr	BASEPRI, r3
9001026e:	f3bf 8f6f 	isb	sy
90010272:	f3bf 8f4f 	dsb	sy
90010276:	e7fe      	b.n	90010276 <xTaskResumeAll+0x16>
90010278:	f7ff bd84 	b.w	9000fd84 <xTaskResumeAll.part.0>
9001027c:	24021210 	.word	0x24021210

90010280 <xTaskGetTickCount>:
		xTicks = xTickCount;
90010280:	4b01      	ldr	r3, [pc, #4]	@ (90010288 <xTaskGetTickCount+0x8>)
90010282:	6818      	ldr	r0, [r3, #0]
}
90010284:	4770      	bx	lr
90010286:	bf00      	nop
90010288:	24021230 	.word	0x24021230

9001028c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001028c:	4b05      	ldr	r3, [pc, #20]	@ (900102a4 <xTaskIncrementTick+0x18>)
9001028e:	681b      	ldr	r3, [r3, #0]
90010290:	b90b      	cbnz	r3, 90010296 <xTaskIncrementTick+0xa>
90010292:	f7ff bcd1 	b.w	9000fc38 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010296:	4a04      	ldr	r2, [pc, #16]	@ (900102a8 <xTaskIncrementTick+0x1c>)
}
90010298:	2000      	movs	r0, #0
		++xPendedTicks;
9001029a:	6813      	ldr	r3, [r2, #0]
9001029c:	3301      	adds	r3, #1
9001029e:	6013      	str	r3, [r2, #0]
}
900102a0:	4770      	bx	lr
900102a2:	bf00      	nop
900102a4:	24021210 	.word	0x24021210
900102a8:	24021224 	.word	0x24021224

900102ac <vTaskSetApplicationTaskTag>:
	{
900102ac:	b538      	push	{r3, r4, r5, lr}
900102ae:	460d      	mov	r5, r1
		if( xTask == NULL )
900102b0:	b138      	cbz	r0, 900102c2 <vTaskSetApplicationTaskTag+0x16>
900102b2:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900102b4:	f7fe f9be 	bl	9000e634 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900102b8:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900102ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900102be:	f7fe b9db 	b.w	9000e678 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900102c2:	4b04      	ldr	r3, [pc, #16]	@ (900102d4 <vTaskSetApplicationTaskTag+0x28>)
900102c4:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900102c6:	f7fe f9b5 	bl	9000e634 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900102ca:	6565      	str	r5, [r4, #84]	@ 0x54
	}
900102cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900102d0:	f7fe b9d2 	b.w	9000e678 <vPortExitCritical>
900102d4:	24021708 	.word	0x24021708

900102d8 <vTaskSwitchContext>:
{
900102d8:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900102da:	4b28      	ldr	r3, [pc, #160]	@ (9001037c <vTaskSwitchContext+0xa4>)
900102dc:	681b      	ldr	r3, [r3, #0]
900102de:	b11b      	cbz	r3, 900102e8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
900102e0:	4b27      	ldr	r3, [pc, #156]	@ (90010380 <vTaskSwitchContext+0xa8>)
900102e2:	2201      	movs	r2, #1
900102e4:	601a      	str	r2, [r3, #0]
}
900102e6:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
900102e8:	4a25      	ldr	r2, [pc, #148]	@ (90010380 <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
900102ea:	4c26      	ldr	r4, [pc, #152]	@ (90010384 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
900102ec:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900102ee:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900102f0:	2b00      	cmp	r3, #0
900102f2:	d038      	beq.n	90010366 <vTaskSwitchContext+0x8e>
		if( xTCB->pxTaskTag != NULL )
900102f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900102f6:	b10b      	cbz	r3, 900102fc <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900102f8:	2001      	movs	r0, #1
900102fa:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900102fc:	4d22      	ldr	r5, [pc, #136]	@ (90010388 <vTaskSwitchContext+0xb0>)
900102fe:	4923      	ldr	r1, [pc, #140]	@ (9001038c <vTaskSwitchContext+0xb4>)
90010300:	682b      	ldr	r3, [r5, #0]
90010302:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010306:	0098      	lsls	r0, r3, #2
90010308:	0092      	lsls	r2, r2, #2
9001030a:	588a      	ldr	r2, [r1, r2]
9001030c:	b942      	cbnz	r2, 90010320 <vTaskSwitchContext+0x48>
9001030e:	b30b      	cbz	r3, 90010354 <vTaskSwitchContext+0x7c>
90010310:	3b01      	subs	r3, #1
90010312:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010316:	0098      	lsls	r0, r3, #2
90010318:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001031c:	2a00      	cmp	r2, #0
9001031e:	d0f6      	beq.n	9001030e <vTaskSwitchContext+0x36>
90010320:	4418      	add	r0, r3
90010322:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010326:	f8dc 1004 	ldr.w	r1, [ip, #4]
9001032a:	4662      	mov	r2, ip
9001032c:	6849      	ldr	r1, [r1, #4]
9001032e:	3208      	adds	r2, #8
90010330:	4291      	cmp	r1, r2
90010332:	f8cc 1004 	str.w	r1, [ip, #4]
90010336:	d01d      	beq.n	90010374 <vTaskSwitchContext+0x9c>
90010338:	68ca      	ldr	r2, [r1, #12]
9001033a:	6022      	str	r2, [r4, #0]
9001033c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001033e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010340:	b1b3      	cbz	r3, 90010370 <vTaskSwitchContext+0x98>
		if( xTCB->pxTaskTag != NULL )
90010342:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010344:	b10b      	cbz	r3, 9001034a <vTaskSwitchContext+0x72>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010346:	2000      	movs	r0, #0
90010348:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
9001034a:	6823      	ldr	r3, [r4, #0]
9001034c:	4a10      	ldr	r2, [pc, #64]	@ (90010390 <vTaskSwitchContext+0xb8>)
9001034e:	3358      	adds	r3, #88	@ 0x58
90010350:	6013      	str	r3, [r2, #0]
}
90010352:	bd38      	pop	{r3, r4, r5, pc}
90010354:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010358:	f383 8811 	msr	BASEPRI, r3
9001035c:	f3bf 8f6f 	isb	sy
90010360:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010364:	e7fe      	b.n	90010364 <vTaskSwitchContext+0x8c>
			xTCB = pxCurrentTCB;
90010366:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90010368:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001036a:	2b00      	cmp	r3, #0
9001036c:	d1c4      	bne.n	900102f8 <vTaskSwitchContext+0x20>
9001036e:	e7c5      	b.n	900102fc <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90010370:	6823      	ldr	r3, [r4, #0]
90010372:	e7e6      	b.n	90010342 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010374:	6849      	ldr	r1, [r1, #4]
90010376:	f8cc 1004 	str.w	r1, [ip, #4]
9001037a:	e7dd      	b.n	90010338 <vTaskSwitchContext+0x60>
9001037c:	24021210 	.word	0x24021210
90010380:	24021220 	.word	0x24021220
90010384:	24021708 	.word	0x24021708
90010388:	2402122c 	.word	0x2402122c
9001038c:	240212a8 	.word	0x240212a8
90010390:	24000114 	.word	0x24000114

90010394 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90010394:	b1f0      	cbz	r0, 900103d4 <vTaskPlaceOnEventList+0x40>
{
90010396:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010398:	4d1a      	ldr	r5, [pc, #104]	@ (90010404 <vTaskPlaceOnEventList+0x70>)
9001039a:	460c      	mov	r4, r1
9001039c:	6829      	ldr	r1, [r5, #0]
9001039e:	3118      	adds	r1, #24
900103a0:	f7fe f8b2 	bl	9000e508 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
900103a4:	4b18      	ldr	r3, [pc, #96]	@ (90010408 <vTaskPlaceOnEventList+0x74>)
900103a6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900103a8:	6828      	ldr	r0, [r5, #0]
900103aa:	3004      	adds	r0, #4
900103ac:	f7fe f8c4 	bl	9000e538 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900103b0:	1c63      	adds	r3, r4, #1
900103b2:	d020      	beq.n	900103f6 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900103b4:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900103b6:	682b      	ldr	r3, [r5, #0]
900103b8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900103ba:	d214      	bcs.n	900103e6 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900103bc:	4b13      	ldr	r3, [pc, #76]	@ (9001040c <vTaskPlaceOnEventList+0x78>)
900103be:	6818      	ldr	r0, [r3, #0]
900103c0:	6829      	ldr	r1, [r5, #0]
900103c2:	3104      	adds	r1, #4
900103c4:	f7fe f8a0 	bl	9000e508 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900103c8:	4b11      	ldr	r3, [pc, #68]	@ (90010410 <vTaskPlaceOnEventList+0x7c>)
900103ca:	681a      	ldr	r2, [r3, #0]
900103cc:	4294      	cmp	r4, r2
900103ce:	d200      	bcs.n	900103d2 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900103d0:	601c      	str	r4, [r3, #0]
}
900103d2:	bd70      	pop	{r4, r5, r6, pc}
900103d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103d8:	f383 8811 	msr	BASEPRI, r3
900103dc:	f3bf 8f6f 	isb	sy
900103e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900103e4:	e7fe      	b.n	900103e4 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900103e6:	4b0b      	ldr	r3, [pc, #44]	@ (90010414 <vTaskPlaceOnEventList+0x80>)
900103e8:	6818      	ldr	r0, [r3, #0]
900103ea:	6829      	ldr	r1, [r5, #0]
}
900103ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900103f0:	3104      	adds	r1, #4
900103f2:	f7fe b889 	b.w	9000e508 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900103f6:	6829      	ldr	r1, [r5, #0]
900103f8:	4807      	ldr	r0, [pc, #28]	@ (90010418 <vTaskPlaceOnEventList+0x84>)
900103fa:	3104      	adds	r1, #4
}
900103fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010400:	f7fe b874 	b.w	9000e4ec <vListInsertEnd>
90010404:	24021708 	.word	0x24021708
90010408:	24021230 	.word	0x24021230
9001040c:	2402127c 	.word	0x2402127c
90010410:	24021214 	.word	0x24021214
90010414:	24021278 	.word	0x24021278
90010418:	24021238 	.word	0x24021238

9001041c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9001041c:	b350      	cbz	r0, 90010474 <vTaskPlaceOnEventListRestricted+0x58>
	{
9001041e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010420:	4e1d      	ldr	r6, [pc, #116]	@ (90010498 <vTaskPlaceOnEventListRestricted+0x7c>)
90010422:	460c      	mov	r4, r1
90010424:	4615      	mov	r5, r2
90010426:	6831      	ldr	r1, [r6, #0]
90010428:	3118      	adds	r1, #24
9001042a:	f7fe f85f 	bl	9000e4ec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001042e:	4b1b      	ldr	r3, [pc, #108]	@ (9001049c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
90010430:	b15d      	cbz	r5, 9001044a <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010432:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010434:	6830      	ldr	r0, [r6, #0]
90010436:	3004      	adds	r0, #4
90010438:	f7fe f87e 	bl	9000e538 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001043c:	6831      	ldr	r1, [r6, #0]
9001043e:	4818      	ldr	r0, [pc, #96]	@ (900104a0 <vTaskPlaceOnEventListRestricted+0x84>)
90010440:	3104      	adds	r1, #4
	}
90010442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010446:	f7fe b851 	b.w	9000e4ec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001044a:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001044c:	6830      	ldr	r0, [r6, #0]
9001044e:	3004      	adds	r0, #4
90010450:	f7fe f872 	bl	9000e538 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90010454:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010456:	6833      	ldr	r3, [r6, #0]
90010458:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001045a:	d214      	bcs.n	90010486 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001045c:	4b11      	ldr	r3, [pc, #68]	@ (900104a4 <vTaskPlaceOnEventListRestricted+0x88>)
9001045e:	6818      	ldr	r0, [r3, #0]
90010460:	6831      	ldr	r1, [r6, #0]
90010462:	3104      	adds	r1, #4
90010464:	f7fe f850 	bl	9000e508 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010468:	4b0f      	ldr	r3, [pc, #60]	@ (900104a8 <vTaskPlaceOnEventListRestricted+0x8c>)
9001046a:	681a      	ldr	r2, [r3, #0]
9001046c:	4294      	cmp	r4, r2
9001046e:	d200      	bcs.n	90010472 <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
90010470:	601c      	str	r4, [r3, #0]
	}
90010472:	bd70      	pop	{r4, r5, r6, pc}
90010474:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010478:	f383 8811 	msr	BASEPRI, r3
9001047c:	f3bf 8f6f 	isb	sy
90010480:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90010484:	e7fe      	b.n	90010484 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010486:	4b09      	ldr	r3, [pc, #36]	@ (900104ac <vTaskPlaceOnEventListRestricted+0x90>)
90010488:	6818      	ldr	r0, [r3, #0]
9001048a:	6831      	ldr	r1, [r6, #0]
	}
9001048c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010490:	3104      	adds	r1, #4
90010492:	f7fe b839 	b.w	9000e508 <vListInsert>
90010496:	bf00      	nop
90010498:	24021708 	.word	0x24021708
9001049c:	24021230 	.word	0x24021230
900104a0:	24021238 	.word	0x24021238
900104a4:	2402127c 	.word	0x2402127c
900104a8:	24021214 	.word	0x24021214
900104ac:	24021278 	.word	0x24021278

900104b0 <xTaskRemoveFromEventList>:
{
900104b0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900104b2:	68c3      	ldr	r3, [r0, #12]
900104b4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
900104b6:	b34c      	cbz	r4, 9001050c <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900104b8:	f104 0518 	add.w	r5, r4, #24
900104bc:	4628      	mov	r0, r5
900104be:	f7fe f83b 	bl	9000e538 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900104c2:	4b18      	ldr	r3, [pc, #96]	@ (90010524 <xTaskRemoveFromEventList+0x74>)
900104c4:	681b      	ldr	r3, [r3, #0]
900104c6:	b173      	cbz	r3, 900104e6 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900104c8:	4629      	mov	r1, r5
900104ca:	4817      	ldr	r0, [pc, #92]	@ (90010528 <xTaskRemoveFromEventList+0x78>)
900104cc:	f7fe f80e 	bl	9000e4ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900104d0:	4b16      	ldr	r3, [pc, #88]	@ (9001052c <xTaskRemoveFromEventList+0x7c>)
900104d2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900104d4:	681b      	ldr	r3, [r3, #0]
900104d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900104d8:	429a      	cmp	r2, r3
900104da:	d920      	bls.n	9001051e <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
900104dc:	2301      	movs	r3, #1
900104de:	4a14      	ldr	r2, [pc, #80]	@ (90010530 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
900104e0:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900104e2:	6013      	str	r3, [r2, #0]
}
900104e4:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900104e6:	1d25      	adds	r5, r4, #4
900104e8:	4628      	mov	r0, r5
900104ea:	f7fe f825 	bl	9000e538 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900104ee:	4b11      	ldr	r3, [pc, #68]	@ (90010534 <xTaskRemoveFromEventList+0x84>)
900104f0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900104f2:	681a      	ldr	r2, [r3, #0]
900104f4:	4290      	cmp	r0, r2
900104f6:	d900      	bls.n	900104fa <xTaskRemoveFromEventList+0x4a>
900104f8:	6018      	str	r0, [r3, #0]
900104fa:	4b0f      	ldr	r3, [pc, #60]	@ (90010538 <xTaskRemoveFromEventList+0x88>)
900104fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010500:	4629      	mov	r1, r5
90010502:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010506:	f7fd fff1 	bl	9000e4ec <vListInsertEnd>
9001050a:	e7e1      	b.n	900104d0 <xTaskRemoveFromEventList+0x20>
9001050c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010510:	f383 8811 	msr	BASEPRI, r3
90010514:	f3bf 8f6f 	isb	sy
90010518:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9001051c:	e7fe      	b.n	9001051c <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9001051e:	2000      	movs	r0, #0
}
90010520:	bd38      	pop	{r3, r4, r5, pc}
90010522:	bf00      	nop
90010524:	24021210 	.word	0x24021210
90010528:	24021264 	.word	0x24021264
9001052c:	24021708 	.word	0x24021708
90010530:	24021220 	.word	0x24021220
90010534:	2402122c 	.word	0x2402122c
90010538:	240212a8 	.word	0x240212a8

9001053c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001053c:	4a03      	ldr	r2, [pc, #12]	@ (9001054c <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001053e:	4b04      	ldr	r3, [pc, #16]	@ (90010550 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010540:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010542:	681b      	ldr	r3, [r3, #0]
90010544:	e9c0 2300 	strd	r2, r3, [r0]
}
90010548:	4770      	bx	lr
9001054a:	bf00      	nop
9001054c:	2402121c 	.word	0x2402121c
90010550:	24021230 	.word	0x24021230

90010554 <xTaskCheckForTimeOut>:
{
90010554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90010556:	b308      	cbz	r0, 9001059c <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90010558:	460d      	mov	r5, r1
9001055a:	b1b1      	cbz	r1, 9001058a <xTaskCheckForTimeOut+0x36>
9001055c:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001055e:	f7fe f869 	bl	9000e634 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90010562:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90010564:	4a1a      	ldr	r2, [pc, #104]	@ (900105d0 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90010566:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010568:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9001056a:	d02c      	beq.n	900105c6 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001056c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 900105d4 <xTaskCheckForTimeOut+0x80>
90010570:	6826      	ldr	r6, [r4, #0]
90010572:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010576:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010578:	42be      	cmp	r6, r7
9001057a:	d018      	beq.n	900105ae <xTaskCheckForTimeOut+0x5a>
9001057c:	4288      	cmp	r0, r1
9001057e:	d816      	bhi.n	900105ae <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90010580:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90010582:	f7fe f879 	bl	9000e678 <vPortExitCritical>
}
90010586:	4620      	mov	r0, r4
90010588:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001058a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001058e:	f383 8811 	msr	BASEPRI, r3
90010592:	f3bf 8f6f 	isb	sy
90010596:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001059a:	e7fe      	b.n	9001059a <xTaskCheckForTimeOut+0x46>
9001059c:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105a0:	f383 8811 	msr	BASEPRI, r3
900105a4:	f3bf 8f6f 	isb	sy
900105a8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900105ac:	e7fe      	b.n	900105ac <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900105ae:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900105b2:	4573      	cmp	r3, lr
900105b4:	d909      	bls.n	900105ca <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
900105b6:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900105b8:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900105bc:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900105be:	4403      	add	r3, r0
900105c0:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900105c2:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
900105c6:	2400      	movs	r4, #0
900105c8:	e7db      	b.n	90010582 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
900105ca:	2300      	movs	r3, #0
900105cc:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900105ce:	e7d7      	b.n	90010580 <xTaskCheckForTimeOut+0x2c>
900105d0:	24021230 	.word	0x24021230
900105d4:	2402121c 	.word	0x2402121c

900105d8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900105d8:	4b01      	ldr	r3, [pc, #4]	@ (900105e0 <vTaskMissedYield+0x8>)
900105da:	2201      	movs	r2, #1
900105dc:	601a      	str	r2, [r3, #0]
}
900105de:	4770      	bx	lr
900105e0:	24021220 	.word	0x24021220

900105e4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900105e4:	4b05      	ldr	r3, [pc, #20]	@ (900105fc <xTaskGetSchedulerState+0x18>)
900105e6:	681b      	ldr	r3, [r3, #0]
900105e8:	b133      	cbz	r3, 900105f8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900105ea:	4b05      	ldr	r3, [pc, #20]	@ (90010600 <xTaskGetSchedulerState+0x1c>)
900105ec:	6818      	ldr	r0, [r3, #0]
900105ee:	fab0 f080 	clz	r0, r0
900105f2:	0940      	lsrs	r0, r0, #5
900105f4:	0040      	lsls	r0, r0, #1
900105f6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900105f8:	2001      	movs	r0, #1
	}
900105fa:	4770      	bx	lr
900105fc:	24021228 	.word	0x24021228
90010600:	24021210 	.word	0x24021210

90010604 <xTaskPriorityInherit>:
	{
90010604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90010606:	4604      	mov	r4, r0
90010608:	b1c8      	cbz	r0, 9001063e <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9001060a:	4d1b      	ldr	r5, [pc, #108]	@ (90010678 <xTaskPriorityInherit+0x74>)
9001060c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001060e:	682a      	ldr	r2, [r5, #0]
90010610:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010612:	4293      	cmp	r3, r2
90010614:	d214      	bcs.n	90010640 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010616:	6982      	ldr	r2, [r0, #24]
90010618:	2a00      	cmp	r2, #0
9001061a:	db04      	blt.n	90010626 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001061c:	682a      	ldr	r2, [r5, #0]
9001061e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010620:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90010624:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90010626:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001062a:	4e14      	ldr	r6, [pc, #80]	@ (9001067c <xTaskPriorityInherit+0x78>)
9001062c:	6962      	ldr	r2, [r4, #20]
9001062e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010632:	429a      	cmp	r2, r3
90010634:	d00c      	beq.n	90010650 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010636:	682b      	ldr	r3, [r5, #0]
90010638:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001063a:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9001063c:	2001      	movs	r0, #1
	}
9001063e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010640:	682b      	ldr	r3, [r5, #0]
90010642:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90010644:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010646:	4298      	cmp	r0, r3
90010648:	bf2c      	ite	cs
9001064a:	2000      	movcs	r0, #0
9001064c:	2001      	movcc	r0, #1
	}
9001064e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010650:	1d27      	adds	r7, r4, #4
90010652:	4638      	mov	r0, r7
90010654:	f7fd ff70 	bl	9000e538 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010658:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001065a:	4b09      	ldr	r3, [pc, #36]	@ (90010680 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001065c:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001065e:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010660:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010662:	4290      	cmp	r0, r2
90010664:	d900      	bls.n	90010668 <xTaskPriorityInherit+0x64>
90010666:	6018      	str	r0, [r3, #0]
90010668:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001066c:	4639      	mov	r1, r7
9001066e:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90010672:	f7fd ff3b 	bl	9000e4ec <vListInsertEnd>
90010676:	e7e1      	b.n	9001063c <xTaskPriorityInherit+0x38>
90010678:	24021708 	.word	0x24021708
9001067c:	240212a8 	.word	0x240212a8
90010680:	2402122c 	.word	0x2402122c

90010684 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90010684:	b308      	cbz	r0, 900106ca <xTaskPriorityDisinherit+0x46>
	{
90010686:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90010688:	4b1d      	ldr	r3, [pc, #116]	@ (90010700 <xTaskPriorityDisinherit+0x7c>)
9001068a:	681c      	ldr	r4, [r3, #0]
9001068c:	4284      	cmp	r4, r0
9001068e:	d008      	beq.n	900106a2 <xTaskPriorityDisinherit+0x1e>
90010690:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010694:	f383 8811 	msr	BASEPRI, r3
90010698:	f3bf 8f6f 	isb	sy
9001069c:	f3bf 8f4f 	dsb	sy
900106a0:	e7fe      	b.n	900106a0 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
900106a2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900106a4:	b143      	cbz	r3, 900106b8 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900106a6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
900106a8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900106aa:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
900106ac:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900106ae:	4291      	cmp	r1, r2
900106b0:	d000      	beq.n	900106b4 <xTaskPriorityDisinherit+0x30>
900106b2:	b163      	cbz	r3, 900106ce <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
900106b4:	2000      	movs	r0, #0
	}
900106b6:	bd38      	pop	{r3, r4, r5, pc}
900106b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106bc:	f383 8811 	msr	BASEPRI, r3
900106c0:	f3bf 8f6f 	isb	sy
900106c4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900106c8:	e7fe      	b.n	900106c8 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
900106ca:	2000      	movs	r0, #0
	}
900106cc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900106ce:	1d25      	adds	r5, r4, #4
900106d0:	4628      	mov	r0, r5
900106d2:	f7fd ff31 	bl	9000e538 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900106d6:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
900106d8:	4b0a      	ldr	r3, [pc, #40]	@ (90010704 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106da:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900106de:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106e0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900106e2:	681a      	ldr	r2, [r3, #0]
900106e4:	4290      	cmp	r0, r2
900106e6:	d900      	bls.n	900106ea <xTaskPriorityDisinherit+0x66>
900106e8:	6018      	str	r0, [r3, #0]
900106ea:	4b07      	ldr	r3, [pc, #28]	@ (90010708 <xTaskPriorityDisinherit+0x84>)
900106ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900106f0:	4629      	mov	r1, r5
900106f2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900106f6:	f7fd fef9 	bl	9000e4ec <vListInsertEnd>
					xReturn = pdTRUE;
900106fa:	2001      	movs	r0, #1
	}
900106fc:	bd38      	pop	{r3, r4, r5, pc}
900106fe:	bf00      	nop
90010700:	24021708 	.word	0x24021708
90010704:	2402122c 	.word	0x2402122c
90010708:	240212a8 	.word	0x240212a8

9001070c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9001070c:	2800      	cmp	r0, #0
9001070e:	d03c      	beq.n	9001078a <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90010710:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90010712:	b570      	push	{r4, r5, r6, lr}
90010714:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90010716:	b14b      	cbz	r3, 9001072c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010718:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9001071a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9001071c:	4281      	cmp	r1, r0
9001071e:	bf38      	it	cc
90010720:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90010722:	2b01      	cmp	r3, #1
90010724:	d101      	bne.n	9001072a <vTaskPriorityDisinheritAfterTimeout+0x1e>
90010726:	428a      	cmp	r2, r1
90010728:	d109      	bne.n	9001073e <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9001072a:	bd70      	pop	{r4, r5, r6, pc}
9001072c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010730:	f383 8811 	msr	BASEPRI, r3
90010734:	f3bf 8f6f 	isb	sy
90010738:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9001073c:	e7fe      	b.n	9001073c <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9001073e:	4b18      	ldr	r3, [pc, #96]	@ (900107a0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90010740:	681b      	ldr	r3, [r3, #0]
90010742:	42a3      	cmp	r3, r4
90010744:	d022      	beq.n	9001078c <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010746:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010748:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001074a:	2b00      	cmp	r3, #0
9001074c:	db02      	blt.n	90010754 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001074e:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90010752:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90010754:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010758:	4d12      	ldr	r5, [pc, #72]	@ (900107a4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9001075a:	6961      	ldr	r1, [r4, #20]
9001075c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010760:	4299      	cmp	r1, r3
90010762:	d1e2      	bne.n	9001072a <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010764:	1d26      	adds	r6, r4, #4
90010766:	4630      	mov	r0, r6
90010768:	f7fd fee6 	bl	9000e538 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9001076c:	4b0e      	ldr	r3, [pc, #56]	@ (900107a8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9001076e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010770:	681a      	ldr	r2, [r3, #0]
90010772:	4290      	cmp	r0, r2
90010774:	d900      	bls.n	90010778 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90010776:	6018      	str	r0, [r3, #0]
90010778:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001077c:	4631      	mov	r1, r6
9001077e:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90010782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90010786:	f7fd beb1 	b.w	9000e4ec <vListInsertEnd>
9001078a:	4770      	bx	lr
9001078c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010790:	f383 8811 	msr	BASEPRI, r3
90010794:	f3bf 8f6f 	isb	sy
90010798:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9001079c:	e7fe      	b.n	9001079c <vTaskPriorityDisinheritAfterTimeout+0x90>
9001079e:	bf00      	nop
900107a0:	24021708 	.word	0x24021708
900107a4:	240212a8 	.word	0x240212a8
900107a8:	2402122c 	.word	0x2402122c

900107ac <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900107ac:	4b04      	ldr	r3, [pc, #16]	@ (900107c0 <pvTaskIncrementMutexHeldCount+0x14>)
900107ae:	681a      	ldr	r2, [r3, #0]
900107b0:	b11a      	cbz	r2, 900107ba <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900107b2:	6819      	ldr	r1, [r3, #0]
900107b4:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
900107b6:	3201      	adds	r2, #1
900107b8:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
900107ba:	6818      	ldr	r0, [r3, #0]
	}
900107bc:	4770      	bx	lr
900107be:	bf00      	nop
900107c0:	24021708 	.word	0x24021708

900107c4 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900107c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900107c8:	4e21      	ldr	r6, [pc, #132]	@ (90010850 <prvSwitchTimerLists+0x8c>)
900107ca:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900107cc:	e00d      	b.n	900107ea <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900107ce:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900107d0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900107d2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900107d4:	1d25      	adds	r5, r4, #4
900107d6:	4628      	mov	r0, r5
900107d8:	f7fd feae 	bl	9000e538 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900107dc:	6a23      	ldr	r3, [r4, #32]
900107de:	4620      	mov	r0, r4
900107e0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900107e2:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
900107e6:	075b      	lsls	r3, r3, #29
900107e8:	d40a      	bmi.n	90010800 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900107ea:	6833      	ldr	r3, [r6, #0]
900107ec:	681a      	ldr	r2, [r3, #0]
900107ee:	2a00      	cmp	r2, #0
900107f0:	d1ed      	bne.n	900107ce <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
900107f2:	4a18      	ldr	r2, [pc, #96]	@ (90010854 <prvSwitchTimerLists+0x90>)
900107f4:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
900107f6:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
900107f8:	6031      	str	r1, [r6, #0]
}
900107fa:	b004      	add	sp, #16
900107fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010800:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010802:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90010804:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90010858 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010808:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001080a:	429f      	cmp	r7, r3
9001080c:	d205      	bcs.n	9001081a <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001080e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010810:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010812:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010814:	f7fd fe78 	bl	9000e508 <vListInsert>
90010818:	e7e7      	b.n	900107ea <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9001081a:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9001081e:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90010820:	b16b      	cbz	r3, 9001083e <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010822:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90010824:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010828:	f7ff fedc 	bl	900105e4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001082c:	462b      	mov	r3, r5
9001082e:	462a      	mov	r2, r5
90010830:	4669      	mov	r1, sp
90010832:	f8d8 0000 	ldr.w	r0, [r8]
90010836:	f7fe f9eb 	bl	9000ec10 <xQueueGenericSend>
				configASSERT( xResult );
9001083a:	2800      	cmp	r0, #0
9001083c:	d1d5      	bne.n	900107ea <prvSwitchTimerLists+0x26>
9001083e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010842:	f383 8811 	msr	BASEPRI, r3
90010846:	f3bf 8f6f 	isb	sy
9001084a:	f3bf 8f4f 	dsb	sy
9001084e:	e7fe      	b.n	9001084e <prvSwitchTimerLists+0x8a>
90010850:	2402180c 	.word	0x2402180c
90010854:	24021808 	.word	0x24021808
90010858:	24021804 	.word	0x24021804

9001085c <prvTimerTask>:
{
9001085c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010860:	4e9f      	ldr	r6, [pc, #636]	@ (90010ae0 <prvTimerTask+0x284>)
90010862:	b089      	sub	sp, #36	@ 0x24
90010864:	4d9f      	ldr	r5, [pc, #636]	@ (90010ae4 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010866:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9001086a:	4c9f      	ldr	r4, [pc, #636]	@ (90010ae8 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001086c:	6833      	ldr	r3, [r6, #0]
9001086e:	681f      	ldr	r7, [r3, #0]
90010870:	2f00      	cmp	r7, #0
90010872:	f000 80b2 	beq.w	900109da <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010876:	68db      	ldr	r3, [r3, #12]
90010878:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001087a:	f7ff fce9 	bl	90010250 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001087e:	f7ff fcff 	bl	90010280 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010882:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010884:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010886:	4298      	cmp	r0, r3
90010888:	f0c0 80af 	bcc.w	900109ea <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9001088c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9001088e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010890:	f200 80d0 	bhi.w	90010a34 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90010894:	f7ff fce4 	bl	90010260 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010898:	6833      	ldr	r3, [r6, #0]
9001089a:	68db      	ldr	r3, [r3, #12]
9001089c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900108a0:	f10b 0804 	add.w	r8, fp, #4
900108a4:	4640      	mov	r0, r8
900108a6:	f7fd fe47 	bl	9000e538 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900108aa:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
900108ae:	0758      	lsls	r0, r3, #29
900108b0:	f100 80d0 	bmi.w	90010a54 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900108b4:	f023 0301 	bic.w	r3, r3, #1
900108b8:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900108bc:	f8db 3020 	ldr.w	r3, [fp, #32]
900108c0:	4658      	mov	r0, fp
900108c2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900108c4:	2200      	movs	r2, #0
900108c6:	4669      	mov	r1, sp
900108c8:	6820      	ldr	r0, [r4, #0]
900108ca:	f7fe fbdf 	bl	9000f08c <xQueueReceive>
900108ce:	2800      	cmp	r0, #0
900108d0:	d0cc      	beq.n	9001086c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900108d2:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900108d4:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900108d6:	2b00      	cmp	r3, #0
900108d8:	db77      	blt.n	900109ca <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900108da:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900108dc:	697b      	ldr	r3, [r7, #20]
900108de:	b113      	cbz	r3, 900108e6 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900108e0:	1d38      	adds	r0, r7, #4
900108e2:	f7fd fe29 	bl	9000e538 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900108e6:	f7ff fccb 	bl	90010280 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900108ea:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900108ec:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
900108ee:	4298      	cmp	r0, r3
900108f0:	f0c0 8082 	bcc.w	900109f8 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900108f4:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900108f6:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
900108fa:	2b09      	cmp	r3, #9
900108fc:	d8e2      	bhi.n	900108c4 <prvTimerTask+0x68>
900108fe:	e8df f003 	tbb	[pc, r3]
90010902:	0505      	.short	0x0505
90010904:	5b3e5405 	.word	0x5b3e5405
90010908:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001090c:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010910:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010912:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010916:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010918:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001091c:	69ba      	ldr	r2, [r7, #24]
9001091e:	1899      	adds	r1, r3, r2
90010920:	bf2c      	ite	cs
90010922:	2001      	movcs	r0, #1
90010924:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90010926:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010928:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001092a:	f200 8085 	bhi.w	90010a38 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001092e:	ebab 0303 	sub.w	r3, fp, r3
90010932:	429a      	cmp	r2, r3
90010934:	f200 80be 	bhi.w	90010ab4 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010938:	6a3b      	ldr	r3, [r7, #32]
9001093a:	4638      	mov	r0, r7
9001093c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001093e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010942:	0759      	lsls	r1, r3, #29
90010944:	d5be      	bpl.n	900108c4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010946:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010948:	9b01      	ldr	r3, [sp, #4]
9001094a:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9001094c:	b171      	cbz	r1, 9001096c <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001094e:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010950:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010954:	2700      	movs	r7, #0
90010956:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010958:	f7ff fe44 	bl	900105e4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001095c:	463b      	mov	r3, r7
9001095e:	463a      	mov	r2, r7
90010960:	a904      	add	r1, sp, #16
90010962:	6820      	ldr	r0, [r4, #0]
90010964:	f7fe f954 	bl	9000ec10 <xQueueGenericSend>
							configASSERT( xResult );
90010968:	2800      	cmp	r0, #0
9001096a:	d1ab      	bne.n	900108c4 <prvTimerTask+0x68>
9001096c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010970:	f383 8811 	msr	BASEPRI, r3
90010974:	f3bf 8f6f 	isb	sy
90010978:	f3bf 8f4f 	dsb	sy
9001097c:	e7fe      	b.n	9001097c <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001097e:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010982:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010984:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010988:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001098a:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001098e:	2b00      	cmp	r3, #0
90010990:	f000 809c 	beq.w	90010acc <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90010994:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010996:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010998:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9001099a:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001099c:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001099e:	d855      	bhi.n	90010a4c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900109a0:	4b52      	ldr	r3, [pc, #328]	@ (90010aec <prvTimerTask+0x290>)
900109a2:	6818      	ldr	r0, [r3, #0]
900109a4:	f7fd fdb0 	bl	9000e508 <vListInsert>
900109a8:	e78c      	b.n	900108c4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900109aa:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900109ae:	f023 0301 	bic.w	r3, r3, #1
900109b2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
900109b6:	e785      	b.n	900108c4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900109b8:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900109bc:	079a      	lsls	r2, r3, #30
900109be:	d557      	bpl.n	90010a70 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900109c0:	f023 0301 	bic.w	r3, r3, #1
900109c4:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
900109c8:	e77c      	b.n	900108c4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900109ca:	9b01      	ldr	r3, [sp, #4]
900109cc:	9903      	ldr	r1, [sp, #12]
900109ce:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900109d0:	9b00      	ldr	r3, [sp, #0]
900109d2:	2b00      	cmp	r3, #0
900109d4:	f6ff af76 	blt.w	900108c4 <prvTimerTask+0x68>
900109d8:	e77f      	b.n	900108da <prvTimerTask+0x7e>
	vTaskSuspendAll();
900109da:	f7ff fc39 	bl	90010250 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900109de:	f7ff fc4f 	bl	90010280 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900109e2:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900109e4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900109e6:	4283      	cmp	r3, r0
900109e8:	d909      	bls.n	900109fe <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
900109ea:	f7ff feeb 	bl	900107c4 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
900109ee:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900109f2:	f7ff fc35 	bl	90010260 <xTaskResumeAll>
900109f6:	e765      	b.n	900108c4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
900109f8:	f7ff fee4 	bl	900107c4 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
900109fc:	e77a      	b.n	900108f4 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900109fe:	4b3b      	ldr	r3, [pc, #236]	@ (90010aec <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010a00:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010a04:	681b      	ldr	r3, [r3, #0]
90010a06:	681a      	ldr	r2, [r3, #0]
90010a08:	fab2 f282 	clz	r2, r2
90010a0c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010a0e:	eba7 010a 	sub.w	r1, r7, sl
90010a12:	6820      	ldr	r0, [r4, #0]
90010a14:	f7fe ff44 	bl	9000f8a0 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010a18:	f7ff fc22 	bl	90010260 <xTaskResumeAll>
90010a1c:	2800      	cmp	r0, #0
90010a1e:	f47f af51 	bne.w	900108c4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010a22:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
90010a26:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90010a2a:	f3bf 8f4f 	dsb	sy
90010a2e:	f3bf 8f6f 	isb	sy
90010a32:	e747      	b.n	900108c4 <prvTimerTask+0x68>
90010a34:	2200      	movs	r2, #0
90010a36:	e7ea      	b.n	90010a0e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010a38:	455b      	cmp	r3, fp
90010a3a:	d902      	bls.n	90010a42 <prvTimerTask+0x1e6>
90010a3c:	2800      	cmp	r0, #0
90010a3e:	f43f af7b 	beq.w	90010938 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010a42:	1d39      	adds	r1, r7, #4
90010a44:	6830      	ldr	r0, [r6, #0]
90010a46:	f7fd fd5f 	bl	9000e508 <vListInsert>
	return xProcessTimerNow;
90010a4a:	e73b      	b.n	900108c4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010a4c:	6830      	ldr	r0, [r6, #0]
90010a4e:	f7fd fd5b 	bl	9000e508 <vListInsert>
90010a52:	e737      	b.n	900108c4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010a54:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010a58:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010a5c:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90010a5e:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010a60:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010a64:	d208      	bcs.n	90010a78 <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010a66:	4641      	mov	r1, r8
90010a68:	6830      	ldr	r0, [r6, #0]
90010a6a:	f7fd fd4d 	bl	9000e508 <vListInsert>
	return xProcessTimerNow;
90010a6e:	e725      	b.n	900108bc <prvTimerTask+0x60>
							vPortFree( pxTimer );
90010a70:	4638      	mov	r0, r7
90010a72:	f7fd fcc1 	bl	9000e3f8 <vPortFree>
90010a76:	e725      	b.n	900108c4 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a78:	ebaa 0a07 	sub.w	sl, sl, r7
90010a7c:	4552      	cmp	r2, sl
90010a7e:	d81f      	bhi.n	90010ac0 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90010a80:	6823      	ldr	r3, [r4, #0]
90010a82:	b173      	cbz	r3, 90010aa2 <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010a84:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010a88:	2700      	movs	r7, #0
90010a8a:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010a8c:	f7ff fdaa 	bl	900105e4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010a90:	463b      	mov	r3, r7
90010a92:	463a      	mov	r2, r7
90010a94:	a904      	add	r1, sp, #16
90010a96:	6820      	ldr	r0, [r4, #0]
90010a98:	f7fe f8ba 	bl	9000ec10 <xQueueGenericSend>
			configASSERT( xResult );
90010a9c:	2800      	cmp	r0, #0
90010a9e:	f47f af0d 	bne.w	900108bc <prvTimerTask+0x60>
90010aa2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010aa6:	f383 8811 	msr	BASEPRI, r3
90010aaa:	f3bf 8f6f 	isb	sy
90010aae:	f3bf 8f4f 	dsb	sy
90010ab2:	e7fe      	b.n	90010ab2 <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ab4:	4b0d      	ldr	r3, [pc, #52]	@ (90010aec <prvTimerTask+0x290>)
90010ab6:	1d39      	adds	r1, r7, #4
90010ab8:	6818      	ldr	r0, [r3, #0]
90010aba:	f7fd fd25 	bl	9000e508 <vListInsert>
	return xProcessTimerNow;
90010abe:	e701      	b.n	900108c4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ac0:	4b0a      	ldr	r3, [pc, #40]	@ (90010aec <prvTimerTask+0x290>)
90010ac2:	4641      	mov	r1, r8
90010ac4:	6818      	ldr	r0, [r3, #0]
90010ac6:	f7fd fd1f 	bl	9000e508 <vListInsert>
	return xProcessTimerNow;
90010aca:	e6f7      	b.n	900108bc <prvTimerTask+0x60>
90010acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ad0:	f383 8811 	msr	BASEPRI, r3
90010ad4:	f3bf 8f6f 	isb	sy
90010ad8:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010adc:	e7fe      	b.n	90010adc <prvTimerTask+0x280>
90010ade:	bf00      	nop
90010ae0:	2402180c 	.word	0x2402180c
90010ae4:	240217fc 	.word	0x240217fc
90010ae8:	24021804 	.word	0x24021804
90010aec:	24021808 	.word	0x24021808

90010af0 <xTimerCreateTimerTask>:
{
90010af0:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90010af2:	4c23      	ldr	r4, [pc, #140]	@ (90010b80 <xTimerCreateTimerTask+0x90>)
{
90010af4:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
90010af6:	f7fd fd9d 	bl	9000e634 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90010afa:	6825      	ldr	r5, [r4, #0]
90010afc:	b335      	cbz	r5, 90010b4c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90010afe:	f7fd fdbb 	bl	9000e678 <vPortExitCritical>
	if( xTimerQueue != NULL )
90010b02:	6823      	ldr	r3, [r4, #0]
90010b04:	b1cb      	cbz	r3, 90010b3a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90010b06:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010b08:	aa07      	add	r2, sp, #28
90010b0a:	a906      	add	r1, sp, #24
90010b0c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010b0e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010b10:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010b14:	f7fd fba2 	bl	9000e25c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010b18:	4623      	mov	r3, r4
90010b1a:	9a07      	ldr	r2, [sp, #28]
90010b1c:	9500      	str	r5, [sp, #0]
90010b1e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90010b22:	e9cd 1001 	strd	r1, r0, [sp, #4]
90010b26:	4917      	ldr	r1, [pc, #92]	@ (90010b84 <xTimerCreateTimerTask+0x94>)
90010b28:	4817      	ldr	r0, [pc, #92]	@ (90010b88 <xTimerCreateTimerTask+0x98>)
90010b2a:	f7ff f9c7 	bl	9000febc <xTaskCreateStatic>
90010b2e:	4b17      	ldr	r3, [pc, #92]	@ (90010b8c <xTimerCreateTimerTask+0x9c>)
90010b30:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90010b32:	b110      	cbz	r0, 90010b3a <xTimerCreateTimerTask+0x4a>
}
90010b34:	2001      	movs	r0, #1
90010b36:	b009      	add	sp, #36	@ 0x24
90010b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010b3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010b3e:	f383 8811 	msr	BASEPRI, r3
90010b42:	f3bf 8f6f 	isb	sy
90010b46:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90010b4a:	e7fe      	b.n	90010b4a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90010b4c:	4f10      	ldr	r7, [pc, #64]	@ (90010b90 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90010b4e:	4e11      	ldr	r6, [pc, #68]	@ (90010b94 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90010b50:	4638      	mov	r0, r7
90010b52:	f7fd fcbb 	bl	9000e4cc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90010b56:	4630      	mov	r0, r6
90010b58:	f7fd fcb8 	bl	9000e4cc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90010b5c:	4a0e      	ldr	r2, [pc, #56]	@ (90010b98 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010b5e:	9500      	str	r5, [sp, #0]
90010b60:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90010b62:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010b64:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90010b66:	4a0d      	ldr	r2, [pc, #52]	@ (90010b9c <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010b68:	4b0d      	ldr	r3, [pc, #52]	@ (90010ba0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90010b6a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010b6c:	4a0d      	ldr	r2, [pc, #52]	@ (90010ba4 <xTimerCreateTimerTask+0xb4>)
90010b6e:	f7fd fefb 	bl	9000e968 <xQueueGenericCreateStatic>
90010b72:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90010b74:	2800      	cmp	r0, #0
90010b76:	d0c2      	beq.n	90010afe <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90010b78:	490b      	ldr	r1, [pc, #44]	@ (90010ba8 <xTimerCreateTimerTask+0xb8>)
90010b7a:	f7fe fe37 	bl	9000f7ec <vQueueAddToRegistry>
90010b7e:	e7be      	b.n	90010afe <xTimerCreateTimerTask+0xe>
90010b80:	24021804 	.word	0x24021804
90010b84:	9002ca88 	.word	0x9002ca88
90010b88:	9001085d 	.word	0x9001085d
90010b8c:	24021800 	.word	0x24021800
90010b90:	24021824 	.word	0x24021824
90010b94:	24021810 	.word	0x24021810
90010b98:	2402180c 	.word	0x2402180c
90010b9c:	24021808 	.word	0x24021808
90010ba0:	2402170c 	.word	0x2402170c
90010ba4:	2402175c 	.word	0x2402175c
90010ba8:	9002ca80 	.word	0x9002ca80

90010bac <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90010bac:	8880      	ldrh	r0, [r0, #4]
90010bae:	4770      	bx	lr

90010bb0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010bb0:	b570      	push	{r4, r5, r6, lr}
90010bb2:	6803      	ldr	r3, [r0, #0]
90010bb4:	460c      	mov	r4, r1
90010bb6:	2100      	movs	r1, #0
90010bb8:	4605      	mov	r5, r0
90010bba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010bbc:	4798      	blx	r3
90010bbe:	4606      	mov	r6, r0
90010bc0:	682b      	ldr	r3, [r5, #0]
90010bc2:	4628      	mov	r0, r5
90010bc4:	1ba4      	subs	r4, r4, r6
90010bc6:	6a1b      	ldr	r3, [r3, #32]
90010bc8:	b2a4      	uxth	r4, r4
90010bca:	4798      	blx	r3
90010bcc:	fbb4 f0f0 	udiv	r0, r4, r0
90010bd0:	bd70      	pop	{r4, r5, r6, pc}

90010bd2 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010bd2:	2300      	movs	r3, #0
90010bd4:	8083      	strh	r3, [r0, #4]
90010bd6:	4770      	bx	lr

90010bd8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90010bd8:	b510      	push	{r4, lr}
90010bda:	6803      	ldr	r3, [r0, #0]
90010bdc:	4604      	mov	r4, r0
90010bde:	8881      	ldrh	r1, [r0, #4]
90010be0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010be2:	4798      	blx	r3
90010be4:	88a3      	ldrh	r3, [r4, #4]
90010be6:	3301      	adds	r3, #1
90010be8:	80a3      	strh	r3, [r4, #4]
90010bea:	bd10      	pop	{r4, pc}

90010bec <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90010bec:	6803      	ldr	r3, [r0, #0]
90010bee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010bf0:	4718      	bx	r3

90010bf2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010bf2:	4770      	bx	lr

90010bf4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010bf4:	4a02      	ldr	r2, [pc, #8]	@ (90010c00 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90010bf6:	6002      	str	r2, [r0, #0]
90010bf8:	2200      	movs	r2, #0
90010bfa:	8082      	strh	r2, [r0, #4]
90010bfc:	4770      	bx	lr
90010bfe:	bf00      	nop
90010c00:	9002d3d0 	.word	0x9002d3d0

90010c04 <_ZN8touchgfx9Container13getFirstChildEv>:
90010c04:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90010c06:	4770      	bx	lr

90010c08 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90010c08:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010c0a:	2000      	movs	r0, #0
90010c0c:	b12b      	cbz	r3, 90010c1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010c0e:	b920      	cbnz	r0, 90010c1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010c10:	1a5a      	subs	r2, r3, r1
90010c12:	699b      	ldr	r3, [r3, #24]
90010c14:	4250      	negs	r0, r2
90010c16:	4150      	adcs	r0, r2
90010c18:	e7f8      	b.n	90010c0c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90010c1a:	4770      	bx	lr

90010c1c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010c1c:	2300      	movs	r3, #0
90010c1e:	6148      	str	r0, [r1, #20]
90010c20:	618b      	str	r3, [r1, #24]
90010c22:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010c24:	b913      	cbnz	r3, 90010c2c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010c26:	6281      	str	r1, [r0, #40]	@ 0x28
90010c28:	4770      	bx	lr
90010c2a:	4613      	mov	r3, r2
90010c2c:	699a      	ldr	r2, [r3, #24]
90010c2e:	2a00      	cmp	r2, #0
90010c30:	d1fb      	bne.n	90010c2a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010c32:	6199      	str	r1, [r3, #24]
90010c34:	4770      	bx	lr

90010c36 <_ZN8touchgfx9Container9removeAllEv>:
90010c36:	2200      	movs	r2, #0
90010c38:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010c3a:	b123      	cbz	r3, 90010c46 <_ZN8touchgfx9Container9removeAllEv+0x10>
90010c3c:	6999      	ldr	r1, [r3, #24]
90010c3e:	6281      	str	r1, [r0, #40]	@ 0x28
90010c40:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010c44:	e7f8      	b.n	90010c38 <_ZN8touchgfx9Container9removeAllEv+0x2>
90010c46:	4770      	bx	lr

90010c48 <_ZN8touchgfx9Container6unlinkEv>:
90010c48:	2300      	movs	r3, #0
90010c4a:	6283      	str	r3, [r0, #40]	@ 0x28
90010c4c:	4770      	bx	lr

90010c4e <_ZNK8touchgfx9Container12getSolidRectEv>:
90010c4e:	2200      	movs	r2, #0
90010c50:	8002      	strh	r2, [r0, #0]
90010c52:	8042      	strh	r2, [r0, #2]
90010c54:	8082      	strh	r2, [r0, #4]
90010c56:	80c2      	strh	r2, [r0, #6]
90010c58:	4770      	bx	lr

90010c5a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90010c5a:	b570      	push	{r4, r5, r6, lr}
90010c5c:	460d      	mov	r5, r1
90010c5e:	4616      	mov	r6, r2
90010c60:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010c62:	b13c      	cbz	r4, 90010c74 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90010c64:	6823      	ldr	r3, [r4, #0]
90010c66:	4620      	mov	r0, r4
90010c68:	4632      	mov	r2, r6
90010c6a:	4629      	mov	r1, r5
90010c6c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010c6e:	4798      	blx	r3
90010c70:	69a4      	ldr	r4, [r4, #24]
90010c72:	e7f6      	b.n	90010c62 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90010c74:	bd70      	pop	{r4, r5, r6, pc}

90010c76 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90010c76:	b538      	push	{r3, r4, r5, lr}
90010c78:	460d      	mov	r5, r1
90010c7a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010c7c:	b134      	cbz	r4, 90010c8c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90010c7e:	682b      	ldr	r3, [r5, #0]
90010c80:	4621      	mov	r1, r4
90010c82:	4628      	mov	r0, r5
90010c84:	689b      	ldr	r3, [r3, #8]
90010c86:	4798      	blx	r3
90010c88:	69a4      	ldr	r4, [r4, #24]
90010c8a:	e7f7      	b.n	90010c7c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90010c8c:	bd38      	pop	{r3, r4, r5, pc}

90010c8e <_ZN8touchgfx9ContainerD1Ev>:
90010c8e:	4770      	bx	lr

90010c90 <_ZN8touchgfx9ContainerD0Ev>:
90010c90:	b510      	push	{r4, lr}
90010c92:	4604      	mov	r4, r0
90010c94:	212c      	movs	r1, #44	@ 0x2c
90010c96:	f018 fd4b 	bl	90029730 <_ZdlPvj>
90010c9a:	4620      	mov	r0, r4
90010c9c:	bd10      	pop	{r4, pc}

90010c9e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90010c9e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010ca0:	b19b      	cbz	r3, 90010cca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010ca2:	428b      	cmp	r3, r1
90010ca4:	d109      	bne.n	90010cba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010ca6:	699a      	ldr	r2, [r3, #24]
90010ca8:	2100      	movs	r1, #0
90010caa:	6159      	str	r1, [r3, #20]
90010cac:	6282      	str	r2, [r0, #40]	@ 0x28
90010cae:	b902      	cbnz	r2, 90010cb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010cb0:	4770      	bx	lr
90010cb2:	6199      	str	r1, [r3, #24]
90010cb4:	4770      	bx	lr
90010cb6:	4613      	mov	r3, r2
90010cb8:	b13a      	cbz	r2, 90010cca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010cba:	699a      	ldr	r2, [r3, #24]
90010cbc:	428a      	cmp	r2, r1
90010cbe:	d1fa      	bne.n	90010cb6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010cc0:	698a      	ldr	r2, [r1, #24]
90010cc2:	619a      	str	r2, [r3, #24]
90010cc4:	2300      	movs	r3, #0
90010cc6:	e9c1 3305 	strd	r3, r3, [r1, #20]
90010cca:	4770      	bx	lr

90010ccc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010ccc:	b410      	push	{r4}
90010cce:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010cd0:	4604      	mov	r4, r0
90010cd2:	b92b      	cbnz	r3, 90010ce0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010cd4:	6803      	ldr	r3, [r0, #0]
90010cd6:	4611      	mov	r1, r2
90010cd8:	f85d 4b04 	ldr.w	r4, [sp], #4
90010cdc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90010cde:	4718      	bx	r3
90010ce0:	b941      	cbnz	r1, 90010cf4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010ce2:	6193      	str	r3, [r2, #24]
90010ce4:	6282      	str	r2, [r0, #40]	@ 0x28
90010ce6:	6154      	str	r4, [r2, #20]
90010ce8:	f85d 4b04 	ldr.w	r4, [sp], #4
90010cec:	4770      	bx	lr
90010cee:	4603      	mov	r3, r0
90010cf0:	2800      	cmp	r0, #0
90010cf2:	d0f9      	beq.n	90010ce8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010cf4:	4299      	cmp	r1, r3
90010cf6:	6998      	ldr	r0, [r3, #24]
90010cf8:	d1f9      	bne.n	90010cee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90010cfa:	6190      	str	r0, [r2, #24]
90010cfc:	618a      	str	r2, [r1, #24]
90010cfe:	e7f2      	b.n	90010ce6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010d00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010d04:	461f      	mov	r7, r3
90010d06:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90010d0a:	460d      	mov	r5, r1
90010d0c:	4616      	mov	r6, r2
90010d0e:	b103      	cbz	r3, 90010d12 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010d10:	6038      	str	r0, [r7, #0]
90010d12:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010d14:	b314      	cbz	r4, 90010d5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90010d16:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010d1a:	b1eb      	cbz	r3, 90010d58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010d1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010d20:	428d      	cmp	r5, r1
90010d22:	db19      	blt.n	90010d58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010d24:	b289      	uxth	r1, r1
90010d26:	8923      	ldrh	r3, [r4, #8]
90010d28:	440b      	add	r3, r1
90010d2a:	b21b      	sxth	r3, r3
90010d2c:	429d      	cmp	r5, r3
90010d2e:	da13      	bge.n	90010d58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010d30:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010d34:	4296      	cmp	r6, r2
90010d36:	db0f      	blt.n	90010d58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010d38:	b292      	uxth	r2, r2
90010d3a:	8963      	ldrh	r3, [r4, #10]
90010d3c:	4413      	add	r3, r2
90010d3e:	b21b      	sxth	r3, r3
90010d40:	429e      	cmp	r6, r3
90010d42:	da09      	bge.n	90010d58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010d44:	6823      	ldr	r3, [r4, #0]
90010d46:	1ab2      	subs	r2, r6, r2
90010d48:	1a69      	subs	r1, r5, r1
90010d4a:	4620      	mov	r0, r4
90010d4c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90010d50:	b212      	sxth	r2, r2
90010d52:	463b      	mov	r3, r7
90010d54:	b209      	sxth	r1, r1
90010d56:	47c0      	blx	r8
90010d58:	69a4      	ldr	r4, [r4, #24]
90010d5a:	e7db      	b.n	90010d14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90010d5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010d60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90010d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010d64:	4c6d      	ldr	r4, [pc, #436]	@ (90010f1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90010d66:	b0a1      	sub	sp, #132	@ 0x84
90010d68:	4606      	mov	r6, r0
90010d6a:	6824      	ldr	r4, [r4, #0]
90010d6c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90010d6e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90010d72:	2400      	movs	r4, #0
90010d74:	9303      	str	r3, [sp, #12]
90010d76:	802c      	strh	r4, [r5, #0]
90010d78:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
90010d7a:	802c      	strh	r4, [r5, #0]
90010d7c:	601c      	str	r4, [r3, #0]
90010d7e:	e9cd 1201 	strd	r1, r2, [sp, #4]
90010d82:	f7ff ffbd 	bl	90010d00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010d86:	f1b9 0f03 	cmp.w	r9, #3
90010d8a:	f340 80c1 	ble.w	90010f10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90010d8e:	4631      	mov	r1, r6
90010d90:	a80c      	add	r0, sp, #48	@ 0x30
90010d92:	f007 fc53 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010d96:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90010d9a:	9306      	str	r3, [sp, #24]
90010d9c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90010da0:	9307      	str	r3, [sp, #28]
90010da2:	9b03      	ldr	r3, [sp, #12]
90010da4:	f8d3 a000 	ldr.w	sl, [r3]
90010da8:	f1ba 0f00 	cmp.w	sl, #0
90010dac:	f000 80b3 	beq.w	90010f16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010db0:	4651      	mov	r1, sl
90010db2:	a810      	add	r0, sp, #64	@ 0x40
90010db4:	f007 fc42 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010db8:	2002      	movs	r0, #2
90010dba:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90010dbe:	9b01      	ldr	r3, [sp, #4]
90010dc0:	9a06      	ldr	r2, [sp, #24]
90010dc2:	fb91 f1f0 	sdiv	r1, r1, r0
90010dc6:	189d      	adds	r5, r3, r2
90010dc8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90010dcc:	9a07      	ldr	r2, [sp, #28]
90010dce:	4419      	add	r1, r3
90010dd0:	9b02      	ldr	r3, [sp, #8]
90010dd2:	4413      	add	r3, r2
90010dd4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90010dd8:	1a6d      	subs	r5, r5, r1
90010dda:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90010dde:	fb92 f2f0 	sdiv	r2, r2, r0
90010de2:	440a      	add	r2, r1
90010de4:	1a9b      	subs	r3, r3, r2
90010de6:	435b      	muls	r3, r3
90010de8:	fb05 3505 	mla	r5, r5, r5, r3
90010dec:	4f4c      	ldr	r7, [pc, #304]	@ (90010f20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010dee:	ac10      	add	r4, sp, #64	@ 0x40
90010df0:	f1b9 0f0c 	cmp.w	r9, #12
90010df4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010df6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010df8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010dfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010dfc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010dfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010e00:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010e04:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90010e08:	f04f 0303 	mov.w	r3, #3
90010e0c:	bfd8      	it	le
90010e0e:	f109 32ff 	addle.w	r2, r9, #4294967295
90010e12:	f04f 0400 	mov.w	r4, #0
90010e16:	f8cd 9000 	str.w	r9, [sp]
90010e1a:	bfcc      	ite	gt
90010e1c:	4698      	movgt	r8, r3
90010e1e:	fb92 f8f3 	sdivle	r8, r2, r3
90010e22:	1c63      	adds	r3, r4, #1
90010e24:	aa10      	add	r2, sp, #64	@ 0x40
90010e26:	f004 0401 	and.w	r4, r4, #1
90010e2a:	f04f 0b00 	mov.w	fp, #0
90010e2e:	9308      	str	r3, [sp, #32]
90010e30:	9b00      	ldr	r3, [sp, #0]
90010e32:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90010e36:	fb93 f3f8 	sdiv	r3, r3, r8
90010e3a:	3404      	adds	r4, #4
90010e3c:	b29b      	uxth	r3, r3
90010e3e:	9304      	str	r3, [sp, #16]
90010e40:	9a04      	ldr	r2, [sp, #16]
90010e42:	f854 3c04 	ldr.w	r3, [r4, #-4]
90010e46:	fb13 f302 	smulbb	r3, r3, r2
90010e4a:	9a01      	ldr	r2, [sp, #4]
90010e4c:	b29b      	uxth	r3, r3
90010e4e:	1899      	adds	r1, r3, r2
90010e50:	9305      	str	r3, [sp, #20]
90010e52:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010e56:	b209      	sxth	r1, r1
90010e58:	4299      	cmp	r1, r3
90010e5a:	db4d      	blt.n	90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e5c:	8932      	ldrh	r2, [r6, #8]
90010e5e:	4413      	add	r3, r2
90010e60:	b21b      	sxth	r3, r3
90010e62:	4299      	cmp	r1, r3
90010e64:	da48      	bge.n	90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e66:	9b04      	ldr	r3, [sp, #16]
90010e68:	6827      	ldr	r7, [r4, #0]
90010e6a:	fb17 f703 	smulbb	r7, r7, r3
90010e6e:	9b02      	ldr	r3, [sp, #8]
90010e70:	b2bf      	uxth	r7, r7
90010e72:	18fa      	adds	r2, r7, r3
90010e74:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010e78:	b212      	sxth	r2, r2
90010e7a:	429a      	cmp	r2, r3
90010e7c:	db3c      	blt.n	90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e7e:	8970      	ldrh	r0, [r6, #10]
90010e80:	4403      	add	r3, r0
90010e82:	b21b      	sxth	r3, r3
90010e84:	429a      	cmp	r2, r3
90010e86:	da37      	bge.n	90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e88:	2300      	movs	r3, #0
90010e8a:	4630      	mov	r0, r6
90010e8c:	930b      	str	r3, [sp, #44]	@ 0x2c
90010e8e:	ab0b      	add	r3, sp, #44	@ 0x2c
90010e90:	f7ff ff36 	bl	90010d00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010e94:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90010e96:	b37a      	cbz	r2, 90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e98:	4552      	cmp	r2, sl
90010e9a:	d02d      	beq.n	90010ef8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010e9c:	4611      	mov	r1, r2
90010e9e:	a80e      	add	r0, sp, #56	@ 0x38
90010ea0:	9209      	str	r2, [sp, #36]	@ 0x24
90010ea2:	f007 fbcb 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010ea6:	f04f 0e02 	mov.w	lr, #2
90010eaa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90010eae:	9a06      	ldr	r2, [sp, #24]
90010eb0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010eb4:	9b01      	ldr	r3, [sp, #4]
90010eb6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90010eba:	4413      	add	r3, r2
90010ebc:	9a07      	ldr	r2, [sp, #28]
90010ebe:	fb91 f1fe 	sdiv	r1, r1, lr
90010ec2:	fb9c fcfe 	sdiv	ip, ip, lr
90010ec6:	4401      	add	r1, r0
90010ec8:	1a58      	subs	r0, r3, r1
90010eca:	9b02      	ldr	r3, [sp, #8]
90010ecc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010ed0:	4413      	add	r3, r2
90010ed2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010ed4:	448c      	add	ip, r1
90010ed6:	eba3 030c 	sub.w	r3, r3, ip
90010eda:	435b      	muls	r3, r3
90010edc:	fb00 3300 	mla	r3, r0, r0, r3
90010ee0:	42ab      	cmp	r3, r5
90010ee2:	d208      	bcs.n	90010ef6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010ee4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90010ee6:	461d      	mov	r5, r3
90010ee8:	9803      	ldr	r0, [sp, #12]
90010eea:	6001      	str	r1, [r0, #0]
90010eec:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90010eee:	9805      	ldr	r0, [sp, #20]
90010ef0:	8008      	strh	r0, [r1, #0]
90010ef2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010ef4:	800f      	strh	r7, [r1, #0]
90010ef6:	4692      	mov	sl, r2
90010ef8:	f10b 0b01 	add.w	fp, fp, #1
90010efc:	3408      	adds	r4, #8
90010efe:	f1bb 0f04 	cmp.w	fp, #4
90010f02:	d19d      	bne.n	90010e40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010f04:	9b00      	ldr	r3, [sp, #0]
90010f06:	9c08      	ldr	r4, [sp, #32]
90010f08:	444b      	add	r3, r9
90010f0a:	4544      	cmp	r4, r8
90010f0c:	9300      	str	r3, [sp, #0]
90010f0e:	d188      	bne.n	90010e22 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010f10:	b021      	add	sp, #132	@ 0x84
90010f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010f16:	f04f 35ff 	mov.w	r5, #4294967295
90010f1a:	e767      	b.n	90010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010f1c:	24021844 	.word	0x24021844
90010f20:	9002af58 	.word	0x9002af58

90010f24 <_ZN8touchgfx4RectaNERKS0_>:
90010f24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010f28:	f9b1 7000 	ldrsh.w	r7, [r1]
90010f2c:	888c      	ldrh	r4, [r1, #4]
90010f2e:	f9b0 9000 	ldrsh.w	r9, [r0]
90010f32:	443c      	add	r4, r7
90010f34:	b2a4      	uxth	r4, r4
90010f36:	fa0f f884 	sxth.w	r8, r4
90010f3a:	45c1      	cmp	r9, r8
90010f3c:	da2f      	bge.n	90010f9e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010f3e:	8882      	ldrh	r2, [r0, #4]
90010f40:	444a      	add	r2, r9
90010f42:	b292      	uxth	r2, r2
90010f44:	fa0f fe82 	sxth.w	lr, r2
90010f48:	4577      	cmp	r7, lr
90010f4a:	da28      	bge.n	90010f9e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010f4c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90010f50:	88cb      	ldrh	r3, [r1, #6]
90010f52:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90010f56:	442b      	add	r3, r5
90010f58:	b21b      	sxth	r3, r3
90010f5a:	429e      	cmp	r6, r3
90010f5c:	da1f      	bge.n	90010f9e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010f5e:	88c3      	ldrh	r3, [r0, #6]
90010f60:	4433      	add	r3, r6
90010f62:	b29b      	uxth	r3, r3
90010f64:	fa0f fc83 	sxth.w	ip, r3
90010f68:	4565      	cmp	r5, ip
90010f6a:	da18      	bge.n	90010f9e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010f6c:	454f      	cmp	r7, r9
90010f6e:	bfb8      	it	lt
90010f70:	464f      	movlt	r7, r9
90010f72:	42b5      	cmp	r5, r6
90010f74:	bfb8      	it	lt
90010f76:	4635      	movlt	r5, r6
90010f78:	45f0      	cmp	r8, lr
90010f7a:	bfd8      	it	le
90010f7c:	4622      	movle	r2, r4
90010f7e:	1bd2      	subs	r2, r2, r7
90010f80:	8082      	strh	r2, [r0, #4]
90010f82:	884a      	ldrh	r2, [r1, #2]
90010f84:	88c9      	ldrh	r1, [r1, #6]
90010f86:	8007      	strh	r7, [r0, #0]
90010f88:	440a      	add	r2, r1
90010f8a:	8045      	strh	r5, [r0, #2]
90010f8c:	b292      	uxth	r2, r2
90010f8e:	b211      	sxth	r1, r2
90010f90:	458c      	cmp	ip, r1
90010f92:	bfa8      	it	ge
90010f94:	4613      	movge	r3, r2
90010f96:	1b5b      	subs	r3, r3, r5
90010f98:	80c3      	strh	r3, [r0, #6]
90010f9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010f9e:	2300      	movs	r3, #0
90010fa0:	8003      	strh	r3, [r0, #0]
90010fa2:	8043      	strh	r3, [r0, #2]
90010fa4:	8083      	strh	r3, [r0, #4]
90010fa6:	80c3      	strh	r3, [r0, #6]
90010fa8:	e7f7      	b.n	90010f9a <_ZN8touchgfx4RectaNERKS0_+0x76>

90010faa <_ZNK8touchgfx4Rect7isEmptyEv>:
90010faa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010fae:	2b00      	cmp	r3, #0
90010fb0:	dd06      	ble.n	90010fc0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010fb2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90010fb6:	2800      	cmp	r0, #0
90010fb8:	bfcc      	ite	gt
90010fba:	2000      	movgt	r0, #0
90010fbc:	2001      	movle	r0, #1
90010fbe:	4770      	bx	lr
90010fc0:	2001      	movs	r0, #1
90010fc2:	4770      	bx	lr

90010fc4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010fc8:	2300      	movs	r3, #0
90010fca:	4604      	mov	r4, r0
90010fcc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010fce:	8003      	strh	r3, [r0, #0]
90010fd0:	8043      	strh	r3, [r0, #2]
90010fd2:	8083      	strh	r3, [r0, #4]
90010fd4:	80c3      	strh	r3, [r0, #6]
90010fd6:	2d00      	cmp	r5, #0
90010fd8:	d040      	beq.n	9001105c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90010fda:	1d28      	adds	r0, r5, #4
90010fdc:	f7ff ffe5 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90010fe0:	b988      	cbnz	r0, 90011006 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010fe2:	4620      	mov	r0, r4
90010fe4:	f7ff ffe1 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90010fe8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010fec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010ff0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010ff4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90010ff8:	b138      	cbz	r0, 9001100a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90010ffa:	8022      	strh	r2, [r4, #0]
90010ffc:	8063      	strh	r3, [r4, #2]
90010ffe:	f8a4 e004 	strh.w	lr, [r4, #4]
90011002:	f8a4 c006 	strh.w	ip, [r4, #6]
90011006:	69ad      	ldr	r5, [r5, #24]
90011008:	e7e5      	b.n	90010fd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001100a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001100e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90011012:	4290      	cmp	r0, r2
90011014:	4607      	mov	r7, r0
90011016:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001101a:	460e      	mov	r6, r1
9001101c:	bfa8      	it	ge
9001101e:	4617      	movge	r7, r2
90011020:	4299      	cmp	r1, r3
90011022:	4472      	add	r2, lr
90011024:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011028:	bfa8      	it	ge
9001102a:	461e      	movge	r6, r3
9001102c:	4440      	add	r0, r8
9001102e:	4471      	add	r1, lr
90011030:	4463      	add	r3, ip
90011032:	b200      	sxth	r0, r0
90011034:	8027      	strh	r7, [r4, #0]
90011036:	b212      	sxth	r2, r2
90011038:	8066      	strh	r6, [r4, #2]
9001103a:	b209      	sxth	r1, r1
9001103c:	b21b      	sxth	r3, r3
9001103e:	4290      	cmp	r0, r2
90011040:	bfac      	ite	ge
90011042:	ebc7 0200 	rsbge	r2, r7, r0
90011046:	ebc7 0202 	rsblt	r2, r7, r2
9001104a:	4299      	cmp	r1, r3
9001104c:	bfac      	ite	ge
9001104e:	ebc6 0301 	rsbge	r3, r6, r1
90011052:	ebc6 0303 	rsblt	r3, r6, r3
90011056:	80a2      	strh	r2, [r4, #4]
90011058:	80e3      	strh	r3, [r4, #6]
9001105a:	e7d4      	b.n	90011006 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001105c:	4620      	mov	r0, r4
9001105e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011062 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90011062:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90011066:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001106a:	b383      	cbz	r3, 900110ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001106c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001106e:	b374      	cbz	r4, 900110ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90011070:	f9b1 5000 	ldrsh.w	r5, [r1]
90011074:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90011078:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9001107c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90011080:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011084:	b303      	cbz	r3, 900110c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90011086:	4668      	mov	r0, sp
90011088:	1d21      	adds	r1, r4, #4
9001108a:	f8ad 5000 	strh.w	r5, [sp]
9001108e:	f8ad 6002 	strh.w	r6, [sp, #2]
90011092:	f8ad 7004 	strh.w	r7, [sp, #4]
90011096:	f8ad 8006 	strh.w	r8, [sp, #6]
9001109a:	f7ff ff43 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
9001109e:	4668      	mov	r0, sp
900110a0:	f7ff ff83 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
900110a4:	b980      	cbnz	r0, 900110c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900110a6:	f8bd 3000 	ldrh.w	r3, [sp]
900110aa:	4669      	mov	r1, sp
900110ac:	88a2      	ldrh	r2, [r4, #4]
900110ae:	4620      	mov	r0, r4
900110b0:	1a9b      	subs	r3, r3, r2
900110b2:	88e2      	ldrh	r2, [r4, #6]
900110b4:	f8ad 3000 	strh.w	r3, [sp]
900110b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900110bc:	1a9b      	subs	r3, r3, r2
900110be:	f8ad 3002 	strh.w	r3, [sp, #2]
900110c2:	6823      	ldr	r3, [r4, #0]
900110c4:	689b      	ldr	r3, [r3, #8]
900110c6:	4798      	blx	r3
900110c8:	69a4      	ldr	r4, [r4, #24]
900110ca:	2c00      	cmp	r4, #0
900110cc:	d1d8      	bne.n	90011080 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
900110ce:	b002      	add	sp, #8
900110d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900110d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
900110d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900110d6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900110da:	460d      	mov	r5, r1
900110dc:	4616      	mov	r6, r2
900110de:	b323      	cbz	r3, 9001112a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900110e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900110e2:	b314      	cbz	r4, 9001112a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900110e4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900110e8:	b1eb      	cbz	r3, 90011126 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900110ea:	6828      	ldr	r0, [r5, #0]
900110ec:	466b      	mov	r3, sp
900110ee:	6869      	ldr	r1, [r5, #4]
900110f0:	c303      	stmia	r3!, {r0, r1}
900110f2:	4668      	mov	r0, sp
900110f4:	1d21      	adds	r1, r4, #4
900110f6:	f7ff ff15 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
900110fa:	4668      	mov	r0, sp
900110fc:	f7ff ff55 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90011100:	b988      	cbnz	r0, 90011126 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90011102:	f8bd 3000 	ldrh.w	r3, [sp]
90011106:	4669      	mov	r1, sp
90011108:	88a2      	ldrh	r2, [r4, #4]
9001110a:	4620      	mov	r0, r4
9001110c:	1a9b      	subs	r3, r3, r2
9001110e:	88e2      	ldrh	r2, [r4, #6]
90011110:	f8ad 3000 	strh.w	r3, [sp]
90011114:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011118:	1a9b      	subs	r3, r3, r2
9001111a:	4632      	mov	r2, r6
9001111c:	f8ad 3002 	strh.w	r3, [sp, #2]
90011120:	6823      	ldr	r3, [r4, #0]
90011122:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90011124:	4798      	blx	r3
90011126:	69a4      	ldr	r4, [r4, #24]
90011128:	e7db      	b.n	900110e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001112a:	b002      	add	sp, #8
9001112c:	bd70      	pop	{r4, r5, r6, pc}

9001112e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001112e:	6803      	ldr	r3, [r0, #0]
90011130:	b513      	push	{r0, r1, r4, lr}
90011132:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
90011136:	2300      	movs	r3, #0
90011138:	e9cd 3300 	strd	r3, r3, [sp]
9001113c:	466b      	mov	r3, sp
9001113e:	47a0      	blx	r4
90011140:	b002      	add	sp, #8
90011142:	bd10      	pop	{r4, pc}

90011144 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011144:	2301      	movs	r3, #1
90011146:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001114a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001114e:	4770      	bx	lr

90011150 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90011150:	2301      	movs	r3, #1
90011152:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90011156:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001115a:	4770      	bx	lr

9001115c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9001115c:	6843      	ldr	r3, [r0, #4]
9001115e:	2201      	movs	r2, #1
90011160:	725a      	strb	r2, [r3, #9]
90011162:	6840      	ldr	r0, [r0, #4]
90011164:	6803      	ldr	r3, [r0, #0]
90011166:	691b      	ldr	r3, [r3, #16]
90011168:	4718      	bx	r3

9001116a <_ZN8touchgfx3HAL8flushDMAEv>:
9001116a:	6840      	ldr	r0, [r0, #4]
9001116c:	6803      	ldr	r3, [r0, #0]
9001116e:	689b      	ldr	r3, [r3, #8]
90011170:	4718      	bx	r3

90011172 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90011172:	b530      	push	{r4, r5, lr}
90011174:	b08b      	sub	sp, #44	@ 0x2c
90011176:	6804      	ldr	r4, [r0, #0]
90011178:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9001117c:	9509      	str	r5, [sp, #36]	@ 0x24
9001117e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90011182:	9508      	str	r5, [sp, #32]
90011184:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90011188:	9507      	str	r5, [sp, #28]
9001118a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9001118e:	9506      	str	r5, [sp, #24]
90011190:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90011194:	9505      	str	r5, [sp, #20]
90011196:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001119a:	9504      	str	r5, [sp, #16]
9001119c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900111a0:	9503      	str	r5, [sp, #12]
900111a2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900111a6:	9502      	str	r5, [sp, #8]
900111a8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
900111ac:	e9cd 3500 	strd	r3, r5, [sp]
900111b0:	4613      	mov	r3, r2
900111b2:	6c24      	ldr	r4, [r4, #64]	@ 0x40
900111b4:	2200      	movs	r2, #0
900111b6:	47a0      	blx	r4
900111b8:	b00b      	add	sp, #44	@ 0x2c
900111ba:	bd30      	pop	{r4, r5, pc}

900111bc <_ZN8touchgfx3HAL10beginFrameEv>:
900111bc:	4b04      	ldr	r3, [pc, #16]	@ (900111d0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900111be:	781b      	ldrb	r3, [r3, #0]
900111c0:	b123      	cbz	r3, 900111cc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900111c2:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
900111c6:	f080 0001 	eor.w	r0, r0, #1
900111ca:	4770      	bx	lr
900111cc:	2001      	movs	r0, #1
900111ce:	4770      	bx	lr
900111d0:	24021842 	.word	0x24021842

900111d4 <_ZN8touchgfx3HAL8endFrameEv>:
900111d4:	b510      	push	{r4, lr}
900111d6:	4604      	mov	r4, r0
900111d8:	6840      	ldr	r0, [r0, #4]
900111da:	6803      	ldr	r3, [r0, #0]
900111dc:	689b      	ldr	r3, [r3, #8]
900111de:	4798      	blx	r3
900111e0:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
900111e4:	b113      	cbz	r3, 900111ec <_ZN8touchgfx3HAL8endFrameEv+0x18>
900111e6:	2301      	movs	r3, #1
900111e8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
900111ec:	bd10      	pop	{r4, pc}

900111ee <_ZN8touchgfx3HAL10initializeEv>:
900111ee:	b510      	push	{r4, lr}
900111f0:	4604      	mov	r4, r0
900111f2:	f7f1 f87f 	bl	900022f4 <_ZN8touchgfx10OSWrappers10initializeEv>
900111f6:	f7ef fd23 	bl	90000c40 <_ZN8touchgfx4GPIO4initEv>
900111fa:	6860      	ldr	r0, [r4, #4]
900111fc:	6803      	ldr	r3, [r0, #0]
900111fe:	68db      	ldr	r3, [r3, #12]
90011200:	4798      	blx	r3
90011202:	68e0      	ldr	r0, [r4, #12]
90011204:	6803      	ldr	r3, [r0, #0]
90011206:	689b      	ldr	r3, [r3, #8]
90011208:	4798      	blx	r3
9001120a:	6823      	ldr	r3, [r4, #0]
9001120c:	4620      	mov	r0, r4
9001120e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90011210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011214:	4718      	bx	r3
	...

90011218 <_ZN8touchgfx3HAL4tickEv>:
90011218:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001121a:	6803      	ldr	r3, [r0, #0]
9001121c:	4604      	mov	r4, r0
9001121e:	4d62      	ldr	r5, [pc, #392]	@ (900113a8 <_ZN8touchgfx3HAL4tickEv+0x190>)
90011220:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90011224:	4798      	blx	r3
90011226:	2800      	cmp	r0, #0
90011228:	f000 809e 	beq.w	90011368 <_ZN8touchgfx3HAL4tickEv+0x150>
9001122c:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90011230:	2b02      	cmp	r3, #2
90011232:	d002      	beq.n	9001123a <_ZN8touchgfx3HAL4tickEv+0x22>
90011234:	2001      	movs	r0, #1
90011236:	f7ef fd25 	bl	90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001123a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9001123e:	2600      	movs	r6, #0
90011240:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90011244:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90011248:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
9001124c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90011250:	b133      	cbz	r3, 90011260 <_ZN8touchgfx3HAL4tickEv+0x48>
90011252:	6823      	ldr	r3, [r4, #0]
90011254:	4620      	mov	r0, r4
90011256:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
9001125a:	4798      	blx	r3
9001125c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90011260:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90011264:	2601      	movs	r6, #1
90011266:	6862      	ldr	r2, [r4, #4]
90011268:	f083 0301 	eor.w	r3, r3, #1
9001126c:	702e      	strb	r6, [r5, #0]
9001126e:	7253      	strb	r3, [r2, #9]
90011270:	f005 ff90 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
90011274:	6803      	ldr	r3, [r0, #0]
90011276:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011278:	4798      	blx	r3
9001127a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001127e:	b90b      	cbnz	r3, 90011284 <_ZN8touchgfx3HAL4tickEv+0x6c>
90011280:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90011284:	f005 ff86 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
90011288:	6803      	ldr	r3, [r0, #0]
9001128a:	695b      	ldr	r3, [r3, #20]
9001128c:	4798      	blx	r3
9001128e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90011290:	6803      	ldr	r3, [r0, #0]
90011292:	691b      	ldr	r3, [r3, #16]
90011294:	4798      	blx	r3
90011296:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001129a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9001129e:	3b01      	subs	r3, #1
900112a0:	b2db      	uxtb	r3, r3
900112a2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900112a6:	b10a      	cbz	r2, 900112ac <_ZN8touchgfx3HAL4tickEv+0x94>
900112a8:	2b00      	cmp	r3, #0
900112aa:	d1eb      	bne.n	90011284 <_ZN8touchgfx3HAL4tickEv+0x6c>
900112ac:	4a3f      	ldr	r2, [pc, #252]	@ (900113ac <_ZN8touchgfx3HAL4tickEv+0x194>)
900112ae:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
900112b2:	7813      	ldrb	r3, [r2, #0]
900112b4:	3301      	adds	r3, #1
900112b6:	b25b      	sxtb	r3, r3
900112b8:	4299      	cmp	r1, r3
900112ba:	7013      	strb	r3, [r2, #0]
900112bc:	dc10      	bgt.n	900112e0 <_ZN8touchgfx3HAL4tickEv+0xc8>
900112be:	2300      	movs	r3, #0
900112c0:	68e0      	ldr	r0, [r4, #12]
900112c2:	a902      	add	r1, sp, #8
900112c4:	7013      	strb	r3, [r2, #0]
900112c6:	aa03      	add	r2, sp, #12
900112c8:	6803      	ldr	r3, [r0, #0]
900112ca:	68db      	ldr	r3, [r3, #12]
900112cc:	4798      	blx	r3
900112ce:	6823      	ldr	r3, [r4, #0]
900112d0:	2800      	cmp	r0, #0
900112d2:	d059      	beq.n	90011388 <_ZN8touchgfx3HAL4tickEv+0x170>
900112d4:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
900112d8:	4620      	mov	r0, r4
900112da:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
900112de:	4798      	blx	r3
900112e0:	2300      	movs	r3, #0
900112e2:	6960      	ldr	r0, [r4, #20]
900112e4:	f88d 3007 	strb.w	r3, [sp, #7]
900112e8:	b158      	cbz	r0, 90011302 <_ZN8touchgfx3HAL4tickEv+0xea>
900112ea:	6803      	ldr	r3, [r0, #0]
900112ec:	f10d 0107 	add.w	r1, sp, #7
900112f0:	68db      	ldr	r3, [r3, #12]
900112f2:	4798      	blx	r3
900112f4:	b128      	cbz	r0, 90011302 <_ZN8touchgfx3HAL4tickEv+0xea>
900112f6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900112f8:	f89d 1007 	ldrb.w	r1, [sp, #7]
900112fc:	6803      	ldr	r3, [r0, #0]
900112fe:	68db      	ldr	r3, [r3, #12]
90011300:	4798      	blx	r3
90011302:	f104 001c 	add.w	r0, r4, #28
90011306:	f017 fbf7 	bl	90028af8 <_ZN8touchgfx8Gestures4tickEv>
9001130a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
9001130e:	b30b      	cbz	r3, 90011354 <_ZN8touchgfx3HAL4tickEv+0x13c>
90011310:	6920      	ldr	r0, [r4, #16]
90011312:	6803      	ldr	r3, [r0, #0]
90011314:	691b      	ldr	r3, [r3, #16]
90011316:	4798      	blx	r3
90011318:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001131a:	4606      	mov	r6, r0
9001131c:	b903      	cbnz	r3, 90011320 <_ZN8touchgfx3HAL4tickEv+0x108>
9001131e:	6760      	str	r0, [r4, #116]	@ 0x74
90011320:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011322:	4a23      	ldr	r2, [pc, #140]	@ (900113b0 <_ZN8touchgfx3HAL4tickEv+0x198>)
90011324:	1af3      	subs	r3, r6, r3
90011326:	4293      	cmp	r3, r2
90011328:	d914      	bls.n	90011354 <_ZN8touchgfx3HAL4tickEv+0x13c>
9001132a:	6920      	ldr	r0, [r4, #16]
9001132c:	6803      	ldr	r3, [r0, #0]
9001132e:	699b      	ldr	r3, [r3, #24]
90011330:	4798      	blx	r3
90011332:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011334:	2264      	movs	r2, #100	@ 0x64
90011336:	1af3      	subs	r3, r6, r3
90011338:	fbb3 f3f2 	udiv	r3, r3, r2
9001133c:	fbb0 f0f3 	udiv	r0, r0, r3
90011340:	2800      	cmp	r0, #0
90011342:	dc26      	bgt.n	90011392 <_ZN8touchgfx3HAL4tickEv+0x17a>
90011344:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90011348:	6920      	ldr	r0, [r4, #16]
9001134a:	2100      	movs	r1, #0
9001134c:	6803      	ldr	r3, [r0, #0]
9001134e:	69db      	ldr	r3, [r3, #28]
90011350:	4798      	blx	r3
90011352:	6766      	str	r6, [r4, #116]	@ 0x74
90011354:	6823      	ldr	r3, [r4, #0]
90011356:	4620      	mov	r0, r4
90011358:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
9001135c:	4798      	blx	r3
9001135e:	f005 ff19 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
90011362:	6803      	ldr	r3, [r0, #0]
90011364:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011366:	4798      	blx	r3
90011368:	6823      	ldr	r3, [r4, #0]
9001136a:	4620      	mov	r0, r4
9001136c:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90011370:	4798      	blx	r3
90011372:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90011376:	2b02      	cmp	r3, #2
90011378:	d002      	beq.n	90011380 <_ZN8touchgfx3HAL4tickEv+0x168>
9001137a:	2001      	movs	r0, #1
9001137c:	f7ef fcac 	bl	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011380:	2300      	movs	r3, #0
90011382:	702b      	strb	r3, [r5, #0]
90011384:	b004      	add	sp, #16
90011386:	bd70      	pop	{r4, r5, r6, pc}
90011388:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
9001138c:	4620      	mov	r0, r4
9001138e:	4798      	blx	r3
90011390:	e7a6      	b.n	900112e0 <_ZN8touchgfx3HAL4tickEv+0xc8>
90011392:	2863      	cmp	r0, #99	@ 0x63
90011394:	bfcb      	itete	gt
90011396:	2300      	movgt	r3, #0
90011398:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
9001139c:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
900113a0:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
900113a4:	e7d0      	b.n	90011348 <_ZN8touchgfx3HAL4tickEv+0x130>
900113a6:	bf00      	nop
900113a8:	24021848 	.word	0x24021848
900113ac:	24021849 	.word	0x24021849
900113b0:	05f5e100 	.word	0x05f5e100

900113b4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900113b4:	b510      	push	{r4, lr}
900113b6:	4604      	mov	r4, r0
900113b8:	f7f0 ffce 	bl	90002358 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900113bc:	2200      	movs	r2, #0
900113be:	6863      	ldr	r3, [r4, #4]
900113c0:	729a      	strb	r2, [r3, #10]
900113c2:	bd10      	pop	{r4, pc}

900113c4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900113c4:	65c1      	str	r1, [r0, #92]	@ 0x5c
900113c6:	301c      	adds	r0, #28
900113c8:	f017 bb94 	b.w	90028af4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900113cc <_ZN8touchgfx3HAL5touchEll>:
900113cc:	b530      	push	{r4, r5, lr}
900113ce:	b087      	sub	sp, #28
900113d0:	4604      	mov	r4, r0
900113d2:	a804      	add	r0, sp, #16
900113d4:	e9cd 1204 	strd	r1, r2, [sp, #16]
900113d8:	f005 fca6 	bl	90016d28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900113dc:	9b04      	ldr	r3, [sp, #16]
900113de:	a906      	add	r1, sp, #24
900113e0:	a803      	add	r0, sp, #12
900113e2:	f8ad 300c 	strh.w	r3, [sp, #12]
900113e6:	9b05      	ldr	r3, [sp, #20]
900113e8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900113ec:	f005 fcee 	bl	90016dcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900113f0:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
900113f4:	f104 001c 	add.w	r0, r4, #28
900113f8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900113fc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011400:	b189      	cbz	r1, 90011426 <_ZN8touchgfx3HAL5touchEll+0x5a>
90011402:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
90011406:	9300      	str	r3, [sp, #0]
90011408:	4613      	mov	r3, r2
9001140a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
9001140e:	462a      	mov	r2, r5
90011410:	f017 fb80 	bl	90028b14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90011414:	b128      	cbz	r0, 90011422 <_ZN8touchgfx3HAL5touchEll+0x56>
90011416:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001141a:	6623      	str	r3, [r4, #96]	@ 0x60
9001141c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011420:	6663      	str	r3, [r4, #100]	@ 0x64
90011422:	b007      	add	sp, #28
90011424:	bd30      	pop	{r4, r5, pc}
90011426:	f017 fbb5 	bl	90028b94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001142a:	2301      	movs	r3, #1
9001142c:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90011430:	e7f1      	b.n	90011416 <_ZN8touchgfx3HAL5touchEll+0x4a>

90011432 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90011432:	b510      	push	{r4, lr}
90011434:	2b00      	cmp	r3, #0
90011436:	d046      	beq.n	900114c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011438:	ea81 0002 	eor.w	r0, r1, r2
9001143c:	07c4      	lsls	r4, r0, #31
9001143e:	d508      	bpl.n	90011452 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011440:	440b      	add	r3, r1
90011442:	3a01      	subs	r2, #1
90011444:	428b      	cmp	r3, r1
90011446:	d93e      	bls.n	900114c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011448:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001144c:	f801 0b01 	strb.w	r0, [r1], #1
90011450:	e7f8      	b.n	90011444 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90011452:	07d0      	lsls	r0, r2, #31
90011454:	bf42      	ittt	mi
90011456:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001145a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001145e:	f801 0b01 	strbmi.w	r0, [r1], #1
90011462:	2b01      	cmp	r3, #1
90011464:	d911      	bls.n	9001148a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011466:	ea81 0402 	eor.w	r4, r1, r2
9001146a:	4610      	mov	r0, r2
9001146c:	07a4      	lsls	r4, r4, #30
9001146e:	d022      	beq.n	900114b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011470:	f023 0401 	bic.w	r4, r3, #1
90011474:	440c      	add	r4, r1
90011476:	428c      	cmp	r4, r1
90011478:	4602      	mov	r2, r0
9001147a:	d904      	bls.n	90011486 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001147c:	8812      	ldrh	r2, [r2, #0]
9001147e:	3002      	adds	r0, #2
90011480:	f821 2b02 	strh.w	r2, [r1], #2
90011484:	e7f7      	b.n	90011476 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90011486:	f003 0301 	and.w	r3, r3, #1
9001148a:	f023 0003 	bic.w	r0, r3, #3
9001148e:	4408      	add	r0, r1
90011490:	4288      	cmp	r0, r1
90011492:	4614      	mov	r4, r2
90011494:	d904      	bls.n	900114a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90011496:	6824      	ldr	r4, [r4, #0]
90011498:	3204      	adds	r2, #4
9001149a:	f841 4b04 	str.w	r4, [r1], #4
9001149e:	e7f7      	b.n	90011490 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900114a0:	f003 0303 	and.w	r3, r3, #3
900114a4:	3a01      	subs	r2, #1
900114a6:	440b      	add	r3, r1
900114a8:	428b      	cmp	r3, r1
900114aa:	d90c      	bls.n	900114c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900114ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900114b0:	f801 0b01 	strb.w	r0, [r1], #1
900114b4:	e7f8      	b.n	900114a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900114b6:	0790      	lsls	r0, r2, #30
900114b8:	d0e7      	beq.n	9001148a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900114ba:	f832 0b02 	ldrh.w	r0, [r2], #2
900114be:	3b02      	subs	r3, #2
900114c0:	f821 0b02 	strh.w	r0, [r1], #2
900114c4:	e7e1      	b.n	9001148a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900114c6:	2001      	movs	r0, #1
900114c8:	bd10      	pop	{r4, pc}

900114ca <_ZN8touchgfx3HAL7noTouchEv>:
900114ca:	b510      	push	{r4, lr}
900114cc:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
900114d0:	4604      	mov	r4, r0
900114d2:	b153      	cbz	r3, 900114ea <_ZN8touchgfx3HAL7noTouchEv+0x20>
900114d4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
900114d8:	2101      	movs	r1, #1
900114da:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
900114de:	301c      	adds	r0, #28
900114e0:	f017 fb58 	bl	90028b94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900114e4:	2300      	movs	r3, #0
900114e6:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900114ea:	bd10      	pop	{r4, pc}

900114ec <_ZN8touchgfx8Drawable5setXYEss>:
900114ec:	b570      	push	{r4, r5, r6, lr}
900114ee:	6803      	ldr	r3, [r0, #0]
900114f0:	4604      	mov	r4, r0
900114f2:	4615      	mov	r5, r2
900114f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900114f6:	4798      	blx	r3
900114f8:	6823      	ldr	r3, [r4, #0]
900114fa:	4629      	mov	r1, r5
900114fc:	4620      	mov	r0, r4
900114fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011504:	4718      	bx	r3
	...

90011508 <_ZN8touchgfx3HAL3lcdEv>:
90011508:	4b04      	ldr	r3, [pc, #16]	@ (9001151c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001150a:	681b      	ldr	r3, [r3, #0]
9001150c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90011510:	b10a      	cbz	r2, 90011516 <_ZN8touchgfx3HAL3lcdEv+0xe>
90011512:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90011514:	b900      	cbnz	r0, 90011518 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011516:	6898      	ldr	r0, [r3, #8]
90011518:	4770      	bx	lr
9001151a:	bf00      	nop
9001151c:	24021844 	.word	0x24021844

90011520 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011520:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011524:	b085      	sub	sp, #20
90011526:	4604      	mov	r4, r0
90011528:	2000      	movs	r0, #0
9001152a:	4699      	mov	r9, r3
9001152c:	ad04      	add	r5, sp, #16
9001152e:	460f      	mov	r7, r1
90011530:	4690      	mov	r8, r2
90011532:	f845 0d04 	str.w	r0, [r5, #-4]!
90011536:	69a0      	ldr	r0, [r4, #24]
90011538:	6806      	ldr	r6, [r0, #0]
9001153a:	9501      	str	r5, [sp, #4]
9001153c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90011540:	9500      	str	r5, [sp, #0]
90011542:	6835      	ldr	r5, [r6, #0]
90011544:	47a8      	blx	r5
90011546:	4d10      	ldr	r5, [pc, #64]	@ (90011588 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011548:	4606      	mov	r6, r0
9001154a:	f8a5 9000 	strh.w	r9, [r5]
9001154e:	f7ff ffdb 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011552:	6803      	ldr	r3, [r0, #0]
90011554:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011556:	4798      	blx	r3
90011558:	b128      	cbz	r0, 90011566 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001155a:	2801      	cmp	r0, #1
9001155c:	d00b      	beq.n	90011576 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001155e:	4630      	mov	r0, r6
90011560:	b005      	add	sp, #20
90011562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011566:	882b      	ldrh	r3, [r5, #0]
90011568:	fb08 7203 	mla	r2, r8, r3, r7
9001156c:	9b03      	ldr	r3, [sp, #12]
9001156e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011572:	63e3      	str	r3, [r4, #60]	@ 0x3c
90011574:	e7f3      	b.n	9001155e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011576:	882a      	ldrh	r2, [r5, #0]
90011578:	9b03      	ldr	r3, [sp, #12]
9001157a:	fb08 7202 	mla	r2, r8, r2, r7
9001157e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011582:	1a9a      	subs	r2, r3, r2
90011584:	63e2      	str	r2, [r4, #60]	@ 0x3c
90011586:	e7ea      	b.n	9001155e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011588:	2402183e 	.word	0x2402183e

9001158c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
9001158c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001158e:	4b15      	ldr	r3, [pc, #84]	@ (900115e4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90011590:	460f      	mov	r7, r1
90011592:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
90011596:	4606      	mov	r6, r0
90011598:	881b      	ldrh	r3, [r3, #0]
9001159a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9001159c:	fb93 f4f4 	sdiv	r4, r3, r4
900115a0:	f7ff ffb2 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
900115a4:	6803      	ldr	r3, [r0, #0]
900115a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900115a8:	4798      	blx	r3
900115aa:	2801      	cmp	r0, #1
900115ac:	d00b      	beq.n	900115c6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
900115ae:	d303      	bcc.n	900115b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
900115b0:	2802      	cmp	r0, #2
900115b2:	d010      	beq.n	900115d6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
900115b4:	63f5      	str	r5, [r6, #60]	@ 0x3c
900115b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900115b8:	4b0b      	ldr	r3, [pc, #44]	@ (900115e8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
900115ba:	437c      	muls	r4, r7
900115bc:	8819      	ldrh	r1, [r3, #0]
900115be:	434c      	muls	r4, r1
900115c0:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
900115c4:	e7f6      	b.n	900115b4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
900115c6:	4b08      	ldr	r3, [pc, #32]	@ (900115e8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
900115c8:	437c      	muls	r4, r7
900115ca:	8819      	ldrh	r1, [r3, #0]
900115cc:	434c      	muls	r4, r1
900115ce:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900115d2:	1b2d      	subs	r5, r5, r4
900115d4:	e7ee      	b.n	900115b4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
900115d6:	4b04      	ldr	r3, [pc, #16]	@ (900115e8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
900115d8:	437c      	muls	r4, r7
900115da:	8819      	ldrh	r1, [r3, #0]
900115dc:	434c      	muls	r4, r1
900115de:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
900115e2:	e7e7      	b.n	900115b4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
900115e4:	24021840 	.word	0x24021840
900115e8:	2402183e 	.word	0x2402183e

900115ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
900115ec:	b5f0      	push	{r4, r5, r6, r7, lr}
900115ee:	b08b      	sub	sp, #44	@ 0x2c
900115f0:	4617      	mov	r7, r2
900115f2:	4604      	mov	r4, r0
900115f4:	460e      	mov	r6, r1
900115f6:	461d      	mov	r5, r3
900115f8:	f7ff ff86 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
900115fc:	6803      	ldr	r3, [r0, #0]
900115fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011600:	4798      	blx	r3
90011602:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90011606:	9007      	str	r0, [sp, #28]
90011608:	4631      	mov	r1, r6
9001160a:	6822      	ldr	r2, [r4, #0]
9001160c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011610:	4b0c      	ldr	r3, [pc, #48]	@ (90011644 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011612:	4620      	mov	r0, r4
90011614:	881b      	ldrh	r3, [r3, #0]
90011616:	9306      	str	r3, [sp, #24]
90011618:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9001161c:	9305      	str	r3, [sp, #20]
9001161e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90011622:	9304      	str	r3, [sp, #16]
90011624:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011628:	9303      	str	r3, [sp, #12]
9001162a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001162e:	9302      	str	r3, [sp, #8]
90011630:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011634:	e9cd 5300 	strd	r5, r3, [sp]
90011638:	463b      	mov	r3, r7
9001163a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
9001163c:	2200      	movs	r2, #0
9001163e:	47a8      	blx	r5
90011640:	b00b      	add	sp, #44	@ 0x2c
90011642:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011644:	2402183e 	.word	0x2402183e

90011648 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011648:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001164c:	4698      	mov	r8, r3
9001164e:	6803      	ldr	r3, [r0, #0]
90011650:	b08b      	sub	sp, #44	@ 0x2c
90011652:	4617      	mov	r7, r2
90011654:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
90011656:	460e      	mov	r6, r1
90011658:	4b13      	ldr	r3, [pc, #76]	@ (900116a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001165a:	4604      	mov	r4, r0
9001165c:	f8b3 9000 	ldrh.w	r9, [r3]
90011660:	f7ff ff52 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011664:	6803      	ldr	r3, [r0, #0]
90011666:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011668:	4798      	blx	r3
9001166a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001166e:	2200      	movs	r2, #0
90011670:	4631      	mov	r1, r6
90011672:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011676:	2302      	movs	r3, #2
90011678:	4620      	mov	r0, r4
9001167a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001167e:	2301      	movs	r3, #1
90011680:	9305      	str	r3, [sp, #20]
90011682:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90011686:	9304      	str	r3, [sp, #16]
90011688:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
9001168c:	9303      	str	r3, [sp, #12]
9001168e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011692:	9302      	str	r3, [sp, #8]
90011694:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011698:	e9cd 8300 	strd	r8, r3, [sp]
9001169c:	463b      	mov	r3, r7
9001169e:	47a8      	blx	r5
900116a0:	b00b      	add	sp, #44	@ 0x2c
900116a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900116a6:	bf00      	nop
900116a8:	2402183e 	.word	0x2402183e

900116ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900116ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900116b0:	4698      	mov	r8, r3
900116b2:	6803      	ldr	r3, [r0, #0]
900116b4:	b087      	sub	sp, #28
900116b6:	460e      	mov	r6, r1
900116b8:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
900116ba:	4617      	mov	r7, r2
900116bc:	4b0f      	ldr	r3, [pc, #60]	@ (900116fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900116be:	4604      	mov	r4, r0
900116c0:	f8b3 9000 	ldrh.w	r9, [r3]
900116c4:	f7ff ff20 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
900116c8:	6803      	ldr	r3, [r0, #0]
900116ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900116cc:	4798      	blx	r3
900116ce:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
900116d2:	463a      	mov	r2, r7
900116d4:	4631      	mov	r1, r6
900116d6:	f8cd 900c 	str.w	r9, [sp, #12]
900116da:	e9cd 0304 	strd	r0, r3, [sp, #16]
900116de:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
900116e2:	4620      	mov	r0, r4
900116e4:	9302      	str	r3, [sp, #8]
900116e6:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
900116ea:	9301      	str	r3, [sp, #4]
900116ec:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900116f0:	9300      	str	r3, [sp, #0]
900116f2:	4643      	mov	r3, r8
900116f4:	47a8      	blx	r5
900116f6:	b007      	add	sp, #28
900116f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900116fc:	2402183e 	.word	0x2402183e

90011700 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011704:	4604      	mov	r4, r0
90011706:	b08f      	sub	sp, #60	@ 0x3c
90011708:	4610      	mov	r0, r2
9001170a:	460d      	mov	r5, r1
9001170c:	4691      	mov	r9, r2
9001170e:	461e      	mov	r6, r3
90011710:	f008 fecc 	bl	9001a4ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011714:	2800      	cmp	r0, #0
90011716:	f000 809d 	beq.w	90011854 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001171a:	6823      	ldr	r3, [r4, #0]
9001171c:	4620      	mov	r0, r4
9001171e:	f8df b198 	ldr.w	fp, [pc, #408]	@ 900118b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011722:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90011726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011728:	4798      	blx	r3
9001172a:	6823      	ldr	r3, [r4, #0]
9001172c:	4620      	mov	r0, r4
9001172e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 900118bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011732:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011734:	4798      	blx	r3
90011736:	f8bb 3000 	ldrh.w	r3, [fp]
9001173a:	4f5c      	ldr	r7, [pc, #368]	@ (900118ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001173c:	9301      	str	r3, [sp, #4]
9001173e:	f8ba 3000 	ldrh.w	r3, [sl]
90011742:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011746:	4640      	mov	r0, r8
90011748:	9302      	str	r3, [sp, #8]
9001174a:	883b      	ldrh	r3, [r7, #0]
9001174c:	9303      	str	r3, [sp, #12]
9001174e:	4b58      	ldr	r3, [pc, #352]	@ (900118b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011750:	881a      	ldrh	r2, [r3, #0]
90011752:	9305      	str	r3, [sp, #20]
90011754:	9204      	str	r2, [sp, #16]
90011756:	f008 ff3d 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001175a:	8038      	strh	r0, [r7, #0]
9001175c:	4640      	mov	r0, r8
9001175e:	f008 ff6d 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
90011762:	9b05      	ldr	r3, [sp, #20]
90011764:	b280      	uxth	r0, r0
90011766:	8018      	strh	r0, [r3, #0]
90011768:	4b52      	ldr	r3, [pc, #328]	@ (900118b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001176a:	781b      	ldrb	r3, [r3, #0]
9001176c:	2b00      	cmp	r3, #0
9001176e:	d174      	bne.n	9001185a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011770:	883b      	ldrh	r3, [r7, #0]
90011772:	f8aa 0000 	strh.w	r0, [sl]
90011776:	f8ab 3000 	strh.w	r3, [fp]
9001177a:	4648      	mov	r0, r9
9001177c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90011780:	f008 fe94 	bl	9001a4ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011784:	2200      	movs	r2, #0
90011786:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
9001178a:	4611      	mov	r1, r2
9001178c:	4628      	mov	r0, r5
9001178e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90011792:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90011796:	f7ff fea9 	bl	900114ec <_ZN8touchgfx8Drawable5setXYEss>
9001179a:	2301      	movs	r3, #1
9001179c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
900117a0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
900117a4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900117a8:	2b00      	cmp	r3, #0
900117aa:	dd5c      	ble.n	90011866 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900117ac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900117b0:	2b00      	cmp	r3, #0
900117b2:	dd58      	ble.n	90011866 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900117b4:	462a      	mov	r2, r5
900117b6:	ab0a      	add	r3, sp, #40	@ 0x28
900117b8:	f852 0f04 	ldr.w	r0, [r2, #4]!
900117bc:	6851      	ldr	r1, [r2, #4]
900117be:	c303      	stmia	r3!, {r0, r1}
900117c0:	4631      	mov	r1, r6
900117c2:	a80a      	add	r0, sp, #40	@ 0x28
900117c4:	f7ff fbae 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
900117c8:	4b38      	ldr	r3, [pc, #224]	@ (900118ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900117ca:	2100      	movs	r1, #0
900117cc:	f9b3 2000 	ldrsh.w	r2, [r3]
900117d0:	4b37      	ldr	r3, [pc, #220]	@ (900118b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900117d2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900117d6:	aa0a      	add	r2, sp, #40	@ 0x28
900117d8:	f9b3 3000 	ldrsh.w	r3, [r3]
900117dc:	910c      	str	r1, [sp, #48]	@ 0x30
900117de:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900117e2:	ab08      	add	r3, sp, #32
900117e4:	e892 0003 	ldmia.w	r2, {r0, r1}
900117e8:	e883 0003 	stmia.w	r3, {r0, r1}
900117ec:	4618      	mov	r0, r3
900117ee:	a90c      	add	r1, sp, #48	@ 0x30
900117f0:	f7ff fb98 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
900117f4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900117f6:	2b00      	cmp	r3, #0
900117f8:	d13c      	bne.n	90011874 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900117fa:	2000      	movs	r0, #0
900117fc:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90011800:	2600      	movs	r6, #0
90011802:	696b      	ldr	r3, [r5, #20]
90011804:	a908      	add	r1, sp, #32
90011806:	682a      	ldr	r2, [r5, #0]
90011808:	4628      	mov	r0, r5
9001180a:	9305      	str	r3, [sp, #20]
9001180c:	616e      	str	r6, [r5, #20]
9001180e:	6892      	ldr	r2, [r2, #8]
90011810:	4790      	blx	r2
90011812:	9b05      	ldr	r3, [sp, #20]
90011814:	4652      	mov	r2, sl
90011816:	4649      	mov	r1, r9
90011818:	616b      	str	r3, [r5, #20]
9001181a:	4628      	mov	r0, r5
9001181c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90011820:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90011824:	f7ff fe62 	bl	900114ec <_ZN8touchgfx8Drawable5setXYEss>
90011828:	9a01      	ldr	r2, [sp, #4]
9001182a:	4b23      	ldr	r3, [pc, #140]	@ (900118b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
9001182c:	4620      	mov	r0, r4
9001182e:	801a      	strh	r2, [r3, #0]
90011830:	9a02      	ldr	r2, [sp, #8]
90011832:	4b22      	ldr	r3, [pc, #136]	@ (900118bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90011834:	801a      	strh	r2, [r3, #0]
90011836:	9a03      	ldr	r2, [sp, #12]
90011838:	4b1c      	ldr	r3, [pc, #112]	@ (900118ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001183a:	801a      	strh	r2, [r3, #0]
9001183c:	4b1c      	ldr	r3, [pc, #112]	@ (900118b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001183e:	9a04      	ldr	r2, [sp, #16]
90011840:	801a      	strh	r2, [r3, #0]
90011842:	6823      	ldr	r3, [r4, #0]
90011844:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90011848:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001184a:	4798      	blx	r3
9001184c:	6823      	ldr	r3, [r4, #0]
9001184e:	4620      	mov	r0, r4
90011850:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011852:	4798      	blx	r3
90011854:	b00f      	add	sp, #60	@ 0x3c
90011856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001185a:	883b      	ldrh	r3, [r7, #0]
9001185c:	f8ab 0000 	strh.w	r0, [fp]
90011860:	f8aa 3000 	strh.w	r3, [sl]
90011864:	e789      	b.n	9001177a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90011866:	462a      	mov	r2, r5
90011868:	ab0a      	add	r3, sp, #40	@ 0x28
9001186a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001186e:	6851      	ldr	r1, [r2, #4]
90011870:	c303      	stmia	r3!, {r0, r1}
90011872:	e7a9      	b.n	900117c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90011874:	a807      	add	r0, sp, #28
90011876:	f009 f823 	bl	9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001187a:	4606      	mov	r6, r0
9001187c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9001187e:	6803      	ldr	r3, [r0, #0]
90011880:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011882:	4798      	blx	r3
90011884:	4286      	cmp	r6, r0
90011886:	d1b8      	bne.n	900117fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011888:	f7ff fe3e 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
9001188c:	6803      	ldr	r3, [r0, #0]
9001188e:	4606      	mov	r6, r0
90011890:	a807      	add	r0, sp, #28
90011892:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011894:	9305      	str	r3, [sp, #20]
90011896:	f009 f813 	bl	9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001189a:	9b05      	ldr	r3, [sp, #20]
9001189c:	4601      	mov	r1, r0
9001189e:	4630      	mov	r0, r6
900118a0:	4798      	blx	r3
900118a2:	f080 0001 	eor.w	r0, r0, #1
900118a6:	b2c0      	uxtb	r0, r0
900118a8:	e7a8      	b.n	900117fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900118aa:	bf00      	nop
900118ac:	24021838 	.word	0x24021838
900118b0:	2402183a 	.word	0x2402183a
900118b4:	2402183c 	.word	0x2402183c
900118b8:	2402183e 	.word	0x2402183e
900118bc:	24021840 	.word	0x24021840

900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900118c0:	4b07      	ldr	r3, [pc, #28]	@ (900118e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900118c2:	b510      	push	{r4, lr}
900118c4:	781b      	ldrb	r3, [r3, #0]
900118c6:	4604      	mov	r4, r0
900118c8:	b13b      	cbz	r3, 900118da <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900118ca:	6803      	ldr	r3, [r0, #0]
900118cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900118ce:	4798      	blx	r3
900118d0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900118d2:	4283      	cmp	r3, r0
900118d4:	d101      	bne.n	900118da <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900118d6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
900118d8:	bd10      	pop	{r4, pc}
900118da:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900118dc:	e7fc      	b.n	900118d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
900118de:	bf00      	nop
900118e0:	24021842 	.word	0x24021842

900118e4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
900118e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900118e8:	461d      	mov	r5, r3
900118ea:	b08a      	sub	sp, #40	@ 0x28
900118ec:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900118f0:	4690      	mov	r8, r2
900118f2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
900118f6:	2400      	movs	r4, #0
900118f8:	4607      	mov	r7, r0
900118fa:	fb06 8505 	mla	r5, r6, r5, r8
900118fe:	9404      	str	r4, [sp, #16]
90011900:	f88d 4020 	strb.w	r4, [sp, #32]
90011904:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011908:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001190c:	f8ad 3018 	strh.w	r3, [sp, #24]
90011910:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011914:	f8ad 301a 	strh.w	r3, [sp, #26]
90011918:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001191c:	f8ad 301c 	strh.w	r3, [sp, #28]
90011920:	f7ff ffce 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011924:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011928:	6878      	ldr	r0, [r7, #4]
9001192a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001192e:	a901      	add	r1, sp, #4
90011930:	9505      	str	r5, [sp, #20]
90011932:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011936:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
9001193a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001193e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011942:	6803      	ldr	r3, [r0, #0]
90011944:	685b      	ldr	r3, [r3, #4]
90011946:	4798      	blx	r3
90011948:	b00a      	add	sp, #40	@ 0x28
9001194a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001194e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
9001194e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011952:	b08b      	sub	sp, #44	@ 0x2c
90011954:	2400      	movs	r4, #0
90011956:	4691      	mov	r9, r2
90011958:	461d      	mov	r5, r3
9001195a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
9001195e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90011962:	4688      	mov	r8, r1
90011964:	4607      	mov	r7, r0
90011966:	9404      	str	r4, [sp, #16]
90011968:	fb06 9505 	mla	r5, r6, r5, r9
9001196c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011970:	f7ff ffa6 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011974:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011978:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001197c:	6878      	ldr	r0, [r7, #4]
9001197e:	f8ad 3018 	strh.w	r3, [sp, #24]
90011982:	a901      	add	r1, sp, #4
90011984:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011988:	9505      	str	r5, [sp, #20]
9001198a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001198e:	f8ad 401c 	strh.w	r4, [sp, #28]
90011992:	f8ad 601e 	strh.w	r6, [sp, #30]
90011996:	f8cd 8010 	str.w	r8, [sp, #16]
9001199a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001199e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900119a2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900119a6:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900119aa:	6803      	ldr	r3, [r0, #0]
900119ac:	685b      	ldr	r3, [r3, #4]
900119ae:	4798      	blx	r3
900119b0:	b00b      	add	sp, #44	@ 0x2c
900119b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900119b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900119b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900119bc:	b08a      	sub	sp, #40	@ 0x28
900119be:	4698      	mov	r8, r3
900119c0:	2300      	movs	r3, #0
900119c2:	4606      	mov	r6, r0
900119c4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
900119c8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900119cc:	2d0b      	cmp	r5, #11
900119ce:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
900119d2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
900119d6:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
900119da:	9304      	str	r3, [sp, #16]
900119dc:	d137      	bne.n	90011a4e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900119de:	2380      	movs	r3, #128	@ 0x80
900119e0:	f88d 0020 	strb.w	r0, [sp, #32]
900119e4:	4630      	mov	r0, r6
900119e6:	9203      	str	r2, [sp, #12]
900119e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900119ec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900119f0:	f8ad 3018 	strh.w	r3, [sp, #24]
900119f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900119f8:	f8ad 301a 	strh.w	r3, [sp, #26]
900119fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011a00:	f8ad 301c 	strh.w	r3, [sp, #28]
90011a04:	f7ff ff5c 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011a08:	2c0b      	cmp	r4, #11
90011a0a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90011a0e:	f8ad 701e 	strh.w	r7, [sp, #30]
90011a12:	bf94      	ite	ls
90011a14:	4b19      	ldrls	r3, [pc, #100]	@ (90011a7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011a16:	2100      	movhi	r1, #0
90011a18:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90011a1c:	bf98      	it	ls
90011a1e:	5d19      	ldrbls	r1, [r3, r4]
90011a20:	fb02 8307 	mla	r3, r2, r7, r8
90011a24:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011a28:	10c9      	asrs	r1, r1, #3
90011a2a:	fb01 0003 	mla	r0, r1, r3, r0
90011a2e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90011a32:	a901      	add	r1, sp, #4
90011a34:	9005      	str	r0, [sp, #20]
90011a36:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011a3a:	2300      	movs	r3, #0
90011a3c:	6870      	ldr	r0, [r6, #4]
90011a3e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011a42:	6803      	ldr	r3, [r0, #0]
90011a44:	685b      	ldr	r3, [r3, #4]
90011a46:	4798      	blx	r3
90011a48:	b00a      	add	sp, #40	@ 0x28
90011a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011a4e:	2d02      	cmp	r5, #2
90011a50:	d109      	bne.n	90011a66 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011a52:	28ff      	cmp	r0, #255	@ 0xff
90011a54:	d105      	bne.n	90011a62 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011a56:	f1bc 0f00 	cmp.w	ip, #0
90011a5a:	bf14      	ite	ne
90011a5c:	2340      	movne	r3, #64	@ 0x40
90011a5e:	2320      	moveq	r3, #32
90011a60:	e7be      	b.n	900119e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011a62:	2340      	movs	r3, #64	@ 0x40
90011a64:	e7bc      	b.n	900119e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011a66:	28ff      	cmp	r0, #255	@ 0xff
90011a68:	d105      	bne.n	90011a76 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011a6a:	f1bc 0f00 	cmp.w	ip, #0
90011a6e:	bf14      	ite	ne
90011a70:	2304      	movne	r3, #4
90011a72:	2301      	moveq	r3, #1
90011a74:	e7b4      	b.n	900119e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011a76:	2304      	movs	r3, #4
90011a78:	e7b2      	b.n	900119e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011a7a:	bf00      	nop
90011a7c:	9002d48c 	.word	0x9002d48c

90011a80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011a84:	b08b      	sub	sp, #44	@ 0x2c
90011a86:	461d      	mov	r5, r3
90011a88:	2400      	movs	r4, #0
90011a8a:	4688      	mov	r8, r1
90011a8c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90011a90:	4693      	mov	fp, r2
90011a92:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90011a96:	4607      	mov	r7, r0
90011a98:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90011a9c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90011aa0:	9404      	str	r4, [sp, #16]
90011aa2:	bf14      	ite	ne
90011aa4:	2308      	movne	r3, #8
90011aa6:	2302      	moveq	r3, #2
90011aa8:	fb05 b50a 	mla	r5, r5, sl, fp
90011aac:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011ab0:	f7ff ff06 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011ab4:	2e0b      	cmp	r6, #11
90011ab6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90011aba:	a901      	add	r1, sp, #4
90011abc:	bf98      	it	ls
90011abe:	4b13      	ldrls	r3, [pc, #76]	@ (90011b0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011ac0:	f8ad a01e 	strh.w	sl, [sp, #30]
90011ac4:	bf98      	it	ls
90011ac6:	5d9c      	ldrbls	r4, [r3, r6]
90011ac8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90011acc:	10e4      	asrs	r4, r4, #3
90011ace:	f8cd 8010 	str.w	r8, [sp, #16]
90011ad2:	f8ad 3018 	strh.w	r3, [sp, #24]
90011ad6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011ada:	fb04 0405 	mla	r4, r4, r5, r0
90011ade:	6878      	ldr	r0, [r7, #4]
90011ae0:	f8ad 301a 	strh.w	r3, [sp, #26]
90011ae4:	2300      	movs	r3, #0
90011ae6:	9405      	str	r4, [sp, #20]
90011ae8:	f8ad 301c 	strh.w	r3, [sp, #28]
90011aec:	f88d 9020 	strb.w	r9, [sp, #32]
90011af0:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90011af4:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011af8:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90011afc:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90011b00:	6803      	ldr	r3, [r0, #0]
90011b02:	685b      	ldr	r3, [r3, #4]
90011b04:	4798      	blx	r3
90011b06:	b00b      	add	sp, #44	@ 0x2c
90011b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011b0c:	9002d48c 	.word	0x9002d48c

90011b10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90011b10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011b14:	461e      	mov	r6, r3
90011b16:	4b0a      	ldr	r3, [pc, #40]	@ (90011b40 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011b18:	460f      	mov	r7, r1
90011b1a:	4690      	mov	r8, r2
90011b1c:	881d      	ldrh	r5, [r3, #0]
90011b1e:	f7ff fcf3 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011b22:	6803      	ldr	r3, [r0, #0]
90011b24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011b26:	4798      	blx	r3
90011b28:	280b      	cmp	r0, #11
90011b2a:	bf96      	itet	ls
90011b2c:	4b05      	ldrls	r3, [pc, #20]	@ (90011b44 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90011b2e:	2400      	movhi	r4, #0
90011b30:	5c1c      	ldrbls	r4, [r3, r0]
90011b32:	fb08 7005 	mla	r0, r8, r5, r7
90011b36:	10e4      	asrs	r4, r4, #3
90011b38:	fb04 6000 	mla	r0, r4, r0, r6
90011b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011b40:	2402183e 	.word	0x2402183e
90011b44:	9002d48c 	.word	0x9002d48c

90011b48 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011b48:	b5f0      	push	{r4, r5, r6, r7, lr}
90011b4a:	b08b      	sub	sp, #44	@ 0x2c
90011b4c:	461f      	mov	r7, r3
90011b4e:	4604      	mov	r4, r0
90011b50:	4616      	mov	r6, r2
90011b52:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011b56:	2500      	movs	r5, #0
90011b58:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011b5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011b60:	9504      	str	r5, [sp, #16]
90011b62:	f8ad 3018 	strh.w	r3, [sp, #24]
90011b66:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011b6a:	f8ad 301a 	strh.w	r3, [sp, #26]
90011b6e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011b72:	f8ad 301c 	strh.w	r3, [sp, #28]
90011b76:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011b7a:	f88d 3020 	strb.w	r3, [sp, #32]
90011b7e:	f7ff fe9f 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011b82:	463a      	mov	r2, r7
90011b84:	4631      	mov	r1, r6
90011b86:	4603      	mov	r3, r0
90011b88:	4620      	mov	r0, r4
90011b8a:	f7ff ffc1 	bl	90011b10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011b8e:	4b0e      	ldr	r3, [pc, #56]	@ (90011bc8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011b90:	9005      	str	r0, [sp, #20]
90011b92:	881b      	ldrh	r3, [r3, #0]
90011b94:	f8ad 301e 	strh.w	r3, [sp, #30]
90011b98:	f7ff fcb6 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011b9c:	6803      	ldr	r3, [r0, #0]
90011b9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ba0:	4798      	blx	r3
90011ba2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90011ba4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90011ba8:	a901      	add	r1, sp, #4
90011baa:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90011bae:	9304      	str	r3, [sp, #16]
90011bb0:	6860      	ldr	r0, [r4, #4]
90011bb2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90011bb6:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90011bba:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011bbe:	6803      	ldr	r3, [r0, #0]
90011bc0:	685b      	ldr	r3, [r3, #4]
90011bc2:	4798      	blx	r3
90011bc4:	b00b      	add	sp, #44	@ 0x2c
90011bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011bc8:	2402183e 	.word	0x2402183e

90011bcc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90011bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
90011bce:	b08d      	sub	sp, #52	@ 0x34
90011bd0:	2501      	movs	r5, #1
90011bd2:	4604      	mov	r4, r0
90011bd4:	466b      	mov	r3, sp
90011bd6:	9503      	str	r5, [sp, #12]
90011bd8:	e883 0006 	stmia.w	r3, {r1, r2}
90011bdc:	2300      	movs	r3, #0
90011bde:	f8bd 6000 	ldrh.w	r6, [sp]
90011be2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90011be6:	9306      	str	r3, [sp, #24]
90011be8:	6803      	ldr	r3, [r0, #0]
90011bea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011bec:	4798      	blx	r3
90011bee:	463a      	mov	r2, r7
90011bf0:	4631      	mov	r1, r6
90011bf2:	4603      	mov	r3, r0
90011bf4:	4620      	mov	r0, r4
90011bf6:	f7ff ff8b 	bl	90011b10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011bfa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90011bfc:	9004      	str	r0, [sp, #16]
90011bfe:	9307      	str	r3, [sp, #28]
90011c00:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011c04:	f8ad 3020 	strh.w	r3, [sp, #32]
90011c08:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011c0c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011c10:	4b0e      	ldr	r3, [pc, #56]	@ (90011c4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90011c12:	881b      	ldrh	r3, [r3, #0]
90011c14:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011c18:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011c1c:	f7ff fc74 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011c20:	6803      	ldr	r3, [r0, #0]
90011c22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011c24:	4798      	blx	r3
90011c26:	23ff      	movs	r3, #255	@ 0xff
90011c28:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011c2c:	a903      	add	r1, sp, #12
90011c2e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90011c32:	6860      	ldr	r0, [r4, #4]
90011c34:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011c38:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011c3c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90011c40:	6803      	ldr	r3, [r0, #0]
90011c42:	685b      	ldr	r3, [r3, #4]
90011c44:	4798      	blx	r3
90011c46:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90011c48:	b00d      	add	sp, #52	@ 0x34
90011c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011c4c:	2402183e 	.word	0x2402183e

90011c50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90011c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011c54:	b08c      	sub	sp, #48	@ 0x30
90011c56:	461e      	mov	r6, r3
90011c58:	2300      	movs	r3, #0
90011c5a:	4604      	mov	r4, r0
90011c5c:	466d      	mov	r5, sp
90011c5e:	9306      	str	r3, [sp, #24]
90011c60:	6803      	ldr	r3, [r0, #0]
90011c62:	e885 0006 	stmia.w	r5, {r1, r2}
90011c66:	2501      	movs	r5, #1
90011c68:	f8bd 7000 	ldrh.w	r7, [sp]
90011c6c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90011c70:	9503      	str	r5, [sp, #12]
90011c72:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011c74:	4798      	blx	r3
90011c76:	4642      	mov	r2, r8
90011c78:	4639      	mov	r1, r7
90011c7a:	4603      	mov	r3, r0
90011c7c:	4620      	mov	r0, r4
90011c7e:	f7ff ff47 	bl	90011b10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011c82:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011c86:	9004      	str	r0, [sp, #16]
90011c88:	f8ad 3020 	strh.w	r3, [sp, #32]
90011c8c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011c90:	9607      	str	r6, [sp, #28]
90011c92:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011c96:	4b10      	ldr	r3, [pc, #64]	@ (90011cd8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011c98:	881b      	ldrh	r3, [r3, #0]
90011c9a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011c9e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90011ca0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011ca4:	f7ff fc30 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90011ca8:	6803      	ldr	r3, [r0, #0]
90011caa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011cac:	4798      	blx	r3
90011cae:	23ff      	movs	r3, #255	@ 0xff
90011cb0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011cb4:	a903      	add	r1, sp, #12
90011cb6:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90011cba:	6860      	ldr	r0, [r4, #4]
90011cbc:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011cc0:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011cc4:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90011cc8:	6803      	ldr	r3, [r0, #0]
90011cca:	685b      	ldr	r3, [r3, #4]
90011ccc:	4798      	blx	r3
90011cce:	4630      	mov	r0, r6
90011cd0:	b00c      	add	sp, #48	@ 0x30
90011cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011cd6:	bf00      	nop
90011cd8:	2402183e 	.word	0x2402183e

90011cdc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
90011cde:	b085      	sub	sp, #20
90011ce0:	4605      	mov	r5, r0
90011ce2:	ac02      	add	r4, sp, #8
90011ce4:	e884 0006 	stmia.w	r4, {r1, r2}
90011ce8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011cec:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90011cf0:	f7ff fde6 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011cf4:	4631      	mov	r1, r6
90011cf6:	4603      	mov	r3, r0
90011cf8:	463a      	mov	r2, r7
90011cfa:	4628      	mov	r0, r5
90011cfc:	f7ff ff08 	bl	90011b10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011d00:	4a05      	ldr	r2, [pc, #20]	@ (90011d18 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90011d02:	682b      	ldr	r3, [r5, #0]
90011d04:	8812      	ldrh	r2, [r2, #0]
90011d06:	9200      	str	r2, [sp, #0]
90011d08:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90011d0a:	4603      	mov	r3, r0
90011d0c:	4628      	mov	r0, r5
90011d0e:	e894 0006 	ldmia.w	r4, {r1, r2}
90011d12:	47b0      	blx	r6
90011d14:	b005      	add	sp, #20
90011d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011d18:	2402183e 	.word	0x2402183e

90011d1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011d1c:	b570      	push	{r4, r5, r6, lr}
90011d1e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90011d22:	4604      	mov	r4, r0
90011d24:	b19b      	cbz	r3, 90011d4e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90011d26:	2002      	movs	r0, #2
90011d28:	f7ef f800 	bl	90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011d2c:	2300      	movs	r3, #0
90011d2e:	4620      	mov	r0, r4
90011d30:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90011d34:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90011d38:	6823      	ldr	r3, [r4, #0]
90011d3a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
90011d3e:	f7ff fdbf 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011d42:	4601      	mov	r1, r0
90011d44:	4620      	mov	r0, r4
90011d46:	462b      	mov	r3, r5
90011d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d4c:	4718      	bx	r3
90011d4e:	bd70      	pop	{r4, r5, r6, pc}

90011d50 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90011d50:	b570      	push	{r4, r5, r6, lr}
90011d52:	4605      	mov	r5, r0
90011d54:	460c      	mov	r4, r1
90011d56:	2003      	movs	r0, #3
90011d58:	b149      	cbz	r1, 90011d6e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011d5a:	f7ee ff93 	bl	90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011d5e:	6928      	ldr	r0, [r5, #16]
90011d60:	b168      	cbz	r0, 90011d7e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011d62:	6803      	ldr	r3, [r0, #0]
90011d64:	2101      	movs	r1, #1
90011d66:	695b      	ldr	r3, [r3, #20]
90011d68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d6c:	4718      	bx	r3
90011d6e:	f7ee ffb3 	bl	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011d72:	6928      	ldr	r0, [r5, #16]
90011d74:	b118      	cbz	r0, 90011d7e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011d76:	6803      	ldr	r3, [r0, #0]
90011d78:	4621      	mov	r1, r4
90011d7a:	695b      	ldr	r3, [r3, #20]
90011d7c:	e7f4      	b.n	90011d68 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90011d7e:	bd70      	pop	{r4, r5, r6, pc}

90011d80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90011d80:	b538      	push	{r3, r4, r5, lr}
90011d82:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90011d86:	4604      	mov	r4, r0
90011d88:	460d      	mov	r5, r1
90011d8a:	428b      	cmp	r3, r1
90011d8c:	d006      	beq.n	90011d9c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011d8e:	6803      	ldr	r3, [r0, #0]
90011d90:	b929      	cbnz	r1, 90011d9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90011d92:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
90011d96:	4798      	blx	r3
90011d98:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90011d9c:	bd38      	pop	{r3, r4, r5, pc}
90011d9e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
90011da2:	e7f8      	b.n	90011d96 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90011da4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90011da4:	4b0c      	ldr	r3, [pc, #48]	@ (90011dd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
90011da6:	b510      	push	{r4, lr}
90011da8:	781b      	ldrb	r3, [r3, #0]
90011daa:	4604      	mov	r4, r0
90011dac:	b953      	cbnz	r3, 90011dc4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011dae:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90011db2:	b93b      	cbnz	r3, 90011dc4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011db4:	6840      	ldr	r0, [r0, #4]
90011db6:	f000 f919 	bl	90011fec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90011dba:	b118      	cbz	r0, 90011dc4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011dbc:	6862      	ldr	r2, [r4, #4]
90011dbe:	7a53      	ldrb	r3, [r2, #9]
90011dc0:	2b00      	cmp	r3, #0
90011dc2:	d0fc      	beq.n	90011dbe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
90011dc4:	f7f0 fac0 	bl	90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011dc8:	4620      	mov	r0, r4
90011dca:	2100      	movs	r1, #0
90011dcc:	f7ff ffd8 	bl	90011d80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011dd0:	4620      	mov	r0, r4
90011dd2:	f7ff fd75 	bl	900118c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011dd6:	bd10      	pop	{r4, pc}
90011dd8:	24021842 	.word	0x24021842

90011ddc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011ddc:	b570      	push	{r4, r5, r6, lr}
90011dde:	4604      	mov	r4, r0
90011de0:	6803      	ldr	r3, [r0, #0]
90011de2:	b919      	cbnz	r1, 90011dec <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011de4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011de6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011dea:	4718      	bx	r3
90011dec:	2200      	movs	r2, #0
90011dee:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90011df2:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90011df6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011df8:	4798      	blx	r3
90011dfa:	6863      	ldr	r3, [r4, #4]
90011dfc:	2101      	movs	r1, #1
90011dfe:	4605      	mov	r5, r0
90011e00:	4620      	mov	r0, r4
90011e02:	7299      	strb	r1, [r3, #10]
90011e04:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90011e08:	f7ff ffba 	bl	90011d80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011e0c:	4628      	mov	r0, r5
90011e0e:	bd70      	pop	{r4, r5, r6, pc}

90011e10 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011e10:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011e14:	1a13      	subs	r3, r2, r0
90011e16:	4258      	negs	r0, r3
90011e18:	4158      	adcs	r0, r3
90011e1a:	4770      	bx	lr

90011e1c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011e1c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011e20:	1a9b      	subs	r3, r3, r2
90011e22:	2b00      	cmp	r3, #0
90011e24:	bfdc      	itt	le
90011e26:	6882      	ldrle	r2, [r0, #8]
90011e28:	189b      	addle	r3, r3, r2
90011e2a:	2b01      	cmp	r3, #1
90011e2c:	bfcc      	ite	gt
90011e2e:	2000      	movgt	r0, #0
90011e30:	2001      	movle	r0, #1
90011e32:	4770      	bx	lr

90011e34 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011e34:	6902      	ldr	r2, [r0, #16]
90011e36:	6843      	ldr	r3, [r0, #4]
90011e38:	2024      	movs	r0, #36	@ 0x24
90011e3a:	fb00 3002 	mla	r0, r0, r2, r3
90011e3e:	4770      	bx	lr

90011e40 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90011e40:	6803      	ldr	r3, [r0, #0]
90011e42:	691b      	ldr	r3, [r3, #16]
90011e44:	4718      	bx	r3

90011e46 <_ZN8touchgfx13DMA_Interface7executeEv>:
90011e46:	2301      	movs	r3, #1
90011e48:	b570      	push	{r4, r5, r6, lr}
90011e4a:	7203      	strb	r3, [r0, #8]
90011e4c:	4604      	mov	r4, r0
90011e4e:	6840      	ldr	r0, [r0, #4]
90011e50:	6803      	ldr	r3, [r0, #0]
90011e52:	699b      	ldr	r3, [r3, #24]
90011e54:	4798      	blx	r3
90011e56:	6803      	ldr	r3, [r0, #0]
90011e58:	4605      	mov	r5, r0
90011e5a:	2b40      	cmp	r3, #64	@ 0x40
90011e5c:	d00c      	beq.n	90011e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011e5e:	d810      	bhi.n	90011e82 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90011e60:	2b04      	cmp	r3, #4
90011e62:	d01d      	beq.n	90011ea0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011e64:	d804      	bhi.n	90011e70 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011e66:	2b01      	cmp	r3, #1
90011e68:	d006      	beq.n	90011e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011e6a:	2b02      	cmp	r3, #2
90011e6c:	d02c      	beq.n	90011ec8 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90011e6e:	bd70      	pop	{r4, r5, r6, pc}
90011e70:	2b08      	cmp	r3, #8
90011e72:	d01d      	beq.n	90011eb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011e74:	2b20      	cmp	r3, #32
90011e76:	d1fa      	bne.n	90011e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011e78:	6823      	ldr	r3, [r4, #0]
90011e7a:	4620      	mov	r0, r4
90011e7c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011e7e:	4798      	blx	r3
90011e80:	e013      	b.n	90011eaa <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90011e82:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90011e86:	d0f7      	beq.n	90011e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011e88:	d804      	bhi.n	90011e94 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011e8a:	2b80      	cmp	r3, #128	@ 0x80
90011e8c:	d0f4      	beq.n	90011e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011e8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90011e92:	e7f0      	b.n	90011e76 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011e94:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90011e98:	d0ee      	beq.n	90011e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011e9a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90011e9e:	e7e5      	b.n	90011e6c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90011ea0:	6823      	ldr	r3, [r4, #0]
90011ea2:	7f01      	ldrb	r1, [r0, #28]
90011ea4:	4620      	mov	r0, r4
90011ea6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011ea8:	4798      	blx	r3
90011eaa:	6823      	ldr	r3, [r4, #0]
90011eac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011eae:	e006      	b.n	90011ebe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011eb0:	6823      	ldr	r3, [r4, #0]
90011eb2:	7f01      	ldrb	r1, [r0, #28]
90011eb4:	4620      	mov	r0, r4
90011eb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011eb8:	4798      	blx	r3
90011eba:	6823      	ldr	r3, [r4, #0]
90011ebc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011ebe:	4629      	mov	r1, r5
90011ec0:	4620      	mov	r0, r4
90011ec2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011ec6:	4718      	bx	r3
90011ec8:	6823      	ldr	r3, [r4, #0]
90011eca:	4620      	mov	r0, r4
90011ecc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011ece:	4798      	blx	r3
90011ed0:	e7f3      	b.n	90011eba <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011ed2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011ed2:	4770      	bx	lr

90011ed4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011ed4:	4770      	bx	lr

90011ed6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011ed6:	4770      	bx	lr

90011ed8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011ed8:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011edc:	b510      	push	{r4, lr}
90011ede:	1ad2      	subs	r2, r2, r3
90011ee0:	2a00      	cmp	r2, #0
90011ee2:	bfdc      	itt	le
90011ee4:	6884      	ldrle	r4, [r0, #8]
90011ee6:	1912      	addle	r2, r2, r4
90011ee8:	2a01      	cmp	r2, #1
90011eea:	dd16      	ble.n	90011f1a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011eec:	6842      	ldr	r2, [r0, #4]
90011eee:	2424      	movs	r4, #36	@ 0x24
90011ef0:	fb04 2303 	mla	r3, r4, r3, r2
90011ef4:	f101 0220 	add.w	r2, r1, #32
90011ef8:	f851 4b04 	ldr.w	r4, [r1], #4
90011efc:	4291      	cmp	r1, r2
90011efe:	f843 4b04 	str.w	r4, [r3], #4
90011f02:	d1f9      	bne.n	90011ef8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011f04:	780a      	ldrb	r2, [r1, #0]
90011f06:	701a      	strb	r2, [r3, #0]
90011f08:	68c3      	ldr	r3, [r0, #12]
90011f0a:	6882      	ldr	r2, [r0, #8]
90011f0c:	f3bf 8f5b 	dmb	ish
90011f10:	3301      	adds	r3, #1
90011f12:	429a      	cmp	r2, r3
90011f14:	bfd8      	it	le
90011f16:	1a9b      	suble	r3, r3, r2
90011f18:	60c3      	str	r3, [r0, #12]
90011f1a:	bd10      	pop	{r4, pc}

90011f1c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011f1c:	6903      	ldr	r3, [r0, #16]
90011f1e:	6882      	ldr	r2, [r0, #8]
90011f20:	f3bf 8f5b 	dmb	ish
90011f24:	3301      	adds	r3, #1
90011f26:	429a      	cmp	r2, r3
90011f28:	bfd8      	it	le
90011f2a:	1a9b      	suble	r3, r3, r2
90011f2c:	6103      	str	r3, [r0, #16]
90011f2e:	4770      	bx	lr

90011f30 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90011f30:	b570      	push	{r4, r5, r6, lr}
90011f32:	4604      	mov	r4, r0
90011f34:	460e      	mov	r6, r1
90011f36:	6860      	ldr	r0, [r4, #4]
90011f38:	6803      	ldr	r3, [r0, #0]
90011f3a:	685b      	ldr	r3, [r3, #4]
90011f3c:	4798      	blx	r3
90011f3e:	2800      	cmp	r0, #0
90011f40:	d1f9      	bne.n	90011f36 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90011f42:	4d0d      	ldr	r5, [pc, #52]	@ (90011f78 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011f44:	6828      	ldr	r0, [r5, #0]
90011f46:	6803      	ldr	r3, [r0, #0]
90011f48:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90011f4c:	4798      	blx	r3
90011f4e:	f7f0 fa09 	bl	90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90011f52:	6828      	ldr	r0, [r5, #0]
90011f54:	2101      	movs	r1, #1
90011f56:	f7ff ff13 	bl	90011d80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011f5a:	6860      	ldr	r0, [r4, #4]
90011f5c:	4631      	mov	r1, r6
90011f5e:	6803      	ldr	r3, [r0, #0]
90011f60:	689b      	ldr	r3, [r3, #8]
90011f62:	4798      	blx	r3
90011f64:	6823      	ldr	r3, [r4, #0]
90011f66:	4620      	mov	r0, r4
90011f68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011f6a:	4798      	blx	r3
90011f6c:	6828      	ldr	r0, [r5, #0]
90011f6e:	6803      	ldr	r3, [r0, #0]
90011f70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011f74:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90011f76:	4718      	bx	r3
90011f78:	24021844 	.word	0x24021844

90011f7c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011f7c:	b508      	push	{r3, lr}
90011f7e:	f7f0 f9e3 	bl	90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011f82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011f86:	f7f0 b9e7 	b.w	90002358 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011f8a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011f8a:	b510      	push	{r4, lr}
90011f8c:	4604      	mov	r4, r0
90011f8e:	2114      	movs	r1, #20
90011f90:	f017 fbce 	bl	90029730 <_ZdlPvj>
90011f94:	4620      	mov	r0, r4
90011f96:	bd10      	pop	{r4, pc}

90011f98 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011f98:	b570      	push	{r4, r5, r6, lr}
90011f9a:	4604      	mov	r4, r0
90011f9c:	6840      	ldr	r0, [r0, #4]
90011f9e:	6803      	ldr	r3, [r0, #0]
90011fa0:	681b      	ldr	r3, [r3, #0]
90011fa2:	4798      	blx	r3
90011fa4:	4605      	mov	r5, r0
90011fa6:	b930      	cbnz	r0, 90011fb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011fa8:	7a23      	ldrb	r3, [r4, #8]
90011faa:	b123      	cbz	r3, 90011fb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011fac:	6860      	ldr	r0, [r4, #4]
90011fae:	6803      	ldr	r3, [r0, #0]
90011fb0:	695b      	ldr	r3, [r3, #20]
90011fb2:	4798      	blx	r3
90011fb4:	7225      	strb	r5, [r4, #8]
90011fb6:	6860      	ldr	r0, [r4, #4]
90011fb8:	6803      	ldr	r3, [r0, #0]
90011fba:	681b      	ldr	r3, [r3, #0]
90011fbc:	4798      	blx	r3
90011fbe:	b928      	cbnz	r0, 90011fcc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011fc0:	6823      	ldr	r3, [r4, #0]
90011fc2:	4620      	mov	r0, r4
90011fc4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011fc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011fca:	4718      	bx	r3
90011fcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011fd0:	f7f0 b9d0 	b.w	90002374 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011fd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011fd4:	b510      	push	{r4, lr}
90011fd6:	6082      	str	r2, [r0, #8]
90011fd8:	2200      	movs	r2, #0
90011fda:	4c03      	ldr	r4, [pc, #12]	@ (90011fe8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011fdc:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011fe0:	e9c0 4100 	strd	r4, r1, [r0]
90011fe4:	bd10      	pop	{r4, pc}
90011fe6:	bf00      	nop
90011fe8:	9002d4a0 	.word	0x9002d4a0

90011fec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011fec:	6840      	ldr	r0, [r0, #4]
90011fee:	6803      	ldr	r3, [r0, #0]
90011ff0:	681b      	ldr	r3, [r3, #0]
90011ff2:	4718      	bx	r3
90011ff4:	0000      	movs	r0, r0
	...

90011ff8 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011ff8:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90011ffc:	fb80 0101 	smull	r0, r1, r0, r1
90012000:	4f21      	ldr	r7, [pc, #132]	@ (90012088 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90012002:	461c      	mov	r4, r3
90012004:	4616      	mov	r6, r2
90012006:	fba0 bc07 	umull	fp, ip, r0, r7
9001200a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001200e:	fb07 cc01 	mla	ip, r7, r1, ip
90012012:	fbab 010b 	umull	r0, r1, fp, fp
90012016:	fb0b f70c 	mul.w	r7, fp, ip
9001201a:	fb00 f30c 	mul.w	r3, r0, ip
9001201e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90012022:	fb0b 3301 	mla	r3, fp, r1, r3
90012026:	fba0 010b 	umull	r0, r1, r0, fp
9001202a:	4419      	add	r1, r3
9001202c:	a314      	add	r3, pc, #80	@ (adr r3, 90012080 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001202e:	e9d3 2300 	ldrd	r2, r3, [r3]
90012032:	f7ee fb61 	bl	900006f8 <__aeabi_ldivmod>
90012036:	2ef7      	cmp	r6, #247	@ 0xf7
90012038:	b290      	uxth	r0, r2
9001203a:	bf9e      	ittt	ls
9001203c:	f002 0207 	andls.w	r2, r2, #7
90012040:	18b6      	addls	r6, r6, r2
90012042:	b2f6      	uxtbls	r6, r6
90012044:	2cfb      	cmp	r4, #251	@ 0xfb
90012046:	bf9e      	ittt	ls
90012048:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
9001204c:	18e4      	addls	r4, r4, r3
9001204e:	b2e4      	uxtbls	r4, r4
90012050:	2df7      	cmp	r5, #247	@ 0xf7
90012052:	bf98      	it	ls
90012054:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90012058:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001205c:	bf98      	it	ls
9001205e:	182d      	addls	r5, r5, r0
90012060:	480a      	ldr	r0, [pc, #40]	@ (9001208c <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
90012062:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90012066:	ea00 2006 	and.w	r0, r0, r6, lsl #8
9001206a:	bf98      	it	ls
9001206c:	b2ed      	uxtbls	r5, r5
9001206e:	4304      	orrs	r4, r0
90012070:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
90012074:	b280      	uxth	r0, r0
90012076:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
9001207a:	bf00      	nop
9001207c:	f3af 8000 	nop.w
90012080:	797a8d77 	.word	0x797a8d77
90012084:	00000000 	.word	0x00000000
90012088:	00ec4ba7 	.word	0x00ec4ba7
9001208c:	fffff800 	.word	0xfffff800

90012090 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90012090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012094:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90012098:	4605      	mov	r5, r0
9001209a:	ed2d 8b02 	vpush	{d8}
9001209e:	b087      	sub	sp, #28
900120a0:	7c41      	ldrb	r1, [r0, #17]
900120a2:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900120a6:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900120aa:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900120ae:	2900      	cmp	r1, #0
900120b0:	f000 809a 	beq.w	900121e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
900120b4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900120b8:	ed90 7a08 	vldr	s14, [r0, #32]
900120bc:	454a      	cmp	r2, r9
900120be:	68c0      	ldr	r0, [r0, #12]
900120c0:	db25      	blt.n	9001210e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
900120c2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900120c6:	f640 72fc 	movw	r2, #4092	@ 0xffc
900120ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900120ce:	bfc8      	it	gt
900120d0:	2200      	movgt	r2, #0
900120d2:	5882      	ldr	r2, [r0, r2]
900120d4:	2100      	movs	r1, #0
900120d6:	ea4f 2812 	mov.w	r8, r2, lsr #8
900120da:	7c2d      	ldrb	r5, [r5, #16]
900120dc:	0950      	lsrs	r0, r2, #5
900120de:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
900120e2:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
900120e6:	eb04 0746 	add.w	r7, r4, r6, lsl #1
900120ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900120ee:	2d00      	cmp	r5, #0
900120f0:	d044      	beq.n	9001217c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900120f2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900120f6:	d141      	bne.n	9001217c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900120f8:	bb61      	cbnz	r1, 90012154 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
900120fa:	ea4e 0000 	orr.w	r0, lr, r0
900120fe:	ea4c 0500 	orr.w	r5, ip, r0
90012102:	42bc      	cmp	r4, r7
90012104:	f080 8214 	bcs.w	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012108:	f824 5b02 	strh.w	r5, [r4], #2
9001210c:	e7f9      	b.n	90012102 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001210e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
90012112:	454f      	cmp	r7, r9
90012114:	dc08      	bgt.n	90012128 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90012116:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001211a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001211e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012122:	bfd8      	it	le
90012124:	2200      	movle	r2, #0
90012126:	e7d4      	b.n	900120d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90012128:	eba9 0202 	sub.w	r2, r9, r2
9001212c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012130:	ee07 2a90 	vmov	s15, r2
90012134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012138:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001213c:	ee67 7a87 	vmul.f32	s15, s15, s14
90012140:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90012144:	ee17 2a90 	vmov	r2, s15
90012148:	bfd8      	it	le
9001214a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
9001214e:	0092      	lsls	r2, r2, #2
90012150:	5882      	ldr	r2, [r0, r2]
90012152:	e7c0      	b.n	900120d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
90012154:	b2d5      	uxtb	r5, r2
90012156:	f3c2 4a07 	ubfx	sl, r2, #16, #8
9001215a:	fa5f f888 	uxtb.w	r8, r8
9001215e:	461e      	mov	r6, r3
90012160:	42bc      	cmp	r4, r7
90012162:	f080 81e5 	bcs.w	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012166:	4630      	mov	r0, r6
90012168:	9500      	str	r5, [sp, #0]
9001216a:	4643      	mov	r3, r8
9001216c:	4652      	mov	r2, sl
9001216e:	4649      	mov	r1, r9
90012170:	3601      	adds	r6, #1
90012172:	f7ff ff41 	bl	90011ff8 <_ZN8touchgfxL10applyNoiseEiihhh>
90012176:	f824 0b02 	strh.w	r0, [r4], #2
9001217a:	e7f1      	b.n	90012160 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
9001217c:	0e12      	lsrs	r2, r2, #24
9001217e:	26ff      	movs	r6, #255	@ 0xff
90012180:	fb02 f20a 	mul.w	r2, r2, sl
90012184:	1c53      	adds	r3, r2, #1
90012186:	eb03 2222 	add.w	r2, r3, r2, asr #8
9001218a:	1212      	asrs	r2, r2, #8
9001218c:	fb02 f50c 	mul.w	r5, r2, ip
90012190:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90012544 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90012194:	fb02 f10e 	mul.w	r1, r2, lr
90012198:	4350      	muls	r0, r2
9001219a:	43d2      	mvns	r2, r2
9001219c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900121a0:	42bc      	cmp	r4, r7
900121a2:	f080 81c5 	bcs.w	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900121a6:	f8b4 e000 	ldrh.w	lr, [r4]
900121aa:	ea0e 030c 	and.w	r3, lr, ip
900121ae:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900121b2:	f00e 0e1f 	and.w	lr, lr, #31
900121b6:	fb02 1303 	mla	r3, r2, r3, r1
900121ba:	fb02 0808 	mla	r8, r2, r8, r0
900121be:	fb02 5e0e 	mla	lr, r2, lr, r5
900121c2:	fb93 f3f6 	sdiv	r3, r3, r6
900121c6:	fb98 f8f6 	sdiv	r8, r8, r6
900121ca:	fb9e fef6 	sdiv	lr, lr, r6
900121ce:	ea03 030c 	and.w	r3, r3, ip
900121d2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900121d6:	f00e 0e1f 	and.w	lr, lr, #31
900121da:	ea43 0308 	orr.w	r3, r3, r8
900121de:	ea43 030e 	orr.w	r3, r3, lr
900121e2:	f824 3b02 	strh.w	r3, [r4], #2
900121e6:	e7db      	b.n	900121a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
900121e8:	7c82      	ldrb	r2, [r0, #18]
900121ea:	2a00      	cmp	r2, #0
900121ec:	d04f      	beq.n	9001228e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
900121ee:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900121f2:	ee07 2a90 	vmov	s15, r2
900121f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900121fa:	ee07 3a10 	vmov	s14, r3
900121fe:	461f      	mov	r7, r3
90012200:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90012204:	eef4 6ae7 	vcmpe.f32	s13, s15
90012208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001220c:	f200 8095 	bhi.w	9001233a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90012210:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90012214:	f640 71fc 	movw	r1, #4092	@ 0xffc
90012218:	68ea      	ldr	r2, [r5, #12]
9001221a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001221e:	ee37 7a87 	vadd.f32	s14, s15, s14
90012222:	ee37 7a66 	vsub.f32	s14, s14, s13
90012226:	ee06 6a90 	vmov	s13, r6
9001222a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001222e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90012232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012236:	bf4a      	itet	mi
90012238:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
9001223c:	9602      	strpl	r6, [sp, #8]
9001223e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90012242:	ed95 7a08 	vldr	s14, [r5, #32]
90012246:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001224a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001224e:	bfc8      	it	gt
90012250:	2100      	movgt	r1, #0
90012252:	5852      	ldr	r2, [r2, r1]
90012254:	9902      	ldr	r1, [sp, #8]
90012256:	ea4f 2b12 	mov.w	fp, r2, lsr #8
9001225a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001225e:	0950      	lsrs	r0, r2, #5
90012260:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90012264:	9103      	str	r1, [sp, #12]
90012266:	f3c2 01c4 	ubfx	r1, r2, #3, #5
9001226a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001226e:	f1bc 0f00 	cmp.w	ip, #0
90012272:	d024      	beq.n	900122be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90012274:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90012278:	d121      	bne.n	900122be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
9001227a:	ea4b 0b00 	orr.w	fp, fp, r0
9001227e:	ea41 010b 	orr.w	r1, r1, fp
90012282:	9a03      	ldr	r2, [sp, #12]
90012284:	4294      	cmp	r4, r2
90012286:	d255      	bcs.n	90012334 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90012288:	f824 1b02 	strh.w	r1, [r4], #2
9001228c:	e7f9      	b.n	90012282 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
9001228e:	ee07 9a10 	vmov	s14, r9
90012292:	edd0 7a06 	vldr	s15, [r0, #24]
90012296:	edd0 6a05 	vldr	s13, [r0, #20]
9001229a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001229e:	ee37 7a67 	vsub.f32	s14, s14, s15
900122a2:	eec7 7a26 	vdiv.f32	s15, s14, s13
900122a6:	ed90 7a08 	vldr	s14, [r0, #32]
900122aa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900122ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900122b2:	bf44      	itt	mi
900122b4:	ed90 7a07 	vldrmi	s14, [r0, #28]
900122b8:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
900122bc:	e79d      	b.n	900121fa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
900122be:	0e12      	lsrs	r2, r2, #24
900122c0:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90012544 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900122c4:	f04f 0eff 	mov.w	lr, #255	@ 0xff
900122c8:	fb02 f20a 	mul.w	r2, r2, sl
900122cc:	f102 0c01 	add.w	ip, r2, #1
900122d0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
900122d4:	1212      	asrs	r2, r2, #8
900122d6:	4350      	muls	r0, r2
900122d8:	4351      	muls	r1, r2
900122da:	fb02 fb0b 	mul.w	fp, r2, fp
900122de:	43d2      	mvns	r2, r2
900122e0:	9004      	str	r0, [sp, #16]
900122e2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900122e6:	9105      	str	r1, [sp, #20]
900122e8:	9903      	ldr	r1, [sp, #12]
900122ea:	428c      	cmp	r4, r1
900122ec:	d222      	bcs.n	90012334 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900122ee:	8820      	ldrh	r0, [r4, #0]
900122f0:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
900122f4:	ea00 0c08 	and.w	ip, r0, r8
900122f8:	460f      	mov	r7, r1
900122fa:	9904      	ldr	r1, [sp, #16]
900122fc:	fb02 bc0c 	mla	ip, r2, ip, fp
90012300:	fb02 1107 	mla	r1, r2, r7, r1
90012304:	fb9c fcfe 	sdiv	ip, ip, lr
90012308:	fb91 f1fe 	sdiv	r1, r1, lr
9001230c:	ea0c 0c08 	and.w	ip, ip, r8
90012310:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90012314:	ea4c 0101 	orr.w	r1, ip, r1
90012318:	f000 0c1f 	and.w	ip, r0, #31
9001231c:	9805      	ldr	r0, [sp, #20]
9001231e:	fb02 0c0c 	mla	ip, r2, ip, r0
90012322:	fb9c fcfe 	sdiv	ip, ip, lr
90012326:	f00c 0c1f 	and.w	ip, ip, #31
9001232a:	ea41 010c 	orr.w	r1, r1, ip
9001232e:	f824 1b02 	strh.w	r1, [r4], #2
90012332:	e7d9      	b.n	900122e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90012334:	9a02      	ldr	r2, [sp, #8]
90012336:	441a      	add	r2, r3
90012338:	4617      	mov	r7, r2
9001233a:	441e      	add	r6, r3
9001233c:	b236      	sxth	r6, r6
9001233e:	42be      	cmp	r6, r7
90012340:	f340 80f6 	ble.w	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012344:	ed95 7a07 	vldr	s14, [r5, #28]
90012348:	ee06 7a90 	vmov	s13, r7
9001234c:	ee37 7a87 	vadd.f32	s14, s15, s14
90012350:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90012354:	eeb4 7ae6 	vcmpe.f32	s14, s13
90012358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001235c:	f340 80b2 	ble.w	900124c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90012360:	ee06 6a10 	vmov	s12, r6
90012364:	ee76 7ae7 	vsub.f32	s15, s13, s15
90012368:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 9001253c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
9001236c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90012370:	7c2b      	ldrb	r3, [r5, #16]
90012372:	eeb4 7ac6 	vcmpe.f32	s14, s12
90012376:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90012540 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
9001237a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001237e:	bfd6      	itet	le
90012380:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90012384:	46b0      	movgt	r8, r6
90012386:	ee17 8a10 	vmovle	r8, s14
9001238a:	ed95 7a08 	vldr	s14, [r5, #32]
9001238e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012392:	eba8 0707 	sub.w	r7, r8, r7
90012396:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001239a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001239e:	fe38 8a06 	vselgt.f32	s16, s16, s12
900123a2:	eea7 8a27 	vfma.f32	s16, s14, s15
900123a6:	b1db      	cbz	r3, 900123e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900123a8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900123ac:	d118      	bne.n	900123e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900123ae:	42bc      	cmp	r4, r7
900123b0:	d262      	bcs.n	90012478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900123b2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900123b6:	68eb      	ldr	r3, [r5, #12]
900123b8:	4649      	mov	r1, r9
900123ba:	ee17 0a90 	vmov	r0, s15
900123be:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
900123c2:	b2d3      	uxtb	r3, r2
900123c4:	9300      	str	r3, [sp, #0]
900123c6:	f3c2 2307 	ubfx	r3, r2, #8, #8
900123ca:	f3c2 4207 	ubfx	r2, r2, #16, #8
900123ce:	f7ff fe13 	bl	90011ff8 <_ZN8touchgfxL10applyNoiseEiihhh>
900123d2:	f824 0b02 	strh.w	r0, [r4], #2
900123d6:	edd5 7a08 	vldr	s15, [r5, #32]
900123da:	ee38 8a27 	vadd.f32	s16, s16, s15
900123de:	e7e6      	b.n	900123ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
900123e0:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90012544 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900123e4:	f04f 09ff 	mov.w	r9, #255	@ 0xff
900123e8:	42bc      	cmp	r4, r7
900123ea:	d245      	bcs.n	90012478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900123ec:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900123f0:	68eb      	ldr	r3, [r5, #12]
900123f2:	f8b4 e000 	ldrh.w	lr, [r4]
900123f6:	ee17 2a90 	vmov	r2, s15
900123fa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900123fe:	0e13      	lsrs	r3, r2, #24
90012400:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90012404:	fb03 f30a 	mul.w	r3, r3, sl
90012408:	b289      	uxth	r1, r1
9001240a:	1c58      	adds	r0, r3, #1
9001240c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90012410:	ea0e 030b 	and.w	r3, lr, fp
90012414:	1200      	asrs	r0, r0, #8
90012416:	ea6f 0c00 	mvn.w	ip, r0
9001241a:	fa5f fc8c 	uxtb.w	ip, ip
9001241e:	fb0c f303 	mul.w	r3, ip, r3
90012422:	fb00 3101 	mla	r1, r0, r1, r3
90012426:	fb91 f1f9 	sdiv	r1, r1, r9
9001242a:	ea01 030b 	and.w	r3, r1, fp
9001242e:	9302      	str	r3, [sp, #8]
90012430:	0953      	lsrs	r3, r2, #5
90012432:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90012436:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001243a:	4619      	mov	r1, r3
9001243c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90012440:	f00e 0e1f 	and.w	lr, lr, #31
90012444:	fb0c f303 	mul.w	r3, ip, r3
90012448:	fb0c fc0e 	mul.w	ip, ip, lr
9001244c:	fb00 3301 	mla	r3, r0, r1, r3
90012450:	9902      	ldr	r1, [sp, #8]
90012452:	fb00 c002 	mla	r0, r0, r2, ip
90012456:	fb93 f3f9 	sdiv	r3, r3, r9
9001245a:	fb90 f0f9 	sdiv	r0, r0, r9
9001245e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90012462:	f000 001f 	and.w	r0, r0, #31
90012466:	4319      	orrs	r1, r3
90012468:	4301      	orrs	r1, r0
9001246a:	f824 1b02 	strh.w	r1, [r4], #2
9001246e:	edd5 7a08 	vldr	s15, [r5, #32]
90012472:	ee38 8a27 	vadd.f32	s16, s16, s15
90012476:	e7b7      	b.n	900123e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90012478:	4546      	cmp	r6, r8
9001247a:	dd59      	ble.n	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001247c:	edd5 7a08 	vldr	s15, [r5, #32]
90012480:	f640 73fc 	movw	r3, #4092	@ 0xffc
90012484:	68ea      	ldr	r2, [r5, #12]
90012486:	eba6 0608 	sub.w	r6, r6, r8
9001248a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001248e:	7c29      	ldrb	r1, [r5, #16]
90012490:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90012494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012498:	bfd8      	it	le
9001249a:	2300      	movle	r3, #0
9001249c:	58d2      	ldr	r2, [r2, r3]
9001249e:	0a10      	lsrs	r0, r2, #8
900124a0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900124a4:	0953      	lsrs	r3, r2, #5
900124a6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900124aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900124ae:	b159      	cbz	r1, 900124c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900124b0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900124b4:	d108      	bne.n	900124c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900124b6:	4318      	orrs	r0, r3
900124b8:	4338      	orrs	r0, r7
900124ba:	42b4      	cmp	r4, r6
900124bc:	d238      	bcs.n	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900124be:	f824 0b02 	strh.w	r0, [r4], #2
900124c2:	e7fa      	b.n	900124ba <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
900124c4:	46b8      	mov	r8, r7
900124c6:	e7d9      	b.n	9001247c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
900124c8:	0e12      	lsrs	r2, r2, #24
900124ca:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90012544 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900124ce:	fb02 f10a 	mul.w	r1, r2, sl
900124d2:	1c4a      	adds	r2, r1, #1
900124d4:	eb02 2221 	add.w	r2, r2, r1, asr #8
900124d8:	1212      	asrs	r2, r2, #8
900124da:	fb02 f507 	mul.w	r5, r2, r7
900124de:	27ff      	movs	r7, #255	@ 0xff
900124e0:	4350      	muls	r0, r2
900124e2:	4353      	muls	r3, r2
900124e4:	43d2      	mvns	r2, r2
900124e6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900124ea:	42b4      	cmp	r4, r6
900124ec:	d220      	bcs.n	90012530 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900124ee:	f8b4 e000 	ldrh.w	lr, [r4]
900124f2:	ea0e 010c 	and.w	r1, lr, ip
900124f6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900124fa:	f00e 0e1f 	and.w	lr, lr, #31
900124fe:	fb02 0101 	mla	r1, r2, r1, r0
90012502:	fb02 3808 	mla	r8, r2, r8, r3
90012506:	fb02 5e0e 	mla	lr, r2, lr, r5
9001250a:	fb91 f1f7 	sdiv	r1, r1, r7
9001250e:	fb98 f8f7 	sdiv	r8, r8, r7
90012512:	fb9e fef7 	sdiv	lr, lr, r7
90012516:	ea01 010c 	and.w	r1, r1, ip
9001251a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001251e:	f00e 0e1f 	and.w	lr, lr, #31
90012522:	ea41 0108 	orr.w	r1, r1, r8
90012526:	ea41 010e 	orr.w	r1, r1, lr
9001252a:	f824 1b02 	strh.w	r1, [r4], #2
9001252e:	e7dc      	b.n	900124ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90012530:	b007      	add	sp, #28
90012532:	ecbd 8b02 	vpop	{d8}
90012536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001253a:	bf00      	nop
9001253c:	00000000 	.word	0x00000000
90012540:	447ffffe 	.word	0x447ffffe
90012544:	fffff800 	.word	0xfffff800

90012548 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90012548:	4770      	bx	lr

9001254a <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
9001254a:	4770      	bx	lr

9001254c <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
9001254c:	b510      	push	{r4, lr}
9001254e:	4604      	mov	r4, r0
90012550:	2124      	movs	r1, #36	@ 0x24
90012552:	f017 f8ed 	bl	90029730 <_ZdlPvj>
90012556:	4620      	mov	r0, r4
90012558:	bd10      	pop	{r4, pc}
	...

9001255c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
9001255c:	094a      	lsrs	r2, r1, #5
9001255e:	4b06      	ldr	r3, [pc, #24]	@ (90012578 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90012560:	60c1      	str	r1, [r0, #12]
90012562:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90012566:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001256a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001256e:	4313      	orrs	r3, r2
90012570:	4319      	orrs	r1, r3
90012572:	8201      	strh	r1, [r0, #16]
90012574:	4770      	bx	lr
90012576:	bf00      	nop
90012578:	fffff800 	.word	0xfffff800

9001257c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
9001257c:	f1a0 0008 	sub.w	r0, r0, #8
90012580:	e7ec      	b.n	9001255c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90012582:	bf00      	nop

90012584 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90012584:	b508      	push	{r3, lr}
90012586:	4b05      	ldr	r3, [pc, #20]	@ (9001259c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90012588:	6818      	ldr	r0, [r3, #0]
9001258a:	6803      	ldr	r3, [r0, #0]
9001258c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90012590:	4798      	blx	r3
90012592:	1e43      	subs	r3, r0, #1
90012594:	4258      	negs	r0, r3
90012596:	4158      	adcs	r0, r3
90012598:	bd08      	pop	{r3, pc}
9001259a:	bf00      	nop
9001259c:	24021844 	.word	0x24021844

900125a0 <_ZN8touchgfx13PainterRGB565D1Ev>:
900125a0:	4770      	bx	lr

900125a2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900125a2:	3808      	subs	r0, #8
900125a4:	4770      	bx	lr

900125a6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900125a6:	b430      	push	{r4, r5}
900125a8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900125ac:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900125b0:	8a02      	ldrh	r2, [r0, #16]
900125b2:	f89d 3010 	ldrb.w	r3, [sp, #16]
900125b6:	4629      	mov	r1, r5
900125b8:	9202      	str	r2, [sp, #8]
900125ba:	68c2      	ldr	r2, [r0, #12]
900125bc:	4620      	mov	r0, r4
900125be:	bc30      	pop	{r4, r5}
900125c0:	f7f0 b9cc 	b.w	9000295c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

900125c4 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
900125c4:	f7f0 b9a6 	b.w	90002914 <_ZN8touchgfx5paint8tearDownEv>

900125c8 <_ZN8touchgfx13PainterRGB565D0Ev>:
900125c8:	b510      	push	{r4, lr}
900125ca:	4604      	mov	r4, r0
900125cc:	2114      	movs	r1, #20
900125ce:	f017 f8af 	bl	90029730 <_ZdlPvj>
900125d2:	4620      	mov	r0, r4
900125d4:	bd10      	pop	{r4, pc}

900125d6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900125d6:	f1a0 0008 	sub.w	r0, r0, #8
900125da:	e7f5      	b.n	900125c8 <_ZN8touchgfx13PainterRGB565D0Ev>

900125dc <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
900125dc:	2300      	movs	r3, #0
900125de:	84c3      	strh	r3, [r0, #38]	@ 0x26
900125e0:	8503      	strh	r3, [r0, #40]	@ 0x28
900125e2:	8543      	strh	r3, [r0, #42]	@ 0x2a
900125e4:	8583      	strh	r3, [r0, #44]	@ 0x2c
900125e6:	6980      	ldr	r0, [r0, #24]
900125e8:	b110      	cbz	r0, 900125f0 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
900125ea:	6803      	ldr	r3, [r0, #0]
900125ec:	691b      	ldr	r3, [r3, #16]
900125ee:	4718      	bx	r3
900125f0:	4770      	bx	lr

900125f2 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
900125f2:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
900125f6:	4770      	bx	lr

900125f8 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
900125f8:	b538      	push	{r3, r4, r5, lr}
900125fa:	0e0b      	lsrs	r3, r1, #24
900125fc:	4604      	mov	r4, r0
900125fe:	460d      	mov	r5, r1
90012600:	7783      	strb	r3, [r0, #30]
90012602:	6803      	ldr	r3, [r0, #0]
90012604:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012606:	4798      	blx	r3
90012608:	6803      	ldr	r3, [r0, #0]
9001260a:	4629      	mov	r1, r5
9001260c:	689b      	ldr	r3, [r3, #8]
9001260e:	4798      	blx	r3
90012610:	6823      	ldr	r3, [r4, #0]
90012612:	4620      	mov	r0, r4
90012614:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90012616:	4798      	blx	r3
90012618:	61a0      	str	r0, [r4, #24]
9001261a:	bd38      	pop	{r3, r4, r5, pc}

9001261c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001261c:	7741      	strb	r1, [r0, #29]
9001261e:	4770      	bx	lr

90012620 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90012620:	b530      	push	{r4, r5, lr}
90012622:	460d      	mov	r5, r1
90012624:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90012628:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001262a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001262c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001262e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012630:	682b      	ldr	r3, [r5, #0]
90012632:	6023      	str	r3, [r4, #0]
90012634:	bd30      	pop	{r4, r5, pc}

90012636 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90012636:	b538      	push	{r3, r4, r5, lr}
90012638:	4604      	mov	r4, r0
9001263a:	1d03      	adds	r3, r0, #4
9001263c:	6808      	ldr	r0, [r1, #0]
9001263e:	2500      	movs	r5, #0
90012640:	6849      	ldr	r1, [r1, #4]
90012642:	c303      	stmia	r3!, {r0, r1}
90012644:	6813      	ldr	r3, [r2, #0]
90012646:	f104 0034 	add.w	r0, r4, #52	@ 0x34
9001264a:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
9001264e:	6853      	ldr	r3, [r2, #4]
90012650:	61a5      	str	r5, [r4, #24]
90012652:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90012656:	f006 fae3 	bl	90018c20 <_ZN8touchgfx9Matrix3x35resetEv>
9001265a:	23ff      	movs	r3, #255	@ 0xff
9001265c:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90012660:	7763      	strb	r3, [r4, #29]
90012662:	77a3      	strb	r3, [r4, #30]
90012664:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90012668:	6323      	str	r3, [r4, #48]	@ 0x30
9001266a:	2301      	movs	r3, #1
9001266c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90012670:	bd38      	pop	{r3, r4, r5, pc}
	...

90012674 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90012674:	ee70 7a41 	vsub.f32	s15, s0, s2
90012678:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001267c:	eef5 7a40 	vcmp.f32	s15, #0.0
90012680:	4605      	mov	r5, r0
90012682:	ed2d 8b0a 	vpush	{d8-d12}
90012686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001268a:	b087      	sub	sp, #28
9001268c:	eef0 9a40 	vmov.f32	s19, s0
90012690:	6802      	ldr	r2, [r0, #0]
90012692:	eeb0 aa60 	vmov.f32	s20, s1
90012696:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001269a:	eeb0 9a41 	vmov.f32	s18, s2
9001269e:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900126a0:	eef0 8a61 	vmov.f32	s17, s3
900126a4:	eeb0 ca42 	vmov.f32	s24, s4
900126a8:	eef0 ca62 	vmov.f32	s25, s5
900126ac:	d112      	bne.n	900126d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900126ae:	ee70 7ae1 	vsub.f32	s15, s1, s3
900126b2:	eef5 7a40 	vcmp.f32	s15, #0.0
900126b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900126ba:	d10b      	bne.n	900126d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900126bc:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
900126c0:	6a92      	ldr	r2, [r2, #40]	@ 0x28
900126c2:	3901      	subs	r1, #1
900126c4:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
900126c8:	b007      	add	sp, #28
900126ca:	ecbd 8b0a 	vpop	{d8-d12}
900126ce:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
900126d2:	4710      	bx	r2
900126d4:	23ff      	movs	r3, #255	@ 0xff
900126d6:	4628      	mov	r0, r5
900126d8:	f105 0834 	add.w	r8, r5, #52	@ 0x34
900126dc:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 900129a4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
900126e0:	77ab      	strb	r3, [r5, #30]
900126e2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900126e4:	4798      	blx	r3
900126e6:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
900126ea:	eeb0 0a69 	vmov.f32	s0, s19
900126ee:	4604      	mov	r4, r0
900126f0:	80c3      	strh	r3, [r0, #6]
900126f2:	eef0 0a4a 	vmov.f32	s1, s20
900126f6:	4640      	mov	r0, r8
900126f8:	f006 fb41 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900126fc:	eeb0 ba40 	vmov.f32	s22, s0
90012700:	ed8d 0a00 	vstr	s0, [sp]
90012704:	eeb0 0a49 	vmov.f32	s0, s18
90012708:	eef0 ba60 	vmov.f32	s23, s1
9001270c:	edcd 0a01 	vstr	s1, [sp, #4]
90012710:	4640      	mov	r0, r8
90012712:	eef0 0a68 	vmov.f32	s1, s17
90012716:	f006 fb32 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001271a:	eeb4 ba40 	vcmp.f32	s22, s0
9001271e:	eeb0 8a40 	vmov.f32	s16, s0
90012722:	ed8d 0a02 	vstr	s0, [sp, #8]
90012726:	eef0 aa60 	vmov.f32	s21, s1
9001272a:	edcd 0a03 	vstr	s1, [sp, #12]
9001272e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012732:	eef4 ba60 	vcmp.f32	s23, s1
90012736:	bf0c      	ite	eq
90012738:	2301      	moveq	r3, #1
9001273a:	2300      	movne	r3, #0
9001273c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012740:	eeb4 ba40 	vcmp.f32	s22, s0
90012744:	7463      	strb	r3, [r4, #17]
90012746:	bf0c      	ite	eq
90012748:	2301      	moveq	r3, #1
9001274a:	2300      	movne	r3, #0
9001274c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012750:	74a3      	strb	r3, [r4, #18]
90012752:	d031      	beq.n	900127b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012754:	eef4 ba60 	vcmp.f32	s23, s1
90012758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001275c:	d02c      	beq.n	900127b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
9001275e:	ee39 9a69 	vsub.f32	s18, s18, s19
90012762:	4640      	mov	r0, r8
90012764:	ee78 8aca 	vsub.f32	s17, s17, s20
90012768:	eef0 0a4a 	vmov.f32	s1, s20
9001276c:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90012770:	eec8 7aac 	vdiv.f32	s15, s17, s25
90012774:	eeb0 0a69 	vmov.f32	s0, s19
90012778:	eeec 0a87 	vfma.f32	s1, s25, s14
9001277c:	eea7 0acc 	vfms.f32	s0, s15, s24
90012780:	f006 fafd 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012784:	f899 3000 	ldrb.w	r3, [r9]
90012788:	edcd 0a05 	vstr	s1, [sp, #20]
9001278c:	ee70 0aeb 	vsub.f32	s1, s1, s23
90012790:	2b01      	cmp	r3, #1
90012792:	bf08      	it	eq
90012794:	eef1 7a60 	vnegeq.f32	s15, s1
90012798:	ed8d 0a04 	vstr	s0, [sp, #16]
9001279c:	ee30 0a4b 	vsub.f32	s0, s0, s22
900127a0:	bf04      	itt	eq
900127a2:	eef0 0a40 	vmoveq.f32	s1, s0
900127a6:	eeb0 0a67 	vmoveq.f32	s0, s15
900127aa:	eeb5 0a40 	vcmp.f32	s0, #0.0
900127ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127b2:	d135      	bne.n	90012820 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
900127b4:	2301      	movs	r3, #1
900127b6:	74a3      	strb	r3, [r4, #18]
900127b8:	f899 2000 	ldrb.w	r2, [r9]
900127bc:	7c63      	ldrb	r3, [r4, #17]
900127be:	2a01      	cmp	r2, #1
900127c0:	f040 80a3 	bne.w	9001290a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
900127c4:	2b00      	cmp	r3, #0
900127c6:	d073      	beq.n	900128b0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
900127c8:	ee3a 7aeb 	vsub.f32	s14, s21, s23
900127cc:	eddf 6a73 	vldr	s13, [pc, #460]	@ 9001299c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
900127d0:	eef4 baea 	vcmpe.f32	s23, s21
900127d4:	eec6 7a87 	vdiv.f32	s15, s13, s14
900127d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127dc:	edc4 7a08 	vstr	s15, [r4, #32]
900127e0:	eefd 7aea 	vcvt.s32.f32	s15, s21
900127e4:	ee17 3a90 	vmov	r3, s15
900127e8:	eefd 7aeb 	vcvt.s32.f32	s15, s23
900127ec:	b21a      	sxth	r2, r3
900127ee:	ee17 3a90 	vmov	r3, s15
900127f2:	bf48      	it	mi
900127f4:	8162      	strhmi	r2, [r4, #10]
900127f6:	b21b      	sxth	r3, r3
900127f8:	bf56      	itet	pl
900127fa:	8122      	strhpl	r2, [r4, #8]
900127fc:	8123      	strhmi	r3, [r4, #8]
900127fe:	8163      	strhpl	r3, [r4, #10]
90012800:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012804:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012808:	1a9b      	subs	r3, r3, r2
9001280a:	ee07 3a90 	vmov	s15, r3
9001280e:	2300      	movs	r3, #0
90012810:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012814:	7463      	strb	r3, [r4, #17]
90012816:	2301      	movs	r3, #1
90012818:	edc4 7a07 	vstr	s15, [r4, #28]
9001281c:	74a3      	strb	r3, [r4, #18]
9001281e:	e03f      	b.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012820:	ee80 7a80 	vdiv.f32	s14, s1, s0
90012824:	eeb5 7a40 	vcmp.f32	s14, #0.0
90012828:	ed84 7a05 	vstr	s14, [r4, #20]
9001282c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012830:	d102      	bne.n	90012838 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90012832:	2301      	movs	r3, #1
90012834:	7463      	strb	r3, [r4, #17]
90012836:	e7bf      	b.n	900127b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012838:	2b01      	cmp	r3, #1
9001283a:	ee38 8a4b 	vsub.f32	s16, s16, s22
9001283e:	ee7a aaeb 	vsub.f32	s21, s21, s23
90012842:	bf0b      	itete	eq
90012844:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90012848:	eef0 7a6b 	vmovne.f32	s15, s23
9001284c:	ee07 2a90 	vmoveq	s15, r2
90012850:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90012854:	bf02      	ittt	eq
90012856:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
9001285a:	ee77 7acb 	vsubeq.f32	s15, s15, s22
9001285e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90012862:	2b01      	cmp	r3, #1
90012864:	edc4 7a06 	vstr	s15, [r4, #24]
90012868:	bf02      	ittt	eq
9001286a:	eef1 7a48 	vnegeq.f32	s15, s16
9001286e:	eeb0 8a6a 	vmoveq.f32	s16, s21
90012872:	eef0 aa67 	vmoveq.f32	s21, s15
90012876:	eeca 7a87 	vdiv.f32	s15, s21, s14
9001287a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 900129a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
9001287e:	ee38 8a67 	vsub.f32	s16, s16, s15
90012882:	eec7 7a08 	vdiv.f32	s15, s14, s16
90012886:	ed84 8a07 	vstr	s16, [r4, #28]
9001288a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9001288e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012892:	edc4 7a08 	vstr	s15, [r4, #32]
90012896:	d503      	bpl.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012898:	eeb1 8a48 	vneg.f32	s16, s16
9001289c:	ed84 8a07 	vstr	s16, [r4, #28]
900128a0:	60e7      	str	r7, [r4, #12]
900128a2:	7426      	strb	r6, [r4, #16]
900128a4:	61ac      	str	r4, [r5, #24]
900128a6:	b007      	add	sp, #28
900128a8:	ecbd 8b0a 	vpop	{d8-d12}
900128ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900128b0:	7ca3      	ldrb	r3, [r4, #18]
900128b2:	2b00      	cmp	r3, #0
900128b4:	d0f4      	beq.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900128b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900128ba:	eddf 6a38 	vldr	s13, [pc, #224]	@ 9001299c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
900128be:	ee00 3a10 	vmov	s0, r3
900128c2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
900128c6:	ee30 8a48 	vsub.f32	s16, s0, s16
900128ca:	ee30 0a4b 	vsub.f32	s0, s0, s22
900128ce:	ee38 7a40 	vsub.f32	s14, s16, s0
900128d2:	eeb4 8ac0 	vcmpe.f32	s16, s0
900128d6:	eec6 7a87 	vdiv.f32	s15, s13, s14
900128da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900128de:	edc4 7a08 	vstr	s15, [r4, #32]
900128e2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900128e6:	ee17 3a90 	vmov	r3, s15
900128ea:	eefd 7ac0 	vcvt.s32.f32	s15, s0
900128ee:	b21a      	sxth	r2, r3
900128f0:	ee17 3a90 	vmov	r3, s15
900128f4:	bfc8      	it	gt
900128f6:	8162      	strhgt	r2, [r4, #10]
900128f8:	b21b      	sxth	r3, r3
900128fa:	bfd6      	itet	le
900128fc:	8122      	strhle	r2, [r4, #8]
900128fe:	8123      	strhgt	r3, [r4, #8]
90012900:	8163      	strhle	r3, [r4, #10]
90012902:	2301      	movs	r3, #1
90012904:	7463      	strb	r3, [r4, #17]
90012906:	2300      	movs	r3, #0
90012908:	e788      	b.n	9001281c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
9001290a:	b1e3      	cbz	r3, 90012946 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
9001290c:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012910:	eddf 6a22 	vldr	s13, [pc, #136]	@ 9001299c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012914:	eef4 baea 	vcmpe.f32	s23, s21
90012918:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001291c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012920:	edc4 7a08 	vstr	s15, [r4, #32]
90012924:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012928:	ee17 3a90 	vmov	r3, s15
9001292c:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012930:	b21a      	sxth	r2, r3
90012932:	ee17 3a90 	vmov	r3, s15
90012936:	bf48      	it	mi
90012938:	8162      	strhmi	r2, [r4, #10]
9001293a:	b21b      	sxth	r3, r3
9001293c:	bf56      	itet	pl
9001293e:	8122      	strhpl	r2, [r4, #8]
90012940:	8123      	strhmi	r3, [r4, #8]
90012942:	8163      	strhpl	r3, [r4, #10]
90012944:	e7ac      	b.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012946:	7ca3      	ldrb	r3, [r4, #18]
90012948:	2b00      	cmp	r3, #0
9001294a:	d0a9      	beq.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
9001294c:	ee38 7a4b 	vsub.f32	s14, s16, s22
90012950:	eddf 6a12 	vldr	s13, [pc, #72]	@ 9001299c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012954:	eeb4 bac8 	vcmpe.f32	s22, s16
90012958:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001295c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012960:	edc4 7a08 	vstr	s15, [r4, #32]
90012964:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012968:	ee17 3a90 	vmov	r3, s15
9001296c:	eefd 7acb 	vcvt.s32.f32	s15, s22
90012970:	b21a      	sxth	r2, r3
90012972:	ee17 3a90 	vmov	r3, s15
90012976:	bf48      	it	mi
90012978:	8162      	strhmi	r2, [r4, #10]
9001297a:	b21b      	sxth	r3, r3
9001297c:	bf56      	itet	pl
9001297e:	8122      	strhpl	r2, [r4, #8]
90012980:	8123      	strhmi	r3, [r4, #8]
90012982:	8163      	strhpl	r3, [r4, #10]
90012984:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012988:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001298c:	1a9b      	subs	r3, r3, r2
9001298e:	ee07 3a90 	vmov	s15, r3
90012992:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012996:	edc4 7a07 	vstr	s15, [r4, #28]
9001299a:	e781      	b.n	900128a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
9001299c:	447ffffe 	.word	0x447ffffe
900129a0:	44800000 	.word	0x44800000
900129a4:	2402183c 	.word	0x2402183c

900129a8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
900129a8:	b510      	push	{r4, lr}
900129aa:	ed2d 8b02 	vpush	{d8}
900129ae:	eef0 8a62 	vmov.f32	s17, s5
900129b2:	2100      	movs	r1, #0
900129b4:	4604      	mov	r4, r0
900129b6:	eeb0 8a42 	vmov.f32	s16, s4
900129ba:	f016 fc2b 	bl	90029214 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900129be:	eef0 7a68 	vmov.f32	s15, s17
900129c2:	6823      	ldr	r3, [r4, #0]
900129c4:	4620      	mov	r0, r4
900129c6:	689b      	ldr	r3, [r3, #8]
900129c8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900129cc:	ee17 2a90 	vmov	r2, s15
900129d0:	eef0 7a48 	vmov.f32	s15, s16
900129d4:	ecbd 8b02 	vpop	{d8}
900129d8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900129dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900129e0:	ee17 1a90 	vmov	r1, s15
900129e4:	4718      	bx	r3

900129e6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
900129e6:	b510      	push	{r4, lr}
900129e8:	ed2d 8b02 	vpush	{d8}
900129ec:	eef0 8a63 	vmov.f32	s17, s7
900129f0:	2100      	movs	r1, #0
900129f2:	4604      	mov	r4, r0
900129f4:	eeb0 8a43 	vmov.f32	s16, s6
900129f8:	f016 fcce 	bl	90029398 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
900129fc:	eef0 7a68 	vmov.f32	s15, s17
90012a00:	6823      	ldr	r3, [r4, #0]
90012a02:	4620      	mov	r0, r4
90012a04:	689b      	ldr	r3, [r3, #8]
90012a06:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a0a:	ee17 2a90 	vmov	r2, s15
90012a0e:	eef0 7a48 	vmov.f32	s15, s16
90012a12:	ecbd 8b02 	vpop	{d8}
90012a16:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012a1e:	ee17 1a90 	vmov	r1, s15
90012a22:	4718      	bx	r3

90012a24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90012a24:	b513      	push	{r0, r1, r4, lr}
90012a26:	4604      	mov	r4, r0
90012a28:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012a2a:	f006 f9a8 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012a2e:	eef0 7a60 	vmov.f32	s15, s1
90012a32:	4620      	mov	r0, r4
90012a34:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a38:	ee17 2a90 	vmov	r2, s15
90012a3c:	eef0 7a40 	vmov.f32	s15, s0
90012a40:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a44:	ee17 1a90 	vmov	r1, s15
90012a48:	b002      	add	sp, #8
90012a4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012a4e:	f016 bb3b 	b.w	900290c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90012a52:	b513      	push	{r0, r1, r4, lr}
90012a54:	4604      	mov	r4, r0
90012a56:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012a58:	f006 f991 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012a5c:	eef0 7a60 	vmov.f32	s15, s1
90012a60:	4620      	mov	r0, r4
90012a62:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a66:	ee17 2a90 	vmov	r2, s15
90012a6a:	eef0 7a40 	vmov.f32	s15, s0
90012a6e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012a72:	ee17 1a90 	vmov	r1, s15
90012a76:	b002      	add	sp, #8
90012a78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012a7c:	f016 bb71 	b.w	90029162 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90012a80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90012a80:	b5f0      	push	{r4, r5, r6, r7, lr}
90012a82:	2400      	movs	r4, #0
90012a84:	9f07      	ldr	r7, [sp, #28]
90012a86:	f04f 0e01 	mov.w	lr, #1
90012a8a:	4626      	mov	r6, r4
90012a8c:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90012a90:	4463      	add	r3, ip
90012a92:	4563      	cmp	r3, ip
90012a94:	d02d      	beq.n	90012af2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90012a96:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90012a9a:	2d06      	cmp	r5, #6
90012a9c:	d8f9      	bhi.n	90012a92 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012a9e:	fa0e f505 	lsl.w	r5, lr, r5
90012aa2:	f015 0f66 	tst.w	r5, #102	@ 0x66
90012aa6:	d10d      	bne.n	90012ac4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90012aa8:	f015 0f10 	tst.w	r5, #16
90012aac:	d117      	bne.n	90012ade <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90012aae:	072d      	lsls	r5, r5, #28
90012ab0:	d5ef      	bpl.n	90012a92 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012ab2:	3801      	subs	r0, #1
90012ab4:	b91e      	cbnz	r6, 90012abe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012ab6:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90012aba:	682d      	ldr	r5, [r5, #0]
90012abc:	600d      	str	r5, [r1, #0]
90012abe:	b96c      	cbnz	r4, 90012adc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012ac0:	2601      	movs	r6, #1
90012ac2:	e7e6      	b.n	90012a92 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012ac4:	b926      	cbnz	r6, 90012ad0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012ac6:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90012aca:	f853 3c08 	ldr.w	r3, [r3, #-8]
90012ace:	600b      	str	r3, [r1, #0]
90012ad0:	b924      	cbnz	r4, 90012adc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012ad2:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012ad6:	f850 3c04 	ldr.w	r3, [r0, #-4]
90012ada:	6013      	str	r3, [r2, #0]
90012adc:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012ade:	3801      	subs	r0, #1
90012ae0:	b91c      	cbnz	r4, 90012aea <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90012ae2:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90012ae6:	6824      	ldr	r4, [r4, #0]
90012ae8:	6014      	str	r4, [r2, #0]
90012aea:	2e00      	cmp	r6, #0
90012aec:	d1f6      	bne.n	90012adc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012aee:	2401      	movs	r4, #1
90012af0:	e7cf      	b.n	90012a92 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012af2:	b90e      	cbnz	r6, 90012af8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90012af4:	2300      	movs	r3, #0
90012af6:	600b      	str	r3, [r1, #0]
90012af8:	2c00      	cmp	r4, #0
90012afa:	d1ef      	bne.n	90012adc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012afc:	2300      	movs	r3, #0
90012afe:	e7ec      	b.n	90012ada <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90012b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90012b00:	b538      	push	{r3, r4, r5, lr}
90012b02:	ed2d 8b0a 	vpush	{d8-d12}
90012b06:	eef0 ba40 	vmov.f32	s23, s0
90012b0a:	4604      	mov	r4, r0
90012b0c:	eeb0 ca60 	vmov.f32	s24, s1
90012b10:	460d      	mov	r5, r1
90012b12:	eef0 aa41 	vmov.f32	s21, s2
90012b16:	eeb0 ba61 	vmov.f32	s22, s3
90012b1a:	eeb0 9a42 	vmov.f32	s18, s4
90012b1e:	eef0 9a62 	vmov.f32	s19, s5
90012b22:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90012b26:	ee7b 8a29 	vadd.f32	s17, s22, s19
90012b2a:	ee3a 8a89 	vadd.f32	s16, s21, s18
90012b2e:	ee68 8a8a 	vmul.f32	s17, s17, s20
90012b32:	ee28 8a0a 	vmul.f32	s16, s16, s20
90012b36:	ee3c 0a68 	vsub.f32	s0, s24, s17
90012b3a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90012b3e:	ee20 0a00 	vmul.f32	s0, s0, s0
90012b42:	eea7 0aa7 	vfma.f32	s0, s15, s15
90012b46:	f016 fe1d 	bl	90029784 <sqrtf>
90012b4a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90012b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012b52:	d12e      	bne.n	90012bb2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90012b54:	ee79 7a6a 	vsub.f32	s15, s18, s21
90012b58:	ee39 7acb 	vsub.f32	s14, s19, s22
90012b5c:	eeb0 8a6a 	vmov.f32	s16, s21
90012b60:	eef0 8a4b 	vmov.f32	s17, s22
90012b64:	eea7 8a8a 	vfma.f32	s16, s15, s20
90012b68:	eee7 8a0a 	vfma.f32	s17, s14, s20
90012b6c:	eea7 8a0a 	vfma.f32	s16, s14, s20
90012b70:	eee7 8aca 	vfms.f32	s17, s15, s20
90012b74:	2d02      	cmp	r5, #2
90012b76:	dc2f      	bgt.n	90012bd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90012b78:	3501      	adds	r5, #1
90012b7a:	eef0 1a4b 	vmov.f32	s3, s22
90012b7e:	eeb0 1a6a 	vmov.f32	s2, s21
90012b82:	4620      	mov	r0, r4
90012b84:	4629      	mov	r1, r5
90012b86:	eef0 2a68 	vmov.f32	s5, s17
90012b8a:	eeb0 2a48 	vmov.f32	s4, s16
90012b8e:	eef0 0a4c 	vmov.f32	s1, s24
90012b92:	eeb0 0a6b 	vmov.f32	s0, s23
90012b96:	f7ff ffb3 	bl	90012b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012b9a:	eef0 0a68 	vmov.f32	s1, s17
90012b9e:	eeb0 0a48 	vmov.f32	s0, s16
90012ba2:	4620      	mov	r0, r4
90012ba4:	f7ff ff55 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012ba8:	eeb0 ba68 	vmov.f32	s22, s17
90012bac:	eef0 aa48 	vmov.f32	s21, s16
90012bb0:	e7b9      	b.n	90012b26 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90012bb2:	ee38 8a6b 	vsub.f32	s16, s16, s23
90012bb6:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012bba:	ee78 8acc 	vsub.f32	s17, s17, s24
90012bbe:	ee28 7a27 	vmul.f32	s14, s16, s15
90012bc2:	ee68 7aa7 	vmul.f32	s15, s17, s15
90012bc6:	ee87 8a00 	vdiv.f32	s16, s14, s0
90012bca:	eec7 8a80 	vdiv.f32	s17, s15, s0
90012bce:	ee3b 8a88 	vadd.f32	s16, s23, s16
90012bd2:	ee7c 8a28 	vadd.f32	s17, s24, s17
90012bd6:	e7cd      	b.n	90012b74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90012bd8:	eef0 0a68 	vmov.f32	s1, s17
90012bdc:	4620      	mov	r0, r4
90012bde:	eeb0 0a48 	vmov.f32	s0, s16
90012be2:	f7ff ff36 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012be6:	ecbd 8b0a 	vpop	{d8-d12}
90012bea:	bd38      	pop	{r3, r4, r5, pc}

90012bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90012bec:	b510      	push	{r4, lr}
90012bee:	ed2d 8b0a 	vpush	{d8-d12}
90012bf2:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90012bf6:	4604      	mov	r4, r0
90012bf8:	eeb0 ca40 	vmov.f32	s24, s0
90012bfc:	2b02      	cmp	r3, #2
90012bfe:	eeb0 9a60 	vmov.f32	s18, s1
90012c02:	eef0 9a41 	vmov.f32	s19, s2
90012c06:	eef0 8a61 	vmov.f32	s17, s3
90012c0a:	eeb0 ba42 	vmov.f32	s22, s4
90012c0e:	eef0 ba62 	vmov.f32	s23, s5
90012c12:	eeb0 aa43 	vmov.f32	s20, s6
90012c16:	eef0 aa63 	vmov.f32	s21, s7
90012c1a:	eeb0 8a44 	vmov.f32	s16, s8
90012c1e:	eef0 ca64 	vmov.f32	s25, s9
90012c22:	d12c      	bne.n	90012c7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90012c24:	eef0 0a62 	vmov.f32	s1, s5
90012c28:	eeb0 0a42 	vmov.f32	s0, s4
90012c2c:	f7ff ff11 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012c30:	ee79 9acb 	vsub.f32	s19, s19, s22
90012c34:	ee7a caec 	vsub.f32	s25, s21, s25
90012c38:	ee78 8aeb 	vsub.f32	s17, s17, s23
90012c3c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012c40:	ee69 9aac 	vmul.f32	s19, s19, s25
90012c44:	ee28 8a88 	vmul.f32	s16, s17, s16
90012c48:	eef4 9ac8 	vcmpe.f32	s19, s16
90012c4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c50:	db0f      	blt.n	90012c72 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90012c52:	2101      	movs	r1, #1
90012c54:	eef0 2a6a 	vmov.f32	s5, s21
90012c58:	eeb0 2a4a 	vmov.f32	s4, s20
90012c5c:	4620      	mov	r0, r4
90012c5e:	eef0 1a6b 	vmov.f32	s3, s23
90012c62:	eeb0 1a4b 	vmov.f32	s2, s22
90012c66:	eef0 0a49 	vmov.f32	s1, s18
90012c6a:	eeb0 0a4c 	vmov.f32	s0, s24
90012c6e:	f7ff ff47 	bl	90012b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012c72:	eef0 0a6a 	vmov.f32	s1, s21
90012c76:	4620      	mov	r0, r4
90012c78:	eeb0 0a4a 	vmov.f32	s0, s20
90012c7c:	e035      	b.n	90012cea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90012c7e:	2b01      	cmp	r3, #1
90012c80:	d138      	bne.n	90012cf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012c82:	ee31 4ae2 	vsub.f32	s8, s3, s5
90012c86:	ee33 6a48 	vsub.f32	s12, s6, s16
90012c8a:	ee71 7a42 	vsub.f32	s15, s2, s4
90012c8e:	ee73 6ae4 	vsub.f32	s13, s7, s9
90012c92:	ee26 7a44 	vnmul.f32	s14, s12, s8
90012c96:	eea7 7aa6 	vfma.f32	s14, s15, s13
90012c9a:	eeb5 7a40 	vcmp.f32	s14, #0.0
90012c9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012ca2:	d027      	beq.n	90012cf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012ca4:	ee28 8a63 	vnmul.f32	s16, s16, s7
90012ca8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90012cac:	eea4 8a83 	vfma.f32	s16, s9, s6
90012cb0:	eee1 8a22 	vfma.f32	s17, s2, s5
90012cb4:	ee68 7a67 	vnmul.f32	s15, s16, s15
90012cb8:	ee28 8a44 	vnmul.f32	s16, s16, s8
90012cbc:	eee6 7a28 	vfma.f32	s15, s12, s17
90012cc0:	eea6 8aa8 	vfma.f32	s16, s13, s17
90012cc4:	ee87 0a87 	vdiv.f32	s0, s15, s14
90012cc8:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90012ccc:	eec8 0a07 	vdiv.f32	s1, s16, s14
90012cd0:	ee3c ca40 	vsub.f32	s24, s24, s0
90012cd4:	ee39 9a60 	vsub.f32	s18, s18, s1
90012cd8:	ee29 9a09 	vmul.f32	s18, s18, s18
90012cdc:	eeac 9a0c 	vfma.f32	s18, s24, s24
90012ce0:	eef4 7ac9 	vcmpe.f32	s15, s18
90012ce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012ce8:	db04      	blt.n	90012cf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012cea:	f7ff feb2 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012cee:	ecbd 8b0a 	vpop	{d8-d12}
90012cf2:	bd10      	pop	{r4, pc}
90012cf4:	eef0 0a6b 	vmov.f32	s1, s23
90012cf8:	4620      	mov	r0, r4
90012cfa:	eeb0 0a4b 	vmov.f32	s0, s22
90012cfe:	f7ff fea8 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012d02:	e7b6      	b.n	90012c72 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90012d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90012d04:	b510      	push	{r4, lr}
90012d06:	ed2d 8b0c 	vpush	{d8-d13}
90012d0a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90012d0e:	4604      	mov	r4, r0
90012d10:	eeb0 9a40 	vmov.f32	s18, s0
90012d14:	eef0 9a60 	vmov.f32	s19, s1
90012d18:	eef0 aa41 	vmov.f32	s21, s2
90012d1c:	eeb0 ba61 	vmov.f32	s22, s3
90012d20:	b933      	cbnz	r3, 90012d30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90012d22:	f7ff fe96 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012d26:	eef0 0a4b 	vmov.f32	s1, s22
90012d2a:	eeb0 0a6a 	vmov.f32	s0, s21
90012d2e:	e015      	b.n	90012d5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90012d30:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90012d34:	2b02      	cmp	r3, #2
90012d36:	ee71 8a40 	vsub.f32	s17, s2, s0
90012d3a:	ee31 8ae0 	vsub.f32	s16, s3, s1
90012d3e:	ee68 8aa7 	vmul.f32	s17, s17, s15
90012d42:	ee28 8a27 	vmul.f32	s16, s16, s15
90012d46:	d10f      	bne.n	90012d68 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90012d48:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012d4c:	ee30 0a08 	vadd.f32	s0, s0, s16
90012d50:	f7ff fe7f 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012d54:	ee7b 0a68 	vsub.f32	s1, s22, s17
90012d58:	ee3a 0a88 	vadd.f32	s0, s21, s16
90012d5c:	4620      	mov	r0, r4
90012d5e:	f7ff fe78 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012d62:	ecbd 8b0c 	vpop	{d8-d13}
90012d66:	bd10      	pop	{r4, pc}
90012d68:	f7ff fe73 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012d6c:	eef0 0a69 	vmov.f32	s1, s19
90012d70:	eeb0 0a49 	vmov.f32	s0, s18
90012d74:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90012ea4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90012d78:	eeb1 aa68 	vneg.f32	s20, s17
90012d7c:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90012ea8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90012d80:	eee8 0a27 	vfma.f32	s1, s16, s15
90012d84:	4620      	mov	r0, r4
90012d86:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012d8a:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90012eac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90012d8e:	eddf ca48 	vldr	s25, [pc, #288]	@ 90012eb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90012d92:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012eb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90012d96:	eeea 0a2b 	vfma.f32	s1, s20, s23
90012d9a:	eea8 0a2b 	vfma.f32	s0, s16, s23
90012d9e:	f7ff fe58 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012da2:	eef0 0a69 	vmov.f32	s1, s19
90012da6:	eeb0 0a49 	vmov.f32	s0, s18
90012daa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012eb8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90012dae:	4620      	mov	r0, r4
90012db0:	eee8 0a27 	vfma.f32	s1, s16, s15
90012db4:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012db8:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012dbc:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012dc0:	f7ff fe47 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012dc4:	eef0 0a69 	vmov.f32	s1, s19
90012dc8:	eeb0 0a49 	vmov.f32	s0, s18
90012dcc:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90012ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90012dd0:	4620      	mov	r0, r4
90012dd2:	eee8 0a27 	vfma.f32	s1, s16, s15
90012dd6:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012dda:	eeea 0a2c 	vfma.f32	s1, s20, s25
90012dde:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012de2:	f7ff fe36 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012de6:	eef0 0a69 	vmov.f32	s1, s19
90012dea:	eeb0 0a49 	vmov.f32	s0, s18
90012dee:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90012ec0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90012df2:	4620      	mov	r0, r4
90012df4:	eee8 0a27 	vfma.f32	s1, s16, s15
90012df8:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012dfc:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012e00:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012e04:	f7ff fe25 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012e08:	ee79 0a88 	vadd.f32	s1, s19, s16
90012e0c:	ee39 0a28 	vadd.f32	s0, s18, s17
90012e10:	4620      	mov	r0, r4
90012e12:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012e16:	ee30 0a08 	vadd.f32	s0, s0, s16
90012e1a:	f7ff fe1a 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012e1e:	eef0 0a69 	vmov.f32	s1, s19
90012e22:	eeb0 0a49 	vmov.f32	s0, s18
90012e26:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012ec4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90012e2a:	4620      	mov	r0, r4
90012e2c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012e30:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012e34:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012e38:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012e3c:	f7ff fe09 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012e40:	eef0 0a69 	vmov.f32	s1, s19
90012e44:	eeb0 0a49 	vmov.f32	s0, s18
90012e48:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012ec8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90012e4c:	4620      	mov	r0, r4
90012e4e:	eee8 0a27 	vfma.f32	s1, s16, s15
90012e52:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012e56:	eeea 0a2c 	vfma.f32	s1, s20, s25
90012e5a:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012e5e:	f7ff fdf8 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012e62:	eef0 0a69 	vmov.f32	s1, s19
90012e66:	eeb0 0a49 	vmov.f32	s0, s18
90012e6a:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90012ecc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90012e6e:	4620      	mov	r0, r4
90012e70:	eee8 0a27 	vfma.f32	s1, s16, s15
90012e74:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012e78:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012e7c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012e80:	f7ff fde7 	bl	90012a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012e84:	eef0 0a69 	vmov.f32	s1, s19
90012e88:	eeb0 0a49 	vmov.f32	s0, s18
90012e8c:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90012ed0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90012e90:	4620      	mov	r0, r4
90012e92:	eee8 0a27 	vfma.f32	s1, s16, s15
90012e96:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012e9a:	eeea 0a2b 	vfma.f32	s1, s20, s23
90012e9e:	eea8 0a2b 	vfma.f32	s0, s16, s23
90012ea2:	e73e      	b.n	90012d22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90012ea4:	3d23d70a 	.word	0x3d23d70a
90012ea8:	3e8f5c29 	.word	0x3e8f5c29
90012eac:	3f19999a 	.word	0x3f19999a
90012eb0:	3f4ccccd 	.word	0x3f4ccccd
90012eb4:	3f75c28f 	.word	0x3f75c28f
90012eb8:	3e4ccccd 	.word	0x3e4ccccd
90012ebc:	3ecccccd 	.word	0x3ecccccd
90012ec0:	3f3851ec 	.word	0x3f3851ec
90012ec4:	3fa3d70a 	.word	0x3fa3d70a
90012ec8:	3fcccccd 	.word	0x3fcccccd
90012ecc:	3fe66666 	.word	0x3fe66666
90012ed0:	3ffae148 	.word	0x3ffae148

90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90012ed4:	b570      	push	{r4, r5, r6, lr}
90012ed6:	ed2d 8b06 	vpush	{d8-d10}
90012eda:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012ede:	eef0 aa40 	vmov.f32	s21, s0
90012ee2:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90012ee6:	4604      	mov	r4, r0
90012ee8:	ee30 8ac8 	vsub.f32	s16, s1, s16
90012eec:	ee30 9a49 	vsub.f32	s18, s0, s18
90012ef0:	eeb0 aa60 	vmov.f32	s20, s1
90012ef4:	ee28 0a08 	vmul.f32	s0, s16, s16
90012ef8:	eea9 0a09 	vfma.f32	s0, s18, s18
90012efc:	f016 fc42 	bl	90029784 <sqrtf>
90012f00:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90012f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012f08:	dd36      	ble.n	90012f78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90012f0a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012f0e:	2600      	movs	r6, #0
90012f10:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90012f14:	eec0 6a27 	vdiv.f32	s13, s0, s15
90012f18:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90012f1c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90012f20:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012f24:	eec8 8a26 	vdiv.f32	s17, s16, s13
90012f28:	ee89 8a26 	vdiv.f32	s16, s18, s13
90012f2c:	ee70 9a28 	vadd.f32	s19, s0, s17
90012f30:	ee78 8aaa 	vadd.f32	s17, s17, s21
90012f34:	ee30 9ac8 	vsub.f32	s18, s1, s16
90012f38:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012f3c:	b1fd      	cbz	r5, 90012f7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90012f3e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90012f42:	eef0 0a49 	vmov.f32	s1, s18
90012f46:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90012f4a:	eeb0 0a69 	vmov.f32	s0, s19
90012f4e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90012f52:	4620      	mov	r0, r4
90012f54:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90012f58:	f7ff fd64 	bl	90012a24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012f5c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90012f60:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90012f64:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90012f68:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90012f6c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90012f70:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90012f74:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90012f78:	ecbd 8b06 	vpop	{d8-d10}
90012f7c:	bd70      	pop	{r4, r5, r6, pc}
90012f7e:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90012f82:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90012f86:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90012f8a:	b16b      	cbz	r3, 90012fa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90012f8c:	eef0 1a49 	vmov.f32	s3, s18
90012f90:	4620      	mov	r0, r4
90012f92:	eeb0 1a69 	vmov.f32	s2, s19
90012f96:	eef0 0a62 	vmov.f32	s1, s5
90012f9a:	eeb0 0a42 	vmov.f32	s0, s4
90012f9e:	f7ff feb1 	bl	90012d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012fa2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90012fa6:	e7db      	b.n	90012f60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90012fa8:	eef0 4a48 	vmov.f32	s9, s16
90012fac:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012fb0:	eeb0 4a68 	vmov.f32	s8, s17
90012fb4:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012fb8:	eef0 3a49 	vmov.f32	s7, s18
90012fbc:	4620      	mov	r0, r4
90012fbe:	eeb0 3a69 	vmov.f32	s6, s19
90012fc2:	f7ff fe13 	bl	90012bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012fc6:	e7cb      	b.n	90012f60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012fc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012fc8:	ee07 2a90 	vmov	s15, r2
90012fcc:	ee07 1a10 	vmov	s14, r1
90012fd0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90012fd4:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90012fe8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90012fd8:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90012fdc:	ee60 0aa7 	vmul.f32	s1, s1, s15
90012fe0:	ee20 0a27 	vmul.f32	s0, s0, s15
90012fe4:	f7ff bf76 	b.w	90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012fe8:	3d000000 	.word	0x3d000000

90012fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90012fec:	b538      	push	{r3, r4, r5, lr}
90012fee:	ed2d 8b02 	vpush	{d8}
90012ff2:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90012ff6:	4604      	mov	r4, r0
90012ff8:	b31d      	cbz	r5, 90013042 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90012ffa:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90012ffe:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90013002:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90013006:	ee78 8a67 	vsub.f32	s17, s16, s15
9001300a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001300e:	eef0 0a68 	vmov.f32	s1, s17
90013012:	f7ff fd07 	bl	90012a24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90013016:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001301a:	eef0 1a48 	vmov.f32	s3, s16
9001301e:	4620      	mov	r0, r4
90013020:	eeb0 0a41 	vmov.f32	s0, s2
90013024:	eef0 0a68 	vmov.f32	s1, s17
90013028:	f7ff fe6c 	bl	90012d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001302c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013030:	eef0 1a68 	vmov.f32	s3, s17
90013034:	4620      	mov	r0, r4
90013036:	eef0 0a48 	vmov.f32	s1, s16
9001303a:	eeb0 0a41 	vmov.f32	s0, s2
9001303e:	f7ff fe61 	bl	90012d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013042:	4628      	mov	r0, r5
90013044:	ecbd 8b02 	vpop	{d8}
90013048:	bd38      	pop	{r3, r4, r5, pc}

9001304a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
9001304a:	b510      	push	{r4, lr}
9001304c:	ed2d 8b02 	vpush	{d8}
90013050:	4604      	mov	r4, r0
90013052:	eeb0 8a40 	vmov.f32	s16, s0
90013056:	eef0 8a60 	vmov.f32	s17, s1
9001305a:	f7ff ffc7 	bl	90012fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001305e:	b9d0      	cbnz	r0, 90013096 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90013060:	4620      	mov	r0, r4
90013062:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90013066:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
9001306a:	eef0 0a68 	vmov.f32	s1, s17
9001306e:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90013072:	eeb0 0a48 	vmov.f32	s0, s16
90013076:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
9001307a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
9001307e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90013082:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90013086:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
9001308a:	f7ff fdaf 	bl	90012bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
9001308e:	2001      	movs	r0, #1
90013090:	ecbd 8b02 	vpop	{d8}
90013094:	bd10      	pop	{r4, pc}
90013096:	2000      	movs	r0, #0
90013098:	e7fa      	b.n	90013090 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

9001309a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
9001309a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
9001309e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900130a2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900130a6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900130aa:	f7ff be2b 	b.w	90012d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

900130b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
900130b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900130b4:	b089      	sub	sp, #36	@ 0x24
900130b6:	461c      	mov	r4, r3
900130b8:	4682      	mov	sl, r0
900130ba:	4615      	mov	r5, r2
900130bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900130c0:	f10d 0820 	add.w	r8, sp, #32
900130c4:	9e15      	ldr	r6, [sp, #84]	@ 0x54
900130c6:	9304      	str	r3, [sp, #16]
900130c8:	2300      	movs	r3, #0
900130ca:	9105      	str	r1, [sp, #20]
900130cc:	9306      	str	r3, [sp, #24]
900130ce:	f848 3d04 	str.w	r3, [r8, #-4]!
900130d2:	9b04      	ldr	r3, [sp, #16]
900130d4:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
900130d8:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
900130dc:	9b05      	ldr	r3, [sp, #20]
900130de:	429d      	cmp	r5, r3
900130e0:	d96d      	bls.n	900131be <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
900130e2:	3d01      	subs	r5, #1
900130e4:	f819 3005 	ldrb.w	r3, [r9, r5]
900130e8:	2b06      	cmp	r3, #6
900130ea:	d8f7      	bhi.n	900130dc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900130ec:	a201      	add	r2, pc, #4	@ (adr r2, 900130f4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
900130ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900130f2:	bf00      	nop
900130f4:	90013113 	.word	0x90013113
900130f8:	900130dd 	.word	0x900130dd
900130fc:	90013111 	.word	0x90013111
90013100:	90013135 	.word	0x90013135
90013104:	90013135 	.word	0x90013135
90013108:	90013139 	.word	0x90013139
9001310c:	90013179 	.word	0x90013179
90013110:	3c02      	subs	r4, #2
90013112:	4650      	mov	r0, sl
90013114:	9400      	str	r4, [sp, #0]
90013116:	462b      	mov	r3, r5
90013118:	4642      	mov	r2, r8
9001311a:	a906      	add	r1, sp, #24
9001311c:	e9cd 9701 	strd	r9, r7, [sp, #4]
90013120:	f7ff fcae 	bl	90012a80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90013124:	eddd 0a07 	vldr	s1, [sp, #28]
90013128:	ed9d 0a06 	vldr	s0, [sp, #24]
9001312c:	4630      	mov	r0, r6
9001312e:	f7ff fed1 	bl	90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013132:	e7d3      	b.n	900130dc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90013134:	3c01      	subs	r4, #1
90013136:	e7ec      	b.n	90013112 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90013138:	f1a4 0b04 	sub.w	fp, r4, #4
9001313c:	3c02      	subs	r4, #2
9001313e:	4650      	mov	r0, sl
90013140:	462b      	mov	r3, r5
90013142:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90013146:	f8cd b000 	str.w	fp, [sp]
9001314a:	4642      	mov	r2, r8
9001314c:	a906      	add	r1, sp, #24
9001314e:	e9cd 9701 	strd	r9, r7, [sp, #4]
90013152:	f7ff fc95 	bl	90012a80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90013156:	eddd 2a07 	vldr	s5, [sp, #28]
9001315a:	ed9d 2a06 	vldr	s4, [sp, #24]
9001315e:	4630      	mov	r0, r6
90013160:	ed54 1a01 	vldr	s3, [r4, #-4]
90013164:	ed14 1a02 	vldr	s2, [r4, #-8]
90013168:	edd4 0a01 	vldr	s1, [r4, #4]
9001316c:	ed94 0a00 	vldr	s0, [r4]
90013170:	f7ff fc1a 	bl	900129a8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90013174:	465c      	mov	r4, fp
90013176:	e7b1      	b.n	900130dc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90013178:	f1a4 0b06 	sub.w	fp, r4, #6
9001317c:	3c02      	subs	r4, #2
9001317e:	4650      	mov	r0, sl
90013180:	462b      	mov	r3, r5
90013182:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90013186:	f8cd b000 	str.w	fp, [sp]
9001318a:	4642      	mov	r2, r8
9001318c:	a906      	add	r1, sp, #24
9001318e:	e9cd 9701 	strd	r9, r7, [sp, #4]
90013192:	f7ff fc75 	bl	90012a80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90013196:	eddd 3a07 	vldr	s7, [sp, #28]
9001319a:	ed9d 3a06 	vldr	s6, [sp, #24]
9001319e:	4630      	mov	r0, r6
900131a0:	ed54 2a03 	vldr	s5, [r4, #-12]
900131a4:	ed14 2a04 	vldr	s4, [r4, #-16]
900131a8:	ed54 1a01 	vldr	s3, [r4, #-4]
900131ac:	ed14 1a02 	vldr	s2, [r4, #-8]
900131b0:	edd4 0a01 	vldr	s1, [r4, #4]
900131b4:	ed94 0a00 	vldr	s0, [r4]
900131b8:	f7ff fc15 	bl	900129e6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900131bc:	e7da      	b.n	90013174 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
900131be:	9b04      	ldr	r3, [sp, #16]
900131c0:	b113      	cbz	r3, 900131c8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
900131c2:	4630      	mov	r0, r6
900131c4:	f7ff ff69 	bl	9001309a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
900131c8:	b009      	add	sp, #36	@ 0x24
900131ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900131ce:	bf00      	nop

900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
900131d0:	eef0 7a60 	vmov.f32	s15, s1
900131d4:	6803      	ldr	r3, [r0, #0]
900131d6:	689b      	ldr	r3, [r3, #8]
900131d8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900131dc:	ee17 2a90 	vmov	r2, s15
900131e0:	eef0 7a40 	vmov.f32	s15, s0
900131e4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900131e8:	ee17 1a90 	vmov	r1, s15
900131ec:	4718      	bx	r3
	...

900131f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
900131f0:	4b04      	ldr	r3, [pc, #16]	@ (90013204 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
900131f2:	b510      	push	{r4, lr}
900131f4:	4604      	mov	r4, r0
900131f6:	f840 3b14 	str.w	r3, [r0], #20
900131fa:	f001 fc41 	bl	90014a80 <_ZN8touchgfx7OutlineD1Ev>
900131fe:	4620      	mov	r0, r4
90013200:	bd10      	pop	{r4, pc}
90013202:	bf00      	nop
90013204:	9002dc84 	.word	0x9002dc84

90013208 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90013208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001320c:	ed2d 8b04 	vpush	{d8-d9}
90013210:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90013214:	b0b5      	sub	sp, #212	@ 0xd4
90013216:	4605      	mov	r5, r0
90013218:	468b      	mov	fp, r1
9001321a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001321e:	9206      	str	r2, [sp, #24]
90013220:	461e      	mov	r6, r3
90013222:	2400      	movs	r4, #0
90013224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013228:	f240 814f 	bls.w	900134ca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
9001322c:	23ff      	movs	r3, #255	@ 0xff
9001322e:	1d02      	adds	r2, r0, #4
90013230:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 900134d0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90013234:	f04f 0800 	mov.w	r8, #0
90013238:	9300      	str	r3, [sp, #0]
9001323a:	af08      	add	r7, sp, #32
9001323c:	6981      	ldr	r1, [r0, #24]
9001323e:	a808      	add	r0, sp, #32
90013240:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90013242:	eef0 9a49 	vmov.f32	s19, s18
90013246:	f015 fdf3 	bl	90028e30 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001324a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001324e:	4ba1      	ldr	r3, [pc, #644]	@ (900134d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90013250:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90013254:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90013258:	2201      	movs	r2, #1
9001325a:	9308      	str	r3, [sp, #32]
9001325c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90013260:	edd5 6a08 	vldr	s13, [r5, #32]
90013264:	eeb0 8a49 	vmov.f32	s16, s18
90013268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001326c:	9325      	str	r3, [sp, #148]	@ 0x94
9001326e:	f04f 0300 	mov.w	r3, #0
90013272:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90013276:	7f6a      	ldrb	r2, [r5, #29]
90013278:	eef0 8a49 	vmov.f32	s17, s18
9001327c:	bf48      	it	mi
9001327e:	eef1 7a67 	vnegmi.f32	s15, s15
90013282:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90013286:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
9001328a:	46c1      	mov	r9, r8
9001328c:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90013290:	f04f 0a01 	mov.w	sl, #1
90013294:	ee67 7a87 	vmul.f32	s15, s15, s14
90013298:	7fab      	ldrb	r3, [r5, #30]
9001329a:	942a      	str	r4, [sp, #168]	@ 0xa8
9001329c:	435a      	muls	r2, r3
9001329e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900132a2:	ee26 7aa7 	vmul.f32	s14, s13, s15
900132a6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900132aa:	1c53      	adds	r3, r2, #1
900132ac:	942b      	str	r4, [sp, #172]	@ 0xac
900132ae:	942c      	str	r4, [sp, #176]	@ 0xb0
900132b0:	ee27 7a26 	vmul.f32	s14, s14, s13
900132b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900132b8:	942d      	str	r4, [sp, #180]	@ 0xb4
900132ba:	942e      	str	r4, [sp, #184]	@ 0xb8
900132bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900132c0:	ee67 7a27 	vmul.f32	s15, s14, s15
900132c4:	942f      	str	r4, [sp, #188]	@ 0xbc
900132c6:	9430      	str	r4, [sp, #192]	@ 0xc0
900132c8:	9431      	str	r4, [sp, #196]	@ 0xc4
900132ca:	9432      	str	r4, [sp, #200]	@ 0xc8
900132cc:	9433      	str	r4, [sp, #204]	@ 0xcc
900132ce:	4644      	mov	r4, r8
900132d0:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
900132d4:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
900132d8:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
900132dc:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
900132e0:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
900132e4:	9b06      	ldr	r3, [sp, #24]
900132e6:	454b      	cmp	r3, r9
900132e8:	f000 80cc 	beq.w	90013484 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
900132ec:	f109 0301 	add.w	r3, r9, #1
900132f0:	9305      	str	r3, [sp, #20]
900132f2:	f81b 3009 	ldrb.w	r3, [fp, r9]
900132f6:	2b06      	cmp	r3, #6
900132f8:	d839      	bhi.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900132fa:	e8df f003 	tbb	[pc, r3]
900132fe:	3b04      	.short	0x3b04
90013300:	817c6f60 	.word	0x817c6f60
90013304:	a0          	.byte	0xa0
90013305:	00          	.byte	0x00
90013306:	45c1      	cmp	r9, r8
90013308:	d92b      	bls.n	90013362 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001330a:	eef0 0a49 	vmov.f32	s1, s18
9001330e:	4638      	mov	r0, r7
90013310:	eeb0 0a69 	vmov.f32	s0, s19
90013314:	f7ff fdde 	bl	90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013318:	4638      	mov	r0, r7
9001331a:	f7ff fe67 	bl	90012fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001331e:	4681      	mov	r9, r0
90013320:	b9f8      	cbnz	r0, 90013362 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90013322:	eef0 0a49 	vmov.f32	s1, s18
90013326:	4638      	mov	r0, r7
90013328:	eeb0 0a69 	vmov.f32	s0, s19
9001332c:	f7ff fe8d 	bl	9001304a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90013330:	4628      	mov	r0, r5
90013332:	4623      	mov	r3, r4
90013334:	9a05      	ldr	r2, [sp, #20]
90013336:	4641      	mov	r1, r8
90013338:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
9001333c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90013340:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90013344:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90013348:	e9cd 9702 	strd	r9, r7, [sp, #8]
9001334c:	e9cd b600 	strd	fp, r6, [sp]
90013350:	f7ff feae 	bl	900130b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90013354:	eef0 0a49 	vmov.f32	s1, s18
90013358:	eeb0 0a69 	vmov.f32	s0, s19
9001335c:	4638      	mov	r0, r7
9001335e:	f7ff fe74 	bl	9001304a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90013362:	eeb0 8a49 	vmov.f32	s16, s18
90013366:	f8dd 8014 	ldr.w	r8, [sp, #20]
9001336a:	eef0 8a69 	vmov.f32	s17, s19
9001336e:	f8dd 9014 	ldr.w	r9, [sp, #20]
90013372:	e7b7      	b.n	900132e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90013374:	45c1      	cmp	r9, r8
90013376:	d90d      	bls.n	90013394 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90013378:	4638      	mov	r0, r7
9001337a:	f7ff fe37 	bl	90012fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001337e:	b948      	cbnz	r0, 90013394 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90013380:	4623      	mov	r3, r4
90013382:	464a      	mov	r2, r9
90013384:	4641      	mov	r1, r8
90013386:	4628      	mov	r0, r5
90013388:	e9cd a702 	strd	sl, r7, [sp, #8]
9001338c:	e9cd b600 	strd	fp, r6, [sp]
90013390:	f7ff fe8e 	bl	900130b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90013394:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013398:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
9001339c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900133a0:	3402      	adds	r4, #2
900133a2:	edd3 8a00 	vldr	s17, [r3]
900133a6:	46c8      	mov	r8, r9
900133a8:	ed93 8a01 	vldr	s16, [r3, #4]
900133ac:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900133b0:	eef0 9a68 	vmov.f32	s19, s17
900133b4:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900133b8:	eeb0 9a48 	vmov.f32	s18, s16
900133bc:	e7d7      	b.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900133be:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900133c2:	4638      	mov	r0, r7
900133c4:	3402      	adds	r4, #2
900133c6:	edd3 8a00 	vldr	s17, [r3]
900133ca:	ed93 8a01 	vldr	s16, [r3, #4]
900133ce:	eeb0 0a68 	vmov.f32	s0, s17
900133d2:	eef0 0a48 	vmov.f32	s1, s16
900133d6:	f7ff fd7d 	bl	90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900133da:	e7c8      	b.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900133dc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900133e0:	edd3 8a00 	vldr	s17, [r3]
900133e4:	eef0 0a48 	vmov.f32	s1, s16
900133e8:	4638      	mov	r0, r7
900133ea:	eeb0 0a68 	vmov.f32	s0, s17
900133ee:	3401      	adds	r4, #1
900133f0:	f7ff fd70 	bl	90012ed4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900133f4:	e7bb      	b.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900133f6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900133fa:	ed93 8a00 	vldr	s16, [r3]
900133fe:	e7f1      	b.n	900133e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90013400:	00a3      	lsls	r3, r4, #2
90013402:	eef0 0a48 	vmov.f32	s1, s16
90013406:	eeb0 0a68 	vmov.f32	s0, s17
9001340a:	4638      	mov	r0, r7
9001340c:	f103 0208 	add.w	r2, r3, #8
90013410:	f103 090c 	add.w	r9, r3, #12
90013414:	4433      	add	r3, r6
90013416:	3404      	adds	r4, #4
90013418:	4432      	add	r2, r6
9001341a:	44b1      	add	r9, r6
9001341c:	edd3 1a01 	vldr	s3, [r3, #4]
90013420:	ed92 2a00 	vldr	s4, [r2]
90013424:	edd9 2a00 	vldr	s5, [r9]
90013428:	ed93 1a00 	vldr	s2, [r3]
9001342c:	9207      	str	r2, [sp, #28]
9001342e:	f7ff fabb 	bl	900129a8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90013432:	9a07      	ldr	r2, [sp, #28]
90013434:	ed99 8a00 	vldr	s16, [r9]
90013438:	edd2 8a00 	vldr	s17, [r2]
9001343c:	e797      	b.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001343e:	00a3      	lsls	r3, r4, #2
90013440:	eef0 0a48 	vmov.f32	s1, s16
90013444:	eeb0 0a68 	vmov.f32	s0, s17
90013448:	4638      	mov	r0, r7
9001344a:	f103 0210 	add.w	r2, r3, #16
9001344e:	f103 0914 	add.w	r9, r3, #20
90013452:	4433      	add	r3, r6
90013454:	3406      	adds	r4, #6
90013456:	4432      	add	r2, r6
90013458:	44b1      	add	r9, r6
9001345a:	edd3 2a03 	vldr	s5, [r3, #12]
9001345e:	ed92 3a00 	vldr	s6, [r2]
90013462:	edd9 3a00 	vldr	s7, [r9]
90013466:	ed93 2a02 	vldr	s4, [r3, #8]
9001346a:	edd3 1a01 	vldr	s3, [r3, #4]
9001346e:	ed93 1a00 	vldr	s2, [r3]
90013472:	9207      	str	r2, [sp, #28]
90013474:	f7ff fab7 	bl	900129e6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90013478:	9a07      	ldr	r2, [sp, #28]
9001347a:	ed99 8a00 	vldr	s16, [r9]
9001347e:	edd2 8a00 	vldr	s17, [r2]
90013482:	e774      	b.n	9001336e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013484:	9b06      	ldr	r3, [sp, #24]
90013486:	af08      	add	r7, sp, #32
90013488:	4543      	cmp	r3, r8
9001348a:	d90f      	bls.n	900134ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
9001348c:	4638      	mov	r0, r7
9001348e:	f7ff fdad 	bl	90012fec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90013492:	b958      	cbnz	r0, 900134ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90013494:	2301      	movs	r3, #1
90013496:	9703      	str	r7, [sp, #12]
90013498:	f8cd b000 	str.w	fp, [sp]
9001349c:	4641      	mov	r1, r8
9001349e:	9a06      	ldr	r2, [sp, #24]
900134a0:	4628      	mov	r0, r5
900134a2:	e9cd 6301 	strd	r6, r3, [sp, #4]
900134a6:	4623      	mov	r3, r4
900134a8:	f7ff fe02 	bl	900130b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900134ac:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900134b0:	4638      	mov	r0, r7
900134b2:	f015 fd51 	bl	90028f58 <_ZN8touchgfx6Canvas6renderEh>
900134b6:	4604      	mov	r4, r0
900134b8:	4638      	mov	r0, r7
900134ba:	f7ff fe99 	bl	900131f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900134be:	4620      	mov	r0, r4
900134c0:	b035      	add	sp, #212	@ 0xd4
900134c2:	ecbd 8b04 	vpop	{d8-d9}
900134c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900134ca:	2401      	movs	r4, #1
900134cc:	e7f7      	b.n	900134be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
900134ce:	bf00      	nop
900134d0:	00000000 	.word	0x00000000
900134d4:	9002d51c 	.word	0x9002d51c

900134d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
900134d8:	b510      	push	{r4, lr}
900134da:	4604      	mov	r4, r0
900134dc:	f7ff fe88 	bl	900131f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900134e0:	21b0      	movs	r1, #176	@ 0xb0
900134e2:	4620      	mov	r0, r4
900134e4:	f016 f924 	bl	90029730 <_ZdlPvj>
900134e8:	4620      	mov	r0, r4
900134ea:	bd10      	pop	{r4, pc}

900134ec <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
900134ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900134f0:	4698      	mov	r8, r3
900134f2:	23ff      	movs	r3, #255	@ 0xff
900134f4:	4607      	mov	r7, r0
900134f6:	4689      	mov	r9, r1
900134f8:	4692      	mov	sl, r2
900134fa:	1d02      	adds	r2, r0, #4
900134fc:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90013500:	2400      	movs	r4, #0
90013502:	44ca      	add	sl, r9
90013504:	ed2d 8b06 	vpush	{d8-d10}
90013508:	b0aa      	sub	sp, #168	@ 0xa8
9001350a:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90013710 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001350e:	9300      	str	r3, [sp, #0]
90013510:	eef0 8a48 	vmov.f32	s17, s16
90013514:	6981      	ldr	r1, [r0, #24]
90013516:	a80d      	add	r0, sp, #52	@ 0x34
90013518:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001351a:	f015 fc89 	bl	90028e30 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001351e:	7f3b      	ldrb	r3, [r7, #28]
90013520:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90013710 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90013524:	4628      	mov	r0, r5
90013526:	1e5a      	subs	r2, r3, #1
90013528:	eeb0 0a60 	vmov.f32	s0, s1
9001352c:	4253      	negs	r3, r2
9001352e:	4153      	adcs	r3, r2
90013530:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90013534:	f005 fc23 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013538:	eeb0 9a40 	vmov.f32	s18, s0
9001353c:	eef0 9a60 	vmov.f32	s19, s1
90013540:	45ca      	cmp	sl, r9
90013542:	f000 80cd 	beq.w	900136e0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90013546:	f819 3b01 	ldrb.w	r3, [r9], #1
9001354a:	2b06      	cmp	r3, #6
9001354c:	d8f8      	bhi.n	90013540 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001354e:	e8df f003 	tbb	[pc, r3]
90013552:	0804      	.short	0x0804
90013554:	58533f2a 	.word	0x58533f2a
90013558:	8a          	.byte	0x8a
90013559:	00          	.byte	0x00
9001355a:	a80d      	add	r0, sp, #52	@ 0x34
9001355c:	f015 fcda 	bl	90028f14 <_ZN8touchgfx6Canvas5closeEv>
90013560:	e7ee      	b.n	90013540 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013562:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013566:	4628      	mov	r0, r5
90013568:	ed93 8a01 	vldr	s16, [r3, #4]
9001356c:	edd3 8a00 	vldr	s17, [r3]
90013570:	eef0 0a48 	vmov.f32	s1, s16
90013574:	eeb0 0a68 	vmov.f32	s0, s17
90013578:	f005 fc01 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001357c:	a80d      	add	r0, sp, #52	@ 0x34
9001357e:	eef0 7a60 	vmov.f32	s15, s1
90013582:	eeb0 9a40 	vmov.f32	s18, s0
90013586:	eef0 9a60 	vmov.f32	s19, s1
9001358a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001358e:	ee17 2a90 	vmov	r2, s15
90013592:	eef0 7a40 	vmov.f32	s15, s0
90013596:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001359a:	ee17 1a90 	vmov	r1, s15
9001359e:	f015 fd93 	bl	900290c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900135a2:	3402      	adds	r4, #2
900135a4:	e7cc      	b.n	90013540 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900135a6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900135aa:	4628      	mov	r0, r5
900135ac:	edd3 8a00 	vldr	s17, [r3]
900135b0:	ed93 8a01 	vldr	s16, [r3, #4]
900135b4:	eeb0 0a68 	vmov.f32	s0, s17
900135b8:	eef0 0a48 	vmov.f32	s1, s16
900135bc:	f005 fbdf 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900135c0:	a80d      	add	r0, sp, #52	@ 0x34
900135c2:	eeb0 9a40 	vmov.f32	s18, s0
900135c6:	eef0 9a60 	vmov.f32	s19, s1
900135ca:	f7ff fe01 	bl	900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900135ce:	e7e8      	b.n	900135a2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
900135d0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900135d4:	edd3 8a00 	vldr	s17, [r3]
900135d8:	eef0 0a48 	vmov.f32	s1, s16
900135dc:	4628      	mov	r0, r5
900135de:	eeb0 0a68 	vmov.f32	s0, s17
900135e2:	3401      	adds	r4, #1
900135e4:	f005 fbcb 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900135e8:	a80d      	add	r0, sp, #52	@ 0x34
900135ea:	eef0 9a60 	vmov.f32	s19, s1
900135ee:	eeb0 9a40 	vmov.f32	s18, s0
900135f2:	f7ff fded 	bl	900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900135f6:	e7a3      	b.n	90013540 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900135f8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900135fc:	ed93 8a00 	vldr	s16, [r3]
90013600:	e7ea      	b.n	900135d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90013602:	1ca3      	adds	r3, r4, #2
90013604:	4628      	mov	r0, r5
90013606:	3404      	adds	r4, #4
90013608:	eb08 0383 	add.w	r3, r8, r3, lsl #2
9001360c:	ed53 0a01 	vldr	s1, [r3, #-4]
90013610:	ed13 0a02 	vldr	s0, [r3, #-8]
90013614:	edd3 8a00 	vldr	s17, [r3]
90013618:	ed93 8a01 	vldr	s16, [r3, #4]
9001361c:	f005 fbaf 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013620:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90013624:	eeb0 0a68 	vmov.f32	s0, s17
90013628:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
9001362c:	eef0 0a48 	vmov.f32	s1, s16
90013630:	4628      	mov	r0, r5
90013632:	f005 fba4 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013636:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
9001363a:	eef0 2a60 	vmov.f32	s5, s1
9001363e:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90013642:	eeb0 2a40 	vmov.f32	s4, s0
90013646:	a80d      	add	r0, sp, #52	@ 0x34
90013648:	eeb0 aa40 	vmov.f32	s20, s0
9001364c:	eef0 aa60 	vmov.f32	s21, s1
90013650:	eeb0 0a49 	vmov.f32	s0, s18
90013654:	eef0 0a69 	vmov.f32	s1, s19
90013658:	f7ff f9a6 	bl	900129a8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001365c:	eef0 9a6a 	vmov.f32	s19, s21
90013660:	eeb0 9a4a 	vmov.f32	s18, s20
90013664:	e76c      	b.n	90013540 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013666:	1d26      	adds	r6, r4, #4
90013668:	4628      	mov	r0, r5
9001366a:	3406      	adds	r4, #6
9001366c:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90013670:	ed56 0a03 	vldr	s1, [r6, #-12]
90013674:	ed16 0a04 	vldr	s0, [r6, #-16]
90013678:	edd6 8a00 	vldr	s17, [r6]
9001367c:	ed96 8a01 	vldr	s16, [r6, #4]
90013680:	f005 fb7d 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013684:	ed8d 0a07 	vstr	s0, [sp, #28]
90013688:	4628      	mov	r0, r5
9001368a:	ed16 0a02 	vldr	s0, [r6, #-8]
9001368e:	edcd 0a08 	vstr	s1, [sp, #32]
90013692:	ed56 0a01 	vldr	s1, [r6, #-4]
90013696:	f005 fb72 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001369a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
9001369e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900136a2:	eeb0 0a68 	vmov.f32	s0, s17
900136a6:	eef0 0a48 	vmov.f32	s1, s16
900136aa:	4628      	mov	r0, r5
900136ac:	f005 fb67 	bl	90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900136b0:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
900136b4:	eeb0 3a40 	vmov.f32	s6, s0
900136b8:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
900136bc:	eef0 3a60 	vmov.f32	s7, s1
900136c0:	eddd 1a08 	vldr	s3, [sp, #32]
900136c4:	eeb0 aa40 	vmov.f32	s20, s0
900136c8:	ed9d 1a07 	vldr	s2, [sp, #28]
900136cc:	eef0 aa60 	vmov.f32	s21, s1
900136d0:	a80d      	add	r0, sp, #52	@ 0x34
900136d2:	eef0 0a69 	vmov.f32	s1, s19
900136d6:	eeb0 0a49 	vmov.f32	s0, s18
900136da:	f7ff f984 	bl	900129e6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900136de:	e7bd      	b.n	9001365c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
900136e0:	7f7b      	ldrb	r3, [r7, #29]
900136e2:	a80d      	add	r0, sp, #52	@ 0x34
900136e4:	7fb9      	ldrb	r1, [r7, #30]
900136e6:	4359      	muls	r1, r3
900136e8:	1c4b      	adds	r3, r1, #1
900136ea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900136ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
900136f2:	f015 fc31 	bl	90028f58 <_ZN8touchgfx6Canvas6renderEh>
900136f6:	4b07      	ldr	r3, [pc, #28]	@ (90013714 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
900136f8:	4604      	mov	r4, r0
900136fa:	a812      	add	r0, sp, #72	@ 0x48
900136fc:	930d      	str	r3, [sp, #52]	@ 0x34
900136fe:	f001 f9bf 	bl	90014a80 <_ZN8touchgfx7OutlineD1Ev>
90013702:	4620      	mov	r0, r4
90013704:	b02a      	add	sp, #168	@ 0xa8
90013706:	ecbd 8b06 	vpop	{d8-d10}
9001370a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001370e:	bf00      	nop
90013710:	00000000 	.word	0x00000000
90013714:	9002dc84 	.word	0x9002dc84

90013718 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90013718:	b410      	push	{r4}
9001371a:	7f04      	ldrb	r4, [r0, #28]
9001371c:	b11c      	cbz	r4, 90013726 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
9001371e:	f85d 4b04 	ldr.w	r4, [sp], #4
90013722:	f7ff bee3 	b.w	900134ec <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90013726:	f85d 4b04 	ldr.w	r4, [sp], #4
9001372a:	f7ff bd6d 	b.w	90013208 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90013730 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90013730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013734:	4691      	mov	r9, r2
90013736:	4602      	mov	r2, r0
90013738:	b085      	sub	sp, #20
9001373a:	4605      	mov	r5, r0
9001373c:	f852 0f26 	ldr.w	r0, [r2, #38]!
90013740:	4688      	mov	r8, r1
90013742:	469a      	mov	sl, r3
90013744:	ab02      	add	r3, sp, #8
90013746:	6851      	ldr	r1, [r2, #4]
90013748:	af02      	add	r7, sp, #8
9001374a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
9001374e:	c303      	stmia	r3!, {r0, r1}
90013750:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013754:	2b00      	cmp	r3, #0
90013756:	dd08      	ble.n	9001376a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013758:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
9001375c:	2c00      	cmp	r4, #0
9001375e:	dd04      	ble.n	9001376a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013760:	4a2e      	ldr	r2, [pc, #184]	@ (9001381c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90013762:	7812      	ldrb	r2, [r2, #0]
90013764:	b122      	cbz	r2, 90013770 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90013766:	2a01      	cmp	r2, #1
90013768:	d02d      	beq.n	900137c6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
9001376a:	b005      	add	sp, #20
9001376c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013770:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013774:	441c      	add	r4, r3
90013776:	b2a4      	uxth	r4, r4
90013778:	b226      	sxth	r6, r4
9001377a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001377e:	42b3      	cmp	r3, r6
90013780:	daf3      	bge.n	9001376a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013782:	4653      	mov	r3, sl
90013784:	464a      	mov	r2, r9
90013786:	4641      	mov	r1, r8
90013788:	4628      	mov	r0, r5
9001378a:	e9cd b700 	strd	fp, r7, [sp]
9001378e:	f7ff ffc3 	bl	90013718 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90013792:	b940      	cbnz	r0, 900137a6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90013794:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013798:	2b01      	cmp	r3, #1
9001379a:	d004      	beq.n	900137a6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
9001379c:	3301      	adds	r3, #1
9001379e:	105b      	asrs	r3, r3, #1
900137a0:	f8ad 300e 	strh.w	r3, [sp, #14]
900137a4:	e7ed      	b.n	90013782 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
900137a6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900137aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900137ae:	4413      	add	r3, r2
900137b0:	b29b      	uxth	r3, r3
900137b2:	441a      	add	r2, r3
900137b4:	f8ad 300a 	strh.w	r3, [sp, #10]
900137b8:	b212      	sxth	r2, r2
900137ba:	4296      	cmp	r6, r2
900137bc:	dadd      	bge.n	9001377a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
900137be:	1ae3      	subs	r3, r4, r3
900137c0:	f8ad 300e 	strh.w	r3, [sp, #14]
900137c4:	e7d9      	b.n	9001377a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
900137c6:	f8bd 4008 	ldrh.w	r4, [sp, #8]
900137ca:	441c      	add	r4, r3
900137cc:	b2a4      	uxth	r4, r4
900137ce:	b226      	sxth	r6, r4
900137d0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
900137d4:	42b3      	cmp	r3, r6
900137d6:	dac8      	bge.n	9001376a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
900137d8:	4653      	mov	r3, sl
900137da:	464a      	mov	r2, r9
900137dc:	4641      	mov	r1, r8
900137de:	4628      	mov	r0, r5
900137e0:	e9cd b700 	strd	fp, r7, [sp]
900137e4:	f7ff ff98 	bl	90013718 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
900137e8:	b940      	cbnz	r0, 900137fc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
900137ea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900137ee:	2b01      	cmp	r3, #1
900137f0:	d004      	beq.n	900137fc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
900137f2:	3301      	adds	r3, #1
900137f4:	105b      	asrs	r3, r3, #1
900137f6:	f8ad 300c 	strh.w	r3, [sp, #12]
900137fa:	e7ed      	b.n	900137d8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
900137fc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013800:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90013804:	4413      	add	r3, r2
90013806:	b29b      	uxth	r3, r3
90013808:	441a      	add	r2, r3
9001380a:	f8ad 3008 	strh.w	r3, [sp, #8]
9001380e:	b212      	sxth	r2, r2
90013810:	4296      	cmp	r6, r2
90013812:	dadd      	bge.n	900137d0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90013814:	1ae3      	subs	r3, r4, r3
90013816:	f8ad 300c 	strh.w	r3, [sp, #12]
9001381a:	e7d9      	b.n	900137d0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
9001381c:	2402183c 	.word	0x2402183c

90013820 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013820:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013822:	6803      	ldr	r3, [r0, #0]
90013824:	460d      	mov	r5, r1
90013826:	4604      	mov	r4, r0
90013828:	4601      	mov	r1, r0
9001382a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9001382c:	a802      	add	r0, sp, #8
9001382e:	4798      	blx	r3
90013830:	6828      	ldr	r0, [r5, #0]
90013832:	6869      	ldr	r1, [r5, #4]
90013834:	466b      	mov	r3, sp
90013836:	c303      	stmia	r3!, {r0, r1}
90013838:	4668      	mov	r0, sp
9001383a:	4619      	mov	r1, r3
9001383c:	f7fd fb72 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90013840:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90013842:	b188      	cbz	r0, 90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013844:	6803      	ldr	r3, [r0, #0]
90013846:	1d21      	adds	r1, r4, #4
90013848:	68db      	ldr	r3, [r3, #12]
9001384a:	4798      	blx	r3
9001384c:	b160      	cbz	r0, 90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001384e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013852:	2b00      	cmp	r3, #0
90013854:	dd08      	ble.n	90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013856:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001385a:	2d00      	cmp	r5, #0
9001385c:	dd04      	ble.n	90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001385e:	4a2b      	ldr	r2, [pc, #172]	@ (9001390c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013860:	7812      	ldrb	r2, [r2, #0]
90013862:	b11a      	cbz	r2, 9001386c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013864:	2a01      	cmp	r2, #1
90013866:	d029      	beq.n	900138bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013868:	b004      	add	sp, #16
9001386a:	bd70      	pop	{r4, r5, r6, pc}
9001386c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013870:	441d      	add	r5, r3
90013872:	b2ad      	uxth	r5, r5
90013874:	b22e      	sxth	r6, r5
90013876:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001387a:	42b3      	cmp	r3, r6
9001387c:	daf4      	bge.n	90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001387e:	6823      	ldr	r3, [r4, #0]
90013880:	4669      	mov	r1, sp
90013882:	4620      	mov	r0, r4
90013884:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013886:	4798      	blx	r3
90013888:	b940      	cbnz	r0, 9001389c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001388a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001388e:	2b01      	cmp	r3, #1
90013890:	d004      	beq.n	9001389c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013892:	3301      	adds	r3, #1
90013894:	105b      	asrs	r3, r3, #1
90013896:	f8ad 3006 	strh.w	r3, [sp, #6]
9001389a:	e7f0      	b.n	9001387e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001389c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
900138a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900138a4:	4413      	add	r3, r2
900138a6:	b29b      	uxth	r3, r3
900138a8:	441a      	add	r2, r3
900138aa:	f8ad 3002 	strh.w	r3, [sp, #2]
900138ae:	b212      	sxth	r2, r2
900138b0:	4296      	cmp	r6, r2
900138b2:	dae0      	bge.n	90013876 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900138b4:	1aeb      	subs	r3, r5, r3
900138b6:	f8ad 3006 	strh.w	r3, [sp, #6]
900138ba:	e7dc      	b.n	90013876 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900138bc:	f8bd 5000 	ldrh.w	r5, [sp]
900138c0:	441d      	add	r5, r3
900138c2:	b2ad      	uxth	r5, r5
900138c4:	b22e      	sxth	r6, r5
900138c6:	f9bd 3000 	ldrsh.w	r3, [sp]
900138ca:	42b3      	cmp	r3, r6
900138cc:	dacc      	bge.n	90013868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900138ce:	6823      	ldr	r3, [r4, #0]
900138d0:	4669      	mov	r1, sp
900138d2:	4620      	mov	r0, r4
900138d4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900138d6:	4798      	blx	r3
900138d8:	b940      	cbnz	r0, 900138ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900138da:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900138de:	2b01      	cmp	r3, #1
900138e0:	d004      	beq.n	900138ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900138e2:	3301      	adds	r3, #1
900138e4:	105b      	asrs	r3, r3, #1
900138e6:	f8ad 3004 	strh.w	r3, [sp, #4]
900138ea:	e7f0      	b.n	900138ce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900138ec:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900138f0:	f8bd 3000 	ldrh.w	r3, [sp]
900138f4:	4413      	add	r3, r2
900138f6:	b29b      	uxth	r3, r3
900138f8:	441a      	add	r2, r3
900138fa:	f8ad 3000 	strh.w	r3, [sp]
900138fe:	b212      	sxth	r2, r2
90013900:	4296      	cmp	r6, r2
90013902:	dae0      	bge.n	900138c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013904:	1aeb      	subs	r3, r5, r3
90013906:	f8ad 3004 	strh.w	r3, [sp, #4]
9001390a:	e7dc      	b.n	900138c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001390c:	2402183c 	.word	0x2402183c

90013910 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013912:	6803      	ldr	r3, [r0, #0]
90013914:	4604      	mov	r4, r0
90013916:	4601      	mov	r1, r0
90013918:	4668      	mov	r0, sp
9001391a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9001391c:	4798      	blx	r3
9001391e:	2100      	movs	r1, #0
90013920:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013924:	4668      	mov	r0, sp
90013926:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001392a:	9102      	str	r1, [sp, #8]
9001392c:	a902      	add	r1, sp, #8
9001392e:	f8ad 200c 	strh.w	r2, [sp, #12]
90013932:	f8ad 300e 	strh.w	r3, [sp, #14]
90013936:	f7fd faf5 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
9001393a:	6823      	ldr	r3, [r4, #0]
9001393c:	4669      	mov	r1, sp
9001393e:	4620      	mov	r0, r4
90013940:	691b      	ldr	r3, [r3, #16]
90013942:	4798      	blx	r3
90013944:	b004      	add	sp, #16
90013946:	bd10      	pop	{r4, pc}

90013948 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013948:	2101      	movs	r1, #1
9001394a:	2200      	movs	r2, #0
9001394c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013950:	490a      	ldr	r1, [pc, #40]	@ (9001397c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013952:	8082      	strh	r2, [r0, #4]
90013954:	6001      	str	r1, [r0, #0]
90013956:	21ff      	movs	r1, #255	@ 0xff
90013958:	80c2      	strh	r2, [r0, #6]
9001395a:	8102      	strh	r2, [r0, #8]
9001395c:	8142      	strh	r2, [r0, #10]
9001395e:	8182      	strh	r2, [r0, #12]
90013960:	81c2      	strh	r2, [r0, #14]
90013962:	8202      	strh	r2, [r0, #16]
90013964:	8242      	strh	r2, [r0, #18]
90013966:	61c2      	str	r2, [r0, #28]
90013968:	8402      	strh	r2, [r0, #32]
9001396a:	8442      	strh	r2, [r0, #34]	@ 0x22
9001396c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90013970:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90013974:	6282      	str	r2, [r0, #40]	@ 0x28
90013976:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001397a:	4770      	bx	lr
9001397c:	9002d57c 	.word	0x9002d57c

90013980 <_ZNK8touchgfx5Image17invalidateContentEv>:
90013980:	b508      	push	{r3, lr}
90013982:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013986:	b10b      	cbz	r3, 9001398c <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90013988:	f7ef fa48 	bl	90002e1c <_ZNK8touchgfx8Drawable17invalidateContentEv>
9001398c:	bd08      	pop	{r3, pc}

9001398e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
9001398e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90013992:	4770      	bx	lr

90013994 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90013994:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
90013998:	4770      	bx	lr

9001399a <_ZN8touchgfx13ScalableImageD1Ev>:
9001399a:	4770      	bx	lr

9001399c <_ZN8touchgfx13ScalableImageD0Ev>:
9001399c:	b510      	push	{r4, lr}
9001399e:	4604      	mov	r4, r0
900139a0:	212c      	movs	r1, #44	@ 0x2c
900139a2:	f015 fec5 	bl	90029730 <_ZdlPvj>
900139a6:	4620      	mov	r0, r4
900139a8:	bd10      	pop	{r4, pc}

900139aa <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900139aa:	b5f0      	push	{r4, r5, r6, r7, lr}
900139ac:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900139b0:	b085      	sub	sp, #20
900139b2:	4604      	mov	r4, r0
900139b4:	460d      	mov	r5, r1
900139b6:	2bff      	cmp	r3, #255	@ 0xff
900139b8:	d128      	bne.n	90013a0c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900139ba:	f101 0626 	add.w	r6, r1, #38	@ 0x26
900139be:	4668      	mov	r0, sp
900139c0:	4631      	mov	r1, r6
900139c2:	f006 fe6f 	bl	9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900139c6:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
900139ca:	4630      	mov	r0, r6
900139cc:	f006 fe02 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
900139d0:	4287      	cmp	r7, r0
900139d2:	d11b      	bne.n	90013a0c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900139d4:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
900139d8:	4630      	mov	r0, r6
900139da:	f006 fe2f 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
900139de:	4287      	cmp	r7, r0
900139e0:	d114      	bne.n	90013a0c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900139e2:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900139e6:	2100      	movs	r1, #0
900139e8:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900139ec:	f8ad 300e 	strh.w	r3, [sp, #14]
900139f0:	466b      	mov	r3, sp
900139f2:	9102      	str	r1, [sp, #8]
900139f4:	f8ad 200c 	strh.w	r2, [sp, #12]
900139f8:	cb03      	ldmia	r3!, {r0, r1}
900139fa:	6020      	str	r0, [r4, #0]
900139fc:	4620      	mov	r0, r4
900139fe:	6061      	str	r1, [r4, #4]
90013a00:	4619      	mov	r1, r3
90013a02:	f7fd fa8f 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90013a06:	4620      	mov	r0, r4
90013a08:	b005      	add	sp, #20
90013a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013a0c:	2300      	movs	r3, #0
90013a0e:	8023      	strh	r3, [r4, #0]
90013a10:	8063      	strh	r3, [r4, #2]
90013a12:	80a3      	strh	r3, [r4, #4]
90013a14:	80e3      	strh	r3, [r4, #6]
90013a16:	e7f6      	b.n	90013a06 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90013a18 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90013a18:	b538      	push	{r3, r4, r5, lr}
90013a1a:	2300      	movs	r3, #0
90013a1c:	2501      	movs	r5, #1
90013a1e:	4604      	mov	r4, r0
90013a20:	8083      	strh	r3, [r0, #4]
90013a22:	80c3      	strh	r3, [r0, #6]
90013a24:	8103      	strh	r3, [r0, #8]
90013a26:	8143      	strh	r3, [r0, #10]
90013a28:	8183      	strh	r3, [r0, #12]
90013a2a:	81c3      	strh	r3, [r0, #14]
90013a2c:	8203      	strh	r3, [r0, #16]
90013a2e:	8243      	strh	r3, [r0, #18]
90013a30:	61c3      	str	r3, [r0, #28]
90013a32:	8403      	strh	r3, [r0, #32]
90013a34:	8443      	strh	r3, [r0, #34]	@ 0x22
90013a36:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
90013a3a:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
90013a3e:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013a42:	4b07      	ldr	r3, [pc, #28]	@ (90013a60 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90013a44:	6003      	str	r3, [r0, #0]
90013a46:	880b      	ldrh	r3, [r1, #0]
90013a48:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013a4a:	23ff      	movs	r3, #255	@ 0xff
90013a4c:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90013a50:	f000 feb1 	bl	900147b6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90013a54:	4b03      	ldr	r3, [pc, #12]	@ (90013a64 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90013a56:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
90013a5a:	4620      	mov	r0, r4
90013a5c:	6023      	str	r3, [r4, #0]
90013a5e:	bd38      	pop	{r3, r4, r5, pc}
90013a60:	9002d760 	.word	0x9002d760
90013a64:	9002d5f4 	.word	0x9002d5f4

90013a68 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90013a68:	4603      	mov	r3, r0
90013a6a:	3026      	adds	r0, #38	@ 0x26
90013a6c:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
90013a70:	b90b      	cbnz	r3, 90013a76 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90013a72:	f005 ba31 	b.w	90018ed8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90013a76:	f005 ba3f 	b.w	90018ef8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90013a7c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90013a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013a80:	4604      	mov	r4, r0
90013a82:	b0b3      	sub	sp, #204	@ 0xcc
90013a84:	469b      	mov	fp, r3
90013a86:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90013a8a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013a8e:	2500      	movs	r5, #0
90013a90:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
90013a94:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
90013a98:	ab11      	add	r3, sp, #68	@ 0x44
90013a9a:	9206      	str	r2, [sp, #24]
90013a9c:	4618      	mov	r0, r3
90013a9e:	9511      	str	r5, [sp, #68]	@ 0x44
90013aa0:	9307      	str	r3, [sp, #28]
90013aa2:	ad13      	add	r5, sp, #76	@ 0x4c
90013aa4:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
90013aa8:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
90013aac:	f7fd fa3a 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90013ab0:	9b07      	ldr	r3, [sp, #28]
90013ab2:	e893 0003 	ldmia.w	r3, {r0, r1}
90013ab6:	e885 0003 	stmia.w	r5, {r0, r1}
90013aba:	6821      	ldr	r1, [r4, #0]
90013abc:	4620      	mov	r0, r4
90013abe:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90013ac0:	4629      	mov	r1, r5
90013ac2:	47b0      	blx	r6
90013ac4:	4621      	mov	r1, r4
90013ac6:	a815      	add	r0, sp, #84	@ 0x54
90013ac8:	1d26      	adds	r6, r4, #4
90013aca:	f004 fdb7 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013ace:	a815      	add	r0, sp, #84	@ 0x54
90013ad0:	f003 f9aa 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013ad4:	9b07      	ldr	r3, [sp, #28]
90013ad6:	4631      	mov	r1, r6
90013ad8:	4618      	mov	r0, r3
90013ada:	f003 f9e9 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90013ade:	4628      	mov	r0, r5
90013ae0:	f104 0526 	add.w	r5, r4, #38	@ 0x26
90013ae4:	f003 f9a0 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013ae8:	4628      	mov	r0, r5
90013aea:	f006 fe65 	bl	9001a7b8 <_ZNK8touchgfx6Bitmap7getDataEv>
90013aee:	9007      	str	r0, [sp, #28]
90013af0:	2800      	cmp	r0, #0
90013af2:	f000 80ce 	beq.w	90013c92 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90013af6:	f8db 200c 	ldr.w	r2, [fp, #12]
90013afa:	a809      	add	r0, sp, #36	@ 0x24
90013afc:	f8db 1000 	ldr.w	r1, [fp]
90013b00:	920c      	str	r2, [sp, #48]	@ 0x30
90013b02:	f8da 2000 	ldr.w	r2, [sl]
90013b06:	9109      	str	r1, [sp, #36]	@ 0x24
90013b08:	920d      	str	r2, [sp, #52]	@ 0x34
90013b0a:	f8da 2004 	ldr.w	r2, [sl, #4]
90013b0e:	f8db 1004 	ldr.w	r1, [fp, #4]
90013b12:	920e      	str	r2, [sp, #56]	@ 0x38
90013b14:	f8da 2008 	ldr.w	r2, [sl, #8]
90013b18:	910a      	str	r1, [sp, #40]	@ 0x28
90013b1a:	920f      	str	r2, [sp, #60]	@ 0x3c
90013b1c:	f8db 1008 	ldr.w	r1, [fp, #8]
90013b20:	f8da 200c 	ldr.w	r2, [sl, #12]
90013b24:	910b      	str	r1, [sp, #44]	@ 0x2c
90013b26:	a90d      	add	r1, sp, #52	@ 0x34
90013b28:	9210      	str	r2, [sp, #64]	@ 0x40
90013b2a:	4632      	mov	r2, r6
90013b2c:	f003 f9a4 	bl	90016e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013b30:	4632      	mov	r2, r6
90013b32:	a90e      	add	r1, sp, #56	@ 0x38
90013b34:	a80a      	add	r0, sp, #40	@ 0x28
90013b36:	f003 f99f 	bl	90016e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013b3a:	4632      	mov	r2, r6
90013b3c:	a90f      	add	r1, sp, #60	@ 0x3c
90013b3e:	a80b      	add	r0, sp, #44	@ 0x2c
90013b40:	f003 f99a 	bl	90016e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013b44:	4632      	mov	r2, r6
90013b46:	a910      	add	r1, sp, #64	@ 0x40
90013b48:	a80c      	add	r0, sp, #48	@ 0x30
90013b4a:	f003 f995 	bl	90016e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013b4e:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
90013b52:	ed97 3a00 	vldr	s6, [r7]
90013b56:	eef0 6a67 	vmov.f32	s13, s15
90013b5a:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
90013b5e:	edd7 4a01 	vldr	s9, [r7, #4]
90013b62:	eeb0 7a67 	vmov.f32	s14, s15
90013b66:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
90013b6a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90013b6e:	ed99 2a00 	vldr	s4, [r9]
90013b72:	eeb0 6a67 	vmov.f32	s12, s15
90013b76:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
90013b7a:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90013b7e:	edd8 2a00 	vldr	s5, [r8]
90013b82:	edd9 3a01 	vldr	s7, [r9, #4]
90013b86:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013b8a:	ed98 4a01 	vldr	s8, [r8, #4]
90013b8e:	ed99 5a02 	vldr	s10, [r9, #8]
90013b92:	edd8 5a02 	vldr	s11, [r8, #8]
90013b96:	ee16 6a10 	vmov	r6, s12
90013b9a:	eeb0 6a67 	vmov.f32	s12, s15
90013b9e:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
90013ba2:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90013ba6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013baa:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90013bae:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90013bb2:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
90013bb6:	ee16 0a10 	vmov	r0, s12
90013bba:	eeb0 6a67 	vmov.f32	s12, s15
90013bbe:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
90013bc2:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
90013bc6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013bca:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
90013bce:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
90013bd2:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
90013bd6:	ee16 1a10 	vmov	r1, s12
90013bda:	eeb0 6a67 	vmov.f32	s12, s15
90013bde:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
90013be2:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
90013be6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013bea:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
90013bee:	f8d7 a008 	ldr.w	sl, [r7, #8]
90013bf2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90013bf6:	68ff      	ldr	r7, [r7, #12]
90013bf8:	ee16 2a10 	vmov	r2, s12
90013bfc:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
90013c00:	9624      	str	r6, [sp, #144]	@ 0x90
90013c02:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013c06:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
90013c0a:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
90013c0e:	4628      	mov	r0, r5
90013c10:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
90013c14:	9b06      	ldr	r3, [sp, #24]
90013c16:	922d      	str	r2, [sp, #180]	@ 0xb4
90013c18:	4a1f      	ldr	r2, [pc, #124]	@ (90013c98 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90013c1a:	9317      	str	r3, [sp, #92]	@ 0x5c
90013c1c:	8812      	ldrh	r2, [r2, #0]
90013c1e:	9b07      	ldr	r3, [sp, #28]
90013c20:	9218      	str	r2, [sp, #96]	@ 0x60
90013c22:	9319      	str	r3, [sp, #100]	@ 0x64
90013c24:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
90013c28:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
90013c2c:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
90013c30:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
90013c34:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
90013c38:	9731      	str	r7, [sp, #196]	@ 0xc4
90013c3a:	f006 fded 	bl	9001a818 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90013c3e:	901a      	str	r0, [sp, #104]	@ 0x68
90013c40:	4628      	mov	r0, r5
90013c42:	f006 fcc7 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013c46:	901b      	str	r0, [sp, #108]	@ 0x6c
90013c48:	4628      	mov	r0, r5
90013c4a:	f006 fcf7 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
90013c4e:	901c      	str	r0, [sp, #112]	@ 0x70
90013c50:	4628      	mov	r0, r5
90013c52:	f006 fcbf 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013c56:	4b11      	ldr	r3, [pc, #68]	@ (90013c9c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90013c58:	901d      	str	r0, [sp, #116]	@ 0x74
90013c5a:	681b      	ldr	r3, [r3, #0]
90013c5c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013c60:	b10a      	cbz	r2, 90013c66 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90013c62:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
90013c64:	b905      	cbnz	r5, 90013c68 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90013c66:	689d      	ldr	r5, [r3, #8]
90013c68:	682b      	ldr	r3, [r5, #0]
90013c6a:	4620      	mov	r0, r4
90013c6c:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
90013c6e:	f7ff fefb 	bl	90013a68 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90013c72:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90013c76:	aa1e      	add	r2, sp, #120	@ 0x78
90013c78:	a917      	add	r1, sp, #92	@ 0x5c
90013c7a:	9304      	str	r3, [sp, #16]
90013c7c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90013c80:	e9cd 0302 	strd	r0, r3, [sp, #8]
90013c84:	ab13      	add	r3, sp, #76	@ 0x4c
90013c86:	4628      	mov	r0, r5
90013c88:	9301      	str	r3, [sp, #4]
90013c8a:	ab15      	add	r3, sp, #84	@ 0x54
90013c8c:	9300      	str	r3, [sp, #0]
90013c8e:	ab19      	add	r3, sp, #100	@ 0x64
90013c90:	47b0      	blx	r6
90013c92:	b033      	add	sp, #204	@ 0xcc
90013c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013c98:	2402183e 	.word	0x2402183e
90013c9c:	24021844 	.word	0x24021844

90013ca0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90013ca0:	b570      	push	{r4, r5, r6, lr}
90013ca2:	ed2d 8b04 	vpush	{d8-d9}
90013ca6:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013caa:	b098      	sub	sp, #96	@ 0x60
90013cac:	4604      	mov	r4, r0
90013cae:	460e      	mov	r6, r1
90013cb0:	2b00      	cmp	r3, #0
90013cb2:	d065      	beq.n	90013d80 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90013cb4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013cb8:	f100 0526 	add.w	r5, r0, #38	@ 0x26
90013cbc:	ed9f 8a37 	vldr	s16, [pc, #220]	@ 90013d9c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90013cc0:	ee09 3a10 	vmov	s18, r3
90013cc4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013cc8:	4628      	mov	r0, r5
90013cca:	ee08 3a90 	vmov	s17, r3
90013cce:	4b34      	ldr	r3, [pc, #208]	@ (90013da0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90013cd0:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90013cd4:	930c      	str	r3, [sp, #48]	@ 0x30
90013cd6:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90013cda:	930d      	str	r3, [sp, #52]	@ 0x34
90013cdc:	930e      	str	r3, [sp, #56]	@ 0x38
90013cde:	ee39 9a08 	vadd.f32	s18, s18, s16
90013ce2:	930f      	str	r3, [sp, #60]	@ 0x3c
90013ce4:	f006 fc76 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013ce8:	ee07 0a90 	vmov	s15, r0
90013cec:	4628      	mov	r0, r5
90013cee:	ee78 8a88 	vadd.f32	s17, s17, s16
90013cf2:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90013cf6:	f006 fca1 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
90013cfa:	4b2a      	ldr	r3, [pc, #168]	@ (90013da4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90013cfc:	ee07 0a90 	vmov	s15, r0
90013d00:	781b      	ldrb	r3, [r3, #0]
90013d02:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90013d06:	eef0 7a48 	vmov.f32	s15, s16
90013d0a:	2b01      	cmp	r3, #1
90013d0c:	d13c      	bne.n	90013d88 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90013d0e:	eef0 6a69 	vmov.f32	s13, s19
90013d12:	ee19 3a90 	vmov	r3, s19
90013d16:	eeb0 6a47 	vmov.f32	s12, s14
90013d1a:	eef0 5a47 	vmov.f32	s11, s14
90013d1e:	eef0 9a48 	vmov.f32	s19, s16
90013d22:	eeb0 7a48 	vmov.f32	s14, s16
90013d26:	9314      	str	r3, [sp, #80]	@ 0x50
90013d28:	ab14      	add	r3, sp, #80	@ 0x50
90013d2a:	2200      	movs	r2, #0
90013d2c:	4631      	mov	r1, r6
90013d2e:	9303      	str	r3, [sp, #12]
90013d30:	ab10      	add	r3, sp, #64	@ 0x40
90013d32:	4620      	mov	r0, r4
90013d34:	edcd 7a04 	vstr	s15, [sp, #16]
90013d38:	9302      	str	r3, [sp, #8]
90013d3a:	ab0c      	add	r3, sp, #48	@ 0x30
90013d3c:	ed8d 9a05 	vstr	s18, [sp, #20]
90013d40:	9301      	str	r3, [sp, #4]
90013d42:	ab08      	add	r3, sp, #32
90013d44:	ed8d 9a06 	vstr	s18, [sp, #24]
90013d48:	9300      	str	r3, [sp, #0]
90013d4a:	ab04      	add	r3, sp, #16
90013d4c:	edcd 7a07 	vstr	s15, [sp, #28]
90013d50:	edcd 7a08 	vstr	s15, [sp, #32]
90013d54:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
90013d58:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
90013d5c:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
90013d60:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
90013d64:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
90013d68:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
90013d6c:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
90013d70:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
90013d74:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
90013d78:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
90013d7c:	f7ff fe7e 	bl	90013a7c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90013d80:	b018      	add	sp, #96	@ 0x60
90013d82:	ecbd 8b04 	vpop	{d8-d9}
90013d86:	bd70      	pop	{r4, r5, r6, pc}
90013d88:	eef0 6a47 	vmov.f32	s13, s14
90013d8c:	ee18 3a10 	vmov	r3, s16
90013d90:	eef0 5a69 	vmov.f32	s11, s19
90013d94:	eeb0 6a48 	vmov.f32	s12, s16
90013d98:	e7c5      	b.n	90013d26 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90013d9a:	bf00      	nop
90013d9c:	00000000 	.word	0x00000000
90013da0:	42c80000 	.word	0x42c80000
90013da4:	2402183c 	.word	0x2402183c

90013da8 <_ZN8touchgfx8TextArea8setWidthEs>:
90013da8:	b530      	push	{r4, r5, lr}
90013daa:	b085      	sub	sp, #20
90013dac:	6803      	ldr	r3, [r0, #0]
90013dae:	4604      	mov	r4, r0
90013db0:	8101      	strh	r1, [r0, #8]
90013db2:	466d      	mov	r5, sp
90013db4:	4601      	mov	r1, r0
90013db6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90013dba:	343c      	adds	r4, #60	@ 0x3c
90013dbc:	4628      	mov	r0, r5
90013dbe:	4798      	blx	r3
90013dc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013dc4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013dc8:	b005      	add	sp, #20
90013dca:	bd30      	pop	{r4, r5, pc}

90013dcc <_ZN8touchgfx8TextArea9setHeightEs>:
90013dcc:	b530      	push	{r4, r5, lr}
90013dce:	b085      	sub	sp, #20
90013dd0:	6803      	ldr	r3, [r0, #0]
90013dd2:	4604      	mov	r4, r0
90013dd4:	8141      	strh	r1, [r0, #10]
90013dd6:	466d      	mov	r5, sp
90013dd8:	4601      	mov	r1, r0
90013dda:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90013dde:	343c      	adds	r4, #60	@ 0x3c
90013de0:	4628      	mov	r0, r5
90013de2:	4798      	blx	r3
90013de4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013de8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013dec:	b005      	add	sp, #20
90013dee:	bd30      	pop	{r4, r5, pc}

90013df0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90013df0:	2200      	movs	r2, #0
90013df2:	8002      	strh	r2, [r0, #0]
90013df4:	8042      	strh	r2, [r0, #2]
90013df6:	8082      	strh	r2, [r0, #4]
90013df8:	80c2      	strh	r2, [r0, #6]
90013dfa:	4770      	bx	lr

90013dfc <_ZN8touchgfx8TextArea8setAlphaEh>:
90013dfc:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
90013e00:	4770      	bx	lr
	...

90013e04 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90013e04:	b570      	push	{r4, r5, r6, lr}
90013e06:	6803      	ldr	r3, [r0, #0]
90013e08:	4604      	mov	r4, r0
90013e0a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013e0c:	460d      	mov	r5, r1
90013e0e:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90013e10:	4b08      	ldr	r3, [pc, #32]	@ (90013e34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
90013e12:	681b      	ldr	r3, [r3, #0]
90013e14:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90013e18:	4b07      	ldr	r3, [pc, #28]	@ (90013e38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
90013e1a:	681b      	ldr	r3, [r3, #0]
90013e1c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90013e20:	6803      	ldr	r3, [r0, #0]
90013e22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013e24:	4798      	blx	r3
90013e26:	1a29      	subs	r1, r5, r0
90013e28:	4633      	mov	r3, r6
90013e2a:	4620      	mov	r0, r4
90013e2c:	b209      	sxth	r1, r1
90013e2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013e32:	4718      	bx	r3
90013e34:	2402189c 	.word	0x2402189c
90013e38:	240218a4 	.word	0x240218a4

90013e3c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
90013e3c:	b570      	push	{r4, r5, r6, lr}
90013e3e:	6803      	ldr	r3, [r0, #0]
90013e40:	4604      	mov	r4, r0
90013e42:	4615      	mov	r5, r2
90013e44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013e46:	4798      	blx	r3
90013e48:	6823      	ldr	r3, [r4, #0]
90013e4a:	4629      	mov	r1, r5
90013e4c:	4620      	mov	r0, r4
90013e4e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90013e50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013e54:	4718      	bx	r3

90013e56 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90013e56:	2000      	movs	r0, #0
90013e58:	4770      	bx	lr

90013e5a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
90013e5a:	2000      	movs	r0, #0
90013e5c:	4770      	bx	lr
	...

90013e60 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90013e60:	4b07      	ldr	r3, [pc, #28]	@ (90013e80 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90013e62:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013e64:	881b      	ldrh	r3, [r3, #0]
90013e66:	4293      	cmp	r3, r2
90013e68:	bf81      	itttt	hi
90013e6a:	4b06      	ldrhi	r3, [pc, #24]	@ (90013e84 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90013e6c:	681b      	ldrhi	r3, [r3, #0]
90013e6e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90013e72:	7858      	ldrbhi	r0, [r3, #1]
90013e74:	bf8c      	ite	hi
90013e76:	f000 0003 	andhi.w	r0, r0, #3
90013e7a:	2000      	movls	r0, #0
90013e7c:	4770      	bx	lr
90013e7e:	bf00      	nop
90013e80:	240218a0 	.word	0x240218a0
90013e84:	2402189c 	.word	0x2402189c

90013e88 <_ZN8touchgfx8TextAreaD1Ev>:
90013e88:	4770      	bx	lr
	...

90013e8c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90013e8c:	4b11      	ldr	r3, [pc, #68]	@ (90013ed4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90013e8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013e92:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90013e94:	4604      	mov	r4, r0
90013e96:	881b      	ldrh	r3, [r3, #0]
90013e98:	428b      	cmp	r3, r1
90013e9a:	d918      	bls.n	90013ece <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90013e9c:	6803      	ldr	r3, [r0, #0]
90013e9e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90013ea0:	4b0d      	ldr	r3, [pc, #52]	@ (90013ed8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90013ea2:	6818      	ldr	r0, [r3, #0]
90013ea4:	f7f1 f9ee 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
90013ea8:	6823      	ldr	r3, [r4, #0]
90013eaa:	4606      	mov	r6, r0
90013eac:	4620      	mov	r0, r4
90013eae:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013eb0:	4798      	blx	r3
90013eb2:	6823      	ldr	r3, [r4, #0]
90013eb4:	4607      	mov	r7, r0
90013eb6:	4620      	mov	r0, r4
90013eb8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013ebc:	4798      	blx	r3
90013ebe:	463a      	mov	r2, r7
90013ec0:	4603      	mov	r3, r0
90013ec2:	4631      	mov	r1, r6
90013ec4:	4620      	mov	r0, r4
90013ec6:	46ac      	mov	ip, r5
90013ec8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90013ecc:	4760      	bx	ip
90013ece:	2000      	movs	r0, #0
90013ed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013ed4:	240218a0 	.word	0x240218a0
90013ed8:	240218a8 	.word	0x240218a8

90013edc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90013edc:	4b18      	ldr	r3, [pc, #96]	@ (90013f40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90013ede:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90013ee2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90013ee4:	4604      	mov	r4, r0
90013ee6:	881b      	ldrh	r3, [r3, #0]
90013ee8:	428b      	cmp	r3, r1
90013eea:	d926      	bls.n	90013f3a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90013eec:	4b15      	ldr	r3, [pc, #84]	@ (90013f44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90013eee:	681b      	ldr	r3, [r3, #0]
90013ef0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90013ef4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90013ef8:	4b13      	ldr	r3, [pc, #76]	@ (90013f48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90013efa:	7855      	ldrb	r5, [r2, #1]
90013efc:	681b      	ldr	r3, [r3, #0]
90013efe:	f3c5 0581 	ubfx	r5, r5, #2, #2
90013f02:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90013f06:	6833      	ldr	r3, [r6, #0]
90013f08:	69df      	ldr	r7, [r3, #28]
90013f0a:	4b10      	ldr	r3, [pc, #64]	@ (90013f4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90013f0c:	6818      	ldr	r0, [r3, #0]
90013f0e:	f7f1 f9b9 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
90013f12:	6823      	ldr	r3, [r4, #0]
90013f14:	4680      	mov	r8, r0
90013f16:	4620      	mov	r0, r4
90013f18:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013f1a:	4798      	blx	r3
90013f1c:	6823      	ldr	r3, [r4, #0]
90013f1e:	4681      	mov	r9, r0
90013f20:	4620      	mov	r0, r4
90013f22:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013f26:	4798      	blx	r3
90013f28:	464b      	mov	r3, r9
90013f2a:	9000      	str	r0, [sp, #0]
90013f2c:	4642      	mov	r2, r8
90013f2e:	4629      	mov	r1, r5
90013f30:	4630      	mov	r0, r6
90013f32:	47b8      	blx	r7
90013f34:	b003      	add	sp, #12
90013f36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013f3a:	2000      	movs	r0, #0
90013f3c:	e7fa      	b.n	90013f34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90013f3e:	bf00      	nop
90013f40:	240218a0 	.word	0x240218a0
90013f44:	2402189c 	.word	0x2402189c
90013f48:	240218a4 	.word	0x240218a4
90013f4c:	240218a8 	.word	0x240218a8

90013f50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90013f50:	b40e      	push	{r1, r2, r3}
90013f52:	4b30      	ldr	r3, [pc, #192]	@ (90014014 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90013f54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013f58:	881a      	ldrh	r2, [r3, #0]
90013f5a:	b09d      	sub	sp, #116	@ 0x74
90013f5c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90013f5e:	4604      	mov	r4, r0
90013f60:	429a      	cmp	r2, r3
90013f62:	d954      	bls.n	9001400e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90013f64:	aa26      	add	r2, sp, #152	@ 0x98
90013f66:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90014018 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90013f6a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 9001401c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90013f6e:	9202      	str	r2, [sp, #8]
90013f70:	f8d9 2000 	ldr.w	r2, [r9]
90013f74:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90013f78:	f8d8 3000 	ldr.w	r3, [r8]
90013f7c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90013f80:	682b      	ldr	r3, [r5, #0]
90013f82:	4628      	mov	r0, r5
90013f84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013f86:	4798      	blx	r3
90013f88:	4606      	mov	r6, r0
90013f8a:	b207      	sxth	r7, r0
90013f8c:	a803      	add	r0, sp, #12
90013f8e:	f005 fae1 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
90013f92:	682b      	ldr	r3, [r5, #0]
90013f94:	4628      	mov	r0, r5
90013f96:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90013f98:	4798      	blx	r3
90013f9a:	682b      	ldr	r3, [r5, #0]
90013f9c:	4682      	mov	sl, r0
90013f9e:	4628      	mov	r0, r5
90013fa0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90013fa2:	4798      	blx	r3
90013fa4:	4653      	mov	r3, sl
90013fa6:	9000      	str	r0, [sp, #0]
90013fa8:	a803      	add	r0, sp, #12
90013faa:	9a02      	ldr	r2, [sp, #8]
90013fac:	9925      	ldr	r1, [sp, #148]	@ 0x94
90013fae:	f005 fb2c 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90013fb2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013fb4:	f8d9 3000 	ldr.w	r3, [r9]
90013fb8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90013fbc:	8925      	ldrh	r5, [r4, #8]
90013fbe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90013fc2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90013fc6:	eba5 050c 	sub.w	r5, r5, ip
90013fca:	784a      	ldrb	r2, [r1, #1]
90013fcc:	f8d8 3000 	ldr.w	r3, [r8]
90013fd0:	b22d      	sxth	r5, r5
90013fd2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
90013fd6:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013fda:	9500      	str	r5, [sp, #0]
90013fdc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90013fe0:	a803      	add	r0, sp, #12
90013fe2:	f002 fc27 	bl	90016834 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90013fe6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90013fea:	b203      	sxth	r3, r0
90013fec:	18b9      	adds	r1, r7, r2
90013fee:	2900      	cmp	r1, #0
90013ff0:	dd0b      	ble.n	9001400a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90013ff2:	3b01      	subs	r3, #1
90013ff4:	fb13 f302 	smulbb	r3, r3, r2
90013ff8:	fb16 3300 	smlabb	r3, r6, r0, r3
90013ffc:	b21f      	sxth	r7, r3
90013ffe:	4638      	mov	r0, r7
90014000:	b01d      	add	sp, #116	@ 0x74
90014002:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014006:	b003      	add	sp, #12
90014008:	4770      	bx	lr
9001400a:	2b00      	cmp	r3, #0
9001400c:	dcf7      	bgt.n	90013ffe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001400e:	2700      	movs	r7, #0
90014010:	e7f5      	b.n	90013ffe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014012:	bf00      	nop
90014014:	240218a0 	.word	0x240218a0
90014018:	2402189c 	.word	0x2402189c
9001401c:	240218a4 	.word	0x240218a4

90014020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014020:	4bbd      	ldr	r3, [pc, #756]	@ (90014318 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014022:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014026:	460c      	mov	r4, r1
90014028:	881b      	ldrh	r3, [r3, #0]
9001402a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
9001402c:	b0a9      	sub	sp, #164	@ 0xa4
9001402e:	4680      	mov	r8, r0
90014030:	428b      	cmp	r3, r1
90014032:	d809      	bhi.n	90014048 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014034:	2300      	movs	r3, #0
90014036:	f04f 32ff 	mov.w	r2, #4294967295
9001403a:	6083      	str	r3, [r0, #8]
9001403c:	e9c0 3200 	strd	r3, r2, [r0]
90014040:	4640      	mov	r0, r8
90014042:	b029      	add	sp, #164	@ 0xa4
90014044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014048:	4eb4      	ldr	r6, [pc, #720]	@ (9001431c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
9001404a:	6833      	ldr	r3, [r6, #0]
9001404c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014050:	4bb3      	ldr	r3, [pc, #716]	@ (90014320 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014052:	681b      	ldr	r3, [r3, #0]
90014054:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014058:	4bb2      	ldr	r3, [pc, #712]	@ (90014324 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
9001405a:	6818      	ldr	r0, [r3, #0]
9001405c:	f7f1 f912 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
90014060:	682b      	ldr	r3, [r5, #0]
90014062:	4681      	mov	r9, r0
90014064:	4628      	mov	r0, r5
90014066:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014068:	4798      	blx	r3
9001406a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
9001406c:	b203      	sxth	r3, r0
9001406e:	4682      	mov	sl, r0
90014070:	4407      	add	r7, r0
90014072:	a80f      	add	r0, sp, #60	@ 0x3c
90014074:	9304      	str	r3, [sp, #16]
90014076:	b2bb      	uxth	r3, r7
90014078:	9303      	str	r3, [sp, #12]
9001407a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9001407e:	2b00      	cmp	r3, #0
90014080:	f040 80a5 	bne.w	900141ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90014084:	f005 fa66 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
90014088:	682b      	ldr	r3, [r5, #0]
9001408a:	4628      	mov	r0, r5
9001408c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001408e:	4798      	blx	r3
90014090:	682b      	ldr	r3, [r5, #0]
90014092:	4606      	mov	r6, r0
90014094:	4628      	mov	r0, r5
90014096:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014098:	4798      	blx	r3
9001409a:	6823      	ldr	r3, [r4, #0]
9001409c:	4607      	mov	r7, r0
9001409e:	4620      	mov	r0, r4
900140a0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900140a2:	4798      	blx	r3
900140a4:	6823      	ldr	r3, [r4, #0]
900140a6:	4683      	mov	fp, r0
900140a8:	4620      	mov	r0, r4
900140aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900140ae:	4798      	blx	r3
900140b0:	463b      	mov	r3, r7
900140b2:	4649      	mov	r1, r9
900140b4:	4632      	mov	r2, r6
900140b6:	2600      	movs	r6, #0
900140b8:	e9cd b000 	strd	fp, r0, [sp]
900140bc:	a80f      	add	r0, sp, #60	@ 0x3c
900140be:	4637      	mov	r7, r6
900140c0:	f005 fab8 	bl	90019634 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
900140c4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900140c8:	f8df b250 	ldr.w	fp, [pc, #592]	@ 9001431c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
900140cc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900140d0:	bf0c      	ite	eq
900140d2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
900140d6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
900140da:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900140dc:	4629      	mov	r1, r5
900140de:	f8db 3000 	ldr.w	r3, [fp]
900140e2:	a80f      	add	r0, sp, #60	@ 0x3c
900140e4:	3701      	adds	r7, #1
900140e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900140ea:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900140ee:	b2bf      	uxth	r7, r7
900140f0:	785b      	ldrb	r3, [r3, #1]
900140f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
900140f6:	f002 f8a4 	bl	90016242 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
900140fa:	9b03      	ldr	r3, [sp, #12]
900140fc:	4286      	cmp	r6, r0
900140fe:	eba9 0903 	sub.w	r9, r9, r3
90014102:	bfb8      	it	lt
90014104:	4606      	movlt	r6, r0
90014106:	a80f      	add	r0, sp, #60	@ 0x3c
90014108:	fa0f f989 	sxth.w	r9, r9
9001410c:	b236      	sxth	r6, r6
9001410e:	f005 fa48 	bl	900195a2 <_ZN8touchgfx12TextProvider11endOfStringEv>
90014112:	b918      	cbnz	r0, 9001411c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014114:	7a2b      	ldrb	r3, [r5, #8]
90014116:	444b      	add	r3, r9
90014118:	2b00      	cmp	r3, #0
9001411a:	dcde      	bgt.n	900140da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
9001411c:	9b03      	ldr	r3, [sp, #12]
9001411e:	4620      	mov	r0, r4
90014120:	9a04      	ldr	r2, [sp, #16]
90014122:	fb13 f707 	smulbb	r7, r3, r7
90014126:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90014128:	f895 9009 	ldrb.w	r9, [r5, #9]
9001412c:	1aff      	subs	r7, r7, r3
9001412e:	b2bf      	uxth	r7, r7
90014130:	b23b      	sxth	r3, r7
90014132:	429a      	cmp	r2, r3
90014134:	bfa8      	it	ge
90014136:	4657      	movge	r7, sl
90014138:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001413c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014140:	6823      	ldr	r3, [r4, #0]
90014142:	444f      	add	r7, r9
90014144:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014146:	bf08      	it	eq
90014148:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
9001414c:	fa1f f987 	uxth.w	r9, r7
90014150:	bf18      	it	ne
90014152:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90014156:	4798      	blx	r3
90014158:	2801      	cmp	r0, #1
9001415a:	fa0f f789 	sxth.w	r7, r9
9001415e:	b2b3      	uxth	r3, r6
90014160:	f000 80e2 	beq.w	90014328 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90014164:	2802      	cmp	r0, #2
90014166:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
9001416a:	f000 80e3 	beq.w	90014334 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
9001416e:	7aea      	ldrb	r2, [r5, #11]
90014170:	b236      	sxth	r6, r6
90014172:	7b2d      	ldrb	r5, [r5, #12]
90014174:	1ab6      	subs	r6, r6, r2
90014176:	442a      	add	r2, r5
90014178:	fa1f fa86 	uxth.w	sl, r6
9001417c:	4413      	add	r3, r2
9001417e:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
90014182:	fa0f fb8a 	sxth.w	fp, sl
90014186:	b29b      	uxth	r3, r3
90014188:	2a02      	cmp	r2, #2
9001418a:	b21e      	sxth	r6, r3
9001418c:	f000 80d6 	beq.w	9001433c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90014190:	2a03      	cmp	r2, #3
90014192:	f000 80de 	beq.w	90014352 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90014196:	2a01      	cmp	r2, #1
90014198:	f040 80e6 	bne.w	90014368 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
9001419c:	8925      	ldrh	r5, [r4, #8]
9001419e:	4633      	mov	r3, r6
900141a0:	463e      	mov	r6, r7
900141a2:	eba5 0909 	sub.w	r9, r5, r9
900141a6:	461f      	mov	r7, r3
900141a8:	465d      	mov	r5, fp
900141aa:	fa0f fb89 	sxth.w	fp, r9
900141ae:	4b5d      	ldr	r3, [pc, #372]	@ (90014324 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900141b0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900141b2:	6818      	ldr	r0, [r3, #0]
900141b4:	f7f1 f866 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
900141b8:	f8a8 b000 	strh.w	fp, [r8]
900141bc:	f8a8 5002 	strh.w	r5, [r8, #2]
900141c0:	f8a8 6004 	strh.w	r6, [r8, #4]
900141c4:	f8a8 7006 	strh.w	r7, [r8, #6]
900141c8:	f8c8 0008 	str.w	r0, [r8, #8]
900141cc:	e738      	b.n	90014040 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
900141ce:	f005 f9c1 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
900141d2:	682b      	ldr	r3, [r5, #0]
900141d4:	4628      	mov	r0, r5
900141d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900141d8:	4798      	blx	r3
900141da:	682b      	ldr	r3, [r5, #0]
900141dc:	4607      	mov	r7, r0
900141de:	4628      	mov	r0, r5
900141e0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900141e2:	4798      	blx	r3
900141e4:	6823      	ldr	r3, [r4, #0]
900141e6:	4683      	mov	fp, r0
900141e8:	4620      	mov	r0, r4
900141ea:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900141ec:	4798      	blx	r3
900141ee:	6822      	ldr	r2, [r4, #0]
900141f0:	9005      	str	r0, [sp, #20]
900141f2:	4620      	mov	r0, r4
900141f4:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
900141f8:	4790      	blx	r2
900141fa:	9b05      	ldr	r3, [sp, #20]
900141fc:	463a      	mov	r2, r7
900141fe:	4649      	mov	r1, r9
90014200:	9001      	str	r0, [sp, #4]
90014202:	a80f      	add	r0, sp, #60	@ 0x3c
90014204:	9300      	str	r3, [sp, #0]
90014206:	465b      	mov	r3, fp
90014208:	f005 fa14 	bl	90019634 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
9001420c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014210:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90014214:	af0f      	add	r7, sp, #60	@ 0x3c
90014216:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001421a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001421e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90014220:	bf0a      	itet	eq
90014222:	464a      	moveq	r2, r9
90014224:	461a      	movne	r2, r3
90014226:	4699      	moveq	r9, r3
90014228:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
9001422c:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90014230:	1ad2      	subs	r2, r2, r3
90014232:	6833      	ldr	r3, [r6, #0]
90014234:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90014238:	eb03 0341 	add.w	r3, r3, r1, lsl #1
9001423c:	7859      	ldrb	r1, [r3, #1]
9001423e:	2300      	movs	r3, #0
90014240:	9707      	str	r7, [sp, #28]
90014242:	f3c1 0181 	ubfx	r1, r1, #2, #2
90014246:	f8ad 3018 	strh.w	r3, [sp, #24]
9001424a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
9001424e:	f88d 1020 	strb.w	r1, [sp, #32]
90014252:	9509      	str	r5, [sp, #36]	@ 0x24
90014254:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90014258:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
9001425c:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
90014260:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90014264:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90014268:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001426c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90014270:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014274:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90014278:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
9001427c:	b350      	cbz	r0, 900142d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001427e:	682b      	ldr	r3, [r5, #0]
90014280:	4628      	mov	r0, r5
90014282:	695b      	ldr	r3, [r3, #20]
90014284:	4798      	blx	r3
90014286:	4607      	mov	r7, r0
90014288:	b320      	cbz	r0, 900142d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001428a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001428c:	4639      	mov	r1, r7
9001428e:	6803      	ldr	r3, [r0, #0]
90014290:	68db      	ldr	r3, [r3, #12]
90014292:	4798      	blx	r3
90014294:	4606      	mov	r6, r0
90014296:	b1e8      	cbz	r0, 900142d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014298:	7b43      	ldrb	r3, [r0, #13]
9001429a:	7a82      	ldrb	r2, [r0, #10]
9001429c:	005b      	lsls	r3, r3, #1
9001429e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900142a2:	4313      	orrs	r3, r2
900142a4:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900142a8:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
900142ac:	2b06      	cmp	r3, #6
900142ae:	d111      	bne.n	900142d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900142b0:	9809      	ldr	r0, [sp, #36]	@ 0x24
900142b2:	4632      	mov	r2, r6
900142b4:	4639      	mov	r1, r7
900142b6:	6803      	ldr	r3, [r0, #0]
900142b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900142ba:	4798      	blx	r3
900142bc:	7b73      	ldrb	r3, [r6, #13]
900142be:	005b      	lsls	r3, r3, #1
900142c0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900142c4:	7ab3      	ldrb	r3, [r6, #10]
900142c6:	4313      	orrs	r3, r2
900142c8:	4418      	add	r0, r3
900142ca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900142ce:	4418      	add	r0, r3
900142d0:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
900142d4:	2600      	movs	r6, #0
900142d6:	4637      	mov	r7, r6
900142d8:	a806      	add	r0, sp, #24
900142da:	3701      	adds	r7, #1
900142dc:	f002 f9a7 	bl	9001662e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900142e0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
900142e4:	9b03      	ldr	r3, [sp, #12]
900142e6:	b2bf      	uxth	r7, r7
900142e8:	4286      	cmp	r6, r0
900142ea:	eba9 0903 	sub.w	r9, r9, r3
900142ee:	f8bd 3018 	ldrh.w	r3, [sp, #24]
900142f2:	bfb8      	it	lt
900142f4:	4606      	movlt	r6, r0
900142f6:	fa0f f989 	sxth.w	r9, r9
900142fa:	b236      	sxth	r6, r6
900142fc:	2b00      	cmp	r3, #0
900142fe:	f43f af0d 	beq.w	9001411c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014302:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90014306:	2b00      	cmp	r3, #0
90014308:	f47f af08 	bne.w	9001411c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001430c:	7a2b      	ldrb	r3, [r5, #8]
9001430e:	444b      	add	r3, r9
90014310:	2b00      	cmp	r3, #0
90014312:	dce1      	bgt.n	900142d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90014314:	e702      	b.n	9001411c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014316:	bf00      	nop
90014318:	240218a0 	.word	0x240218a0
9001431c:	2402189c 	.word	0x2402189c
90014320:	240218a4 	.word	0x240218a4
90014324:	240218a8 	.word	0x240218a8
90014328:	ebaa 0606 	sub.w	r6, sl, r6
9001432c:	2002      	movs	r0, #2
9001432e:	fb96 f6f0 	sdiv	r6, r6, r0
90014332:	e71c      	b.n	9001416e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014334:	441e      	add	r6, r3
90014336:	ebaa 0606 	sub.w	r6, sl, r6
9001433a:	e718      	b.n	9001416e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001433c:	8925      	ldrh	r5, [r4, #8]
9001433e:	1aed      	subs	r5, r5, r3
90014340:	eba5 050a 	sub.w	r5, r5, sl
90014344:	fa0f fb85 	sxth.w	fp, r5
90014348:	8965      	ldrh	r5, [r4, #10]
9001434a:	eba5 0509 	sub.w	r5, r5, r9
9001434e:	b22d      	sxth	r5, r5
90014350:	e72d      	b.n	900141ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014352:	8965      	ldrh	r5, [r4, #10]
90014354:	f04f 0b00 	mov.w	fp, #0
90014358:	1aed      	subs	r5, r5, r3
9001435a:	4633      	mov	r3, r6
9001435c:	463e      	mov	r6, r7
9001435e:	eba5 050a 	sub.w	r5, r5, sl
90014362:	461f      	mov	r7, r3
90014364:	b22d      	sxth	r5, r5
90014366:	e722      	b.n	900141ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014368:	2500      	movs	r5, #0
9001436a:	e720      	b.n	900141ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

9001436c <_ZN8touchgfx8TextAreaD0Ev>:
9001436c:	b510      	push	{r4, lr}
9001436e:	4604      	mov	r4, r0
90014370:	2148      	movs	r1, #72	@ 0x48
90014372:	f015 f9dd 	bl	90029730 <_ZdlPvj>
90014376:	4620      	mov	r0, r4
90014378:	bd10      	pop	{r4, pc}
	...

9001437c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
9001437c:	b513      	push	{r0, r1, r4, lr}
9001437e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
90014382:	4604      	mov	r4, r0
90014384:	b1fb      	cbz	r3, 900143c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014386:	4b16      	ldr	r3, [pc, #88]	@ (900143e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90014388:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9001438a:	881b      	ldrh	r3, [r3, #0]
9001438c:	428b      	cmp	r3, r1
9001438e:	d91a      	bls.n	900143c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014390:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014394:	2b00      	cmp	r3, #0
90014396:	dd16      	ble.n	900143c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014398:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001439c:	2b00      	cmp	r3, #0
9001439e:	dd12      	ble.n	900143c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900143a0:	4b10      	ldr	r3, [pc, #64]	@ (900143e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900143a2:	6818      	ldr	r0, [r3, #0]
900143a4:	f7f0 ff6e 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
900143a8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
900143ac:	6822      	ldr	r2, [r4, #0]
900143ae:	2b00      	cmp	r3, #0
900143b0:	db06      	blt.n	900143c0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900143b2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
900143b6:	2b00      	cmp	r3, #0
900143b8:	db02      	blt.n	900143c0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900143ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900143bc:	4298      	cmp	r0, r3
900143be:	d004      	beq.n	900143ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900143c0:	6953      	ldr	r3, [r2, #20]
900143c2:	4620      	mov	r0, r4
900143c4:	4798      	blx	r3
900143c6:	b002      	add	sp, #8
900143c8:	bd10      	pop	{r4, pc}
900143ca:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
900143ce:	466b      	mov	r3, sp
900143d0:	6912      	ldr	r2, [r2, #16]
900143d2:	c903      	ldmia	r1, {r0, r1}
900143d4:	e883 0003 	stmia.w	r3, {r0, r1}
900143d8:	4619      	mov	r1, r3
900143da:	4620      	mov	r0, r4
900143dc:	4790      	blx	r2
900143de:	e7f2      	b.n	900143c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900143e0:	240218a0 	.word	0x240218a0
900143e4:	240218a8 	.word	0x240218a8

900143e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900143e8:	4b45      	ldr	r3, [pc, #276]	@ (90014500 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900143ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900143ee:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900143f0:	b08e      	sub	sp, #56	@ 0x38
900143f2:	881b      	ldrh	r3, [r3, #0]
900143f4:	4604      	mov	r4, r0
900143f6:	4293      	cmp	r3, r2
900143f8:	d97e      	bls.n	900144f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900143fa:	6808      	ldr	r0, [r1, #0]
900143fc:	ab05      	add	r3, sp, #20
900143fe:	6849      	ldr	r1, [r1, #4]
90014400:	4d40      	ldr	r5, [pc, #256]	@ (90014504 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90014402:	c303      	stmia	r3!, {r0, r1}
90014404:	4611      	mov	r1, r2
90014406:	6828      	ldr	r0, [r5, #0]
90014408:	f7f0 ff3c 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
9001440c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90014410:	2b00      	cmp	r3, #0
90014412:	db11      	blt.n	90014438 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014414:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90014418:	2b00      	cmp	r3, #0
9001441a:	db0d      	blt.n	90014438 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001441c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9001441e:	4298      	cmp	r0, r3
90014420:	d10a      	bne.n	90014438 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014422:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90014426:	ab09      	add	r3, sp, #36	@ 0x24
90014428:	e892 0003 	ldmia.w	r2, {r0, r1}
9001442c:	e883 0003 	stmia.w	r3, {r0, r1}
90014430:	4619      	mov	r1, r3
90014432:	a805      	add	r0, sp, #20
90014434:	f7fc fd76 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90014438:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001443c:	2b00      	cmp	r3, #0
9001443e:	dd5b      	ble.n	900144f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014440:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014444:	2b00      	cmp	r3, #0
90014446:	dd57      	ble.n	900144f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014448:	4f2f      	ldr	r7, [pc, #188]	@ (90014508 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
9001444a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9001444c:	683b      	ldr	r3, [r7, #0]
9001444e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90014452:	4b2e      	ldr	r3, [pc, #184]	@ (9001450c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90014454:	681b      	ldr	r3, [r3, #0]
90014456:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001445a:	2e00      	cmp	r6, #0
9001445c:	d04c      	beq.n	900144f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001445e:	6823      	ldr	r3, [r4, #0]
90014460:	4620      	mov	r0, r4
90014462:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90014466:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014468:	4798      	blx	r3
9001446a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9001446c:	683b      	ldr	r3, [r7, #0]
9001446e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
90014472:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014476:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
9001447a:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
9001447e:	785b      	ldrb	r3, [r3, #1]
90014480:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
90014484:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014488:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001448a:	9609      	str	r6, [sp, #36]	@ 0x24
9001448c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90014490:	4b1f      	ldr	r3, [pc, #124]	@ (90014510 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90014492:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
90014496:	681b      	ldr	r3, [r3, #0]
90014498:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
9001449c:	910b      	str	r1, [sp, #44]	@ 0x2c
9001449e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
900144a2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
900144a6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
900144aa:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
900144ae:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900144b2:	b10a      	cbz	r2, 900144b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900144b4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
900144b6:	b906      	cbnz	r6, 900144ba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900144b8:	689e      	ldr	r6, [r3, #8]
900144ba:	af07      	add	r7, sp, #28
900144bc:	4621      	mov	r1, r4
900144be:	4638      	mov	r0, r7
900144c0:	f004 f8bc 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900144c4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900144c6:	6828      	ldr	r0, [r5, #0]
900144c8:	f7f0 fedc 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
900144cc:	6823      	ldr	r3, [r4, #0]
900144ce:	4605      	mov	r5, r0
900144d0:	4620      	mov	r0, r4
900144d2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900144d4:	4798      	blx	r3
900144d6:	6823      	ldr	r3, [r4, #0]
900144d8:	4680      	mov	r8, r0
900144da:	4620      	mov	r0, r4
900144dc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900144e0:	4798      	blx	r3
900144e2:	ab09      	add	r3, sp, #36	@ 0x24
900144e4:	9501      	str	r5, [sp, #4]
900144e6:	9300      	str	r3, [sp, #0]
900144e8:	ab05      	add	r3, sp, #20
900144ea:	e9cd 8002 	strd	r8, r0, [sp, #8]
900144ee:	4630      	mov	r0, r6
900144f0:	e897 0006 	ldmia.w	r7, {r1, r2}
900144f4:	f7f0 fe76 	bl	900051e4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900144f8:	b00e      	add	sp, #56	@ 0x38
900144fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900144fe:	bf00      	nop
90014500:	240218a0 	.word	0x240218a0
90014504:	240218a8 	.word	0x240218a8
90014508:	2402189c 	.word	0x2402189c
9001450c:	240218a4 	.word	0x240218a4
90014510:	24021844 	.word	0x24021844

90014514 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90014514:	b570      	push	{r4, r5, r6, lr}
90014516:	6803      	ldr	r3, [r0, #0]
90014518:	4604      	mov	r4, r0
9001451a:	4615      	mov	r5, r2
9001451c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001451e:	4798      	blx	r3
90014520:	6823      	ldr	r3, [r4, #0]
90014522:	4629      	mov	r1, r5
90014524:	4620      	mov	r0, r4
90014526:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001452c:	4718      	bx	r3
	...

90014530 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90014530:	b538      	push	{r3, r4, r5, lr}
90014532:	4b0e      	ldr	r3, [pc, #56]	@ (9001456c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90014534:	4604      	mov	r4, r0
90014536:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014538:	881b      	ldrh	r3, [r3, #0]
9001453a:	429a      	cmp	r2, r3
9001453c:	d214      	bcs.n	90014568 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001453e:	6803      	ldr	r3, [r0, #0]
90014540:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90014542:	4798      	blx	r3
90014544:	6823      	ldr	r3, [r4, #0]
90014546:	4605      	mov	r5, r0
90014548:	4620      	mov	r0, r4
9001454a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9001454c:	4798      	blx	r3
9001454e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014552:	b22d      	sxth	r5, r5
90014554:	4601      	mov	r1, r0
90014556:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001455a:	bf06      	itte	eq
9001455c:	4602      	moveq	r2, r0
9001455e:	4629      	moveq	r1, r5
90014560:	462a      	movne	r2, r5
90014562:	4620      	mov	r0, r4
90014564:	f7ff ffd6 	bl	90014514 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014568:	bd38      	pop	{r3, r4, r5, pc}
9001456a:	bf00      	nop
9001456c:	240218a0 	.word	0x240218a0

90014570 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90014570:	b530      	push	{r4, r5, lr}
90014572:	888b      	ldrh	r3, [r1, #4]
90014574:	b085      	sub	sp, #20
90014576:	4604      	mov	r4, r0
90014578:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001457a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001457e:	b923      	cbnz	r3, 9001458a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90014580:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014584:	b90b      	cbnz	r3, 9001458a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90014586:	f7ff ffd3 	bl	90014530 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001458a:	6823      	ldr	r3, [r4, #0]
9001458c:	466d      	mov	r5, sp
9001458e:	4621      	mov	r1, r4
90014590:	343c      	adds	r4, #60	@ 0x3c
90014592:	4628      	mov	r0, r5
90014594:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90014598:	4798      	blx	r3
9001459a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001459e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900145a2:	b005      	add	sp, #20
900145a4:	bd30      	pop	{r4, r5, pc}

900145a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
900145a6:	2300      	movs	r3, #0
900145a8:	8083      	strh	r3, [r0, #4]
900145aa:	80c3      	strh	r3, [r0, #6]
900145ac:	8003      	strh	r3, [r0, #0]
900145ae:	8043      	strh	r3, [r0, #2]
900145b0:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900145b4:	2bff      	cmp	r3, #255	@ 0xff
900145b6:	bf01      	itttt	eq
900145b8:	890b      	ldrheq	r3, [r1, #8]
900145ba:	8083      	strheq	r3, [r0, #4]
900145bc:	894b      	ldrheq	r3, [r1, #10]
900145be:	80c3      	strheq	r3, [r0, #6]
900145c0:	4770      	bx	lr
	...

900145c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900145c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900145c6:	4604      	mov	r4, r0
900145c8:	466b      	mov	r3, sp
900145ca:	6808      	ldr	r0, [r1, #0]
900145cc:	6849      	ldr	r1, [r1, #4]
900145ce:	c303      	stmia	r3!, {r0, r1}
900145d0:	6823      	ldr	r3, [r4, #0]
900145d2:	4669      	mov	r1, sp
900145d4:	4620      	mov	r0, r4
900145d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900145d8:	4798      	blx	r3
900145da:	4b08      	ldr	r3, [pc, #32]	@ (900145fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900145dc:	681b      	ldr	r3, [r3, #0]
900145de:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900145e2:	b10a      	cbz	r2, 900145e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900145e4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900145e6:	b900      	cbnz	r0, 900145ea <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900145e8:	6898      	ldr	r0, [r3, #8]
900145ea:	6803      	ldr	r3, [r0, #0]
900145ec:	4669      	mov	r1, sp
900145ee:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900145f0:	6a1d      	ldr	r5, [r3, #32]
900145f2:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
900145f6:	47a8      	blx	r5
900145f8:	b003      	add	sp, #12
900145fa:	bd30      	pop	{r4, r5, pc}
900145fc:	24021844 	.word	0x24021844

90014600 <_ZN8touchgfx3BoxD1Ev>:
90014600:	4770      	bx	lr

90014602 <_ZN8touchgfx3BoxD0Ev>:
90014602:	b510      	push	{r4, lr}
90014604:	4604      	mov	r4, r0
90014606:	212c      	movs	r1, #44	@ 0x2c
90014608:	f015 f892 	bl	90029730 <_ZdlPvj>
9001460c:	4620      	mov	r0, r4
9001460e:	bd10      	pop	{r4, pc}

90014610 <_ZNK8touchgfx3Box17invalidateContentEv>:
90014610:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90014614:	b12a      	cbz	r2, 90014622 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90014616:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001461a:	b112      	cbz	r2, 90014622 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001461c:	6803      	ldr	r3, [r0, #0]
9001461e:	695b      	ldr	r3, [r3, #20]
90014620:	4718      	bx	r3
90014622:	4770      	bx	lr

90014624 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90014624:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90014628:	4770      	bx	lr

9001462a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9001462a:	b570      	push	{r4, r5, r6, lr}
9001462c:	880b      	ldrh	r3, [r1, #0]
9001462e:	4605      	mov	r5, r0
90014630:	4604      	mov	r4, r0
90014632:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90014634:	8813      	ldrh	r3, [r2, #0]
90014636:	f825 3f30 	strh.w	r3, [r5, #48]!
9001463a:	4628      	mov	r0, r5
9001463c:	f005 ffca 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014640:	4606      	mov	r6, r0
90014642:	4628      	mov	r0, r5
90014644:	f005 fffa 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
90014648:	6823      	ldr	r3, [r4, #0]
9001464a:	4605      	mov	r5, r0
9001464c:	4631      	mov	r1, r6
9001464e:	4620      	mov	r0, r4
90014650:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014652:	4798      	blx	r3
90014654:	6823      	ldr	r3, [r4, #0]
90014656:	4629      	mov	r1, r5
90014658:	4620      	mov	r0, r4
9001465a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001465c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014660:	4718      	bx	r3

90014662 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90014662:	b510      	push	{r4, lr}
90014664:	4604      	mov	r4, r0
90014666:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90014668:	b150      	cbz	r0, 90014680 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001466a:	6803      	ldr	r3, [r0, #0]
9001466c:	68db      	ldr	r3, [r3, #12]
9001466e:	4798      	blx	r3
90014670:	b130      	cbz	r0, 90014680 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90014672:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90014674:	4621      	mov	r1, r4
90014676:	6803      	ldr	r3, [r0, #0]
90014678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001467c:	689b      	ldr	r3, [r3, #8]
9001467e:	4718      	bx	r3
90014680:	bd10      	pop	{r4, pc}

90014682 <_ZNK8touchgfx6Button12getSolidRectEv>:
90014682:	b510      	push	{r4, lr}
90014684:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90014688:	4604      	mov	r4, r0
9001468a:	2bff      	cmp	r3, #255	@ 0xff
9001468c:	d006      	beq.n	9001469c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9001468e:	2300      	movs	r3, #0
90014690:	8003      	strh	r3, [r0, #0]
90014692:	8043      	strh	r3, [r0, #2]
90014694:	8083      	strh	r3, [r0, #4]
90014696:	80c3      	strh	r3, [r0, #6]
90014698:	4620      	mov	r0, r4
9001469a:	bd10      	pop	{r4, pc}
9001469c:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
900146a0:	b11b      	cbz	r3, 900146aa <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900146a2:	3130      	adds	r1, #48	@ 0x30
900146a4:	f005 fffe 	bl	9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900146a8:	e7f6      	b.n	90014698 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900146aa:	312e      	adds	r1, #46	@ 0x2e
900146ac:	e7fa      	b.n	900146a4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900146b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900146b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900146b4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900146b8:	b08a      	sub	sp, #40	@ 0x28
900146ba:	4604      	mov	r4, r0
900146bc:	4688      	mov	r8, r1
900146be:	2b00      	cmp	r3, #0
900146c0:	d066      	beq.n	90014790 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900146c2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
900146c4:	a805      	add	r0, sp, #20
900146c6:	f8ad 3014 	strh.w	r3, [sp, #20]
900146ca:	f005 ff83 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
900146ce:	4607      	mov	r7, r0
900146d0:	a805      	add	r0, sp, #20
900146d2:	f005 ffb3 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
900146d6:	f9b8 6000 	ldrsh.w	r6, [r8]
900146da:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900146de:	2300      	movs	r3, #0
900146e0:	4432      	add	r2, r6
900146e2:	9306      	str	r3, [sp, #24]
900146e4:	b292      	uxth	r2, r2
900146e6:	fa0f fc82 	sxth.w	ip, r2
900146ea:	459c      	cmp	ip, r3
900146ec:	dd52      	ble.n	90014794 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900146ee:	42b7      	cmp	r7, r6
900146f0:	dd50      	ble.n	90014794 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900146f2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900146f6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900146fa:	442b      	add	r3, r5
900146fc:	b29b      	uxth	r3, r3
900146fe:	b219      	sxth	r1, r3
90014700:	2900      	cmp	r1, #0
90014702:	dd47      	ble.n	90014794 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014704:	42a8      	cmp	r0, r5
90014706:	dd45      	ble.n	90014794 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014708:	4567      	cmp	r7, ip
9001470a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001470e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90014712:	bfb8      	it	lt
90014714:	b2ba      	uxthlt	r2, r7
90014716:	4288      	cmp	r0, r1
90014718:	f8ad 6018 	strh.w	r6, [sp, #24]
9001471c:	bfb8      	it	lt
9001471e:	b283      	uxthlt	r3, r0
90014720:	1b92      	subs	r2, r2, r6
90014722:	f8ad 501a 	strh.w	r5, [sp, #26]
90014726:	1b5b      	subs	r3, r3, r5
90014728:	f8ad 201c 	strh.w	r2, [sp, #28]
9001472c:	f8ad 301e 	strh.w	r3, [sp, #30]
90014730:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90014734:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90014738:	429a      	cmp	r2, r3
9001473a:	d026      	beq.n	9001478a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001473c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90014740:	2b00      	cmp	r3, #0
90014742:	dd22      	ble.n	9001478a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90014744:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014748:	2b00      	cmp	r3, #0
9001474a:	dd1e      	ble.n	9001478a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001474c:	2300      	movs	r3, #0
9001474e:	a908      	add	r1, sp, #32
90014750:	4620      	mov	r0, r4
90014752:	e9cd 3308 	strd	r3, r3, [sp, #32]
90014756:	6823      	ldr	r3, [r4, #0]
90014758:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001475a:	4798      	blx	r3
9001475c:	4b0f      	ldr	r3, [pc, #60]	@ (9001479c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9001475e:	681b      	ldr	r3, [r3, #0]
90014760:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014764:	b10a      	cbz	r2, 9001476a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90014766:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014768:	b900      	cbnz	r0, 9001476c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001476a:	6898      	ldr	r0, [r3, #8]
9001476c:	2501      	movs	r5, #1
9001476e:	6801      	ldr	r1, [r0, #0]
90014770:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90014774:	9502      	str	r5, [sp, #8]
90014776:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
9001477a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001477e:	9401      	str	r4, [sp, #4]
90014780:	ac06      	add	r4, sp, #24
90014782:	9400      	str	r4, [sp, #0]
90014784:	688c      	ldr	r4, [r1, #8]
90014786:	a905      	add	r1, sp, #20
90014788:	47a0      	blx	r4
9001478a:	b00a      	add	sp, #40	@ 0x28
9001478c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014790:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90014792:	e797      	b.n	900146c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90014794:	2300      	movs	r3, #0
90014796:	9307      	str	r3, [sp, #28]
90014798:	e7ca      	b.n	90014730 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
9001479a:	bf00      	nop
9001479c:	24021844 	.word	0x24021844

900147a0 <_ZNK8touchgfx6Button17invalidateContentEv>:
900147a0:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900147a4:	b12a      	cbz	r2, 900147b2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900147a6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900147aa:	b112      	cbz	r2, 900147b2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900147ac:	6803      	ldr	r3, [r0, #0]
900147ae:	695b      	ldr	r3, [r3, #20]
900147b0:	4718      	bx	r3
900147b2:	4770      	bx	lr

900147b4 <_ZN8touchgfx5ImageD1Ev>:
900147b4:	4770      	bx	lr

900147b6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900147b6:	b570      	push	{r4, r5, r6, lr}
900147b8:	880b      	ldrh	r3, [r1, #0]
900147ba:	460d      	mov	r5, r1
900147bc:	4604      	mov	r4, r0
900147be:	84c3      	strh	r3, [r0, #38]	@ 0x26
900147c0:	4608      	mov	r0, r1
900147c2:	f005 ff07 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
900147c6:	4606      	mov	r6, r0
900147c8:	4628      	mov	r0, r5
900147ca:	f005 ff37 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
900147ce:	6823      	ldr	r3, [r4, #0]
900147d0:	4605      	mov	r5, r0
900147d2:	4631      	mov	r1, r6
900147d4:	4620      	mov	r0, r4
900147d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900147d8:	4798      	blx	r3
900147da:	6823      	ldr	r3, [r4, #0]
900147dc:	4629      	mov	r1, r5
900147de:	4620      	mov	r0, r4
900147e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900147e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900147e6:	4718      	bx	r3

900147e8 <_ZN8touchgfx5ImageD0Ev>:
900147e8:	b510      	push	{r4, lr}
900147ea:	4604      	mov	r4, r0
900147ec:	212c      	movs	r1, #44	@ 0x2c
900147ee:	f014 ff9f 	bl	90029730 <_ZdlPvj>
900147f2:	4620      	mov	r0, r4
900147f4:	bd10      	pop	{r4, pc}

900147f6 <_ZNK8touchgfx5Image12getSolidRectEv>:
900147f6:	b510      	push	{r4, lr}
900147f8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900147fc:	4604      	mov	r4, r0
900147fe:	2bff      	cmp	r3, #255	@ 0xff
90014800:	d006      	beq.n	90014810 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90014802:	2300      	movs	r3, #0
90014804:	8003      	strh	r3, [r0, #0]
90014806:	8043      	strh	r3, [r0, #2]
90014808:	8083      	strh	r3, [r0, #4]
9001480a:	80c3      	strh	r3, [r0, #6]
9001480c:	4620      	mov	r0, r4
9001480e:	bd10      	pop	{r4, pc}
90014810:	3126      	adds	r1, #38	@ 0x26
90014812:	f005 ff47 	bl	9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014816:	e7f9      	b.n	9001480c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90014818 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90014818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001481c:	4604      	mov	r4, r0
9001481e:	b088      	sub	sp, #32
90014820:	2500      	movs	r5, #0
90014822:	460f      	mov	r7, r1
90014824:	f854 3b26 	ldr.w	r3, [r4], #38
90014828:	a904      	add	r1, sp, #16
9001482a:	4606      	mov	r6, r0
9001482c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001482e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90014832:	4798      	blx	r3
90014834:	4620      	mov	r0, r4
90014836:	f005 fecd 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001483a:	4680      	mov	r8, r0
9001483c:	4620      	mov	r0, r4
9001483e:	f005 fefd 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
90014842:	9506      	str	r5, [sp, #24]
90014844:	ad06      	add	r5, sp, #24
90014846:	f8ad 001e 	strh.w	r0, [sp, #30]
9001484a:	4639      	mov	r1, r7
9001484c:	f8ad 801c 	strh.w	r8, [sp, #28]
90014850:	4628      	mov	r0, r5
90014852:	f7fc fb67 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90014856:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001485a:	2b00      	cmp	r3, #0
9001485c:	dd19      	ble.n	90014892 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001485e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014862:	2b00      	cmp	r3, #0
90014864:	dd15      	ble.n	90014892 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90014866:	4b0c      	ldr	r3, [pc, #48]	@ (90014898 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90014868:	681b      	ldr	r3, [r3, #0]
9001486a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001486e:	b10a      	cbz	r2, 90014874 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90014870:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014872:	b900      	cbnz	r0, 90014876 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90014874:	6898      	ldr	r0, [r3, #8]
90014876:	2701      	movs	r7, #1
90014878:	6801      	ldr	r1, [r0, #0]
9001487a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001487e:	9702      	str	r7, [sp, #8]
90014880:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90014884:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90014888:	e9cd 5600 	strd	r5, r6, [sp]
9001488c:	688d      	ldr	r5, [r1, #8]
9001488e:	4621      	mov	r1, r4
90014890:	47a8      	blx	r5
90014892:	b008      	add	sp, #32
90014894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014898:	24021844 	.word	0x24021844

9001489c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
9001489c:	4770      	bx	lr

9001489e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
9001489e:	b510      	push	{r4, lr}
900148a0:	4604      	mov	r4, r0
900148a2:	2148      	movs	r1, #72	@ 0x48
900148a4:	f014 ff44 	bl	90029730 <_ZdlPvj>
900148a8:	4620      	mov	r0, r4
900148aa:	bd10      	pop	{r4, pc}

900148ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900148ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900148b0:	b08d      	sub	sp, #52	@ 0x34
900148b2:	4604      	mov	r4, r0
900148b4:	460f      	mov	r7, r1
900148b6:	f7ff fefb 	bl	900146b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900148ba:	4a55      	ldr	r2, [pc, #340]	@ (90014a10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900148bc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900148be:	8812      	ldrh	r2, [r2, #0]
900148c0:	429a      	cmp	r2, r3
900148c2:	f240 8082 	bls.w	900149ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900148c6:	4d53      	ldr	r5, [pc, #332]	@ (90014a14 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
900148c8:	682a      	ldr	r2, [r5, #0]
900148ca:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900148ce:	4b52      	ldr	r3, [pc, #328]	@ (90014a18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900148d0:	681b      	ldr	r3, [r3, #0]
900148d2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900148d6:	2200      	movs	r2, #0
900148d8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
900148dc:	e9cd 2203 	strd	r2, r2, [sp, #12]
900148e0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
900148e4:	2a03      	cmp	r2, #3
900148e6:	d811      	bhi.n	9001490c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900148e8:	e8df f002 	tbb	[pc, r2]
900148ec:	89727902 	.word	0x89727902
900148f0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900148f4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900148f8:	1ad2      	subs	r2, r2, r3
900148fa:	2002      	movs	r0, #2
900148fc:	f8ad 1010 	strh.w	r1, [sp, #16]
90014900:	f8ad 3012 	strh.w	r3, [sp, #18]
90014904:	fb92 f2f0 	sdiv	r2, r2, r0
90014908:	f8ad 200e 	strh.w	r2, [sp, #14]
9001490c:	f10d 080c 	add.w	r8, sp, #12
90014910:	f10d 0914 	add.w	r9, sp, #20
90014914:	e898 0003 	ldmia.w	r8, {r0, r1}
90014918:	e889 0003 	stmia.w	r9, {r0, r1}
9001491c:	4639      	mov	r1, r7
9001491e:	4648      	mov	r0, r9
90014920:	f7fc fb00 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90014924:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014928:	2b00      	cmp	r3, #0
9001492a:	dd4e      	ble.n	900149ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001492c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014930:	2b00      	cmp	r3, #0
90014932:	dd4a      	ble.n	900149ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014934:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014938:	4641      	mov	r1, r8
9001493a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001493e:	4620      	mov	r0, r4
90014940:	1a9b      	subs	r3, r3, r2
90014942:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90014946:	f8ad 3014 	strh.w	r3, [sp, #20]
9001494a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
9001494e:	1a9b      	subs	r3, r3, r2
90014950:	f8ad 3016 	strh.w	r3, [sp, #22]
90014954:	6823      	ldr	r3, [r4, #0]
90014956:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014958:	4798      	blx	r3
9001495a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9001495e:	2b00      	cmp	r3, #0
90014960:	d053      	beq.n	90014a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90014962:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90014964:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90014966:	682b      	ldr	r3, [r5, #0]
90014968:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
9001496c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014970:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90014974:	785b      	ldrb	r3, [r3, #1]
90014976:	9209      	str	r2, [sp, #36]	@ 0x24
90014978:	f3c3 0501 	ubfx	r5, r3, #0, #2
9001497c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014980:	9607      	str	r6, [sp, #28]
90014982:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
90014986:	2300      	movs	r3, #0
90014988:	f88d 5020 	strb.w	r5, [sp, #32]
9001498c:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90014990:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90014994:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014998:	4b20      	ldr	r3, [pc, #128]	@ (90014a1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
9001499a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001499e:	681b      	ldr	r3, [r3, #0]
900149a0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900149a4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900149a8:	b10a      	cbz	r2, 900149ae <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900149aa:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
900149ac:	b904      	cbnz	r4, 900149b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900149ae:	689c      	ldr	r4, [r3, #8]
900149b0:	4b1b      	ldr	r3, [pc, #108]	@ (90014a20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
900149b2:	6818      	ldr	r0, [r3, #0]
900149b4:	f7f0 fc66 	bl	90005284 <_ZNK8touchgfx5Texts7getTextEt>
900149b8:	ab07      	add	r3, sp, #28
900149ba:	9001      	str	r0, [sp, #4]
900149bc:	4620      	mov	r0, r4
900149be:	9300      	str	r3, [sp, #0]
900149c0:	464b      	mov	r3, r9
900149c2:	e898 0006 	ldmia.w	r8, {r1, r2}
900149c6:	f7f0 fc0d 	bl	900051e4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900149ca:	b00d      	add	sp, #52	@ 0x34
900149cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900149d0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900149d4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900149d8:	1ad2      	subs	r2, r2, r3
900149da:	3201      	adds	r2, #1
900149dc:	e78d      	b.n	900148fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
900149de:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900149e2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
900149e6:	1ad2      	subs	r2, r2, r3
900149e8:	3201      	adds	r2, #1
900149ea:	2002      	movs	r0, #2
900149ec:	f8ad 3010 	strh.w	r3, [sp, #16]
900149f0:	f8ad 1012 	strh.w	r1, [sp, #18]
900149f4:	fb92 f2f0 	sdiv	r2, r2, r0
900149f8:	f8ad 200c 	strh.w	r2, [sp, #12]
900149fc:	e786      	b.n	9001490c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900149fe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014a02:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014a06:	1ad2      	subs	r2, r2, r3
90014a08:	e7ef      	b.n	900149ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90014a0a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90014a0c:	e7aa      	b.n	90014964 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90014a0e:	bf00      	nop
90014a10:	240218a0 	.word	0x240218a0
90014a14:	2402189c 	.word	0x2402189c
90014a18:	240218a4 	.word	0x240218a4
90014a1c:	24021844 	.word	0x24021844
90014a20:	240218a8 	.word	0x240218a8

90014a24 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90014a24:	2101      	movs	r1, #1
90014a26:	2200      	movs	r2, #0
90014a28:	b510      	push	{r4, lr}
90014a2a:	4c13      	ldr	r4, [pc, #76]	@ (90014a78 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90014a2c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90014a30:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90014a34:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90014a38:	6004      	str	r4, [r0, #0]
90014a3a:	4c10      	ldr	r4, [pc, #64]	@ (90014a7c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90014a3c:	8082      	strh	r2, [r0, #4]
90014a3e:	80c2      	strh	r2, [r0, #6]
90014a40:	8102      	strh	r2, [r0, #8]
90014a42:	8142      	strh	r2, [r0, #10]
90014a44:	8182      	strh	r2, [r0, #12]
90014a46:	81c2      	strh	r2, [r0, #14]
90014a48:	8202      	strh	r2, [r0, #16]
90014a4a:	8242      	strh	r2, [r0, #18]
90014a4c:	61c2      	str	r2, [r0, #28]
90014a4e:	8402      	strh	r2, [r0, #32]
90014a50:	8442      	strh	r2, [r0, #34]	@ 0x22
90014a52:	6282      	str	r2, [r0, #40]	@ 0x28
90014a54:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90014a58:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90014a5a:	8601      	strh	r1, [r0, #48]	@ 0x30
90014a5c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90014a60:	6344      	str	r4, [r0, #52]	@ 0x34
90014a62:	8701      	strh	r1, [r0, #56]	@ 0x38
90014a64:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90014a68:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90014a6c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014a70:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90014a74:	bd10      	pop	{r4, pc}
90014a76:	bf00      	nop
90014a78:	9002d7cc 	.word	0x9002d7cc
90014a7c:	9002cf14 	.word	0x9002cf14

90014a80 <_ZN8touchgfx7OutlineD1Ev>:
90014a80:	4770      	bx	lr

90014a82 <_ZN8touchgfx7OutlineD0Ev>:
90014a82:	b510      	push	{r4, lr}
90014a84:	4604      	mov	r4, r0
90014a86:	2130      	movs	r1, #48	@ 0x30
90014a88:	f014 fe52 	bl	90029730 <_ZdlPvj>
90014a8c:	4620      	mov	r0, r4
90014a8e:	bd10      	pop	{r4, pc}

90014a90 <_ZN8touchgfx7Outline5resetEv>:
90014a90:	b510      	push	{r4, lr}
90014a92:	4604      	mov	r4, r0
90014a94:	f000 fe72 	bl	9001577c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90014a98:	60e0      	str	r0, [r4, #12]
90014a9a:	f000 fe75 	bl	90015788 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90014a9e:	68e3      	ldr	r3, [r4, #12]
90014aa0:	08c0      	lsrs	r0, r0, #3
90014aa2:	2200      	movs	r2, #0
90014aa4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90014aa8:	6123      	str	r3, [r4, #16]
90014aaa:	3801      	subs	r0, #1
90014aac:	60a2      	str	r2, [r4, #8]
90014aae:	6060      	str	r0, [r4, #4]
90014ab0:	8019      	strh	r1, [r3, #0]
90014ab2:	8059      	strh	r1, [r3, #2]
90014ab4:	809a      	strh	r2, [r3, #4]
90014ab6:	80da      	strh	r2, [r3, #6]
90014ab8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014aba:	f023 0301 	bic.w	r3, r3, #1
90014abe:	f043 0302 	orr.w	r3, r3, #2
90014ac2:	6263      	str	r3, [r4, #36]	@ 0x24
90014ac4:	bd10      	pop	{r4, pc}
	...

90014ac8 <_ZN8touchgfx7OutlineC1Ev>:
90014ac8:	4b0a      	ldr	r3, [pc, #40]	@ (90014af4 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90014aca:	b510      	push	{r4, lr}
90014acc:	6003      	str	r3, [r0, #0]
90014ace:	2300      	movs	r3, #0
90014ad0:	4604      	mov	r4, r0
90014ad2:	6243      	str	r3, [r0, #36]	@ 0x24
90014ad4:	e9c0 3301 	strd	r3, r3, [r0, #4]
90014ad8:	e9c0 3303 	strd	r3, r3, [r0, #12]
90014adc:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014ae0:	e9c0 3307 	strd	r3, r3, [r0, #28]
90014ae4:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90014ae8:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90014aec:	f7ff ffd0 	bl	90014a90 <_ZN8touchgfx7Outline5resetEv>
90014af0:	4620      	mov	r0, r4
90014af2:	bd10      	pop	{r4, pc}
90014af4:	9002d840 	.word	0x9002d840

90014af8 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014afc:	b093      	sub	sp, #76	@ 0x4c
90014afe:	1156      	asrs	r6, r2, #5
90014b00:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90014b02:	9305      	str	r3, [sp, #20]
90014b04:	1153      	asrs	r3, r2, #5
90014b06:	f004 051f 	and.w	r5, r4, #31
90014b0a:	9303      	str	r3, [sp, #12]
90014b0c:	1163      	asrs	r3, r4, #5
90014b0e:	9504      	str	r5, [sp, #16]
90014b10:	1165      	asrs	r5, r4, #5
90014b12:	9306      	str	r3, [sp, #24]
90014b14:	f002 031f 	and.w	r3, r2, #31
90014b18:	42ae      	cmp	r6, r5
90014b1a:	f040 80f4 	bne.w	90014d06 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90014b1e:	9c04      	ldr	r4, [sp, #16]
90014b20:	9a05      	ldr	r2, [sp, #20]
90014b22:	42a3      	cmp	r3, r4
90014b24:	ea4f 1e62 	mov.w	lr, r2, asr #5
90014b28:	6902      	ldr	r2, [r0, #16]
90014b2a:	d125      	bne.n	90014b78 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90014b2c:	f9b2 3000 	ldrsh.w	r3, [r2]
90014b30:	459e      	cmp	lr, r3
90014b32:	d103      	bne.n	90014b3c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014b34:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014b38:	429e      	cmp	r6, r3
90014b3a:	d035      	beq.n	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b3c:	88d1      	ldrh	r1, [r2, #6]
90014b3e:	8893      	ldrh	r3, [r2, #4]
90014b40:	430b      	orrs	r3, r1
90014b42:	d010      	beq.n	90014b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014b44:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014b48:	2b00      	cmp	r3, #0
90014b4a:	db0c      	blt.n	90014b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014b4c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014b4e:	428b      	cmp	r3, r1
90014b50:	da09      	bge.n	90014b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014b52:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014b56:	428b      	cmp	r3, r1
90014b58:	f103 0301 	add.w	r3, r3, #1
90014b5c:	bf38      	it	cc
90014b5e:	3208      	addcc	r2, #8
90014b60:	6083      	str	r3, [r0, #8]
90014b62:	bf38      	it	cc
90014b64:	6102      	strcc	r2, [r0, #16]
90014b66:	6903      	ldr	r3, [r0, #16]
90014b68:	9a03      	ldr	r2, [sp, #12]
90014b6a:	f8a3 e000 	strh.w	lr, [r3]
90014b6e:	805a      	strh	r2, [r3, #2]
90014b70:	2200      	movs	r2, #0
90014b72:	809a      	strh	r2, [r3, #4]
90014b74:	80da      	strh	r2, [r3, #6]
90014b76:	e017      	b.n	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b78:	9c05      	ldr	r4, [sp, #20]
90014b7a:	114e      	asrs	r6, r1, #5
90014b7c:	f001 0c1f 	and.w	ip, r1, #31
90014b80:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90014b84:	f004 041f 	and.w	r4, r4, #31
90014b88:	4576      	cmp	r6, lr
90014b8a:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90014b8e:	9402      	str	r4, [sp, #8]
90014b90:	9c04      	ldr	r4, [sp, #16]
90014b92:	eba4 0403 	sub.w	r4, r4, r3
90014b96:	d10a      	bne.n	90014bae <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90014b98:	9b02      	ldr	r3, [sp, #8]
90014b9a:	44a0      	add	r8, r4
90014b9c:	449c      	add	ip, r3
90014b9e:	f8a2 8004 	strh.w	r8, [r2, #4]
90014ba2:	fb04 a40c 	mla	r4, r4, ip, sl
90014ba6:	80d4      	strh	r4, [r2, #6]
90014ba8:	b013      	add	sp, #76	@ 0x4c
90014baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014bae:	9d05      	ldr	r5, [sp, #20]
90014bb0:	1a69      	subs	r1, r5, r1
90014bb2:	bf51      	iteee	pl
90014bb4:	f1cc 0520 	rsbpl	r5, ip, #32
90014bb8:	fb04 f40c 	mulmi.w	r4, r4, ip
90014bbc:	4249      	negmi	r1, r1
90014bbe:	2500      	movmi	r5, #0
90014bc0:	bf5d      	ittte	pl
90014bc2:	436c      	mulpl	r4, r5
90014bc4:	2520      	movpl	r5, #32
90014bc6:	f04f 0901 	movpl.w	r9, #1
90014bca:	f04f 39ff 	movmi.w	r9, #4294967295
90014bce:	9501      	str	r5, [sp, #4]
90014bd0:	9f01      	ldr	r7, [sp, #4]
90014bd2:	444e      	add	r6, r9
90014bd4:	fb94 f5f1 	sdiv	r5, r4, r1
90014bd8:	fb01 4415 	mls	r4, r1, r5, r4
90014bdc:	44bc      	add	ip, r7
90014bde:	2c00      	cmp	r4, #0
90014be0:	bfbc      	itt	lt
90014be2:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014be6:	1864      	addlt	r4, r4, r1
90014be8:	44a8      	add	r8, r5
90014bea:	fb05 ac0c 	mla	ip, r5, ip, sl
90014bee:	f8a2 8004 	strh.w	r8, [r2, #4]
90014bf2:	f8a2 c006 	strh.w	ip, [r2, #6]
90014bf6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014bfa:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014bfe:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014c02:	ea58 0202 	orrs.w	r2, r8, r2
90014c06:	d011      	beq.n	90014c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014c08:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014c0c:	f1b8 0f00 	cmp.w	r8, #0
90014c10:	db0c      	blt.n	90014c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014c12:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014c14:	4590      	cmp	r8, r2
90014c16:	da09      	bge.n	90014c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014c18:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90014c1c:	4590      	cmp	r8, r2
90014c1e:	bf3c      	itt	cc
90014c20:	f10c 0208 	addcc.w	r2, ip, #8
90014c24:	6102      	strcc	r2, [r0, #16]
90014c26:	f108 0201 	add.w	r2, r8, #1
90014c2a:	6082      	str	r2, [r0, #8]
90014c2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014c30:	2700      	movs	r7, #0
90014c32:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014c36:	45b6      	cmp	lr, r6
90014c38:	f8ac 6000 	strh.w	r6, [ip]
90014c3c:	442b      	add	r3, r5
90014c3e:	f8ac 2002 	strh.w	r2, [ip, #2]
90014c42:	f8ac 7004 	strh.w	r7, [ip, #4]
90014c46:	f8ac 7006 	strh.w	r7, [ip, #6]
90014c4a:	d04b      	beq.n	90014ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90014c4c:	9f04      	ldr	r7, [sp, #16]
90014c4e:	1a64      	subs	r4, r4, r1
90014c50:	f04f 0a00 	mov.w	sl, #0
90014c54:	1aff      	subs	r7, r7, r3
90014c56:	443d      	add	r5, r7
90014c58:	016d      	lsls	r5, r5, #5
90014c5a:	fb95 f8f1 	sdiv	r8, r5, r1
90014c5e:	fb01 5518 	mls	r5, r1, r8, r5
90014c62:	2d00      	cmp	r5, #0
90014c64:	bfbc      	itt	lt
90014c66:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014c6a:	186d      	addlt	r5, r5, r1
90014c6c:	f108 0701 	add.w	r7, r8, #1
90014c70:	9703      	str	r7, [sp, #12]
90014c72:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014c76:	1964      	adds	r4, r4, r5
90014c78:	444e      	add	r6, r9
90014c7a:	bf54      	ite	pl
90014c7c:	9f03      	ldrpl	r7, [sp, #12]
90014c7e:	4647      	movmi	r7, r8
90014c80:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014c84:	bf58      	it	pl
90014c86:	1a64      	subpl	r4, r4, r1
90014c88:	443b      	add	r3, r7
90014c8a:	44bb      	add	fp, r7
90014c8c:	f8ac b004 	strh.w	fp, [ip, #4]
90014c90:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014c94:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014c98:	f8ac b006 	strh.w	fp, [ip, #6]
90014c9c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014ca0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014ca4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014ca8:	ea5b 0707 	orrs.w	r7, fp, r7
90014cac:	d011      	beq.n	90014cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014cae:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014cb2:	f1bb 0f00 	cmp.w	fp, #0
90014cb6:	db0c      	blt.n	90014cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014cb8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014cba:	45bb      	cmp	fp, r7
90014cbc:	da09      	bge.n	90014cd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014cbe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014cc2:	45bb      	cmp	fp, r7
90014cc4:	bf3c      	itt	cc
90014cc6:	f10c 0708 	addcc.w	r7, ip, #8
90014cca:	6107      	strcc	r7, [r0, #16]
90014ccc:	f10b 0701 	add.w	r7, fp, #1
90014cd0:	6087      	str	r7, [r0, #8]
90014cd2:	6907      	ldr	r7, [r0, #16]
90014cd4:	45b6      	cmp	lr, r6
90014cd6:	803e      	strh	r6, [r7, #0]
90014cd8:	807a      	strh	r2, [r7, #2]
90014cda:	f8a7 a004 	strh.w	sl, [r7, #4]
90014cde:	f8a7 a006 	strh.w	sl, [r7, #6]
90014ce2:	d1c6      	bne.n	90014c72 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014ce4:	9a04      	ldr	r2, [sp, #16]
90014ce6:	1ad3      	subs	r3, r2, r3
90014ce8:	6902      	ldr	r2, [r0, #16]
90014cea:	8891      	ldrh	r1, [r2, #4]
90014cec:	88d6      	ldrh	r6, [r2, #6]
90014cee:	4419      	add	r1, r3
90014cf0:	8091      	strh	r1, [r2, #4]
90014cf2:	9902      	ldr	r1, [sp, #8]
90014cf4:	f101 0c20 	add.w	ip, r1, #32
90014cf8:	9901      	ldr	r1, [sp, #4]
90014cfa:	ebac 0c01 	sub.w	ip, ip, r1
90014cfe:	fb03 630c 	mla	r3, r3, ip, r6
90014d02:	80d3      	strh	r3, [r2, #6]
90014d04:	e750      	b.n	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014d06:	9d05      	ldr	r5, [sp, #20]
90014d08:	1aa2      	subs	r2, r4, r2
90014d0a:	eba5 0501 	sub.w	r5, r5, r1
90014d0e:	9202      	str	r2, [sp, #8]
90014d10:	9508      	str	r5, [sp, #32]
90014d12:	f140 8128 	bpl.w	90014f66 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90014d16:	9a03      	ldr	r2, [sp, #12]
90014d18:	2a00      	cmp	r2, #0
90014d1a:	f6ff af45 	blt.w	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014d1e:	9a02      	ldr	r2, [sp, #8]
90014d20:	f04f 34ff 	mov.w	r4, #4294967295
90014d24:	4252      	negs	r2, r2
90014d26:	940b      	str	r4, [sp, #44]	@ 0x2c
90014d28:	2400      	movs	r4, #0
90014d2a:	9202      	str	r2, [sp, #8]
90014d2c:	9a06      	ldr	r2, [sp, #24]
90014d2e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014d32:	9206      	str	r2, [sp, #24]
90014d34:	462a      	mov	r2, r5
90014d36:	435a      	muls	r2, r3
90014d38:	9401      	str	r4, [sp, #4]
90014d3a:	9c02      	ldr	r4, [sp, #8]
90014d3c:	9d02      	ldr	r5, [sp, #8]
90014d3e:	fb92 f4f4 	sdiv	r4, r2, r4
90014d42:	fb05 2214 	mls	r2, r5, r4, r2
90014d46:	2a00      	cmp	r2, #0
90014d48:	9207      	str	r2, [sp, #28]
90014d4a:	bfbc      	itt	lt
90014d4c:	1952      	addlt	r2, r2, r5
90014d4e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014d52:	6905      	ldr	r5, [r0, #16]
90014d54:	bfb8      	it	lt
90014d56:	9207      	strlt	r2, [sp, #28]
90014d58:	eb04 0901 	add.w	r9, r4, r1
90014d5c:	9a01      	ldr	r2, [sp, #4]
90014d5e:	ea4f 1669 	mov.w	r6, r9, asr #5
90014d62:	429a      	cmp	r2, r3
90014d64:	f040 8111 	bne.w	90014f8a <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014d68:	f9b5 3000 	ldrsh.w	r3, [r5]
90014d6c:	429e      	cmp	r6, r3
90014d6e:	d104      	bne.n	90014d7a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014d70:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014d74:	9a03      	ldr	r2, [sp, #12]
90014d76:	429a      	cmp	r2, r3
90014d78:	d01b      	beq.n	90014db2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014d7a:	88ea      	ldrh	r2, [r5, #6]
90014d7c:	88ab      	ldrh	r3, [r5, #4]
90014d7e:	4313      	orrs	r3, r2
90014d80:	d010      	beq.n	90014da4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014d82:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014d86:	2a00      	cmp	r2, #0
90014d88:	db0c      	blt.n	90014da4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014d8a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014d8c:	429a      	cmp	r2, r3
90014d8e:	da09      	bge.n	90014da4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014d90:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90014d94:	429a      	cmp	r2, r3
90014d96:	f102 0201 	add.w	r2, r2, #1
90014d9a:	bf38      	it	cc
90014d9c:	3508      	addcc	r5, #8
90014d9e:	6082      	str	r2, [r0, #8]
90014da0:	bf38      	it	cc
90014da2:	6105      	strcc	r5, [r0, #16]
90014da4:	6903      	ldr	r3, [r0, #16]
90014da6:	9a03      	ldr	r2, [sp, #12]
90014da8:	801e      	strh	r6, [r3, #0]
90014daa:	805a      	strh	r2, [r3, #2]
90014dac:	2200      	movs	r2, #0
90014dae:	809a      	strh	r2, [r3, #4]
90014db0:	80da      	strh	r2, [r3, #6]
90014db2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014db4:	9a03      	ldr	r2, [sp, #12]
90014db6:	6901      	ldr	r1, [r0, #16]
90014db8:	441a      	add	r2, r3
90014dba:	f9b1 3000 	ldrsh.w	r3, [r1]
90014dbe:	42b3      	cmp	r3, r6
90014dc0:	d103      	bne.n	90014dca <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90014dc2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014dc6:	429a      	cmp	r2, r3
90014dc8:	d01a      	beq.n	90014e00 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90014dca:	88cc      	ldrh	r4, [r1, #6]
90014dcc:	888b      	ldrh	r3, [r1, #4]
90014dce:	4323      	orrs	r3, r4
90014dd0:	d010      	beq.n	90014df4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014dd2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014dd6:	2c00      	cmp	r4, #0
90014dd8:	db0c      	blt.n	90014df4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014dda:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014ddc:	429c      	cmp	r4, r3
90014dde:	da09      	bge.n	90014df4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014de0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014de4:	429c      	cmp	r4, r3
90014de6:	f104 0401 	add.w	r4, r4, #1
90014dea:	bf38      	it	cc
90014dec:	3108      	addcc	r1, #8
90014dee:	6084      	str	r4, [r0, #8]
90014df0:	bf38      	it	cc
90014df2:	6101      	strcc	r1, [r0, #16]
90014df4:	6903      	ldr	r3, [r0, #16]
90014df6:	2100      	movs	r1, #0
90014df8:	801e      	strh	r6, [r3, #0]
90014dfa:	805a      	strh	r2, [r3, #2]
90014dfc:	8099      	strh	r1, [r3, #4]
90014dfe:	80d9      	strh	r1, [r3, #6]
90014e00:	9b06      	ldr	r3, [sp, #24]
90014e02:	4293      	cmp	r3, r2
90014e04:	f000 8082 	beq.w	90014f0c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014e08:	9b08      	ldr	r3, [sp, #32]
90014e0a:	9902      	ldr	r1, [sp, #8]
90014e0c:	015b      	lsls	r3, r3, #5
90014e0e:	9c02      	ldr	r4, [sp, #8]
90014e10:	fb93 f1f1 	sdiv	r1, r3, r1
90014e14:	fb04 3311 	mls	r3, r4, r1, r3
90014e18:	9103      	str	r1, [sp, #12]
90014e1a:	2b00      	cmp	r3, #0
90014e1c:	9308      	str	r3, [sp, #32]
90014e1e:	da04      	bge.n	90014e2a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014e20:	1e4b      	subs	r3, r1, #1
90014e22:	9303      	str	r3, [sp, #12]
90014e24:	9b08      	ldr	r3, [sp, #32]
90014e26:	4423      	add	r3, r4
90014e28:	9308      	str	r3, [sp, #32]
90014e2a:	9b07      	ldr	r3, [sp, #28]
90014e2c:	464f      	mov	r7, r9
90014e2e:	9902      	ldr	r1, [sp, #8]
90014e30:	2600      	movs	r6, #0
90014e32:	1a5b      	subs	r3, r3, r1
90014e34:	9307      	str	r3, [sp, #28]
90014e36:	9b01      	ldr	r3, [sp, #4]
90014e38:	f1c3 0320 	rsb	r3, r3, #32
90014e3c:	930e      	str	r3, [sp, #56]	@ 0x38
90014e3e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90014e40:	9b01      	ldr	r3, [sp, #4]
90014e42:	1a5b      	subs	r3, r3, r1
90014e44:	930a      	str	r3, [sp, #40]	@ 0x28
90014e46:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90014e4a:	185b      	adds	r3, r3, r1
90014e4c:	bf58      	it	pl
90014e4e:	9902      	ldrpl	r1, [sp, #8]
90014e50:	9307      	str	r3, [sp, #28]
90014e52:	bf57      	itett	pl
90014e54:	1a5b      	subpl	r3, r3, r1
90014e56:	9903      	ldrmi	r1, [sp, #12]
90014e58:	9307      	strpl	r3, [sp, #28]
90014e5a:	9b03      	ldrpl	r3, [sp, #12]
90014e5c:	bf58      	it	pl
90014e5e:	1c59      	addpl	r1, r3, #1
90014e60:	2a00      	cmp	r2, #0
90014e62:	4489      	add	r9, r1
90014e64:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014e68:	db2e      	blt.n	90014ec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014e6a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014e6c:	4293      	cmp	r3, r2
90014e6e:	dd2b      	ble.n	90014ec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014e70:	9c01      	ldr	r4, [sp, #4]
90014e72:	6905      	ldr	r5, [r0, #16]
90014e74:	46a0      	mov	r8, r4
90014e76:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90014e78:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90014e7c:	45a0      	cmp	r8, r4
90014e7e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014e82:	f040 814c 	bne.w	9001511e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014e86:	f9b5 1000 	ldrsh.w	r1, [r5]
90014e8a:	4551      	cmp	r1, sl
90014e8c:	d103      	bne.n	90014e96 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90014e8e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014e92:	4291      	cmp	r1, r2
90014e94:	d018      	beq.n	90014ec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014e96:	ea5c 010e 	orrs.w	r1, ip, lr
90014e9a:	d00f      	beq.n	90014ebc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014e9c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014ea0:	2900      	cmp	r1, #0
90014ea2:	db0b      	blt.n	90014ebc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014ea4:	428b      	cmp	r3, r1
90014ea6:	dd09      	ble.n	90014ebc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014ea8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90014eac:	4299      	cmp	r1, r3
90014eae:	f101 0101 	add.w	r1, r1, #1
90014eb2:	bf38      	it	cc
90014eb4:	3508      	addcc	r5, #8
90014eb6:	6081      	str	r1, [r0, #8]
90014eb8:	bf38      	it	cc
90014eba:	6105      	strcc	r5, [r0, #16]
90014ebc:	6903      	ldr	r3, [r0, #16]
90014ebe:	f8a3 a000 	strh.w	sl, [r3]
90014ec2:	805a      	strh	r2, [r3, #2]
90014ec4:	809e      	strh	r6, [r3, #4]
90014ec6:	80de      	strh	r6, [r3, #6]
90014ec8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014eca:	6901      	ldr	r1, [r0, #16]
90014ecc:	441a      	add	r2, r3
90014ece:	88cc      	ldrh	r4, [r1, #6]
90014ed0:	888b      	ldrh	r3, [r1, #4]
90014ed2:	4323      	orrs	r3, r4
90014ed4:	d010      	beq.n	90014ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014ed6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014eda:	2c00      	cmp	r4, #0
90014edc:	db0c      	blt.n	90014ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014ede:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014ee0:	429c      	cmp	r4, r3
90014ee2:	da09      	bge.n	90014ef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014ee4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014ee8:	429c      	cmp	r4, r3
90014eea:	f104 0401 	add.w	r4, r4, #1
90014eee:	bf38      	it	cc
90014ef0:	3108      	addcc	r1, #8
90014ef2:	6084      	str	r4, [r0, #8]
90014ef4:	bf38      	it	cc
90014ef6:	6101      	strcc	r1, [r0, #16]
90014ef8:	6903      	ldr	r3, [r0, #16]
90014efa:	464f      	mov	r7, r9
90014efc:	f8a3 a000 	strh.w	sl, [r3]
90014f00:	805a      	strh	r2, [r3, #2]
90014f02:	809e      	strh	r6, [r3, #4]
90014f04:	80de      	strh	r6, [r3, #6]
90014f06:	9b06      	ldr	r3, [sp, #24]
90014f08:	4293      	cmp	r3, r2
90014f0a:	d19c      	bne.n	90014e46 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90014f0c:	9b01      	ldr	r3, [sp, #4]
90014f0e:	6907      	ldr	r7, [r0, #16]
90014f10:	f1c3 0620 	rsb	r6, r3, #32
90014f14:	9b05      	ldr	r3, [sp, #20]
90014f16:	ea4f 1e63 	mov.w	lr, r3, asr #5
90014f1a:	9b04      	ldr	r3, [sp, #16]
90014f1c:	429e      	cmp	r6, r3
90014f1e:	f040 81c7 	bne.w	900152b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014f22:	f9b7 3000 	ldrsh.w	r3, [r7]
90014f26:	459e      	cmp	lr, r3
90014f28:	d104      	bne.n	90014f34 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90014f2a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014f2e:	429a      	cmp	r2, r3
90014f30:	f43f ae3a 	beq.w	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014f34:	88f9      	ldrh	r1, [r7, #6]
90014f36:	88bb      	ldrh	r3, [r7, #4]
90014f38:	430b      	orrs	r3, r1
90014f3a:	d010      	beq.n	90014f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014f3c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014f40:	2b00      	cmp	r3, #0
90014f42:	db0c      	blt.n	90014f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014f44:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014f46:	428b      	cmp	r3, r1
90014f48:	da09      	bge.n	90014f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014f4a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014f4e:	428b      	cmp	r3, r1
90014f50:	f103 0301 	add.w	r3, r3, #1
90014f54:	bf38      	it	cc
90014f56:	3708      	addcc	r7, #8
90014f58:	6083      	str	r3, [r0, #8]
90014f5a:	bf38      	it	cc
90014f5c:	6107      	strcc	r7, [r0, #16]
90014f5e:	6903      	ldr	r3, [r0, #16]
90014f60:	f8a3 e000 	strh.w	lr, [r3]
90014f64:	e603      	b.n	90014b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014f66:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014f68:	9c03      	ldr	r4, [sp, #12]
90014f6a:	42a2      	cmp	r2, r4
90014f6c:	f6ff ae1c 	blt.w	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014f70:	9c06      	ldr	r4, [sp, #24]
90014f72:	42a2      	cmp	r2, r4
90014f74:	9c08      	ldr	r4, [sp, #32]
90014f76:	bfbc      	itt	lt
90014f78:	3201      	addlt	r2, #1
90014f7a:	9206      	strlt	r2, [sp, #24]
90014f7c:	f1c3 0220 	rsb	r2, r3, #32
90014f80:	4362      	muls	r2, r4
90014f82:	2401      	movs	r4, #1
90014f84:	940b      	str	r4, [sp, #44]	@ 0x2c
90014f86:	2420      	movs	r4, #32
90014f88:	e6d6      	b.n	90014d38 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90014f8a:	ea4f 1861 	mov.w	r8, r1, asr #5
90014f8e:	f009 021f 	and.w	r2, r9, #31
90014f92:	f001 011f 	and.w	r1, r1, #31
90014f96:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90014f9a:	920c      	str	r2, [sp, #48]	@ 0x30
90014f9c:	45b0      	cmp	r8, r6
90014f9e:	9a01      	ldr	r2, [sp, #4]
90014fa0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90014fa4:	eba2 0203 	sub.w	r2, r2, r3
90014fa8:	d108      	bne.n	90014fbc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90014faa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014fac:	4496      	add	lr, r2
90014fae:	4419      	add	r1, r3
90014fb0:	f8a5 e004 	strh.w	lr, [r5, #4]
90014fb4:	fb02 a101 	mla	r1, r2, r1, sl
90014fb8:	80e9      	strh	r1, [r5, #6]
90014fba:	e6fa      	b.n	90014db2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014fbc:	2c00      	cmp	r4, #0
90014fbe:	f2c0 80a7 	blt.w	90015110 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90014fc2:	2701      	movs	r7, #1
90014fc4:	f1c1 0c20 	rsb	ip, r1, #32
90014fc8:	970a      	str	r7, [sp, #40]	@ 0x28
90014fca:	2720      	movs	r7, #32
90014fcc:	fb02 f20c 	mul.w	r2, r2, ip
90014fd0:	9709      	str	r7, [sp, #36]	@ 0x24
90014fd2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90014fd4:	fb92 fcf4 	sdiv	ip, r2, r4
90014fd8:	fb04 221c 	mls	r2, r4, ip, r2
90014fdc:	4439      	add	r1, r7
90014fde:	2a00      	cmp	r2, #0
90014fe0:	bfbc      	itt	lt
90014fe2:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014fe6:	1912      	addlt	r2, r2, r4
90014fe8:	fb0c a101 	mla	r1, ip, r1, sl
90014fec:	44e6      	add	lr, ip
90014fee:	80e9      	strh	r1, [r5, #6]
90014ff0:	990a      	ldr	r1, [sp, #40]	@ 0x28
90014ff2:	f8a5 e004 	strh.w	lr, [r5, #4]
90014ff6:	eb08 0501 	add.w	r5, r8, r1
90014ffa:	6901      	ldr	r1, [r0, #16]
90014ffc:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90015000:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90015004:	ea58 070e 	orrs.w	r7, r8, lr
90015008:	d010      	beq.n	9001502c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001500a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001500e:	f1be 0f00 	cmp.w	lr, #0
90015012:	db0b      	blt.n	9001502c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015014:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015016:	45be      	cmp	lr, r7
90015018:	da08      	bge.n	9001502c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001501a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001501e:	45be      	cmp	lr, r7
90015020:	bf3c      	itt	cc
90015022:	3108      	addcc	r1, #8
90015024:	6101      	strcc	r1, [r0, #16]
90015026:	f10e 0101 	add.w	r1, lr, #1
9001502a:	6081      	str	r1, [r0, #8]
9001502c:	6901      	ldr	r1, [r0, #16]
9001502e:	f04f 0e00 	mov.w	lr, #0
90015032:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90015036:	42ae      	cmp	r6, r5
90015038:	800d      	strh	r5, [r1, #0]
9001503a:	4463      	add	r3, ip
9001503c:	f8a1 8002 	strh.w	r8, [r1, #2]
90015040:	f8a1 e004 	strh.w	lr, [r1, #4]
90015044:	f8a1 e006 	strh.w	lr, [r1, #6]
90015048:	d053      	beq.n	900150f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001504a:	9901      	ldr	r1, [sp, #4]
9001504c:	1b12      	subs	r2, r2, r4
9001504e:	1ac9      	subs	r1, r1, r3
90015050:	4461      	add	r1, ip
90015052:	0149      	lsls	r1, r1, #5
90015054:	fb91 fef4 	sdiv	lr, r1, r4
90015058:	fb04 111e 	mls	r1, r4, lr, r1
9001505c:	2900      	cmp	r1, #0
9001505e:	bfbc      	itt	lt
90015060:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90015064:	1909      	addlt	r1, r1, r4
90015066:	f10e 0701 	add.w	r7, lr, #1
9001506a:	970d      	str	r7, [sp, #52]	@ 0x34
9001506c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90015070:	1852      	adds	r2, r2, r1
90015072:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90015074:	bf54      	ite	pl
90015076:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
9001507a:	46f4      	movmi	ip, lr
9001507c:	f8ba b004 	ldrh.w	fp, [sl, #4]
90015080:	bf58      	it	pl
90015082:	1b12      	subpl	r2, r2, r4
90015084:	4463      	add	r3, ip
90015086:	443d      	add	r5, r7
90015088:	44e3      	add	fp, ip
9001508a:	f8aa b004 	strh.w	fp, [sl, #4]
9001508e:	f8ba b006 	ldrh.w	fp, [sl, #6]
90015092:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90015096:	f8aa b006 	strh.w	fp, [sl, #6]
9001509a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001509e:	f8bc b006 	ldrh.w	fp, [ip, #6]
900150a2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900150a6:	ea5b 070a 	orrs.w	r7, fp, sl
900150aa:	d014      	beq.n	900150d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900150ac:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900150b0:	f1ba 0f00 	cmp.w	sl, #0
900150b4:	db0f      	blt.n	900150d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900150b6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900150b8:	45ba      	cmp	sl, r7
900150ba:	da0c      	bge.n	900150d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900150bc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
900150c0:	45ba      	cmp	sl, r7
900150c2:	f10a 0a01 	add.w	sl, sl, #1
900150c6:	bf38      	it	cc
900150c8:	f10c 0c08 	addcc.w	ip, ip, #8
900150cc:	f8c0 a008 	str.w	sl, [r0, #8]
900150d0:	bf38      	it	cc
900150d2:	f8c0 c010 	strcc.w	ip, [r0, #16]
900150d6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900150da:	f04f 0700 	mov.w	r7, #0
900150de:	42ae      	cmp	r6, r5
900150e0:	f8ac 5000 	strh.w	r5, [ip]
900150e4:	f8ac 8002 	strh.w	r8, [ip, #2]
900150e8:	f8ac 7004 	strh.w	r7, [ip, #4]
900150ec:	f8ac 7006 	strh.w	r7, [ip, #6]
900150f0:	d1bc      	bne.n	9001506c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900150f2:	6904      	ldr	r4, [r0, #16]
900150f4:	9a01      	ldr	r2, [sp, #4]
900150f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900150f8:	1ad3      	subs	r3, r2, r3
900150fa:	88a2      	ldrh	r2, [r4, #4]
900150fc:	3120      	adds	r1, #32
900150fe:	441a      	add	r2, r3
90015100:	80a2      	strh	r2, [r4, #4]
90015102:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90015104:	1a89      	subs	r1, r1, r2
90015106:	88e2      	ldrh	r2, [r4, #6]
90015108:	fb03 2301 	mla	r3, r3, r1, r2
9001510c:	80e3      	strh	r3, [r4, #6]
9001510e:	e650      	b.n	90014db2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015110:	f04f 37ff 	mov.w	r7, #4294967295
90015114:	434a      	muls	r2, r1
90015116:	4264      	negs	r4, r4
90015118:	970a      	str	r7, [sp, #40]	@ 0x28
9001511a:	2700      	movs	r7, #0
9001511c:	e758      	b.n	90014fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001511e:	ea4f 1867 	mov.w	r8, r7, asr #5
90015122:	f009 031f 	and.w	r3, r9, #31
90015126:	f007 071f 	and.w	r7, r7, #31
9001512a:	fa1f fc8c 	uxth.w	ip, ip
9001512e:	45d0      	cmp	r8, sl
90015130:	930f      	str	r3, [sp, #60]	@ 0x3c
90015132:	fa1f fe8e 	uxth.w	lr, lr
90015136:	d10a      	bne.n	9001514e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90015138:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001513a:	449c      	add	ip, r3
9001513c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001513e:	441f      	add	r7, r3
90015140:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90015142:	f8a5 c004 	strh.w	ip, [r5, #4]
90015146:	fb03 e707 	mla	r7, r3, r7, lr
9001514a:	80ef      	strh	r7, [r5, #6]
9001514c:	e6bc      	b.n	90014ec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001514e:	2900      	cmp	r1, #0
90015150:	f2c0 80a6 	blt.w	900152a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90015154:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90015156:	f1c7 0320 	rsb	r3, r7, #32
9001515a:	4363      	muls	r3, r4
9001515c:	2401      	movs	r4, #1
9001515e:	940d      	str	r4, [sp, #52]	@ 0x34
90015160:	2420      	movs	r4, #32
90015162:	940c      	str	r4, [sp, #48]	@ 0x30
90015164:	fb93 f4f1 	sdiv	r4, r3, r1
90015168:	fb01 3b14 	mls	fp, r1, r4, r3
9001516c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001516e:	f1bb 0f00 	cmp.w	fp, #0
90015172:	441f      	add	r7, r3
90015174:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015176:	bfbc      	itt	lt
90015178:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001517c:	448b      	addlt	fp, r1
9001517e:	fb04 e707 	mla	r7, r4, r7, lr
90015182:	44a4      	add	ip, r4
90015184:	80ef      	strh	r7, [r5, #6]
90015186:	f8a5 c004 	strh.w	ip, [r5, #4]
9001518a:	eb08 0503 	add.w	r5, r8, r3
9001518e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015192:	f8bc e006 	ldrh.w	lr, [ip, #6]
90015196:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001519a:	ea5e 0307 	orrs.w	r3, lr, r7
9001519e:	d011      	beq.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900151a0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900151a4:	f1be 0f00 	cmp.w	lr, #0
900151a8:	db0c      	blt.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900151aa:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900151ac:	45be      	cmp	lr, r7
900151ae:	da09      	bge.n	900151c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900151b0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900151b4:	45be      	cmp	lr, r7
900151b6:	bf3c      	itt	cc
900151b8:	f10c 0708 	addcc.w	r7, ip, #8
900151bc:	6107      	strcc	r7, [r0, #16]
900151be:	f10e 0701 	add.w	r7, lr, #1
900151c2:	6087      	str	r7, [r0, #8]
900151c4:	6907      	ldr	r7, [r0, #16]
900151c6:	b213      	sxth	r3, r2
900151c8:	4555      	cmp	r5, sl
900151ca:	9310      	str	r3, [sp, #64]	@ 0x40
900151cc:	807b      	strh	r3, [r7, #2]
900151ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900151d0:	803d      	strh	r5, [r7, #0]
900151d2:	80be      	strh	r6, [r7, #4]
900151d4:	eb04 0c03 	add.w	ip, r4, r3
900151d8:	80fe      	strh	r6, [r7, #6]
900151da:	d050      	beq.n	9001527e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900151dc:	9b01      	ldr	r3, [sp, #4]
900151de:	eba3 070c 	sub.w	r7, r3, ip
900151e2:	ebab 0301 	sub.w	r3, fp, r1
900151e6:	443c      	add	r4, r7
900151e8:	9309      	str	r3, [sp, #36]	@ 0x24
900151ea:	0164      	lsls	r4, r4, #5
900151ec:	fb94 f8f1 	sdiv	r8, r4, r1
900151f0:	fb01 4418 	mls	r4, r1, r8, r4
900151f4:	2c00      	cmp	r4, #0
900151f6:	bfbc      	itt	lt
900151f8:	f108 38ff 	addlt.w	r8, r8, #4294967295
900151fc:	1864      	addlt	r4, r4, r1
900151fe:	f108 0701 	add.w	r7, r8, #1
90015202:	9711      	str	r7, [sp, #68]	@ 0x44
90015204:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015206:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001520a:	191b      	adds	r3, r3, r4
9001520c:	f8be b004 	ldrh.w	fp, [lr, #4]
90015210:	bf54      	ite	pl
90015212:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90015214:	4647      	movmi	r7, r8
90015216:	9309      	str	r3, [sp, #36]	@ 0x24
90015218:	bf58      	it	pl
9001521a:	1a5b      	subpl	r3, r3, r1
9001521c:	44bb      	add	fp, r7
9001521e:	44bc      	add	ip, r7
90015220:	bf58      	it	pl
90015222:	9309      	strpl	r3, [sp, #36]	@ 0x24
90015224:	f8ae b004 	strh.w	fp, [lr, #4]
90015228:	f8be b006 	ldrh.w	fp, [lr, #6]
9001522c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015230:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90015232:	f8ae b006 	strh.w	fp, [lr, #6]
90015236:	443d      	add	r5, r7
90015238:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001523c:	f8be b006 	ldrh.w	fp, [lr, #6]
90015240:	f8be 7004 	ldrh.w	r7, [lr, #4]
90015244:	ea5b 0307 	orrs.w	r3, fp, r7
90015248:	d011      	beq.n	9001526e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001524a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001524e:	f1bb 0f00 	cmp.w	fp, #0
90015252:	db0c      	blt.n	9001526e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90015254:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015256:	45bb      	cmp	fp, r7
90015258:	da09      	bge.n	9001526e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001525a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001525e:	45bb      	cmp	fp, r7
90015260:	bf3c      	itt	cc
90015262:	f10e 0708 	addcc.w	r7, lr, #8
90015266:	6107      	strcc	r7, [r0, #16]
90015268:	f10b 0701 	add.w	r7, fp, #1
9001526c:	6087      	str	r7, [r0, #8]
9001526e:	6907      	ldr	r7, [r0, #16]
90015270:	4555      	cmp	r5, sl
90015272:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90015274:	803d      	strh	r5, [r7, #0]
90015276:	807b      	strh	r3, [r7, #2]
90015278:	80be      	strh	r6, [r7, #4]
9001527a:	80fe      	strh	r6, [r7, #6]
9001527c:	d1c2      	bne.n	90015204 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001527e:	9b01      	ldr	r3, [sp, #4]
90015280:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90015282:	eba3 0c0c 	sub.w	ip, r3, ip
90015286:	6903      	ldr	r3, [r0, #16]
90015288:	3720      	adds	r7, #32
9001528a:	8899      	ldrh	r1, [r3, #4]
9001528c:	4461      	add	r1, ip
9001528e:	8099      	strh	r1, [r3, #4]
90015290:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015292:	1a7f      	subs	r7, r7, r1
90015294:	88d9      	ldrh	r1, [r3, #6]
90015296:	fb0c 1c07 	mla	ip, ip, r7, r1
9001529a:	f8a3 c006 	strh.w	ip, [r3, #6]
9001529e:	e613      	b.n	90014ec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900152a0:	f04f 34ff 	mov.w	r4, #4294967295
900152a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900152a6:	4249      	negs	r1, r1
900152a8:	940d      	str	r4, [sp, #52]	@ 0x34
900152aa:	2400      	movs	r4, #0
900152ac:	437b      	muls	r3, r7
900152ae:	e758      	b.n	90015162 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900152b0:	9905      	ldr	r1, [sp, #20]
900152b2:	ea4f 1b69 	mov.w	fp, r9, asr #5
900152b6:	f009 0c1f 	and.w	ip, r9, #31
900152ba:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900152be:	f001 011f 	and.w	r1, r1, #31
900152c2:	45f3      	cmp	fp, lr
900152c4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900152c8:	9102      	str	r1, [sp, #8]
900152ca:	9904      	ldr	r1, [sp, #16]
900152cc:	eba1 0406 	sub.w	r4, r1, r6
900152d0:	d108      	bne.n	900152e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900152d2:	9b02      	ldr	r3, [sp, #8]
900152d4:	44a0      	add	r8, r4
900152d6:	449c      	add	ip, r3
900152d8:	f8a7 8004 	strh.w	r8, [r7, #4]
900152dc:	fb04 a40c 	mla	r4, r4, ip, sl
900152e0:	80fc      	strh	r4, [r7, #6]
900152e2:	e461      	b.n	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900152e4:	9905      	ldr	r1, [sp, #20]
900152e6:	ebb1 0109 	subs.w	r1, r1, r9
900152ea:	bf51      	iteee	pl
900152ec:	f1cc 0520 	rsbpl	r5, ip, #32
900152f0:	fb04 f40c 	mulmi.w	r4, r4, ip
900152f4:	4249      	negmi	r1, r1
900152f6:	2500      	movmi	r5, #0
900152f8:	bf5d      	ittte	pl
900152fa:	436c      	mulpl	r4, r5
900152fc:	2520      	movpl	r5, #32
900152fe:	f04f 0901 	movpl.w	r9, #1
90015302:	f04f 39ff 	movmi.w	r9, #4294967295
90015306:	9501      	str	r5, [sp, #4]
90015308:	9b01      	ldr	r3, [sp, #4]
9001530a:	fb94 f5f1 	sdiv	r5, r4, r1
9001530e:	fb01 4415 	mls	r4, r1, r5, r4
90015312:	449c      	add	ip, r3
90015314:	eb0b 0309 	add.w	r3, fp, r9
90015318:	2c00      	cmp	r4, #0
9001531a:	bfbc      	itt	lt
9001531c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015320:	1864      	addlt	r4, r4, r1
90015322:	44a8      	add	r8, r5
90015324:	fb05 ac0c 	mla	ip, r5, ip, sl
90015328:	f8a7 8004 	strh.w	r8, [r7, #4]
9001532c:	f8a7 c006 	strh.w	ip, [r7, #6]
90015330:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015334:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015338:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001533c:	ea58 0707 	orrs.w	r7, r8, r7
90015340:	d011      	beq.n	90015366 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90015342:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015346:	f1b8 0f00 	cmp.w	r8, #0
9001534a:	db0c      	blt.n	90015366 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001534c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001534e:	45b8      	cmp	r8, r7
90015350:	da09      	bge.n	90015366 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90015352:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90015356:	45b8      	cmp	r8, r7
90015358:	bf3c      	itt	cc
9001535a:	f10c 0708 	addcc.w	r7, ip, #8
9001535e:	6107      	strcc	r7, [r0, #16]
90015360:	f108 0701 	add.w	r7, r8, #1
90015364:	6087      	str	r7, [r0, #8]
90015366:	6907      	ldr	r7, [r0, #16]
90015368:	f04f 0c00 	mov.w	ip, #0
9001536c:	b212      	sxth	r2, r2
9001536e:	459e      	cmp	lr, r3
90015370:	803b      	strh	r3, [r7, #0]
90015372:	442e      	add	r6, r5
90015374:	807a      	strh	r2, [r7, #2]
90015376:	f8a7 c004 	strh.w	ip, [r7, #4]
9001537a:	f8a7 c006 	strh.w	ip, [r7, #6]
9001537e:	d04b      	beq.n	90015418 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90015380:	9f04      	ldr	r7, [sp, #16]
90015382:	1a64      	subs	r4, r4, r1
90015384:	f04f 0a00 	mov.w	sl, #0
90015388:	1bbf      	subs	r7, r7, r6
9001538a:	443d      	add	r5, r7
9001538c:	016d      	lsls	r5, r5, #5
9001538e:	fb95 f8f1 	sdiv	r8, r5, r1
90015392:	fb01 5518 	mls	r5, r1, r8, r5
90015396:	4565      	cmp	r5, ip
90015398:	bfbc      	itt	lt
9001539a:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001539e:	186d      	addlt	r5, r5, r1
900153a0:	f108 0701 	add.w	r7, r8, #1
900153a4:	9703      	str	r7, [sp, #12]
900153a6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900153aa:	1964      	adds	r4, r4, r5
900153ac:	444b      	add	r3, r9
900153ae:	bf54      	ite	pl
900153b0:	9f03      	ldrpl	r7, [sp, #12]
900153b2:	4647      	movmi	r7, r8
900153b4:	f8bc b004 	ldrh.w	fp, [ip, #4]
900153b8:	bf58      	it	pl
900153ba:	1a64      	subpl	r4, r4, r1
900153bc:	443e      	add	r6, r7
900153be:	44bb      	add	fp, r7
900153c0:	f8ac b004 	strh.w	fp, [ip, #4]
900153c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900153c8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900153cc:	f8ac b006 	strh.w	fp, [ip, #6]
900153d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
900153d4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900153d8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900153dc:	ea5b 0707 	orrs.w	r7, fp, r7
900153e0:	d011      	beq.n	90015406 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900153e2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900153e6:	f1bb 0f00 	cmp.w	fp, #0
900153ea:	db0c      	blt.n	90015406 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900153ec:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900153ee:	45bb      	cmp	fp, r7
900153f0:	da09      	bge.n	90015406 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900153f2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900153f6:	45bb      	cmp	fp, r7
900153f8:	bf3c      	itt	cc
900153fa:	f10c 0708 	addcc.w	r7, ip, #8
900153fe:	6107      	strcc	r7, [r0, #16]
90015400:	f10b 0701 	add.w	r7, fp, #1
90015404:	6087      	str	r7, [r0, #8]
90015406:	6907      	ldr	r7, [r0, #16]
90015408:	459e      	cmp	lr, r3
9001540a:	803b      	strh	r3, [r7, #0]
9001540c:	807a      	strh	r2, [r7, #2]
9001540e:	f8a7 a004 	strh.w	sl, [r7, #4]
90015412:	f8a7 a006 	strh.w	sl, [r7, #6]
90015416:	d1c6      	bne.n	900153a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90015418:	9b04      	ldr	r3, [sp, #16]
9001541a:	1b9e      	subs	r6, r3, r6
9001541c:	6903      	ldr	r3, [r0, #16]
9001541e:	889a      	ldrh	r2, [r3, #4]
90015420:	4432      	add	r2, r6
90015422:	809a      	strh	r2, [r3, #4]
90015424:	9a02      	ldr	r2, [sp, #8]
90015426:	f102 0c20 	add.w	ip, r2, #32
9001542a:	9a01      	ldr	r2, [sp, #4]
9001542c:	ebac 0c02 	sub.w	ip, ip, r2
90015430:	88da      	ldrh	r2, [r3, #6]
90015432:	fb06 260c 	mla	r6, r6, ip, r2
90015436:	80de      	strh	r6, [r3, #6]
90015438:	f7ff bbb6 	b.w	90014ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

9001543c <_ZN8touchgfx7Outline6lineToEii>:
9001543c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001543e:	079b      	lsls	r3, r3, #30
90015440:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90015442:	460e      	mov	r6, r1
90015444:	4615      	mov	r5, r2
90015446:	d511      	bpl.n	9001546c <_ZN8touchgfx7Outline6lineToEii+0x30>
90015448:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
9001544c:	ea86 0701 	eor.w	r7, r6, r1
90015450:	ea85 0302 	eor.w	r3, r5, r2
90015454:	433b      	orrs	r3, r7
90015456:	d009      	beq.n	9001546c <_ZN8touchgfx7Outline6lineToEii+0x30>
90015458:	4633      	mov	r3, r6
9001545a:	9500      	str	r5, [sp, #0]
9001545c:	f7ff fb4c 	bl	90014af8 <_ZN8touchgfx7Outline10renderLineEiiii>
90015460:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015462:	f043 0301 	orr.w	r3, r3, #1
90015466:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001546a:	6243      	str	r3, [r0, #36]	@ 0x24
9001546c:	b003      	add	sp, #12
9001546e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015470 <_ZN8touchgfx7Outline6moveToEii>:
90015470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015472:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015474:	4615      	mov	r5, r2
90015476:	4604      	mov	r4, r0
90015478:	460e      	mov	r6, r1
9001547a:	079a      	lsls	r2, r3, #30
9001547c:	d401      	bmi.n	90015482 <_ZN8touchgfx7Outline6moveToEii+0x12>
9001547e:	f7ff fb07 	bl	90014a90 <_ZN8touchgfx7Outline5resetEv>
90015482:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015484:	07db      	lsls	r3, r3, #31
90015486:	d504      	bpl.n	90015492 <_ZN8touchgfx7Outline6moveToEii+0x22>
90015488:	4620      	mov	r0, r4
9001548a:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001548e:	f7ff ffd5 	bl	9001543c <_ZN8touchgfx7Outline6lineToEii>
90015492:	6923      	ldr	r3, [r4, #16]
90015494:	1170      	asrs	r0, r6, #5
90015496:	1169      	asrs	r1, r5, #5
90015498:	f9b3 2000 	ldrsh.w	r2, [r3]
9001549c:	4290      	cmp	r0, r2
9001549e:	d103      	bne.n	900154a8 <_ZN8touchgfx7Outline6moveToEii+0x38>
900154a0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900154a4:	4291      	cmp	r1, r2
900154a6:	d01a      	beq.n	900154de <_ZN8touchgfx7Outline6moveToEii+0x6e>
900154a8:	88df      	ldrh	r7, [r3, #6]
900154aa:	889a      	ldrh	r2, [r3, #4]
900154ac:	433a      	orrs	r2, r7
900154ae:	d010      	beq.n	900154d2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900154b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900154b4:	2a00      	cmp	r2, #0
900154b6:	db0c      	blt.n	900154d2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900154b8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900154ba:	42ba      	cmp	r2, r7
900154bc:	da09      	bge.n	900154d2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900154be:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900154c2:	42ba      	cmp	r2, r7
900154c4:	f102 0201 	add.w	r2, r2, #1
900154c8:	bf38      	it	cc
900154ca:	3308      	addcc	r3, #8
900154cc:	60a2      	str	r2, [r4, #8]
900154ce:	bf38      	it	cc
900154d0:	6123      	strcc	r3, [r4, #16]
900154d2:	6923      	ldr	r3, [r4, #16]
900154d4:	2200      	movs	r2, #0
900154d6:	8018      	strh	r0, [r3, #0]
900154d8:	8059      	strh	r1, [r3, #2]
900154da:	809a      	strh	r2, [r3, #4]
900154dc:	80da      	strh	r2, [r3, #6]
900154de:	6166      	str	r6, [r4, #20]
900154e0:	6225      	str	r5, [r4, #32]
900154e2:	e9c4 5606 	strd	r5, r6, [r4, #24]
900154e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900154e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900154e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900154ec:	b0d0      	sub	sp, #320	@ 0x140
900154ee:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900154f2:	466c      	mov	r4, sp
900154f4:	4627      	mov	r7, r4
900154f6:	1a0d      	subs	r5, r1, r0
900154f8:	f100 0308 	add.w	r3, r0, #8
900154fc:	2d48      	cmp	r5, #72	@ 0x48
900154fe:	f340 80d5 	ble.w	900156ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015502:	112d      	asrs	r5, r5, #4
90015504:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90015508:	f9b0 9000 	ldrsh.w	r9, [r0]
9001550c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90015510:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90015514:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90015518:	6816      	ldr	r6, [r2, #0]
9001551a:	6006      	str	r6, [r0, #0]
9001551c:	6856      	ldr	r6, [r2, #4]
9001551e:	6046      	str	r6, [r0, #4]
90015520:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015524:	f8a2 8002 	strh.w	r8, [r2, #2]
90015528:	f8a2 e004 	strh.w	lr, [r2, #4]
9001552c:	f8a2 c006 	strh.w	ip, [r2, #6]
90015530:	f1a1 0208 	sub.w	r2, r1, #8
90015534:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90015538:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
9001553c:	4565      	cmp	r5, ip
9001553e:	db06      	blt.n	9001554e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90015540:	d119      	bne.n	90015576 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90015542:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90015546:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001554a:	42ae      	cmp	r6, r5
9001554c:	dd13      	ble.n	90015576 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001554e:	460e      	mov	r6, r1
90015550:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90015554:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90015558:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001555c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90015560:	601d      	str	r5, [r3, #0]
90015562:	6875      	ldr	r5, [r6, #4]
90015564:	605d      	str	r5, [r3, #4]
90015566:	f821 9c08 	strh.w	r9, [r1, #-8]
9001556a:	f821 cc06 	strh.w	ip, [r1, #-6]
9001556e:	f821 8c04 	strh.w	r8, [r1, #-4]
90015572:	f821 ec02 	strh.w	lr, [r1, #-2]
90015576:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001557a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001557e:	42ae      	cmp	r6, r5
90015580:	db06      	blt.n	90015590 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90015582:	d116      	bne.n	900155b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90015584:	f9b0 c000 	ldrsh.w	ip, [r0]
90015588:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
9001558c:	45ac      	cmp	ip, r5
9001558e:	da10      	bge.n	900155b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90015590:	681d      	ldr	r5, [r3, #0]
90015592:	f9b0 8000 	ldrsh.w	r8, [r0]
90015596:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001559a:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001559e:	6005      	str	r5, [r0, #0]
900155a0:	685d      	ldr	r5, [r3, #4]
900155a2:	f8a0 8008 	strh.w	r8, [r0, #8]
900155a6:	6045      	str	r5, [r0, #4]
900155a8:	8146      	strh	r6, [r0, #10]
900155aa:	f8a0 e00c 	strh.w	lr, [r0, #12]
900155ae:	f8a0 c00e 	strh.w	ip, [r0, #14]
900155b2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900155b6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900155ba:	4565      	cmp	r5, ip
900155bc:	db06      	blt.n	900155cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900155be:	d119      	bne.n	900155f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900155c0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900155c4:	f9b0 5000 	ldrsh.w	r5, [r0]
900155c8:	42ae      	cmp	r6, r5
900155ca:	da13      	bge.n	900155f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900155cc:	460e      	mov	r6, r1
900155ce:	f9b0 9000 	ldrsh.w	r9, [r0]
900155d2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900155d6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900155da:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900155de:	6005      	str	r5, [r0, #0]
900155e0:	6875      	ldr	r5, [r6, #4]
900155e2:	6045      	str	r5, [r0, #4]
900155e4:	f821 9c08 	strh.w	r9, [r1, #-8]
900155e8:	f821 cc06 	strh.w	ip, [r1, #-6]
900155ec:	f821 8c04 	strh.w	r8, [r1, #-4]
900155f0:	f821 ec02 	strh.w	lr, [r1, #-2]
900155f4:	3308      	adds	r3, #8
900155f6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900155fa:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900155fe:	45e6      	cmp	lr, ip
90015600:	dbf8      	blt.n	900155f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015602:	d105      	bne.n	90015610 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015604:	f9b3 6000 	ldrsh.w	r6, [r3]
90015608:	f9b0 5000 	ldrsh.w	r5, [r0]
9001560c:	42ae      	cmp	r6, r5
9001560e:	dbf1      	blt.n	900155f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015610:	4615      	mov	r5, r2
90015612:	3a08      	subs	r2, #8
90015614:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90015618:	45b4      	cmp	ip, r6
9001561a:	dbf9      	blt.n	90015610 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001561c:	d105      	bne.n	9001562a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001561e:	f9b0 8000 	ldrsh.w	r8, [r0]
90015622:	f9b2 6000 	ldrsh.w	r6, [r2]
90015626:	45b0      	cmp	r8, r6
90015628:	dbf2      	blt.n	90015610 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001562a:	4293      	cmp	r3, r2
9001562c:	f1a5 0608 	sub.w	r6, r5, #8
90015630:	d816      	bhi.n	90015660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90015632:	f8d6 c000 	ldr.w	ip, [r6]
90015636:	f9b3 a000 	ldrsh.w	sl, [r3]
9001563a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001563e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90015642:	f8c3 c000 	str.w	ip, [r3]
90015646:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001564a:	f8c3 c004 	str.w	ip, [r3, #4]
9001564e:	f825 ac08 	strh.w	sl, [r5, #-8]
90015652:	f825 ec06 	strh.w	lr, [r5, #-6]
90015656:	f825 9c04 	strh.w	r9, [r5, #-4]
9001565a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001565e:	e7c9      	b.n	900155f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015660:	f8d6 e000 	ldr.w	lr, [r6]
90015664:	f9b0 a000 	ldrsh.w	sl, [r0]
90015668:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
9001566c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90015670:	f8c0 e000 	str.w	lr, [r0]
90015674:	f8d6 e004 	ldr.w	lr, [r6, #4]
90015678:	1a16      	subs	r6, r2, r0
9001567a:	f8c0 e004 	str.w	lr, [r0, #4]
9001567e:	f825 ac08 	strh.w	sl, [r5, #-8]
90015682:	f825 cc06 	strh.w	ip, [r5, #-6]
90015686:	f825 9c04 	strh.w	r9, [r5, #-4]
9001568a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001568e:	1acd      	subs	r5, r1, r3
90015690:	10ed      	asrs	r5, r5, #3
90015692:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90015696:	bfb5      	itete	lt
90015698:	e9c4 0200 	strdlt	r0, r2, [r4]
9001569c:	e9c4 3100 	strdge	r3, r1, [r4]
900156a0:	460a      	movlt	r2, r1
900156a2:	4603      	movge	r3, r0
900156a4:	3408      	adds	r4, #8
900156a6:	4618      	mov	r0, r3
900156a8:	4611      	mov	r1, r2
900156aa:	e724      	b.n	900154f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900156ac:	4299      	cmp	r1, r3
900156ae:	d927      	bls.n	90015700 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900156b0:	f1a3 0210 	sub.w	r2, r3, #16
900156b4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900156b8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900156bc:	45ac      	cmp	ip, r5
900156be:	db06      	blt.n	900156ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900156c0:	d11c      	bne.n	900156fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900156c2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900156c6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900156ca:	42ae      	cmp	r6, r5
900156cc:	da16      	bge.n	900156fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900156ce:	4615      	mov	r5, r2
900156d0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900156d4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900156d8:	3a08      	subs	r2, #8
900156da:	f855 6f08 	ldr.w	r6, [r5, #8]!
900156de:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900156e2:	6196      	str	r6, [r2, #24]
900156e4:	42a8      	cmp	r0, r5
900156e6:	686e      	ldr	r6, [r5, #4]
900156e8:	f8a2 9010 	strh.w	r9, [r2, #16]
900156ec:	61d6      	str	r6, [r2, #28]
900156ee:	f8a2 c012 	strh.w	ip, [r2, #18]
900156f2:	f8a2 8014 	strh.w	r8, [r2, #20]
900156f6:	f8a2 e016 	strh.w	lr, [r2, #22]
900156fa:	d1db      	bne.n	900156b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900156fc:	3308      	adds	r3, #8
900156fe:	e7d5      	b.n	900156ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015700:	42bc      	cmp	r4, r7
90015702:	d903      	bls.n	9001570c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90015704:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90015708:	3c08      	subs	r4, #8
9001570a:	e6f4      	b.n	900154f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001570c:	b050      	add	sp, #320	@ 0x140
9001570e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90015712:	b510      	push	{r4, lr}
90015714:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015716:	4604      	mov	r4, r0
90015718:	07da      	lsls	r2, r3, #31
9001571a:	d507      	bpl.n	9001572c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001571c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90015720:	f7ff fe8c 	bl	9001543c <_ZN8touchgfx7Outline6lineToEii>
90015724:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015726:	f023 0301 	bic.w	r3, r3, #1
9001572a:	6243      	str	r3, [r0, #36]	@ 0x24
9001572c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001572e:	079b      	lsls	r3, r3, #30
90015730:	d521      	bpl.n	90015776 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90015732:	6923      	ldr	r3, [r4, #16]
90015734:	88d9      	ldrh	r1, [r3, #6]
90015736:	889a      	ldrh	r2, [r3, #4]
90015738:	430a      	orrs	r2, r1
9001573a:	d010      	beq.n	9001575e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001573c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015740:	2a00      	cmp	r2, #0
90015742:	db0c      	blt.n	9001575e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015744:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90015746:	428a      	cmp	r2, r1
90015748:	da09      	bge.n	9001575e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001574a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001574e:	4291      	cmp	r1, r2
90015750:	f102 0201 	add.w	r2, r2, #1
90015754:	bf88      	it	hi
90015756:	3308      	addhi	r3, #8
90015758:	60a2      	str	r2, [r4, #8]
9001575a:	bf88      	it	hi
9001575c:	6123      	strhi	r3, [r4, #16]
9001575e:	68a1      	ldr	r1, [r4, #8]
90015760:	b129      	cbz	r1, 9001576e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015762:	6863      	ldr	r3, [r4, #4]
90015764:	4299      	cmp	r1, r3
90015766:	d802      	bhi.n	9001576e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015768:	68e0      	ldr	r0, [r4, #12]
9001576a:	f7ff febd 	bl	900154e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001576e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015770:	f023 0302 	bic.w	r3, r3, #2
90015774:	6263      	str	r3, [r4, #36]	@ 0x24
90015776:	68e0      	ldr	r0, [r4, #12]
90015778:	bd10      	pop	{r4, pc}
	...

9001577c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
9001577c:	4b01      	ldr	r3, [pc, #4]	@ (90015784 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001577e:	6818      	ldr	r0, [r3, #0]
90015780:	4770      	bx	lr
90015782:	bf00      	nop
90015784:	2402184c 	.word	0x2402184c

90015788 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90015788:	4b01      	ldr	r3, [pc, #4]	@ (90015790 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001578a:	6818      	ldr	r0, [r3, #0]
9001578c:	4770      	bx	lr
9001578e:	bf00      	nop
90015790:	24021850 	.word	0x24021850

90015794 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90015794:	b510      	push	{r4, lr}
90015796:	6803      	ldr	r3, [r0, #0]
90015798:	460c      	mov	r4, r1
9001579a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001579c:	4798      	blx	r3
9001579e:	1b03      	subs	r3, r0, r4
900157a0:	4258      	negs	r0, r3
900157a2:	4158      	adcs	r0, r3
900157a4:	bd10      	pop	{r4, pc}
	...

900157a8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900157a8:	4b01      	ldr	r3, [pc, #4]	@ (900157b0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900157aa:	6019      	str	r1, [r3, #0]
900157ac:	4770      	bx	lr
900157ae:	bf00      	nop
900157b0:	24021854 	.word	0x24021854

900157b4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900157b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900157b8:	4696      	mov	lr, r2
900157ba:	b097      	sub	sp, #92	@ 0x5c
900157bc:	4605      	mov	r5, r0
900157be:	4614      	mov	r4, r2
900157c0:	460e      	mov	r6, r1
900157c2:	461f      	mov	r7, r3
900157c4:	f10d 0c1c 	add.w	ip, sp, #28
900157c8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
900157cc:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
900157d0:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
900157d4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900157d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900157dc:	f8de 3000 	ldr.w	r3, [lr]
900157e0:	f104 0e14 	add.w	lr, r4, #20
900157e4:	f8cc 3000 	str.w	r3, [ip]
900157e8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900157ec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900157f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900157f4:	f8de 3000 	ldr.w	r3, [lr]
900157f8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900157fc:	f8cc 3000 	str.w	r3, [ip]
90015800:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90015804:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015808:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001580c:	f8de 3000 	ldr.w	r3, [lr]
90015810:	4631      	mov	r1, r6
90015812:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015814:	4628      	mov	r0, r5
90015816:	f8cc 3000 	str.w	r3, [ip]
9001581a:	682b      	ldr	r3, [r5, #0]
9001581c:	9201      	str	r2, [sp, #4]
9001581e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015820:	f8cd 8008 	str.w	r8, [sp, #8]
90015824:	9200      	str	r2, [sp, #0]
90015826:	aa07      	add	r2, sp, #28
90015828:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001582c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90015830:	463b      	mov	r3, r7
90015832:	47d8      	blx	fp
90015834:	46a6      	mov	lr, r4
90015836:	f10d 0c1c 	add.w	ip, sp, #28
9001583a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001583e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015842:	f8de 3000 	ldr.w	r3, [lr]
90015846:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001584a:	343c      	adds	r4, #60	@ 0x3c
9001584c:	f8cc 3000 	str.w	r3, [ip]
90015850:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015854:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015858:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001585c:	f8de 3000 	ldr.w	r3, [lr]
90015860:	f8cc 3000 	str.w	r3, [ip]
90015864:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90015868:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001586a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001586e:	6823      	ldr	r3, [r4, #0]
90015870:	4631      	mov	r1, r6
90015872:	4628      	mov	r0, r5
90015874:	f8cc 3000 	str.w	r3, [ip]
90015878:	682b      	ldr	r3, [r5, #0]
9001587a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001587e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90015880:	f8cd 8008 	str.w	r8, [sp, #8]
90015884:	9201      	str	r2, [sp, #4]
90015886:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015888:	9200      	str	r2, [sp, #0]
9001588a:	aa07      	add	r2, sp, #28
9001588c:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
9001588e:	463b      	mov	r3, r7
90015890:	47a0      	blx	r4
90015892:	b017      	add	sp, #92	@ 0x5c
90015894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015898 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90015898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001589c:	b08d      	sub	sp, #52	@ 0x34
9001589e:	4688      	mov	r8, r1
900158a0:	f8d3 c000 	ldr.w	ip, [r3]
900158a4:	9916      	ldr	r1, [sp, #88]	@ 0x58
900158a6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
900158aa:	680f      	ldr	r7, [r1, #0]
900158ac:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900158b0:	eba7 070c 	sub.w	r7, r7, ip
900158b4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
900158b8:	edd3 6a07 	vldr	s13, [r3, #28]
900158bc:	42bc      	cmp	r4, r7
900158be:	9918      	ldr	r1, [sp, #96]	@ 0x60
900158c0:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
900158c4:	bfa8      	it	ge
900158c6:	463c      	movge	r4, r7
900158c8:	f9b1 9000 	ldrsh.w	r9, [r1]
900158cc:	f9ba 1000 	ldrsh.w	r1, [sl]
900158d0:	ee07 4a90 	vmov	s15, r4
900158d4:	eb09 0e0c 	add.w	lr, r9, ip
900158d8:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
900158dc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900158e0:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
900158e4:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
900158e8:	4571      	cmp	r1, lr
900158ea:	ee25 4a04 	vmul.f32	s8, s10, s8
900158ee:	ee65 4a24 	vmul.f32	s9, s10, s9
900158f2:	ee25 5a27 	vmul.f32	s10, s10, s15
900158f6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
900158fa:	ee71 0aa4 	vadd.f32	s1, s3, s9
900158fe:	ee32 1a05 	vadd.f32	s2, s4, s10
90015902:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90015906:	ee36 0a84 	vadd.f32	s0, s13, s8
9001590a:	ee61 1a87 	vmul.f32	s3, s3, s14
9001590e:	ee22 2a07 	vmul.f32	s4, s4, s14
90015912:	f340 808c 	ble.w	90015a2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90015916:	eba1 060e 	sub.w	r6, r1, lr
9001591a:	fb96 f5f4 	sdiv	r5, r6, r4
9001591e:	ee07 5a10 	vmov	s14, r5
90015922:	2d00      	cmp	r5, #0
90015924:	fb04 6615 	mls	r6, r4, r5, r6
90015928:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001592c:	eea7 0a04 	vfma.f32	s0, s14, s8
90015930:	eee7 0a24 	vfma.f32	s1, s14, s9
90015934:	eea7 1a05 	vfma.f32	s2, s14, s10
90015938:	dd12      	ble.n	90015960 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001593a:	ee70 6a44 	vsub.f32	s13, s0, s8
9001593e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90015942:	ee31 2a45 	vsub.f32	s4, s2, s10
90015946:	eef5 6a40 	vcmp.f32	s13, #0.0
9001594a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001594e:	bf14      	ite	ne
90015950:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90015954:	eeb0 7a67 	vmoveq.f32	s14, s15
90015958:	ee61 1a87 	vmul.f32	s3, s3, s14
9001595c:	ee22 2a07 	vmul.f32	s4, s4, s14
90015960:	fb05 f204 	mul.w	r2, r5, r4
90015964:	1abf      	subs	r7, r7, r2
90015966:	4494      	add	ip, r2
90015968:	f8ba 2004 	ldrh.w	r2, [sl, #4]
9001596c:	4411      	add	r1, r2
9001596e:	eb09 020c 	add.w	r2, r9, ip
90015972:	b209      	sxth	r1, r1
90015974:	443a      	add	r2, r7
90015976:	428a      	cmp	r2, r1
90015978:	bfc4      	itt	gt
9001597a:	eba1 0209 	subgt.w	r2, r1, r9
9001597e:	eba2 070c 	subgt.w	r7, r2, ip
90015982:	2f00      	cmp	r7, #0
90015984:	dd50      	ble.n	90015a28 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90015986:	fb97 f1f4 	sdiv	r1, r7, r4
9001598a:	fb04 7211 	mls	r2, r4, r1, r7
9001598e:	b90a      	cbnz	r2, 90015994 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90015990:	3901      	subs	r1, #1
90015992:	4622      	mov	r2, r4
90015994:	eec7 3a80 	vdiv.f32	s7, s15, s0
90015998:	6840      	ldr	r0, [r0, #4]
9001599a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
9001599e:	44b6      	add	lr, r6
900159a0:	f8d0 a000 	ldr.w	sl, [r0]
900159a4:	2900      	cmp	r1, #0
900159a6:	bfcc      	ite	gt
900159a8:	46a1      	movgt	r9, r4
900159aa:	4691      	movle	r9, r2
900159ac:	900b      	str	r0, [sp, #44]	@ 0x2c
900159ae:	9817      	ldr	r0, [sp, #92]	@ 0x5c
900159b0:	fb04 e505 	mla	r5, r4, r5, lr
900159b4:	eef0 6a42 	vmov.f32	s13, s4
900159b8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
900159bc:	9008      	str	r0, [sp, #32]
900159be:	eeb0 7a61 	vmov.f32	s14, s3
900159c2:	9818      	ldr	r0, [sp, #96]	@ 0x60
900159c4:	695b      	ldr	r3, [r3, #20]
900159c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900159ca:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
900159ce:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
900159d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900159d4:	445b      	add	r3, fp
900159d6:	9307      	str	r3, [sp, #28]
900159d8:	ee16 3a90 	vmov	r3, s13
900159dc:	e9cd 8505 	strd	r8, r5, [sp, #20]
900159e0:	ee60 2aa3 	vmul.f32	s5, s1, s7
900159e4:	ee21 3a23 	vmul.f32	s6, s2, s7
900159e8:	ee72 7ae1 	vsub.f32	s15, s5, s3
900159ec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900159f0:	ee17 7a90 	vmov	r7, s15
900159f4:	ee73 7a42 	vsub.f32	s15, s6, s4
900159f8:	fb97 f7f4 	sdiv	r7, r7, r4
900159fc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015a00:	ee17 ca90 	vmov	ip, s15
90015a04:	fb9c fcf4 	sdiv	ip, ip, r4
90015a08:	fb0c 3306 	mla	r3, ip, r6, r3
90015a0c:	9302      	str	r3, [sp, #8]
90015a0e:	ee17 3a10 	vmov	r3, s14
90015a12:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90015a16:	fb07 3706 	mla	r7, r7, r6, r3
90015a1a:	eba9 0306 	sub.w	r3, r9, r6
90015a1e:	e9cd 4700 	strd	r4, r7, [sp]
90015a22:	f8da 4008 	ldr.w	r4, [sl, #8]
90015a26:	47a0      	blx	r4
90015a28:	b00d      	add	sp, #52	@ 0x34
90015a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015a2e:	2500      	movs	r5, #0
90015a30:	462e      	mov	r6, r5
90015a32:	e799      	b.n	90015968 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90015a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90015a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015a38:	b0db      	sub	sp, #364	@ 0x16c
90015a3a:	461d      	mov	r5, r3
90015a3c:	4614      	mov	r4, r2
90015a3e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90015a42:	910f      	str	r1, [sp, #60]	@ 0x3c
90015a44:	4629      	mov	r1, r5
90015a46:	930a      	str	r3, [sp, #40]	@ 0x28
90015a48:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90015a4c:	9009      	str	r0, [sp, #36]	@ 0x24
90015a4e:	930b      	str	r3, [sp, #44]	@ 0x2c
90015a50:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90015a54:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90015a58:	9310      	str	r3, [sp, #64]	@ 0x40
90015a5a:	6803      	ldr	r3, [r0, #0]
90015a5c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90015a5e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90015a62:	47b8      	blx	r7
90015a64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015a66:	6058      	str	r0, [r3, #4]
90015a68:	2800      	cmp	r0, #0
90015a6a:	f000 83a1 	beq.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015a6e:	682b      	ldr	r3, [r5, #0]
90015a70:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90015a74:	ed94 7a02 	vldr	s14, [r4, #8]
90015a78:	9314      	str	r3, [sp, #80]	@ 0x50
90015a7a:	686b      	ldr	r3, [r5, #4]
90015a7c:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015a80:	9315      	str	r3, [sp, #84]	@ 0x54
90015a82:	4bc1      	ldr	r3, [pc, #772]	@ (90015d88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90015a84:	7819      	ldrb	r1, [r3, #0]
90015a86:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90015a8a:	2900      	cmp	r1, #0
90015a8c:	bf16      	itet	ne
90015a8e:	4619      	movne	r1, r3
90015a90:	4611      	moveq	r1, r2
90015a92:	4613      	movne	r3, r2
90015a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015a98:	9116      	str	r1, [sp, #88]	@ 0x58
90015a9a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90015a9e:	f240 8387 	bls.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015aa2:	ed94 7a07 	vldr	s14, [r4, #28]
90015aa6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015aae:	f240 837f 	bls.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015ab2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90015ab6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015aba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015abe:	f240 8377 	bls.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015ac2:	6822      	ldr	r2, [r4, #0]
90015ac4:	4bb1      	ldr	r3, [pc, #708]	@ (90015d8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90015ac6:	429a      	cmp	r2, r3
90015ac8:	f2c0 8372 	blt.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015acc:	49b0      	ldr	r1, [pc, #704]	@ (90015d90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015ace:	6963      	ldr	r3, [r4, #20]
90015ad0:	428a      	cmp	r2, r1
90015ad2:	f300 836d 	bgt.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015ad6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015ada:	48ae      	ldr	r0, [pc, #696]	@ (90015d94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015adc:	33ff      	adds	r3, #255	@ 0xff
90015ade:	4283      	cmp	r3, r0
90015ae0:	f200 8366 	bhi.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015ae4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90015ae6:	4dac      	ldr	r5, [pc, #688]	@ (90015d98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015ae8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015aec:	33ff      	adds	r3, #255	@ 0xff
90015aee:	42ab      	cmp	r3, r5
90015af0:	f200 835e 	bhi.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015af4:	6862      	ldr	r2, [r4, #4]
90015af6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90015afa:	33ff      	adds	r3, #255	@ 0xff
90015afc:	4283      	cmp	r3, r0
90015afe:	f200 8357 	bhi.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015b02:	69a1      	ldr	r1, [r4, #24]
90015b04:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90015b08:	33ff      	adds	r3, #255	@ 0xff
90015b0a:	4283      	cmp	r3, r0
90015b0c:	f200 8350 	bhi.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015b10:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90015b12:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90015b16:	30ff      	adds	r0, #255	@ 0xff
90015b18:	42a8      	cmp	r0, r5
90015b1a:	f200 8349 	bhi.w	900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015b1e:	428a      	cmp	r2, r1
90015b20:	f280 8110 	bge.w	90015d44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90015b24:	429a      	cmp	r2, r3
90015b26:	f300 8119 	bgt.w	90015d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015b2a:	4299      	cmp	r1, r3
90015b2c:	f280 811d 	bge.w	90015d6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90015b30:	2502      	movs	r5, #2
90015b32:	2701      	movs	r7, #1
90015b34:	46a9      	mov	r9, r5
90015b36:	46b8      	mov	r8, r7
90015b38:	f04f 0a00 	mov.w	sl, #0
90015b3c:	4621      	mov	r1, r4
90015b3e:	a849      	add	r0, sp, #292	@ 0x124
90015b40:	f004 fa80 	bl	9001a044 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90015b44:	4622      	mov	r2, r4
90015b46:	4653      	mov	r3, sl
90015b48:	a949      	add	r1, sp, #292	@ 0x124
90015b4a:	f8cd 9000 	str.w	r9, [sp]
90015b4e:	a819      	add	r0, sp, #100	@ 0x64
90015b50:	f004 fba8 	bl	9001a2a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015b54:	4622      	mov	r2, r4
90015b56:	4653      	mov	r3, sl
90015b58:	a949      	add	r1, sp, #292	@ 0x124
90015b5a:	f8cd 8000 	str.w	r8, [sp]
90015b5e:	a829      	add	r0, sp, #164	@ 0xa4
90015b60:	f004 fba0 	bl	9001a2a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015b64:	4643      	mov	r3, r8
90015b66:	4622      	mov	r2, r4
90015b68:	a949      	add	r1, sp, #292	@ 0x124
90015b6a:	f8cd 9000 	str.w	r9, [sp]
90015b6e:	a839      	add	r0, sp, #228	@ 0xe4
90015b70:	f004 fb98 	bl	9001a2a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90015b74:	42af      	cmp	r7, r5
90015b76:	af12      	add	r7, sp, #72	@ 0x48
90015b78:	bfb7      	itett	lt
90015b7a:	2300      	movlt	r3, #0
90015b7c:	2301      	movge	r3, #1
90015b7e:	ad29      	addlt	r5, sp, #164	@ 0xa4
90015b80:	ac19      	addlt	r4, sp, #100	@ 0x64
90015b82:	bfb1      	iteee	lt
90015b84:	930e      	strlt	r3, [sp, #56]	@ 0x38
90015b86:	ad19      	addge	r5, sp, #100	@ 0x64
90015b88:	930e      	strge	r3, [sp, #56]	@ 0x38
90015b8a:	ac29      	addge	r4, sp, #164	@ 0xa4
90015b8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015b8e:	e893 0003 	ldmia.w	r3, {r0, r1}
90015b92:	e887 0003 	stmia.w	r7, {r0, r1}
90015b96:	b928      	cbnz	r0, 90015ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90015b98:	4b80      	ldr	r3, [pc, #512]	@ (90015d9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90015b9a:	6818      	ldr	r0, [r3, #0]
90015b9c:	6803      	ldr	r3, [r0, #0]
90015b9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015ba0:	4798      	blx	r3
90015ba2:	6038      	str	r0, [r7, #0]
90015ba4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015ba6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015baa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015bae:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90015bb0:	930c      	str	r3, [sp, #48]	@ 0x30
90015bb2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015bb4:	6963      	ldr	r3, [r4, #20]
90015bb6:	440b      	add	r3, r1
90015bb8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015bbc:	4408      	add	r0, r1
90015bbe:	b200      	sxth	r0, r0
90015bc0:	4283      	cmp	r3, r0
90015bc2:	900d      	str	r0, [sp, #52]	@ 0x34
90015bc4:	f280 80dd 	bge.w	90015d82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015bc8:	428b      	cmp	r3, r1
90015bca:	da08      	bge.n	90015bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015bcc:	2a00      	cmp	r2, #0
90015bce:	dd06      	ble.n	90015bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015bd0:	1acb      	subs	r3, r1, r3
90015bd2:	429a      	cmp	r2, r3
90015bd4:	f2c0 80e4 	blt.w	90015da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015bd8:	2b00      	cmp	r3, #0
90015bda:	f300 80e2 	bgt.w	90015da2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015bde:	6967      	ldr	r7, [r4, #20]
90015be0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015be4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015be6:	443b      	add	r3, r7
90015be8:	461f      	mov	r7, r3
90015bea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015bec:	1bdf      	subs	r7, r3, r7
90015bee:	4297      	cmp	r7, r2
90015bf0:	bfa8      	it	ge
90015bf2:	4617      	movge	r7, r2
90015bf4:	2f00      	cmp	r7, #0
90015bf6:	f340 8166 	ble.w	90015ec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015bfa:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015bfc:	6829      	ldr	r1, [r5, #0]
90015bfe:	f9b3 2000 	ldrsh.w	r2, [r3]
90015c02:	f9bb 3000 	ldrsh.w	r3, [fp]
90015c06:	4411      	add	r1, r2
90015c08:	6820      	ldr	r0, [r4, #0]
90015c0a:	4299      	cmp	r1, r3
90015c0c:	dd1a      	ble.n	90015c44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015c0e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015c12:	4402      	add	r2, r0
90015c14:	440b      	add	r3, r1
90015c16:	b21b      	sxth	r3, r3
90015c18:	429a      	cmp	r2, r3
90015c1a:	dc13      	bgt.n	90015c44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015c1c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015c1e:	a912      	add	r1, sp, #72	@ 0x48
90015c20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015c22:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015c24:	681b      	ldr	r3, [r3, #0]
90015c26:	9206      	str	r2, [sp, #24]
90015c28:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015c2a:	9500      	str	r5, [sp, #0]
90015c2c:	9205      	str	r2, [sp, #20]
90015c2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015c30:	e9cd b203 	strd	fp, r2, [sp, #12]
90015c34:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015c36:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015c3a:	aa49      	add	r2, sp, #292	@ 0x124
90015c3c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015c40:	4623      	mov	r3, r4
90015c42:	47c8      	blx	r9
90015c44:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015c48:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015c4c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015c50:	ee37 7a27 	vadd.f32	s14, s14, s15
90015c54:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015c58:	68a1      	ldr	r1, [r4, #8]
90015c5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015c5e:	ed94 6a08 	vldr	s12, [r4, #32]
90015c62:	edd4 6a07 	vldr	s13, [r4, #28]
90015c66:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015c6a:	ee76 6a86 	vadd.f32	s13, s13, s12
90015c6e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015c72:	e9d4 2300 	ldrd	r2, r3, [r4]
90015c76:	edc4 6a07 	vstr	s13, [r4, #28]
90015c7a:	441a      	add	r2, r3
90015c7c:	6963      	ldr	r3, [r4, #20]
90015c7e:	3301      	adds	r3, #1
90015c80:	6022      	str	r2, [r4, #0]
90015c82:	6163      	str	r3, [r4, #20]
90015c84:	69a3      	ldr	r3, [r4, #24]
90015c86:	3b01      	subs	r3, #1
90015c88:	61a3      	str	r3, [r4, #24]
90015c8a:	6923      	ldr	r3, [r4, #16]
90015c8c:	440b      	add	r3, r1
90015c8e:	68e1      	ldr	r1, [r4, #12]
90015c90:	428b      	cmp	r3, r1
90015c92:	6123      	str	r3, [r4, #16]
90015c94:	db15      	blt.n	90015cc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90015c96:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015c9a:	3201      	adds	r2, #1
90015c9c:	1a5b      	subs	r3, r3, r1
90015c9e:	ee76 6a26 	vadd.f32	s13, s12, s13
90015ca2:	6022      	str	r2, [r4, #0]
90015ca4:	6123      	str	r3, [r4, #16]
90015ca6:	edc4 6a07 	vstr	s13, [r4, #28]
90015caa:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015cae:	ee36 7a87 	vadd.f32	s14, s13, s14
90015cb2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015cb6:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015cba:	ee77 7a27 	vadd.f32	s15, s14, s15
90015cbe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015cc2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015cc6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015cca:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015cce:	ee37 7a27 	vadd.f32	s14, s14, s15
90015cd2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015cd6:	68a9      	ldr	r1, [r5, #8]
90015cd8:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015cdc:	ed95 6a08 	vldr	s12, [r5, #32]
90015ce0:	edd5 6a07 	vldr	s13, [r5, #28]
90015ce4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015ce8:	ee76 6a86 	vadd.f32	s13, s13, s12
90015cec:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015cf0:	e9d5 2300 	ldrd	r2, r3, [r5]
90015cf4:	edc5 6a07 	vstr	s13, [r5, #28]
90015cf8:	441a      	add	r2, r3
90015cfa:	696b      	ldr	r3, [r5, #20]
90015cfc:	3301      	adds	r3, #1
90015cfe:	602a      	str	r2, [r5, #0]
90015d00:	616b      	str	r3, [r5, #20]
90015d02:	69ab      	ldr	r3, [r5, #24]
90015d04:	3b01      	subs	r3, #1
90015d06:	61ab      	str	r3, [r5, #24]
90015d08:	692b      	ldr	r3, [r5, #16]
90015d0a:	440b      	add	r3, r1
90015d0c:	68e9      	ldr	r1, [r5, #12]
90015d0e:	428b      	cmp	r3, r1
90015d10:	612b      	str	r3, [r5, #16]
90015d12:	db15      	blt.n	90015d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90015d14:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015d18:	3201      	adds	r2, #1
90015d1a:	1a5b      	subs	r3, r3, r1
90015d1c:	ee76 6a26 	vadd.f32	s13, s12, s13
90015d20:	602a      	str	r2, [r5, #0]
90015d22:	612b      	str	r3, [r5, #16]
90015d24:	edc5 6a07 	vstr	s13, [r5, #28]
90015d28:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015d2c:	ee36 7a87 	vadd.f32	s14, s13, s14
90015d30:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015d34:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015d38:	ee77 7a27 	vadd.f32	s15, s14, s15
90015d3c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015d40:	3f01      	subs	r7, #1
90015d42:	e757      	b.n	90015bf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90015d44:	4299      	cmp	r1, r3
90015d46:	dc13      	bgt.n	90015d70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015d48:	429a      	cmp	r2, r3
90015d4a:	da14      	bge.n	90015d76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015d4c:	2502      	movs	r5, #2
90015d4e:	2703      	movs	r7, #3
90015d50:	f04f 0800 	mov.w	r8, #0
90015d54:	46a9      	mov	r9, r5
90015d56:	f04f 0a01 	mov.w	sl, #1
90015d5a:	e6ef      	b.n	90015b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015d5c:	2501      	movs	r5, #1
90015d5e:	2700      	movs	r7, #0
90015d60:	46a9      	mov	r9, r5
90015d62:	46b8      	mov	r8, r7
90015d64:	f04f 0a02 	mov.w	sl, #2
90015d68:	e6e8      	b.n	90015b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015d6a:	2501      	movs	r5, #1
90015d6c:	2702      	movs	r7, #2
90015d6e:	e6e1      	b.n	90015b34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90015d70:	2500      	movs	r5, #0
90015d72:	2701      	movs	r7, #1
90015d74:	e7f4      	b.n	90015d60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90015d76:	2702      	movs	r7, #2
90015d78:	2503      	movs	r5, #3
90015d7a:	f04f 0900 	mov.w	r9, #0
90015d7e:	46b8      	mov	r8, r7
90015d80:	e7e9      	b.n	90015d56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90015d82:	4613      	mov	r3, r2
90015d84:	e728      	b.n	90015bd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90015d86:	bf00      	nop
90015d88:	2402183c 	.word	0x2402183c
90015d8c:	fffd8f01 	.word	0xfffd8f01
90015d90:	00027100 	.word	0x00027100
90015d94:	0004e1ff 	.word	0x0004e1ff
90015d98:	0004e1fe 	.word	0x0004e1fe
90015d9c:	24021844 	.word	0x24021844
90015da0:	4613      	mov	r3, r2
90015da2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90015da4:	469e      	mov	lr, r3
90015da6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90015da8:	469c      	mov	ip, r3
90015daa:	9111      	str	r1, [sp, #68]	@ 0x44
90015dac:	f04f 0900 	mov.w	r9, #0
90015db0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90015db4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90015db8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90015dbc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90015dc0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90015dc4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90015dc8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90015dcc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90015dd0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90015dd4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90015dd8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90015ddc:	f1bc 0f00 	cmp.w	ip, #0
90015de0:	d147      	bne.n	90015e72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90015de2:	eb03 0c07 	add.w	ip, r3, r7
90015de6:	1ad7      	subs	r7, r2, r3
90015de8:	f1b9 0f00 	cmp.w	r9, #0
90015dec:	d009      	beq.n	90015e02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015dee:	9029      	str	r0, [sp, #164]	@ 0xa4
90015df0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90015df4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90015df8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90015dfc:	912d      	str	r1, [sp, #180]	@ 0xb4
90015dfe:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90015e02:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015e04:	f04f 0800 	mov.w	r8, #0
90015e08:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015e0c:	9111      	str	r1, [sp, #68]	@ 0x44
90015e0e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90015e12:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015e16:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015e1a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015e1e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90015e22:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015e26:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015e2a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015e2e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90015e32:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015e36:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015e3a:	f1be 0f00 	cmp.w	lr, #0
90015e3e:	d031      	beq.n	90015ea4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015e40:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015e42:	4450      	add	r0, sl
90015e44:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015e48:	4431      	add	r1, r6
90015e4a:	ee37 7a04 	vadd.f32	s14, s14, s8
90015e4e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015e52:	4549      	cmp	r1, r9
90015e54:	db08      	blt.n	90015e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90015e56:	ee77 7a85 	vadd.f32	s15, s15, s10
90015e5a:	3001      	adds	r0, #1
90015e5c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015e60:	eba1 0109 	sub.w	r1, r1, r9
90015e64:	ee37 7a06 	vadd.f32	s14, s14, s12
90015e68:	f10e 3eff 	add.w	lr, lr, #4294967295
90015e6c:	f04f 0801 	mov.w	r8, #1
90015e70:	e7e3      	b.n	90015e3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90015e72:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015e74:	4450      	add	r0, sl
90015e76:	ee37 7a24 	vadd.f32	s14, s14, s9
90015e7a:	4431      	add	r1, r6
90015e7c:	ee77 7a84 	vadd.f32	s15, s15, s8
90015e80:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015e84:	4541      	cmp	r1, r8
90015e86:	db08      	blt.n	90015e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90015e88:	ee76 6a85 	vadd.f32	s13, s13, s10
90015e8c:	3001      	adds	r0, #1
90015e8e:	ee37 7a25 	vadd.f32	s14, s14, s11
90015e92:	eba1 0108 	sub.w	r1, r1, r8
90015e96:	ee77 7a86 	vadd.f32	s15, s15, s12
90015e9a:	f10c 3cff 	add.w	ip, ip, #4294967295
90015e9e:	f04f 0901 	mov.w	r9, #1
90015ea2:	e79b      	b.n	90015ddc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90015ea4:	449c      	add	ip, r3
90015ea6:	1aff      	subs	r7, r7, r3
90015ea8:	f1b8 0f00 	cmp.w	r8, #0
90015eac:	d009      	beq.n	90015ec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90015eae:	9019      	str	r0, [sp, #100]	@ 0x64
90015eb0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90015eb4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90015eb8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90015ebc:	911d      	str	r1, [sp, #116]	@ 0x74
90015ebe:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90015ec2:	1ad2      	subs	r2, r2, r3
90015ec4:	e68b      	b.n	90015bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015ec6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015ec8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90015eca:	2b00      	cmp	r3, #0
90015ecc:	f000 80d1 	beq.w	90016072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015ed0:	ad19      	add	r5, sp, #100	@ 0x64
90015ed2:	ac39      	add	r4, sp, #228	@ 0xe4
90015ed4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015ed6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015eda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015ede:	930c      	str	r3, [sp, #48]	@ 0x30
90015ee0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015ee2:	6963      	ldr	r3, [r4, #20]
90015ee4:	440b      	add	r3, r1
90015ee6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015eea:	4408      	add	r0, r1
90015eec:	b200      	sxth	r0, r0
90015eee:	4283      	cmp	r3, r0
90015ef0:	900d      	str	r0, [sp, #52]	@ 0x34
90015ef2:	f280 80c1 	bge.w	90016078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90015ef6:	428b      	cmp	r3, r1
90015ef8:	da08      	bge.n	90015f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015efa:	2a00      	cmp	r2, #0
90015efc:	dd06      	ble.n	90015f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015efe:	1acb      	subs	r3, r1, r3
90015f00:	429a      	cmp	r2, r3
90015f02:	f2c0 80bb 	blt.w	9001607c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90015f06:	2b00      	cmp	r3, #0
90015f08:	f300 80b9 	bgt.w	9001607e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015f0c:	6967      	ldr	r7, [r4, #20]
90015f0e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015f12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015f14:	443b      	add	r3, r7
90015f16:	461f      	mov	r7, r3
90015f18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015f1a:	1bdf      	subs	r7, r3, r7
90015f1c:	4297      	cmp	r7, r2
90015f1e:	bfa8      	it	ge
90015f20:	4617      	movge	r7, r2
90015f22:	2f00      	cmp	r7, #0
90015f24:	f340 813c 	ble.w	900161a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015f28:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015f2a:	6829      	ldr	r1, [r5, #0]
90015f2c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015f30:	f9bb 3000 	ldrsh.w	r3, [fp]
90015f34:	4411      	add	r1, r2
90015f36:	6820      	ldr	r0, [r4, #0]
90015f38:	4299      	cmp	r1, r3
90015f3a:	dd1a      	ble.n	90015f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015f3c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015f40:	4402      	add	r2, r0
90015f42:	440b      	add	r3, r1
90015f44:	b21b      	sxth	r3, r3
90015f46:	429a      	cmp	r2, r3
90015f48:	dc13      	bgt.n	90015f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015f4a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015f4c:	a912      	add	r1, sp, #72	@ 0x48
90015f4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015f50:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015f52:	681b      	ldr	r3, [r3, #0]
90015f54:	9206      	str	r2, [sp, #24]
90015f56:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015f58:	9500      	str	r5, [sp, #0]
90015f5a:	9205      	str	r2, [sp, #20]
90015f5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015f5e:	e9cd b203 	strd	fp, r2, [sp, #12]
90015f62:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015f64:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015f68:	aa49      	add	r2, sp, #292	@ 0x124
90015f6a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015f6e:	4623      	mov	r3, r4
90015f70:	47c8      	blx	r9
90015f72:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015f76:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015f7a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015f7e:	ee37 7a27 	vadd.f32	s14, s14, s15
90015f82:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015f86:	68a1      	ldr	r1, [r4, #8]
90015f88:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015f8c:	ed94 6a08 	vldr	s12, [r4, #32]
90015f90:	edd4 6a07 	vldr	s13, [r4, #28]
90015f94:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015f98:	ee76 6a86 	vadd.f32	s13, s13, s12
90015f9c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015fa0:	e9d4 2300 	ldrd	r2, r3, [r4]
90015fa4:	edc4 6a07 	vstr	s13, [r4, #28]
90015fa8:	441a      	add	r2, r3
90015faa:	6963      	ldr	r3, [r4, #20]
90015fac:	3301      	adds	r3, #1
90015fae:	6022      	str	r2, [r4, #0]
90015fb0:	6163      	str	r3, [r4, #20]
90015fb2:	69a3      	ldr	r3, [r4, #24]
90015fb4:	3b01      	subs	r3, #1
90015fb6:	61a3      	str	r3, [r4, #24]
90015fb8:	6923      	ldr	r3, [r4, #16]
90015fba:	440b      	add	r3, r1
90015fbc:	68e1      	ldr	r1, [r4, #12]
90015fbe:	428b      	cmp	r3, r1
90015fc0:	6123      	str	r3, [r4, #16]
90015fc2:	db15      	blt.n	90015ff0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90015fc4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015fc8:	3201      	adds	r2, #1
90015fca:	1a5b      	subs	r3, r3, r1
90015fcc:	ee76 6a26 	vadd.f32	s13, s12, s13
90015fd0:	6022      	str	r2, [r4, #0]
90015fd2:	6123      	str	r3, [r4, #16]
90015fd4:	edc4 6a07 	vstr	s13, [r4, #28]
90015fd8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015fdc:	ee36 7a87 	vadd.f32	s14, s13, s14
90015fe0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015fe4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015fe8:	ee77 7a27 	vadd.f32	s15, s14, s15
90015fec:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015ff0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015ff4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015ff8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015ffc:	ee37 7a27 	vadd.f32	s14, s14, s15
90016000:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90016004:	68a9      	ldr	r1, [r5, #8]
90016006:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001600a:	ed95 6a08 	vldr	s12, [r5, #32]
9001600e:	edd5 6a07 	vldr	s13, [r5, #28]
90016012:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016016:	ee76 6a86 	vadd.f32	s13, s13, s12
9001601a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001601e:	e9d5 2300 	ldrd	r2, r3, [r5]
90016022:	edc5 6a07 	vstr	s13, [r5, #28]
90016026:	441a      	add	r2, r3
90016028:	696b      	ldr	r3, [r5, #20]
9001602a:	3301      	adds	r3, #1
9001602c:	602a      	str	r2, [r5, #0]
9001602e:	616b      	str	r3, [r5, #20]
90016030:	69ab      	ldr	r3, [r5, #24]
90016032:	3b01      	subs	r3, #1
90016034:	61ab      	str	r3, [r5, #24]
90016036:	692b      	ldr	r3, [r5, #16]
90016038:	440b      	add	r3, r1
9001603a:	68e9      	ldr	r1, [r5, #12]
9001603c:	428b      	cmp	r3, r1
9001603e:	612b      	str	r3, [r5, #16]
90016040:	db15      	blt.n	9001606e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90016042:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90016046:	3201      	adds	r2, #1
90016048:	1a5b      	subs	r3, r3, r1
9001604a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001604e:	602a      	str	r2, [r5, #0]
90016050:	612b      	str	r3, [r5, #16]
90016052:	edc5 6a07 	vstr	s13, [r5, #28]
90016056:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001605a:	ee36 7a87 	vadd.f32	s14, s13, s14
9001605e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016062:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90016066:	ee77 7a27 	vadd.f32	s15, s14, s15
9001606a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001606e:	3f01      	subs	r7, #1
90016070:	e757      	b.n	90015f22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90016072:	ad39      	add	r5, sp, #228	@ 0xe4
90016074:	ac19      	add	r4, sp, #100	@ 0x64
90016076:	e72d      	b.n	90015ed4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90016078:	4613      	mov	r3, r2
9001607a:	e744      	b.n	90015f06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
9001607c:	4613      	mov	r3, r2
9001607e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90016080:	469e      	mov	lr, r3
90016082:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90016086:	461f      	mov	r7, r3
90016088:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
9001608c:	f04f 0900 	mov.w	r9, #0
90016090:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90016094:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90016098:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
9001609c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
900160a0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
900160a4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
900160a6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
900160aa:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900160ae:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900160b2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900160b6:	960e      	str	r6, [sp, #56]	@ 0x38
900160b8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900160bc:	2f00      	cmp	r7, #0
900160be:	d146      	bne.n	9001614e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900160c0:	449c      	add	ip, r3
900160c2:	1ad7      	subs	r7, r2, r3
900160c4:	f1b9 0f00 	cmp.w	r9, #0
900160c8:	d009      	beq.n	900160de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900160ca:	9039      	str	r0, [sp, #228]	@ 0xe4
900160cc:	913d      	str	r1, [sp, #244]	@ 0xf4
900160ce:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900160d2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900160d6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900160da:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900160de:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900160e0:	f04f 0800 	mov.w	r8, #0
900160e4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900160e8:	910e      	str	r1, [sp, #56]	@ 0x38
900160ea:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900160ee:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900160f2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900160f6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900160fa:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900160fe:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90016102:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90016106:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
9001610a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001610e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90016112:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90016116:	f1be 0f00 	cmp.w	lr, #0
9001611a:	d030      	beq.n	9001617e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9001611c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001611e:	4450      	add	r0, sl
90016120:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016124:	4431      	add	r1, r6
90016126:	ee37 7a04 	vadd.f32	s14, s14, s8
9001612a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001612e:	4549      	cmp	r1, r9
90016130:	db08      	blt.n	90016144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90016132:	ee77 7a85 	vadd.f32	s15, s15, s10
90016136:	3001      	adds	r0, #1
90016138:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001613c:	eba1 0109 	sub.w	r1, r1, r9
90016140:	ee37 7a06 	vadd.f32	s14, s14, s12
90016144:	f10e 3eff 	add.w	lr, lr, #4294967295
90016148:	f04f 0801 	mov.w	r8, #1
9001614c:	e7e3      	b.n	90016116 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001614e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90016150:	4450      	add	r0, sl
90016152:	ee37 7a24 	vadd.f32	s14, s14, s9
90016156:	4431      	add	r1, r6
90016158:	ee77 7a84 	vadd.f32	s15, s15, s8
9001615c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016160:	4541      	cmp	r1, r8
90016162:	db08      	blt.n	90016176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90016164:	ee76 6a85 	vadd.f32	s13, s13, s10
90016168:	3001      	adds	r0, #1
9001616a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001616e:	eba1 0108 	sub.w	r1, r1, r8
90016172:	ee77 7a86 	vadd.f32	s15, s15, s12
90016176:	3f01      	subs	r7, #1
90016178:	f04f 0901 	mov.w	r9, #1
9001617c:	e79e      	b.n	900160bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001617e:	449c      	add	ip, r3
90016180:	1aff      	subs	r7, r7, r3
90016182:	f1b8 0f00 	cmp.w	r8, #0
90016186:	d009      	beq.n	9001619c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90016188:	9019      	str	r0, [sp, #100]	@ 0x64
9001618a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
9001618e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90016192:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90016196:	911d      	str	r1, [sp, #116]	@ 0x74
90016198:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
9001619c:	1ad2      	subs	r2, r2, r3
9001619e:	e6b5      	b.n	90015f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900161a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900161a2:	681b      	ldr	r3, [r3, #0]
900161a4:	b923      	cbnz	r3, 900161b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900161a6:	4b04      	ldr	r3, [pc, #16]	@ (900161b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900161a8:	6818      	ldr	r0, [r3, #0]
900161aa:	6803      	ldr	r3, [r0, #0]
900161ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900161ae:	4798      	blx	r3
900161b0:	b05b      	add	sp, #364	@ 0x16c
900161b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900161b6:	bf00      	nop
900161b8:	24021844 	.word	0x24021844

900161bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900161bc:	b570      	push	{r4, r5, r6, lr}
900161be:	4604      	mov	r4, r0
900161c0:	2500      	movs	r5, #0
900161c2:	9805      	ldr	r0, [sp, #20]
900161c4:	f89d 601c 	ldrb.w	r6, [sp, #28]
900161c8:	6061      	str	r1, [r4, #4]
900161ca:	8263      	strh	r3, [r4, #18]
900161cc:	f89d 1010 	ldrb.w	r1, [sp, #16]
900161d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900161d4:	8025      	strh	r5, [r4, #0]
900161d6:	7221      	strb	r1, [r4, #8]
900161d8:	7266      	strb	r6, [r4, #9]
900161da:	60e0      	str	r0, [r4, #12]
900161dc:	8222      	strh	r2, [r4, #16]
900161de:	82a3      	strh	r3, [r4, #20]
900161e0:	82e5      	strh	r5, [r4, #22]
900161e2:	8325      	strh	r5, [r4, #24]
900161e4:	8365      	strh	r5, [r4, #26]
900161e6:	83a5      	strh	r5, [r4, #28]
900161e8:	83e5      	strh	r5, [r4, #30]
900161ea:	8425      	strh	r5, [r4, #32]
900161ec:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900161f0:	b32e      	cbz	r6, 9001623e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900161f2:	6803      	ldr	r3, [r0, #0]
900161f4:	695b      	ldr	r3, [r3, #20]
900161f6:	4798      	blx	r3
900161f8:	4606      	mov	r6, r0
900161fa:	b300      	cbz	r0, 9001623e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900161fc:	68e0      	ldr	r0, [r4, #12]
900161fe:	4631      	mov	r1, r6
90016200:	6803      	ldr	r3, [r0, #0]
90016202:	68db      	ldr	r3, [r3, #12]
90016204:	4798      	blx	r3
90016206:	4605      	mov	r5, r0
90016208:	b1c8      	cbz	r0, 9001623e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001620a:	7b43      	ldrb	r3, [r0, #13]
9001620c:	7a82      	ldrb	r2, [r0, #10]
9001620e:	005b      	lsls	r3, r3, #1
90016210:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016214:	4313      	orrs	r3, r2
90016216:	8423      	strh	r3, [r4, #32]
90016218:	7a63      	ldrb	r3, [r4, #9]
9001621a:	2b06      	cmp	r3, #6
9001621c:	d10f      	bne.n	9001623e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001621e:	68e0      	ldr	r0, [r4, #12]
90016220:	462a      	mov	r2, r5
90016222:	4631      	mov	r1, r6
90016224:	6803      	ldr	r3, [r0, #0]
90016226:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016228:	4798      	blx	r3
9001622a:	7b6b      	ldrb	r3, [r5, #13]
9001622c:	005b      	lsls	r3, r3, #1
9001622e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90016232:	7aab      	ldrb	r3, [r5, #10]
90016234:	4313      	orrs	r3, r2
90016236:	4418      	add	r0, r3
90016238:	8c23      	ldrh	r3, [r4, #32]
9001623a:	4418      	add	r0, r3
9001623c:	8420      	strh	r0, [r4, #32]
9001623e:	4620      	mov	r0, r4
90016240:	bd70      	pop	{r4, r5, r6, pc}

90016242 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90016242:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016246:	2400      	movs	r4, #0
90016248:	b085      	sub	sp, #20
9001624a:	4681      	mov	r9, r0
9001624c:	4688      	mov	r8, r1
9001624e:	4692      	mov	sl, r2
90016250:	469b      	mov	fp, r3
90016252:	4627      	mov	r7, r4
90016254:	4625      	mov	r5, r4
90016256:	4626      	mov	r6, r4
90016258:	4554      	cmp	r4, sl
9001625a:	da2a      	bge.n	900162b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001625c:	2300      	movs	r3, #0
9001625e:	9303      	str	r3, [sp, #12]
90016260:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016264:	429d      	cmp	r5, r3
90016266:	d004      	beq.n	90016272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90016268:	f242 030b 	movw	r3, #8203	@ 0x200b
9001626c:	429d      	cmp	r5, r3
9001626e:	bf18      	it	ne
90016270:	462f      	movne	r7, r5
90016272:	ab03      	add	r3, sp, #12
90016274:	4642      	mov	r2, r8
90016276:	4659      	mov	r1, fp
90016278:	4648      	mov	r0, r9
9001627a:	f003 fcf9 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001627e:	4605      	mov	r5, r0
90016280:	b1b8      	cbz	r0, 900162b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90016282:	280a      	cmp	r0, #10
90016284:	d015      	beq.n	900162b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90016286:	9a03      	ldr	r2, [sp, #12]
90016288:	b18a      	cbz	r2, 900162ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001628a:	7b50      	ldrb	r0, [r2, #13]
9001628c:	4639      	mov	r1, r7
9001628e:	7a93      	ldrb	r3, [r2, #10]
90016290:	0040      	lsls	r0, r0, #1
90016292:	8895      	ldrh	r5, [r2, #4]
90016294:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90016298:	4303      	orrs	r3, r0
9001629a:	4640      	mov	r0, r8
9001629c:	9301      	str	r3, [sp, #4]
9001629e:	f8d8 3000 	ldr.w	r3, [r8]
900162a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900162a4:	4798      	blx	r3
900162a6:	9b01      	ldr	r3, [sp, #4]
900162a8:	4418      	add	r0, r3
900162aa:	4406      	add	r6, r0
900162ac:	b2b6      	uxth	r6, r6
900162ae:	3401      	adds	r4, #1
900162b0:	e7d2      	b.n	90016258 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900162b2:	4630      	mov	r0, r6
900162b4:	b005      	add	sp, #20
900162b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900162ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900162ba:	2a02      	cmp	r2, #2
900162bc:	b530      	push	{r4, r5, lr}
900162be:	d011      	beq.n	900162e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900162c0:	2a03      	cmp	r2, #3
900162c2:	d01c      	beq.n	900162fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900162c4:	2a01      	cmp	r2, #1
900162c6:	d10c      	bne.n	900162e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900162c8:	888b      	ldrh	r3, [r1, #4]
900162ca:	8801      	ldrh	r1, [r0, #0]
900162cc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900162d0:	1a5b      	subs	r3, r3, r1
900162d2:	8844      	ldrh	r4, [r0, #2]
900162d4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900162d8:	1a9b      	subs	r3, r3, r2
900162da:	8004      	strh	r4, [r0, #0]
900162dc:	8081      	strh	r1, [r0, #4]
900162de:	8043      	strh	r3, [r0, #2]
900162e0:	80c2      	strh	r2, [r0, #6]
900162e2:	bd30      	pop	{r4, r5, pc}
900162e4:	88cb      	ldrh	r3, [r1, #6]
900162e6:	8842      	ldrh	r2, [r0, #2]
900162e8:	1a9b      	subs	r3, r3, r2
900162ea:	88c2      	ldrh	r2, [r0, #6]
900162ec:	1a9b      	subs	r3, r3, r2
900162ee:	888a      	ldrh	r2, [r1, #4]
900162f0:	8801      	ldrh	r1, [r0, #0]
900162f2:	8043      	strh	r3, [r0, #2]
900162f4:	1a52      	subs	r2, r2, r1
900162f6:	8881      	ldrh	r1, [r0, #4]
900162f8:	1a52      	subs	r2, r2, r1
900162fa:	8002      	strh	r2, [r0, #0]
900162fc:	e7f1      	b.n	900162e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900162fe:	88cb      	ldrh	r3, [r1, #6]
90016300:	8841      	ldrh	r1, [r0, #2]
90016302:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90016306:	1a5b      	subs	r3, r3, r1
90016308:	f9b0 5000 	ldrsh.w	r5, [r0]
9001630c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90016310:	1a9b      	subs	r3, r3, r2
90016312:	8045      	strh	r5, [r0, #2]
90016314:	8082      	strh	r2, [r0, #4]
90016316:	8003      	strh	r3, [r0, #0]
90016318:	80c4      	strh	r4, [r0, #6]
9001631a:	e7e2      	b.n	900162e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

9001631c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
9001631c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016320:	b09f      	sub	sp, #124	@ 0x7c
90016322:	920f      	str	r2, [sp, #60]	@ 0x3c
90016324:	9312      	str	r3, [sp, #72]	@ 0x48
90016326:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016328:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001632a:	8812      	ldrh	r2, [r2, #0]
9001632c:	889b      	ldrh	r3, [r3, #4]
9001632e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90016330:	4413      	add	r3, r2
90016332:	900e      	str	r0, [sp, #56]	@ 0x38
90016334:	6828      	ldr	r0, [r5, #0]
90016336:	b21b      	sxth	r3, r3
90016338:	9117      	str	r1, [sp, #92]	@ 0x5c
9001633a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
9001633e:	9311      	str	r3, [sp, #68]	@ 0x44
90016340:	6803      	ldr	r3, [r0, #0]
90016342:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90016346:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90016348:	4798      	blx	r3
9001634a:	682b      	ldr	r3, [r5, #0]
9001634c:	9013      	str	r0, [sp, #76]	@ 0x4c
9001634e:	7b1a      	ldrb	r2, [r3, #12]
90016350:	7adb      	ldrb	r3, [r3, #11]
90016352:	9215      	str	r2, [sp, #84]	@ 0x54
90016354:	9316      	str	r3, [sp, #88]	@ 0x58
90016356:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001635a:	2c00      	cmp	r4, #0
9001635c:	d067      	beq.n	9001642e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9001635e:	7c2b      	ldrb	r3, [r5, #16]
90016360:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90016362:	2b06      	cmp	r3, #6
90016364:	bf14      	ite	ne
90016366:	2301      	movne	r3, #1
90016368:	2302      	moveq	r3, #2
9001636a:	4413      	add	r3, r2
9001636c:	f04f 0900 	mov.w	r9, #0
90016370:	9310      	str	r3, [sp, #64]	@ 0x40
90016372:	464c      	mov	r4, r9
90016374:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90016378:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
9001637c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001637e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016380:	4293      	cmp	r3, r2
90016382:	f280 808b 	bge.w	9001649c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90016386:	2300      	movs	r3, #0
90016388:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
9001638c:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90016390:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016394:	429c      	cmp	r4, r3
90016396:	d006      	beq.n	900163a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90016398:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001639a:	f242 020b 	movw	r2, #8203	@ 0x200b
9001639e:	4294      	cmp	r4, r2
900163a0:	bf18      	it	ne
900163a2:	4623      	movne	r3, r4
900163a4:	930c      	str	r3, [sp, #48]	@ 0x30
900163a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900163a8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
900163aa:	682a      	ldr	r2, [r5, #0]
900163ac:	428b      	cmp	r3, r1
900163ae:	db40      	blt.n	90016432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900163b0:	6813      	ldr	r3, [r2, #0]
900163b2:	4610      	mov	r0, r2
900163b4:	695b      	ldr	r3, [r3, #20]
900163b6:	4798      	blx	r3
900163b8:	4604      	mov	r4, r0
900163ba:	6828      	ldr	r0, [r5, #0]
900163bc:	aa1d      	add	r2, sp, #116	@ 0x74
900163be:	4621      	mov	r1, r4
900163c0:	6803      	ldr	r3, [r0, #0]
900163c2:	689f      	ldr	r7, [r3, #8]
900163c4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900163c8:	47b8      	blx	r7
900163ca:	901c      	str	r0, [sp, #112]	@ 0x70
900163cc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900163d0:	429c      	cmp	r4, r3
900163d2:	f000 80eb 	beq.w	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900163d6:	f242 030b 	movw	r3, #8203	@ 0x200b
900163da:	429c      	cmp	r4, r3
900163dc:	f000 80e6 	beq.w	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900163e0:	2c00      	cmp	r4, #0
900163e2:	f000 810d 	beq.w	90016600 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900163e6:	2c0a      	cmp	r4, #10
900163e8:	d05e      	beq.n	900164a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900163ea:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900163ec:	b36a      	cbz	r2, 9001644a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900163ee:	8894      	ldrh	r4, [r2, #4]
900163f0:	f1bb 0f00 	cmp.w	fp, #0
900163f4:	d03a      	beq.n	9001646c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900163f6:	f892 900d 	ldrb.w	r9, [r2, #13]
900163fa:	f1bb 0f01 	cmp.w	fp, #1
900163fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
90016402:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90016406:	f892 900a 	ldrb.w	r9, [r2, #10]
9001640a:	ea49 0903 	orr.w	r9, r9, r3
9001640e:	d133      	bne.n	90016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90016410:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016412:	eba6 0609 	sub.w	r6, r6, r9
90016416:	2b00      	cmp	r3, #0
90016418:	d14d      	bne.n	900164b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001641a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9001641c:	eb09 0306 	add.w	r3, r9, r6
90016420:	4413      	add	r3, r2
90016422:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016424:	f9b2 2000 	ldrsh.w	r2, [r2]
90016428:	4293      	cmp	r3, r2
9001642a:	da4e      	bge.n	900164ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
9001642c:	e036      	b.n	9001649c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001642e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90016430:	e79c      	b.n	9001636c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90016432:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90016436:	4659      	mov	r1, fp
90016438:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001643a:	9301      	str	r3, [sp, #4]
9001643c:	ab1d      	add	r3, sp, #116	@ 0x74
9001643e:	9300      	str	r3, [sp, #0]
90016440:	ab1c      	add	r3, sp, #112	@ 0x70
90016442:	f003 fc5e 	bl	90019d02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90016446:	4604      	mov	r4, r0
90016448:	e7c0      	b.n	900163cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001644a:	6828      	ldr	r0, [r5, #0]
9001644c:	6803      	ldr	r3, [r0, #0]
9001644e:	691b      	ldr	r3, [r3, #16]
90016450:	4798      	blx	r3
90016452:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016456:	4298      	cmp	r0, r3
90016458:	f000 80a8 	beq.w	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001645c:	f242 030b 	movw	r3, #8203	@ 0x200b
90016460:	4298      	cmp	r0, r3
90016462:	f000 80a3 	beq.w	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016466:	f1bb 0f00 	cmp.w	fp, #0
9001646a:	d100      	bne.n	9001646e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
9001646c:	444e      	add	r6, r9
9001646e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016470:	2a00      	cmp	r2, #0
90016472:	d1c0      	bne.n	900163f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90016474:	4691      	mov	r9, r2
90016476:	e099      	b.n	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016478:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001647a:	2b00      	cmp	r3, #0
9001647c:	f000 80c2 	beq.w	90016604 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90016480:	f1bb 0f00 	cmp.w	fp, #0
90016484:	d117      	bne.n	900164b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90016486:	6828      	ldr	r0, [r5, #0]
90016488:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001648a:	6803      	ldr	r3, [r0, #0]
9001648c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001648e:	4798      	blx	r3
90016490:	4406      	add	r6, r0
90016492:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90016494:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90016496:	1af3      	subs	r3, r6, r3
90016498:	4293      	cmp	r3, r2
9001649a:	dd16      	ble.n	900164ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
9001649c:	2c00      	cmp	r4, #0
9001649e:	f000 80af 	beq.w	90016600 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900164a2:	2c0a      	cmp	r4, #10
900164a4:	f040 809d 	bne.w	900165e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900164a8:	240a      	movs	r4, #10
900164aa:	fab4 f084 	clz	r0, r4
900164ae:	0940      	lsrs	r0, r0, #5
900164b0:	b01f      	add	sp, #124	@ 0x7c
900164b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900164b6:	6828      	ldr	r0, [r5, #0]
900164b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900164ba:	6803      	ldr	r3, [r0, #0]
900164bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900164be:	4798      	blx	r3
900164c0:	f1bb 0f01 	cmp.w	fp, #1
900164c4:	eba6 0600 	sub.w	r6, r6, r0
900164c8:	d0a7      	beq.n	9001641a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900164ca:	981c      	ldr	r0, [sp, #112]	@ 0x70
900164cc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900164ce:	f990 1009 	ldrsb.w	r1, [r0, #9]
900164d2:	f9b3 8000 	ldrsh.w	r8, [r3]
900164d6:	7b43      	ldrb	r3, [r0, #13]
900164d8:	4431      	add	r1, r6
900164da:	015b      	lsls	r3, r3, #5
900164dc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900164e0:	7983      	ldrb	r3, [r0, #6]
900164e2:	4313      	orrs	r3, r2
900164e4:	440b      	add	r3, r1
900164e6:	4543      	cmp	r3, r8
900164e8:	db60      	blt.n	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900164ea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900164ec:	4299      	cmp	r1, r3
900164ee:	da5d      	bge.n	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900164f0:	6828      	ldr	r0, [r5, #0]
900164f2:	45b0      	cmp	r8, r6
900164f4:	6803      	ldr	r3, [r0, #0]
900164f6:	bfcc      	ite	gt
900164f8:	eba8 0806 	subgt.w	r8, r8, r6
900164fc:	f04f 0800 	movle.w	r8, #0
90016500:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016502:	bfc8      	it	gt
90016504:	fa1f f888 	uxthgt.w	r8, r8
90016508:	4798      	blx	r3
9001650a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001650c:	7b53      	ldrb	r3, [r2, #13]
9001650e:	00d9      	lsls	r1, r3, #3
90016510:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90016514:	7a11      	ldrb	r1, [r2, #8]
90016516:	4339      	orrs	r1, r7
90016518:	065f      	lsls	r7, r3, #25
9001651a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001651c:	bf48      	it	mi
9001651e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90016522:	4407      	add	r7, r0
90016524:	bf48      	it	mi
90016526:	b209      	sxthmi	r1, r1
90016528:	1a7f      	subs	r7, r7, r1
9001652a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
9001652c:	b2bf      	uxth	r7, r7
9001652e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90016532:	fa0f fa87 	sxth.w	sl, r7
90016536:	4551      	cmp	r1, sl
90016538:	dd3c      	ble.n	900165b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001653a:	011b      	lsls	r3, r3, #4
9001653c:	79d0      	ldrb	r0, [r2, #7]
9001653e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90016542:	4303      	orrs	r3, r0
90016544:	449a      	add	sl, r3
90016546:	4551      	cmp	r1, sl
90016548:	dc30      	bgt.n	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001654a:	1bcf      	subs	r7, r1, r7
9001654c:	468a      	mov	sl, r1
9001654e:	b23f      	sxth	r7, r7
90016550:	9219      	str	r2, [sp, #100]	@ 0x64
90016552:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90016554:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90016556:	6828      	ldr	r0, [r5, #0]
90016558:	2a00      	cmp	r2, #0
9001655a:	d12d      	bne.n	900165b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
9001655c:	9318      	str	r3, [sp, #96]	@ 0x60
9001655e:	b2bf      	uxth	r7, r7
90016560:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90016562:	6819      	ldr	r1, [r3, #0]
90016564:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90016566:	6801      	ldr	r1, [r0, #0]
90016568:	9314      	str	r3, [sp, #80]	@ 0x50
9001656a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
9001656c:	4788      	blx	r1
9001656e:	79a9      	ldrb	r1, [r5, #6]
90016570:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90016572:	910b      	str	r1, [sp, #44]	@ 0x2c
90016574:	7ba9      	ldrb	r1, [r5, #14]
90016576:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90016578:	910a      	str	r1, [sp, #40]	@ 0x28
9001657a:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
9001657e:	9109      	str	r1, [sp, #36]	@ 0x24
90016580:	68a9      	ldr	r1, [r5, #8]
90016582:	9306      	str	r3, [sp, #24]
90016584:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90016586:	9205      	str	r2, [sp, #20]
90016588:	9304      	str	r3, [sp, #16]
9001658a:	f8cd a004 	str.w	sl, [sp, #4]
9001658e:	e9cd 8702 	strd	r8, r7, [sp, #8]
90016592:	44b0      	add	r8, r6
90016594:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90016596:	fa0f f388 	sxth.w	r3, r8
9001659a:	9300      	str	r3, [sp, #0]
9001659c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001659e:	e9cd 0107 	strd	r0, r1, [sp, #28]
900165a2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900165a4:	681a      	ldr	r2, [r3, #0]
900165a6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900165a8:	685b      	ldr	r3, [r3, #4]
900165aa:	47b8      	blx	r7
900165ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900165ae:	3301      	adds	r3, #1
900165b0:	930d      	str	r3, [sp, #52]	@ 0x34
900165b2:	e6e3      	b.n	9001637c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900165b4:	2700      	movs	r7, #0
900165b6:	e7cb      	b.n	90016550 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900165b8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900165ba:	f8d2 c008 	ldr.w	ip, [r2, #8]
900165be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900165c0:	f8dc 1000 	ldr.w	r1, [ip]
900165c4:	e9cd 6204 	strd	r6, r2, [sp, #16]
900165c8:	79aa      	ldrb	r2, [r5, #6]
900165ca:	9203      	str	r2, [sp, #12]
900165cc:	7baa      	ldrb	r2, [r5, #14]
900165ce:	9202      	str	r2, [sp, #8]
900165d0:	68aa      	ldr	r2, [r5, #8]
900165d2:	e9cd 0200 	strd	r0, r2, [sp]
900165d6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900165d8:	4660      	mov	r0, ip
900165da:	688f      	ldr	r7, [r1, #8]
900165dc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900165de:	47b8      	blx	r7
900165e0:	e7e4      	b.n	900165ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900165e2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900165e4:	3501      	adds	r5, #1
900165e6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900165e8:	429d      	cmp	r5, r3
900165ea:	f6bf af5e 	bge.w	900164aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900165ee:	4659      	mov	r1, fp
900165f0:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900165f2:	f7ee fda5 	bl	90005140 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900165f6:	4604      	mov	r4, r0
900165f8:	b110      	cbz	r0, 90016600 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900165fa:	280a      	cmp	r0, #10
900165fc:	d1f2      	bne.n	900165e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900165fe:	e753      	b.n	900164a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90016600:	2400      	movs	r4, #0
90016602:	e752      	b.n	900164aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90016604:	f1bb 0f00 	cmp.w	fp, #0
90016608:	f43f af43 	beq.w	90016492 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
9001660c:	e75d      	b.n	900164ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

9001660e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001660e:	b530      	push	{r4, r5, lr}
90016610:	8ac4      	ldrh	r4, [r0, #22]
90016612:	8b45      	ldrh	r5, [r0, #26]
90016614:	8343      	strh	r3, [r0, #26]
90016616:	442c      	add	r4, r5
90016618:	1ae4      	subs	r4, r4, r3
9001661a:	8b83      	ldrh	r3, [r0, #28]
9001661c:	82c4      	strh	r4, [r0, #22]
9001661e:	8b04      	ldrh	r4, [r0, #24]
90016620:	4422      	add	r2, r4
90016622:	440c      	add	r4, r1
90016624:	1a59      	subs	r1, r3, r1
90016626:	83c2      	strh	r2, [r0, #30]
90016628:	8304      	strh	r4, [r0, #24]
9001662a:	8381      	strh	r1, [r0, #28]
9001662c:	bd30      	pop	{r4, r5, pc}

9001662e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001662e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016632:	4604      	mov	r4, r0
90016634:	8a47      	ldrh	r7, [r0, #18]
90016636:	68c0      	ldr	r0, [r0, #12]
90016638:	b085      	sub	sp, #20
9001663a:	6803      	ldr	r3, [r0, #0]
9001663c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001663e:	4798      	blx	r3
90016640:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90016644:	7a63      	ldrb	r3, [r4, #9]
90016646:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001664a:	3b01      	subs	r3, #1
9001664c:	42b7      	cmp	r7, r6
9001664e:	bfac      	ite	ge
90016650:	f04f 0900 	movge.w	r9, #0
90016654:	f04f 0901 	movlt.w	r9, #1
90016658:	2b05      	cmp	r3, #5
9001665a:	d804      	bhi.n	90016666 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001665c:	e8df f003 	tbb	[pc, r3]
90016660:	470f0854 	.word	0x470f0854
90016664:	4c4c      	.short	0x4c4c
90016666:	2500      	movs	r5, #0
90016668:	46a9      	mov	r9, r5
9001666a:	462e      	mov	r6, r5
9001666c:	462f      	mov	r7, r5
9001666e:	e00e      	b.n	9001668e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016670:	42b7      	cmp	r7, r6
90016672:	f04f 0500 	mov.w	r5, #0
90016676:	bfb4      	ite	lt
90016678:	2600      	movlt	r6, #0
9001667a:	2601      	movge	r6, #1
9001667c:	e7f6      	b.n	9001666c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001667e:	42b7      	cmp	r7, r6
90016680:	464d      	mov	r5, r9
90016682:	f04f 0900 	mov.w	r9, #0
90016686:	bfb4      	ite	lt
90016688:	2600      	movlt	r6, #0
9001668a:	2601      	movge	r6, #1
9001668c:	464f      	mov	r7, r9
9001668e:	f04f 0800 	mov.w	r8, #0
90016692:	f8a4 8016 	strh.w	r8, [r4, #22]
90016696:	f8a4 8018 	strh.w	r8, [r4, #24]
9001669a:	f8cd 8004 	str.w	r8, [sp, #4]
9001669e:	2300      	movs	r3, #0
900166a0:	9303      	str	r3, [sp, #12]
900166a2:	8823      	ldrh	r3, [r4, #0]
900166a4:	2b20      	cmp	r3, #32
900166a6:	d033      	beq.n	90016710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900166a8:	f242 010b 	movw	r1, #8203	@ 0x200b
900166ac:	1a5a      	subs	r2, r3, r1
900166ae:	f1d2 0a00 	rsbs	sl, r2, #0
900166b2:	eb4a 0a02 	adc.w	sl, sl, r2
900166b6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900166ba:	4293      	cmp	r3, r2
900166bc:	d008      	beq.n	900166d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900166be:	428b      	cmp	r3, r1
900166c0:	9a01      	ldr	r2, [sp, #4]
900166c2:	bf0e      	itee	eq
900166c4:	f04f 0a01 	moveq.w	sl, #1
900166c8:	461a      	movne	r2, r3
900166ca:	f04f 0a00 	movne.w	sl, #0
900166ce:	9201      	str	r2, [sp, #4]
900166d0:	ab03      	add	r3, sp, #12
900166d2:	68e2      	ldr	r2, [r4, #12]
900166d4:	7a21      	ldrb	r1, [r4, #8]
900166d6:	6860      	ldr	r0, [r4, #4]
900166d8:	f003 faca 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900166dc:	8020      	strh	r0, [r4, #0]
900166de:	b9d8      	cbnz	r0, 90016718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900166e0:	8ba2      	ldrh	r2, [r4, #28]
900166e2:	2300      	movs	r3, #0
900166e4:	4611      	mov	r1, r2
900166e6:	4620      	mov	r0, r4
900166e8:	f7ff ff91 	bl	9001660e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900166ec:	e06e      	b.n	900167cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900166ee:	2500      	movs	r5, #0
900166f0:	2701      	movs	r7, #1
900166f2:	46a9      	mov	r9, r5
900166f4:	462e      	mov	r6, r5
900166f6:	e7ca      	b.n	9001668e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900166f8:	42b7      	cmp	r7, r6
900166fa:	f04f 0500 	mov.w	r5, #0
900166fe:	bfb4      	ite	lt
90016700:	2700      	movlt	r7, #0
90016702:	2701      	movge	r7, #1
90016704:	462e      	mov	r6, r5
90016706:	e7c2      	b.n	9001668e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016708:	2500      	movs	r5, #0
9001670a:	2601      	movs	r6, #1
9001670c:	46a9      	mov	r9, r5
9001670e:	e7ad      	b.n	9001666c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016710:	9301      	str	r3, [sp, #4]
90016712:	f04f 0a01 	mov.w	sl, #1
90016716:	e7db      	b.n	900166d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016718:	8b63      	ldrh	r3, [r4, #26]
9001671a:	280a      	cmp	r0, #10
9001671c:	f103 0301 	add.w	r3, r3, #1
90016720:	8363      	strh	r3, [r4, #26]
90016722:	d0dd      	beq.n	900166e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90016724:	9a03      	ldr	r2, [sp, #12]
90016726:	bb62      	cbnz	r2, 90016782 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90016728:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001672c:	4298      	cmp	r0, r3
9001672e:	d003      	beq.n	90016738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016730:	f242 030b 	movw	r3, #8203	@ 0x200b
90016734:	4298      	cmp	r0, r3
90016736:	d1b2      	bne.n	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016738:	8823      	ldrh	r3, [r4, #0]
9001673a:	8ba1      	ldrh	r1, [r4, #28]
9001673c:	2b20      	cmp	r3, #32
9001673e:	d003      	beq.n	90016748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90016740:	f242 000b 	movw	r0, #8203	@ 0x200b
90016744:	4283      	cmp	r3, r0
90016746:	d131      	bne.n	900167ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90016748:	f1ba 0f00 	cmp.w	sl, #0
9001674c:	bf0a      	itet	eq
9001674e:	4688      	moveq	r8, r1
90016750:	4650      	movne	r0, sl
90016752:	2001      	moveq	r0, #1
90016754:	440a      	add	r2, r1
90016756:	8b23      	ldrh	r3, [r4, #24]
90016758:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001675c:	b292      	uxth	r2, r2
9001675e:	83a2      	strh	r2, [r4, #28]
90016760:	4413      	add	r3, r2
90016762:	f1b9 0f00 	cmp.w	r9, #0
90016766:	d102      	bne.n	9001676e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90016768:	2d00      	cmp	r5, #0
9001676a:	d042      	beq.n	900167f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
9001676c:	b300      	cbz	r0, 900167b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001676e:	8c21      	ldrh	r1, [r4, #32]
90016770:	4419      	add	r1, r3
90016772:	458c      	cmp	ip, r1
90016774:	da37      	bge.n	900167e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90016776:	8ae1      	ldrh	r1, [r4, #22]
90016778:	2900      	cmp	r1, #0
9001677a:	d034      	beq.n	900167e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001677c:	4563      	cmp	r3, ip
9001677e:	dd8e      	ble.n	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016780:	e01d      	b.n	900167be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90016782:	8893      	ldrh	r3, [r2, #4]
90016784:	9901      	ldr	r1, [sp, #4]
90016786:	8023      	strh	r3, [r4, #0]
90016788:	f892 b00d 	ldrb.w	fp, [r2, #13]
9001678c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90016790:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90016794:	f892 b00a 	ldrb.w	fp, [r2, #10]
90016798:	ea4b 0b00 	orr.w	fp, fp, r0
9001679c:	68e0      	ldr	r0, [r4, #12]
9001679e:	6803      	ldr	r3, [r0, #0]
900167a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900167a2:	4798      	blx	r3
900167a4:	eb0b 0200 	add.w	r2, fp, r0
900167a8:	b292      	uxth	r2, r2
900167aa:	e7c5      	b.n	90016738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900167ac:	2000      	movs	r0, #0
900167ae:	e7d1      	b.n	90016754 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900167b0:	4563      	cmp	r3, ip
900167b2:	f77f af74 	ble.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900167b6:	8ae3      	ldrh	r3, [r4, #22]
900167b8:	2b00      	cmp	r3, #0
900167ba:	f43f af70 	beq.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900167be:	2301      	movs	r3, #1
900167c0:	8c22      	ldrh	r2, [r4, #32]
900167c2:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
900167c6:	8be3      	ldrh	r3, [r4, #30]
900167c8:	4413      	add	r3, r2
900167ca:	83e3      	strh	r3, [r4, #30]
900167cc:	68e0      	ldr	r0, [r4, #12]
900167ce:	6803      	ldr	r3, [r0, #0]
900167d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900167d2:	4798      	blx	r3
900167d4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900167d8:	4418      	add	r0, r3
900167da:	8a63      	ldrh	r3, [r4, #18]
900167dc:	1a18      	subs	r0, r3, r0
900167de:	8260      	strh	r0, [r4, #18]
900167e0:	b005      	add	sp, #20
900167e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167e6:	2300      	movs	r3, #0
900167e8:	4611      	mov	r1, r2
900167ea:	4620      	mov	r0, r4
900167ec:	f7ff ff0f 	bl	9001660e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900167f0:	e755      	b.n	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900167f2:	4563      	cmp	r3, ip
900167f4:	dd14      	ble.n	90016820 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900167f6:	b117      	cbz	r7, 900167fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900167f8:	2301      	movs	r3, #1
900167fa:	460a      	mov	r2, r1
900167fc:	e772      	b.n	900166e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900167fe:	2e00      	cmp	r6, #0
90016800:	f43f af4d 	beq.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016804:	2800      	cmp	r0, #0
90016806:	f47f af4a 	bne.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001680a:	f1ba 0f00 	cmp.w	sl, #0
9001680e:	d002      	beq.n	90016816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016810:	2301      	movs	r3, #1
90016812:	4642      	mov	r2, r8
90016814:	e767      	b.n	900166e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90016816:	8ae3      	ldrh	r3, [r4, #22]
90016818:	2b00      	cmp	r3, #0
9001681a:	f43f af40 	beq.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001681e:	e7d5      	b.n	900167cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016820:	2800      	cmp	r0, #0
90016822:	f47f af3c 	bne.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016826:	f1ba 0f00 	cmp.w	sl, #0
9001682a:	f43f af38 	beq.w	9001669e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001682e:	2301      	movs	r3, #1
90016830:	4642      	mov	r2, r8
90016832:	e7da      	b.n	900167ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90016834 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90016834:	b5f0      	push	{r4, r5, r6, r7, lr}
90016836:	4605      	mov	r5, r0
90016838:	b08f      	sub	sp, #60	@ 0x3c
9001683a:	4617      	mov	r7, r2
9001683c:	461c      	mov	r4, r3
9001683e:	460e      	mov	r6, r1
90016840:	b1d1      	cbz	r1, 90016878 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90016842:	681b      	ldr	r3, [r3, #0]
90016844:	4620      	mov	r0, r4
90016846:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016848:	4798      	blx	r3
9001684a:	4240      	negs	r0, r0
9001684c:	9603      	str	r6, [sp, #12]
9001684e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90016852:	b200      	sxth	r0, r0
90016854:	9700      	str	r7, [sp, #0]
90016856:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001685a:	4629      	mov	r1, r5
9001685c:	e9cd 4001 	strd	r4, r0, [sp, #4]
90016860:	2401      	movs	r4, #1
90016862:	a805      	add	r0, sp, #20
90016864:	f7ff fcaa 	bl	900161bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90016868:	a805      	add	r0, sp, #20
9001686a:	f7ff fee0 	bl	9001662e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001686e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016872:	b163      	cbz	r3, 9001688e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90016874:	3401      	adds	r4, #1
90016876:	e7f7      	b.n	90016868 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90016878:	2401      	movs	r4, #1
9001687a:	f003 fac5 	bl	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001687e:	280a      	cmp	r0, #10
90016880:	4628      	mov	r0, r5
90016882:	bf08      	it	eq
90016884:	3401      	addeq	r4, #1
90016886:	f003 fabf 	bl	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001688a:	2800      	cmp	r0, #0
9001688c:	d1f7      	bne.n	9001687e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
9001688e:	b2a0      	uxth	r0, r4
90016890:	b00f      	add	sp, #60	@ 0x3c
90016892:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016894 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90016894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016898:	b0e3      	sub	sp, #396	@ 0x18c
9001689a:	461c      	mov	r4, r3
9001689c:	4683      	mov	fp, r0
9001689e:	4688      	mov	r8, r1
900168a0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
900168a2:	2b00      	cmp	r3, #0
900168a4:	f000 8112 	beq.w	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900168a8:	6823      	ldr	r3, [r4, #0]
900168aa:	2b00      	cmp	r3, #0
900168ac:	f000 810e 	beq.w	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900168b0:	7ba3      	ldrb	r3, [r4, #14]
900168b2:	2b00      	cmp	r3, #0
900168b4:	f000 810a 	beq.w	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900168b8:	ad0a      	add	r5, sp, #40	@ 0x28
900168ba:	6810      	ldr	r0, [r2, #0]
900168bc:	6851      	ldr	r1, [r2, #4]
900168be:	462b      	mov	r3, r5
900168c0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900168c4:	c303      	stmia	r3!, {r0, r1}
900168c6:	2100      	movs	r1, #0
900168c8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900168cc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900168d0:	4628      	mov	r0, r5
900168d2:	910c      	str	r1, [sp, #48]	@ 0x30
900168d4:	a90c      	add	r1, sp, #48	@ 0x30
900168d6:	79a2      	ldrb	r2, [r4, #6]
900168d8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900168dc:	f7ff fced 	bl	900162ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900168e0:	a90c      	add	r1, sp, #48	@ 0x30
900168e2:	79a2      	ldrb	r2, [r4, #6]
900168e4:	4608      	mov	r0, r1
900168e6:	f7ff fce8 	bl	900162ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900168ea:	a817      	add	r0, sp, #92	@ 0x5c
900168ec:	f002 fe32 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
900168f0:	6820      	ldr	r0, [r4, #0]
900168f2:	6803      	ldr	r3, [r0, #0]
900168f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900168f6:	4798      	blx	r3
900168f8:	4606      	mov	r6, r0
900168fa:	6820      	ldr	r0, [r4, #0]
900168fc:	6803      	ldr	r3, [r0, #0]
900168fe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016900:	4798      	blx	r3
90016902:	4633      	mov	r3, r6
90016904:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90016906:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016908:	9000      	str	r0, [sp, #0]
9001690a:	a817      	add	r0, sp, #92	@ 0x5c
9001690c:	f002 fe7d 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016910:	6820      	ldr	r0, [r4, #0]
90016912:	f894 a004 	ldrb.w	sl, [r4, #4]
90016916:	6803      	ldr	r3, [r0, #0]
90016918:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001691a:	4798      	blx	r3
9001691c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016920:	6823      	ldr	r3, [r4, #0]
90016922:	4607      	mov	r7, r0
90016924:	4406      	add	r6, r0
90016926:	a830      	add	r0, sp, #192	@ 0xc0
90016928:	f893 9009 	ldrb.w	r9, [r3, #9]
9001692c:	f002 fe12 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
90016930:	7c23      	ldrb	r3, [r4, #16]
90016932:	b17b      	cbz	r3, 90016954 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90016934:	6820      	ldr	r0, [r4, #0]
90016936:	6803      	ldr	r3, [r0, #0]
90016938:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001693a:	4798      	blx	r3
9001693c:	9009      	str	r0, [sp, #36]	@ 0x24
9001693e:	6820      	ldr	r0, [r4, #0]
90016940:	6802      	ldr	r2, [r0, #0]
90016942:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90016944:	4790      	blx	r2
90016946:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016948:	9000      	str	r0, [sp, #0]
9001694a:	a830      	add	r0, sp, #192	@ 0xc0
9001694c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001694e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016950:	f002 fe5b 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016954:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90016958:	a80e      	add	r0, sp, #56	@ 0x38
9001695a:	7be2      	ldrb	r2, [r4, #15]
9001695c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016960:	1a8a      	subs	r2, r1, r2
90016962:	7c21      	ldrb	r1, [r4, #16]
90016964:	9103      	str	r1, [sp, #12]
90016966:	b292      	uxth	r2, r2
90016968:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001696c:	9102      	str	r1, [sp, #8]
9001696e:	6821      	ldr	r1, [r4, #0]
90016970:	9101      	str	r1, [sp, #4]
90016972:	7961      	ldrb	r1, [r4, #5]
90016974:	9100      	str	r1, [sp, #0]
90016976:	a930      	add	r1, sp, #192	@ 0xc0
90016978:	f7ff fc20 	bl	900161bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001697c:	2e00      	cmp	r6, #0
9001697e:	dc5b      	bgt.n	90016a38 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90016980:	af17      	add	r7, sp, #92	@ 0x5c
90016982:	f04f 0900 	mov.w	r9, #0
90016986:	7c23      	ldrb	r3, [r4, #16]
90016988:	2b00      	cmp	r3, #0
9001698a:	f000 80b1 	beq.w	90016af0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
9001698e:	a80e      	add	r0, sp, #56	@ 0x38
90016990:	f7ff fe4d 	bl	9001662e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016994:	f1ba 0f00 	cmp.w	sl, #0
90016998:	f000 80a5 	beq.w	90016ae6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001699c:	7c23      	ldrb	r3, [r4, #16]
9001699e:	2264      	movs	r2, #100	@ 0x64
900169a0:	4639      	mov	r1, r7
900169a2:	a849      	add	r0, sp, #292	@ 0x124
900169a4:	9309      	str	r3, [sp, #36]	@ 0x24
900169a6:	f013 fe16 	bl	9002a5d6 <memcpy>
900169aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900169ac:	2b00      	cmp	r3, #0
900169ae:	f000 80a7 	beq.w	90016b00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900169b2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
900169b6:	7922      	ldrb	r2, [r4, #4]
900169b8:	2a01      	cmp	r2, #1
900169ba:	f040 808a 	bne.w	90016ad2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900169be:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
900169c2:	1ac0      	subs	r0, r0, r3
900169c4:	2302      	movs	r3, #2
900169c6:	fb90 f0f3 	sdiv	r0, r0, r3
900169ca:	b200      	sxth	r0, r0
900169cc:	7c23      	ldrb	r3, [r4, #16]
900169ce:	2b00      	cmp	r3, #0
900169d0:	f000 808b 	beq.w	90016aea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900169d4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
900169d8:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
900169dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900169e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
900169e4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
900169e8:	2100      	movs	r1, #0
900169ea:	4410      	add	r0, r2
900169ec:	4642      	mov	r2, r8
900169ee:	b200      	sxth	r0, r0
900169f0:	e9cd 9703 	strd	r9, r7, [sp, #12]
900169f4:	9000      	str	r0, [sp, #0]
900169f6:	4658      	mov	r0, fp
900169f8:	e9cd 5401 	strd	r5, r4, [sp, #4]
900169fc:	f7ff fc8e 	bl	9001631c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016a00:	2800      	cmp	r0, #0
90016a02:	d163      	bne.n	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016a04:	b2b2      	uxth	r2, r6
90016a06:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016a0a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016a0e:	4413      	add	r3, r2
90016a10:	1a8a      	subs	r2, r1, r2
90016a12:	b21b      	sxth	r3, r3
90016a14:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016a18:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90016a1c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016a20:	2a00      	cmp	r2, #0
90016a22:	d153      	bne.n	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016a24:	6822      	ldr	r2, [r4, #0]
90016a26:	8869      	ldrh	r1, [r5, #2]
90016a28:	7a12      	ldrb	r2, [r2, #8]
90016a2a:	1a9b      	subs	r3, r3, r2
90016a2c:	88ea      	ldrh	r2, [r5, #6]
90016a2e:	440a      	add	r2, r1
90016a30:	b212      	sxth	r2, r2
90016a32:	4293      	cmp	r3, r2
90016a34:	dda7      	ble.n	90016986 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90016a36:	e049      	b.n	90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016a38:	7c23      	ldrb	r3, [r4, #16]
90016a3a:	444f      	add	r7, r9
90016a3c:	b1c3      	cbz	r3, 90016a70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90016a3e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90016a42:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016a46:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016a4a:	443b      	add	r3, r7
90016a4c:	4293      	cmp	r3, r2
90016a4e:	da97      	bge.n	90016980 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016a50:	a80e      	add	r0, sp, #56	@ 0x38
90016a52:	f7ff fdec 	bl	9001662e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016a56:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90016a5a:	3b01      	subs	r3, #1
90016a5c:	b29b      	uxth	r3, r3
90016a5e:	454b      	cmp	r3, r9
90016a60:	9309      	str	r3, [sp, #36]	@ 0x24
90016a62:	d021      	beq.n	90016aa8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90016a64:	7961      	ldrb	r1, [r4, #5]
90016a66:	a817      	add	r0, sp, #92	@ 0x5c
90016a68:	f7ee fb6a 	bl	90005140 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016a6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016a6e:	e7f4      	b.n	90016a5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90016a70:	fa1f f986 	uxth.w	r9, r6
90016a74:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016a78:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016a7c:	443b      	add	r3, r7
90016a7e:	4293      	cmp	r3, r2
90016a80:	f6bf af7e 	bge.w	90016980 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016a84:	a817      	add	r0, sp, #92	@ 0x5c
90016a86:	f003 f9bf 	bl	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016a8a:	b1f8      	cbz	r0, 90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016a8c:	280a      	cmp	r0, #10
90016a8e:	d1f1      	bne.n	90016a74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016a90:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016a94:	444b      	add	r3, r9
90016a96:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016a9a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016a9e:	eba3 0309 	sub.w	r3, r3, r9
90016aa2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016aa6:	e7e5      	b.n	90016a74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016aa8:	b2b3      	uxth	r3, r6
90016aaa:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90016aae:	441a      	add	r2, r3
90016ab0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90016ab4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90016ab8:	1ad3      	subs	r3, r2, r3
90016aba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016abe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90016ac2:	b11b      	cbz	r3, 90016acc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016ac4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90016ac8:	2b00      	cmp	r3, #0
90016aca:	d0ba      	beq.n	90016a42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90016acc:	b063      	add	sp, #396	@ 0x18c
90016ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ad2:	2a02      	cmp	r2, #2
90016ad4:	d105      	bne.n	90016ae2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90016ad6:	7be2      	ldrb	r2, [r4, #15]
90016ad8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016adc:	1a80      	subs	r0, r0, r2
90016ade:	1ac0      	subs	r0, r0, r3
90016ae0:	e773      	b.n	900169ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90016ae2:	2000      	movs	r0, #0
90016ae4:	e772      	b.n	900169cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016ae6:	7be0      	ldrb	r0, [r4, #15]
90016ae8:	e770      	b.n	900169cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016aea:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016aee:	e773      	b.n	900169d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016af0:	f1ba 0f00 	cmp.w	sl, #0
90016af4:	d0f7      	beq.n	90016ae6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016af6:	2264      	movs	r2, #100	@ 0x64
90016af8:	4639      	mov	r1, r7
90016afa:	a849      	add	r0, sp, #292	@ 0x124
90016afc:	f013 fd6b 	bl	9002a5d6 <memcpy>
90016b00:	2300      	movs	r3, #0
90016b02:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016b06:	6821      	ldr	r1, [r4, #0]
90016b08:	a849      	add	r0, sp, #292	@ 0x124
90016b0a:	f7ff fb9a 	bl	90016242 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016b0e:	b203      	sxth	r3, r0
90016b10:	e751      	b.n	900169b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90016b12 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90016b12:	2b03      	cmp	r3, #3
90016b14:	d818      	bhi.n	90016b48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90016b16:	e8df f003 	tbb	[pc, r3]
90016b1a:	0602      	.short	0x0602
90016b1c:	130d      	.short	0x130d
90016b1e:	f9b0 2000 	ldrsh.w	r2, [r0]
90016b22:	1850      	adds	r0, r2, r1
90016b24:	4770      	bx	lr
90016b26:	8803      	ldrh	r3, [r0, #0]
90016b28:	8880      	ldrh	r0, [r0, #4]
90016b2a:	4418      	add	r0, r3
90016b2c:	b200      	sxth	r0, r0
90016b2e:	1a80      	subs	r0, r0, r2
90016b30:	3801      	subs	r0, #1
90016b32:	4770      	bx	lr
90016b34:	8803      	ldrh	r3, [r0, #0]
90016b36:	8880      	ldrh	r0, [r0, #4]
90016b38:	4418      	add	r0, r3
90016b3a:	b200      	sxth	r0, r0
90016b3c:	1a40      	subs	r0, r0, r1
90016b3e:	e7f7      	b.n	90016b30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016b40:	f9b0 0000 	ldrsh.w	r0, [r0]
90016b44:	4410      	add	r0, r2
90016b46:	4770      	bx	lr
90016b48:	2000      	movs	r0, #0
90016b4a:	4770      	bx	lr

90016b4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90016b4c:	2b03      	cmp	r3, #3
90016b4e:	d817      	bhi.n	90016b80 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016b50:	e8df f003 	tbb	[pc, r3]
90016b54:	10090602 	.word	0x10090602
90016b58:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016b5c:	1850      	adds	r0, r2, r1
90016b5e:	4770      	bx	lr
90016b60:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016b64:	e7fa      	b.n	90016b5c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90016b66:	8843      	ldrh	r3, [r0, #2]
90016b68:	88c0      	ldrh	r0, [r0, #6]
90016b6a:	4418      	add	r0, r3
90016b6c:	b200      	sxth	r0, r0
90016b6e:	1a80      	subs	r0, r0, r2
90016b70:	3801      	subs	r0, #1
90016b72:	4770      	bx	lr
90016b74:	8843      	ldrh	r3, [r0, #2]
90016b76:	88c0      	ldrh	r0, [r0, #6]
90016b78:	4418      	add	r0, r3
90016b7a:	b200      	sxth	r0, r0
90016b7c:	1a40      	subs	r0, r0, r1
90016b7e:	e7f7      	b.n	90016b70 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90016b80:	2000      	movs	r0, #0
90016b82:	4770      	bx	lr

90016b84 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90016b84:	4b01      	ldr	r3, [pc, #4]	@ (90016b8c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90016b86:	2200      	movs	r2, #0
90016b88:	601a      	str	r2, [r3, #0]
90016b8a:	4770      	bx	lr
90016b8c:	24021854 	.word	0x24021854

90016b90 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90016b90:	4603      	mov	r3, r0
90016b92:	b1c8      	cbz	r0, 90016bc8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90016b94:	0c02      	lsrs	r2, r0, #16
90016b96:	0412      	lsls	r2, r2, #16
90016b98:	b9a2      	cbnz	r2, 90016bc4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90016b9a:	0403      	lsls	r3, r0, #16
90016b9c:	2010      	movs	r0, #16
90016b9e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90016ba2:	bf04      	itt	eq
90016ba4:	021b      	lsleq	r3, r3, #8
90016ba6:	3008      	addeq	r0, #8
90016ba8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90016bac:	bf04      	itt	eq
90016bae:	011b      	lsleq	r3, r3, #4
90016bb0:	3004      	addeq	r0, #4
90016bb2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90016bb6:	bf04      	itt	eq
90016bb8:	009b      	lsleq	r3, r3, #2
90016bba:	3002      	addeq	r0, #2
90016bbc:	2b00      	cmp	r3, #0
90016bbe:	db04      	blt.n	90016bca <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90016bc0:	3001      	adds	r0, #1
90016bc2:	4770      	bx	lr
90016bc4:	2000      	movs	r0, #0
90016bc6:	e7ea      	b.n	90016b9e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90016bc8:	2020      	movs	r0, #32
90016bca:	4770      	bx	lr

90016bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90016bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016bd0:	b087      	sub	sp, #28
90016bd2:	460d      	mov	r5, r1
90016bd4:	4616      	mov	r6, r2
90016bd6:	4698      	mov	r8, r3
90016bd8:	4601      	mov	r1, r0
90016bda:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90016bde:	b120      	cbz	r0, 90016bea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016be0:	b11a      	cbz	r2, 90016bea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016be2:	2d1f      	cmp	r5, #31
90016be4:	d801      	bhi.n	90016bea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016be6:	2b1f      	cmp	r3, #31
90016be8:	d904      	bls.n	90016bf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90016bea:	2000      	movs	r0, #0
90016bec:	6038      	str	r0, [r7, #0]
90016bee:	b007      	add	sp, #28
90016bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016bf4:	b97d      	cbnz	r5, 90016c16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90016bf6:	b143      	cbz	r3, 90016c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016bf8:	4602      	mov	r2, r0
90016bfa:	462b      	mov	r3, r5
90016bfc:	4641      	mov	r1, r8
90016bfe:	4630      	mov	r0, r6
90016c00:	e9cd 4700 	strd	r4, r7, [sp]
90016c04:	f7ff ffe2 	bl	90016bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016c08:	e7f1      	b.n	90016bee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016c0a:	f04f 33ff 	mov.w	r3, #4294967295
90016c0e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90016c12:	603b      	str	r3, [r7, #0]
90016c14:	e7eb      	b.n	90016bee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016c16:	fa32 fa05 	lsrs.w	sl, r2, r5
90016c1a:	d106      	bne.n	90016c2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016c1c:	4346      	muls	r6, r0
90016c1e:	fbb6 f0f4 	udiv	r0, r6, r4
90016c22:	fb04 6610 	mls	r6, r4, r0, r6
90016c26:	603e      	str	r6, [r7, #0]
90016c28:	e7e1      	b.n	90016bee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016c2a:	2201      	movs	r2, #1
90016c2c:	fa00 fb05 	lsl.w	fp, r0, r5
90016c30:	40aa      	lsls	r2, r5
90016c32:	fbbb f9f4 	udiv	r9, fp, r4
90016c36:	3a01      	subs	r2, #1
90016c38:	fb0a f309 	mul.w	r3, sl, r9
90016c3c:	fb04 b919 	mls	r9, r4, r9, fp
90016c40:	4016      	ands	r6, r2
90016c42:	9303      	str	r3, [sp, #12]
90016c44:	4630      	mov	r0, r6
90016c46:	f7ff ffa3 	bl	90016b90 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016c4a:	462b      	mov	r3, r5
90016c4c:	460a      	mov	r2, r1
90016c4e:	4601      	mov	r1, r0
90016c50:	4630      	mov	r0, r6
90016c52:	e9cd 4700 	strd	r4, r7, [sp]
90016c56:	f7ff ffb9 	bl	90016bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016c5a:	4606      	mov	r6, r0
90016c5c:	4648      	mov	r0, r9
90016c5e:	eb05 0108 	add.w	r1, r5, r8
90016c62:	f7ff ff95 	bl	90016b90 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016c66:	ab05      	add	r3, sp, #20
90016c68:	464a      	mov	r2, r9
90016c6a:	e9cd 4300 	strd	r4, r3, [sp]
90016c6e:	4603      	mov	r3, r0
90016c70:	4650      	mov	r0, sl
90016c72:	f7ff ffab 	bl	90016bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016c76:	6839      	ldr	r1, [r7, #0]
90016c78:	9a05      	ldr	r2, [sp, #20]
90016c7a:	9b03      	ldr	r3, [sp, #12]
90016c7c:	4411      	add	r1, r2
90016c7e:	fbb1 f2f4 	udiv	r2, r1, r4
90016c82:	18d3      	adds	r3, r2, r3
90016c84:	fb04 1412 	mls	r4, r4, r2, r1
90016c88:	441e      	add	r6, r3
90016c8a:	603c      	str	r4, [r7, #0]
90016c8c:	4430      	add	r0, r6
90016c8e:	e7ae      	b.n	90016bee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90016c90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90016c90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016c94:	b085      	sub	sp, #20
90016c96:	f1b0 0900 	subs.w	r9, r0, #0
90016c9a:	461d      	mov	r5, r3
90016c9c:	4617      	mov	r7, r2
90016c9e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90016ca0:	bfbb      	ittet	lt
90016ca2:	f1c9 0900 	rsblt	r9, r9, #0
90016ca6:	f04f 36ff 	movlt.w	r6, #4294967295
90016caa:	2601      	movge	r6, #1
90016cac:	6823      	ldrlt	r3, [r4, #0]
90016cae:	bfbc      	itt	lt
90016cb0:	425b      	neglt	r3, r3
90016cb2:	6023      	strlt	r3, [r4, #0]
90016cb4:	2a00      	cmp	r2, #0
90016cb6:	da04      	bge.n	90016cc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90016cb8:	6823      	ldr	r3, [r4, #0]
90016cba:	4257      	negs	r7, r2
90016cbc:	4276      	negs	r6, r6
90016cbe:	425b      	negs	r3, r3
90016cc0:	6023      	str	r3, [r4, #0]
90016cc2:	2d00      	cmp	r5, #0
90016cc4:	4638      	mov	r0, r7
90016cc6:	bfba      	itte	lt
90016cc8:	426d      	neglt	r5, r5
90016cca:	f04f 38ff 	movlt.w	r8, #4294967295
90016cce:	f04f 0801 	movge.w	r8, #1
90016cd2:	f7ff ff5d 	bl	90016b90 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016cd6:	ab03      	add	r3, sp, #12
90016cd8:	463a      	mov	r2, r7
90016cda:	e9cd 5300 	strd	r5, r3, [sp]
90016cde:	4603      	mov	r3, r0
90016ce0:	4648      	mov	r0, r9
90016ce2:	f7ff ff73 	bl	90016bcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016ce6:	6823      	ldr	r3, [r4, #0]
90016ce8:	9a03      	ldr	r2, [sp, #12]
90016cea:	4546      	cmp	r6, r8
90016cec:	441a      	add	r2, r3
90016cee:	fb92 f3f5 	sdiv	r3, r2, r5
90016cf2:	4418      	add	r0, r3
90016cf4:	fb05 2313 	mls	r3, r5, r3, r2
90016cf8:	bf18      	it	ne
90016cfa:	4240      	negne	r0, r0
90016cfc:	1c72      	adds	r2, r6, #1
90016cfe:	6023      	str	r3, [r4, #0]
90016d00:	d105      	bne.n	90016d0e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90016d02:	2b00      	cmp	r3, #0
90016d04:	f1c3 0200 	rsb	r2, r3, #0
90016d08:	db0b      	blt.n	90016d22 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90016d0a:	6022      	str	r2, [r4, #0]
90016d0c:	e006      	b.n	90016d1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016d0e:	2e01      	cmp	r6, #1
90016d10:	d104      	bne.n	90016d1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016d12:	2b00      	cmp	r3, #0
90016d14:	da02      	bge.n	90016d1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016d16:	442b      	add	r3, r5
90016d18:	3801      	subs	r0, #1
90016d1a:	6023      	str	r3, [r4, #0]
90016d1c:	b005      	add	sp, #20
90016d1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016d22:	3801      	subs	r0, #1
90016d24:	1b52      	subs	r2, r2, r5
90016d26:	e7f0      	b.n	90016d0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90016d28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90016d28:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90016d2c:	4c1c      	ldr	r4, [pc, #112]	@ (90016da0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90016d2e:	4605      	mov	r5, r0
90016d30:	6807      	ldr	r7, [r0, #0]
90016d32:	69a3      	ldr	r3, [r4, #24]
90016d34:	b92b      	cbnz	r3, 90016d42 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90016d36:	6840      	ldr	r0, [r0, #4]
90016d38:	e9c5 7000 	strd	r7, r0, [r5]
90016d3c:	b004      	add	sp, #16
90016d3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016d42:	f04f 0802 	mov.w	r8, #2
90016d46:	68a2      	ldr	r2, [r4, #8]
90016d48:	ae04      	add	r6, sp, #16
90016d4a:	6820      	ldr	r0, [r4, #0]
90016d4c:	fb93 f1f8 	sdiv	r1, r3, r8
90016d50:	440a      	add	r2, r1
90016d52:	69e1      	ldr	r1, [r4, #28]
90016d54:	f846 2d04 	str.w	r2, [r6, #-4]!
90016d58:	463a      	mov	r2, r7
90016d5a:	9600      	str	r6, [sp, #0]
90016d5c:	f7ff ff98 	bl	90016c90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016d60:	69a3      	ldr	r3, [r4, #24]
90016d62:	4607      	mov	r7, r0
90016d64:	686a      	ldr	r2, [r5, #4]
90016d66:	6a21      	ldr	r1, [r4, #32]
90016d68:	9600      	str	r6, [sp, #0]
90016d6a:	6860      	ldr	r0, [r4, #4]
90016d6c:	f7ff ff90 	bl	90016c90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016d70:	69a3      	ldr	r3, [r4, #24]
90016d72:	6962      	ldr	r2, [r4, #20]
90016d74:	4407      	add	r7, r0
90016d76:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90016d78:	9600      	str	r6, [sp, #0]
90016d7a:	68e0      	ldr	r0, [r4, #12]
90016d7c:	fb93 f8f8 	sdiv	r8, r3, r8
90016d80:	4442      	add	r2, r8
90016d82:	9203      	str	r2, [sp, #12]
90016d84:	682a      	ldr	r2, [r5, #0]
90016d86:	f7ff ff83 	bl	90016c90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016d8a:	4680      	mov	r8, r0
90016d8c:	9600      	str	r6, [sp, #0]
90016d8e:	69a3      	ldr	r3, [r4, #24]
90016d90:	686a      	ldr	r2, [r5, #4]
90016d92:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90016d94:	6920      	ldr	r0, [r4, #16]
90016d96:	f7ff ff7b 	bl	90016c90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016d9a:	4440      	add	r0, r8
90016d9c:	e7cc      	b.n	90016d38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90016d9e:	bf00      	nop
90016da0:	24021858 	.word	0x24021858

90016da4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90016da4:	4b07      	ldr	r3, [pc, #28]	@ (90016dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90016da6:	781b      	ldrb	r3, [r3, #0]
90016da8:	2b01      	cmp	r3, #1
90016daa:	d109      	bne.n	90016dc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90016dac:	f9b1 3000 	ldrsh.w	r3, [r1]
90016db0:	f9b0 2000 	ldrsh.w	r2, [r0]
90016db4:	8003      	strh	r3, [r0, #0]
90016db6:	4b04      	ldr	r3, [pc, #16]	@ (90016dc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90016db8:	881b      	ldrh	r3, [r3, #0]
90016dba:	3b01      	subs	r3, #1
90016dbc:	1a9b      	subs	r3, r3, r2
90016dbe:	800b      	strh	r3, [r1, #0]
90016dc0:	4770      	bx	lr
90016dc2:	bf00      	nop
90016dc4:	2402183c 	.word	0x2402183c
90016dc8:	24021838 	.word	0x24021838

90016dcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90016dcc:	4b07      	ldr	r3, [pc, #28]	@ (90016dec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90016dce:	b510      	push	{r4, lr}
90016dd0:	781b      	ldrb	r3, [r3, #0]
90016dd2:	2b01      	cmp	r3, #1
90016dd4:	d108      	bne.n	90016de8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90016dd6:	4b06      	ldr	r3, [pc, #24]	@ (90016df0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90016dd8:	880c      	ldrh	r4, [r1, #0]
90016dda:	881b      	ldrh	r3, [r3, #0]
90016ddc:	f9b0 2000 	ldrsh.w	r2, [r0]
90016de0:	3b01      	subs	r3, #1
90016de2:	1b1b      	subs	r3, r3, r4
90016de4:	8003      	strh	r3, [r0, #0]
90016de6:	800a      	strh	r2, [r1, #0]
90016de8:	bd10      	pop	{r4, pc}
90016dea:	bf00      	nop
90016dec:	2402183c 	.word	0x2402183c
90016df0:	24021838 	.word	0x24021838

90016df4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016df4:	4b0a      	ldr	r3, [pc, #40]	@ (90016e20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016df6:	b510      	push	{r4, lr}
90016df8:	781b      	ldrb	r3, [r3, #0]
90016dfa:	2b01      	cmp	r3, #1
90016dfc:	d10e      	bne.n	90016e1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90016dfe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016e02:	8843      	ldrh	r3, [r0, #2]
90016e04:	f9b0 4000 	ldrsh.w	r4, [r0]
90016e08:	18ca      	adds	r2, r1, r3
90016e0a:	4b06      	ldr	r3, [pc, #24]	@ (90016e24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90016e0c:	8044      	strh	r4, [r0, #2]
90016e0e:	881b      	ldrh	r3, [r3, #0]
90016e10:	1a9b      	subs	r3, r3, r2
90016e12:	8003      	strh	r3, [r0, #0]
90016e14:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016e18:	8081      	strh	r1, [r0, #4]
90016e1a:	80c3      	strh	r3, [r0, #6]
90016e1c:	bd10      	pop	{r4, pc}
90016e1e:	bf00      	nop
90016e20:	2402183c 	.word	0x2402183c
90016e24:	24021838 	.word	0x24021838

90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016e28:	4b08      	ldr	r3, [pc, #32]	@ (90016e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90016e2a:	781b      	ldrb	r3, [r3, #0]
90016e2c:	2b01      	cmp	r3, #1
90016e2e:	d10c      	bne.n	90016e4a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016e30:	8803      	ldrh	r3, [r0, #0]
90016e32:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90016e36:	8842      	ldrh	r2, [r0, #2]
90016e38:	8002      	strh	r2, [r0, #0]
90016e3a:	185a      	adds	r2, r3, r1
90016e3c:	4b04      	ldr	r3, [pc, #16]	@ (90016e50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90016e3e:	881b      	ldrh	r3, [r3, #0]
90016e40:	1a9b      	subs	r3, r3, r2
90016e42:	8043      	strh	r3, [r0, #2]
90016e44:	88c3      	ldrh	r3, [r0, #6]
90016e46:	80c1      	strh	r1, [r0, #6]
90016e48:	8083      	strh	r3, [r0, #4]
90016e4a:	4770      	bx	lr
90016e4c:	2402183c 	.word	0x2402183c
90016e50:	24021838 	.word	0x24021838

90016e54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90016e54:	4b07      	ldr	r3, [pc, #28]	@ (90016e74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90016e56:	b510      	push	{r4, lr}
90016e58:	781b      	ldrb	r3, [r3, #0]
90016e5a:	2b01      	cmp	r3, #1
90016e5c:	d108      	bne.n	90016e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90016e5e:	f9b1 3000 	ldrsh.w	r3, [r1]
90016e62:	f9b0 4000 	ldrsh.w	r4, [r0]
90016e66:	8003      	strh	r3, [r0, #0]
90016e68:	8893      	ldrh	r3, [r2, #4]
90016e6a:	3b01      	subs	r3, #1
90016e6c:	1b1b      	subs	r3, r3, r4
90016e6e:	800b      	strh	r3, [r1, #0]
90016e70:	bd10      	pop	{r4, pc}
90016e72:	bf00      	nop
90016e74:	2402183c 	.word	0x2402183c

90016e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90016e78:	4b0b      	ldr	r3, [pc, #44]	@ (90016ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90016e7a:	781b      	ldrb	r3, [r3, #0]
90016e7c:	2b01      	cmp	r3, #1
90016e7e:	d111      	bne.n	90016ea4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90016e80:	680b      	ldr	r3, [r1, #0]
90016e82:	ed90 7a00 	vldr	s14, [r0]
90016e86:	6003      	str	r3, [r0, #0]
90016e88:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90016e8c:	eddf 6a07 	vldr	s13, [pc, #28]	@ 90016eac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90016e90:	ee07 3a90 	vmov	s15, r3
90016e94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016e98:	ee77 7ae6 	vsub.f32	s15, s15, s13
90016e9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
90016ea0:	edc1 7a00 	vstr	s15, [r1]
90016ea4:	4770      	bx	lr
90016ea6:	bf00      	nop
90016ea8:	2402183c 	.word	0x2402183c
90016eac:	38d1b717 	.word	0x38d1b717

90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90016eb0:	4b0a      	ldr	r3, [pc, #40]	@ (90016edc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90016eb2:	460a      	mov	r2, r1
90016eb4:	b510      	push	{r4, lr}
90016eb6:	781b      	ldrb	r3, [r3, #0]
90016eb8:	2b01      	cmp	r3, #1
90016eba:	d10d      	bne.n	90016ed8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90016ebc:	8881      	ldrh	r1, [r0, #4]
90016ebe:	8803      	ldrh	r3, [r0, #0]
90016ec0:	440b      	add	r3, r1
90016ec2:	4601      	mov	r1, r0
90016ec4:	3b01      	subs	r3, #1
90016ec6:	f821 3b02 	strh.w	r3, [r1], #2
90016eca:	f7ff ffc3 	bl	90016e54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90016ece:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016ed2:	88c2      	ldrh	r2, [r0, #6]
90016ed4:	80c3      	strh	r3, [r0, #6]
90016ed6:	8082      	strh	r2, [r0, #4]
90016ed8:	bd10      	pop	{r4, pc}
90016eda:	bf00      	nop
90016edc:	2402183c 	.word	0x2402183c

90016ee0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90016ee0:	4770      	bx	lr
	...

90016ee4 <_ZN8touchgfx11Application13requestRedrawEv>:
90016ee4:	4b06      	ldr	r3, [pc, #24]	@ (90016f00 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90016ee6:	2100      	movs	r1, #0
90016ee8:	f9b3 2000 	ldrsh.w	r2, [r3]
90016eec:	4b05      	ldr	r3, [pc, #20]	@ (90016f04 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90016eee:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90016ef2:	f9b3 3000 	ldrsh.w	r3, [r3]
90016ef6:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90016efa:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90016efe:	4770      	bx	lr
90016f00:	24021838 	.word	0x24021838
90016f04:	2402183a 	.word	0x2402183a

90016f08 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016f08:	4b03      	ldr	r3, [pc, #12]	@ (90016f18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90016f0a:	6818      	ldr	r0, [r3, #0]
90016f0c:	b110      	cbz	r0, 90016f14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90016f0e:	6803      	ldr	r3, [r0, #0]
90016f10:	699b      	ldr	r3, [r3, #24]
90016f12:	4718      	bx	r3
90016f14:	4770      	bx	lr
90016f16:	bf00      	nop
90016f18:	24021888 	.word	0x24021888

90016f1c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90016f1c:	4770      	bx	lr
	...

90016f20 <_ZN8touchgfx11Application4drawEv>:
90016f20:	4b09      	ldr	r3, [pc, #36]	@ (90016f48 <_ZN8touchgfx11Application4drawEv+0x28>)
90016f22:	b507      	push	{r0, r1, r2, lr}
90016f24:	f9b3 2000 	ldrsh.w	r2, [r3]
90016f28:	2100      	movs	r1, #0
90016f2a:	4b08      	ldr	r3, [pc, #32]	@ (90016f4c <_ZN8touchgfx11Application4drawEv+0x2c>)
90016f2c:	9100      	str	r1, [sp, #0]
90016f2e:	4669      	mov	r1, sp
90016f30:	f9b3 3000 	ldrsh.w	r3, [r3]
90016f34:	f8ad 2004 	strh.w	r2, [sp, #4]
90016f38:	f8ad 3006 	strh.w	r3, [sp, #6]
90016f3c:	6803      	ldr	r3, [r0, #0]
90016f3e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016f40:	4798      	blx	r3
90016f42:	b003      	add	sp, #12
90016f44:	f85d fb04 	ldr.w	pc, [sp], #4
90016f48:	24021838 	.word	0x24021838
90016f4c:	2402183a 	.word	0x2402183a

90016f50 <_ZN8touchgfx11Application10invalidateEv>:
90016f50:	4b09      	ldr	r3, [pc, #36]	@ (90016f78 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016f52:	b082      	sub	sp, #8
90016f54:	2100      	movs	r1, #0
90016f56:	f9b3 2000 	ldrsh.w	r2, [r3]
90016f5a:	4b08      	ldr	r3, [pc, #32]	@ (90016f7c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90016f5c:	f8ad 2004 	strh.w	r2, [sp, #4]
90016f60:	aa02      	add	r2, sp, #8
90016f62:	f9b3 3000 	ldrsh.w	r3, [r3]
90016f66:	9100      	str	r1, [sp, #0]
90016f68:	f8ad 3006 	strh.w	r3, [sp, #6]
90016f6c:	6803      	ldr	r3, [r0, #0]
90016f6e:	e912 0006 	ldmdb	r2, {r1, r2}
90016f72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016f74:	b002      	add	sp, #8
90016f76:	4718      	bx	r3
90016f78:	24021838 	.word	0x24021838
90016f7c:	2402183a 	.word	0x2402183a

90016f80 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016f80:	4b03      	ldr	r3, [pc, #12]	@ (90016f90 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016f82:	6818      	ldr	r0, [r3, #0]
90016f84:	b110      	cbz	r0, 90016f8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016f86:	6803      	ldr	r3, [r0, #0]
90016f88:	69db      	ldr	r3, [r3, #28]
90016f8a:	4718      	bx	r3
90016f8c:	4770      	bx	lr
90016f8e:	bf00      	nop
90016f90:	24021888 	.word	0x24021888

90016f94 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90016f94:	4b03      	ldr	r3, [pc, #12]	@ (90016fa4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90016f96:	6818      	ldr	r0, [r3, #0]
90016f98:	b110      	cbz	r0, 90016fa0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90016f9a:	6803      	ldr	r3, [r0, #0]
90016f9c:	6a1b      	ldr	r3, [r3, #32]
90016f9e:	4718      	bx	r3
90016fa0:	4770      	bx	lr
90016fa2:	bf00      	nop
90016fa4:	24021888 	.word	0x24021888

90016fa8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90016fa8:	2300      	movs	r3, #0
90016faa:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90016fae:	4770      	bx	lr

90016fb0 <_ZN8touchgfx11Application14handleKeyEventEh>:
90016fb0:	4b03      	ldr	r3, [pc, #12]	@ (90016fc0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90016fb2:	6818      	ldr	r0, [r3, #0]
90016fb4:	b110      	cbz	r0, 90016fbc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90016fb6:	6803      	ldr	r3, [r0, #0]
90016fb8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016fba:	4718      	bx	r3
90016fbc:	4770      	bx	lr
90016fbe:	bf00      	nop
90016fc0:	24021888 	.word	0x24021888

90016fc4 <_ZN8touchgfx11ApplicationD1Ev>:
90016fc4:	4770      	bx	lr

90016fc6 <_ZN8touchgfx11ApplicationD0Ev>:
90016fc6:	b510      	push	{r4, lr}
90016fc8:	4604      	mov	r4, r0
90016fca:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90016fce:	f012 fbaf 	bl	90029730 <_ZdlPvj>
90016fd2:	4620      	mov	r0, r4
90016fd4:	bd10      	pop	{r4, pc}

90016fd6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016fd6:	b510      	push	{r4, lr}
90016fd8:	f9b1 4000 	ldrsh.w	r4, [r1]
90016fdc:	888a      	ldrh	r2, [r1, #4]
90016fde:	f9b0 3000 	ldrsh.w	r3, [r0]
90016fe2:	4422      	add	r2, r4
90016fe4:	b212      	sxth	r2, r2
90016fe6:	4293      	cmp	r3, r2
90016fe8:	da15      	bge.n	90017016 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016fea:	8882      	ldrh	r2, [r0, #4]
90016fec:	4413      	add	r3, r2
90016fee:	b21b      	sxth	r3, r3
90016ff0:	429c      	cmp	r4, r3
90016ff2:	da10      	bge.n	90017016 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016ff4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016ff8:	88c9      	ldrh	r1, [r1, #6]
90016ffa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016ffe:	4419      	add	r1, r3
90017000:	b209      	sxth	r1, r1
90017002:	428a      	cmp	r2, r1
90017004:	da07      	bge.n	90017016 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017006:	88c0      	ldrh	r0, [r0, #6]
90017008:	4410      	add	r0, r2
9001700a:	b200      	sxth	r0, r0
9001700c:	4283      	cmp	r3, r0
9001700e:	bfac      	ite	ge
90017010:	2000      	movge	r0, #0
90017012:	2001      	movlt	r0, #1
90017014:	bd10      	pop	{r4, pc}
90017016:	2000      	movs	r0, #0
90017018:	e7fc      	b.n	90017014 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001701a <_ZN8touchgfx4Rect10restrictToEss>:
9001701a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001701e:	2b00      	cmp	r3, #0
90017020:	b510      	push	{r4, lr}
90017022:	da04      	bge.n	9001702e <_ZN8touchgfx4Rect10restrictToEss+0x14>
90017024:	8884      	ldrh	r4, [r0, #4]
90017026:	4423      	add	r3, r4
90017028:	8083      	strh	r3, [r0, #4]
9001702a:	2300      	movs	r3, #0
9001702c:	8003      	strh	r3, [r0, #0]
9001702e:	f9b0 4000 	ldrsh.w	r4, [r0]
90017032:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017036:	1b09      	subs	r1, r1, r4
90017038:	428b      	cmp	r3, r1
9001703a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001703e:	bfc8      	it	gt
90017040:	8081      	strhgt	r1, [r0, #4]
90017042:	2b00      	cmp	r3, #0
90017044:	da04      	bge.n	90017050 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90017046:	88c1      	ldrh	r1, [r0, #6]
90017048:	440b      	add	r3, r1
9001704a:	80c3      	strh	r3, [r0, #6]
9001704c:	2300      	movs	r3, #0
9001704e:	8043      	strh	r3, [r0, #2]
90017050:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017054:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90017058:	1a52      	subs	r2, r2, r1
9001705a:	4293      	cmp	r3, r2
9001705c:	bfc8      	it	gt
9001705e:	80c2      	strhgt	r2, [r0, #6]
90017060:	bd10      	pop	{r4, pc}
	...

90017064 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90017064:	4b10      	ldr	r3, [pc, #64]	@ (900170a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90017066:	b510      	push	{r4, lr}
90017068:	460c      	mov	r4, r1
9001706a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001706e:	4b0f      	ldr	r3, [pc, #60]	@ (900170ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90017070:	4620      	mov	r0, r4
90017072:	f9b3 1000 	ldrsh.w	r1, [r3]
90017076:	f7ff ffd0 	bl	9001701a <_ZN8touchgfx4Rect10restrictToEss>
9001707a:	4b0d      	ldr	r3, [pc, #52]	@ (900170b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001707c:	6818      	ldr	r0, [r3, #0]
9001707e:	b190      	cbz	r0, 900170a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90017080:	6803      	ldr	r3, [r0, #0]
90017082:	4621      	mov	r1, r4
90017084:	689b      	ldr	r3, [r3, #8]
90017086:	4798      	blx	r3
90017088:	4b0a      	ldr	r3, [pc, #40]	@ (900170b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001708a:	6818      	ldr	r0, [r3, #0]
9001708c:	b118      	cbz	r0, 90017096 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001708e:	6803      	ldr	r3, [r0, #0]
90017090:	4621      	mov	r1, r4
90017092:	689b      	ldr	r3, [r3, #8]
90017094:	4798      	blx	r3
90017096:	4b08      	ldr	r3, [pc, #32]	@ (900170b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90017098:	4621      	mov	r1, r4
9001709a:	6818      	ldr	r0, [r3, #0]
9001709c:	6803      	ldr	r3, [r0, #0]
9001709e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900170a2:	69db      	ldr	r3, [r3, #28]
900170a4:	4718      	bx	r3
900170a6:	bd10      	pop	{r4, pc}
900170a8:	2402183a 	.word	0x2402183a
900170ac:	24021838 	.word	0x24021838
900170b0:	24021888 	.word	0x24021888
900170b4:	24021884 	.word	0x24021884
900170b8:	24021844 	.word	0x24021844

900170bc <_ZNK8touchgfx4Rect8includesERKS0_>:
900170bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900170be:	4606      	mov	r6, r0
900170c0:	4608      	mov	r0, r1
900170c2:	460f      	mov	r7, r1
900170c4:	f7f9 ff71 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
900170c8:	b9e8      	cbnz	r0, 90017106 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900170ca:	f9b7 5000 	ldrsh.w	r5, [r7]
900170ce:	f9b6 4000 	ldrsh.w	r4, [r6]
900170d2:	42a5      	cmp	r5, r4
900170d4:	db17      	blt.n	90017106 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900170d6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900170da:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900170de:	429a      	cmp	r2, r3
900170e0:	db11      	blt.n	90017106 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900170e2:	88b9      	ldrh	r1, [r7, #4]
900170e4:	440d      	add	r5, r1
900170e6:	88b1      	ldrh	r1, [r6, #4]
900170e8:	440c      	add	r4, r1
900170ea:	b22d      	sxth	r5, r5
900170ec:	b224      	sxth	r4, r4
900170ee:	42a5      	cmp	r5, r4
900170f0:	dc09      	bgt.n	90017106 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900170f2:	88f8      	ldrh	r0, [r7, #6]
900170f4:	4410      	add	r0, r2
900170f6:	88f2      	ldrh	r2, [r6, #6]
900170f8:	4413      	add	r3, r2
900170fa:	b200      	sxth	r0, r0
900170fc:	b21b      	sxth	r3, r3
900170fe:	4298      	cmp	r0, r3
90017100:	bfcc      	ite	gt
90017102:	2000      	movgt	r0, #0
90017104:	2001      	movle	r0, #1
90017106:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90017108 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90017108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001710a:	4604      	mov	r4, r0
9001710c:	4608      	mov	r0, r1
9001710e:	460d      	mov	r5, r1
90017110:	f7f9 ff4b 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017114:	b978      	cbnz	r0, 90017136 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90017116:	4620      	mov	r0, r4
90017118:	f7f9 ff47 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
9001711c:	f9b5 6000 	ldrsh.w	r6, [r5]
90017120:	b150      	cbz	r0, 90017138 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90017122:	8026      	strh	r6, [r4, #0]
90017124:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90017128:	8063      	strh	r3, [r4, #2]
9001712a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001712e:	80a3      	strh	r3, [r4, #4]
90017130:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90017134:	80e3      	strh	r3, [r4, #6]
90017136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017138:	f9b4 1000 	ldrsh.w	r1, [r4]
9001713c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017140:	42b1      	cmp	r1, r6
90017142:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90017146:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001714a:	460f      	mov	r7, r1
9001714c:	88ed      	ldrh	r5, [r5, #6]
9001714e:	bfa8      	it	ge
90017150:	4637      	movge	r7, r6
90017152:	4293      	cmp	r3, r2
90017154:	4618      	mov	r0, r3
90017156:	4466      	add	r6, ip
90017158:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001715c:	bfa8      	it	ge
9001715e:	4610      	movge	r0, r2
90017160:	442a      	add	r2, r5
90017162:	88e5      	ldrh	r5, [r4, #6]
90017164:	4461      	add	r1, ip
90017166:	b236      	sxth	r6, r6
90017168:	8027      	strh	r7, [r4, #0]
9001716a:	442b      	add	r3, r5
9001716c:	b209      	sxth	r1, r1
9001716e:	b212      	sxth	r2, r2
90017170:	8060      	strh	r0, [r4, #2]
90017172:	b21b      	sxth	r3, r3
90017174:	428e      	cmp	r6, r1
90017176:	bfac      	ite	ge
90017178:	ebc7 0106 	rsbge	r1, r7, r6
9001717c:	ebc7 0101 	rsblt	r1, r7, r1
90017180:	429a      	cmp	r2, r3
90017182:	bfac      	ite	ge
90017184:	ebc0 0202 	rsbge	r2, r0, r2
90017188:	ebc0 0203 	rsblt	r2, r0, r3
9001718c:	80a1      	strh	r1, [r4, #4]
9001718e:	80e2      	strh	r2, [r4, #6]
90017190:	e7d1      	b.n	90017136 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90017194 <_ZN8touchgfx11Application11getInstanceEv>:
90017194:	4b01      	ldr	r3, [pc, #4]	@ (9001719c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90017196:	6818      	ldr	r0, [r3, #0]
90017198:	4770      	bx	lr
9001719a:	bf00      	nop
9001719c:	24021898 	.word	0x24021898

900171a0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900171a0:	2300      	movs	r3, #0
900171a2:	b510      	push	{r4, lr}
900171a4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900171a8:	4604      	mov	r4, r0
900171aa:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900171ae:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900171b2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900171b6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900171ba:	429a      	cmp	r2, r3
900171bc:	d90e      	bls.n	900171dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900171be:	18e2      	adds	r2, r4, r3
900171c0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900171c4:	b122      	cbz	r2, 900171d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900171c6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900171ca:	6803      	ldr	r3, [r0, #0]
900171cc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900171ce:	4798      	blx	r3
900171d0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900171d4:	3301      	adds	r3, #1
900171d6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900171da:	e7ea      	b.n	900171b2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900171dc:	bd10      	pop	{r4, pc}

900171de <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900171de:	2300      	movs	r3, #0
900171e0:	f100 0284 	add.w	r2, r0, #132	@ 0x84
900171e4:	30a4      	adds	r0, #164	@ 0xa4
900171e6:	f820 3c24 	strh.w	r3, [r0, #-36]
900171ea:	f802 3b01 	strb.w	r3, [r2], #1
900171ee:	4282      	cmp	r2, r0
900171f0:	d1fb      	bne.n	900171ea <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900171f2:	4770      	bx	lr

900171f4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900171f4:	b570      	push	{r4, r5, r6, lr}
900171f6:	4c0b      	ldr	r4, [pc, #44]	@ (90017224 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900171f8:	4605      	mov	r5, r0
900171fa:	460e      	mov	r6, r1
900171fc:	6820      	ldr	r0, [r4, #0]
900171fe:	b110      	cbz	r0, 90017206 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90017200:	6803      	ldr	r3, [r0, #0]
90017202:	695b      	ldr	r3, [r3, #20]
90017204:	4798      	blx	r3
90017206:	1d28      	adds	r0, r5, #4
90017208:	f7ff ffe9 	bl	900171de <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001720c:	6026      	str	r6, [r4, #0]
9001720e:	6833      	ldr	r3, [r6, #0]
90017210:	4630      	mov	r0, r6
90017212:	68db      	ldr	r3, [r3, #12]
90017214:	4798      	blx	r3
90017216:	682b      	ldr	r3, [r5, #0]
90017218:	4628      	mov	r0, r5
9001721a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001721c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017220:	4718      	bx	r3
90017222:	bf00      	nop
90017224:	24021888 	.word	0x24021888

90017228 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90017228:	2300      	movs	r3, #0
9001722a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
9001722e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
90017232:	461a      	mov	r2, r3
90017234:	b5f0      	push	{r4, r5, r6, r7, lr}
90017236:	461c      	mov	r4, r3
90017238:	461d      	mov	r5, r3
9001723a:	459c      	cmp	ip, r3
9001723c:	dd1a      	ble.n	90017274 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001723e:	18c6      	adds	r6, r0, r3
90017240:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90017244:	b16e      	cbz	r6, 90017262 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90017246:	429a      	cmp	r2, r3
90017248:	d008      	beq.n	9001725c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001724a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001724e:	fa1f fe82 	uxth.w	lr, r2
90017252:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90017256:	1887      	adds	r7, r0, r2
90017258:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
9001725c:	3201      	adds	r2, #1
9001725e:	3301      	adds	r3, #1
90017260:	e7eb      	b.n	9001723a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90017262:	4299      	cmp	r1, r3
90017264:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90017268:	bfa8      	it	ge
9001726a:	3501      	addge	r5, #1
9001726c:	429e      	cmp	r6, r3
9001726e:	bfc8      	it	gt
90017270:	3401      	addgt	r4, #1
90017272:	e7f4      	b.n	9001725e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90017274:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90017278:	1b49      	subs	r1, r1, r5
9001727a:	1b1b      	subs	r3, r3, r4
9001727c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
90017280:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90017284:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017288:	4293      	cmp	r3, r2
9001728a:	dd03      	ble.n	90017294 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
9001728c:	3b01      	subs	r3, #1
9001728e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
90017292:	e7f7      	b.n	90017284 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90017294:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90017298 <_ZN8touchgfx11Application15handleTickEventEv>:
90017298:	b570      	push	{r4, r5, r6, lr}
9001729a:	4d16      	ldr	r5, [pc, #88]	@ (900172f4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
9001729c:	4604      	mov	r4, r0
9001729e:	6828      	ldr	r0, [r5, #0]
900172a0:	b140      	cbz	r0, 900172b4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900172a2:	7a03      	ldrb	r3, [r0, #8]
900172a4:	b933      	cbnz	r3, 900172b4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900172a6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900172aa:	6803      	ldr	r3, [r0, #0]
900172ac:	689b      	ldr	r3, [r3, #8]
900172ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900172b2:	4718      	bx	r3
900172b4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900172b8:	4e0f      	ldr	r6, [pc, #60]	@ (900172f8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900172ba:	b973      	cbnz	r3, 900172da <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900172bc:	b168      	cbz	r0, 900172da <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900172be:	7a03      	ldrb	r3, [r0, #8]
900172c0:	b15b      	cbz	r3, 900172da <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900172c2:	6830      	ldr	r0, [r6, #0]
900172c4:	b110      	cbz	r0, 900172cc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900172c6:	6803      	ldr	r3, [r0, #0]
900172c8:	691b      	ldr	r3, [r3, #16]
900172ca:	4798      	blx	r3
900172cc:	6828      	ldr	r0, [r5, #0]
900172ce:	6803      	ldr	r3, [r0, #0]
900172d0:	68db      	ldr	r3, [r3, #12]
900172d2:	4798      	blx	r3
900172d4:	2301      	movs	r3, #1
900172d6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900172da:	3404      	adds	r4, #4
900172dc:	4620      	mov	r0, r4
900172de:	f7ff ff5f 	bl	900171a0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900172e2:	4620      	mov	r0, r4
900172e4:	f7ff ffa0 	bl	90017228 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900172e8:	6830      	ldr	r0, [r6, #0]
900172ea:	b110      	cbz	r0, 900172f2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900172ec:	6803      	ldr	r3, [r0, #0]
900172ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900172f0:	e7dd      	b.n	900172ae <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900172f2:	bd70      	pop	{r4, r5, r6, pc}
900172f4:	2402188c 	.word	0x2402188c
900172f8:	24021888 	.word	0x24021888

900172fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900172fc:	4603      	mov	r3, r0
900172fe:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90017302:	2200      	movs	r2, #0
90017304:	801a      	strh	r2, [r3, #0]
90017306:	3308      	adds	r3, #8
90017308:	f823 2c06 	strh.w	r2, [r3, #-6]
9001730c:	f823 2c04 	strh.w	r2, [r3, #-4]
90017310:	f823 2c02 	strh.w	r2, [r3, #-2]
90017314:	428b      	cmp	r3, r1
90017316:	d1f5      	bne.n	90017304 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90017318:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
9001731c:	4770      	bx	lr
	...

90017320 <_ZN8touchgfx11ApplicationC1Ev>:
90017320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017322:	4b1d      	ldr	r3, [pc, #116]	@ (90017398 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90017324:	4606      	mov	r6, r0
90017326:	4604      	mov	r4, r0
90017328:	2500      	movs	r5, #0
9001732a:	f846 3b04 	str.w	r3, [r6], #4
9001732e:	22a8      	movs	r2, #168	@ 0xa8
90017330:	2100      	movs	r1, #0
90017332:	4630      	mov	r0, r6
90017334:	f013 f810 	bl	9002a358 <memset>
90017338:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
9001733c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90017340:	4f16      	ldr	r7, [pc, #88]	@ (9001739c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90017342:	f7ff ffdb 	bl	900172fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90017346:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001734a:	f7ff ffd7 	bl	900172fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001734e:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
90017352:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90017356:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
9001735a:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
9001735e:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
90017362:	490f      	ldr	r1, [pc, #60]	@ (900173a0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90017364:	480f      	ldr	r0, [pc, #60]	@ (900173a4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90017366:	f011 fb53 	bl	90028a10 <CRC_Lock>
9001736a:	4b0f      	ldr	r3, [pc, #60]	@ (900173a8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
9001736c:	b158      	cbz	r0, 90017386 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001736e:	801d      	strh	r5, [r3, #0]
90017370:	2300      	movs	r3, #0
90017372:	4a0e      	ldr	r2, [pc, #56]	@ (900173ac <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90017374:	4630      	mov	r0, r6
90017376:	6013      	str	r3, [r2, #0]
90017378:	4a0d      	ldr	r2, [pc, #52]	@ (900173b0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001737a:	603b      	str	r3, [r7, #0]
9001737c:	6013      	str	r3, [r2, #0]
9001737e:	f7ff ff2e 	bl	900171de <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90017382:	4620      	mov	r0, r4
90017384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017386:	f44f 6280 	mov.w	r2, #1024	@ 0x400
9001738a:	2002      	movs	r0, #2
9001738c:	801a      	strh	r2, [r3, #0]
9001738e:	6038      	str	r0, [r7, #0]
90017390:	f001 ff66 	bl	90019260 <_ZN8touchgfx6Screen4drawEv>
90017394:	e7ec      	b.n	90017370 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90017396:	bf00      	nop
90017398:	9002d850 	.word	0x9002d850
9001739c:	24021888 	.word	0x24021888
900173a0:	b5e8b5cd 	.word	0xb5e8b5cd
900173a4:	f407a5c2 	.word	0xf407a5c2
900173a8:	24000088 	.word	0x24000088
900173ac:	24021898 	.word	0x24021898
900173b0:	2402188c 	.word	0x2402188c

900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900173b4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
900173b8:	3b01      	subs	r3, #1
900173ba:	b29b      	uxth	r3, r3
900173bc:	428b      	cmp	r3, r1
900173be:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
900173c2:	b510      	push	{r4, lr}
900173c4:	d908      	bls.n	900173d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900173c6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900173ca:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900173ce:	681a      	ldr	r2, [r3, #0]
900173d0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900173d4:	685a      	ldr	r2, [r3, #4]
900173d6:	6062      	str	r2, [r4, #4]
900173d8:	bd10      	pop	{r4, pc}
	...

900173dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
900173dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900173e0:	b08f      	sub	sp, #60	@ 0x3c
900173e2:	4b92      	ldr	r3, [pc, #584]	@ (9001762c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
900173e4:	4683      	mov	fp, r0
900173e6:	ac0a      	add	r4, sp, #40	@ 0x28
900173e8:	e884 0006 	stmia.w	r4, {r1, r2}
900173ec:	f9b3 2000 	ldrsh.w	r2, [r3]
900173f0:	4620      	mov	r0, r4
900173f2:	4b8f      	ldr	r3, [pc, #572]	@ (90017630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
900173f4:	f9b3 1000 	ldrsh.w	r1, [r3]
900173f8:	f7ff fe0f 	bl	9001701a <_ZN8touchgfx4Rect10restrictToEss>
900173fc:	4620      	mov	r0, r4
900173fe:	f7f9 fdd4 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017402:	2800      	cmp	r0, #0
90017404:	d170      	bne.n	900174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017406:	4b8b      	ldr	r3, [pc, #556]	@ (90017634 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
90017408:	681b      	ldr	r3, [r3, #0]
9001740a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001740e:	2b02      	cmp	r3, #2
90017410:	d06a      	beq.n	900174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017412:	9403      	str	r4, [sp, #12]
90017414:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90017418:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
9001741c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90017420:	9301      	str	r3, [sp, #4]
90017422:	35a4      	adds	r5, #164	@ 0xa4
90017424:	b15c      	cbz	r4, 9001743e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
90017426:	4629      	mov	r1, r5
90017428:	9803      	ldr	r0, [sp, #12]
9001742a:	f7ff fe47 	bl	900170bc <_ZNK8touchgfx4Rect8includesERKS0_>
9001742e:	3c01      	subs	r4, #1
90017430:	b118      	cbz	r0, 9001743a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
90017432:	b2a1      	uxth	r1, r4
90017434:	9801      	ldr	r0, [sp, #4]
90017436:	f7ff ffbd 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001743a:	3d08      	subs	r5, #8
9001743c:	e7f2      	b.n	90017424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
9001743e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
90017442:	f10a 33ff 	add.w	r3, sl, #4294967295
90017446:	f8cd a010 	str.w	sl, [sp, #16]
9001744a:	9302      	str	r3, [sp, #8]
9001744c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90017450:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90017454:	9306      	str	r3, [sp, #24]
90017456:	445c      	add	r4, fp
90017458:	2500      	movs	r5, #0
9001745a:	4626      	mov	r6, r4
9001745c:	f8cd a014 	str.w	sl, [sp, #20]
90017460:	462f      	mov	r7, r5
90017462:	9b05      	ldr	r3, [sp, #20]
90017464:	2b00      	cmp	r3, #0
90017466:	d073      	beq.n	90017550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
90017468:	9903      	ldr	r1, [sp, #12]
9001746a:	4630      	mov	r0, r6
9001746c:	f7ff fdb3 	bl	90016fd6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017470:	b350      	cbz	r0, 900174c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
90017472:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90017476:	f9b6 c000 	ldrsh.w	ip, [r6]
9001747a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001747e:	45e6      	cmp	lr, ip
90017480:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90017484:	db33      	blt.n	900174ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90017486:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001748a:	88b3      	ldrh	r3, [r6, #4]
9001748c:	4472      	add	r2, lr
9001748e:	4463      	add	r3, ip
90017490:	b212      	sxth	r2, r2
90017492:	b21b      	sxth	r3, r3
90017494:	429a      	cmp	r2, r3
90017496:	dc2a      	bgt.n	900174ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90017498:	fa1f f289 	uxth.w	r2, r9
9001749c:	88f3      	ldrh	r3, [r6, #6]
9001749e:	45c8      	cmp	r8, r9
900174a0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900174a4:	4413      	add	r3, r2
900174a6:	fa1f fc88 	uxth.w	ip, r8
900174aa:	b29b      	uxth	r3, r3
900174ac:	fa0f fe83 	sxth.w	lr, r3
900174b0:	db0f      	blt.n	900174d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
900174b2:	eba3 030c 	sub.w	r3, r3, ip
900174b6:	1ac9      	subs	r1, r1, r3
900174b8:	b209      	sxth	r1, r1
900174ba:	2900      	cmp	r1, #0
900174bc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900174c0:	dd12      	ble.n	900174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900174c2:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
900174c6:	4605      	mov	r5, r0
900174c8:	9b05      	ldr	r3, [sp, #20]
900174ca:	3e08      	subs	r6, #8
900174cc:	3b01      	subs	r3, #1
900174ce:	9305      	str	r3, [sp, #20]
900174d0:	e7c7      	b.n	90017462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
900174d2:	4461      	add	r1, ip
900174d4:	b209      	sxth	r1, r1
900174d6:	4571      	cmp	r1, lr
900174d8:	dc38      	bgt.n	9001754c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900174da:	eba2 020c 	sub.w	r2, r2, ip
900174de:	b212      	sxth	r2, r2
900174e0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
900174e4:	2a00      	cmp	r2, #0
900174e6:	dcee      	bgt.n	900174c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900174e8:	b00f      	add	sp, #60	@ 0x3c
900174ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900174ee:	45c8      	cmp	r8, r9
900174f0:	db2c      	blt.n	9001754c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900174f2:	88f3      	ldrh	r3, [r6, #6]
900174f4:	4499      	add	r9, r3
900174f6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
900174fa:	4498      	add	r8, r3
900174fc:	fa0f f989 	sxth.w	r9, r9
90017500:	fa0f f888 	sxth.w	r8, r8
90017504:	45c1      	cmp	r9, r8
90017506:	db21      	blt.n	9001754c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90017508:	fa1f f28c 	uxth.w	r2, ip
9001750c:	88b3      	ldrh	r3, [r6, #4]
9001750e:	45e6      	cmp	lr, ip
90017510:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90017514:	4413      	add	r3, r2
90017516:	fa1f f88e 	uxth.w	r8, lr
9001751a:	b29b      	uxth	r3, r3
9001751c:	fa0f f983 	sxth.w	r9, r3
90017520:	db0a      	blt.n	90017538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
90017522:	eba3 0308 	sub.w	r3, r3, r8
90017526:	1ac9      	subs	r1, r1, r3
90017528:	b209      	sxth	r1, r1
9001752a:	2900      	cmp	r1, #0
9001752c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90017530:	ddda      	ble.n	900174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017532:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90017536:	e7c6      	b.n	900174c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90017538:	4441      	add	r1, r8
9001753a:	b209      	sxth	r1, r1
9001753c:	4549      	cmp	r1, r9
9001753e:	dc05      	bgt.n	9001754c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90017540:	eba2 0208 	sub.w	r2, r2, r8
90017544:	b212      	sxth	r2, r2
90017546:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
9001754a:	e7cb      	b.n	900174e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
9001754c:	4607      	mov	r7, r0
9001754e:	e7bb      	b.n	900174c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
90017550:	2d00      	cmp	r5, #0
90017552:	d181      	bne.n	90017458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
90017554:	2f00      	cmp	r7, #0
90017556:	f000 81df 	beq.w	90017918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
9001755a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
9001755e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90017562:	b2b3      	uxth	r3, r6
90017564:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90017568:	9305      	str	r3, [sp, #20]
9001756a:	9a05      	ldr	r2, [sp, #20]
9001756c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90017570:	4413      	add	r3, r2
90017572:	b2ba      	uxth	r2, r7
90017574:	4492      	add	sl, r2
90017576:	b29b      	uxth	r3, r3
90017578:	fa1f fa8a 	uxth.w	sl, sl
9001757c:	fa0f f883 	sxth.w	r8, r3
90017580:	fa0f f98a 	sxth.w	r9, sl
90017584:	e9cd 2307 	strd	r2, r3, [sp, #28]
90017588:	9b04      	ldr	r3, [sp, #16]
9001758a:	2b00      	cmp	r3, #0
9001758c:	d054      	beq.n	90017638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
9001758e:	9903      	ldr	r1, [sp, #12]
90017590:	4620      	mov	r0, r4
90017592:	f7ff fd20 	bl	90016fd6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017596:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001759a:	b1c0      	cbz	r0, 900175ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001759c:	f9b4 e000 	ldrsh.w	lr, [r4]
900175a0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900175a4:	4576      	cmp	r6, lr
900175a6:	dc22      	bgt.n	900175ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900175a8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900175ac:	44f4      	add	ip, lr
900175ae:	fa0f fc8c 	sxth.w	ip, ip
900175b2:	45e0      	cmp	r8, ip
900175b4:	db1b      	blt.n	900175ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900175b6:	428f      	cmp	r7, r1
900175b8:	fa1f fc81 	uxth.w	ip, r1
900175bc:	88e1      	ldrh	r1, [r4, #6]
900175be:	dc0d      	bgt.n	900175dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
900175c0:	ebaa 0c0c 	sub.w	ip, sl, ip
900175c4:	f8a4 9002 	strh.w	r9, [r4, #2]
900175c8:	eba1 010c 	sub.w	r1, r1, ip
900175cc:	80e1      	strh	r1, [r4, #6]
900175ce:	4628      	mov	r0, r5
900175d0:	9904      	ldr	r1, [sp, #16]
900175d2:	3c08      	subs	r4, #8
900175d4:	4605      	mov	r5, r0
900175d6:	3901      	subs	r1, #1
900175d8:	9104      	str	r1, [sp, #16]
900175da:	e7d3      	b.n	90017584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
900175dc:	4461      	add	r1, ip
900175de:	b209      	sxth	r1, r1
900175e0:	4549      	cmp	r1, r9
900175e2:	dcf5      	bgt.n	900175d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900175e4:	eba2 0c0c 	sub.w	ip, r2, ip
900175e8:	f8a4 c006 	strh.w	ip, [r4, #6]
900175ec:	e7ef      	b.n	900175ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900175ee:	428f      	cmp	r7, r1
900175f0:	dcee      	bgt.n	900175d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900175f2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900175f6:	4461      	add	r1, ip
900175f8:	b209      	sxth	r1, r1
900175fa:	4589      	cmp	r9, r1
900175fc:	dbe8      	blt.n	900175d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900175fe:	4576      	cmp	r6, lr
90017600:	fa1f fc8e 	uxth.w	ip, lr
90017604:	88a1      	ldrh	r1, [r4, #4]
90017606:	dc07      	bgt.n	90017618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
90017608:	eba3 0c0c 	sub.w	ip, r3, ip
9001760c:	f8a4 8000 	strh.w	r8, [r4]
90017610:	eba1 010c 	sub.w	r1, r1, ip
90017614:	80a1      	strh	r1, [r4, #4]
90017616:	e7da      	b.n	900175ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017618:	4461      	add	r1, ip
9001761a:	b209      	sxth	r1, r1
9001761c:	4588      	cmp	r8, r1
9001761e:	dbd7      	blt.n	900175d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017620:	9905      	ldr	r1, [sp, #20]
90017622:	eba1 0c0c 	sub.w	ip, r1, ip
90017626:	f8a4 c004 	strh.w	ip, [r4, #4]
9001762a:	e7d0      	b.n	900175ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001762c:	2402183a 	.word	0x2402183a
90017630:	24021838 	.word	0x24021838
90017634:	24021844 	.word	0x24021844
90017638:	2d00      	cmp	r5, #0
9001763a:	f000 816d 	beq.w	90017918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
9001763e:	9b06      	ldr	r3, [sp, #24]
90017640:	445b      	add	r3, fp
90017642:	461c      	mov	r4, r3
90017644:	9b02      	ldr	r3, [sp, #8]
90017646:	3301      	adds	r3, #1
90017648:	f000 8166 	beq.w	90017918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
9001764c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90017650:	9803      	ldr	r0, [sp, #12]
90017652:	4629      	mov	r1, r5
90017654:	f7ff fd32 	bl	900170bc <_ZNK8touchgfx4Rect8includesERKS0_>
90017658:	b120      	cbz	r0, 90017664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
9001765a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001765e:	9801      	ldr	r0, [sp, #4]
90017660:	f7ff fea8 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017664:	9903      	ldr	r1, [sp, #12]
90017666:	4628      	mov	r0, r5
90017668:	f7ff fcb5 	bl	90016fd6 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001766c:	2800      	cmp	r0, #0
9001766e:	f000 809c 	beq.w	900177aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90017672:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90017676:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001767a:	fa1f f189 	uxth.w	r1, r9
9001767e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90017682:	9309      	str	r3, [sp, #36]	@ 0x24
90017684:	eb01 0c03 	add.w	ip, r1, r3
90017688:	b283      	uxth	r3, r0
9001768a:	4548      	cmp	r0, r9
9001768c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90017690:	fa1f fa8c 	uxth.w	sl, ip
90017694:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90017698:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
9001769c:	eb03 050c 	add.w	r5, r3, ip
900176a0:	b2ad      	uxth	r5, r5
900176a2:	9505      	str	r5, [sp, #20]
900176a4:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900176a8:	9504      	str	r5, [sp, #16]
900176aa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
900176ae:	f340 8099 	ble.w	900177e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
900176b2:	1a5b      	subs	r3, r3, r1
900176b4:	4596      	cmp	lr, r2
900176b6:	fa0f f08a 	sxth.w	r0, sl
900176ba:	b29b      	uxth	r3, r3
900176bc:	b21e      	sxth	r6, r3
900176be:	dd2e      	ble.n	9001771e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
900176c0:	9f02      	ldr	r7, [sp, #8]
900176c2:	fa1f fe8e 	uxth.w	lr, lr
900176c6:	b292      	uxth	r2, r2
900176c8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
900176cc:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900176d0:	9f04      	ldr	r7, [sp, #16]
900176d2:	ebae 0102 	sub.w	r1, lr, r2
900176d6:	44a6      	add	lr, r4
900176d8:	1a3f      	subs	r7, r7, r0
900176da:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
900176de:	b289      	uxth	r1, r1
900176e0:	4402      	add	r2, r0
900176e2:	fa0f fe8e 	sxth.w	lr, lr
900176e6:	b20d      	sxth	r5, r1
900176e8:	b212      	sxth	r2, r2
900176ea:	436f      	muls	r7, r5
900176ec:	ebae 0202 	sub.w	r2, lr, r2
900176f0:	4372      	muls	r2, r6
900176f2:	4297      	cmp	r7, r2
900176f4:	db09      	blt.n	9001770a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
900176f6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
900176fa:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
900176fe:	449c      	add	ip, r3
90017700:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90017704:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90017708:	e684      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001770a:	4421      	add	r1, r4
9001770c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90017710:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90017714:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017718:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001771c:	e67a      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001771e:	9f04      	ldr	r7, [sp, #16]
90017720:	42b8      	cmp	r0, r7
90017722:	da27      	bge.n	90017774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
90017724:	9902      	ldr	r1, [sp, #8]
90017726:	1a3f      	subs	r7, r7, r0
90017728:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
9001772c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90017730:	eb05 010e 	add.w	r1, r5, lr
90017734:	fa1f f881 	uxth.w	r8, r1
90017738:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
9001773c:	4411      	add	r1, r2
9001773e:	fa0f f988 	sxth.w	r9, r8
90017742:	eba2 020e 	sub.w	r2, r2, lr
90017746:	eba1 0108 	sub.w	r1, r1, r8
9001774a:	4372      	muls	r2, r6
9001774c:	b289      	uxth	r1, r1
9001774e:	fa0f f881 	sxth.w	r8, r1
90017752:	fb08 f707 	mul.w	r7, r8, r7
90017756:	42ba      	cmp	r2, r7
90017758:	dc06      	bgt.n	90017768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
9001775a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
9001775e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90017762:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90017766:	e7ca      	b.n	900176fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90017768:	4429      	add	r1, r5
9001776a:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001776e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017772:	e64f      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017774:	9805      	ldr	r0, [sp, #20]
90017776:	2d06      	cmp	r5, #6
90017778:	ebaa 0000 	sub.w	r0, sl, r0
9001777c:	b280      	uxth	r0, r0
9001777e:	fa0f fe80 	sxth.w	lr, r0
90017782:	d817      	bhi.n	900177b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90017784:	9b04      	ldr	r3, [sp, #16]
90017786:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
9001778a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001778e:	1c6b      	adds	r3, r5, #1
90017790:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90017794:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017798:	9b01      	ldr	r3, [sp, #4]
9001779a:	9801      	ldr	r0, [sp, #4]
9001779c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900177a0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900177a4:	805a      	strh	r2, [r3, #2]
900177a6:	809e      	strh	r6, [r3, #4]
900177a8:	80d9      	strh	r1, [r3, #6]
900177aa:	9b02      	ldr	r3, [sp, #8]
900177ac:	3c08      	subs	r4, #8
900177ae:	3b01      	subs	r3, #1
900177b0:	9302      	str	r3, [sp, #8]
900177b2:	e747      	b.n	90017644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
900177b4:	9a02      	ldr	r2, [sp, #8]
900177b6:	45b6      	cmp	lr, r6
900177b8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900177bc:	db0d      	blt.n	900177da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
900177be:	449c      	add	ip, r3
900177c0:	445a      	add	r2, fp
900177c2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900177c6:	fa1f fc8c 	uxth.w	ip, ip
900177ca:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
900177ce:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900177d2:	448c      	add	ip, r1
900177d4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
900177d8:	e61c      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900177da:	445a      	add	r2, fp
900177dc:	4484      	add	ip, r0
900177de:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
900177e2:	e78f      	b.n	90017704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900177e4:	fa1f f18e 	uxth.w	r1, lr
900177e8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
900177ec:	b293      	uxth	r3, r2
900177ee:	4596      	cmp	lr, r2
900177f0:	eb01 0806 	add.w	r8, r1, r6
900177f4:	9306      	str	r3, [sp, #24]
900177f6:	fa1f f888 	uxth.w	r8, r8
900177fa:	9f06      	ldr	r7, [sp, #24]
900177fc:	fa0f f388 	sxth.w	r3, r8
90017800:	9307      	str	r3, [sp, #28]
90017802:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017806:	443b      	add	r3, r7
90017808:	b29b      	uxth	r3, r3
9001780a:	9308      	str	r3, [sp, #32]
9001780c:	da24      	bge.n	90017858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
9001780e:	9905      	ldr	r1, [sp, #20]
90017810:	eba3 0308 	sub.w	r3, r3, r8
90017814:	eba2 020e 	sub.w	r2, r2, lr
90017818:	eba9 0000 	sub.w	r0, r9, r0
9001781c:	ebaa 0401 	sub.w	r4, sl, r1
90017820:	b29b      	uxth	r3, r3
90017822:	b2a4      	uxth	r4, r4
90017824:	b219      	sxth	r1, r3
90017826:	b225      	sxth	r5, r4
90017828:	4348      	muls	r0, r1
9001782a:	436a      	muls	r2, r5
9001782c:	4282      	cmp	r2, r0
9001782e:	9a02      	ldr	r2, [sp, #8]
90017830:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017834:	445a      	add	r2, fp
90017836:	dc06      	bgt.n	90017846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
90017838:	9b07      	ldr	r3, [sp, #28]
9001783a:	44a4      	add	ip, r4
9001783c:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90017840:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90017844:	e75e      	b.n	90017704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90017846:	9904      	ldr	r1, [sp, #16]
90017848:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
9001784c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90017850:	4433      	add	r3, r6
90017852:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017856:	e5dd      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017858:	9f06      	ldr	r7, [sp, #24]
9001785a:	9b04      	ldr	r3, [sp, #16]
9001785c:	1bc9      	subs	r1, r1, r7
9001785e:	fa0f f78a 	sxth.w	r7, sl
90017862:	b289      	uxth	r1, r1
90017864:	429f      	cmp	r7, r3
90017866:	fa0f fe81 	sxth.w	lr, r1
9001786a:	dd23      	ble.n	900178b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
9001786c:	9a05      	ldr	r2, [sp, #20]
9001786e:	eba9 0000 	sub.w	r0, r9, r0
90017872:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017876:	ebaa 0202 	sub.w	r2, sl, r2
9001787a:	9d07      	ldr	r5, [sp, #28]
9001787c:	fb0e f000 	mul.w	r0, lr, r0
90017880:	b292      	uxth	r2, r2
90017882:	eba5 0a03 	sub.w	sl, r5, r3
90017886:	9b02      	ldr	r3, [sp, #8]
90017888:	b214      	sxth	r4, r2
9001788a:	00db      	lsls	r3, r3, #3
9001788c:	fb04 fa0a 	mul.w	sl, r4, sl
90017890:	445b      	add	r3, fp
90017892:	4550      	cmp	r0, sl
90017894:	db03      	blt.n	9001789e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90017896:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
9001789a:	4494      	add	ip, r2
9001789c:	e732      	b.n	90017704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001789e:	9a04      	ldr	r2, [sp, #16]
900178a0:	4431      	add	r1, r6
900178a2:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
900178a6:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
900178aa:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
900178ae:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900178b2:	e75c      	b.n	9001776e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
900178b4:	9b08      	ldr	r3, [sp, #32]
900178b6:	2d06      	cmp	r5, #6
900178b8:	eba3 0308 	sub.w	r3, r3, r8
900178bc:	b29b      	uxth	r3, r3
900178be:	b218      	sxth	r0, r3
900178c0:	d813      	bhi.n	900178ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
900178c2:	9b07      	ldr	r3, [sp, #28]
900178c4:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
900178c8:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
900178cc:	1c6b      	adds	r3, r5, #1
900178ce:	9901      	ldr	r1, [sp, #4]
900178d0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900178d4:	9b01      	ldr	r3, [sp, #4]
900178d6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900178da:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900178de:	805a      	strh	r2, [r3, #2]
900178e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900178e2:	f8a3 e006 	strh.w	lr, [r3, #6]
900178e6:	809a      	strh	r2, [r3, #4]
900178e8:	e75f      	b.n	900177aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
900178ea:	9c02      	ldr	r4, [sp, #8]
900178ec:	4570      	cmp	r0, lr
900178ee:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900178f2:	db0d      	blt.n	90017910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
900178f4:	4431      	add	r1, r6
900178f6:	9b06      	ldr	r3, [sp, #24]
900178f8:	445c      	add	r4, fp
900178fa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900178fe:	b289      	uxth	r1, r1
90017900:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90017904:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017908:	4419      	add	r1, r3
9001790a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
9001790e:	e581      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017910:	445c      	add	r4, fp
90017912:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90017916:	e79b      	b.n	90017850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
90017918:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
9001791c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90017920:	1e65      	subs	r5, r4, #1
90017922:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90017926:	b2ad      	uxth	r5, r5
90017928:	42b5      	cmp	r5, r6
9001792a:	d044      	beq.n	900179b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
9001792c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90017930:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90017934:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90017938:	4282      	cmp	r2, r0
9001793a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
9001793e:	d11f      	bne.n	90017980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90017940:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90017944:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017948:	459c      	cmp	ip, r3
9001794a:	d119      	bne.n	90017980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
9001794c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90017950:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90017954:	19d8      	adds	r0, r3, r7
90017956:	b200      	sxth	r0, r0
90017958:	4288      	cmp	r0, r1
9001795a:	d109      	bne.n	90017970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
9001795c:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90017960:	4413      	add	r3, r2
90017962:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90017966:	4629      	mov	r1, r5
90017968:	9801      	ldr	r0, [sp, #4]
9001796a:	f7ff fd23 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001796e:	e003      	b.n	90017978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017970:	4411      	add	r1, r2
90017972:	b209      	sxth	r1, r1
90017974:	42b9      	cmp	r1, r7
90017976:	d0f3      	beq.n	90017960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90017978:	3d01      	subs	r5, #1
9001797a:	3c08      	subs	r4, #8
9001797c:	b2ad      	uxth	r5, r5
9001797e:	e7d3      	b.n	90017928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
90017980:	42b9      	cmp	r1, r7
90017982:	d1f9      	bne.n	90017978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017984:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90017988:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001798c:	4299      	cmp	r1, r3
9001798e:	d1f3      	bne.n	90017978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017990:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017994:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017998:	181f      	adds	r7, r3, r0
9001799a:	b23f      	sxth	r7, r7
9001799c:	42ba      	cmp	r2, r7
9001799e:	d105      	bne.n	900179ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
900179a0:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
900179a4:	440b      	add	r3, r1
900179a6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900179aa:	e7dc      	b.n	90017966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
900179ac:	440a      	add	r2, r1
900179ae:	b212      	sxth	r2, r2
900179b0:	4290      	cmp	r0, r2
900179b2:	d1e1      	bne.n	90017978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900179b4:	e7f6      	b.n	900179a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
900179b6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
900179ba:	2e07      	cmp	r6, #7
900179bc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900179c0:	d812      	bhi.n	900179e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
900179c2:	1c75      	adds	r5, r6, #1
900179c4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900179c8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900179cc:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
900179d0:	9d01      	ldr	r5, [sp, #4]
900179d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900179d6:	442c      	add	r4, r5
900179d8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
900179dc:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900179e0:	8061      	strh	r1, [r4, #2]
900179e2:	80a2      	strh	r2, [r4, #4]
900179e4:	80e3      	strh	r3, [r4, #6]
900179e6:	e57f      	b.n	900174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900179e8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900179ec:	3e01      	subs	r6, #1
900179ee:	445c      	add	r4, fp
900179f0:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
900179f4:	f04f 37ff 	mov.w	r7, #4294967295
900179f8:	2500      	movs	r5, #0
900179fa:	9305      	str	r3, [sp, #20]
900179fc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017a00:	1e72      	subs	r2, r6, #1
90017a02:	9302      	str	r3, [sp, #8]
90017a04:	4691      	mov	r9, r2
90017a06:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017a0a:	9304      	str	r3, [sp, #16]
90017a0c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90017a10:	f1b9 3fff 	cmp.w	r9, #4294967295
90017a14:	6818      	ldr	r0, [r3, #0]
90017a16:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017a1a:	9207      	str	r2, [sp, #28]
90017a1c:	bf16      	itet	ne
90017a1e:	9905      	ldrne	r1, [sp, #20]
90017a20:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017a24:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90017a28:	9306      	str	r3, [sp, #24]
90017a2a:	f8be 1006 	ldrh.w	r1, [lr, #6]
90017a2e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017a32:	fb18 f801 	smulbb	r8, r8, r1
90017a36:	6859      	ldr	r1, [r3, #4]
90017a38:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90017a3c:	4671      	mov	r1, lr
90017a3e:	a80c      	add	r0, sp, #48	@ 0x30
90017a40:	f7ff fb62 	bl	90017108 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017a44:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90017a48:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90017a4c:	f04f 0c08 	mov.w	ip, #8
90017a50:	9b04      	ldr	r3, [sp, #16]
90017a52:	9a02      	ldr	r2, [sp, #8]
90017a54:	fb10 f001 	smulbb	r0, r0, r1
90017a58:	fb02 8803 	mla	r8, r2, r3, r8
90017a5c:	eba0 0108 	sub.w	r1, r0, r8
90017a60:	fb90 f0fc 	sdiv	r0, r0, ip
90017a64:	4288      	cmp	r0, r1
90017a66:	dc20      	bgt.n	90017aaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90017a68:	4551      	cmp	r1, sl
90017a6a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90017a6e:	da03      	bge.n	90017a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90017a70:	b1d9      	cbz	r1, 90017aaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90017a72:	468a      	mov	sl, r1
90017a74:	464f      	mov	r7, r9
90017a76:	4635      	mov	r5, r6
90017a78:	f109 39ff 	add.w	r9, r9, #4294967295
90017a7c:	f119 0f02 	cmn.w	r9, #2
90017a80:	d1c6      	bne.n	90017a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90017a82:	4616      	mov	r6, r2
90017a84:	3201      	adds	r2, #1
90017a86:	f1a4 0408 	sub.w	r4, r4, #8
90017a8a:	d1b7      	bne.n	900179fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90017a8c:	9b01      	ldr	r3, [sp, #4]
90017a8e:	b2ac      	uxth	r4, r5
90017a90:	00ed      	lsls	r5, r5, #3
90017a92:	1958      	adds	r0, r3, r5
90017a94:	1c7b      	adds	r3, r7, #1
90017a96:	d10b      	bne.n	90017ab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90017a98:	4601      	mov	r1, r0
90017a9a:	9803      	ldr	r0, [sp, #12]
90017a9c:	f7ff fb34 	bl	90017108 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017aa0:	4621      	mov	r1, r4
90017aa2:	9801      	ldr	r0, [sp, #4]
90017aa4:	f7ff fc86 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017aa8:	e4b4      	b.n	90017414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017aaa:	464f      	mov	r7, r9
90017aac:	4635      	mov	r5, r6
90017aae:	e7ed      	b.n	90017a8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90017ab0:	9b01      	ldr	r3, [sp, #4]
90017ab2:	00ff      	lsls	r7, r7, #3
90017ab4:	445d      	add	r5, fp
90017ab6:	19d9      	adds	r1, r3, r7
90017ab8:	445f      	add	r7, fp
90017aba:	f7ff fb25 	bl	90017108 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017abe:	9b03      	ldr	r3, [sp, #12]
90017ac0:	cb03      	ldmia	r3!, {r0, r1}
90017ac2:	9b03      	ldr	r3, [sp, #12]
90017ac4:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90017ac8:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90017acc:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017ad0:	6869      	ldr	r1, [r5, #4]
90017ad2:	c303      	stmia	r3!, {r0, r1}
90017ad4:	e7e4      	b.n	90017aa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90017ad6:	bf00      	nop

90017ad8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90017ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017adc:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90017ae0:	b0a1      	sub	sp, #132	@ 0x84
90017ae2:	4604      	mov	r4, r0
90017ae4:	4630      	mov	r0, r6
90017ae6:	f7f9 fa60 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017aea:	4605      	mov	r5, r0
90017aec:	b948      	cbnz	r0, 90017b02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90017aee:	6823      	ldr	r3, [r4, #0]
90017af0:	4620      	mov	r0, r4
90017af2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017af4:	e896 0006 	ldmia.w	r6, {r1, r2}
90017af8:	4798      	blx	r3
90017afa:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90017afe:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90017b02:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017b06:	2b00      	cmp	r3, #0
90017b08:	d149      	bne.n	90017b9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90017b0a:	4bb2      	ldr	r3, [pc, #712]	@ (90017dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017b0c:	681b      	ldr	r3, [r3, #0]
90017b0e:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90017b12:	1ebb      	subs	r3, r7, #2
90017b14:	425f      	negs	r7, r3
90017b16:	415f      	adcs	r7, r3
90017b18:	4baf      	ldr	r3, [pc, #700]	@ (90017dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90017b1a:	681b      	ldr	r3, [r3, #0]
90017b1c:	2b00      	cmp	r3, #0
90017b1e:	d040      	beq.n	90017ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90017b20:	4dae      	ldr	r5, [pc, #696]	@ (90017ddc <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90017b22:	4628      	mov	r0, r5
90017b24:	f7f9 fa41 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017b28:	4606      	mov	r6, r0
90017b2a:	2800      	cmp	r0, #0
90017b2c:	d139      	bne.n	90017ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90017b2e:	4628      	mov	r0, r5
90017b30:	f7ff f960 	bl	90016df4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017b34:	6823      	ldr	r3, [r4, #0]
90017b36:	6829      	ldr	r1, [r5, #0]
90017b38:	4620      	mov	r0, r4
90017b3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017b3c:	686a      	ldr	r2, [r5, #4]
90017b3e:	4798      	blx	r3
90017b40:	802e      	strh	r6, [r5, #0]
90017b42:	806e      	strh	r6, [r5, #2]
90017b44:	80ae      	strh	r6, [r5, #4]
90017b46:	80ee      	strh	r6, [r5, #6]
90017b48:	af0f      	add	r7, sp, #60	@ 0x3c
90017b4a:	4ea5      	ldr	r6, [pc, #660]	@ (90017de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90017b4c:	4638      	mov	r0, r7
90017b4e:	f7ff fbd5 	bl	900172fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90017b52:	8835      	ldrh	r5, [r6, #0]
90017b54:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90017b58:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90017b5c:	462b      	mov	r3, r5
90017b5e:	4563      	cmp	r3, ip
90017b60:	d224      	bcs.n	90017bac <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90017b62:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90017b66:	2907      	cmp	r1, #7
90017b68:	d816      	bhi.n	90017b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90017b6a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90017b6e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90017b72:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90017b76:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90017b7a:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90017b7e:	1c4a      	adds	r2, r1, #1
90017b80:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90017b84:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90017b88:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90017b8c:	f8a2 a002 	strh.w	sl, [r2, #2]
90017b90:	f8a2 8004 	strh.w	r8, [r2, #4]
90017b94:	f8a2 e006 	strh.w	lr, [r2, #6]
90017b98:	3301      	adds	r3, #1
90017b9a:	b29b      	uxth	r3, r3
90017b9c:	e7df      	b.n	90017b5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90017b9e:	2701      	movs	r7, #1
90017ba0:	e7ba      	b.n	90017b18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90017ba2:	2f00      	cmp	r7, #0
90017ba4:	d1d0      	bne.n	90017b48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90017ba6:	b021      	add	sp, #132	@ 0x84
90017ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017bac:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90017bb0:	42ab      	cmp	r3, r5
90017bb2:	d90c      	bls.n	90017bce <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90017bb4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90017bb8:	6822      	ldr	r2, [r4, #0]
90017bba:	3501      	adds	r5, #1
90017bbc:	4620      	mov	r0, r4
90017bbe:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90017bc0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90017bc4:	b2ad      	uxth	r5, r5
90017bc6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90017bca:	47b8      	blx	r7
90017bcc:	e7ee      	b.n	90017bac <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90017bce:	4d81      	ldr	r5, [pc, #516]	@ (90017dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017bd0:	6828      	ldr	r0, [r5, #0]
90017bd2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90017bd6:	2b01      	cmp	r3, #1
90017bd8:	f040 813d 	bne.w	90017e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90017bdc:	4a81      	ldr	r2, [pc, #516]	@ (90017de4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90017bde:	8833      	ldrh	r3, [r6, #0]
90017be0:	7812      	ldrb	r2, [r2, #0]
90017be2:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90017be6:	2a01      	cmp	r2, #1
90017be8:	d014      	beq.n	90017c14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90017bea:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90017bee:	f04f 0900 	mov.w	r9, #0
90017bf2:	32ae      	adds	r2, #174	@ 0xae
90017bf4:	4283      	cmp	r3, r0
90017bf6:	f102 0208 	add.w	r2, r2, #8
90017bfa:	f280 8083 	bge.w	90017d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90017bfe:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90017c02:	3301      	adds	r3, #1
90017c04:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90017c08:	4439      	add	r1, r7
90017c0a:	b209      	sxth	r1, r1
90017c0c:	4589      	cmp	r9, r1
90017c0e:	bfb8      	it	lt
90017c10:	4689      	movlt	r9, r1
90017c12:	e7ef      	b.n	90017bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90017c14:	4f74      	ldr	r7, [pc, #464]	@ (90017de8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90017c16:	883a      	ldrh	r2, [r7, #0]
90017c18:	4693      	mov	fp, r2
90017c1a:	4283      	cmp	r3, r0
90017c1c:	da08      	bge.n	90017c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90017c1e:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90017c22:	3301      	adds	r3, #1
90017c24:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90017c28:	458b      	cmp	fp, r1
90017c2a:	bfa8      	it	ge
90017c2c:	468b      	movge	fp, r1
90017c2e:	e7f4      	b.n	90017c1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90017c30:	2a0f      	cmp	r2, #15
90017c32:	f04f 0300 	mov.w	r3, #0
90017c36:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90017dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90017c3a:	bf8c      	ite	hi
90017c3c:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90017c40:	f04f 0801 	movls.w	r8, #1
90017c44:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90017c48:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017c4c:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90017c50:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017c54:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90017c58:	6828      	ldr	r0, [r5, #0]
90017c5a:	455b      	cmp	r3, fp
90017c5c:	f340 80c8 	ble.w	90017df0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017c60:	6803      	ldr	r3, [r0, #0]
90017c62:	f8b7 a000 	ldrh.w	sl, [r7]
90017c66:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017c6a:	4798      	blx	r3
90017c6c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90017c70:	ebaa 0000 	sub.w	r0, sl, r0
90017c74:	682b      	ldr	r3, [r5, #0]
90017c76:	ebac 0e08 	sub.w	lr, ip, r8
90017c7a:	b280      	uxth	r0, r0
90017c7c:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90017c80:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90017c84:	4570      	cmp	r0, lr
90017c86:	dd05      	ble.n	90017c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017c88:	4558      	cmp	r0, fp
90017c8a:	dd03      	ble.n	90017c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017c8c:	b901      	cbnz	r1, 90017c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017c8e:	b392      	cbz	r2, 90017cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90017c90:	4658      	mov	r0, fp
90017c92:	e006      	b.n	90017ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90017c94:	2900      	cmp	r1, #0
90017c96:	d1fb      	bne.n	90017c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017c98:	2a00      	cmp	r2, #0
90017c9a:	d1f9      	bne.n	90017c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017c9c:	4558      	cmp	r0, fp
90017c9e:	bfb8      	it	lt
90017ca0:	4658      	movlt	r0, fp
90017ca2:	f9b9 3000 	ldrsh.w	r3, [r9]
90017ca6:	2200      	movs	r2, #0
90017ca8:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90017cac:	ebac 0000 	sub.w	r0, ip, r0
90017cb0:	f8b6 a000 	ldrh.w	sl, [r6]
90017cb4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90017cb8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90017cbc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017cc0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017cc4:	4553      	cmp	r3, sl
90017cc6:	ddc5      	ble.n	90017c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90017cc8:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90017ccc:	ab0d      	add	r3, sp, #52	@ 0x34
90017cce:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017cd2:	6851      	ldr	r1, [r2, #4]
90017cd4:	c303      	stmia	r3!, {r0, r1}
90017cd6:	a80d      	add	r0, sp, #52	@ 0x34
90017cd8:	a90b      	add	r1, sp, #44	@ 0x2c
90017cda:	f7f9 f923 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90017cde:	a80d      	add	r0, sp, #52	@ 0x34
90017ce0:	f7f9 f963 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017ce4:	b920      	cbnz	r0, 90017cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90017ce6:	6823      	ldr	r3, [r4, #0]
90017ce8:	a90d      	add	r1, sp, #52	@ 0x34
90017cea:	4620      	mov	r0, r4
90017cec:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017cee:	4798      	blx	r3
90017cf0:	f10a 0a01 	add.w	sl, sl, #1
90017cf4:	e7e4      	b.n	90017cc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90017cf6:	681a      	ldr	r2, [r3, #0]
90017cf8:	2101      	movs	r1, #1
90017cfa:	4618      	mov	r0, r3
90017cfc:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90017d00:	4790      	blx	r2
90017d02:	e7a7      	b.n	90017c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90017d04:	4b39      	ldr	r3, [pc, #228]	@ (90017dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90017d06:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90017de8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90017d0a:	881f      	ldrh	r7, [r3, #0]
90017d0c:	2300      	movs	r3, #0
90017d0e:	2f0f      	cmp	r7, #15
90017d10:	bf8c      	ite	hi
90017d12:	08ff      	lsrhi	r7, r7, #3
90017d14:	2701      	movls	r7, #1
90017d16:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90017d1a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017d1e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90017d22:	6828      	ldr	r0, [r5, #0]
90017d24:	4413      	add	r3, r2
90017d26:	b21b      	sxth	r3, r3
90017d28:	454b      	cmp	r3, r9
90017d2a:	da61      	bge.n	90017df0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017d2c:	6803      	ldr	r3, [r0, #0]
90017d2e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017d32:	4798      	blx	r3
90017d34:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90017d38:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017d3c:	682a      	ldr	r2, [r5, #0]
90017d3e:	4473      	add	r3, lr
90017d40:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90017d44:	b21b      	sxth	r3, r3
90017d46:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90017d4a:	eb03 0e07 	add.w	lr, r3, r7
90017d4e:	4570      	cmp	r0, lr
90017d50:	da0d      	bge.n	90017d6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90017d52:	4548      	cmp	r0, r9
90017d54:	da0b      	bge.n	90017d6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90017d56:	f1bc 0f00 	cmp.w	ip, #0
90017d5a:	d138      	bne.n	90017dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017d5c:	2900      	cmp	r1, #0
90017d5e:	d136      	bne.n	90017dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017d60:	6813      	ldr	r3, [r2, #0]
90017d62:	2101      	movs	r1, #1
90017d64:	4610      	mov	r0, r2
90017d66:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90017d6a:	4798      	blx	r3
90017d6c:	e7d5      	b.n	90017d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90017d6e:	f1bc 0f00 	cmp.w	ip, #0
90017d72:	d12c      	bne.n	90017dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017d74:	bb59      	cbnz	r1, 90017dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017d76:	4548      	cmp	r0, r9
90017d78:	bfa8      	it	ge
90017d7a:	4648      	movge	r0, r9
90017d7c:	f9b8 2000 	ldrsh.w	r2, [r8]
90017d80:	2100      	movs	r1, #0
90017d82:	1ac0      	subs	r0, r0, r3
90017d84:	f8b6 a000 	ldrh.w	sl, [r6]
90017d88:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90017d8c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017d90:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90017d94:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90017d98:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017d9c:	4553      	cmp	r3, sl
90017d9e:	ddbc      	ble.n	90017d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90017da0:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90017da4:	ab0d      	add	r3, sp, #52	@ 0x34
90017da6:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017daa:	6851      	ldr	r1, [r2, #4]
90017dac:	c303      	stmia	r3!, {r0, r1}
90017dae:	a80d      	add	r0, sp, #52	@ 0x34
90017db0:	a90b      	add	r1, sp, #44	@ 0x2c
90017db2:	f7f9 f8b7 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90017db6:	a80d      	add	r0, sp, #52	@ 0x34
90017db8:	f7f9 f8f7 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90017dbc:	b920      	cbnz	r0, 90017dc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90017dbe:	6823      	ldr	r3, [r4, #0]
90017dc0:	a90d      	add	r1, sp, #52	@ 0x34
90017dc2:	4620      	mov	r0, r4
90017dc4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017dc6:	4798      	blx	r3
90017dc8:	f10a 0a01 	add.w	sl, sl, #1
90017dcc:	e7e4      	b.n	90017d98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90017dce:	4648      	mov	r0, r9
90017dd0:	e7d4      	b.n	90017d7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90017dd2:	bf00      	nop
90017dd4:	24021844 	.word	0x24021844
90017dd8:	24021884 	.word	0x24021884
90017ddc:	24021890 	.word	0x24021890
90017de0:	24000088 	.word	0x24000088
90017de4:	2402183c 	.word	0x2402183c
90017de8:	24021838 	.word	0x24021838
90017dec:	2402183a 	.word	0x2402183a
90017df0:	6828      	ldr	r0, [r5, #0]
90017df2:	6803      	ldr	r3, [r0, #0]
90017df4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90017df6:	4798      	blx	r3
90017df8:	4ba4      	ldr	r3, [pc, #656]	@ (9001808c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90017dfa:	781b      	ldrb	r3, [r3, #0]
90017dfc:	2b00      	cmp	r3, #0
90017dfe:	f43f aed2 	beq.w	90017ba6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90017e02:	2300      	movs	r3, #0
90017e04:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90017e08:	a80f      	add	r0, sp, #60	@ 0x3c
90017e0a:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90017e0e:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90017e12:	4b9f      	ldr	r3, [pc, #636]	@ (90018090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90017e14:	881b      	ldrh	r3, [r3, #0]
90017e16:	42b3      	cmp	r3, r6
90017e18:	f4bf aec5 	bcs.w	90017ba6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90017e1c:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90017e20:	2907      	cmp	r1, #7
90017e22:	d815      	bhi.n	90017e50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90017e24:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90017e28:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90017e2c:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90017e30:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90017e34:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90017e38:	1c4a      	adds	r2, r1, #1
90017e3a:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90017e3e:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90017e42:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90017e46:	f8a2 e002 	strh.w	lr, [r2, #2]
90017e4a:	f8a2 c004 	strh.w	ip, [r2, #4]
90017e4e:	80d7      	strh	r7, [r2, #6]
90017e50:	3301      	adds	r3, #1
90017e52:	b29b      	uxth	r3, r3
90017e54:	e7df      	b.n	90017e16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90017e56:	2b02      	cmp	r3, #2
90017e58:	f040 80ce 	bne.w	90017ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017e5c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017e60:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90017e64:	9308      	str	r3, [sp, #32]
90017e66:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90017e6a:	f10b 37ff 	add.w	r7, fp, #4294967295
90017e6e:	9307      	str	r3, [sp, #28]
90017e70:	b2bf      	uxth	r7, r7
90017e72:	6803      	ldr	r3, [r0, #0]
90017e74:	fa0f f887 	sxth.w	r8, r7
90017e78:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017e7c:	4798      	blx	r3
90017e7e:	4b85      	ldr	r3, [pc, #532]	@ (90018094 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90017e80:	4682      	mov	sl, r0
90017e82:	2000      	movs	r0, #0
90017e84:	881b      	ldrh	r3, [r3, #0]
90017e86:	9302      	str	r3, [sp, #8]
90017e88:	4b83      	ldr	r3, [pc, #524]	@ (90018098 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90017e8a:	881e      	ldrh	r6, [r3, #0]
90017e8c:	4b83      	ldr	r3, [pc, #524]	@ (9001809c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017e8e:	781b      	ldrb	r3, [r3, #0]
90017e90:	2b01      	cmp	r3, #1
90017e92:	bf1e      	ittt	ne
90017e94:	9b02      	ldrne	r3, [sp, #8]
90017e96:	9602      	strne	r6, [sp, #8]
90017e98:	461e      	movne	r6, r3
90017e9a:	f7e8 fef3 	bl	90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90017e9e:	fb96 fbfb 	sdiv	fp, r6, fp
90017ea2:	fb0b f808 	mul.w	r8, fp, r8
90017ea6:	45c2      	cmp	sl, r8
90017ea8:	da0c      	bge.n	90017ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90017eaa:	6828      	ldr	r0, [r5, #0]
90017eac:	210a      	movs	r1, #10
90017eae:	6803      	ldr	r3, [r0, #0]
90017eb0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017eb4:	4798      	blx	r3
90017eb6:	6828      	ldr	r0, [r5, #0]
90017eb8:	6803      	ldr	r3, [r0, #0]
90017eba:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017ebe:	4798      	blx	r3
90017ec0:	4682      	mov	sl, r0
90017ec2:	e7f0      	b.n	90017ea6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90017ec4:	2000      	movs	r0, #0
90017ec6:	f04f 0800 	mov.w	r8, #0
90017eca:	f7e8 ff05 	bl	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017ece:	fa1f f38b 	uxth.w	r3, fp
90017ed2:	4645      	mov	r5, r8
90017ed4:	fb17 f703 	smulbb	r7, r7, r3
90017ed8:	9304      	str	r3, [sp, #16]
90017eda:	b2bb      	uxth	r3, r7
90017edc:	4f70      	ldr	r7, [pc, #448]	@ (900180a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90017ede:	9305      	str	r3, [sp, #20]
90017ee0:	0973      	lsrs	r3, r6, #5
90017ee2:	9306      	str	r3, [sp, #24]
90017ee4:	42b5      	cmp	r5, r6
90017ee6:	d087      	beq.n	90017df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90017ee8:	6838      	ldr	r0, [r7, #0]
90017eea:	6803      	ldr	r3, [r0, #0]
90017eec:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017ef0:	4798      	blx	r3
90017ef2:	4582      	cmp	sl, r0
90017ef4:	4681      	mov	r9, r0
90017ef6:	d907      	bls.n	90017f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90017ef8:	f1b8 0f00 	cmp.w	r8, #0
90017efc:	d007      	beq.n	90017f0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90017efe:	6838      	ldr	r0, [r7, #0]
90017f00:	6803      	ldr	r3, [r0, #0]
90017f02:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90017f06:	e776      	b.n	90017df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017f08:	f1b8 0f00 	cmp.w	r8, #0
90017f0c:	d003      	beq.n	90017f16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90017f0e:	454d      	cmp	r5, r9
90017f10:	d3f5      	bcc.n	90017efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90017f12:	f04f 0801 	mov.w	r8, #1
90017f16:	9a04      	ldr	r2, [sp, #16]
90017f18:	fb95 f3fb 	sdiv	r3, r5, fp
90017f1c:	9303      	str	r3, [sp, #12]
90017f1e:	3301      	adds	r3, #1
90017f20:	fb13 f302 	smulbb	r3, r3, r2
90017f24:	b299      	uxth	r1, r3
90017f26:	f1b8 0f00 	cmp.w	r8, #0
90017f2a:	d04d      	beq.n	90017fc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90017f2c:	eb09 030b 	add.w	r3, r9, fp
90017f30:	42b3      	cmp	r3, r6
90017f32:	bfa8      	it	ge
90017f34:	4633      	movge	r3, r6
90017f36:	b29b      	uxth	r3, r3
90017f38:	9807      	ldr	r0, [sp, #28]
90017f3a:	428b      	cmp	r3, r1
90017f3c:	bf94      	ite	ls
90017f3e:	ebc5 0203 	rsbls	r2, r5, r3
90017f42:	ebc5 0201 	rsbhi	r2, r5, r1
90017f46:	4282      	cmp	r2, r0
90017f48:	bfa8      	it	ge
90017f4a:	4602      	movge	r2, r0
90017f4c:	9808      	ldr	r0, [sp, #32]
90017f4e:	fa1f fa82 	uxth.w	sl, r2
90017f52:	4582      	cmp	sl, r0
90017f54:	d205      	bcs.n	90017f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90017f56:	fa15 f082 	uxtah	r0, r5, r2
90017f5a:	4286      	cmp	r6, r0
90017f5c:	d001      	beq.n	90017f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90017f5e:	4299      	cmp	r1, r3
90017f60:	d23f      	bcs.n	90017fe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90017f62:	2001      	movs	r0, #1
90017f64:	9209      	str	r2, [sp, #36]	@ 0x24
90017f66:	f7e8 fe8d 	bl	90000c84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90017f6a:	6838      	ldr	r0, [r7, #0]
90017f6c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
90017f70:	6803      	ldr	r3, [r0, #0]
90017f72:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017f76:	4798      	blx	r3
90017f78:	4b48      	ldr	r3, [pc, #288]	@ (9001809c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017f7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017f7c:	2000      	movs	r0, #0
90017f7e:	781b      	ldrb	r3, [r3, #0]
90017f80:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90017f84:	b212      	sxth	r2, r2
90017f86:	2b01      	cmp	r3, #1
90017f88:	d122      	bne.n	90017fd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90017f8a:	1b73      	subs	r3, r6, r5
90017f8c:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
90017f90:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90017f94:	eba3 030a 	sub.w	r3, r3, sl
90017f98:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90017f9c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90017fa0:	6823      	ldr	r3, [r4, #0]
90017fa2:	a90d      	add	r1, sp, #52	@ 0x34
90017fa4:	4620      	mov	r0, r4
90017fa6:	4455      	add	r5, sl
90017fa8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017faa:	4798      	blx	r3
90017fac:	6838      	ldr	r0, [r7, #0]
90017fae:	9b03      	ldr	r3, [sp, #12]
90017fb0:	b2ad      	uxth	r5, r5
90017fb2:	4259      	negs	r1, r3
90017fb4:	6803      	ldr	r3, [r0, #0]
90017fb6:	b209      	sxth	r1, r1
90017fb8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017fbc:	4798      	blx	r3
90017fbe:	2001      	movs	r0, #1
90017fc0:	f7e8 fe8a 	bl	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017fc4:	46ca      	mov	sl, r9
90017fc6:	e78d      	b.n	90017ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90017fc8:	9b05      	ldr	r3, [sp, #20]
90017fca:	eba9 0303 	sub.w	r3, r9, r3
90017fce:	e7b2      	b.n	90017f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90017fd0:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90017fd4:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90017fd8:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90017fdc:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90017fe0:	e7de      	b.n	90017fa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90017fe2:	6838      	ldr	r0, [r7, #0]
90017fe4:	6803      	ldr	r3, [r0, #0]
90017fe6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017fe8:	4798      	blx	r3
90017fea:	6838      	ldr	r0, [r7, #0]
90017fec:	9906      	ldr	r1, [sp, #24]
90017fee:	6803      	ldr	r3, [r0, #0]
90017ff0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017ff4:	4798      	blx	r3
90017ff6:	e7e5      	b.n	90017fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90017ff8:	2b03      	cmp	r3, #3
90017ffa:	f040 8133 	bne.w	90018264 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90017ffe:	4b27      	ldr	r3, [pc, #156]	@ (9001809c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90018000:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90018004:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
90018008:	781b      	ldrb	r3, [r3, #0]
9001800a:	2b01      	cmp	r3, #1
9001800c:	f000 8095 	beq.w	9001813a <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90018010:	8832      	ldrh	r2, [r6, #0]
90018012:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90018016:	3201      	adds	r2, #1
90018018:	b292      	uxth	r2, r2
9001801a:	2900      	cmp	r1, #0
9001801c:	f43f aeec 	beq.w	90017df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90018020:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90018024:	4694      	mov	ip, r2
90018026:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
9001802a:	f04f 0800 	mov.w	r8, #0
9001802e:	441d      	add	r5, r3
90018030:	b22d      	sxth	r5, r5
90018032:	fa1f f38c 	uxth.w	r3, ip
90018036:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001803a:	4299      	cmp	r1, r3
9001803c:	f240 80bc 	bls.w	900181b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
90018040:	4427      	add	r7, r4
90018042:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90018046:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
9001804a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
9001804e:	4283      	cmp	r3, r0
90018050:	f340 809e 	ble.w	90018190 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
90018054:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
90018058:	46e0      	mov	r8, ip
9001805a:	4405      	add	r5, r0
9001805c:	b22d      	sxth	r5, r5
9001805e:	429d      	cmp	r5, r3
90018060:	bfa8      	it	ge
90018062:	461d      	movge	r5, r3
90018064:	f10c 0c01 	add.w	ip, ip, #1
90018068:	e7e3      	b.n	90018032 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
9001806a:	d10a      	bne.n	90018082 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
9001806c:	4562      	cmp	r2, ip
9001806e:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
90018072:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90018076:	bfb8      	it	lt
90018078:	4662      	movlt	r2, ip
9001807a:	4288      	cmp	r0, r1
9001807c:	bfb8      	it	lt
9001807e:	4698      	movlt	r8, r3
90018080:	e084      	b.n	9001818c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90018082:	428a      	cmp	r2, r1
90018084:	bfb8      	it	lt
90018086:	460a      	movlt	r2, r1
90018088:	e080      	b.n	9001818c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
9001808a:	bf00      	nop
9001808c:	24021842 	.word	0x24021842
90018090:	24000088 	.word	0x24000088
90018094:	2402183a 	.word	0x2402183a
90018098:	24021838 	.word	0x24021838
9001809c:	2402183c 	.word	0x2402183c
900180a0:	24021844 	.word	0x24021844
900180a4:	19e1      	adds	r1, r4, r7
900180a6:	ab0d      	add	r3, sp, #52	@ 0x34
900180a8:	f851 0fac 	ldr.w	r0, [r1, #172]!
900180ac:	6849      	ldr	r1, [r1, #4]
900180ae:	c303      	stmia	r3!, {r0, r1}
900180b0:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
900180b4:	a80d      	add	r0, sp, #52	@ 0x34
900180b6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900180ba:	454b      	cmp	r3, r9
900180bc:	440b      	add	r3, r1
900180be:	bfb8      	it	lt
900180c0:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
900180c4:	1a9b      	subs	r3, r3, r2
900180c6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900180ca:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900180ce:	f7fe feab 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900180d2:	a80d      	add	r0, sp, #52	@ 0x34
900180d4:	f7f8 ff69 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
900180d8:	bb78      	cbnz	r0, 9001813a <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
900180da:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
900180de:	4427      	add	r7, r4
900180e0:	6828      	ldr	r0, [r5, #0]
900180e2:	45cc      	cmp	ip, r9
900180e4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900180e8:	f8d0 e000 	ldr.w	lr, [r0]
900180ec:	bfd8      	it	le
900180ee:	fa1f fc8c 	uxthle.w	ip, ip
900180f2:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
900180f6:	bfc8      	it	gt
900180f8:	fa1f fc89 	uxthgt.w	ip, r9
900180fc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90018100:	f8cd c000 	str.w	ip, [sp]
90018104:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
90018108:	47d8      	blx	fp
9001810a:	4683      	mov	fp, r0
9001810c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018110:	a80d      	add	r0, sp, #52	@ 0x34
90018112:	f7fe fe6f 	bl	90016df4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018116:	6823      	ldr	r3, [r4, #0]
90018118:	4620      	mov	r0, r4
9001811a:	a90d      	add	r1, sp, #52	@ 0x34
9001811c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001811e:	4798      	blx	r3
90018120:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
90018124:	eba0 000b 	sub.w	r0, r0, fp
90018128:	b200      	sxth	r0, r0
9001812a:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
9001812e:	b920      	cbnz	r0, 9001813a <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90018130:	fa1f f188 	uxth.w	r1, r8
90018134:	4650      	mov	r0, sl
90018136:	f7ff f93d 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001813a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001813e:	f1bb 0f00 	cmp.w	fp, #0
90018142:	f43f ae59 	beq.w	90017df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90018146:	8833      	ldrh	r3, [r6, #0]
90018148:	f04f 0800 	mov.w	r8, #0
9001814c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
90018150:	3301      	adds	r3, #1
90018152:	b29b      	uxth	r3, r3
90018154:	b299      	uxth	r1, r3
90018156:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001815a:	458b      	cmp	fp, r1
9001815c:	d9a2      	bls.n	900180a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
9001815e:	4427      	add	r7, r4
90018160:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90018164:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
90018168:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
9001816c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90018170:	4408      	add	r0, r1
90018172:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90018176:	4461      	add	r1, ip
90018178:	b200      	sxth	r0, r0
9001817a:	b209      	sxth	r1, r1
9001817c:	4288      	cmp	r0, r1
9001817e:	f6bf af74 	bge.w	9001806a <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
90018182:	4584      	cmp	ip, r0
90018184:	4662      	mov	r2, ip
90018186:	4698      	mov	r8, r3
90018188:	bfb8      	it	lt
9001818a:	4602      	movlt	r2, r0
9001818c:	3301      	adds	r3, #1
9001818e:	e7e1      	b.n	90018154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
90018190:	d10e      	bne.n	900181b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
90018192:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90018196:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001819a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001819e:	4473      	add	r3, lr
900181a0:	b21b      	sxth	r3, r3
900181a2:	429d      	cmp	r5, r3
900181a4:	bfa8      	it	ge
900181a6:	461d      	movge	r5, r3
900181a8:	4287      	cmp	r7, r0
900181aa:	bfb8      	it	lt
900181ac:	46e0      	movlt	r8, ip
900181ae:	e759      	b.n	90018064 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900181b0:	4285      	cmp	r5, r0
900181b2:	bfa8      	it	ge
900181b4:	4605      	movge	r5, r0
900181b6:	e755      	b.n	90018064 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900181b8:	eb0a 0007 	add.w	r0, sl, r7
900181bc:	4427      	add	r7, r4
900181be:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
900181c2:	45cb      	cmp	fp, r9
900181c4:	bfbc      	itt	lt
900181c6:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
900181ca:	445d      	addlt	r5, fp
900181cc:	e9cd 2102 	strd	r2, r1, [sp, #8]
900181d0:	bfb8      	it	lt
900181d2:	b22d      	sxthlt	r5, r5
900181d4:	f7f8 fee9 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
900181d8:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
900181dc:	2800      	cmp	r0, #0
900181de:	f47f af1c 	bne.w	9001801a <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
900181e2:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
900181e6:	fa1f fb8b 	uxth.w	fp, fp
900181ea:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900181ee:	1aad      	subs	r5, r5, r2
900181f0:	4829      	ldr	r0, [pc, #164]	@ (90018298 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
900181f2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
900181f6:	454d      	cmp	r5, r9
900181f8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
900181fc:	6800      	ldr	r0, [r0, #0]
900181fe:	bfa8      	it	ge
90018200:	464d      	movge	r5, r9
90018202:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
90018206:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001820a:	b289      	uxth	r1, r1
9001820c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90018210:	b2ad      	uxth	r5, r5
90018212:	f8d0 c000 	ldr.w	ip, [r0]
90018216:	b292      	uxth	r2, r2
90018218:	455d      	cmp	r5, fp
9001821a:	bf94      	ite	ls
9001821c:	9500      	strls	r5, [sp, #0]
9001821e:	f8cd b000 	strhi.w	fp, [sp]
90018222:	b29b      	uxth	r3, r3
90018224:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
90018228:	47a8      	blx	r5
9001822a:	6823      	ldr	r3, [r4, #0]
9001822c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018230:	a90d      	add	r1, sp, #52	@ 0x34
90018232:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018234:	4620      	mov	r0, r4
90018236:	4798      	blx	r3
90018238:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
9001823c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
90018240:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
90018244:	1a5b      	subs	r3, r3, r1
90018246:	440a      	add	r2, r1
90018248:	b21b      	sxth	r3, r3
9001824a:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001824e:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
90018252:	2b00      	cmp	r3, #0
90018254:	f47f aedc 	bne.w	90018010 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90018258:	fa1f f188 	uxth.w	r1, r8
9001825c:	4650      	mov	r0, sl
9001825e:	f7ff f8a9 	bl	900173b4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018262:	e6d5      	b.n	90018010 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90018264:	8835      	ldrh	r5, [r6, #0]
90018266:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001826a:	42ab      	cmp	r3, r5
9001826c:	f67f adc4 	bls.w	90017df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90018270:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
90018274:	ab0d      	add	r3, sp, #52	@ 0x34
90018276:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001827a:	6851      	ldr	r1, [r2, #4]
9001827c:	c303      	stmia	r3!, {r0, r1}
9001827e:	a80d      	add	r0, sp, #52	@ 0x34
90018280:	f7f8 fe93 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90018284:	b920      	cbnz	r0, 90018290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
90018286:	6823      	ldr	r3, [r4, #0]
90018288:	a90d      	add	r1, sp, #52	@ 0x34
9001828a:	4620      	mov	r0, r4
9001828c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001828e:	4798      	blx	r3
90018290:	3501      	adds	r5, #1
90018292:	b2ad      	uxth	r5, r5
90018294:	e7e7      	b.n	90018266 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
90018296:	bf00      	nop
90018298:	24021844 	.word	0x24021844

9001829c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001829c:	4b03      	ldr	r3, [pc, #12]	@ (900182ac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001829e:	2200      	movs	r2, #0
900182a0:	801a      	strh	r2, [r3, #0]
900182a2:	805a      	strh	r2, [r3, #2]
900182a4:	809a      	strh	r2, [r3, #4]
900182a6:	80da      	strh	r2, [r3, #6]
900182a8:	4770      	bx	lr
900182aa:	bf00      	nop
900182ac:	24021890 	.word	0x24021890

900182b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900182b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900182b4:	b09d      	sub	sp, #116	@ 0x74
900182b6:	4606      	mov	r6, r0
900182b8:	4614      	mov	r4, r2
900182ba:	468a      	mov	sl, r1
900182bc:	a803      	add	r0, sp, #12
900182be:	461d      	mov	r5, r3
900182c0:	f001 f948 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
900182c4:	6833      	ldr	r3, [r6, #0]
900182c6:	4630      	mov	r0, r6
900182c8:	f242 0b0b 	movw	fp, #8203	@ 0x200b
900182cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900182ce:	4798      	blx	r3
900182d0:	6833      	ldr	r3, [r6, #0]
900182d2:	4607      	mov	r7, r0
900182d4:	4630      	mov	r0, r6
900182d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900182d8:	4798      	blx	r3
900182da:	462a      	mov	r2, r5
900182dc:	2500      	movs	r5, #0
900182de:	4621      	mov	r1, r4
900182e0:	9000      	str	r0, [sp, #0]
900182e2:	463b      	mov	r3, r7
900182e4:	462c      	mov	r4, r5
900182e6:	46a9      	mov	r9, r5
900182e8:	46a8      	mov	r8, r5
900182ea:	a803      	add	r0, sp, #12
900182ec:	f001 f98d 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900182f0:	2300      	movs	r3, #0
900182f2:	9302      	str	r3, [sp, #8]
900182f4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900182f8:	429c      	cmp	r4, r3
900182fa:	d002      	beq.n	90018302 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900182fc:	455c      	cmp	r4, fp
900182fe:	bf18      	it	ne
90018300:	4625      	movne	r5, r4
90018302:	ab02      	add	r3, sp, #8
90018304:	4632      	mov	r2, r6
90018306:	4651      	mov	r1, sl
90018308:	a803      	add	r0, sp, #12
9001830a:	f001 fcb1 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001830e:	4604      	mov	r4, r0
90018310:	b108      	cbz	r0, 90018316 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90018312:	280a      	cmp	r0, #10
90018314:	d10a      	bne.n	9001832c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90018316:	45c1      	cmp	r9, r8
90018318:	bf38      	it	cc
9001831a:	46c1      	movcc	r9, r8
9001831c:	f04f 0800 	mov.w	r8, #0
90018320:	2c00      	cmp	r4, #0
90018322:	d1e5      	bne.n	900182f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90018324:	4648      	mov	r0, r9
90018326:	b01d      	add	sp, #116	@ 0x74
90018328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001832c:	9a02      	ldr	r2, [sp, #8]
9001832e:	2a00      	cmp	r2, #0
90018330:	d0de      	beq.n	900182f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90018332:	7b57      	ldrb	r7, [r2, #13]
90018334:	4629      	mov	r1, r5
90018336:	6833      	ldr	r3, [r6, #0]
90018338:	007f      	lsls	r7, r7, #1
9001833a:	8894      	ldrh	r4, [r2, #4]
9001833c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001833e:	f407 7080 	and.w	r0, r7, #256	@ 0x100
90018342:	7a97      	ldrb	r7, [r2, #10]
90018344:	4307      	orrs	r7, r0
90018346:	4630      	mov	r0, r6
90018348:	4798      	blx	r3
9001834a:	4438      	add	r0, r7
9001834c:	4480      	add	r8, r0
9001834e:	fa1f f888 	uxth.w	r8, r8
90018352:	e7e5      	b.n	90018320 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90018354 <_ZNK8touchgfx4Font12getCharWidthEt>:
90018354:	b508      	push	{r3, lr}
90018356:	6803      	ldr	r3, [r0, #0]
90018358:	68db      	ldr	r3, [r3, #12]
9001835a:	4798      	blx	r3
9001835c:	b128      	cbz	r0, 9001836a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001835e:	7b43      	ldrb	r3, [r0, #13]
90018360:	7a80      	ldrb	r0, [r0, #10]
90018362:	005b      	lsls	r3, r3, #1
90018364:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018368:	4318      	orrs	r0, r3
9001836a:	bd08      	pop	{r3, pc}

9001836c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001836c:	b40e      	push	{r1, r2, r3}
9001836e:	b5f0      	push	{r4, r5, r6, r7, lr}
90018370:	b09e      	sub	sp, #120	@ 0x78
90018372:	4605      	mov	r5, r0
90018374:	ab23      	add	r3, sp, #140	@ 0x8c
90018376:	a805      	add	r0, sp, #20
90018378:	f853 4b04 	ldr.w	r4, [r3], #4
9001837c:	9303      	str	r3, [sp, #12]
9001837e:	f001 f8e9 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
90018382:	682b      	ldr	r3, [r5, #0]
90018384:	4628      	mov	r0, r5
90018386:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018388:	4798      	blx	r3
9001838a:	682b      	ldr	r3, [r5, #0]
9001838c:	4606      	mov	r6, r0
9001838e:	4628      	mov	r0, r5
90018390:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018392:	4798      	blx	r3
90018394:	4633      	mov	r3, r6
90018396:	4621      	mov	r1, r4
90018398:	ae1e      	add	r6, sp, #120	@ 0x78
9001839a:	2400      	movs	r4, #0
9001839c:	9000      	str	r0, [sp, #0]
9001839e:	9a03      	ldr	r2, [sp, #12]
900183a0:	a805      	add	r0, sp, #20
900183a2:	f001 f932 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900183a6:	f846 4d68 	str.w	r4, [r6, #-104]!
900183aa:	462a      	mov	r2, r5
900183ac:	4633      	mov	r3, r6
900183ae:	4621      	mov	r1, r4
900183b0:	a805      	add	r0, sp, #20
900183b2:	f001 fc5d 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900183b6:	b300      	cbz	r0, 900183fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900183b8:	280a      	cmp	r0, #10
900183ba:	d01a      	beq.n	900183f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900183bc:	9f04      	ldr	r7, [sp, #16]
900183be:	b1c7      	cbz	r7, 900183f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900183c0:	7b78      	ldrb	r0, [r7, #13]
900183c2:	7a3b      	ldrb	r3, [r7, #8]
900183c4:	00c1      	lsls	r1, r0, #3
900183c6:	88ea      	ldrh	r2, [r5, #6]
900183c8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900183cc:	4319      	orrs	r1, r3
900183ce:	0643      	lsls	r3, r0, #25
900183d0:	ea4f 1000 	mov.w	r0, r0, lsl #4
900183d4:	bf48      	it	mi
900183d6:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
900183da:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900183de:	bf48      	it	mi
900183e0:	b219      	sxthmi	r1, r3
900183e2:	79fb      	ldrb	r3, [r7, #7]
900183e4:	4303      	orrs	r3, r0
900183e6:	4413      	add	r3, r2
900183e8:	1a5b      	subs	r3, r3, r1
900183ea:	b21b      	sxth	r3, r3
900183ec:	429c      	cmp	r4, r3
900183ee:	bfb8      	it	lt
900183f0:	461c      	movlt	r4, r3
900183f2:	4633      	mov	r3, r6
900183f4:	462a      	mov	r2, r5
900183f6:	2100      	movs	r1, #0
900183f8:	e7da      	b.n	900183b0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
900183fa:	b2a0      	uxth	r0, r4
900183fc:	b01e      	add	sp, #120	@ 0x78
900183fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90018402:	b003      	add	sp, #12
90018404:	4770      	bx	lr

90018406 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90018406:	7a43      	ldrb	r3, [r0, #9]
90018408:	8880      	ldrh	r0, [r0, #4]
9001840a:	4418      	add	r0, r3
9001840c:	b280      	uxth	r0, r0
9001840e:	4770      	bx	lr

90018410 <_ZNK8touchgfx4Font13getFontHeightEv>:
90018410:	6803      	ldr	r3, [r0, #0]
90018412:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90018414:	4718      	bx	r3

90018416 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90018416:	b40e      	push	{r1, r2, r3}
90018418:	b570      	push	{r4, r5, r6, lr}
9001841a:	b09d      	sub	sp, #116	@ 0x74
9001841c:	4604      	mov	r4, r0
9001841e:	ab21      	add	r3, sp, #132	@ 0x84
90018420:	a803      	add	r0, sp, #12
90018422:	f853 5b04 	ldr.w	r5, [r3], #4
90018426:	9302      	str	r3, [sp, #8]
90018428:	f001 f894 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
9001842c:	6823      	ldr	r3, [r4, #0]
9001842e:	4620      	mov	r0, r4
90018430:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018432:	4798      	blx	r3
90018434:	6823      	ldr	r3, [r4, #0]
90018436:	4606      	mov	r6, r0
90018438:	4620      	mov	r0, r4
9001843a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001843c:	2401      	movs	r4, #1
9001843e:	4798      	blx	r3
90018440:	4633      	mov	r3, r6
90018442:	9000      	str	r0, [sp, #0]
90018444:	4629      	mov	r1, r5
90018446:	9a02      	ldr	r2, [sp, #8]
90018448:	a803      	add	r0, sp, #12
9001844a:	f001 f8de 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001844e:	a803      	add	r0, sp, #12
90018450:	f001 fcda 	bl	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018454:	b2a3      	uxth	r3, r4
90018456:	b138      	cbz	r0, 90018468 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90018458:	280a      	cmp	r0, #10
9001845a:	a803      	add	r0, sp, #12
9001845c:	bf04      	itt	eq
9001845e:	3301      	addeq	r3, #1
90018460:	b21c      	sxtheq	r4, r3
90018462:	f001 fcd1 	bl	90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018466:	e7f5      	b.n	90018454 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90018468:	4618      	mov	r0, r3
9001846a:	b01d      	add	sp, #116	@ 0x74
9001846c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018470:	b003      	add	sp, #12
90018472:	4770      	bx	lr

90018474 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90018474:	b40e      	push	{r1, r2, r3}
90018476:	b5f0      	push	{r4, r5, r6, r7, lr}
90018478:	b09e      	sub	sp, #120	@ 0x78
9001847a:	4604      	mov	r4, r0
9001847c:	ab23      	add	r3, sp, #140	@ 0x8c
9001847e:	a805      	add	r0, sp, #20
90018480:	f853 5b04 	ldr.w	r5, [r3], #4
90018484:	9303      	str	r3, [sp, #12]
90018486:	f001 f865 	bl	90019554 <_ZN8touchgfx12TextProviderC1Ev>
9001848a:	6823      	ldr	r3, [r4, #0]
9001848c:	4620      	mov	r0, r4
9001848e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018490:	4798      	blx	r3
90018492:	6823      	ldr	r3, [r4, #0]
90018494:	4606      	mov	r6, r0
90018496:	4620      	mov	r0, r4
90018498:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001849a:	4798      	blx	r3
9001849c:	4633      	mov	r3, r6
9001849e:	4629      	mov	r1, r5
900184a0:	9000      	str	r0, [sp, #0]
900184a2:	9a03      	ldr	r2, [sp, #12]
900184a4:	a805      	add	r0, sp, #20
900184a6:	f001 f8b0 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900184aa:	ad1e      	add	r5, sp, #120	@ 0x78
900184ac:	2100      	movs	r1, #0
900184ae:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900184b2:	4622      	mov	r2, r4
900184b4:	a805      	add	r0, sp, #20
900184b6:	f845 1d68 	str.w	r1, [r5, #-104]!
900184ba:	462b      	mov	r3, r5
900184bc:	f001 fbd8 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900184c0:	b1d8      	cbz	r0, 900184fa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900184c2:	280a      	cmp	r0, #10
900184c4:	d012      	beq.n	900184ec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900184c6:	9804      	ldr	r0, [sp, #16]
900184c8:	b180      	cbz	r0, 900184ec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900184ca:	7b47      	ldrb	r7, [r0, #13]
900184cc:	88e2      	ldrh	r2, [r4, #6]
900184ce:	00fb      	lsls	r3, r7, #3
900184d0:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900184d4:	7a03      	ldrb	r3, [r0, #8]
900184d6:	430b      	orrs	r3, r1
900184d8:	0679      	lsls	r1, r7, #25
900184da:	bf44      	itt	mi
900184dc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900184e0:	b21b      	sxthmi	r3, r3
900184e2:	1ad3      	subs	r3, r2, r3
900184e4:	b21b      	sxth	r3, r3
900184e6:	429e      	cmp	r6, r3
900184e8:	bfa8      	it	ge
900184ea:	461e      	movge	r6, r3
900184ec:	462b      	mov	r3, r5
900184ee:	4622      	mov	r2, r4
900184f0:	2100      	movs	r1, #0
900184f2:	a805      	add	r0, sp, #20
900184f4:	f001 fbbc 	bl	90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900184f8:	e7e2      	b.n	900184c0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900184fa:	4630      	mov	r0, r6
900184fc:	b01e      	add	sp, #120	@ 0x78
900184fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90018502:	b003      	add	sp, #12
90018504:	4770      	bx	lr

90018506 <_ZNK8touchgfx8Drawable10invalidateEv>:
90018506:	b513      	push	{r0, r1, r4, lr}
90018508:	6803      	ldr	r3, [r0, #0]
9001850a:	2400      	movs	r4, #0
9001850c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90018510:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018514:	f8ad 1004 	strh.w	r1, [sp, #4]
90018518:	4669      	mov	r1, sp
9001851a:	691b      	ldr	r3, [r3, #16]
9001851c:	9400      	str	r4, [sp, #0]
9001851e:	f8ad 2006 	strh.w	r2, [sp, #6]
90018522:	4798      	blx	r3
90018524:	b002      	add	sp, #8
90018526:	bd10      	pop	{r4, pc}

90018528 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90018528:	b538      	push	{r3, r4, r5, lr}
9001852a:	680b      	ldr	r3, [r1, #0]
9001852c:	460c      	mov	r4, r1
9001852e:	4605      	mov	r5, r0
90018530:	68db      	ldr	r3, [r3, #12]
90018532:	4798      	blx	r3
90018534:	6823      	ldr	r3, [r4, #0]
90018536:	4620      	mov	r0, r4
90018538:	4629      	mov	r1, r5
9001853a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001853c:	4798      	blx	r3
9001853e:	4628      	mov	r0, r5
90018540:	bd38      	pop	{r3, r4, r5, pc}

90018542 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90018542:	b410      	push	{r4}
90018544:	880a      	ldrh	r2, [r1, #0]
90018546:	8884      	ldrh	r4, [r0, #4]
90018548:	4422      	add	r2, r4
9001854a:	800a      	strh	r2, [r1, #0]
9001854c:	884a      	ldrh	r2, [r1, #2]
9001854e:	88c4      	ldrh	r4, [r0, #6]
90018550:	4422      	add	r2, r4
90018552:	804a      	strh	r2, [r1, #2]
90018554:	6940      	ldr	r0, [r0, #20]
90018556:	b120      	cbz	r0, 90018562 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90018558:	6803      	ldr	r3, [r0, #0]
9001855a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001855e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018560:	4718      	bx	r3
90018562:	f85d 4b04 	ldr.w	r4, [sp], #4
90018566:	4770      	bx	lr

90018568 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90018568:	b570      	push	{r4, r5, r6, lr}
9001856a:	8882      	ldrh	r2, [r0, #4]
9001856c:	460c      	mov	r4, r1
9001856e:	880b      	ldrh	r3, [r1, #0]
90018570:	4605      	mov	r5, r0
90018572:	4413      	add	r3, r2
90018574:	800b      	strh	r3, [r1, #0]
90018576:	884b      	ldrh	r3, [r1, #2]
90018578:	88c2      	ldrh	r2, [r0, #6]
9001857a:	4413      	add	r3, r2
9001857c:	804b      	strh	r3, [r1, #2]
9001857e:	1d01      	adds	r1, r0, #4
90018580:	4620      	mov	r0, r4
90018582:	f7f8 fccf 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90018586:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001858a:	2b00      	cmp	r3, #0
9001858c:	dd0b      	ble.n	900185a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001858e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90018592:	2b00      	cmp	r3, #0
90018594:	dd07      	ble.n	900185a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90018596:	6968      	ldr	r0, [r5, #20]
90018598:	b128      	cbz	r0, 900185a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001859a:	6803      	ldr	r3, [r0, #0]
9001859c:	4621      	mov	r1, r4
9001859e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900185a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900185a4:	4718      	bx	r3
900185a6:	bd70      	pop	{r4, r5, r6, pc}

900185a8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900185a8:	b570      	push	{r4, r5, r6, lr}
900185aa:	8882      	ldrh	r2, [r0, #4]
900185ac:	460c      	mov	r4, r1
900185ae:	880b      	ldrh	r3, [r1, #0]
900185b0:	4605      	mov	r5, r0
900185b2:	4413      	add	r3, r2
900185b4:	800b      	strh	r3, [r1, #0]
900185b6:	884b      	ldrh	r3, [r1, #2]
900185b8:	88c2      	ldrh	r2, [r0, #6]
900185ba:	4413      	add	r3, r2
900185bc:	804b      	strh	r3, [r1, #2]
900185be:	1d01      	adds	r1, r0, #4
900185c0:	4620      	mov	r0, r4
900185c2:	f7f8 fcaf 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
900185c6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900185ca:	2b00      	cmp	r3, #0
900185cc:	dd19      	ble.n	90018602 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900185ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900185d2:	2b00      	cmp	r3, #0
900185d4:	dd15      	ble.n	90018602 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900185d6:	6968      	ldr	r0, [r5, #20]
900185d8:	b128      	cbz	r0, 900185e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900185da:	6803      	ldr	r3, [r0, #0]
900185dc:	4621      	mov	r1, r4
900185de:	691b      	ldr	r3, [r3, #16]
900185e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900185e4:	4718      	bx	r3
900185e6:	4b07      	ldr	r3, [pc, #28]	@ (90018604 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
900185e8:	681b      	ldr	r3, [r3, #0]
900185ea:	3304      	adds	r3, #4
900185ec:	429d      	cmp	r5, r3
900185ee:	d108      	bne.n	90018602 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900185f0:	f7fe fdd0 	bl	90017194 <_ZN8touchgfx11Application11getInstanceEv>
900185f4:	6803      	ldr	r3, [r0, #0]
900185f6:	6821      	ldr	r1, [r4, #0]
900185f8:	6862      	ldr	r2, [r4, #4]
900185fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900185fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018600:	4718      	bx	r3
90018602:	bd70      	pop	{r4, r5, r6, pc}
90018604:	24021888 	.word	0x24021888

90018608 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90018608:	b570      	push	{r4, r5, r6, lr}
9001860a:	4604      	mov	r4, r0
9001860c:	4616      	mov	r6, r2
9001860e:	460d      	mov	r5, r1
90018610:	b901      	cbnz	r1, 90018614 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90018612:	b192      	cbz	r2, 9001863a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90018614:	6823      	ldr	r3, [r4, #0]
90018616:	4620      	mov	r0, r4
90018618:	699b      	ldr	r3, [r3, #24]
9001861a:	4798      	blx	r3
9001861c:	88e2      	ldrh	r2, [r4, #6]
9001861e:	88a1      	ldrh	r1, [r4, #4]
90018620:	4620      	mov	r0, r4
90018622:	4432      	add	r2, r6
90018624:	4429      	add	r1, r5
90018626:	b212      	sxth	r2, r2
90018628:	b209      	sxth	r1, r1
9001862a:	f7f8 ff5f 	bl	900114ec <_ZN8touchgfx8Drawable5setXYEss>
9001862e:	6823      	ldr	r3, [r4, #0]
90018630:	4620      	mov	r0, r4
90018632:	699b      	ldr	r3, [r3, #24]
90018634:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018638:	4718      	bx	r3
9001863a:	bd70      	pop	{r4, r5, r6, pc}

9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001863c:	b510      	push	{r4, lr}
9001863e:	2300      	movs	r3, #0
90018640:	4604      	mov	r4, r0
90018642:	4608      	mov	r0, r1
90018644:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90018648:	8023      	strh	r3, [r4, #0]
9001864a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001864e:	8063      	strh	r3, [r4, #2]
90018650:	6803      	ldr	r3, [r0, #0]
90018652:	80a1      	strh	r1, [r4, #4]
90018654:	4621      	mov	r1, r4
90018656:	80e2      	strh	r2, [r4, #6]
90018658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001865a:	4798      	blx	r3
9001865c:	4620      	mov	r0, r4
9001865e:	bd10      	pop	{r4, pc}

90018660 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90018660:	4770      	bx	lr

90018662 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90018662:	b510      	push	{r4, lr}
90018664:	4604      	mov	r4, r0
90018666:	211c      	movs	r1, #28
90018668:	f011 f862 	bl	90029730 <_ZdlPvj>
9001866c:	4620      	mov	r0, r4
9001866e:	bd10      	pop	{r4, pc}

90018670 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90018670:	4a04      	ldr	r2, [pc, #16]	@ (90018684 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90018672:	6002      	str	r2, [r0, #0]
90018674:	2200      	movs	r2, #0
90018676:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001867a:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001867e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90018682:	4770      	bx	lr
90018684:	9002d8a4 	.word	0x9002d8a4

90018688 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90018688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001868c:	4604      	mov	r4, r0
9001868e:	b087      	sub	sp, #28
90018690:	8b45      	ldrh	r5, [r0, #26]
90018692:	f8b2 c000 	ldrh.w	ip, [r2]
90018696:	9105      	str	r1, [sp, #20]
90018698:	1c68      	adds	r0, r5, #1
9001869a:	68e1      	ldr	r1, [r4, #12]
9001869c:	9203      	str	r2, [sp, #12]
9001869e:	b280      	uxth	r0, r0
900186a0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900186a4:	f01c 0501 	ands.w	r5, ip, #1
900186a8:	f9b3 2000 	ldrsh.w	r2, [r3]
900186ac:	9502      	str	r5, [sp, #8]
900186ae:	d07d      	beq.n	900187ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
900186b0:	ee07 2a90 	vmov	s15, r2
900186b4:	8360      	strh	r0, [r4, #26]
900186b6:	f04f 0e00 	mov.w	lr, #0
900186ba:	eef8 6ae7 	vcvt.f32.s32	s13, s15
900186be:	ee06 ea10 	vmov	s12, lr
900186c2:	edc1 6a00 	vstr	s13, [r1]
900186c6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900186ca:	8b61      	ldrh	r1, [r4, #26]
900186cc:	ee07 2a10 	vmov	s14, r2
900186d0:	68e2      	ldr	r2, [r4, #12]
900186d2:	1c48      	adds	r0, r1, #1
900186d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900186d8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
900186dc:	8360      	strh	r0, [r4, #26]
900186de:	ed82 7a00 	vstr	s14, [r2]
900186e2:	8b21      	ldrh	r1, [r4, #24]
900186e4:	2501      	movs	r5, #1
900186e6:	68a2      	ldr	r2, [r4, #8]
900186e8:	3304      	adds	r3, #4
900186ea:	1c48      	adds	r0, r1, #1
900186ec:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
900186f0:	9300      	str	r3, [sp, #0]
900186f2:	46aa      	mov	sl, r5
900186f4:	8320      	strh	r0, [r4, #24]
900186f6:	462e      	mov	r6, r5
900186f8:	5455      	strb	r5, [r2, r1]
900186fa:	2200      	movs	r2, #0
900186fc:	ee07 2a90 	vmov	s15, r2
90018700:	4613      	mov	r3, r2
90018702:	4611      	mov	r1, r2
90018704:	9201      	str	r2, [sp, #4]
90018706:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001870a:	9805      	ldr	r0, [sp, #20]
9001870c:	f108 0701 	add.w	r7, r8, #1
90018710:	f8d4 b008 	ldr.w	fp, [r4, #8]
90018714:	42a8      	cmp	r0, r5
90018716:	b2bf      	uxth	r7, r7
90018718:	eb0b 0908 	add.w	r9, fp, r8
9001871c:	f340 80db 	ble.w	900188d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
90018720:	fa4c f906 	asr.w	r9, ip, r6
90018724:	f009 0901 	and.w	r9, r9, #1
90018728:	fa5f f389 	uxtb.w	r3, r9
9001872c:	9304      	str	r3, [sp, #16]
9001872e:	9b00      	ldr	r3, [sp, #0]
90018730:	f9b3 1000 	ldrsh.w	r1, [r3]
90018734:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90018738:	f1b9 0f00 	cmp.w	r9, #0
9001873c:	d07d      	beq.n	9001883a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
9001873e:	ee05 1a10 	vmov	s10, r1
90018742:	8327      	strh	r7, [r4, #24]
90018744:	eef8 4ac5 	vcvt.f32.s32	s9, s10
90018748:	ee05 3a10 	vmov	s10, r3
9001874c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90018750:	f1ba 0f00 	cmp.w	sl, #0
90018754:	d050      	beq.n	900187f8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
90018756:	f04f 0002 	mov.w	r0, #2
9001875a:	f80b 0008 	strb.w	r0, [fp, r8]
9001875e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018762:	68e7      	ldr	r7, [r4, #12]
90018764:	f108 0901 	add.w	r9, r8, #1
90018768:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001876c:	f8a4 901a 	strh.w	r9, [r4, #26]
90018770:	edc7 4a00 	vstr	s9, [r7]
90018774:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018778:	68e7      	ldr	r7, [r4, #12]
9001877a:	f108 0901 	add.w	r9, r8, #1
9001877e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018782:	f8a4 901a 	strh.w	r9, [r4, #26]
90018786:	ed87 5a00 	vstr	s10, [r7]
9001878a:	3601      	adds	r6, #1
9001878c:	2e10      	cmp	r6, #16
9001878e:	d106      	bne.n	9001879e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
90018790:	9e01      	ldr	r6, [sp, #4]
90018792:	9803      	ldr	r0, [sp, #12]
90018794:	3601      	adds	r6, #1
90018796:	9601      	str	r6, [sp, #4]
90018798:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
9001879c:	2600      	movs	r6, #0
9001879e:	9800      	ldr	r0, [sp, #0]
900187a0:	3501      	adds	r5, #1
900187a2:	f8dd a010 	ldr.w	sl, [sp, #16]
900187a6:	3004      	adds	r0, #4
900187a8:	9000      	str	r0, [sp, #0]
900187aa:	e7ac      	b.n	90018706 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
900187ac:	ee06 2a10 	vmov	s12, r2
900187b0:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
900187b4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900187b8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900187bc:	ee16 5a10 	vmov	r5, s12
900187c0:	442a      	add	r2, r5
900187c2:	ee06 2a90 	vmov	s13, r2
900187c6:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
900187ca:	8360      	strh	r0, [r4, #26]
900187cc:	4472      	add	r2, lr
900187ce:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900187d2:	ee07 2a10 	vmov	s14, r2
900187d6:	ee66 6aa7 	vmul.f32	s13, s13, s15
900187da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900187de:	edc1 6a00 	vstr	s13, [r1]
900187e2:	8b61      	ldrh	r1, [r4, #26]
900187e4:	ee27 7a27 	vmul.f32	s14, s14, s15
900187e8:	68e2      	ldr	r2, [r4, #12]
900187ea:	1c48      	adds	r0, r1, #1
900187ec:	eb02 0281 	add.w	r2, r2, r1, lsl #2
900187f0:	8360      	strh	r0, [r4, #26]
900187f2:	ed82 7a00 	vstr	s14, [r2]
900187f6:	e774      	b.n	900186e2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
900187f8:	f04f 0005 	mov.w	r0, #5
900187fc:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
90018800:	f80b 0008 	strb.w	r0, [fp, r8]
90018804:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018808:	68e7      	ldr	r7, [r4, #12]
9001880a:	f108 0901 	add.w	r9, r8, #1
9001880e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018812:	f8a4 901a 	strh.w	r9, [r4, #26]
90018816:	ed87 4a00 	vstr	s8, [r7]
9001881a:	ee04 2a10 	vmov	s8, r2
9001881e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018822:	68e7      	ldr	r7, [r4, #12]
90018824:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
90018828:	f108 0901 	add.w	r9, r8, #1
9001882c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018830:	f8a4 901a 	strh.w	r9, [r4, #26]
90018834:	ed87 4a00 	vstr	s8, [r7]
90018838:	e791      	b.n	9001875e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
9001883a:	f1ba 0f00 	cmp.w	sl, #0
9001883e:	d146      	bne.n	900188ce <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
90018840:	f04f 0005 	mov.w	r0, #5
90018844:	8327      	strh	r7, [r4, #24]
90018846:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001884a:	f80b 0008 	strb.w	r0, [fp, r8]
9001884e:	ee17 0a90 	vmov	r0, s15
90018852:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018856:	68e7      	ldr	r7, [r4, #12]
90018858:	4408      	add	r0, r1
9001885a:	f108 0901 	add.w	r9, r8, #1
9001885e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018862:	ee07 0a90 	vmov	s15, r0
90018866:	f8a4 901a 	strh.w	r9, [r4, #26]
9001886a:	ed87 5a00 	vstr	s10, [r7]
9001886e:	ee05 2a10 	vmov	s10, r2
90018872:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018876:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001887a:	68e7      	ldr	r7, [r4, #12]
9001887c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90018880:	f108 0901 	add.w	r9, r8, #1
90018884:	441a      	add	r2, r3
90018886:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001888a:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001888e:	f8a4 901a 	strh.w	r9, [r4, #26]
90018892:	ed87 5a00 	vstr	s10, [r7]
90018896:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001889a:	68e7      	ldr	r7, [r4, #12]
9001889c:	f108 0901 	add.w	r9, r8, #1
900188a0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900188a4:	f8a4 901a 	strh.w	r9, [r4, #26]
900188a8:	edc7 7a00 	vstr	s15, [r7]
900188ac:	ee07 2a90 	vmov	s15, r2
900188b0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900188b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900188b8:	68e7      	ldr	r7, [r4, #12]
900188ba:	f108 0901 	add.w	r9, r8, #1
900188be:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900188c2:	ee67 7aa5 	vmul.f32	s15, s15, s11
900188c6:	f8a4 901a 	strh.w	r9, [r4, #26]
900188ca:	edc7 7a00 	vstr	s15, [r7]
900188ce:	461a      	mov	r2, r3
900188d0:	ee07 1a90 	vmov	s15, r1
900188d4:	e759      	b.n	9001878a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
900188d6:	f1ba 0f00 	cmp.w	sl, #0
900188da:	d045      	beq.n	90018968 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
900188dc:	ee05 1a90 	vmov	s11, r1
900188e0:	eef8 5ae5 	vcvt.f32.s32	s11, s11
900188e4:	eef4 5a66 	vcmp.f32	s11, s13
900188e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900188ec:	d108      	bne.n	90018900 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
900188ee:	ee05 3a90 	vmov	s11, r3
900188f2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
900188f6:	eef4 5a47 	vcmp.f32	s11, s14
900188fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900188fe:	d033      	beq.n	90018968 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90018900:	9b02      	ldr	r3, [sp, #8]
90018902:	8327      	strh	r7, [r4, #24]
90018904:	b1b3      	cbz	r3, 90018934 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
90018906:	2302      	movs	r3, #2
90018908:	f889 3000 	strb.w	r3, [r9]
9001890c:	8b62      	ldrh	r2, [r4, #26]
9001890e:	68e3      	ldr	r3, [r4, #12]
90018910:	1c51      	adds	r1, r2, #1
90018912:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018916:	8361      	strh	r1, [r4, #26]
90018918:	edc3 6a00 	vstr	s13, [r3]
9001891c:	8b62      	ldrh	r2, [r4, #26]
9001891e:	68e3      	ldr	r3, [r4, #12]
90018920:	1c51      	adds	r1, r2, #1
90018922:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018926:	8361      	strh	r1, [r4, #26]
90018928:	ed83 7a00 	vstr	s14, [r3]
9001892c:	9800      	ldr	r0, [sp, #0]
9001892e:	b007      	add	sp, #28
90018930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018934:	2305      	movs	r3, #5
90018936:	f889 3000 	strb.w	r3, [r9]
9001893a:	8b62      	ldrh	r2, [r4, #26]
9001893c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90018940:	68e3      	ldr	r3, [r4, #12]
90018942:	ee07 ea90 	vmov	s15, lr
90018946:	1c51      	adds	r1, r2, #1
90018948:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001894c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018950:	8361      	strh	r1, [r4, #26]
90018952:	ed83 6a00 	vstr	s12, [r3]
90018956:	8b62      	ldrh	r2, [r4, #26]
90018958:	68e3      	ldr	r3, [r4, #12]
9001895a:	1c51      	adds	r1, r2, #1
9001895c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018960:	8361      	strh	r1, [r4, #26]
90018962:	edc3 7a00 	vstr	s15, [r3]
90018966:	e7d1      	b.n	9001890c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90018968:	ee05 2a90 	vmov	s11, r2
9001896c:	2305      	movs	r3, #5
9001896e:	9902      	ldr	r1, [sp, #8]
90018970:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90018974:	8327      	strh	r7, [r4, #24]
90018976:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001897a:	f889 3000 	strb.w	r3, [r9]
9001897e:	b181      	cbz	r1, 900189a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
90018980:	8b62      	ldrh	r2, [r4, #26]
90018982:	68e3      	ldr	r3, [r4, #12]
90018984:	1c51      	adds	r1, r2, #1
90018986:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001898a:	8361      	strh	r1, [r4, #26]
9001898c:	ed83 5a00 	vstr	s10, [r3]
90018990:	8b62      	ldrh	r2, [r4, #26]
90018992:	68e3      	ldr	r3, [r4, #12]
90018994:	1c51      	adds	r1, r2, #1
90018996:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001899a:	8361      	strh	r1, [r4, #26]
9001899c:	edc3 5a00 	vstr	s11, [r3]
900189a0:	e7b4      	b.n	9001890c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
900189a2:	8b65      	ldrh	r5, [r4, #26]
900189a4:	ee17 0a90 	vmov	r0, s15
900189a8:	68e1      	ldr	r1, [r4, #12]
900189aa:	4472      	add	r2, lr
900189ac:	1c6e      	adds	r6, r5, #1
900189ae:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900189b2:	8366      	strh	r6, [r4, #26]
900189b4:	ed81 5a00 	vstr	s10, [r1]
900189b8:	8b65      	ldrh	r5, [r4, #26]
900189ba:	68e1      	ldr	r1, [r4, #12]
900189bc:	1c6e      	adds	r6, r5, #1
900189be:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900189c2:	8366      	strh	r6, [r4, #26]
900189c4:	edc1 5a00 	vstr	s11, [r1]
900189c8:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
900189cc:	8b65      	ldrh	r5, [r4, #26]
900189ce:	68e1      	ldr	r1, [r4, #12]
900189d0:	1c6e      	adds	r6, r5, #1
900189d2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900189d6:	ee16 5a10 	vmov	r5, s12
900189da:	8366      	strh	r6, [r4, #26]
900189dc:	4428      	add	r0, r5
900189de:	ee07 0a90 	vmov	s15, r0
900189e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900189e6:	ee67 7aa5 	vmul.f32	s15, s15, s11
900189ea:	edc1 7a00 	vstr	s15, [r1]
900189ee:	ee07 2a90 	vmov	s15, r2
900189f2:	8b61      	ldrh	r1, [r4, #26]
900189f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900189f8:	68e5      	ldr	r5, [r4, #12]
900189fa:	1c4e      	adds	r6, r1, #1
900189fc:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90018a00:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018a04:	8366      	strh	r6, [r4, #26]
90018a06:	edc1 7a00 	vstr	s15, [r1]
90018a0a:	8b22      	ldrh	r2, [r4, #24]
90018a0c:	68a1      	ldr	r1, [r4, #8]
90018a0e:	1c55      	adds	r5, r2, #1
90018a10:	8325      	strh	r5, [r4, #24]
90018a12:	548b      	strb	r3, [r1, r2]
90018a14:	e791      	b.n	9001893a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90018a18 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90018a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018a1c:	4604      	mov	r4, r0
90018a1e:	b08e      	sub	sp, #56	@ 0x38
90018a20:	4699      	mov	r9, r3
90018a22:	4688      	mov	r8, r1
90018a24:	4615      	mov	r5, r2
90018a26:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90018a28:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90018a2c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90018a2e:	f7ea fd7d 	bl	9000352c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90018a32:	6060      	str	r0, [r4, #4]
90018a34:	f1b9 0f00 	cmp.w	r9, #0
90018a38:	f000 80e8 	beq.w	90018c0c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90018a3c:	2800      	cmp	r0, #0
90018a3e:	f000 80e5 	beq.w	90018c0c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90018a42:	a805      	add	r0, sp, #20
90018a44:	f000 f8f9 	bl	90018c3a <_ZN8touchgfx9Matrix3x3C1Ev>
90018a48:	6833      	ldr	r3, [r6, #0]
90018a4a:	4630      	mov	r0, r6
90018a4c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90018a4e:	4798      	blx	r3
90018a50:	a805      	add	r0, sp, #20
90018a52:	eef0 0a40 	vmov.f32	s1, s0
90018a56:	f000 f8f4 	bl	90018c42 <_ZN8touchgfx9Matrix3x35scaleEff>
90018a5a:	6860      	ldr	r0, [r4, #4]
90018a5c:	f1ba 0f03 	cmp.w	sl, #3
90018a60:	d83b      	bhi.n	90018ada <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90018a62:	e8df f00a 	tbb	[pc, sl]
90018a66:	1002      	.short	0x1002
90018a68:	9f71      	.short	0x9f71
90018a6a:	6803      	ldr	r3, [r0, #0]
90018a6c:	462a      	mov	r2, r5
90018a6e:	4641      	mov	r1, r8
90018a70:	689b      	ldr	r3, [r3, #8]
90018a72:	4798      	blx	r3
90018a74:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018a78:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018a7c:	ee07 7a90 	vmov	s15, r7
90018a80:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90018a84:	e026      	b.n	90018ad4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90018a86:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90018a8a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018a8e:	8869      	ldrh	r1, [r5, #2]
90018a90:	1a9b      	subs	r3, r3, r2
90018a92:	f8ad 2010 	strh.w	r2, [sp, #16]
90018a96:	aa03      	add	r2, sp, #12
90018a98:	1a5b      	subs	r3, r3, r1
90018a9a:	4641      	mov	r1, r8
90018a9c:	f8ad 300c 	strh.w	r3, [sp, #12]
90018aa0:	882b      	ldrh	r3, [r5, #0]
90018aa2:	f8ad 300e 	strh.w	r3, [sp, #14]
90018aa6:	88ab      	ldrh	r3, [r5, #4]
90018aa8:	f8ad 3012 	strh.w	r3, [sp, #18]
90018aac:	6803      	ldr	r3, [r0, #0]
90018aae:	689b      	ldr	r3, [r3, #8]
90018ab0:	4798      	blx	r3
90018ab2:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90018c14 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90018ab6:	a805      	add	r0, sp, #20
90018ab8:	f000 f8e8 	bl	90018c8c <_ZN8touchgfx9Matrix3x36rotateEf>
90018abc:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018ac0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018ac2:	ee07 7a90 	vmov	s15, r7
90018ac6:	1a9b      	subs	r3, r3, r2
90018ac8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018acc:	ee00 3a10 	vmov	s0, r3
90018ad0:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90018ad4:	a805      	add	r0, sp, #20
90018ad6:	f000 f927 	bl	90018d28 <_ZN8touchgfx9Matrix3x39translateEff>
90018ada:	6860      	ldr	r0, [r4, #4]
90018adc:	a905      	add	r1, sp, #20
90018ade:	2500      	movs	r5, #0
90018ae0:	f109 0602 	add.w	r6, r9, #2
90018ae4:	6803      	ldr	r3, [r0, #0]
90018ae6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90018ae8:	4798      	blx	r3
90018aea:	6860      	ldr	r0, [r4, #4]
90018aec:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018aee:	6803      	ldr	r3, [r0, #0]
90018af0:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90018af4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018af6:	4798      	blx	r3
90018af8:	6860      	ldr	r0, [r4, #4]
90018afa:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90018afe:	6803      	ldr	r3, [r0, #0]
90018b00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018b02:	4798      	blx	r3
90018b04:	6860      	ldr	r0, [r4, #4]
90018b06:	2101      	movs	r1, #1
90018b08:	6803      	ldr	r3, [r0, #0]
90018b0a:	68db      	ldr	r3, [r3, #12]
90018b0c:	4798      	blx	r3
90018b0e:	f8b9 7000 	ldrh.w	r7, [r9]
90018b12:	f104 0310 	add.w	r3, r4, #16
90018b16:	61a5      	str	r5, [r4, #24]
90018b18:	f104 0208 	add.w	r2, r4, #8
90018b1c:	f104 0114 	add.w	r1, r4, #20
90018b20:	f104 000c 	add.w	r0, r4, #12
90018b24:	f7ec fbd0 	bl	900052c8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90018b28:	42af      	cmp	r7, r5
90018b2a:	dd60      	ble.n	90018bee <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90018b2c:	8831      	ldrh	r1, [r6, #0]
90018b2e:	1cb2      	adds	r2, r6, #2
90018b30:	4620      	mov	r0, r4
90018b32:	3501      	adds	r5, #1
90018b34:	f101 030f 	add.w	r3, r1, #15
90018b38:	f3c3 1307 	ubfx	r3, r3, #4, #8
90018b3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018b40:	f7ff fda2 	bl	90018688 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90018b44:	4606      	mov	r6, r0
90018b46:	e7ef      	b.n	90018b28 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90018b48:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90018b4c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018b50:	8829      	ldrh	r1, [r5, #0]
90018b52:	1a9b      	subs	r3, r3, r2
90018b54:	f8ad 2010 	strh.w	r2, [sp, #16]
90018b58:	aa03      	add	r2, sp, #12
90018b5a:	1a5b      	subs	r3, r3, r1
90018b5c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018b60:	886d      	ldrh	r5, [r5, #2]
90018b62:	f8ad 300c 	strh.w	r3, [sp, #12]
90018b66:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018b6a:	f8ad 1012 	strh.w	r1, [sp, #18]
90018b6e:	1a5b      	subs	r3, r3, r1
90018b70:	4641      	mov	r1, r8
90018b72:	1b5b      	subs	r3, r3, r5
90018b74:	f8ad 300e 	strh.w	r3, [sp, #14]
90018b78:	6803      	ldr	r3, [r0, #0]
90018b7a:	689b      	ldr	r3, [r3, #8]
90018b7c:	4798      	blx	r3
90018b7e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90018c18 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90018b82:	a805      	add	r0, sp, #20
90018b84:	f000 f882 	bl	90018c8c <_ZN8touchgfx9Matrix3x36rotateEf>
90018b88:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018b8c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018b8e:	1a9b      	subs	r3, r3, r2
90018b90:	ee00 3a90 	vmov	s1, r3
90018b94:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018b98:	1bdb      	subs	r3, r3, r7
90018b9a:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018b9e:	ee00 3a10 	vmov	s0, r3
90018ba2:	e795      	b.n	90018ad0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90018ba4:	886b      	ldrh	r3, [r5, #2]
90018ba6:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90018baa:	f8ad 300c 	strh.w	r3, [sp, #12]
90018bae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018bb2:	8829      	ldrh	r1, [r5, #0]
90018bb4:	1a9b      	subs	r3, r3, r2
90018bb6:	f8ad 2012 	strh.w	r2, [sp, #18]
90018bba:	aa03      	add	r2, sp, #12
90018bbc:	1a5b      	subs	r3, r3, r1
90018bbe:	4641      	mov	r1, r8
90018bc0:	f8ad 300e 	strh.w	r3, [sp, #14]
90018bc4:	88eb      	ldrh	r3, [r5, #6]
90018bc6:	f8ad 3010 	strh.w	r3, [sp, #16]
90018bca:	6803      	ldr	r3, [r0, #0]
90018bcc:	689b      	ldr	r3, [r3, #8]
90018bce:	4798      	blx	r3
90018bd0:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90018c1c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90018bd4:	a805      	add	r0, sp, #20
90018bd6:	f000 f859 	bl	90018c8c <_ZN8touchgfx9Matrix3x36rotateEf>
90018bda:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018bde:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018be2:	1bdb      	subs	r3, r3, r7
90018be4:	ee00 3a90 	vmov	s1, r3
90018be8:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018bec:	e748      	b.n	90018a80 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90018bee:	6860      	ldr	r0, [r4, #4]
90018bf0:	2100      	movs	r1, #0
90018bf2:	8b22      	ldrh	r2, [r4, #24]
90018bf4:	6803      	ldr	r3, [r0, #0]
90018bf6:	9101      	str	r1, [sp, #4]
90018bf8:	8b61      	ldrh	r1, [r4, #26]
90018bfa:	9100      	str	r1, [sp, #0]
90018bfc:	6a1d      	ldr	r5, [r3, #32]
90018bfe:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90018c02:	47a8      	blx	r5
90018c04:	6860      	ldr	r0, [r4, #4]
90018c06:	6803      	ldr	r3, [r0, #0]
90018c08:	69db      	ldr	r3, [r3, #28]
90018c0a:	4798      	blx	r3
90018c0c:	b00e      	add	sp, #56	@ 0x38
90018c0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018c12:	bf00      	nop
90018c14:	42b40000 	.word	0x42b40000
90018c18:	43340000 	.word	0x43340000
90018c1c:	43870000 	.word	0x43870000

90018c20 <_ZN8touchgfx9Matrix3x35resetEv>:
90018c20:	2300      	movs	r3, #0
90018c22:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90018c26:	6043      	str	r3, [r0, #4]
90018c28:	6002      	str	r2, [r0, #0]
90018c2a:	6083      	str	r3, [r0, #8]
90018c2c:	60c3      	str	r3, [r0, #12]
90018c2e:	6102      	str	r2, [r0, #16]
90018c30:	6143      	str	r3, [r0, #20]
90018c32:	6183      	str	r3, [r0, #24]
90018c34:	61c3      	str	r3, [r0, #28]
90018c36:	6202      	str	r2, [r0, #32]
90018c38:	4770      	bx	lr

90018c3a <_ZN8touchgfx9Matrix3x3C1Ev>:
90018c3a:	b508      	push	{r3, lr}
90018c3c:	f7ff fff0 	bl	90018c20 <_ZN8touchgfx9Matrix3x35resetEv>
90018c40:	bd08      	pop	{r3, pc}

90018c42 <_ZN8touchgfx9Matrix3x35scaleEff>:
90018c42:	edd0 7a00 	vldr	s15, [r0]
90018c46:	ee67 7a80 	vmul.f32	s15, s15, s0
90018c4a:	edc0 7a00 	vstr	s15, [r0]
90018c4e:	edd0 7a01 	vldr	s15, [r0, #4]
90018c52:	ee67 7a80 	vmul.f32	s15, s15, s0
90018c56:	edc0 7a01 	vstr	s15, [r0, #4]
90018c5a:	edd0 7a02 	vldr	s15, [r0, #8]
90018c5e:	ee27 0a80 	vmul.f32	s0, s15, s0
90018c62:	edd0 7a03 	vldr	s15, [r0, #12]
90018c66:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018c6a:	ed80 0a02 	vstr	s0, [r0, #8]
90018c6e:	edc0 7a03 	vstr	s15, [r0, #12]
90018c72:	edd0 7a04 	vldr	s15, [r0, #16]
90018c76:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018c7a:	edc0 7a04 	vstr	s15, [r0, #16]
90018c7e:	edd0 7a05 	vldr	s15, [r0, #20]
90018c82:	ee67 0aa0 	vmul.f32	s1, s15, s1
90018c86:	edc0 0a05 	vstr	s1, [r0, #20]
90018c8a:	4770      	bx	lr

90018c8c <_ZN8touchgfx9Matrix3x36rotateEf>:
90018c8c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90018d20 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90018c90:	ee20 0a27 	vmul.f32	s0, s0, s15
90018c94:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90018d24 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90018c98:	b510      	push	{r4, lr}
90018c9a:	ed2d 8b02 	vpush	{d8}
90018c9e:	eec0 8a27 	vdiv.f32	s17, s0, s15
90018ca2:	4604      	mov	r4, r0
90018ca4:	eeb0 0a68 	vmov.f32	s0, s17
90018ca8:	f010 fe7a 	bl	900299a0 <cosf>
90018cac:	eeb0 8a40 	vmov.f32	s16, s0
90018cb0:	eeb0 0a68 	vmov.f32	s0, s17
90018cb4:	f010 fdb0 	bl	90029818 <sinf>
90018cb8:	edd4 6a03 	vldr	s13, [r4, #12]
90018cbc:	edd4 4a00 	vldr	s9, [r4]
90018cc0:	ee60 7a66 	vnmul.f32	s15, s0, s13
90018cc4:	ed94 7a04 	vldr	s14, [r4, #16]
90018cc8:	ed94 5a01 	vldr	s10, [r4, #4]
90018ccc:	ee66 6a88 	vmul.f32	s13, s13, s16
90018cd0:	edd4 5a02 	vldr	s11, [r4, #8]
90018cd4:	eee8 7a24 	vfma.f32	s15, s16, s9
90018cd8:	eee0 6a24 	vfma.f32	s13, s0, s9
90018cdc:	edc4 7a00 	vstr	s15, [r4]
90018ce0:	ee60 7a47 	vnmul.f32	s15, s0, s14
90018ce4:	ee27 7a08 	vmul.f32	s14, s14, s16
90018ce8:	edc4 6a03 	vstr	s13, [r4, #12]
90018cec:	eee8 7a05 	vfma.f32	s15, s16, s10
90018cf0:	eea0 7a05 	vfma.f32	s14, s0, s10
90018cf4:	edc4 7a01 	vstr	s15, [r4, #4]
90018cf8:	edd4 7a05 	vldr	s15, [r4, #20]
90018cfc:	ed84 7a04 	vstr	s14, [r4, #16]
90018d00:	ee20 6a67 	vnmul.f32	s12, s0, s15
90018d04:	ee67 7a88 	vmul.f32	s15, s15, s16
90018d08:	eea8 6a25 	vfma.f32	s12, s16, s11
90018d0c:	eee0 7a25 	vfma.f32	s15, s0, s11
90018d10:	ecbd 8b02 	vpop	{d8}
90018d14:	ed84 6a02 	vstr	s12, [r4, #8]
90018d18:	edc4 7a05 	vstr	s15, [r4, #20]
90018d1c:	bd10      	pop	{r4, pc}
90018d1e:	bf00      	nop
90018d20:	40490fdb 	.word	0x40490fdb
90018d24:	43340000 	.word	0x43340000

90018d28 <_ZN8touchgfx9Matrix3x39translateEff>:
90018d28:	ed90 6a06 	vldr	s12, [r0, #24]
90018d2c:	edd0 7a00 	vldr	s15, [r0]
90018d30:	edd0 6a07 	vldr	s13, [r0, #28]
90018d34:	eee6 7a00 	vfma.f32	s15, s12, s0
90018d38:	ed90 7a08 	vldr	s14, [r0, #32]
90018d3c:	edc0 7a00 	vstr	s15, [r0]
90018d40:	edd0 7a01 	vldr	s15, [r0, #4]
90018d44:	eee6 7a80 	vfma.f32	s15, s13, s0
90018d48:	edc0 7a01 	vstr	s15, [r0, #4]
90018d4c:	edd0 7a02 	vldr	s15, [r0, #8]
90018d50:	eee7 7a00 	vfma.f32	s15, s14, s0
90018d54:	edc0 7a02 	vstr	s15, [r0, #8]
90018d58:	edd0 7a03 	vldr	s15, [r0, #12]
90018d5c:	eee6 7a20 	vfma.f32	s15, s12, s1
90018d60:	edc0 7a03 	vstr	s15, [r0, #12]
90018d64:	edd0 7a04 	vldr	s15, [r0, #16]
90018d68:	eee6 7aa0 	vfma.f32	s15, s13, s1
90018d6c:	edc0 7a04 	vstr	s15, [r0, #16]
90018d70:	edd0 7a05 	vldr	s15, [r0, #20]
90018d74:	eee7 7a20 	vfma.f32	s15, s14, s1
90018d78:	edc0 7a05 	vstr	s15, [r0, #20]
90018d7c:	4770      	bx	lr

90018d7e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90018d7e:	edd0 6a01 	vldr	s13, [r0, #4]
90018d82:	b084      	sub	sp, #16
90018d84:	edd0 7a04 	vldr	s15, [r0, #16]
90018d88:	ed90 7a03 	vldr	s14, [r0, #12]
90018d8c:	ee60 7aa7 	vmul.f32	s15, s1, s15
90018d90:	ee60 0aa6 	vmul.f32	s1, s1, s13
90018d94:	edd0 6a00 	vldr	s13, [r0]
90018d98:	eee7 7a00 	vfma.f32	s15, s14, s0
90018d9c:	ed90 7a05 	vldr	s14, [r0, #20]
90018da0:	eee6 0a80 	vfma.f32	s1, s13, s0
90018da4:	ed90 0a02 	vldr	s0, [r0, #8]
90018da8:	ee30 0a80 	vadd.f32	s0, s1, s0
90018dac:	ee77 0a87 	vadd.f32	s1, s15, s14
90018db0:	b004      	add	sp, #16
90018db2:	4770      	bx	lr

90018db4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90018db4:	b530      	push	{r4, r5, lr}
90018db6:	8083      	strh	r3, [r0, #4]
90018db8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90018dbc:	f89d 5018 	ldrb.w	r5, [sp, #24]
90018dc0:	80c3      	strh	r3, [r0, #6]
90018dc2:	f89d 3010 	ldrb.w	r3, [sp, #16]
90018dc6:	6141      	str	r1, [r0, #20]
90018dc8:	7203      	strb	r3, [r0, #8]
90018dca:	f89d 3014 	ldrb.w	r3, [sp, #20]
90018dce:	8302      	strh	r2, [r0, #24]
90018dd0:	7243      	strb	r3, [r0, #9]
90018dd2:	7a83      	ldrb	r3, [r0, #10]
90018dd4:	f365 0306 	bfi	r3, r5, #0, #7
90018dd8:	f89d 501c 	ldrb.w	r5, [sp, #28]
90018ddc:	f365 13c7 	bfi	r3, r5, #7, #1
90018de0:	7283      	strb	r3, [r0, #10]
90018de2:	f89d 3020 	ldrb.w	r3, [sp, #32]
90018de6:	72c3      	strb	r3, [r0, #11]
90018de8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90018dec:	7303      	strb	r3, [r0, #12]
90018dee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90018df2:	81c3      	strh	r3, [r0, #14]
90018df4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90018df8:	8203      	strh	r3, [r0, #16]
90018dfa:	4b01      	ldr	r3, [pc, #4]	@ (90018e00 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90018dfc:	6003      	str	r3, [r0, #0]
90018dfe:	bd30      	pop	{r4, r5, pc}
90018e00:	9002d8b8 	.word	0x9002d8b8

90018e04 <_ZNK8touchgfx9ConstFont4findEt>:
90018e04:	b5f0      	push	{r4, r5, r6, r7, lr}
90018e06:	6944      	ldr	r4, [r0, #20]
90018e08:	b3bc      	cbz	r4, 90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e0a:	88a3      	ldrh	r3, [r4, #4]
90018e0c:	8b02      	ldrh	r2, [r0, #24]
90018e0e:	1acb      	subs	r3, r1, r3
90018e10:	f102 32ff 	add.w	r2, r2, #4294967295
90018e14:	d431      	bmi.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e16:	4293      	cmp	r3, r2
90018e18:	dd0c      	ble.n	90018e34 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90018e1a:	230e      	movs	r3, #14
90018e1c:	fb03 4302 	mla	r3, r3, r2, r4
90018e20:	889b      	ldrh	r3, [r3, #4]
90018e22:	1a5b      	subs	r3, r3, r1
90018e24:	1ad3      	subs	r3, r2, r3
90018e26:	429a      	cmp	r2, r3
90018e28:	db27      	blt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e2a:	2b00      	cmp	r3, #0
90018e2c:	bfbc      	itt	lt
90018e2e:	2302      	movlt	r3, #2
90018e30:	fb92 f3f3 	sdivlt	r3, r2, r3
90018e34:	2500      	movs	r5, #0
90018e36:	260e      	movs	r6, #14
90018e38:	4295      	cmp	r5, r2
90018e3a:	dc1e      	bgt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e3c:	fb06 4003 	mla	r0, r6, r3, r4
90018e40:	8887      	ldrh	r7, [r0, #4]
90018e42:	42b9      	cmp	r1, r7
90018e44:	d01a      	beq.n	90018e7c <_ZNK8touchgfx9ConstFont4findEt+0x78>
90018e46:	d20d      	bcs.n	90018e64 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90018e48:	1e5a      	subs	r2, r3, #1
90018e4a:	4295      	cmp	r5, r2
90018e4c:	dc15      	bgt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e4e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90018e52:	1a5b      	subs	r3, r3, r1
90018e54:	1ad3      	subs	r3, r2, r3
90018e56:	429a      	cmp	r2, r3
90018e58:	db0f      	blt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e5a:	429d      	cmp	r5, r3
90018e5c:	ddec      	ble.n	90018e38 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018e5e:	1953      	adds	r3, r2, r5
90018e60:	105b      	asrs	r3, r3, #1
90018e62:	e7e9      	b.n	90018e38 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018e64:	1c5d      	adds	r5, r3, #1
90018e66:	42aa      	cmp	r2, r5
90018e68:	db07      	blt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e6a:	8a43      	ldrh	r3, [r0, #18]
90018e6c:	1acb      	subs	r3, r1, r3
90018e6e:	442b      	add	r3, r5
90018e70:	429d      	cmp	r5, r3
90018e72:	dc02      	bgt.n	90018e7a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018e74:	429a      	cmp	r2, r3
90018e76:	dadf      	bge.n	90018e38 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018e78:	e7f1      	b.n	90018e5e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90018e7a:	2000      	movs	r0, #0
90018e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018e7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90018e7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018e80:	4604      	mov	r4, r0
90018e82:	4617      	mov	r7, r2
90018e84:	461e      	mov	r6, r3
90018e86:	b911      	cbnz	r1, 90018e8e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90018e88:	2500      	movs	r5, #0
90018e8a:	4628      	mov	r0, r5
90018e8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018e8e:	290a      	cmp	r1, #10
90018e90:	d0fa      	beq.n	90018e88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018e92:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018e96:	4291      	cmp	r1, r2
90018e98:	d0f6      	beq.n	90018e88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018e9a:	f242 020b 	movw	r2, #8203	@ 0x200b
90018e9e:	4291      	cmp	r1, r2
90018ea0:	d0f2      	beq.n	90018e88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018ea2:	f7ff ffaf 	bl	90018e04 <_ZNK8touchgfx9ConstFont4findEt>
90018ea6:	4605      	mov	r5, r0
90018ea8:	b950      	cbnz	r0, 90018ec0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90018eaa:	6823      	ldr	r3, [r4, #0]
90018eac:	4620      	mov	r0, r4
90018eae:	691b      	ldr	r3, [r3, #16]
90018eb0:	4798      	blx	r3
90018eb2:	4601      	mov	r1, r0
90018eb4:	4620      	mov	r0, r4
90018eb6:	f7ff ffa5 	bl	90018e04 <_ZNK8touchgfx9ConstFont4findEt>
90018eba:	4605      	mov	r5, r0
90018ebc:	2800      	cmp	r0, #0
90018ebe:	d0e3      	beq.n	90018e88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018ec0:	6823      	ldr	r3, [r4, #0]
90018ec2:	4629      	mov	r1, r5
90018ec4:	4620      	mov	r0, r4
90018ec6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90018ec8:	4798      	blx	r3
90018eca:	6038      	str	r0, [r7, #0]
90018ecc:	6823      	ldr	r3, [r4, #0]
90018ece:	4620      	mov	r0, r4
90018ed0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90018ed2:	4798      	blx	r3
90018ed4:	7030      	strb	r0, [r6, #0]
90018ed6:	e7d8      	b.n	90018e8a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90018ed8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90018ed8:	b538      	push	{r3, r4, r5, lr}
90018eda:	4605      	mov	r5, r0
90018edc:	f001 fcf0 	bl	9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
90018ee0:	4604      	mov	r4, r0
90018ee2:	4628      	mov	r0, r5
90018ee4:	f001 fc30 	bl	9001a748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90018ee8:	2800      	cmp	r0, #0
90018eea:	bf14      	ite	ne
90018eec:	2002      	movne	r0, #2
90018eee:	2000      	moveq	r0, #0
90018ef0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90018ef4:	b280      	uxth	r0, r0
90018ef6:	bd38      	pop	{r3, r4, r5, pc}

90018ef8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90018ef8:	b538      	push	{r3, r4, r5, lr}
90018efa:	4605      	mov	r5, r0
90018efc:	f001 fce0 	bl	9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
90018f00:	4604      	mov	r4, r0
90018f02:	4628      	mov	r0, r5
90018f04:	f001 fc20 	bl	9001a748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90018f08:	2800      	cmp	r0, #0
90018f0a:	bf14      	ite	ne
90018f0c:	2002      	movne	r0, #2
90018f0e:	2000      	moveq	r0, #0
90018f10:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90018f14:	f040 0001 	orr.w	r0, r0, #1
90018f18:	b280      	uxth	r0, r0
90018f1a:	bd38      	pop	{r3, r4, r5, pc}

90018f1c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018f1c:	2000      	movs	r0, #0
90018f1e:	4770      	bx	lr

90018f20 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90018f20:	2001      	movs	r0, #1
90018f22:	4770      	bx	lr

90018f24 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90018f24:	2002      	movs	r0, #2
90018f26:	4770      	bx	lr

90018f28 <_ZN8touchgfx6ScreenD1Ev>:
90018f28:	4770      	bx	lr

90018f2a <_ZN8touchgfx6Screen11setupScreenEv>:
90018f2a:	4770      	bx	lr

90018f2c <_ZN8touchgfx12GestureEventD1Ev>:
90018f2c:	4770      	bx	lr

90018f2e <_ZN8touchgfx9DragEventD1Ev>:
90018f2e:	4770      	bx	lr

90018f30 <_ZN8touchgfx10ClickEventD1Ev>:
90018f30:	4770      	bx	lr

90018f32 <_ZN8touchgfx10ClickEventD0Ev>:
90018f32:	b510      	push	{r4, lr}
90018f34:	4604      	mov	r4, r0
90018f36:	210c      	movs	r1, #12
90018f38:	f010 fbfa 	bl	90029730 <_ZdlPvj>
90018f3c:	4620      	mov	r0, r4
90018f3e:	bd10      	pop	{r4, pc}

90018f40 <_ZN8touchgfx9DragEventD0Ev>:
90018f40:	b510      	push	{r4, lr}
90018f42:	4604      	mov	r4, r0
90018f44:	2110      	movs	r1, #16
90018f46:	f010 fbf3 	bl	90029730 <_ZdlPvj>
90018f4a:	4620      	mov	r0, r4
90018f4c:	bd10      	pop	{r4, pc}

90018f4e <_ZN8touchgfx12GestureEventD0Ev>:
90018f4e:	b510      	push	{r4, lr}
90018f50:	4604      	mov	r4, r0
90018f52:	210c      	movs	r1, #12
90018f54:	f010 fbec 	bl	90029730 <_ZdlPvj>
90018f58:	4620      	mov	r0, r4
90018f5a:	bd10      	pop	{r4, pc}

90018f5c <_ZN8touchgfx6ScreenD0Ev>:
90018f5c:	b510      	push	{r4, lr}
90018f5e:	4604      	mov	r4, r0
90018f60:	213c      	movs	r1, #60	@ 0x3c
90018f62:	f010 fbe5 	bl	90029730 <_ZdlPvj>
90018f66:	4620      	mov	r0, r4
90018f68:	bd10      	pop	{r4, pc}
	...

90018f6c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90018f6c:	b530      	push	{r4, r5, lr}
90018f6e:	460d      	mov	r5, r1
90018f70:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90018f72:	b087      	sub	sp, #28
90018f74:	4604      	mov	r4, r0
90018f76:	b301      	cbz	r1, 90018fba <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90018f78:	a801      	add	r0, sp, #4
90018f7a:	f7ff fb5f 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018f7e:	892a      	ldrh	r2, [r5, #8]
90018f80:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90018f84:	7928      	ldrb	r0, [r5, #4]
90018f86:	1ad2      	subs	r2, r2, r3
90018f88:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90018f8a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018f8e:	441a      	add	r2, r3
90018f90:	896b      	ldrh	r3, [r5, #10]
90018f92:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90018f96:	f88d 0010 	strb.w	r0, [sp, #16]
90018f9a:	1b5b      	subs	r3, r3, r5
90018f9c:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90018f9e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018fa0:	442b      	add	r3, r5
90018fa2:	4d07      	ldr	r5, [pc, #28]	@ (90018fc0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90018fa4:	f8ad 1012 	strh.w	r1, [sp, #18]
90018fa8:	a903      	add	r1, sp, #12
90018faa:	9503      	str	r5, [sp, #12]
90018fac:	f8ad 2014 	strh.w	r2, [sp, #20]
90018fb0:	f8ad 3016 	strh.w	r3, [sp, #22]
90018fb4:	6803      	ldr	r3, [r0, #0]
90018fb6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018fb8:	4798      	blx	r3
90018fba:	b007      	add	sp, #28
90018fbc:	bd30      	pop	{r4, r5, pc}
90018fbe:	bf00      	nop
90018fc0:	9002d948 	.word	0x9002d948

90018fc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90018fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018fc8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90018fca:	b08a      	sub	sp, #40	@ 0x28
90018fcc:	4604      	mov	r4, r0
90018fce:	460d      	mov	r5, r1
90018fd0:	b113      	cbz	r3, 90018fd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90018fd2:	790b      	ldrb	r3, [r1, #4]
90018fd4:	2b00      	cmp	r3, #0
90018fd6:	d044      	beq.n	90019062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018fd8:	f104 0804 	add.w	r8, r4, #4
90018fdc:	a803      	add	r0, sp, #12
90018fde:	4641      	mov	r1, r8
90018fe0:	f7ff fb2c 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018fe4:	792b      	ldrb	r3, [r5, #4]
90018fe6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018fea:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018fee:	b983      	cbnz	r3, 90019012 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018ff0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90018ff4:	892a      	ldrh	r2, [r5, #8]
90018ff6:	88e9      	ldrh	r1, [r5, #6]
90018ff8:	4640      	mov	r0, r8
90018ffa:	1b92      	subs	r2, r2, r6
90018ffc:	9301      	str	r3, [sp, #4]
90018ffe:	1bc9      	subs	r1, r1, r7
90019000:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90019004:	b212      	sxth	r2, r2
90019006:	9300      	str	r3, [sp, #0]
90019008:	b209      	sxth	r1, r1
9001900a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001900e:	f7f7 fea7 	bl	90010d60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90019012:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90019014:	b329      	cbz	r1, 90019062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019016:	a805      	add	r0, sp, #20
90019018:	f7ff fb10 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001901c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019020:	792b      	ldrb	r3, [r5, #4]
90019022:	a907      	add	r1, sp, #28
90019024:	1abf      	subs	r7, r7, r2
90019026:	88ea      	ldrh	r2, [r5, #6]
90019028:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001902a:	4417      	add	r7, r2
9001902c:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001902e:	f88d 3020 	strb.w	r3, [sp, #32]
90019032:	4417      	add	r7, r2
90019034:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90019038:	1ab6      	subs	r6, r6, r2
9001903a:	892a      	ldrh	r2, [r5, #8]
9001903c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90019040:	4416      	add	r6, r2
90019042:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019044:	4416      	add	r6, r2
90019046:	4a08      	ldr	r2, [pc, #32]	@ (90019068 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90019048:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001904c:	2600      	movs	r6, #0
9001904e:	9207      	str	r2, [sp, #28]
90019050:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90019054:	6803      	ldr	r3, [r0, #0]
90019056:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019058:	4798      	blx	r3
9001905a:	792b      	ldrb	r3, [r5, #4]
9001905c:	b10b      	cbz	r3, 90019062 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001905e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90019062:	b00a      	add	sp, #40	@ 0x28
90019064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019068:	9002d920 	.word	0x9002d920

9001906c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001906c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019070:	460c      	mov	r4, r1
90019072:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90019074:	b088      	sub	sp, #32
90019076:	4605      	mov	r5, r0
90019078:	2900      	cmp	r1, #0
9001907a:	d06d      	beq.n	90019158 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001907c:	4668      	mov	r0, sp
9001907e:	f7ff fadd 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019082:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90019084:	88e3      	ldrh	r3, [r4, #6]
90019086:	f9bd 8000 	ldrsh.w	r8, [sp]
9001908a:	440b      	add	r3, r1
9001908c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90019090:	b21b      	sxth	r3, r3
90019092:	4543      	cmp	r3, r8
90019094:	db31      	blt.n	900190fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019096:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001909a:	44c4      	add	ip, r8
9001909c:	fa0f fc8c 	sxth.w	ip, ip
900190a0:	4563      	cmp	r3, ip
900190a2:	da2a      	bge.n	900190fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900190a4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900190a6:	8926      	ldrh	r6, [r4, #8]
900190a8:	4416      	add	r6, r2
900190aa:	b236      	sxth	r6, r6
900190ac:	42be      	cmp	r6, r7
900190ae:	db24      	blt.n	900190fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900190b0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900190b4:	4438      	add	r0, r7
900190b6:	b200      	sxth	r0, r0
900190b8:	4286      	cmp	r6, r0
900190ba:	da1e      	bge.n	900190fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900190bc:	8963      	ldrh	r3, [r4, #10]
900190be:	4419      	add	r1, r3
900190c0:	b209      	sxth	r1, r1
900190c2:	4541      	cmp	r1, r8
900190c4:	db08      	blt.n	900190d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900190c6:	4561      	cmp	r1, ip
900190c8:	da06      	bge.n	900190d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900190ca:	89a3      	ldrh	r3, [r4, #12]
900190cc:	441a      	add	r2, r3
900190ce:	b212      	sxth	r2, r2
900190d0:	42ba      	cmp	r2, r7
900190d2:	db01      	blt.n	900190d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900190d4:	4282      	cmp	r2, r0
900190d6:	db10      	blt.n	900190fa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900190d8:	4b21      	ldr	r3, [pc, #132]	@ (90019160 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
900190da:	a904      	add	r1, sp, #16
900190dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900190de:	9304      	str	r3, [sp, #16]
900190e0:	2302      	movs	r3, #2
900190e2:	f88d 3014 	strb.w	r3, [sp, #20]
900190e6:	2300      	movs	r3, #0
900190e8:	f8ad 3016 	strh.w	r3, [sp, #22]
900190ec:	f8ad 3018 	strh.w	r3, [sp, #24]
900190f0:	f8ad 301a 	strh.w	r3, [sp, #26]
900190f4:	6803      	ldr	r3, [r0, #0]
900190f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900190f8:	4798      	blx	r3
900190fa:	1d29      	adds	r1, r5, #4
900190fc:	a802      	add	r0, sp, #8
900190fe:	f7ff fa9d 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019102:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019106:	88e0      	ldrh	r0, [r4, #6]
90019108:	eba3 0808 	sub.w	r8, r3, r8
9001910c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019110:	7921      	ldrb	r1, [r4, #4]
90019112:	fa1f f888 	uxth.w	r8, r8
90019116:	1bdf      	subs	r7, r3, r7
90019118:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001911c:	b2bb      	uxth	r3, r7
9001911e:	4440      	add	r0, r8
90019120:	8922      	ldrh	r2, [r4, #8]
90019122:	8967      	ldrh	r7, [r4, #10]
90019124:	4460      	add	r0, ip
90019126:	89a4      	ldrh	r4, [r4, #12]
90019128:	441a      	add	r2, r3
9001912a:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001912c:	44b8      	add	r8, r7
9001912e:	4423      	add	r3, r4
90019130:	f8ad 0016 	strh.w	r0, [sp, #22]
90019134:	4432      	add	r2, r6
90019136:	44e0      	add	r8, ip
90019138:	4433      	add	r3, r6
9001913a:	4c0a      	ldr	r4, [pc, #40]	@ (90019164 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001913c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001913e:	f88d 1014 	strb.w	r1, [sp, #20]
90019142:	a904      	add	r1, sp, #16
90019144:	9404      	str	r4, [sp, #16]
90019146:	f8ad 2018 	strh.w	r2, [sp, #24]
9001914a:	f8ad 801a 	strh.w	r8, [sp, #26]
9001914e:	f8ad 301c 	strh.w	r3, [sp, #28]
90019152:	6803      	ldr	r3, [r0, #0]
90019154:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90019156:	4798      	blx	r3
90019158:	b008      	add	sp, #32
9001915a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001915e:	bf00      	nop
90019160:	9002d920 	.word	0x9002d920
90019164:	9002d934 	.word	0x9002d934

90019168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90019168:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001916a:	4604      	mov	r4, r0
9001916c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90019170:	3201      	adds	r2, #1
90019172:	d112      	bne.n	9001919a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90019174:	2500      	movs	r5, #0
90019176:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001917a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001917e:	6803      	ldr	r3, [r0, #0]
90019180:	9500      	str	r5, [sp, #0]
90019182:	466d      	mov	r5, sp
90019184:	f8ad 1004 	strh.w	r1, [sp, #4]
90019188:	f8ad 2006 	strh.w	r2, [sp, #6]
9001918c:	4629      	mov	r1, r5
9001918e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019190:	4798      	blx	r3
90019192:	e895 0003 	ldmia.w	r5, {r0, r1}
90019196:	e884 0003 	stmia.w	r4, {r0, r1}
9001919a:	4620      	mov	r0, r4
9001919c:	b003      	add	sp, #12
9001919e:	bd30      	pop	{r4, r5, pc}

900191a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900191a0:	b513      	push	{r0, r1, r4, lr}
900191a2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900191a6:	4604      	mov	r4, r0
900191a8:	3301      	adds	r3, #1
900191aa:	d109      	bne.n	900191c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900191ac:	4601      	mov	r1, r0
900191ae:	4668      	mov	r0, sp
900191b0:	f7ff fa44 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900191b4:	f8bd 3000 	ldrh.w	r3, [sp]
900191b8:	8423      	strh	r3, [r4, #32]
900191ba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900191be:	8463      	strh	r3, [r4, #34]	@ 0x22
900191c0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900191c4:	b002      	add	sp, #8
900191c6:	bd10      	pop	{r4, pc}

900191c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
900191c8:	b513      	push	{r0, r1, r4, lr}
900191ca:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
900191ce:	4604      	mov	r4, r0
900191d0:	3301      	adds	r3, #1
900191d2:	d109      	bne.n	900191e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
900191d4:	4601      	mov	r1, r0
900191d6:	4668      	mov	r0, sp
900191d8:	f7ff fa30 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900191dc:	f8bd 3000 	ldrh.w	r3, [sp]
900191e0:	8423      	strh	r3, [r4, #32]
900191e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900191e6:	8463      	strh	r3, [r4, #34]	@ 0x22
900191e8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
900191ec:	b002      	add	sp, #8
900191ee:	bd10      	pop	{r4, pc}

900191f0 <_ZN8touchgfx6ScreenC1Ev>:
900191f0:	b570      	push	{r4, r5, r6, lr}
900191f2:	4b17      	ldr	r3, [pc, #92]	@ (90019250 <_ZN8touchgfx6ScreenC1Ev+0x60>)
900191f4:	4605      	mov	r5, r0
900191f6:	4a17      	ldr	r2, [pc, #92]	@ (90019254 <_ZN8touchgfx6ScreenC1Ev+0x64>)
900191f8:	2101      	movs	r1, #1
900191fa:	f845 3b04 	str.w	r3, [r5], #4
900191fe:	2300      	movs	r3, #0
90019200:	6042      	str	r2, [r0, #4]
90019202:	4604      	mov	r4, r0
90019204:	8103      	strh	r3, [r0, #8]
90019206:	8143      	strh	r3, [r0, #10]
90019208:	8183      	strh	r3, [r0, #12]
9001920a:	81c3      	strh	r3, [r0, #14]
9001920c:	8203      	strh	r3, [r0, #16]
9001920e:	8243      	strh	r3, [r0, #18]
90019210:	8283      	strh	r3, [r0, #20]
90019212:	82c3      	strh	r3, [r0, #22]
90019214:	6203      	str	r3, [r0, #32]
90019216:	8483      	strh	r3, [r0, #36]	@ 0x24
90019218:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001921a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001921e:	6343      	str	r3, [r0, #52]	@ 0x34
90019220:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90019224:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90019228:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001922c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90019230:	4b09      	ldr	r3, [pc, #36]	@ (90019258 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90019232:	4628      	mov	r0, r5
90019234:	f9b3 6000 	ldrsh.w	r6, [r3]
90019238:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001923a:	4a08      	ldr	r2, [pc, #32]	@ (9001925c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001923c:	f9b2 1000 	ldrsh.w	r1, [r2]
90019240:	4798      	blx	r3
90019242:	6863      	ldr	r3, [r4, #4]
90019244:	4628      	mov	r0, r5
90019246:	4631      	mov	r1, r6
90019248:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001924a:	4798      	blx	r3
9001924c:	4620      	mov	r0, r4
9001924e:	bd70      	pop	{r4, r5, r6, pc}
90019250:	9002d95c 	.word	0x9002d95c
90019254:	9002d404 	.word	0x9002d404
90019258:	2402183a 	.word	0x2402183a
9001925c:	24021838 	.word	0x24021838

90019260 <_ZN8touchgfx6Screen4drawEv>:
90019260:	4b09      	ldr	r3, [pc, #36]	@ (90019288 <_ZN8touchgfx6Screen4drawEv+0x28>)
90019262:	b507      	push	{r0, r1, r2, lr}
90019264:	f9b3 2000 	ldrsh.w	r2, [r3]
90019268:	2100      	movs	r1, #0
9001926a:	4b08      	ldr	r3, [pc, #32]	@ (9001928c <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001926c:	9100      	str	r1, [sp, #0]
9001926e:	4669      	mov	r1, sp
90019270:	f9b3 3000 	ldrsh.w	r3, [r3]
90019274:	f8ad 2004 	strh.w	r2, [sp, #4]
90019278:	f8ad 3006 	strh.w	r3, [sp, #6]
9001927c:	6803      	ldr	r3, [r0, #0]
9001927e:	689b      	ldr	r3, [r3, #8]
90019280:	4798      	blx	r3
90019282:	b003      	add	sp, #12
90019284:	f85d fb04 	ldr.w	pc, [sp], #4
90019288:	24021838 	.word	0x24021838
9001928c:	2402183a 	.word	0x2402183a

90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90019290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019294:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019298:	b089      	sub	sp, #36	@ 0x24
9001929a:	4680      	mov	r8, r0
9001929c:	460c      	mov	r4, r1
9001929e:	2b00      	cmp	r3, #0
900192a0:	4615      	mov	r5, r2
900192a2:	dd0e      	ble.n	900192c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900192a4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900192a8:	2b00      	cmp	r3, #0
900192aa:	dd0a      	ble.n	900192c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900192ac:	4628      	mov	r0, r5
900192ae:	f7ff ff5b 	bl	90019168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900192b2:	4621      	mov	r1, r4
900192b4:	f7fd fe8f 	bl	90016fd6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900192b8:	69eb      	ldr	r3, [r5, #28]
900192ba:	b928      	cbnz	r0, 900192c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900192bc:	461d      	mov	r5, r3
900192be:	2b00      	cmp	r3, #0
900192c0:	d1f4      	bne.n	900192ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900192c2:	b009      	add	sp, #36	@ 0x24
900192c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900192c8:	ae04      	add	r6, sp, #16
900192ca:	2b00      	cmp	r3, #0
900192cc:	f000 80b5 	beq.w	9001943a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900192d0:	682b      	ldr	r3, [r5, #0]
900192d2:	4629      	mov	r1, r5
900192d4:	a802      	add	r0, sp, #8
900192d6:	68db      	ldr	r3, [r3, #12]
900192d8:	4798      	blx	r3
900192da:	4628      	mov	r0, r5
900192dc:	f7ff ff60 	bl	900191a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900192e0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
900192e4:	4407      	add	r7, r0
900192e6:	4628      	mov	r0, r5
900192e8:	f7ff ff6e 	bl	900191c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900192ec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900192f0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900192f4:	b23f      	sxth	r7, r7
900192f6:	4418      	add	r0, r3
900192f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900192fc:	4621      	mov	r1, r4
900192fe:	f8ad 2014 	strh.w	r2, [sp, #20]
90019302:	f8ad 0012 	strh.w	r0, [sp, #18]
90019306:	4630      	mov	r0, r6
90019308:	f8ad 3016 	strh.w	r3, [sp, #22]
9001930c:	f8ad 7010 	strh.w	r7, [sp, #16]
90019310:	f7f7 fe08 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90019314:	4628      	mov	r0, r5
90019316:	f7ff ff27 	bl	90019168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001931a:	ab06      	add	r3, sp, #24
9001931c:	4602      	mov	r2, r0
9001931e:	e896 0003 	ldmia.w	r6, {r0, r1}
90019322:	e883 0003 	stmia.w	r3, {r0, r1}
90019326:	4611      	mov	r1, r2
90019328:	4618      	mov	r0, r3
9001932a:	f7f7 fdfb 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
9001932e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019332:	f9b4 1000 	ldrsh.w	r1, [r4]
90019336:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001933a:	4299      	cmp	r1, r3
9001933c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019340:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019344:	d10b      	bne.n	9001935e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019346:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001934a:	4552      	cmp	r2, sl
9001934c:	d107      	bne.n	9001935e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001934e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019352:	455a      	cmp	r2, fp
90019354:	d103      	bne.n	9001935e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019356:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001935a:	454a      	cmp	r2, r9
9001935c:	d06d      	beq.n	9001943a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001935e:	f1bb 0f00 	cmp.w	fp, #0
90019362:	dd65      	ble.n	90019430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019364:	f1b9 0f00 	cmp.w	r9, #0
90019368:	dd62      	ble.n	90019430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001936a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001936e:	fa1f f08a 	uxth.w	r0, sl
90019372:	4552      	cmp	r2, sl
90019374:	9000      	str	r0, [sp, #0]
90019376:	da12      	bge.n	9001939e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019378:	9301      	str	r3, [sp, #4]
9001937a:	9b00      	ldr	r3, [sp, #0]
9001937c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019380:	f8ad 2012 	strh.w	r2, [sp, #18]
90019384:	1a9a      	subs	r2, r3, r2
90019386:	f8ad 1010 	strh.w	r1, [sp, #16]
9001938a:	4631      	mov	r1, r6
9001938c:	f8ad 0014 	strh.w	r0, [sp, #20]
90019390:	4640      	mov	r0, r8
90019392:	f8ad 2016 	strh.w	r2, [sp, #22]
90019396:	69ea      	ldr	r2, [r5, #28]
90019398:	f7ff ff7a 	bl	90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001939c:	9b01      	ldr	r3, [sp, #4]
9001939e:	f9b4 2000 	ldrsh.w	r2, [r4]
900193a2:	b29f      	uxth	r7, r3
900193a4:	429a      	cmp	r2, r3
900193a6:	da0d      	bge.n	900193c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900193a8:	f8ad 2010 	strh.w	r2, [sp, #16]
900193ac:	1aba      	subs	r2, r7, r2
900193ae:	f8ad a012 	strh.w	sl, [sp, #18]
900193b2:	4631      	mov	r1, r6
900193b4:	f8ad 2014 	strh.w	r2, [sp, #20]
900193b8:	4640      	mov	r0, r8
900193ba:	f8ad 9016 	strh.w	r9, [sp, #22]
900193be:	69ea      	ldr	r2, [r5, #28]
900193c0:	f7ff ff66 	bl	90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900193c4:	8822      	ldrh	r2, [r4, #0]
900193c6:	445f      	add	r7, fp
900193c8:	88a3      	ldrh	r3, [r4, #4]
900193ca:	b2bf      	uxth	r7, r7
900193cc:	4413      	add	r3, r2
900193ce:	b23a      	sxth	r2, r7
900193d0:	b29b      	uxth	r3, r3
900193d2:	b219      	sxth	r1, r3
900193d4:	4291      	cmp	r1, r2
900193d6:	dd0d      	ble.n	900193f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
900193d8:	1bdb      	subs	r3, r3, r7
900193da:	f8ad 2010 	strh.w	r2, [sp, #16]
900193de:	f8ad a012 	strh.w	sl, [sp, #18]
900193e2:	4631      	mov	r1, r6
900193e4:	f8ad 3014 	strh.w	r3, [sp, #20]
900193e8:	4640      	mov	r0, r8
900193ea:	f8ad 9016 	strh.w	r9, [sp, #22]
900193ee:	69ea      	ldr	r2, [r5, #28]
900193f0:	f7ff ff4e 	bl	90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900193f4:	88e2      	ldrh	r2, [r4, #6]
900193f6:	8863      	ldrh	r3, [r4, #2]
900193f8:	4413      	add	r3, r2
900193fa:	9a00      	ldr	r2, [sp, #0]
900193fc:	444a      	add	r2, r9
900193fe:	b29b      	uxth	r3, r3
90019400:	fa1f f982 	uxth.w	r9, r2
90019404:	b219      	sxth	r1, r3
90019406:	fa0f f289 	sxth.w	r2, r9
9001940a:	428a      	cmp	r2, r1
9001940c:	da15      	bge.n	9001943a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001940e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019412:	eba3 0309 	sub.w	r3, r3, r9
90019416:	f9b4 0000 	ldrsh.w	r0, [r4]
9001941a:	f8ad 1014 	strh.w	r1, [sp, #20]
9001941e:	4631      	mov	r1, r6
90019420:	f8ad 0010 	strh.w	r0, [sp, #16]
90019424:	f8ad 2012 	strh.w	r2, [sp, #18]
90019428:	f8ad 3016 	strh.w	r3, [sp, #22]
9001942c:	69ea      	ldr	r2, [r5, #28]
9001942e:	e001      	b.n	90019434 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019430:	69ea      	ldr	r2, [r5, #28]
90019432:	4621      	mov	r1, r4
90019434:	4640      	mov	r0, r8
90019436:	f7ff ff2b 	bl	90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001943a:	4628      	mov	r0, r5
9001943c:	f7ff fe94 	bl	90019168 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019440:	6861      	ldr	r1, [r4, #4]
90019442:	4602      	mov	r2, r0
90019444:	4633      	mov	r3, r6
90019446:	6820      	ldr	r0, [r4, #0]
90019448:	c303      	stmia	r3!, {r0, r1}
9001944a:	4611      	mov	r1, r2
9001944c:	4630      	mov	r0, r6
9001944e:	f7f7 fd69 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90019452:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019456:	2b00      	cmp	r3, #0
90019458:	f77f af33 	ble.w	900192c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001945c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019460:	2b00      	cmp	r3, #0
90019462:	f77f af2e 	ble.w	900192c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019466:	4628      	mov	r0, r5
90019468:	f7ff fe9a 	bl	900191a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001946c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019470:	1a18      	subs	r0, r3, r0
90019472:	f8ad 0010 	strh.w	r0, [sp, #16]
90019476:	4628      	mov	r0, r5
90019478:	f7ff fea6 	bl	900191c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001947c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90019480:	4631      	mov	r1, r6
90019482:	1a18      	subs	r0, r3, r0
90019484:	f8ad 0012 	strh.w	r0, [sp, #18]
90019488:	4628      	mov	r0, r5
9001948a:	682b      	ldr	r3, [r5, #0]
9001948c:	689b      	ldr	r3, [r3, #8]
9001948e:	4798      	blx	r3
90019490:	e717      	b.n	900192c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90019492 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90019492:	b570      	push	{r4, r5, r6, lr}
90019494:	1d06      	adds	r6, r0, #4
90019496:	b086      	sub	sp, #24
90019498:	460c      	mov	r4, r1
9001949a:	2300      	movs	r3, #0
9001949c:	4631      	mov	r1, r6
9001949e:	4605      	mov	r5, r0
900194a0:	a802      	add	r0, sp, #8
900194a2:	9301      	str	r3, [sp, #4]
900194a4:	f7ff f8ca 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900194a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900194ac:	8822      	ldrh	r2, [r4, #0]
900194ae:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900194b2:	1ad2      	subs	r2, r2, r3
900194b4:	8863      	ldrh	r3, [r4, #2]
900194b6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900194ba:	1a5b      	subs	r3, r3, r1
900194bc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900194c0:	f8ad 2010 	strh.w	r2, [sp, #16]
900194c4:	aa01      	add	r2, sp, #4
900194c6:	f8ad 0014 	strh.w	r0, [sp, #20]
900194ca:	4630      	mov	r0, r6
900194cc:	f8ad 1016 	strh.w	r1, [sp, #22]
900194d0:	a904      	add	r1, sp, #16
900194d2:	f8ad 3012 	strh.w	r3, [sp, #18]
900194d6:	f7f7 fdfd 	bl	900110d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
900194da:	9a01      	ldr	r2, [sp, #4]
900194dc:	b11a      	cbz	r2, 900194e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
900194de:	4621      	mov	r1, r4
900194e0:	4628      	mov	r0, r5
900194e2:	f7ff fed5 	bl	90019290 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900194e6:	b006      	add	sp, #24
900194e8:	bd70      	pop	{r4, r5, r6, pc}

900194ea <_ZN8touchgfx6Screen4drawERNS_4RectE>:
900194ea:	4602      	mov	r2, r0
900194ec:	b530      	push	{r4, r5, lr}
900194ee:	4604      	mov	r4, r0
900194f0:	b085      	sub	sp, #20
900194f2:	f852 0f08 	ldr.w	r0, [r2, #8]!
900194f6:	460d      	mov	r5, r1
900194f8:	466b      	mov	r3, sp
900194fa:	6851      	ldr	r1, [r2, #4]
900194fc:	c303      	stmia	r3!, {r0, r1}
900194fe:	4629      	mov	r1, r5
90019500:	4668      	mov	r0, sp
90019502:	f7f7 fd0f 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90019506:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001950a:	b12b      	cbz	r3, 90019518 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001950c:	4669      	mov	r1, sp
9001950e:	4620      	mov	r0, r4
90019510:	f7ff ffbf 	bl	90019492 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019514:	b005      	add	sp, #20
90019516:	bd30      	pop	{r4, r5, pc}
90019518:	3404      	adds	r4, #4
9001951a:	a802      	add	r0, sp, #8
9001951c:	4621      	mov	r1, r4
9001951e:	f7ff f88d 	bl	9001863c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019522:	f8bd 3000 	ldrh.w	r3, [sp]
90019526:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001952a:	4669      	mov	r1, sp
9001952c:	4620      	mov	r0, r4
9001952e:	1a9b      	subs	r3, r3, r2
90019530:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019534:	f8ad 3000 	strh.w	r3, [sp]
90019538:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001953c:	1a9b      	subs	r3, r3, r2
9001953e:	f8ad 3002 	strh.w	r3, [sp, #2]
90019542:	f7f7 fd8e 	bl	90011062 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019546:	e7e5      	b.n	90019514 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019548 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019548:	460b      	mov	r3, r1
9001954a:	680a      	ldr	r2, [r1, #0]
9001954c:	1d01      	adds	r1, r0, #4
9001954e:	6992      	ldr	r2, [r2, #24]
90019550:	4618      	mov	r0, r3
90019552:	4710      	bx	r2

90019554 <_ZN8touchgfx12TextProviderC1Ev>:
90019554:	b538      	push	{r3, r4, r5, lr}
90019556:	2500      	movs	r5, #0
90019558:	2302      	movs	r3, #2
9001955a:	4604      	mov	r4, r0
9001955c:	220e      	movs	r2, #14
9001955e:	7403      	strb	r3, [r0, #16]
90019560:	4629      	mov	r1, r5
90019562:	6145      	str	r5, [r0, #20]
90019564:	7605      	strb	r5, [r0, #24]
90019566:	83c5      	strh	r5, [r0, #30]
90019568:	8405      	strh	r5, [r0, #32]
9001956a:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001956c:	8705      	strh	r5, [r0, #56]	@ 0x38
9001956e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
90019570:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
90019574:	e9c0 5500 	strd	r5, r5, [r0]
90019578:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001957c:	304c      	adds	r0, #76	@ 0x4c
9001957e:	f010 feeb 	bl	9002a358 <memset>
90019582:	2301      	movs	r3, #1
90019584:	4620      	mov	r0, r4
90019586:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001958a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001958e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
90019592:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
90019596:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001959a:	f7eb fe21 	bl	900051e0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001959e:	4620      	mov	r0, r4
900195a0:	bd38      	pop	{r3, r4, r5, pc}

900195a2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
900195a2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
900195a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900195a8:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
900195aa:	fab0 f080 	clz	r0, r0
900195ae:	0940      	lsrs	r0, r0, #5
900195b0:	4770      	bx	lr

900195b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900195b2:	b530      	push	{r4, r5, lr}
900195b4:	2500      	movs	r5, #0
900195b6:	2401      	movs	r4, #1
900195b8:	6843      	ldr	r3, [r0, #4]
900195ba:	b913      	cbnz	r3, 900195c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
900195bc:	6803      	ldr	r3, [r0, #0]
900195be:	b313      	cbz	r3, 90019606 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900195c0:	6043      	str	r3, [r0, #4]
900195c2:	7e03      	ldrb	r3, [r0, #24]
900195c4:	b143      	cbz	r3, 900195d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
900195c6:	6943      	ldr	r3, [r0, #20]
900195c8:	b12b      	cbz	r3, 900195d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900195ca:	881a      	ldrh	r2, [r3, #0]
900195cc:	b11a      	cbz	r2, 900195d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900195ce:	1c9a      	adds	r2, r3, #2
900195d0:	6142      	str	r2, [r0, #20]
900195d2:	8818      	ldrh	r0, [r3, #0]
900195d4:	bd30      	pop	{r4, r5, pc}
900195d6:	7605      	strb	r5, [r0, #24]
900195d8:	6843      	ldr	r3, [r0, #4]
900195da:	8819      	ldrh	r1, [r3, #0]
900195dc:	b199      	cbz	r1, 90019606 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900195de:	1c9a      	adds	r2, r3, #2
900195e0:	2902      	cmp	r1, #2
900195e2:	6042      	str	r2, [r0, #4]
900195e4:	d1f5      	bne.n	900195d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
900195e6:	7c03      	ldrb	r3, [r0, #16]
900195e8:	2b01      	cmp	r3, #1
900195ea:	d8e5      	bhi.n	900195b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900195ec:	1c5a      	adds	r2, r3, #1
900195ee:	3302      	adds	r3, #2
900195f0:	7402      	strb	r2, [r0, #16]
900195f2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
900195f6:	6143      	str	r3, [r0, #20]
900195f8:	2b00      	cmp	r3, #0
900195fa:	d0dd      	beq.n	900195b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900195fc:	881b      	ldrh	r3, [r3, #0]
900195fe:	2b00      	cmp	r3, #0
90019600:	d0da      	beq.n	900195b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019602:	7604      	strb	r4, [r0, #24]
90019604:	e7d8      	b.n	900195b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019606:	2000      	movs	r0, #0
90019608:	e7e4      	b.n	900195d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001960a:	6001      	str	r1, [r0, #0]
9001960c:	2100      	movs	r1, #0
9001960e:	b430      	push	{r4, r5}
90019610:	6041      	str	r1, [r0, #4]
90019612:	6815      	ldr	r5, [r2, #0]
90019614:	6085      	str	r5, [r0, #8]
90019616:	6852      	ldr	r2, [r2, #4]
90019618:	6443      	str	r3, [r0, #68]	@ 0x44
9001961a:	9b02      	ldr	r3, [sp, #8]
9001961c:	60c2      	str	r2, [r0, #12]
9001961e:	7401      	strb	r1, [r0, #16]
90019620:	6141      	str	r1, [r0, #20]
90019622:	7601      	strb	r1, [r0, #24]
90019624:	8701      	strh	r1, [r0, #56]	@ 0x38
90019626:	8401      	strh	r1, [r0, #32]
90019628:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001962c:	6483      	str	r3, [r0, #72]	@ 0x48
9001962e:	bc30      	pop	{r4, r5}
90019630:	f7eb bdd6 	b.w	900051e0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90019634 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90019634:	b408      	push	{r3}
90019636:	b510      	push	{r4, lr}
90019638:	b085      	sub	sp, #20
9001963a:	ac07      	add	r4, sp, #28
9001963c:	f854 3b04 	ldr.w	r3, [r4], #4
90019640:	9300      	str	r3, [sp, #0]
90019642:	4613      	mov	r3, r2
90019644:	4622      	mov	r2, r4
90019646:	9403      	str	r4, [sp, #12]
90019648:	f7ff ffdf 	bl	9001960a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001964c:	b005      	add	sp, #20
9001964e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019652:	b001      	add	sp, #4
90019654:	4770      	bx	lr

90019656 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90019656:	b5f0      	push	{r4, r5, r6, r7, lr}
90019658:	4605      	mov	r5, r0
9001965a:	4608      	mov	r0, r1
9001965c:	b1f1      	cbz	r1, 9001969c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001965e:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
90019662:	460b      	mov	r3, r1
90019664:	f101 0708 	add.w	r7, r1, #8
90019668:	4622      	mov	r2, r4
9001966a:	6818      	ldr	r0, [r3, #0]
9001966c:	3308      	adds	r3, #8
9001966e:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019672:	4626      	mov	r6, r4
90019674:	42bb      	cmp	r3, r7
90019676:	c603      	stmia	r6!, {r0, r1}
90019678:	4634      	mov	r4, r6
9001967a:	d1f6      	bne.n	9001966a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001967c:	6818      	ldr	r0, [r3, #0]
9001967e:	6030      	str	r0, [r6, #0]
90019680:	4610      	mov	r0, r2
90019682:	889b      	ldrh	r3, [r3, #4]
90019684:	80b3      	strh	r3, [r6, #4]
90019686:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001968a:	015b      	lsls	r3, r3, #5
9001968c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90019690:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
90019694:	430b      	orrs	r3, r1
90019696:	425b      	negs	r3, r3
90019698:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001969c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001969e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001969e:	b538      	push	{r3, r4, r5, lr}
900196a0:	460c      	mov	r4, r1
900196a2:	6811      	ldr	r1, [r2, #0]
900196a4:	4610      	mov	r0, r2
900196a6:	68cd      	ldr	r5, [r1, #12]
900196a8:	4619      	mov	r1, r3
900196aa:	47a8      	blx	r5
900196ac:	2800      	cmp	r0, #0
900196ae:	bf08      	it	eq
900196b0:	4620      	moveq	r0, r4
900196b2:	bd38      	pop	{r3, r4, r5, pc}

900196b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900196b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900196b8:	468c      	mov	ip, r1
900196ba:	4605      	mov	r5, r0
900196bc:	4614      	mov	r4, r2
900196be:	b942      	cbnz	r2, 900196d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
900196c0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900196c4:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
900196c8:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
900196cc:	4620      	mov	r0, r4
900196ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900196d2:	7b50      	ldrb	r0, [r2, #13]
900196d4:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
900196d8:	8893      	ldrh	r3, [r2, #4]
900196da:	0106      	lsls	r6, r0, #4
900196dc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
900196e0:	79e6      	ldrb	r6, [r4, #7]
900196e2:	4316      	orrs	r6, r2
900196e4:	185a      	adds	r2, r3, r1
900196e6:	b291      	uxth	r1, r2
900196e8:	b2b7      	uxth	r7, r6
900196ea:	291d      	cmp	r1, #29
900196ec:	d87f      	bhi.n	900197ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
900196ee:	2201      	movs	r2, #1
900196f0:	10f6      	asrs	r6, r6, #3
900196f2:	408a      	lsls	r2, r1
900196f4:	498b      	ldr	r1, [pc, #556]	@ (90019924 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
900196f6:	420a      	tst	r2, r1
900196f8:	d12e      	bne.n	90019758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
900196fa:	f412 7f60 	tst.w	r2, #896	@ 0x380
900196fe:	d076      	beq.n	900197ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019700:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
90019704:	4623      	mov	r3, r4
90019706:	f104 0e08 	add.w	lr, r4, #8
9001970a:	4614      	mov	r4, r2
9001970c:	6818      	ldr	r0, [r3, #0]
9001970e:	3308      	adds	r3, #8
90019710:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019714:	4694      	mov	ip, r2
90019716:	4573      	cmp	r3, lr
90019718:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001971c:	4662      	mov	r2, ip
9001971e:	d1f5      	bne.n	9001970c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019720:	6818      	ldr	r0, [r3, #0]
90019722:	f8cc 0000 	str.w	r0, [ip]
90019726:	889b      	ldrh	r3, [r3, #4]
90019728:	f8ac 3004 	strh.w	r3, [ip, #4]
9001972c:	b2b3      	uxth	r3, r6
9001972e:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
90019732:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
90019736:	1aca      	subs	r2, r1, r3
90019738:	1bcf      	subs	r7, r1, r7
9001973a:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001973e:	b292      	uxth	r2, r2
90019740:	1afb      	subs	r3, r7, r3
90019742:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
90019746:	10d2      	asrs	r2, r2, #3
90019748:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001974c:	4302      	orrs	r2, r0
9001974e:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
90019752:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
90019756:	e7b9      	b.n	900196cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90019758:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001975c:	4623      	mov	r3, r4
9001975e:	f104 0808 	add.w	r8, r4, #8
90019762:	4614      	mov	r4, r2
90019764:	6818      	ldr	r0, [r3, #0]
90019766:	3308      	adds	r3, #8
90019768:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001976c:	4696      	mov	lr, r2
9001976e:	4543      	cmp	r3, r8
90019770:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019774:	4672      	mov	r2, lr
90019776:	d1f5      	bne.n	90019764 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
90019778:	6818      	ldr	r0, [r3, #0]
9001977a:	f8ce 0000 	str.w	r0, [lr]
9001977e:	889b      	ldrh	r3, [r3, #4]
90019780:	f8ae 3004 	strh.w	r3, [lr, #4]
90019784:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
90019786:	eb05 0343 	add.w	r3, r5, r3, lsl #1
9001978a:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001978c:	f640 6333 	movw	r3, #3635	@ 0xe33
90019790:	4299      	cmp	r1, r3
90019792:	d111      	bne.n	900197b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90019794:	f8dc 3000 	ldr.w	r3, [ip]
90019798:	4660      	mov	r0, ip
9001979a:	68db      	ldr	r3, [r3, #12]
9001979c:	4798      	blx	r3
9001979e:	7b41      	ldrb	r1, [r0, #13]
900197a0:	00cb      	lsls	r3, r1, #3
900197a2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900197a6:	7a03      	ldrb	r3, [r0, #8]
900197a8:	4313      	orrs	r3, r2
900197aa:	064a      	lsls	r2, r1, #25
900197ac:	bf44      	itt	mi
900197ae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900197b2:	b21b      	sxthmi	r3, r3
900197b4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900197b8:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
900197bc:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
900197c0:	443b      	add	r3, r7
900197c2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900197c6:	4433      	add	r3, r6
900197c8:	b29b      	uxth	r3, r3
900197ca:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900197ce:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
900197d2:	10db      	asrs	r3, r3, #3
900197d4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
900197d8:	4313      	orrs	r3, r2
900197da:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
900197de:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
900197e2:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
900197e6:	1a9b      	subs	r3, r3, r2
900197e8:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900197ec:	e76e      	b.n	900196cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900197ee:	f023 0204 	bic.w	r2, r3, #4
900197f2:	f640 611b 	movw	r1, #3611	@ 0xe1b
900197f6:	428a      	cmp	r2, r1
900197f8:	d003      	beq.n	90019802 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
900197fa:	f640 621d 	movw	r2, #3613	@ 0xe1d
900197fe:	4293      	cmp	r3, r2
90019800:	d138      	bne.n	90019874 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
90019802:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
90019806:	4622      	mov	r2, r4
90019808:	f104 0808 	add.w	r8, r4, #8
9001980c:	4634      	mov	r4, r6
9001980e:	6810      	ldr	r0, [r2, #0]
90019810:	3208      	adds	r2, #8
90019812:	f852 1c04 	ldr.w	r1, [r2, #-4]
90019816:	46b6      	mov	lr, r6
90019818:	4542      	cmp	r2, r8
9001981a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001981e:	4676      	mov	r6, lr
90019820:	d1f5      	bne.n	9001980e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
90019822:	6810      	ldr	r0, [r2, #0]
90019824:	3b01      	subs	r3, #1
90019826:	4621      	mov	r1, r4
90019828:	f8ce 0000 	str.w	r0, [lr]
9001982c:	b29b      	uxth	r3, r3
9001982e:	8892      	ldrh	r2, [r2, #4]
90019830:	4628      	mov	r0, r5
90019832:	f8ae 2004 	strh.w	r2, [lr, #4]
90019836:	4662      	mov	r2, ip
90019838:	f7ff ff31 	bl	9001969e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001983c:	7b41      	ldrb	r1, [r0, #13]
9001983e:	00cb      	lsls	r3, r1, #3
90019840:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019844:	7a03      	ldrb	r3, [r0, #8]
90019846:	0648      	lsls	r0, r1, #25
90019848:	ea43 0302 	orr.w	r3, r3, r2
9001984c:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
90019850:	bf44      	itt	mi
90019852:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019856:	b21b      	sxthmi	r3, r3
90019858:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001985c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
90019860:	005b      	lsls	r3, r3, #1
90019862:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019866:	4313      	orrs	r3, r2
90019868:	115a      	asrs	r2, r3, #5
9001986a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001986e:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
90019872:	e047      	b.n	90019904 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
90019874:	00c2      	lsls	r2, r0, #3
90019876:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001987a:	7a22      	ldrb	r2, [r4, #8]
9001987c:	430a      	orrs	r2, r1
9001987e:	0641      	lsls	r1, r0, #25
90019880:	f640 6109 	movw	r1, #3593	@ 0xe09
90019884:	bf44      	itt	mi
90019886:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001988a:	b212      	sxthmi	r2, r2
9001988c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
90019890:	f023 0210 	bic.w	r2, r3, #16
90019894:	428a      	cmp	r2, r1
90019896:	d003      	beq.n	900198a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
90019898:	f640 6213 	movw	r2, #3603	@ 0xe13
9001989c:	4293      	cmp	r3, r2
9001989e:	d13e      	bne.n	9001991e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
900198a0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900198a4:	f104 0808 	add.w	r8, r4, #8
900198a8:	4696      	mov	lr, r2
900198aa:	6820      	ldr	r0, [r4, #0]
900198ac:	3408      	adds	r4, #8
900198ae:	f854 1c04 	ldr.w	r1, [r4, #-4]
900198b2:	4616      	mov	r6, r2
900198b4:	4544      	cmp	r4, r8
900198b6:	c603      	stmia	r6!, {r0, r1}
900198b8:	4632      	mov	r2, r6
900198ba:	d1f6      	bne.n	900198aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
900198bc:	6820      	ldr	r0, [r4, #0]
900198be:	6030      	str	r0, [r6, #0]
900198c0:	4628      	mov	r0, r5
900198c2:	88a1      	ldrh	r1, [r4, #4]
900198c4:	4674      	mov	r4, lr
900198c6:	80b1      	strh	r1, [r6, #4]
900198c8:	4671      	mov	r1, lr
900198ca:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
900198ce:	0076      	lsls	r6, r6, #1
900198d0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
900198d4:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
900198d8:	4316      	orrs	r6, r2
900198da:	f640 6213 	movw	r2, #3603	@ 0xe13
900198de:	4293      	cmp	r3, r2
900198e0:	4662      	mov	r2, ip
900198e2:	bf16      	itet	ne
900198e4:	f103 33ff 	addne.w	r3, r3, #4294967295
900198e8:	f640 630c 	movweq	r3, #3596	@ 0xe0c
900198ec:	b29b      	uxthne	r3, r3
900198ee:	f7ff fed6 	bl	9001969e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900198f2:	7b43      	ldrb	r3, [r0, #13]
900198f4:	7a82      	ldrb	r2, [r0, #10]
900198f6:	005b      	lsls	r3, r3, #1
900198f8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900198fc:	4313      	orrs	r3, r2
900198fe:	1af6      	subs	r6, r6, r3
90019900:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
90019904:	7b61      	ldrb	r1, [r4, #13]
90019906:	00cb      	lsls	r3, r1, #3
90019908:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001990c:	7a23      	ldrb	r3, [r4, #8]
9001990e:	4313      	orrs	r3, r2
90019910:	064a      	lsls	r2, r1, #25
90019912:	bf44      	itt	mi
90019914:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019918:	b21b      	sxthmi	r3, r3
9001991a:	1bdb      	subs	r3, r3, r7
9001991c:	e719      	b.n	90019752 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001991e:	2300      	movs	r3, #0
90019920:	e7a5      	b.n	9001986e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90019922:	bf00      	nop
90019924:	3fc00079 	.word	0x3fc00079

90019928 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90019928:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001992c:	4604      	mov	r4, r0
9001992e:	b942      	cbnz	r2, 90019942 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90019930:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90019934:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90019938:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001993c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90019940:	e047      	b.n	900199d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019942:	7b51      	ldrb	r1, [r2, #13]
90019944:	8893      	ldrh	r3, [r2, #4]
90019946:	010d      	lsls	r5, r1, #4
90019948:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001994c:	79d5      	ldrb	r5, [r2, #7]
9001994e:	4305      	orrs	r5, r0
90019950:	2d04      	cmp	r5, #4
90019952:	bfcc      	ite	gt
90019954:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90019958:	f04f 0e01 	movle.w	lr, #1
9001995c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90019960:	f200 80ab 	bhi.w	90019aba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90019964:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90019968:	4283      	cmp	r3, r0
9001996a:	d216      	bcs.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001996c:	f240 605b 	movw	r0, #1627	@ 0x65b
90019970:	4283      	cmp	r3, r0
90019972:	d859      	bhi.n	90019a28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90019974:	f240 6057 	movw	r0, #1623	@ 0x657
90019978:	4283      	cmp	r3, r0
9001997a:	d20e      	bcs.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001997c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90019980:	d24a      	bcs.n	90019a18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90019982:	f240 604e 	movw	r0, #1614	@ 0x64e
90019986:	4283      	cmp	r3, r0
90019988:	d207      	bcs.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001998a:	f240 601a 	movw	r0, #1562	@ 0x61a
9001998e:	4283      	cmp	r3, r0
90019990:	d02a      	beq.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019992:	d821      	bhi.n	900199d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90019994:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90019998:	d35b      	bcc.n	90019a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001999a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001999e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900199a2:	f040 80d0 	bne.w	90019b46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900199a6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
900199aa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900199ae:	f040 80ca 	bne.w	90019b46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900199b2:	00cb      	lsls	r3, r1, #3
900199b4:	0649      	lsls	r1, r1, #25
900199b6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900199ba:	7a13      	ldrb	r3, [r2, #8]
900199bc:	ea43 0300 	orr.w	r3, r3, r0
900199c0:	bf44      	itt	mi
900199c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900199c6:	b21b      	sxthmi	r3, r3
900199c8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900199cc:	1b5d      	subs	r5, r3, r5
900199ce:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900199d2:	4610      	mov	r0, r2
900199d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900199d8:	f240 604b 	movw	r0, #1611	@ 0x64b
900199dc:	4283      	cmp	r3, r0
900199de:	d338      	bcc.n	90019a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900199e0:	f240 604c 	movw	r0, #1612	@ 0x64c
900199e4:	4283      	cmp	r3, r0
900199e6:	d9d8      	bls.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900199e8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
900199ec:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
900199f0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900199f4:	f040 80f3 	bne.w	90019bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900199f8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900199fc:	f040 80ef 	bne.w	90019bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019a00:	00cb      	lsls	r3, r1, #3
90019a02:	064e      	lsls	r6, r1, #25
90019a04:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019a08:	7a13      	ldrb	r3, [r2, #8]
90019a0a:	ea43 0300 	orr.w	r3, r3, r0
90019a0e:	bf44      	itt	mi
90019a10:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019a14:	b21b      	sxthmi	r3, r3
90019a16:	e7d9      	b.n	900199cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90019a18:	f240 6054 	movw	r0, #1620	@ 0x654
90019a1c:	4283      	cmp	r3, r0
90019a1e:	d8e3      	bhi.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019a20:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90019a24:	d9e0      	bls.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019a26:	e7b8      	b.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019a28:	f240 6074 	movw	r0, #1652	@ 0x674
90019a2c:	4283      	cmp	r3, r0
90019a2e:	d0b4      	beq.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019a30:	d82d      	bhi.n	90019a8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90019a32:	f240 605e 	movw	r0, #1630	@ 0x65e
90019a36:	4283      	cmp	r3, r0
90019a38:	d804      	bhi.n	90019a44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90019a3a:	f240 605d 	movw	r0, #1629	@ 0x65d
90019a3e:	4283      	cmp	r3, r0
90019a40:	d3d2      	bcc.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019a42:	e7aa      	b.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019a44:	f240 605f 	movw	r0, #1631	@ 0x65f
90019a48:	4283      	cmp	r3, r0
90019a4a:	d0cd      	beq.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019a4c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90019a50:	d0a3      	beq.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019a52:	00cb      	lsls	r3, r1, #3
90019a54:	0649      	lsls	r1, r1, #25
90019a56:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019a5a:	7a13      	ldrb	r3, [r2, #8]
90019a5c:	ea43 0300 	orr.w	r3, r3, r0
90019a60:	bf44      	itt	mi
90019a62:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019a66:	b21b      	sxthmi	r3, r3
90019a68:	1b5d      	subs	r5, r3, r5
90019a6a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019a6e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019a72:	7b53      	ldrb	r3, [r2, #13]
90019a74:	015b      	lsls	r3, r3, #5
90019a76:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90019a7a:	7993      	ldrb	r3, [r2, #6]
90019a7c:	430b      	orrs	r3, r1
90019a7e:	2105      	movs	r1, #5
90019a80:	005b      	lsls	r3, r3, #1
90019a82:	fb93 f3f1 	sdiv	r3, r3, r1
90019a86:	f992 1009 	ldrsb.w	r1, [r2, #9]
90019a8a:	440b      	add	r3, r1
90019a8c:	e756      	b.n	9001993c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90019a8e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90019a92:	4283      	cmp	r3, r0
90019a94:	d809      	bhi.n	90019aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90019a96:	f240 60df 	movw	r0, #1759	@ 0x6df
90019a9a:	4283      	cmp	r3, r0
90019a9c:	f4bf af7d 	bcs.w	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019aa0:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90019aa4:	2b05      	cmp	r3, #5
90019aa6:	d8d4      	bhi.n	90019a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019aa8:	e777      	b.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019aaa:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90019aae:	4283      	cmp	r3, r0
90019ab0:	d09a      	beq.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019ab2:	f240 60e4 	movw	r0, #1764	@ 0x6e4
90019ab6:	4283      	cmp	r3, r0
90019ab8:	e7ca      	b.n	90019a50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90019aba:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90019abe:	d22b      	bcs.n	90019b18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90019ac0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90019ac4:	4283      	cmp	r3, r0
90019ac6:	d28f      	bcs.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019ac8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90019acc:	4283      	cmp	r3, r0
90019ace:	d816      	bhi.n	90019afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90019ad0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90019ad4:	4283      	cmp	r3, r0
90019ad6:	f4bf af60 	bcs.w	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019ada:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90019ade:	4283      	cmp	r3, r0
90019ae0:	d80a      	bhi.n	90019af8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90019ae2:	f240 60eb 	movw	r0, #1771	@ 0x6eb
90019ae6:	4283      	cmp	r3, r0
90019ae8:	f4bf af57 	bcs.w	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019aec:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90019af0:	4283      	cmp	r3, r0
90019af2:	f43f af79 	beq.w	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019af6:	e7ac      	b.n	90019a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019af8:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90019afc:	e7f8      	b.n	90019af0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90019afe:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90019b02:	4283      	cmp	r3, r0
90019b04:	d802      	bhi.n	90019b0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90019b06:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90019b0a:	e798      	b.n	90019a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90019b0c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90019b10:	4283      	cmp	r3, r0
90019b12:	f47f af42 	bne.w	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019b16:	e767      	b.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019b18:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90019b1c:	4283      	cmp	r3, r0
90019b1e:	f43f af63 	beq.w	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019b22:	d802      	bhi.n	90019b2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90019b24:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90019b28:	e7f2      	b.n	90019b10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90019b2a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90019b2e:	4283      	cmp	r3, r0
90019b30:	d805      	bhi.n	90019b3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90019b32:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90019b36:	4283      	cmp	r3, r0
90019b38:	f4ff af2f 	bcc.w	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019b3c:	e754      	b.n	900199e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019b3e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90019b42:	4283      	cmp	r3, r0
90019b44:	e7af      	b.n	90019aa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90019b46:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019b4a:	4617      	mov	r7, r2
90019b4c:	f102 0808 	add.w	r8, r2, #8
90019b50:	4666      	mov	r6, ip
90019b52:	6838      	ldr	r0, [r7, #0]
90019b54:	3708      	adds	r7, #8
90019b56:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019b5a:	46e6      	mov	lr, ip
90019b5c:	4547      	cmp	r7, r8
90019b5e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019b62:	46f4      	mov	ip, lr
90019b64:	d1f5      	bne.n	90019b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90019b66:	6838      	ldr	r0, [r7, #0]
90019b68:	f8ce 0000 	str.w	r0, [lr]
90019b6c:	88b9      	ldrh	r1, [r7, #4]
90019b6e:	f8ae 1004 	strh.w	r1, [lr, #4]
90019b72:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019b76:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019b7a:	d009      	beq.n	90019b90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90019b7c:	7b51      	ldrb	r1, [r2, #13]
90019b7e:	7992      	ldrb	r2, [r2, #6]
90019b80:	0149      	lsls	r1, r1, #5
90019b82:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019b86:	4311      	orrs	r1, r2
90019b88:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019b8c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019b90:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019b94:	b2ad      	uxth	r5, r5
90019b96:	d00d      	beq.n	90019bb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90019b98:	442b      	add	r3, r5
90019b9a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019b9e:	b29b      	uxth	r3, r3
90019ba0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019ba4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019ba8:	10db      	asrs	r3, r3, #3
90019baa:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019bae:	4313      	orrs	r3, r2
90019bb0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019bb4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019bb8:	00cb      	lsls	r3, r1, #3
90019bba:	064f      	lsls	r7, r1, #25
90019bbc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019bc0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019bc4:	ea43 0302 	orr.w	r3, r3, r2
90019bc8:	bf44      	itt	mi
90019bca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019bce:	b21b      	sxthmi	r3, r3
90019bd0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019bd4:	1b5b      	subs	r3, r3, r5
90019bd6:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90019bda:	4632      	mov	r2, r6
90019bdc:	e6f9      	b.n	900199d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019bde:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019be2:	4617      	mov	r7, r2
90019be4:	f102 0908 	add.w	r9, r2, #8
90019be8:	4666      	mov	r6, ip
90019bea:	6838      	ldr	r0, [r7, #0]
90019bec:	3708      	adds	r7, #8
90019bee:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019bf2:	46e0      	mov	r8, ip
90019bf4:	454f      	cmp	r7, r9
90019bf6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90019bfa:	46c4      	mov	ip, r8
90019bfc:	d1f5      	bne.n	90019bea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90019bfe:	6838      	ldr	r0, [r7, #0]
90019c00:	f8c8 0000 	str.w	r0, [r8]
90019c04:	88b9      	ldrh	r1, [r7, #4]
90019c06:	f8a8 1004 	strh.w	r1, [r8, #4]
90019c0a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019c0e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019c12:	d009      	beq.n	90019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90019c14:	7b51      	ldrb	r1, [r2, #13]
90019c16:	7992      	ldrb	r2, [r2, #6]
90019c18:	0149      	lsls	r1, r1, #5
90019c1a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019c1e:	4311      	orrs	r1, r2
90019c20:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019c24:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019c28:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019c2c:	d00e      	beq.n	90019c4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019c2e:	eba3 030e 	sub.w	r3, r3, lr
90019c32:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019c36:	b29b      	uxth	r3, r3
90019c38:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019c3c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019c40:	10db      	asrs	r3, r3, #3
90019c42:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019c46:	4313      	orrs	r3, r2
90019c48:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019c4c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019c50:	00cb      	lsls	r3, r1, #3
90019c52:	0648      	lsls	r0, r1, #25
90019c54:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019c58:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019c5c:	ea43 0302 	orr.w	r3, r3, r2
90019c60:	bf44      	itt	mi
90019c62:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019c66:	b21b      	sxthmi	r3, r3
90019c68:	1b5d      	subs	r5, r3, r5
90019c6a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019c6e:	e7b4      	b.n	90019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90019c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90019c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019c74:	461e      	mov	r6, r3
90019c76:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019c78:	4604      	mov	r4, r0
90019c7a:	4617      	mov	r7, r2
90019c7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019c80:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019c84:	f7eb fa5c 	bl	90005140 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019c88:	4605      	mov	r5, r0
90019c8a:	b918      	cbnz	r0, 90019c94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90019c8c:	6030      	str	r0, [r6, #0]
90019c8e:	4628      	mov	r0, r5
90019c90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019c94:	683b      	ldr	r3, [r7, #0]
90019c96:	4601      	mov	r1, r0
90019c98:	4638      	mov	r0, r7
90019c9a:	68db      	ldr	r3, [r3, #12]
90019c9c:	4798      	blx	r3
90019c9e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019ca2:	4602      	mov	r2, r0
90019ca4:	6030      	str	r0, [r6, #0]
90019ca6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019caa:	d213      	bcs.n	90019cd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90019cac:	4643      	mov	r3, r8
90019cae:	4639      	mov	r1, r7
90019cb0:	4620      	mov	r0, r4
90019cb2:	f7ff fe39 	bl	90019928 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019cb6:	6030      	str	r0, [r6, #0]
90019cb8:	6833      	ldr	r3, [r6, #0]
90019cba:	b143      	cbz	r3, 90019cce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90019cbc:	7b5a      	ldrb	r2, [r3, #13]
90019cbe:	7a9b      	ldrb	r3, [r3, #10]
90019cc0:	0052      	lsls	r2, r2, #1
90019cc2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019cc6:	4313      	orrs	r3, r2
90019cc8:	bf0c      	ite	eq
90019cca:	2301      	moveq	r3, #1
90019ccc:	2300      	movne	r3, #0
90019cce:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019cd2:	e7dc      	b.n	90019c8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90019cd4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019cd8:	b29b      	uxth	r3, r3
90019cda:	2b7f      	cmp	r3, #127	@ 0x7f
90019cdc:	d804      	bhi.n	90019ce8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90019cde:	4639      	mov	r1, r7
90019ce0:	4620      	mov	r0, r4
90019ce2:	f7ff fce7 	bl	900196b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019ce6:	e7e6      	b.n	90019cb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90019ce8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019cec:	2b00      	cmp	r3, #0
90019cee:	d0e3      	beq.n	90019cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019cf0:	f640 1302 	movw	r3, #2306	@ 0x902
90019cf4:	429d      	cmp	r5, r3
90019cf6:	d1df      	bne.n	90019cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019cf8:	4601      	mov	r1, r0
90019cfa:	4620      	mov	r0, r4
90019cfc:	f7ff fcab 	bl	90019656 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019d00:	e7d9      	b.n	90019cb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90019d02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90019d02:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90019d06:	461e      	mov	r6, r3
90019d08:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019d0a:	4604      	mov	r4, r0
90019d0c:	4617      	mov	r7, r2
90019d0e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019d12:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019d16:	f7eb fa13 	bl	90005140 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019d1a:	4605      	mov	r5, r0
90019d1c:	b918      	cbnz	r0, 90019d26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90019d1e:	6030      	str	r0, [r6, #0]
90019d20:	4628      	mov	r0, r5
90019d22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90019d26:	683b      	ldr	r3, [r7, #0]
90019d28:	4601      	mov	r1, r0
90019d2a:	4638      	mov	r0, r7
90019d2c:	f8d3 9008 	ldr.w	r9, [r3, #8]
90019d30:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90019d34:	47c8      	blx	r9
90019d36:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019d3a:	4602      	mov	r2, r0
90019d3c:	6030      	str	r0, [r6, #0]
90019d3e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019d42:	d213      	bcs.n	90019d6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90019d44:	4643      	mov	r3, r8
90019d46:	4639      	mov	r1, r7
90019d48:	4620      	mov	r0, r4
90019d4a:	f7ff fded 	bl	90019928 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019d4e:	6030      	str	r0, [r6, #0]
90019d50:	6833      	ldr	r3, [r6, #0]
90019d52:	b143      	cbz	r3, 90019d66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90019d54:	7b5a      	ldrb	r2, [r3, #13]
90019d56:	7a9b      	ldrb	r3, [r3, #10]
90019d58:	0052      	lsls	r2, r2, #1
90019d5a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019d5e:	4313      	orrs	r3, r2
90019d60:	bf0c      	ite	eq
90019d62:	2301      	moveq	r3, #1
90019d64:	2300      	movne	r3, #0
90019d66:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019d6a:	e7d9      	b.n	90019d20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90019d6c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019d70:	b29b      	uxth	r3, r3
90019d72:	2b7f      	cmp	r3, #127	@ 0x7f
90019d74:	d804      	bhi.n	90019d80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90019d76:	4639      	mov	r1, r7
90019d78:	4620      	mov	r0, r4
90019d7a:	f7ff fc9b 	bl	900196b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019d7e:	e7e6      	b.n	90019d4e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90019d80:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019d84:	2b00      	cmp	r3, #0
90019d86:	d0e3      	beq.n	90019d50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019d88:	f640 1302 	movw	r3, #2306	@ 0x902
90019d8c:	429d      	cmp	r5, r3
90019d8e:	d1df      	bne.n	90019d50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019d90:	4601      	mov	r1, r0
90019d92:	4620      	mov	r0, r4
90019d94:	f7ff fc5f 	bl	90019656 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019d98:	e7d9      	b.n	90019d4e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90019d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90019d9a:	b510      	push	{r4, lr}
90019d9c:	4604      	mov	r4, r0
90019d9e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90019da2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019da4:	b1e1      	cbz	r1, 90019de0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019da6:	2b0a      	cmp	r3, #10
90019da8:	d02d      	beq.n	90019e06 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019daa:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90019dac:	3901      	subs	r1, #1
90019dae:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90019db2:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90019db4:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90019db8:	1c51      	adds	r1, r2, #1
90019dba:	b289      	uxth	r1, r1
90019dbc:	2901      	cmp	r1, #1
90019dbe:	bf8a      	itet	hi
90019dc0:	f102 32ff 	addhi.w	r2, r2, #4294967295
90019dc4:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90019dc6:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90019dc8:	1c5a      	adds	r2, r3, #1
90019dca:	8722      	strh	r2, [r4, #56]	@ 0x38
90019dcc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019dce:	4413      	add	r3, r2
90019dd0:	b29b      	uxth	r3, r3
90019dd2:	2b09      	cmp	r3, #9
90019dd4:	bf88      	it	hi
90019dd6:	3b0a      	subhi	r3, #10
90019dd8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019ddc:	8458      	strh	r0, [r3, #34]	@ 0x22
90019dde:	e7de      	b.n	90019d9e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90019de0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019de2:	2b0a      	cmp	r3, #10
90019de4:	d00f      	beq.n	90019e06 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019de6:	4620      	mov	r0, r4
90019de8:	f7ff fbe3 	bl	900195b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90019dec:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019dee:	1c5a      	adds	r2, r3, #1
90019df0:	8722      	strh	r2, [r4, #56]	@ 0x38
90019df2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019df4:	4413      	add	r3, r2
90019df6:	b29b      	uxth	r3, r3
90019df8:	2b09      	cmp	r3, #9
90019dfa:	bf88      	it	hi
90019dfc:	3b0a      	subhi	r3, #10
90019dfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019e02:	8458      	strh	r0, [r3, #34]	@ 0x22
90019e04:	e7ec      	b.n	90019de0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019e06:	bd10      	pop	{r4, pc}

90019e08 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90019e08:	b538      	push	{r3, r4, r5, lr}
90019e0a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019e0c:	4604      	mov	r4, r0
90019e0e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90019e12:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90019e14:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90019e16:	3a01      	subs	r2, #1
90019e18:	8702      	strh	r2, [r0, #56]	@ 0x38
90019e1a:	1c5a      	adds	r2, r3, #1
90019e1c:	b292      	uxth	r2, r2
90019e1e:	2a09      	cmp	r2, #9
90019e20:	bf8a      	itet	hi
90019e22:	3b09      	subhi	r3, #9
90019e24:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90019e26:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90019e28:	f7ff ffb7 	bl	90019d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90019e2c:	8c23      	ldrh	r3, [r4, #32]
90019e2e:	2b01      	cmp	r3, #1
90019e30:	bf9c      	itt	ls
90019e32:	3301      	addls	r3, #1
90019e34:	8423      	strhls	r3, [r4, #32]
90019e36:	8be3      	ldrh	r3, [r4, #30]
90019e38:	b90b      	cbnz	r3, 90019e3e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90019e3a:	2302      	movs	r3, #2
90019e3c:	83e3      	strh	r3, [r4, #30]
90019e3e:	8be3      	ldrh	r3, [r4, #30]
90019e40:	4628      	mov	r0, r5
90019e42:	3b01      	subs	r3, #1
90019e44:	b29b      	uxth	r3, r3
90019e46:	83e3      	strh	r3, [r4, #30]
90019e48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019e4c:	8365      	strh	r5, [r4, #26]
90019e4e:	bd38      	pop	{r3, r4, r5, pc}

90019e50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90019e50:	428a      	cmp	r2, r1
90019e52:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019e56:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90019e58:	d932      	bls.n	90019ec0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90019e5a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90019e5c:	1a54      	subs	r4, r2, r1
90019e5e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90019e62:	19ee      	adds	r6, r5, r7
90019e64:	fa1f fe84 	uxth.w	lr, r4
90019e68:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90019e6c:	3e01      	subs	r6, #1
90019e6e:	b2b4      	uxth	r4, r6
90019e70:	eba4 090e 	sub.w	r9, r4, lr
90019e74:	fa1f f989 	uxth.w	r9, r9
90019e78:	2c09      	cmp	r4, #9
90019e7a:	4626      	mov	r6, r4
90019e7c:	bf88      	it	hi
90019e7e:	f1a4 060a 	subhi.w	r6, r4, #10
90019e82:	f1bc 0f00 	cmp.w	ip, #0
90019e86:	f104 34ff 	add.w	r4, r4, #4294967295
90019e8a:	bf08      	it	eq
90019e8c:	f04f 0c02 	moveq.w	ip, #2
90019e90:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90019e94:	b2a4      	uxth	r4, r4
90019e96:	f10c 3cff 	add.w	ip, ip, #4294967295
90019e9a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90019e9e:	454c      	cmp	r4, r9
90019ea0:	fa1f fc8c 	uxth.w	ip, ip
90019ea4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90019ea8:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90019eac:	d1e4      	bne.n	90019e78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90019eae:	eba5 050e 	sub.w	r5, r5, lr
90019eb2:	eb0e 0408 	add.w	r4, lr, r8
90019eb6:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90019eba:	8705      	strh	r5, [r0, #56]	@ 0x38
90019ebc:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90019ec0:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90019ec2:	250a      	movs	r5, #10
90019ec4:	1a64      	subs	r4, r4, r1
90019ec6:	4439      	add	r1, r7
90019ec8:	b289      	uxth	r1, r1
90019eca:	8704      	strh	r4, [r0, #56]	@ 0x38
90019ecc:	2909      	cmp	r1, #9
90019ece:	bf88      	it	hi
90019ed0:	390a      	subhi	r1, #10
90019ed2:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019ed4:	b18a      	cbz	r2, 90019efa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90019ed6:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90019ed8:	3a01      	subs	r2, #1
90019eda:	3101      	adds	r1, #1
90019edc:	b292      	uxth	r2, r2
90019ede:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90019ee2:	8701      	strh	r1, [r0, #56]	@ 0x38
90019ee4:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019ee6:	b901      	cbnz	r1, 90019eea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90019ee8:	86c5      	strh	r5, [r0, #54]	@ 0x36
90019eea:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019eec:	3901      	subs	r1, #1
90019eee:	b289      	uxth	r1, r1
90019ef0:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019ef2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90019ef6:	844c      	strh	r4, [r1, #34]	@ 0x22
90019ef8:	e7ec      	b.n	90019ed4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90019efa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019efe:	f7ff bf4c 	b.w	90019d9a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90019f02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90019f02:	b570      	push	{r4, r5, r6, lr}
90019f04:	2500      	movs	r5, #0
90019f06:	4295      	cmp	r5, r2
90019f08:	d011      	beq.n	90019f2e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90019f0a:	8bc4      	ldrh	r4, [r0, #30]
90019f0c:	f831 6b02 	ldrh.w	r6, [r1], #2
90019f10:	4414      	add	r4, r2
90019f12:	3c01      	subs	r4, #1
90019f14:	1b64      	subs	r4, r4, r5
90019f16:	b2a4      	uxth	r4, r4
90019f18:	2c01      	cmp	r4, #1
90019f1a:	bf88      	it	hi
90019f1c:	3c02      	subhi	r4, #2
90019f1e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90019f22:	8b64      	ldrh	r4, [r4, #26]
90019f24:	42b4      	cmp	r4, r6
90019f26:	d117      	bne.n	90019f58 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90019f28:	3501      	adds	r5, #1
90019f2a:	b2ad      	uxth	r5, r5
90019f2c:	e7eb      	b.n	90019f06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019f2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90019f32:	2400      	movs	r4, #0
90019f34:	4413      	add	r3, r2
90019f36:	b2a2      	uxth	r2, r4
90019f38:	429a      	cmp	r2, r3
90019f3a:	da0f      	bge.n	90019f5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019f3c:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90019f3e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90019f42:	3401      	adds	r4, #1
90019f44:	4432      	add	r2, r6
90019f46:	b292      	uxth	r2, r2
90019f48:	2a09      	cmp	r2, #9
90019f4a:	bf88      	it	hi
90019f4c:	3a0a      	subhi	r2, #10
90019f4e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90019f52:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90019f54:	42aa      	cmp	r2, r5
90019f56:	d0ee      	beq.n	90019f36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90019f58:	2000      	movs	r0, #0
90019f5a:	bd70      	pop	{r4, r5, r6, pc}
90019f5c:	2001      	movs	r0, #1
90019f5e:	e7fc      	b.n	90019f5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90019f60 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90019f60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019f64:	4605      	mov	r5, r0
90019f66:	4616      	mov	r6, r2
90019f68:	1c8c      	adds	r4, r1, #2
90019f6a:	8809      	ldrh	r1, [r1, #0]
90019f6c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90019f70:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90019f74:	42b3      	cmp	r3, r6
90019f76:	d124      	bne.n	90019fc2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90019f78:	f3c1 2903 	ubfx	r9, r1, #8, #4
90019f7c:	f3c1 1803 	ubfx	r8, r1, #4, #4
90019f80:	f001 070f 	and.w	r7, r1, #15
90019f84:	4652      	mov	r2, sl
90019f86:	f8cd 8000 	str.w	r8, [sp]
90019f8a:	464b      	mov	r3, r9
90019f8c:	4621      	mov	r1, r4
90019f8e:	4628      	mov	r0, r5
90019f90:	f7ff ffb7 	bl	90019f02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90019f94:	4683      	mov	fp, r0
90019f96:	b168      	cbz	r0, 90019fb4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90019f98:	eb0a 0109 	add.w	r1, sl, r9
90019f9c:	463a      	mov	r2, r7
90019f9e:	4628      	mov	r0, r5
90019fa0:	4441      	add	r1, r8
90019fa2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90019fa6:	4649      	mov	r1, r9
90019fa8:	f7ff ff52 	bl	90019e50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90019fac:	4658      	mov	r0, fp
90019fae:	b003      	add	sp, #12
90019fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019fb4:	eb07 010a 	add.w	r1, r7, sl
90019fb8:	4449      	add	r1, r9
90019fba:	4441      	add	r1, r8
90019fbc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90019fc0:	e7d2      	b.n	90019f68 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90019fc2:	f04f 0b00 	mov.w	fp, #0
90019fc6:	e7f1      	b.n	90019fac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90019fc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90019fc8:	b570      	push	{r4, r5, r6, lr}
90019fca:	8810      	ldrh	r0, [r2, #0]
90019fcc:	4298      	cmp	r0, r3
90019fce:	d817      	bhi.n	9001a000 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019fd0:	1e48      	subs	r0, r1, #1
90019fd2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90019fd6:	4298      	cmp	r0, r3
90019fd8:	d312      	bcc.n	9001a000 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019fda:	2400      	movs	r4, #0
90019fdc:	428c      	cmp	r4, r1
90019fde:	d20f      	bcs.n	9001a000 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019fe0:	1860      	adds	r0, r4, r1
90019fe2:	1040      	asrs	r0, r0, #1
90019fe4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90019fe8:	0085      	lsls	r5, r0, #2
90019fea:	42b3      	cmp	r3, r6
90019fec:	d902      	bls.n	90019ff4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019fee:	3001      	adds	r0, #1
90019ff0:	b284      	uxth	r4, r0
90019ff2:	e7f3      	b.n	90019fdc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019ff4:	d201      	bcs.n	90019ffa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90019ff6:	b281      	uxth	r1, r0
90019ff8:	e7f0      	b.n	90019fdc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019ffa:	442a      	add	r2, r5
90019ffc:	8850      	ldrh	r0, [r2, #2]
90019ffe:	bd70      	pop	{r4, r5, r6, pc}
9001a000:	2000      	movs	r0, #0
9001a002:	e7fc      	b.n	90019ffe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001a004 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001a004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a008:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001a00a:	4604      	mov	r4, r0
9001a00c:	260b      	movs	r6, #11
9001a00e:	886f      	ldrh	r7, [r5, #2]
9001a010:	087f      	lsrs	r7, r7, #1
9001a012:	3e01      	subs	r6, #1
9001a014:	d013      	beq.n	9001a03e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a016:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001a018:	462a      	mov	r2, r5
9001a01a:	4639      	mov	r1, r7
9001a01c:	4620      	mov	r0, r4
9001a01e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a022:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001a026:	4643      	mov	r3, r8
9001a028:	f7ff ffce 	bl	90019fc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001a02c:	b138      	cbz	r0, 9001a03e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a02e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001a032:	4642      	mov	r2, r8
9001a034:	4620      	mov	r0, r4
9001a036:	f7ff ff93 	bl	90019f60 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001a03a:	2800      	cmp	r0, #0
9001a03c:	d1e9      	bne.n	9001a012 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001a03e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001a044 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001a044:	b570      	push	{r4, r5, r6, lr}
9001a046:	694a      	ldr	r2, [r1, #20]
9001a048:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001a04a:	684b      	ldr	r3, [r1, #4]
9001a04c:	1b54      	subs	r4, r2, r5
9001a04e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001a050:	f000 8106 	beq.w	9001a260 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001a054:	1b9b      	subs	r3, r3, r6
9001a056:	d003      	beq.n	9001a060 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a058:	4363      	muls	r3, r4
9001a05a:	2210      	movs	r2, #16
9001a05c:	fb93 f3f2 	sdiv	r3, r3, r2
9001a060:	680c      	ldr	r4, [r1, #0]
9001a062:	698a      	ldr	r2, [r1, #24]
9001a064:	1b65      	subs	r5, r4, r5
9001a066:	f000 80fd 	beq.w	9001a264 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001a06a:	1b92      	subs	r2, r2, r6
9001a06c:	d003      	beq.n	9001a076 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a06e:	436a      	muls	r2, r5
9001a070:	2410      	movs	r4, #16
9001a072:	fb92 f2f4 	sdiv	r2, r2, r4
9001a076:	1a9b      	subs	r3, r3, r2
9001a078:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001a2a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001a07c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a080:	460a      	mov	r2, r1
9001a082:	ee07 3a90 	vmov	s15, r3
9001a086:	f100 040c 	add.w	r4, r0, #12
9001a08a:	4603      	mov	r3, r0
9001a08c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a090:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a094:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001a098:	eeb1 6a43 	vneg.f32	s12, s6
9001a09c:	edd2 7a02 	vldr	s15, [r2, #8]
9001a0a0:	3214      	adds	r2, #20
9001a0a2:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001a0a6:	ece3 6a01 	vstmia	r3!, {s13}
9001a0aa:	429c      	cmp	r4, r3
9001a0ac:	ed52 7a02 	vldr	s15, [r2, #-8]
9001a0b0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a0b4:	edc3 7a02 	vstr	s15, [r3, #8]
9001a0b8:	ed52 7a01 	vldr	s15, [r2, #-4]
9001a0bc:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a0c0:	edc3 7a05 	vstr	s15, [r3, #20]
9001a0c4:	d1ea      	bne.n	9001a09c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001a0c6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a0c8:	698b      	ldr	r3, [r1, #24]
9001a0ca:	edd0 4a02 	vldr	s9, [r0, #8]
9001a0ce:	1a9b      	subs	r3, r3, r2
9001a0d0:	edd0 3a00 	vldr	s7, [r0]
9001a0d4:	edd0 6a01 	vldr	s13, [r0, #4]
9001a0d8:	ee07 3a90 	vmov	s15, r3
9001a0dc:	684b      	ldr	r3, [r1, #4]
9001a0de:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001a0e2:	ed90 5a05 	vldr	s10, [r0, #20]
9001a0e6:	1a9b      	subs	r3, r3, r2
9001a0e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a0ec:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001a0f0:	ed90 2a03 	vldr	s4, [r0, #12]
9001a0f4:	ee07 3a10 	vmov	s14, r3
9001a0f8:	edd0 5a04 	vldr	s11, [r0, #16]
9001a0fc:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a100:	ed90 1a07 	vldr	s2, [r0, #28]
9001a104:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a108:	edd0 2a06 	vldr	s5, [r0, #24]
9001a10c:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001a110:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001a114:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a118:	ee32 5a45 	vsub.f32	s10, s4, s10
9001a11c:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a120:	ee67 7a83 	vmul.f32	s15, s15, s6
9001a124:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001a128:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a12a:	694a      	ldr	r2, [r1, #20]
9001a12c:	1b13      	subs	r3, r2, r4
9001a12e:	ee07 3a10 	vmov	s14, r3
9001a132:	680b      	ldr	r3, [r1, #0]
9001a134:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a138:	1b1b      	subs	r3, r3, r4
9001a13a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a13e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001a142:	ee07 3a10 	vmov	s14, r3
9001a146:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a14a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a14e:	eee6 4a87 	vfma.f32	s9, s13, s14
9001a152:	ee64 4a86 	vmul.f32	s9, s9, s12
9001a156:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001a15a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a15c:	698b      	ldr	r3, [r1, #24]
9001a15e:	1a9b      	subs	r3, r3, r2
9001a160:	ee06 3a90 	vmov	s13, r3
9001a164:	684b      	ldr	r3, [r1, #4]
9001a166:	1a9b      	subs	r3, r3, r2
9001a168:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a16c:	ee07 3a10 	vmov	s14, r3
9001a170:	ee66 6a84 	vmul.f32	s13, s13, s8
9001a174:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a178:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001a17c:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a180:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a184:	ee66 6a83 	vmul.f32	s13, s13, s6
9001a188:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001a18c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a18e:	694a      	ldr	r2, [r1, #20]
9001a190:	1b13      	subs	r3, r2, r4
9001a192:	ee07 3a10 	vmov	s14, r3
9001a196:	680b      	ldr	r3, [r1, #0]
9001a198:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a19c:	1b1b      	subs	r3, r3, r4
9001a19e:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a1a2:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001a1a6:	ee07 3a10 	vmov	s14, r3
9001a1aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a1ae:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a1b2:	eea5 5a87 	vfma.f32	s10, s11, s14
9001a1b6:	edd0 5a08 	vldr	s11, [r0, #32]
9001a1ba:	ee31 1a65 	vsub.f32	s2, s2, s11
9001a1be:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001a1c2:	ee25 5a06 	vmul.f32	s10, s10, s12
9001a1c6:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001a1ca:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a1cc:	698b      	ldr	r3, [r1, #24]
9001a1ce:	1a9b      	subs	r3, r3, r2
9001a1d0:	ee07 3a10 	vmov	s14, r3
9001a1d4:	684b      	ldr	r3, [r1, #4]
9001a1d6:	1a9b      	subs	r3, r3, r2
9001a1d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a1dc:	ee01 3a90 	vmov	s3, r3
9001a1e0:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a1e4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001a1e8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001a1ec:	ee61 1a84 	vmul.f32	s3, s3, s8
9001a1f0:	eea1 7a21 	vfma.f32	s14, s2, s3
9001a1f4:	ee27 7a03 	vmul.f32	s14, s14, s6
9001a1f8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a1fc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a1fe:	694a      	ldr	r2, [r1, #20]
9001a200:	1b13      	subs	r3, r2, r4
9001a202:	ee03 3a10 	vmov	s6, r3
9001a206:	680b      	ldr	r3, [r1, #0]
9001a208:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a20c:	1b1b      	subs	r3, r3, r4
9001a20e:	ee23 3a04 	vmul.f32	s6, s6, s8
9001a212:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001a216:	ee03 3a10 	vmov	s6, r3
9001a21a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a21e:	ee23 4a04 	vmul.f32	s8, s6, s8
9001a222:	eee1 5a04 	vfma.f32	s11, s2, s8
9001a226:	ee25 6a86 	vmul.f32	s12, s11, s12
9001a22a:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001a22e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001a232:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001a236:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001a23a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a23e:	dd13      	ble.n	9001a268 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001a240:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a244:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001a248:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a24a:	eee3 7a87 	vfma.f32	s15, s7, s14
9001a24e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a256:	dd15      	ble.n	9001a284 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001a258:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a25c:	6403      	str	r3, [r0, #64]	@ 0x40
9001a25e:	bd70      	pop	{r4, r5, r6, pc}
9001a260:	4623      	mov	r3, r4
9001a262:	e6fd      	b.n	9001a060 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a264:	462a      	mov	r2, r5
9001a266:	e706      	b.n	9001a076 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a268:	d502      	bpl.n	9001a270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001a26a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a26e:	e7e9      	b.n	9001a244 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001a270:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001a274:	eea3 2a85 	vfma.f32	s4, s7, s10
9001a278:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001a27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a280:	dade      	bge.n	9001a240 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001a282:	e7f2      	b.n	9001a26a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001a284:	d502      	bpl.n	9001a28c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001a286:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a28a:	e7e7      	b.n	9001a25c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001a28c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001a290:	eee3 4a86 	vfma.f32	s9, s7, s12
9001a294:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001a298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a29c:	dadc      	bge.n	9001a258 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001a29e:	e7f2      	b.n	9001a286 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001a2a0:	3d800000 	.word	0x3d800000

9001a2a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001a2a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a2a8:	2714      	movs	r7, #20
9001a2aa:	435f      	muls	r7, r3
9001a2ac:	eb02 0c07 	add.w	ip, r2, r7
9001a2b0:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001a2b4:	f115 0e0f 	adds.w	lr, r5, #15
9001a2b8:	f100 80a2 	bmi.w	9001a400 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001a2bc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001a2c0:	9c08      	ldr	r4, [sp, #32]
9001a2c2:	2614      	movs	r6, #20
9001a2c4:	f8c0 e014 	str.w	lr, [r0, #20]
9001a2c8:	4366      	muls	r6, r4
9001a2ca:	eb02 0806 	add.w	r8, r2, r6
9001a2ce:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001a2d2:	f115 040f 	adds.w	r4, r5, #15
9001a2d6:	f100 809f 	bmi.w	9001a418 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001a2da:	1124      	asrs	r4, r4, #4
9001a2dc:	eba4 040e 	sub.w	r4, r4, lr
9001a2e0:	6184      	str	r4, [r0, #24]
9001a2e2:	2c00      	cmp	r4, #0
9001a2e4:	f000 808a 	beq.w	9001a3fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001a2e8:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001a2ec:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001a2f0:	5995      	ldr	r5, [r2, r6]
9001a2f2:	eba4 0809 	sub.w	r8, r4, r9
9001a2f6:	59d4      	ldr	r4, [r2, r7]
9001a2f8:	eba5 0a04 	sub.w	sl, r5, r4
9001a2fc:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001a300:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001a304:	fb0e fe05 	mul.w	lr, lr, r5
9001a308:	fb0a ee19 	mls	lr, sl, r9, lr
9001a30c:	fb08 e404 	mla	r4, r8, r4, lr
9001a310:	3c01      	subs	r4, #1
9001a312:	19a4      	adds	r4, r4, r6
9001a314:	f100 808c 	bmi.w	9001a430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001a318:	fb94 fef6 	sdiv	lr, r4, r6
9001a31c:	fb06 441e 	mls	r4, r6, lr, r4
9001a320:	f8c0 e000 	str.w	lr, [r0]
9001a324:	6104      	str	r4, [r0, #16]
9001a326:	2d00      	cmp	r5, #0
9001a328:	f2c0 8095 	blt.w	9001a456 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001a32c:	fb95 f4f6 	sdiv	r4, r5, r6
9001a330:	fb06 5514 	mls	r5, r6, r4, r5
9001a334:	6044      	str	r4, [r0, #4]
9001a336:	6085      	str	r5, [r0, #8]
9001a338:	60c6      	str	r6, [r0, #12]
9001a33a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001a33e:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001a342:	6945      	ldr	r5, [r0, #20]
9001a344:	59d2      	ldr	r2, [r2, r7]
9001a346:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001a34a:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001a478 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001a34e:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a352:	ee07 4a10 	vmov	s14, r4
9001a356:	6804      	ldr	r4, [r0, #0]
9001a358:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001a35c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a360:	ee07 2a90 	vmov	s15, r2
9001a364:	ee27 7a26 	vmul.f32	s14, s14, s13
9001a368:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a36c:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a370:	edd3 6a00 	vldr	s13, [r3]
9001a374:	eee6 6a07 	vfma.f32	s13, s12, s14
9001a378:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001a37c:	eee6 6a27 	vfma.f32	s13, s12, s15
9001a380:	edc0 6a07 	vstr	s13, [r0, #28]
9001a384:	edd0 6a01 	vldr	s13, [r0, #4]
9001a388:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001a38c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a390:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a394:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a398:	ed80 6a08 	vstr	s12, [r0, #32]
9001a39c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001a39e:	6242      	str	r2, [r0, #36]	@ 0x24
9001a3a0:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001a3a4:	ed93 6a03 	vldr	s12, [r3, #12]
9001a3a8:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a3ac:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a3b0:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001a3b4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001a3b8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a3bc:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001a3c0:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a3c4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001a3c8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a3ca:	6302      	str	r2, [r0, #48]	@ 0x30
9001a3cc:	ed93 6a06 	vldr	s12, [r3, #24]
9001a3d0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001a3d4:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a3d8:	eeb0 7a46 	vmov.f32	s14, s12
9001a3dc:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001a3e0:	eea6 7a27 	vfma.f32	s14, s12, s15
9001a3e4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a3e8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001a3ec:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001a3f0:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a3f4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001a3f8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001a3fa:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a3fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a400:	2410      	movs	r4, #16
9001a402:	f1c5 0501 	rsb	r5, r5, #1
9001a406:	fb9e fef4 	sdiv	lr, lr, r4
9001a40a:	f015 050f 	ands.w	r5, r5, #15
9001a40e:	bf18      	it	ne
9001a410:	2501      	movne	r5, #1
9001a412:	ebae 0e05 	sub.w	lr, lr, r5
9001a416:	e753      	b.n	9001a2c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001a418:	f04f 0910 	mov.w	r9, #16
9001a41c:	f1c5 0501 	rsb	r5, r5, #1
9001a420:	fb94 f4f9 	sdiv	r4, r4, r9
9001a424:	f015 050f 	ands.w	r5, r5, #15
9001a428:	bf18      	it	ne
9001a42a:	2501      	movne	r5, #1
9001a42c:	1b64      	subs	r4, r4, r5
9001a42e:	e755      	b.n	9001a2dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001a430:	4264      	negs	r4, r4
9001a432:	fb94 fef6 	sdiv	lr, r4, r6
9001a436:	f1ce 0800 	rsb	r8, lr, #0
9001a43a:	fb06 441e 	mls	r4, r6, lr, r4
9001a43e:	f8c0 8000 	str.w	r8, [r0]
9001a442:	6104      	str	r4, [r0, #16]
9001a444:	2c00      	cmp	r4, #0
9001a446:	f43f af6e 	beq.w	9001a326 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001a44a:	ea6f 0e0e 	mvn.w	lr, lr
9001a44e:	1b34      	subs	r4, r6, r4
9001a450:	f8c0 e000 	str.w	lr, [r0]
9001a454:	e766      	b.n	9001a324 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001a456:	426d      	negs	r5, r5
9001a458:	fb95 f4f6 	sdiv	r4, r5, r6
9001a45c:	f1c4 0e00 	rsb	lr, r4, #0
9001a460:	fb06 5514 	mls	r5, r6, r4, r5
9001a464:	f8c0 e004 	str.w	lr, [r0, #4]
9001a468:	6085      	str	r5, [r0, #8]
9001a46a:	2d00      	cmp	r5, #0
9001a46c:	f43f af64 	beq.w	9001a338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001a470:	43e4      	mvns	r4, r4
9001a472:	1b75      	subs	r5, r6, r5
9001a474:	6044      	str	r4, [r0, #4]
9001a476:	e75e      	b.n	9001a336 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001a478:	3d800000 	.word	0x3d800000

9001a47c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001a47c:	4b01      	ldr	r3, [pc, #4]	@ (9001a484 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001a47e:	6018      	str	r0, [r3, #0]
9001a480:	4770      	bx	lr
9001a482:	bf00      	nop
9001a484:	240218ac 	.word	0x240218ac

9001a488 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001a488:	4b06      	ldr	r3, [pc, #24]	@ (9001a4a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001a48a:	881a      	ldrh	r2, [r3, #0]
9001a48c:	4282      	cmp	r2, r0
9001a48e:	d807      	bhi.n	9001a4a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001a490:	4b05      	ldr	r3, [pc, #20]	@ (9001a4a8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001a492:	881b      	ldrh	r3, [r3, #0]
9001a494:	4413      	add	r3, r2
9001a496:	4298      	cmp	r0, r3
9001a498:	bfac      	ite	ge
9001a49a:	2000      	movge	r0, #0
9001a49c:	2001      	movlt	r0, #1
9001a49e:	4770      	bx	lr
9001a4a0:	2000      	movs	r0, #0
9001a4a2:	4770      	bx	lr
9001a4a4:	240218cc 	.word	0x240218cc
9001a4a8:	240218d0 	.word	0x240218d0

9001a4ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001a4ac:	b508      	push	{r3, lr}
9001a4ae:	4601      	mov	r1, r0
9001a4b0:	f7ff ffea 	bl	9001a488 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001a4b4:	b118      	cbz	r0, 9001a4be <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001a4b6:	4b02      	ldr	r3, [pc, #8]	@ (9001a4c0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001a4b8:	681b      	ldr	r3, [r3, #0]
9001a4ba:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001a4be:	bd08      	pop	{r3, pc}
9001a4c0:	240218b0 	.word	0x240218b0

9001a4c4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001a4c4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a4c6:	4c24      	ldr	r4, [pc, #144]	@ (9001a558 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001a4c8:	6823      	ldr	r3, [r4, #0]
9001a4ca:	2b00      	cmp	r3, #0
9001a4cc:	d042      	beq.n	9001a554 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a4ce:	4a23      	ldr	r2, [pc, #140]	@ (9001a55c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001a4d0:	4d23      	ldr	r5, [pc, #140]	@ (9001a560 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001a4d2:	8811      	ldrh	r1, [r2, #0]
9001a4d4:	f8b5 c000 	ldrh.w	ip, [r5]
9001a4d8:	4822      	ldr	r0, [pc, #136]	@ (9001a564 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001a4da:	4461      	add	r1, ip
9001a4dc:	1c4a      	adds	r2, r1, #1
9001a4de:	008f      	lsls	r7, r1, #2
9001a4e0:	f022 0201 	bic.w	r2, r2, #1
9001a4e4:	19de      	adds	r6, r3, r7
9001a4e6:	0412      	lsls	r2, r2, #16
9001a4e8:	6006      	str	r6, [r0, #0]
9001a4ea:	4e1f      	ldr	r6, [pc, #124]	@ (9001a568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001a4ec:	0c12      	lsrs	r2, r2, #16
9001a4ee:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001a4f2:	19da      	adds	r2, r3, r7
9001a4f4:	6032      	str	r2, [r6, #0]
9001a4f6:	220e      	movs	r2, #14
9001a4f8:	fb02 f20c 	mul.w	r2, r2, ip
9001a4fc:	3203      	adds	r2, #3
9001a4fe:	f022 0203 	bic.w	r2, r2, #3
9001a502:	443a      	add	r2, r7
9001a504:	4f19      	ldr	r7, [pc, #100]	@ (9001a56c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001a506:	4413      	add	r3, r2
9001a508:	603b      	str	r3, [r7, #0]
9001a50a:	2300      	movs	r3, #0
9001a50c:	4f18      	ldr	r7, [pc, #96]	@ (9001a570 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001a50e:	469c      	mov	ip, r3
9001a510:	803b      	strh	r3, [r7, #0]
9001a512:	4f18      	ldr	r7, [pc, #96]	@ (9001a574 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001a514:	683f      	ldr	r7, [r7, #0]
9001a516:	1aba      	subs	r2, r7, r2
9001a518:	4f17      	ldr	r7, [pc, #92]	@ (9001a578 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001a51a:	603a      	str	r2, [r7, #0]
9001a51c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001a520:	4a16      	ldr	r2, [pc, #88]	@ (9001a57c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001a522:	8013      	strh	r3, [r2, #0]
9001a524:	428b      	cmp	r3, r1
9001a526:	d10d      	bne.n	9001a544 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001a528:	882d      	ldrh	r5, [r5, #0]
9001a52a:	2300      	movs	r3, #0
9001a52c:	6830      	ldr	r0, [r6, #0]
9001a52e:	240e      	movs	r4, #14
9001a530:	429d      	cmp	r5, r3
9001a532:	d90f      	bls.n	9001a554 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a534:	fb04 0203 	mla	r2, r4, r3, r0
9001a538:	3301      	adds	r3, #1
9001a53a:	7b11      	ldrb	r1, [r2, #12]
9001a53c:	f36f 1145 	bfc	r1, #5, #1
9001a540:	7311      	strb	r1, [r2, #12]
9001a542:	e7f5      	b.n	9001a530 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001a544:	6822      	ldr	r2, [r4, #0]
9001a546:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001a54a:	6802      	ldr	r2, [r0, #0]
9001a54c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001a550:	3301      	adds	r3, #1
9001a552:	e7e7      	b.n	9001a524 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001a554:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a556:	bf00      	nop
9001a558:	240218b0 	.word	0x240218b0
9001a55c:	240218cc 	.word	0x240218cc
9001a560:	240218d0 	.word	0x240218d0
9001a564:	240218c4 	.word	0x240218c4
9001a568:	240218b4 	.word	0x240218b4
9001a56c:	240218bc 	.word	0x240218bc
9001a570:	240218ce 	.word	0x240218ce
9001a574:	240218b8 	.word	0x240218b8
9001a578:	240218c8 	.word	0x240218c8
9001a57c:	240218c0 	.word	0x240218c0

9001a580 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001a580:	4b06      	ldr	r3, [pc, #24]	@ (9001a59c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001a582:	681b      	ldr	r3, [r3, #0]
9001a584:	b943      	cbnz	r3, 9001a598 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a586:	b139      	cbz	r1, 9001a598 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a588:	4b05      	ldr	r3, [pc, #20]	@ (9001a5a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001a58a:	801a      	strh	r2, [r3, #0]
9001a58c:	4b05      	ldr	r3, [pc, #20]	@ (9001a5a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001a58e:	6019      	str	r1, [r3, #0]
9001a590:	4b05      	ldr	r3, [pc, #20]	@ (9001a5a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001a592:	6018      	str	r0, [r3, #0]
9001a594:	f7ff bf96 	b.w	9001a4c4 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001a598:	4770      	bx	lr
9001a59a:	bf00      	nop
9001a59c:	240218bc 	.word	0x240218bc
9001a5a0:	240218d0 	.word	0x240218d0
9001a5a4:	240218b8 	.word	0x240218b8
9001a5a8:	240218b0 	.word	0x240218b0

9001a5ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001a5ac:	b470      	push	{r4, r5, r6}
9001a5ae:	4c07      	ldr	r4, [pc, #28]	@ (9001a5cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001a5b0:	4605      	mov	r5, r0
9001a5b2:	4610      	mov	r0, r2
9001a5b4:	9a03      	ldr	r2, [sp, #12]
9001a5b6:	6826      	ldr	r6, [r4, #0]
9001a5b8:	b936      	cbnz	r6, 9001a5c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001a5ba:	6025      	str	r5, [r4, #0]
9001a5bc:	4c04      	ldr	r4, [pc, #16]	@ (9001a5d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001a5be:	8021      	strh	r1, [r4, #0]
9001a5c0:	4619      	mov	r1, r3
9001a5c2:	bc70      	pop	{r4, r5, r6}
9001a5c4:	f7ff bfdc 	b.w	9001a580 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001a5c8:	bc70      	pop	{r4, r5, r6}
9001a5ca:	4770      	bx	lr
9001a5cc:	240218d4 	.word	0x240218d4
9001a5d0:	240218cc 	.word	0x240218cc

9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001a5d4:	4a12      	ldr	r2, [pc, #72]	@ (9001a620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001a5d6:	8803      	ldrh	r3, [r0, #0]
9001a5d8:	8812      	ldrh	r2, [r2, #0]
9001a5da:	4293      	cmp	r3, r2
9001a5dc:	d207      	bcs.n	9001a5ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001a5de:	4a11      	ldr	r2, [pc, #68]	@ (9001a624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001a5e0:	2114      	movs	r1, #20
9001a5e2:	6812      	ldr	r2, [r2, #0]
9001a5e4:	fb01 2303 	mla	r3, r1, r3, r2
9001a5e8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001a5ec:	4770      	bx	lr
9001a5ee:	490e      	ldr	r1, [pc, #56]	@ (9001a628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001a5f0:	8809      	ldrh	r1, [r1, #0]
9001a5f2:	4411      	add	r1, r2
9001a5f4:	428b      	cmp	r3, r1
9001a5f6:	da04      	bge.n	9001a602 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001a5f8:	1a9b      	subs	r3, r3, r2
9001a5fa:	4a0c      	ldr	r2, [pc, #48]	@ (9001a62c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001a5fc:	210e      	movs	r1, #14
9001a5fe:	6812      	ldr	r2, [r2, #0]
9001a600:	e7f0      	b.n	9001a5e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001a602:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a606:	4293      	cmp	r3, r2
9001a608:	d108      	bne.n	9001a61c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001a60a:	4b09      	ldr	r3, [pc, #36]	@ (9001a630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001a60c:	781b      	ldrb	r3, [r3, #0]
9001a60e:	b91b      	cbnz	r3, 9001a618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001a610:	4b08      	ldr	r3, [pc, #32]	@ (9001a634 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001a612:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a616:	4770      	bx	lr
9001a618:	4b07      	ldr	r3, [pc, #28]	@ (9001a638 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001a61a:	e7fa      	b.n	9001a612 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001a61c:	2000      	movs	r0, #0
9001a61e:	4770      	bx	lr
9001a620:	240218cc 	.word	0x240218cc
9001a624:	240218d4 	.word	0x240218d4
9001a628:	240218d0 	.word	0x240218d0
9001a62c:	240218b4 	.word	0x240218b4
9001a630:	2402183c 	.word	0x2402183c
9001a634:	2402183e 	.word	0x2402183e
9001a638:	24021840 	.word	0x24021840

9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001a63c:	4a12      	ldr	r2, [pc, #72]	@ (9001a688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001a63e:	8803      	ldrh	r3, [r0, #0]
9001a640:	8812      	ldrh	r2, [r2, #0]
9001a642:	4293      	cmp	r3, r2
9001a644:	d207      	bcs.n	9001a656 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001a646:	4a11      	ldr	r2, [pc, #68]	@ (9001a68c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001a648:	2114      	movs	r1, #20
9001a64a:	6812      	ldr	r2, [r2, #0]
9001a64c:	fb01 2303 	mla	r3, r1, r3, r2
9001a650:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001a654:	4770      	bx	lr
9001a656:	490e      	ldr	r1, [pc, #56]	@ (9001a690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001a658:	8809      	ldrh	r1, [r1, #0]
9001a65a:	4411      	add	r1, r2
9001a65c:	428b      	cmp	r3, r1
9001a65e:	da04      	bge.n	9001a66a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001a660:	1a9b      	subs	r3, r3, r2
9001a662:	4a0c      	ldr	r2, [pc, #48]	@ (9001a694 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001a664:	210e      	movs	r1, #14
9001a666:	6812      	ldr	r2, [r2, #0]
9001a668:	e7f0      	b.n	9001a64c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001a66a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a66e:	4293      	cmp	r3, r2
9001a670:	d108      	bne.n	9001a684 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001a672:	4b09      	ldr	r3, [pc, #36]	@ (9001a698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001a674:	781b      	ldrb	r3, [r3, #0]
9001a676:	b91b      	cbnz	r3, 9001a680 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001a678:	4b08      	ldr	r3, [pc, #32]	@ (9001a69c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001a67a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a67e:	4770      	bx	lr
9001a680:	4b07      	ldr	r3, [pc, #28]	@ (9001a6a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001a682:	e7fa      	b.n	9001a67a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001a684:	2000      	movs	r0, #0
9001a686:	4770      	bx	lr
9001a688:	240218cc 	.word	0x240218cc
9001a68c:	240218d4 	.word	0x240218d4
9001a690:	240218d0 	.word	0x240218d0
9001a694:	240218b4 	.word	0x240218b4
9001a698:	2402183c 	.word	0x2402183c
9001a69c:	24021840 	.word	0x24021840
9001a6a0:	2402183e 	.word	0x2402183e

9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001a6a4:	4a22      	ldr	r2, [pc, #136]	@ (9001a730 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001a6a6:	b530      	push	{r4, r5, lr}
9001a6a8:	880b      	ldrh	r3, [r1, #0]
9001a6aa:	8812      	ldrh	r2, [r2, #0]
9001a6ac:	4293      	cmp	r3, r2
9001a6ae:	d213      	bcs.n	9001a6d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001a6b0:	4a20      	ldr	r2, [pc, #128]	@ (9001a734 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001a6b2:	2114      	movs	r1, #20
9001a6b4:	6812      	ldr	r2, [r2, #0]
9001a6b6:	fb01 2303 	mla	r3, r1, r3, r2
9001a6ba:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001a6be:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001a6c2:	8a1a      	ldrh	r2, [r3, #16]
9001a6c4:	8a5b      	ldrh	r3, [r3, #18]
9001a6c6:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a6ca:	8004      	strh	r4, [r0, #0]
9001a6cc:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001a6d0:	8041      	strh	r1, [r0, #2]
9001a6d2:	8082      	strh	r2, [r0, #4]
9001a6d4:	80c3      	strh	r3, [r0, #6]
9001a6d6:	e024      	b.n	9001a722 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001a6d8:	4917      	ldr	r1, [pc, #92]	@ (9001a738 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001a6da:	8809      	ldrh	r1, [r1, #0]
9001a6dc:	4411      	add	r1, r2
9001a6de:	428b      	cmp	r3, r1
9001a6e0:	da10      	bge.n	9001a704 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001a6e2:	1a9b      	subs	r3, r3, r2
9001a6e4:	220e      	movs	r2, #14
9001a6e6:	4353      	muls	r3, r2
9001a6e8:	4a14      	ldr	r2, [pc, #80]	@ (9001a73c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001a6ea:	6811      	ldr	r1, [r2, #0]
9001a6ec:	18ca      	adds	r2, r1, r3
9001a6ee:	5ecd      	ldrsh	r5, [r1, r3]
9001a6f0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001a6f4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001a6f8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001a6fc:	8005      	strh	r5, [r0, #0]
9001a6fe:	8044      	strh	r4, [r0, #2]
9001a700:	8081      	strh	r1, [r0, #4]
9001a702:	e7e7      	b.n	9001a6d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001a704:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a708:	4293      	cmp	r3, r2
9001a70a:	d10b      	bne.n	9001a724 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001a70c:	4b0c      	ldr	r3, [pc, #48]	@ (9001a740 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001a70e:	f9b3 1000 	ldrsh.w	r1, [r3]
9001a712:	4b0c      	ldr	r3, [pc, #48]	@ (9001a744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001a714:	8081      	strh	r1, [r0, #4]
9001a716:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a71a:	2300      	movs	r3, #0
9001a71c:	80c2      	strh	r2, [r0, #6]
9001a71e:	8003      	strh	r3, [r0, #0]
9001a720:	8043      	strh	r3, [r0, #2]
9001a722:	bd30      	pop	{r4, r5, pc}
9001a724:	2300      	movs	r3, #0
9001a726:	8003      	strh	r3, [r0, #0]
9001a728:	8043      	strh	r3, [r0, #2]
9001a72a:	8083      	strh	r3, [r0, #4]
9001a72c:	e7d2      	b.n	9001a6d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001a72e:	bf00      	nop
9001a730:	240218cc 	.word	0x240218cc
9001a734:	240218d4 	.word	0x240218d4
9001a738:	240218d0 	.word	0x240218d0
9001a73c:	240218b4 	.word	0x240218b4
9001a740:	24021838 	.word	0x24021838
9001a744:	2402183a 	.word	0x2402183a

9001a748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001a748:	4a17      	ldr	r2, [pc, #92]	@ (9001a7a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001a74a:	8803      	ldrh	r3, [r0, #0]
9001a74c:	8812      	ldrh	r2, [r2, #0]
9001a74e:	4293      	cmp	r3, r2
9001a750:	d213      	bcs.n	9001a77a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001a752:	4a16      	ldr	r2, [pc, #88]	@ (9001a7ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001a754:	2114      	movs	r1, #20
9001a756:	6812      	ldr	r2, [r2, #0]
9001a758:	fb01 2303 	mla	r3, r1, r3, r2
9001a75c:	8a1a      	ldrh	r2, [r3, #16]
9001a75e:	8919      	ldrh	r1, [r3, #8]
9001a760:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a764:	428a      	cmp	r2, r1
9001a766:	db1d      	blt.n	9001a7a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a768:	8a58      	ldrh	r0, [r3, #18]
9001a76a:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001a76e:	895b      	ldrh	r3, [r3, #10]
9001a770:	4298      	cmp	r0, r3
9001a772:	bfac      	ite	ge
9001a774:	2000      	movge	r0, #0
9001a776:	2001      	movlt	r0, #1
9001a778:	4770      	bx	lr
9001a77a:	490d      	ldr	r1, [pc, #52]	@ (9001a7b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001a77c:	8809      	ldrh	r1, [r1, #0]
9001a77e:	4411      	add	r1, r2
9001a780:	428b      	cmp	r3, r1
9001a782:	da0d      	bge.n	9001a7a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001a784:	1a9b      	subs	r3, r3, r2
9001a786:	4a0b      	ldr	r2, [pc, #44]	@ (9001a7b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001a788:	210e      	movs	r1, #14
9001a78a:	6812      	ldr	r2, [r2, #0]
9001a78c:	fb01 2303 	mla	r3, r1, r3, r2
9001a790:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001a794:	891a      	ldrh	r2, [r3, #8]
9001a796:	4291      	cmp	r1, r2
9001a798:	db04      	blt.n	9001a7a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a79a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001a79e:	e7e6      	b.n	9001a76e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001a7a0:	2000      	movs	r0, #0
9001a7a2:	4770      	bx	lr
9001a7a4:	2001      	movs	r0, #1
9001a7a6:	4770      	bx	lr
9001a7a8:	240218cc 	.word	0x240218cc
9001a7ac:	240218d4 	.word	0x240218d4
9001a7b0:	240218d0 	.word	0x240218d0
9001a7b4:	240218b4 	.word	0x240218b4

9001a7b8 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001a7b8:	4a12      	ldr	r2, [pc, #72]	@ (9001a804 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001a7ba:	8803      	ldrh	r3, [r0, #0]
9001a7bc:	8811      	ldrh	r1, [r2, #0]
9001a7be:	428b      	cmp	r3, r1
9001a7c0:	d20b      	bcs.n	9001a7da <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001a7c2:	4a11      	ldr	r2, [pc, #68]	@ (9001a808 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a7c4:	6812      	ldr	r2, [r2, #0]
9001a7c6:	b112      	cbz	r2, 9001a7ce <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001a7c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a7cc:	b9c0      	cbnz	r0, 9001a800 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001a7ce:	4a0f      	ldr	r2, [pc, #60]	@ (9001a80c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001a7d0:	6811      	ldr	r1, [r2, #0]
9001a7d2:	2214      	movs	r2, #20
9001a7d4:	4353      	muls	r3, r2
9001a7d6:	58c8      	ldr	r0, [r1, r3]
9001a7d8:	4770      	bx	lr
9001a7da:	4a0d      	ldr	r2, [pc, #52]	@ (9001a810 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001a7dc:	8812      	ldrh	r2, [r2, #0]
9001a7de:	440a      	add	r2, r1
9001a7e0:	4293      	cmp	r3, r2
9001a7e2:	da04      	bge.n	9001a7ee <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001a7e4:	4a08      	ldr	r2, [pc, #32]	@ (9001a808 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a7e6:	6812      	ldr	r2, [r2, #0]
9001a7e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a7ec:	4770      	bx	lr
9001a7ee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a7f2:	4293      	cmp	r3, r2
9001a7f4:	d103      	bne.n	9001a7fe <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001a7f6:	4b07      	ldr	r3, [pc, #28]	@ (9001a814 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001a7f8:	681b      	ldr	r3, [r3, #0]
9001a7fa:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001a7fc:	4770      	bx	lr
9001a7fe:	2000      	movs	r0, #0
9001a800:	4770      	bx	lr
9001a802:	bf00      	nop
9001a804:	240218cc 	.word	0x240218cc
9001a808:	240218b0 	.word	0x240218b0
9001a80c:	240218d4 	.word	0x240218d4
9001a810:	240218d0 	.word	0x240218d0
9001a814:	24021844 	.word	0x24021844

9001a818 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001a818:	4b24      	ldr	r3, [pc, #144]	@ (9001a8ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001a81a:	8802      	ldrh	r2, [r0, #0]
9001a81c:	8818      	ldrh	r0, [r3, #0]
9001a81e:	4282      	cmp	r2, r0
9001a820:	d221      	bcs.n	9001a866 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001a822:	4b23      	ldr	r3, [pc, #140]	@ (9001a8b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001a824:	6819      	ldr	r1, [r3, #0]
9001a826:	2314      	movs	r3, #20
9001a828:	fb03 1302 	mla	r3, r3, r2, r1
9001a82c:	6858      	ldr	r0, [r3, #4]
9001a82e:	2800      	cmp	r0, #0
9001a830:	d03a      	beq.n	9001a8a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a832:	4920      	ldr	r1, [pc, #128]	@ (9001a8b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a834:	6809      	ldr	r1, [r1, #0]
9001a836:	2900      	cmp	r1, #0
9001a838:	d036      	beq.n	9001a8a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a83a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001a83e:	2900      	cmp	r1, #0
9001a840:	d032      	beq.n	9001a8a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a842:	891a      	ldrh	r2, [r3, #8]
9001a844:	8958      	ldrh	r0, [r3, #10]
9001a846:	4350      	muls	r0, r2
9001a848:	7c5a      	ldrb	r2, [r3, #17]
9001a84a:	7cdb      	ldrb	r3, [r3, #19]
9001a84c:	0952      	lsrs	r2, r2, #5
9001a84e:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a852:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001a856:	2b0b      	cmp	r3, #11
9001a858:	bf18      	it	ne
9001a85a:	0040      	lslne	r0, r0, #1
9001a85c:	3003      	adds	r0, #3
9001a85e:	f020 0003 	bic.w	r0, r0, #3
9001a862:	4408      	add	r0, r1
9001a864:	4770      	bx	lr
9001a866:	4b14      	ldr	r3, [pc, #80]	@ (9001a8b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001a868:	881b      	ldrh	r3, [r3, #0]
9001a86a:	4403      	add	r3, r0
9001a86c:	429a      	cmp	r2, r3
9001a86e:	da1a      	bge.n	9001a8a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a870:	4b12      	ldr	r3, [pc, #72]	@ (9001a8bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001a872:	1a10      	subs	r0, r2, r0
9001a874:	210e      	movs	r1, #14
9001a876:	681b      	ldr	r3, [r3, #0]
9001a878:	fb01 3000 	mla	r0, r1, r0, r3
9001a87c:	7b03      	ldrb	r3, [r0, #12]
9001a87e:	f003 031f 	and.w	r3, r3, #31
9001a882:	2b0b      	cmp	r3, #11
9001a884:	d10b      	bne.n	9001a89e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001a886:	8903      	ldrh	r3, [r0, #8]
9001a888:	8940      	ldrh	r0, [r0, #10]
9001a88a:	4358      	muls	r0, r3
9001a88c:	4b09      	ldr	r3, [pc, #36]	@ (9001a8b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a88e:	3003      	adds	r0, #3
9001a890:	6819      	ldr	r1, [r3, #0]
9001a892:	f020 0303 	bic.w	r3, r0, #3
9001a896:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001a89a:	4418      	add	r0, r3
9001a89c:	4770      	bx	lr
9001a89e:	2b0d      	cmp	r3, #13
9001a8a0:	d101      	bne.n	9001a8a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a8a2:	300d      	adds	r0, #13
9001a8a4:	4770      	bx	lr
9001a8a6:	2000      	movs	r0, #0
9001a8a8:	4770      	bx	lr
9001a8aa:	bf00      	nop
9001a8ac:	240218cc 	.word	0x240218cc
9001a8b0:	240218d4 	.word	0x240218d4
9001a8b4:	240218b0 	.word	0x240218b0
9001a8b8:	240218d0 	.word	0x240218d0
9001a8bc:	240218b4 	.word	0x240218b4

9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001a8c0:	4b1f      	ldr	r3, [pc, #124]	@ (9001a940 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001a8c2:	b510      	push	{r4, lr}
9001a8c4:	8802      	ldrh	r2, [r0, #0]
9001a8c6:	881b      	ldrh	r3, [r3, #0]
9001a8c8:	429a      	cmp	r2, r3
9001a8ca:	d21a      	bcs.n	9001a902 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001a8cc:	4b1d      	ldr	r3, [pc, #116]	@ (9001a944 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001a8ce:	2114      	movs	r1, #20
9001a8d0:	681b      	ldr	r3, [r3, #0]
9001a8d2:	fb01 3102 	mla	r1, r1, r2, r3
9001a8d6:	7c4b      	ldrb	r3, [r1, #17]
9001a8d8:	0958      	lsrs	r0, r3, #5
9001a8da:	7ccb      	ldrb	r3, [r1, #19]
9001a8dc:	491a      	ldr	r1, [pc, #104]	@ (9001a948 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001a8de:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a8e2:	6809      	ldr	r1, [r1, #0]
9001a8e4:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001a8e8:	b2d8      	uxtb	r0, r3
9001a8ea:	b149      	cbz	r1, 9001a900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a8ec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001a8f0:	b132      	cbz	r2, 9001a900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a8f2:	2b0e      	cmp	r3, #14
9001a8f4:	d021      	beq.n	9001a93a <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a8f6:	280f      	cmp	r0, #15
9001a8f8:	d01d      	beq.n	9001a936 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001a8fa:	2810      	cmp	r0, #16
9001a8fc:	bf08      	it	eq
9001a8fe:	2002      	moveq	r0, #2
9001a900:	bd10      	pop	{r4, pc}
9001a902:	4912      	ldr	r1, [pc, #72]	@ (9001a94c <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001a904:	8809      	ldrh	r1, [r1, #0]
9001a906:	4419      	add	r1, r3
9001a908:	428a      	cmp	r2, r1
9001a90a:	da09      	bge.n	9001a920 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001a90c:	1ad3      	subs	r3, r2, r3
9001a90e:	4a10      	ldr	r2, [pc, #64]	@ (9001a950 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001a910:	210e      	movs	r1, #14
9001a912:	6812      	ldr	r2, [r2, #0]
9001a914:	fb01 2303 	mla	r3, r1, r3, r2
9001a918:	7b18      	ldrb	r0, [r3, #12]
9001a91a:	f000 001f 	and.w	r0, r0, #31
9001a91e:	e7ef      	b.n	9001a900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a920:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001a924:	429a      	cmp	r2, r3
9001a926:	d108      	bne.n	9001a93a <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a928:	f7f6 fdee 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
9001a92c:	6803      	ldr	r3, [r0, #0]
9001a92e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a932:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a934:	4718      	bx	r3
9001a936:	2001      	movs	r0, #1
9001a938:	e7e2      	b.n	9001a900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a93a:	2000      	movs	r0, #0
9001a93c:	e7e0      	b.n	9001a900 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a93e:	bf00      	nop
9001a940:	240218cc 	.word	0x240218cc
9001a944:	240218d4 	.word	0x240218d4
9001a948:	240218b0 	.word	0x240218b0
9001a94c:	240218d0 	.word	0x240218d0
9001a950:	240218b4 	.word	0x240218b4

9001a954 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001a954:	2010      	movs	r0, #16
9001a956:	4770      	bx	lr

9001a958 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001a958:	4b02      	ldr	r3, [pc, #8]	@ (9001a964 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001a95a:	8818      	ldrh	r0, [r3, #0]
9001a95c:	0040      	lsls	r0, r0, #1
9001a95e:	b280      	uxth	r0, r0
9001a960:	4770      	bx	lr
9001a962:	bf00      	nop
9001a964:	2402183e 	.word	0x2402183e

9001a968 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001a968:	2bff      	cmp	r3, #255	@ 0xff
9001a96a:	d05e      	beq.n	9001aa2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001a96c:	2a0b      	cmp	r2, #11
9001a96e:	d058      	beq.n	9001aa22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a970:	d80e      	bhi.n	9001a990 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001a972:	2a03      	cmp	r2, #3
9001a974:	d04d      	beq.n	9001aa12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001a976:	d804      	bhi.n	9001a982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001a978:	2a01      	cmp	r2, #1
9001a97a:	d04c      	beq.n	9001aa16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001a97c:	d94d      	bls.n	9001aa1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001a97e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001a980:	e031      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a982:	2a09      	cmp	r2, #9
9001a984:	d04d      	beq.n	9001aa22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a986:	d84a      	bhi.n	9001aa1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a988:	2a08      	cmp	r2, #8
9001a98a:	d048      	beq.n	9001aa1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a98c:	2300      	movs	r3, #0
9001a98e:	e02a      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a990:	2a2f      	cmp	r2, #47	@ 0x2f
9001a992:	d02c      	beq.n	9001a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001a994:	d811      	bhi.n	9001a9ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001a996:	2a2d      	cmp	r2, #45	@ 0x2d
9001a998:	d018      	beq.n	9001a9cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001a99a:	d831      	bhi.n	9001aa00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001a99c:	2a2c      	cmp	r2, #44	@ 0x2c
9001a99e:	d1f5      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9a0:	684a      	ldr	r2, [r1, #4]
9001a9a2:	7813      	ldrb	r3, [r2, #0]
9001a9a4:	7852      	ldrb	r2, [r2, #1]
9001a9a6:	2a00      	cmp	r2, #0
9001a9a8:	d1f0      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9aa:	2b01      	cmp	r3, #1
9001a9ac:	d01d      	beq.n	9001a9ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001a9ae:	2b00      	cmp	r3, #0
9001a9b0:	d02d      	beq.n	9001aa0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001a9b2:	2b02      	cmp	r3, #2
9001a9b4:	d1ea      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9b6:	68c3      	ldr	r3, [r0, #12]
9001a9b8:	e015      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a9ba:	2a31      	cmp	r2, #49	@ 0x31
9001a9bc:	d004      	beq.n	9001a9c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001a9be:	d332      	bcc.n	9001aa26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a9c0:	2a32      	cmp	r2, #50	@ 0x32
9001a9c2:	d030      	beq.n	9001aa26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a9c4:	2a33      	cmp	r2, #51	@ 0x33
9001a9c6:	d1e1      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9c8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001a9ca:	e00c      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a9cc:	684a      	ldr	r2, [r1, #4]
9001a9ce:	7813      	ldrb	r3, [r2, #0]
9001a9d0:	7852      	ldrb	r2, [r2, #1]
9001a9d2:	2a00      	cmp	r2, #0
9001a9d4:	d1da      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9d6:	2b01      	cmp	r3, #1
9001a9d8:	d004      	beq.n	9001a9e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001a9da:	d30f      	bcc.n	9001a9fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001a9dc:	2b02      	cmp	r3, #2
9001a9de:	d1d5      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9e0:	6943      	ldr	r3, [r0, #20]
9001a9e2:	e000      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a9e4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001a9e6:	4618      	mov	r0, r3
9001a9e8:	4770      	bx	lr
9001a9ea:	69c3      	ldr	r3, [r0, #28]
9001a9ec:	e7fb      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a9ee:	684b      	ldr	r3, [r1, #4]
9001a9f0:	781a      	ldrb	r2, [r3, #0]
9001a9f2:	785b      	ldrb	r3, [r3, #1]
9001a9f4:	2b00      	cmp	r3, #0
9001a9f6:	d1c9      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a9f8:	2a00      	cmp	r2, #0
9001a9fa:	d1f4      	bne.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a9fc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001a9fe:	e7f2      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa00:	684b      	ldr	r3, [r1, #4]
9001aa02:	781a      	ldrb	r2, [r3, #0]
9001aa04:	785b      	ldrb	r3, [r3, #1]
9001aa06:	2b00      	cmp	r3, #0
9001aa08:	d1c0      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa0a:	2a00      	cmp	r2, #0
9001aa0c:	d1eb      	bne.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa0e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001aa10:	e7e9      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa12:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001aa14:	e7e7      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa16:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001aa18:	e7e5      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa1a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001aa1c:	e7e3      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa1e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001aa20:	e7e1      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa22:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001aa24:	e7df      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa26:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001aa28:	e7dd      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa2a:	2a0b      	cmp	r2, #11
9001aa2c:	d059      	beq.n	9001aae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001aa2e:	d80e      	bhi.n	9001aa4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001aa30:	2a03      	cmp	r2, #3
9001aa32:	d050      	beq.n	9001aad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001aa34:	d804      	bhi.n	9001aa40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001aa36:	2a01      	cmp	r2, #1
9001aa38:	d04f      	beq.n	9001aada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001aa3a:	d950      	bls.n	9001aade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001aa3c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001aa3e:	e7d2      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa40:	2a09      	cmp	r2, #9
9001aa42:	d04e      	beq.n	9001aae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001aa44:	d801      	bhi.n	9001aa4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001aa46:	2a08      	cmp	r2, #8
9001aa48:	d1a0      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa4a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001aa4c:	e7cb      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa4e:	2a2f      	cmp	r2, #47	@ 0x2f
9001aa50:	d02d      	beq.n	9001aaae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001aa52:	d811      	bhi.n	9001aa78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001aa54:	2a2d      	cmp	r2, #45	@ 0x2d
9001aa56:	d018      	beq.n	9001aa8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001aa58:	d833      	bhi.n	9001aac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001aa5a:	2a2c      	cmp	r2, #44	@ 0x2c
9001aa5c:	d196      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa5e:	684a      	ldr	r2, [r1, #4]
9001aa60:	7813      	ldrb	r3, [r2, #0]
9001aa62:	7852      	ldrb	r2, [r2, #1]
9001aa64:	2a00      	cmp	r2, #0
9001aa66:	d191      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa68:	2b01      	cmp	r3, #1
9001aa6a:	d01e      	beq.n	9001aaaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001aa6c:	2b00      	cmp	r3, #0
9001aa6e:	d030      	beq.n	9001aad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001aa70:	2b02      	cmp	r3, #2
9001aa72:	d18b      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa74:	6903      	ldr	r3, [r0, #16]
9001aa76:	e7b6      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa78:	2a31      	cmp	r2, #49	@ 0x31
9001aa7a:	d004      	beq.n	9001aa86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001aa7c:	d333      	bcc.n	9001aae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001aa7e:	2a32      	cmp	r2, #50	@ 0x32
9001aa80:	d031      	beq.n	9001aae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001aa82:	2a33      	cmp	r2, #51	@ 0x33
9001aa84:	d182      	bne.n	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa86:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001aa88:	e7ad      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aa8a:	684a      	ldr	r2, [r1, #4]
9001aa8c:	7813      	ldrb	r3, [r2, #0]
9001aa8e:	7852      	ldrb	r2, [r2, #1]
9001aa90:	2a00      	cmp	r2, #0
9001aa92:	f47f af7b 	bne.w	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aa96:	2b01      	cmp	r3, #1
9001aa98:	d005      	beq.n	9001aaa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001aa9a:	d310      	bcc.n	9001aabe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001aa9c:	2b02      	cmp	r3, #2
9001aa9e:	f47f af75 	bne.w	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aaa2:	6983      	ldr	r3, [r0, #24]
9001aaa4:	e79f      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aaa6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001aaa8:	e79d      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aaaa:	6a03      	ldr	r3, [r0, #32]
9001aaac:	e79b      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aaae:	684b      	ldr	r3, [r1, #4]
9001aab0:	781a      	ldrb	r2, [r3, #0]
9001aab2:	785b      	ldrb	r3, [r3, #1]
9001aab4:	2b00      	cmp	r3, #0
9001aab6:	f47f af69 	bne.w	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aaba:	2a00      	cmp	r2, #0
9001aabc:	d193      	bne.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aabe:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001aac0:	e791      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aac2:	684b      	ldr	r3, [r1, #4]
9001aac4:	781a      	ldrb	r2, [r3, #0]
9001aac6:	785b      	ldrb	r3, [r3, #1]
9001aac8:	2b00      	cmp	r3, #0
9001aaca:	f47f af5f 	bne.w	9001a98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aace:	2a00      	cmp	r2, #0
9001aad0:	d189      	bne.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aad2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001aad4:	e787      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aad6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001aad8:	e785      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aada:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001aadc:	e783      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aade:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001aae0:	e781      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aae2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001aae4:	e77f      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aae6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001aae8:	e77d      	b.n	9001a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001aaea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aaea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aaee:	b087      	sub	sp, #28
9001aaf0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001aaf2:	9205      	str	r2, [sp, #20]
9001aaf4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001aaf8:	9101      	str	r1, [sp, #4]
9001aafa:	9202      	str	r2, [sp, #8]
9001aafc:	6841      	ldr	r1, [r0, #4]
9001aafe:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001ab02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ab06:	fb01 2404 	mla	r4, r1, r4, r2
9001ab0a:	6802      	ldr	r2, [r0, #0]
9001ab0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ab10:	f8de 2000 	ldr.w	r2, [lr]
9001ab14:	9203      	str	r2, [sp, #12]
9001ab16:	f8de 2004 	ldr.w	r2, [lr, #4]
9001ab1a:	3204      	adds	r2, #4
9001ab1c:	9204      	str	r2, [sp, #16]
9001ab1e:	9a02      	ldr	r2, [sp, #8]
9001ab20:	43d6      	mvns	r6, r2
9001ab22:	b2f6      	uxtb	r6, r6
9001ab24:	9a01      	ldr	r2, [sp, #4]
9001ab26:	2a00      	cmp	r2, #0
9001ab28:	dc03      	bgt.n	9001ab32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001ab2a:	9a05      	ldr	r2, [sp, #20]
9001ab2c:	2a00      	cmp	r2, #0
9001ab2e:	f340 8129 	ble.w	9001ad84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001ab32:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ab34:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001ab38:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ab3c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ab3e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001ab42:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ab46:	2b00      	cmp	r3, #0
9001ab48:	dd0e      	ble.n	9001ab68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ab4a:	1408      	asrs	r0, r1, #16
9001ab4c:	d405      	bmi.n	9001ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ab4e:	4560      	cmp	r0, ip
9001ab50:	da03      	bge.n	9001ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ab52:	1410      	asrs	r0, r2, #16
9001ab54:	d401      	bmi.n	9001ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ab56:	42b8      	cmp	r0, r7
9001ab58:	db07      	blt.n	9001ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ab5a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ab5c:	3b01      	subs	r3, #1
9001ab5e:	3402      	adds	r4, #2
9001ab60:	4401      	add	r1, r0
9001ab62:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ab64:	4402      	add	r2, r0
9001ab66:	e7ee      	b.n	9001ab46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001ab68:	d071      	beq.n	9001ac4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ab6a:	1e58      	subs	r0, r3, #1
9001ab6c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ab6e:	fb05 1500 	mla	r5, r5, r0, r1
9001ab72:	142d      	asrs	r5, r5, #16
9001ab74:	d45f      	bmi.n	9001ac36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ab76:	4565      	cmp	r5, ip
9001ab78:	da5d      	bge.n	9001ac36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ab7a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ab7c:	fb05 2000 	mla	r0, r5, r0, r2
9001ab80:	1400      	asrs	r0, r0, #16
9001ab82:	d458      	bmi.n	9001ac36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ab84:	42b8      	cmp	r0, r7
9001ab86:	da56      	bge.n	9001ac36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ab88:	4699      	mov	r9, r3
9001ab8a:	46a2      	mov	sl, r4
9001ab8c:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001ab90:	f1b9 0f00 	cmp.w	r9, #0
9001ab94:	dd57      	ble.n	9001ac46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001ab96:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001ab9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ab9e:	9803      	ldr	r0, [sp, #12]
9001aba0:	140d      	asrs	r5, r1, #16
9001aba2:	f109 39ff 	add.w	r9, r9, #4294967295
9001aba6:	fb07 000c 	mla	r0, r7, ip, r0
9001abaa:	5d40      	ldrb	r0, [r0, r5]
9001abac:	9d04      	ldr	r5, [sp, #16]
9001abae:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001abb2:	f8ba 5000 	ldrh.w	r5, [sl]
9001abb6:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001abba:	122f      	asrs	r7, r5, #8
9001abbc:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001abc0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001abc4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001abc8:	00ed      	lsls	r5, r5, #3
9001abca:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001abce:	fb17 f706 	smulbb	r7, r7, r6
9001abd2:	b2ed      	uxtb	r5, r5
9001abd4:	fb18 f806 	smulbb	r8, r8, r6
9001abd8:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001abdc:	10c7      	asrs	r7, r0, #3
9001abde:	fb15 f506 	smulbb	r5, r5, r6
9001abe2:	00c0      	lsls	r0, r0, #3
9001abe4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001abe8:	fa1f fc8c 	uxth.w	ip, ip
9001abec:	b2c0      	uxtb	r0, r0
9001abee:	fb07 870b 	mla	r7, r7, fp, r8
9001abf2:	fb00 500b 	mla	r0, r0, fp, r5
9001abf6:	f10c 0501 	add.w	r5, ip, #1
9001abfa:	b2bf      	uxth	r7, r7
9001abfc:	b280      	uxth	r0, r0
9001abfe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ac02:	f107 0801 	add.w	r8, r7, #1
9001ac06:	1c45      	adds	r5, r0, #1
9001ac08:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001ac0c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ac10:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ac14:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ac16:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ac1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ac1e:	4401      	add	r1, r0
9001ac20:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001ac24:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ac26:	ea45 0c0c 	orr.w	ip, r5, ip
9001ac2a:	4402      	add	r2, r0
9001ac2c:	ea4c 0c08 	orr.w	ip, ip, r8
9001ac30:	f82a cb02 	strh.w	ip, [sl], #2
9001ac34:	e7ac      	b.n	9001ab90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ac36:	f04f 0800 	mov.w	r8, #0
9001ac3a:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001ac3e:	eb03 0008 	add.w	r0, r3, r8
9001ac42:	2800      	cmp	r0, #0
9001ac44:	dc41      	bgt.n	9001acca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ac46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ac4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac4e:	9b01      	ldr	r3, [sp, #4]
9001ac50:	2b00      	cmp	r3, #0
9001ac52:	f340 8097 	ble.w	9001ad84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001ac56:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ac5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ac5c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ac60:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ac64:	eef0 6a62 	vmov.f32	s13, s5
9001ac68:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ac6c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ac70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ac74:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001ac78:	eef0 6a43 	vmov.f32	s13, s6
9001ac7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ac80:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ac84:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ac88:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ac8c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ac90:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ac94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ac98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ac9c:	ee12 2a90 	vmov	r2, s5
9001aca0:	eef0 2a47 	vmov.f32	s5, s14
9001aca4:	fb92 f3f3 	sdiv	r3, r2, r3
9001aca8:	ee13 2a10 	vmov	r2, s6
9001acac:	9313      	str	r3, [sp, #76]	@ 0x4c
9001acae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001acb0:	eeb0 3a67 	vmov.f32	s6, s15
9001acb4:	fb92 f3f3 	sdiv	r3, r2, r3
9001acb8:	9314      	str	r3, [sp, #80]	@ 0x50
9001acba:	9b01      	ldr	r3, [sp, #4]
9001acbc:	9a05      	ldr	r2, [sp, #20]
9001acbe:	3b01      	subs	r3, #1
9001acc0:	9301      	str	r3, [sp, #4]
9001acc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001acc4:	bf08      	it	eq
9001acc6:	4613      	moveq	r3, r2
9001acc8:	e72c      	b.n	9001ab24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001acca:	140f      	asrs	r7, r1, #16
9001accc:	d453      	bmi.n	9001ad76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001acce:	f8de 5008 	ldr.w	r5, [lr, #8]
9001acd2:	42bd      	cmp	r5, r7
9001acd4:	dd4f      	ble.n	9001ad76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001acd6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001acda:	d44c      	bmi.n	9001ad76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001acdc:	f8de 000c 	ldr.w	r0, [lr, #12]
9001ace0:	4560      	cmp	r0, ip
9001ace2:	dd48      	ble.n	9001ad76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ace4:	9803      	ldr	r0, [sp, #12]
9001ace6:	b22d      	sxth	r5, r5
9001ace8:	fb0c 0505 	mla	r5, ip, r5, r0
9001acec:	5de8      	ldrb	r0, [r5, r7]
9001acee:	9d04      	ldr	r5, [sp, #16]
9001acf0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001acf4:	f06f 0501 	mvn.w	r5, #1
9001acf8:	fb05 fb08 	mul.w	fp, r5, r8
9001acfc:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001ad00:	f834 500b 	ldrh.w	r5, [r4, fp]
9001ad04:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ad08:	122f      	asrs	r7, r5, #8
9001ad0a:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001ad0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ad12:	00ed      	lsls	r5, r5, #3
9001ad14:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001ad18:	fb17 f706 	smulbb	r7, r7, r6
9001ad1c:	b2ed      	uxtb	r5, r5
9001ad1e:	fb19 f906 	smulbb	r9, r9, r6
9001ad22:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001ad26:	10c7      	asrs	r7, r0, #3
9001ad28:	fb15 f506 	smulbb	r5, r5, r6
9001ad2c:	00c0      	lsls	r0, r0, #3
9001ad2e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ad32:	fa1f fc8c 	uxth.w	ip, ip
9001ad36:	b2c0      	uxtb	r0, r0
9001ad38:	fb07 970a 	mla	r7, r7, sl, r9
9001ad3c:	fb00 500a 	mla	r0, r0, sl, r5
9001ad40:	f10c 0501 	add.w	r5, ip, #1
9001ad44:	b2bf      	uxth	r7, r7
9001ad46:	b280      	uxth	r0, r0
9001ad48:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ad4c:	f107 0901 	add.w	r9, r7, #1
9001ad50:	1c45      	adds	r5, r0, #1
9001ad52:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001ad56:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ad5a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ad5e:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001ad62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ad66:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ad6a:	ea45 0c0c 	orr.w	ip, r5, ip
9001ad6e:	ea4c 0c09 	orr.w	ip, ip, r9
9001ad72:	f824 c00b 	strh.w	ip, [r4, fp]
9001ad76:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ad78:	f108 38ff 	add.w	r8, r8, #4294967295
9001ad7c:	4401      	add	r1, r0
9001ad7e:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ad80:	4402      	add	r2, r0
9001ad82:	e75c      	b.n	9001ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001ad84:	b007      	add	sp, #28
9001ad86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ad8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ad8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ad8e:	b085      	sub	sp, #20
9001ad90:	4693      	mov	fp, r2
9001ad92:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ad96:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ad98:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001ad9a:	6870      	ldr	r0, [r6, #4]
9001ad9c:	9100      	str	r1, [sp, #0]
9001ad9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ada2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001ada6:	fb00 2404 	mla	r4, r0, r4, r2
9001adaa:	6832      	ldr	r2, [r6, #0]
9001adac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001adb0:	682a      	ldr	r2, [r5, #0]
9001adb2:	9201      	str	r2, [sp, #4]
9001adb4:	686a      	ldr	r2, [r5, #4]
9001adb6:	3204      	adds	r2, #4
9001adb8:	9202      	str	r2, [sp, #8]
9001adba:	9a00      	ldr	r2, [sp, #0]
9001adbc:	2a00      	cmp	r2, #0
9001adbe:	dc03      	bgt.n	9001adc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001adc0:	f1bb 0f00 	cmp.w	fp, #0
9001adc4:	f340 80a0 	ble.w	9001af08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001adc8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001adca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001adce:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001add2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001add4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001add8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001addc:	2b00      	cmp	r3, #0
9001adde:	dd0c      	ble.n	9001adfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ade0:	1406      	asrs	r6, r0, #16
9001ade2:	d405      	bmi.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ade4:	454e      	cmp	r6, r9
9001ade6:	da03      	bge.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ade8:	1416      	asrs	r6, r2, #16
9001adea:	d401      	bmi.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001adec:	4546      	cmp	r6, r8
9001adee:	db05      	blt.n	9001adfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001adf0:	4470      	add	r0, lr
9001adf2:	4462      	add	r2, ip
9001adf4:	3b01      	subs	r3, #1
9001adf6:	3402      	adds	r4, #2
9001adf8:	e7f0      	b.n	9001addc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001adfa:	d00f      	beq.n	9001ae1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001adfc:	1e5e      	subs	r6, r3, #1
9001adfe:	fb0e 0706 	mla	r7, lr, r6, r0
9001ae02:	143f      	asrs	r7, r7, #16
9001ae04:	d541      	bpl.n	9001ae8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001ae06:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001ae0a:	4698      	mov	r8, r3
9001ae0c:	9603      	str	r6, [sp, #12]
9001ae0e:	f1b8 0f00 	cmp.w	r8, #0
9001ae12:	dc59      	bgt.n	9001aec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ae14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ae18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae1c:	9b00      	ldr	r3, [sp, #0]
9001ae1e:	2b00      	cmp	r3, #0
9001ae20:	dd72      	ble.n	9001af08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001ae22:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ae26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ae28:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ae2c:	eeb0 6a62 	vmov.f32	s12, s5
9001ae30:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ae34:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ae38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae3c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ae40:	eeb0 6a43 	vmov.f32	s12, s6
9001ae44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae48:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ae4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ae50:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ae54:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ae58:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ae5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ae60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ae64:	ee12 2a90 	vmov	r2, s5
9001ae68:	eef0 2a47 	vmov.f32	s5, s14
9001ae6c:	fb92 fef3 	sdiv	lr, r2, r3
9001ae70:	ee13 2a10 	vmov	r2, s6
9001ae74:	eeb0 3a67 	vmov.f32	s6, s15
9001ae78:	fb92 fcf3 	sdiv	ip, r2, r3
9001ae7c:	9b00      	ldr	r3, [sp, #0]
9001ae7e:	3b01      	subs	r3, #1
9001ae80:	9300      	str	r3, [sp, #0]
9001ae82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ae84:	bf08      	it	eq
9001ae86:	465b      	moveq	r3, fp
9001ae88:	e797      	b.n	9001adba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ae8a:	454f      	cmp	r7, r9
9001ae8c:	dabb      	bge.n	9001ae06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ae8e:	fb0c 2606 	mla	r6, ip, r6, r2
9001ae92:	1436      	asrs	r6, r6, #16
9001ae94:	d4b7      	bmi.n	9001ae06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ae96:	4546      	cmp	r6, r8
9001ae98:	dab5      	bge.n	9001ae06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ae9a:	461e      	mov	r6, r3
9001ae9c:	46a0      	mov	r8, r4
9001ae9e:	2e00      	cmp	r6, #0
9001aea0:	ddb8      	ble.n	9001ae14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001aea2:	1417      	asrs	r7, r2, #16
9001aea4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001aea8:	9901      	ldr	r1, [sp, #4]
9001aeaa:	ea4f 4920 	mov.w	r9, r0, asr #16
9001aeae:	4462      	add	r2, ip
9001aeb0:	4470      	add	r0, lr
9001aeb2:	fb0a 1707 	mla	r7, sl, r7, r1
9001aeb6:	9902      	ldr	r1, [sp, #8]
9001aeb8:	3e01      	subs	r6, #1
9001aeba:	f817 7009 	ldrb.w	r7, [r7, r9]
9001aebe:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001aec2:	f828 7b02 	strh.w	r7, [r8], #2
9001aec6:	e7ea      	b.n	9001ae9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001aec8:	ea5f 4920 	movs.w	r9, r0, asr #16
9001aecc:	d417      	bmi.n	9001aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001aece:	68ae      	ldr	r6, [r5, #8]
9001aed0:	454e      	cmp	r6, r9
9001aed2:	dd14      	ble.n	9001aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001aed4:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001aed8:	d411      	bmi.n	9001aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001aeda:	68ef      	ldr	r7, [r5, #12]
9001aedc:	4557      	cmp	r7, sl
9001aede:	dd0e      	ble.n	9001aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001aee0:	9f01      	ldr	r7, [sp, #4]
9001aee2:	b236      	sxth	r6, r6
9001aee4:	f06f 0101 	mvn.w	r1, #1
9001aee8:	fb0a 7606 	mla	r6, sl, r6, r7
9001aeec:	9f02      	ldr	r7, [sp, #8]
9001aeee:	f816 6009 	ldrb.w	r6, [r6, r9]
9001aef2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001aef6:	fb01 f608 	mul.w	r6, r1, r8
9001aefa:	9903      	ldr	r1, [sp, #12]
9001aefc:	538f      	strh	r7, [r1, r6]
9001aefe:	4470      	add	r0, lr
9001af00:	4462      	add	r2, ip
9001af02:	f108 38ff 	add.w	r8, r8, #4294967295
9001af06:	e782      	b.n	9001ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001af08:	b005      	add	sp, #20
9001af0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001af0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001af0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af12:	b087      	sub	sp, #28
9001af14:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001af16:	9205      	str	r2, [sp, #20]
9001af18:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001af1c:	9102      	str	r1, [sp, #8]
9001af1e:	9203      	str	r2, [sp, #12]
9001af20:	6861      	ldr	r1, [r4, #4]
9001af22:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001af26:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001af2a:	fb01 2000 	mla	r0, r1, r0, r2
9001af2e:	6822      	ldr	r2, [r4, #0]
9001af30:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001af34:	9200      	str	r2, [sp, #0]
9001af36:	f8dc 2000 	ldr.w	r2, [ip]
9001af3a:	9204      	str	r2, [sp, #16]
9001af3c:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001af40:	3204      	adds	r2, #4
9001af42:	9201      	str	r2, [sp, #4]
9001af44:	9a03      	ldr	r2, [sp, #12]
9001af46:	43d5      	mvns	r5, r2
9001af48:	b2ed      	uxtb	r5, r5
9001af4a:	9a02      	ldr	r2, [sp, #8]
9001af4c:	2a00      	cmp	r2, #0
9001af4e:	dc03      	bgt.n	9001af58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001af50:	9a05      	ldr	r2, [sp, #20]
9001af52:	2a00      	cmp	r2, #0
9001af54:	f340 812c 	ble.w	9001b1b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001af58:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001af5a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001af5e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001af62:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001af64:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001af68:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001af6c:	2b00      	cmp	r3, #0
9001af6e:	dd10      	ble.n	9001af92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001af70:	140c      	asrs	r4, r1, #16
9001af72:	d405      	bmi.n	9001af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af74:	4574      	cmp	r4, lr
9001af76:	da03      	bge.n	9001af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af78:	1414      	asrs	r4, r2, #16
9001af7a:	d401      	bmi.n	9001af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af7c:	42bc      	cmp	r4, r7
9001af7e:	db09      	blt.n	9001af94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001af80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001af82:	3b01      	subs	r3, #1
9001af84:	9800      	ldr	r0, [sp, #0]
9001af86:	4421      	add	r1, r4
9001af88:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001af8a:	3002      	adds	r0, #2
9001af8c:	4422      	add	r2, r4
9001af8e:	9000      	str	r0, [sp, #0]
9001af90:	e7ec      	b.n	9001af6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001af92:	d071      	beq.n	9001b078 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001af94:	1e5c      	subs	r4, r3, #1
9001af96:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001af98:	fb06 1604 	mla	r6, r6, r4, r1
9001af9c:	1436      	asrs	r6, r6, #16
9001af9e:	d45d      	bmi.n	9001b05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001afa0:	4576      	cmp	r6, lr
9001afa2:	da5b      	bge.n	9001b05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001afa4:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001afa6:	fb06 2404 	mla	r4, r6, r4, r2
9001afaa:	1424      	asrs	r4, r4, #16
9001afac:	d456      	bmi.n	9001b05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001afae:	42bc      	cmp	r4, r7
9001afb0:	da54      	bge.n	9001b05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001afb2:	4698      	mov	r8, r3
9001afb4:	f8dd 9000 	ldr.w	r9, [sp]
9001afb8:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001afbc:	f1b8 0f00 	cmp.w	r8, #0
9001afc0:	dd54      	ble.n	9001b06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001afc2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001afc6:	1414      	asrs	r4, r2, #16
9001afc8:	9804      	ldr	r0, [sp, #16]
9001afca:	140e      	asrs	r6, r1, #16
9001afcc:	f108 38ff 	add.w	r8, r8, #4294967295
9001afd0:	fb07 0404 	mla	r4, r7, r4, r0
9001afd4:	9801      	ldr	r0, [sp, #4]
9001afd6:	f814 e006 	ldrb.w	lr, [r4, r6]
9001afda:	f8b9 4000 	ldrh.w	r4, [r9]
9001afde:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001afe2:	1227      	asrs	r7, r4, #8
9001afe4:	eb00 0b0e 	add.w	fp, r0, lr
9001afe8:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001afec:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001aff0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001aff2:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001aff6:	f89b b001 	ldrb.w	fp, [fp, #1]
9001affa:	4401      	add	r1, r0
9001affc:	fb16 f60a 	smulbb	r6, r6, sl
9001b000:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b002:	fb1b fb0a 	smulbb	fp, fp, sl
9001b006:	fb07 6705 	mla	r7, r7, r5, r6
9001b00a:	10e6      	asrs	r6, r4, #3
9001b00c:	00e4      	lsls	r4, r4, #3
9001b00e:	4402      	add	r2, r0
9001b010:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b014:	b2bf      	uxth	r7, r7
9001b016:	b2e4      	uxtb	r4, r4
9001b018:	fb06 b605 	mla	r6, r6, r5, fp
9001b01c:	fb14 f405 	smulbb	r4, r4, r5
9001b020:	b2b6      	uxth	r6, r6
9001b022:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001b026:	1c7c      	adds	r4, r7, #1
9001b028:	f106 0b01 	add.w	fp, r6, #1
9001b02c:	fa1f fe8e 	uxth.w	lr, lr
9001b030:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b034:	f10e 0401 	add.w	r4, lr, #1
9001b038:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b03c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b040:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001b044:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b048:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b04c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b050:	4327      	orrs	r7, r4
9001b052:	ea47 070b 	orr.w	r7, r7, fp
9001b056:	f829 7b02 	strh.w	r7, [r9], #2
9001b05a:	e7af      	b.n	9001afbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001b05c:	f04f 0e00 	mov.w	lr, #0
9001b060:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001b064:	eb03 040e 	add.w	r4, r3, lr
9001b068:	2c00      	cmp	r4, #0
9001b06a:	dc43      	bgt.n	9001b0f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001b06c:	9a00      	ldr	r2, [sp, #0]
9001b06e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b072:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001b076:	9300      	str	r3, [sp, #0]
9001b078:	9b02      	ldr	r3, [sp, #8]
9001b07a:	2b00      	cmp	r3, #0
9001b07c:	f340 8098 	ble.w	9001b1b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b080:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b084:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b086:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b08a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b08e:	eef0 6a62 	vmov.f32	s13, s5
9001b092:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b096:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b09a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b09e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b0a2:	eef0 6a43 	vmov.f32	s13, s6
9001b0a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b0aa:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b0ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b0b2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b0b6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b0ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b0be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b0c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b0c6:	ee12 2a90 	vmov	r2, s5
9001b0ca:	eef0 2a47 	vmov.f32	s5, s14
9001b0ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001b0d2:	ee13 2a10 	vmov	r2, s6
9001b0d6:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b0d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b0da:	eeb0 3a67 	vmov.f32	s6, s15
9001b0de:	fb92 f3f3 	sdiv	r3, r2, r3
9001b0e2:	9314      	str	r3, [sp, #80]	@ 0x50
9001b0e4:	9b02      	ldr	r3, [sp, #8]
9001b0e6:	9a05      	ldr	r2, [sp, #20]
9001b0e8:	3b01      	subs	r3, #1
9001b0ea:	9302      	str	r3, [sp, #8]
9001b0ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b0ee:	bf08      	it	eq
9001b0f0:	4613      	moveq	r3, r2
9001b0f2:	e72a      	b.n	9001af4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b0f4:	140f      	asrs	r7, r1, #16
9001b0f6:	d454      	bmi.n	9001b1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b0f8:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001b0fc:	42be      	cmp	r6, r7
9001b0fe:	dd50      	ble.n	9001b1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b100:	ea5f 4822 	movs.w	r8, r2, asr #16
9001b104:	d44d      	bmi.n	9001b1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b106:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001b10a:	4544      	cmp	r4, r8
9001b10c:	dd49      	ble.n	9001b1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b10e:	9c04      	ldr	r4, [sp, #16]
9001b110:	b236      	sxth	r6, r6
9001b112:	f06f 0001 	mvn.w	r0, #1
9001b116:	fb08 4606 	mla	r6, r8, r6, r4
9001b11a:	9c01      	ldr	r4, [sp, #4]
9001b11c:	fb00 fa0e 	mul.w	sl, r0, lr
9001b120:	9800      	ldr	r0, [sp, #0]
9001b122:	f816 8007 	ldrb.w	r8, [r6, r7]
9001b126:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001b12a:	eb04 0b08 	add.w	fp, r4, r8
9001b12e:	f830 400a 	ldrh.w	r4, [r0, sl]
9001b132:	9801      	ldr	r0, [sp, #4]
9001b134:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001b138:	1227      	asrs	r7, r4, #8
9001b13a:	f89b b001 	ldrb.w	fp, [fp, #1]
9001b13e:	fb16 f609 	smulbb	r6, r6, r9
9001b142:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b146:	f810 8008 	ldrb.w	r8, [r0, r8]
9001b14a:	fb1b fb09 	smulbb	fp, fp, r9
9001b14e:	fb07 6705 	mla	r7, r7, r5, r6
9001b152:	10e6      	asrs	r6, r4, #3
9001b154:	00e4      	lsls	r4, r4, #3
9001b156:	9800      	ldr	r0, [sp, #0]
9001b158:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b15c:	b2bf      	uxth	r7, r7
9001b15e:	b2e4      	uxtb	r4, r4
9001b160:	fb06 b605 	mla	r6, r6, r5, fp
9001b164:	fb14 f405 	smulbb	r4, r4, r5
9001b168:	b2b6      	uxth	r6, r6
9001b16a:	fb08 4809 	mla	r8, r8, r9, r4
9001b16e:	1c7c      	adds	r4, r7, #1
9001b170:	f106 0b01 	add.w	fp, r6, #1
9001b174:	fa1f f888 	uxth.w	r8, r8
9001b178:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b17c:	f108 0401 	add.w	r4, r8, #1
9001b180:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b184:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b188:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001b18c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b190:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b194:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b198:	4327      	orrs	r7, r4
9001b19a:	ea47 070b 	orr.w	r7, r7, fp
9001b19e:	f820 700a 	strh.w	r7, [r0, sl]
9001b1a2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b1a4:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b1a8:	4401      	add	r1, r0
9001b1aa:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b1ac:	4402      	add	r2, r0
9001b1ae:	e759      	b.n	9001b064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b1b0:	b007      	add	sp, #28
9001b1b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001b1b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b1bc:	b085      	sub	sp, #20
9001b1be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b1c2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b1c4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b1c6:	9203      	str	r2, [sp, #12]
9001b1c8:	6870      	ldr	r0, [r6, #4]
9001b1ca:	686f      	ldr	r7, [r5, #4]
9001b1cc:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001b1d0:	3704      	adds	r7, #4
9001b1d2:	9101      	str	r1, [sp, #4]
9001b1d4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b1d8:	fb00 2404 	mla	r4, r0, r4, r2
9001b1dc:	6832      	ldr	r2, [r6, #0]
9001b1de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b1e2:	682a      	ldr	r2, [r5, #0]
9001b1e4:	9202      	str	r2, [sp, #8]
9001b1e6:	9a01      	ldr	r2, [sp, #4]
9001b1e8:	2a00      	cmp	r2, #0
9001b1ea:	dc03      	bgt.n	9001b1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b1ec:	9a03      	ldr	r2, [sp, #12]
9001b1ee:	2a00      	cmp	r2, #0
9001b1f0:	f340 80cc 	ble.w	9001b38c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b1f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b1f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b1fa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b1fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b200:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b204:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b208:	2b00      	cmp	r3, #0
9001b20a:	dd0d      	ble.n	9001b228 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b20c:	1406      	asrs	r6, r0, #16
9001b20e:	d405      	bmi.n	9001b21c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b210:	454e      	cmp	r6, r9
9001b212:	da03      	bge.n	9001b21c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b214:	1416      	asrs	r6, r2, #16
9001b216:	d401      	bmi.n	9001b21c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b218:	4546      	cmp	r6, r8
9001b21a:	db06      	blt.n	9001b22a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b21c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001b21e:	4460      	add	r0, ip
9001b220:	3b01      	subs	r3, #1
9001b222:	3402      	adds	r4, #2
9001b224:	4432      	add	r2, r6
9001b226:	e7ef      	b.n	9001b208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001b228:	d00f      	beq.n	9001b24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b22a:	1e5e      	subs	r6, r3, #1
9001b22c:	fb0c 0e06 	mla	lr, ip, r6, r0
9001b230:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001b234:	d543      	bpl.n	9001b2be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001b236:	4698      	mov	r8, r3
9001b238:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001b23c:	f1b8 0f00 	cmp.w	r8, #0
9001b240:	dc71      	bgt.n	9001b326 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001b242:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b246:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b24a:	9b01      	ldr	r3, [sp, #4]
9001b24c:	2b00      	cmp	r3, #0
9001b24e:	f340 809d 	ble.w	9001b38c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b252:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b256:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b258:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b25c:	eeb0 6a62 	vmov.f32	s12, s5
9001b260:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b264:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b268:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b26c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b270:	eeb0 6a43 	vmov.f32	s12, s6
9001b274:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b278:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b27c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b280:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b284:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b288:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b28c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b290:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b294:	ee12 2a90 	vmov	r2, s5
9001b298:	eef0 2a47 	vmov.f32	s5, s14
9001b29c:	fb92 fcf3 	sdiv	ip, r2, r3
9001b2a0:	ee13 2a10 	vmov	r2, s6
9001b2a4:	eeb0 3a67 	vmov.f32	s6, s15
9001b2a8:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2ac:	9312      	str	r3, [sp, #72]	@ 0x48
9001b2ae:	9b01      	ldr	r3, [sp, #4]
9001b2b0:	9a03      	ldr	r2, [sp, #12]
9001b2b2:	3b01      	subs	r3, #1
9001b2b4:	9301      	str	r3, [sp, #4]
9001b2b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b2b8:	bf08      	it	eq
9001b2ba:	4613      	moveq	r3, r2
9001b2bc:	e793      	b.n	9001b1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001b2be:	45ce      	cmp	lr, r9
9001b2c0:	dab9      	bge.n	9001b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b2c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b2c4:	fb01 2606 	mla	r6, r1, r6, r2
9001b2c8:	1436      	asrs	r6, r6, #16
9001b2ca:	d4b4      	bmi.n	9001b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b2cc:	4546      	cmp	r6, r8
9001b2ce:	dab2      	bge.n	9001b236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b2d0:	4698      	mov	r8, r3
9001b2d2:	46a2      	mov	sl, r4
9001b2d4:	f1b8 0f00 	cmp.w	r8, #0
9001b2d8:	ddb3      	ble.n	9001b242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b2da:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b2de:	1416      	asrs	r6, r2, #16
9001b2e0:	9902      	ldr	r1, [sp, #8]
9001b2e2:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001b2e6:	f108 38ff 	add.w	r8, r8, #4294967295
9001b2ea:	4460      	add	r0, ip
9001b2ec:	fb09 1606 	mla	r6, r9, r6, r1
9001b2f0:	4928      	ldr	r1, [pc, #160]	@ (9001b394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001b2f2:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001b2f6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b2fa:	eb07 0b0e 	add.w	fp, r7, lr
9001b2fe:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001b302:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001b306:	00f6      	lsls	r6, r6, #3
9001b308:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001b30c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b30e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b312:	440a      	add	r2, r1
9001b314:	ea49 0606 	orr.w	r6, r9, r6
9001b318:	f817 900e 	ldrb.w	r9, [r7, lr]
9001b31c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001b320:	f82a 6b02 	strh.w	r6, [sl], #2
9001b324:	e7d6      	b.n	9001b2d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b326:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b32a:	d429      	bmi.n	9001b380 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b32c:	68ae      	ldr	r6, [r5, #8]
9001b32e:	454e      	cmp	r6, r9
9001b330:	dd26      	ble.n	9001b380 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b332:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001b336:	d423      	bmi.n	9001b380 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b338:	68e9      	ldr	r1, [r5, #12]
9001b33a:	4559      	cmp	r1, fp
9001b33c:	dd20      	ble.n	9001b380 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b33e:	fa0f fe86 	sxth.w	lr, r6
9001b342:	9902      	ldr	r1, [sp, #8]
9001b344:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001b348:	f06f 0101 	mvn.w	r1, #1
9001b34c:	f81e e009 	ldrb.w	lr, [lr, r9]
9001b350:	fb01 f908 	mul.w	r9, r1, r8
9001b354:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001b358:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b35c:	eb07 060e 	add.w	r6, r7, lr
9001b360:	f896 b002 	ldrb.w	fp, [r6, #2]
9001b364:	7876      	ldrb	r6, [r6, #1]
9001b366:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001b36a:	00f6      	lsls	r6, r6, #3
9001b36c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b370:	ea4b 0606 	orr.w	r6, fp, r6
9001b374:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001b378:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001b37c:	f82a 6009 	strh.w	r6, [sl, r9]
9001b380:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b382:	4460      	add	r0, ip
9001b384:	f108 38ff 	add.w	r8, r8, #4294967295
9001b388:	440a      	add	r2, r1
9001b38a:	e757      	b.n	9001b23c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b38c:	b005      	add	sp, #20
9001b38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b392:	bf00      	nop
9001b394:	fffff800 	.word	0xfffff800

9001b398 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b39c:	b087      	sub	sp, #28
9001b39e:	468b      	mov	fp, r1
9001b3a0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b3a4:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b3a6:	9204      	str	r2, [sp, #16]
9001b3a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b3ac:	6841      	ldr	r1, [r0, #4]
9001b3ae:	9205      	str	r2, [sp, #20]
9001b3b0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b3b4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b3b8:	fb01 2404 	mla	r4, r1, r4, r2
9001b3bc:	6802      	ldr	r2, [r0, #0]
9001b3be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b3c2:	f8dc 2000 	ldr.w	r2, [ip]
9001b3c6:	9201      	str	r2, [sp, #4]
9001b3c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b3cc:	3204      	adds	r2, #4
9001b3ce:	9202      	str	r2, [sp, #8]
9001b3d0:	f1bb 0f00 	cmp.w	fp, #0
9001b3d4:	dc03      	bgt.n	9001b3de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001b3d6:	9a04      	ldr	r2, [sp, #16]
9001b3d8:	2a00      	cmp	r2, #0
9001b3da:	f340 8138 	ble.w	9001b64e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b3de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b3e0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b3e4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b3e8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b3ea:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001b3ee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b3f2:	2b00      	cmp	r3, #0
9001b3f4:	dd0e      	ble.n	9001b414 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3f6:	1402      	asrs	r2, r0, #16
9001b3f8:	d405      	bmi.n	9001b406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b3fa:	42ba      	cmp	r2, r7
9001b3fc:	da03      	bge.n	9001b406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b3fe:	140a      	asrs	r2, r1, #16
9001b400:	d401      	bmi.n	9001b406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b402:	42b2      	cmp	r2, r6
9001b404:	db07      	blt.n	9001b416 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b406:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b408:	3b01      	subs	r3, #1
9001b40a:	3402      	adds	r4, #2
9001b40c:	4410      	add	r0, r2
9001b40e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b410:	4411      	add	r1, r2
9001b412:	e7ee      	b.n	9001b3f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001b414:	d019      	beq.n	9001b44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b416:	1e5a      	subs	r2, r3, #1
9001b418:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b41a:	fb05 0502 	mla	r5, r5, r2, r0
9001b41e:	142d      	asrs	r5, r5, #16
9001b420:	d409      	bmi.n	9001b436 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b422:	42bd      	cmp	r5, r7
9001b424:	da07      	bge.n	9001b436 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b426:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b428:	fb05 1202 	mla	r2, r5, r2, r1
9001b42c:	1412      	asrs	r2, r2, #16
9001b42e:	d402      	bmi.n	9001b436 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b430:	42b2      	cmp	r2, r6
9001b432:	f2c0 80ac 	blt.w	9001b58e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001b436:	f04f 0e00 	mov.w	lr, #0
9001b43a:	eb03 020e 	add.w	r2, r3, lr
9001b43e:	2a00      	cmp	r2, #0
9001b440:	dc3e      	bgt.n	9001b4c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b442:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b446:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b44a:	f1bb 0f00 	cmp.w	fp, #0
9001b44e:	f340 80fe 	ble.w	9001b64e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b452:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b456:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b458:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b45c:	f1bb 0b01 	subs.w	fp, fp, #1
9001b460:	eeb0 6a62 	vmov.f32	s12, s5
9001b464:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b468:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b46c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b470:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b474:	eeb0 6a43 	vmov.f32	s12, s6
9001b478:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b47c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b480:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b484:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b488:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b48c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b490:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b494:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b498:	ee12 2a90 	vmov	r2, s5
9001b49c:	eef0 2a47 	vmov.f32	s5, s14
9001b4a0:	fb92 f3f3 	sdiv	r3, r2, r3
9001b4a4:	ee13 2a10 	vmov	r2, s6
9001b4a8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b4aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b4ac:	eeb0 3a67 	vmov.f32	s6, s15
9001b4b0:	fb92 f3f3 	sdiv	r3, r2, r3
9001b4b4:	9a04      	ldr	r2, [sp, #16]
9001b4b6:	9314      	str	r3, [sp, #80]	@ 0x50
9001b4b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b4ba:	bf08      	it	eq
9001b4bc:	4613      	moveq	r3, r2
9001b4be:	e787      	b.n	9001b3d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b4c0:	1406      	asrs	r6, r0, #16
9001b4c2:	d45d      	bmi.n	9001b580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b4c4:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001b4c8:	42b5      	cmp	r5, r6
9001b4ca:	dd59      	ble.n	9001b580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b4cc:	140f      	asrs	r7, r1, #16
9001b4ce:	d457      	bmi.n	9001b580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b4d0:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001b4d4:	42ba      	cmp	r2, r7
9001b4d6:	dd53      	ble.n	9001b580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b4d8:	9a01      	ldr	r2, [sp, #4]
9001b4da:	b22d      	sxth	r5, r5
9001b4dc:	fb07 2505 	mla	r5, r7, r5, r2
9001b4e0:	5daa      	ldrb	r2, [r5, r6]
9001b4e2:	9d02      	ldr	r5, [sp, #8]
9001b4e4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001b4e8:	0e2e      	lsrs	r6, r5, #24
9001b4ea:	d049      	beq.n	9001b580 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b4ec:	f06f 0201 	mvn.w	r2, #1
9001b4f0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b4f4:	fb02 f20e 	mul.w	r2, r2, lr
9001b4f8:	f834 8002 	ldrh.w	r8, [r4, r2]
9001b4fc:	9203      	str	r2, [sp, #12]
9001b4fe:	9a05      	ldr	r2, [sp, #20]
9001b500:	ea4f 2728 	mov.w	r7, r8, asr #8
9001b504:	4356      	muls	r6, r2
9001b506:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b50a:	1c72      	adds	r2, r6, #1
9001b50c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001b510:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b514:	b2ed      	uxtb	r5, r5
9001b516:	1212      	asrs	r2, r2, #8
9001b518:	fa1f f982 	uxth.w	r9, r2
9001b51c:	43d2      	mvns	r2, r2
9001b51e:	fb16 f609 	smulbb	r6, r6, r9
9001b522:	b2d2      	uxtb	r2, r2
9001b524:	fb15 f509 	smulbb	r5, r5, r9
9001b528:	fb07 6702 	mla	r7, r7, r2, r6
9001b52c:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b530:	fb1a fa09 	smulbb	sl, sl, r9
9001b534:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b538:	b2bf      	uxth	r7, r7
9001b53a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b53e:	fa5f f888 	uxtb.w	r8, r8
9001b542:	fb06 a602 	mla	r6, r6, r2, sl
9001b546:	fb08 5502 	mla	r5, r8, r2, r5
9001b54a:	1c7a      	adds	r2, r7, #1
9001b54c:	b2b6      	uxth	r6, r6
9001b54e:	b2ad      	uxth	r5, r5
9001b550:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b554:	9a03      	ldr	r2, [sp, #12]
9001b556:	f105 0a01 	add.w	sl, r5, #1
9001b55a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b55e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b562:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b566:	ea4a 0707 	orr.w	r7, sl, r7
9001b56a:	f106 0a01 	add.w	sl, r6, #1
9001b56e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b572:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b576:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b57a:	ea47 070a 	orr.w	r7, r7, sl
9001b57e:	52a7      	strh	r7, [r4, r2]
9001b580:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b582:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b586:	4410      	add	r0, r2
9001b588:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b58a:	4411      	add	r1, r2
9001b58c:	e755      	b.n	9001b43a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b58e:	f04f 0800 	mov.w	r8, #0
9001b592:	eba3 0208 	sub.w	r2, r3, r8
9001b596:	2a00      	cmp	r2, #0
9001b598:	f77f af53 	ble.w	9001b442 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001b59c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001b5a0:	140a      	asrs	r2, r1, #16
9001b5a2:	9f01      	ldr	r7, [sp, #4]
9001b5a4:	1405      	asrs	r5, r0, #16
9001b5a6:	fb06 7202 	mla	r2, r6, r2, r7
9001b5aa:	5d52      	ldrb	r2, [r2, r5]
9001b5ac:	9d02      	ldr	r5, [sp, #8]
9001b5ae:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001b5b2:	0e2e      	lsrs	r6, r5, #24
9001b5b4:	d044      	beq.n	9001b640 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001b5b6:	9a05      	ldr	r2, [sp, #20]
9001b5b8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b5bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001b5c0:	4356      	muls	r6, r2
9001b5c2:	ea4f 272e 	mov.w	r7, lr, asr #8
9001b5c6:	1c72      	adds	r2, r6, #1
9001b5c8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b5cc:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001b5d0:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b5d4:	b2ed      	uxtb	r5, r5
9001b5d6:	1212      	asrs	r2, r2, #8
9001b5d8:	fa1f f982 	uxth.w	r9, r2
9001b5dc:	43d2      	mvns	r2, r2
9001b5de:	fb16 f609 	smulbb	r6, r6, r9
9001b5e2:	b2d2      	uxtb	r2, r2
9001b5e4:	fb15 f509 	smulbb	r5, r5, r9
9001b5e8:	fb07 6702 	mla	r7, r7, r2, r6
9001b5ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b5f0:	fb1a fa09 	smulbb	sl, sl, r9
9001b5f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b5f8:	b2bf      	uxth	r7, r7
9001b5fa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b5fe:	fa5f fe8e 	uxtb.w	lr, lr
9001b602:	fb06 a602 	mla	r6, r6, r2, sl
9001b606:	fb0e 5502 	mla	r5, lr, r2, r5
9001b60a:	1c7a      	adds	r2, r7, #1
9001b60c:	b2b6      	uxth	r6, r6
9001b60e:	b2ad      	uxth	r5, r5
9001b610:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b614:	f105 0a01 	add.w	sl, r5, #1
9001b618:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b61c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b620:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b624:	ea4a 0707 	orr.w	r7, sl, r7
9001b628:	f106 0a01 	add.w	sl, r6, #1
9001b62c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b630:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b634:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b638:	ea47 070a 	orr.w	r7, r7, sl
9001b63c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b640:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b642:	f108 0801 	add.w	r8, r8, #1
9001b646:	4410      	add	r0, r2
9001b648:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b64a:	4411      	add	r1, r2
9001b64c:	e7a1      	b.n	9001b592 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001b64e:	b007      	add	sp, #28
9001b650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b658:	b085      	sub	sp, #20
9001b65a:	468b      	mov	fp, r1
9001b65c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b660:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b662:	9203      	str	r2, [sp, #12]
9001b664:	6841      	ldr	r1, [r0, #4]
9001b666:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001b66a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b66e:	fb01 2404 	mla	r4, r1, r4, r2
9001b672:	6802      	ldr	r2, [r0, #0]
9001b674:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b678:	f8de 2000 	ldr.w	r2, [lr]
9001b67c:	9200      	str	r2, [sp, #0]
9001b67e:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b682:	3204      	adds	r2, #4
9001b684:	9201      	str	r2, [sp, #4]
9001b686:	f1bb 0f00 	cmp.w	fp, #0
9001b68a:	dc03      	bgt.n	9001b694 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b68c:	9a03      	ldr	r2, [sp, #12]
9001b68e:	2a00      	cmp	r2, #0
9001b690:	f340 8153 	ble.w	9001b93a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b694:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b696:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b69a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b69e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b6a0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b6a4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b6a8:	2b00      	cmp	r3, #0
9001b6aa:	dd0e      	ble.n	9001b6ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b6ac:	1408      	asrs	r0, r1, #16
9001b6ae:	d405      	bmi.n	9001b6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b6b0:	42b8      	cmp	r0, r7
9001b6b2:	da03      	bge.n	9001b6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b6b4:	1410      	asrs	r0, r2, #16
9001b6b6:	d401      	bmi.n	9001b6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b6b8:	42b0      	cmp	r0, r6
9001b6ba:	db07      	blt.n	9001b6cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b6bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b6be:	3b01      	subs	r3, #1
9001b6c0:	3402      	adds	r4, #2
9001b6c2:	4401      	add	r1, r0
9001b6c4:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b6c6:	4402      	add	r2, r0
9001b6c8:	e7ee      	b.n	9001b6a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b6ca:	d017      	beq.n	9001b6fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b6cc:	1e58      	subs	r0, r3, #1
9001b6ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b6d0:	fb05 1500 	mla	r5, r5, r0, r1
9001b6d4:	142d      	asrs	r5, r5, #16
9001b6d6:	d409      	bmi.n	9001b6ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b6d8:	42bd      	cmp	r5, r7
9001b6da:	da07      	bge.n	9001b6ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b6dc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b6de:	fb05 2000 	mla	r0, r5, r0, r2
9001b6e2:	1400      	asrs	r0, r0, #16
9001b6e4:	d402      	bmi.n	9001b6ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b6e6:	42b0      	cmp	r0, r6
9001b6e8:	f2c0 80bc 	blt.w	9001b864 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001b6ec:	2600      	movs	r6, #0
9001b6ee:	1998      	adds	r0, r3, r6
9001b6f0:	2800      	cmp	r0, #0
9001b6f2:	dc3e      	bgt.n	9001b772 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001b6f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b6f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b6fc:	f1bb 0f00 	cmp.w	fp, #0
9001b700:	f340 811b 	ble.w	9001b93a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b704:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b708:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b70a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b70e:	f1bb 0b01 	subs.w	fp, fp, #1
9001b712:	eeb0 6a62 	vmov.f32	s12, s5
9001b716:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b71a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b71e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b722:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b726:	eeb0 6a43 	vmov.f32	s12, s6
9001b72a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b72e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b732:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b736:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b73a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b73e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b746:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b74a:	ee12 2a90 	vmov	r2, s5
9001b74e:	eef0 2a47 	vmov.f32	s5, s14
9001b752:	fb92 f3f3 	sdiv	r3, r2, r3
9001b756:	ee13 2a10 	vmov	r2, s6
9001b75a:	9311      	str	r3, [sp, #68]	@ 0x44
9001b75c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b75e:	eeb0 3a67 	vmov.f32	s6, s15
9001b762:	fb92 f3f3 	sdiv	r3, r2, r3
9001b766:	9a03      	ldr	r2, [sp, #12]
9001b768:	9312      	str	r3, [sp, #72]	@ 0x48
9001b76a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b76c:	bf08      	it	eq
9001b76e:	4613      	moveq	r3, r2
9001b770:	e789      	b.n	9001b686 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b772:	140f      	asrs	r7, r1, #16
9001b774:	d426      	bmi.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b776:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b77a:	42bd      	cmp	r5, r7
9001b77c:	dd22      	ble.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b77e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b782:	d41f      	bmi.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b784:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b788:	4560      	cmp	r0, ip
9001b78a:	dd1b      	ble.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b78c:	9800      	ldr	r0, [sp, #0]
9001b78e:	b22d      	sxth	r5, r5
9001b790:	fb0c 0505 	mla	r5, ip, r5, r0
9001b794:	5de8      	ldrb	r0, [r5, r7]
9001b796:	9d01      	ldr	r5, [sp, #4]
9001b798:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001b79c:	0e07      	lsrs	r7, r0, #24
9001b79e:	2fff      	cmp	r7, #255	@ 0xff
9001b7a0:	d116      	bne.n	9001b7d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b7a2:	f06f 0501 	mvn.w	r5, #1
9001b7a6:	fb05 f706 	mul.w	r7, r5, r6
9001b7aa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001b7ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b7b2:	0945      	lsrs	r5, r0, #5
9001b7b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b7b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b7bc:	ea4c 0505 	orr.w	r5, ip, r5
9001b7c0:	4305      	orrs	r5, r0
9001b7c2:	53e5      	strh	r5, [r4, r7]
9001b7c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b7c6:	3e01      	subs	r6, #1
9001b7c8:	4401      	add	r1, r0
9001b7ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b7cc:	4402      	add	r2, r0
9001b7ce:	e78e      	b.n	9001b6ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001b7d0:	b2fd      	uxtb	r5, r7
9001b7d2:	2f00      	cmp	r7, #0
9001b7d4:	d0f6      	beq.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b7d6:	f06f 0701 	mvn.w	r7, #1
9001b7da:	fa1f f985 	uxth.w	r9, r5
9001b7de:	43ed      	mvns	r5, r5
9001b7e0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b7e4:	4377      	muls	r7, r6
9001b7e6:	fb1a fa09 	smulbb	sl, sl, r9
9001b7ea:	b2ed      	uxtb	r5, r5
9001b7ec:	f834 8007 	ldrh.w	r8, [r4, r7]
9001b7f0:	9702      	str	r7, [sp, #8]
9001b7f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b7f6:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b7fa:	fb17 f709 	smulbb	r7, r7, r9
9001b7fe:	b2c0      	uxtb	r0, r0
9001b800:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b804:	fb10 f009 	smulbb	r0, r0, r9
9001b808:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b80c:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001b810:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b814:	fa1f fc8c 	uxth.w	ip, ip
9001b818:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b81c:	fa5f f888 	uxtb.w	r8, r8
9001b820:	fb07 a705 	mla	r7, r7, r5, sl
9001b824:	fb08 0005 	mla	r0, r8, r5, r0
9001b828:	f10c 0501 	add.w	r5, ip, #1
9001b82c:	b2bf      	uxth	r7, r7
9001b82e:	b280      	uxth	r0, r0
9001b830:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b834:	f100 0a01 	add.w	sl, r0, #1
9001b838:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b83c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b840:	9802      	ldr	r0, [sp, #8]
9001b842:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b846:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b84a:	f107 0a01 	add.w	sl, r7, #1
9001b84e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b852:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b856:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b85a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b85e:	f824 c000 	strh.w	ip, [r4, r0]
9001b862:	e7af      	b.n	9001b7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b864:	f04f 0800 	mov.w	r8, #0
9001b868:	eba3 0008 	sub.w	r0, r3, r8
9001b86c:	2800      	cmp	r0, #0
9001b86e:	f77f af41 	ble.w	9001b6f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b872:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b876:	1410      	asrs	r0, r2, #16
9001b878:	9f00      	ldr	r7, [sp, #0]
9001b87a:	140d      	asrs	r5, r1, #16
9001b87c:	fb06 7000 	mla	r0, r6, r0, r7
9001b880:	5d40      	ldrb	r0, [r0, r5]
9001b882:	9d01      	ldr	r5, [sp, #4]
9001b884:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b888:	0e2e      	lsrs	r6, r5, #24
9001b88a:	2eff      	cmp	r6, #255	@ 0xff
9001b88c:	d112      	bne.n	9001b8b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001b88e:	482c      	ldr	r0, [pc, #176]	@ (9001b940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001b890:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b894:	0968      	lsrs	r0, r5, #5
9001b896:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b89a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001b89e:	4330      	orrs	r0, r6
9001b8a0:	4328      	orrs	r0, r5
9001b8a2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001b8a6:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b8a8:	f108 0801 	add.w	r8, r8, #1
9001b8ac:	4401      	add	r1, r0
9001b8ae:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b8b0:	4402      	add	r2, r0
9001b8b2:	e7d9      	b.n	9001b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b8b4:	b2f0      	uxtb	r0, r6
9001b8b6:	2e00      	cmp	r6, #0
9001b8b8:	d0f5      	beq.n	9001b8a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b8ba:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001b8be:	fa1f f980 	uxth.w	r9, r0
9001b8c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b8c6:	43c0      	mvns	r0, r0
9001b8c8:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b8cc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b8d0:	fb16 f609 	smulbb	r6, r6, r9
9001b8d4:	b2c0      	uxtb	r0, r0
9001b8d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b8da:	b2ed      	uxtb	r5, r5
9001b8dc:	fb1a fa09 	smulbb	sl, sl, r9
9001b8e0:	fb07 6700 	mla	r7, r7, r0, r6
9001b8e4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b8e8:	fb15 f509 	smulbb	r5, r5, r9
9001b8ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b8f0:	b2bf      	uxth	r7, r7
9001b8f2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b8f6:	fa5f fc8c 	uxtb.w	ip, ip
9001b8fa:	fb06 a600 	mla	r6, r6, r0, sl
9001b8fe:	fb0c 5500 	mla	r5, ip, r0, r5
9001b902:	1c78      	adds	r0, r7, #1
9001b904:	b2b6      	uxth	r6, r6
9001b906:	b2ad      	uxth	r5, r5
9001b908:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b90c:	f105 0a01 	add.w	sl, r5, #1
9001b910:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b914:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b918:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b91c:	ea4a 0707 	orr.w	r7, sl, r7
9001b920:	f106 0a01 	add.w	sl, r6, #1
9001b924:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b928:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b92c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b930:	ea47 070a 	orr.w	r7, r7, sl
9001b934:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b938:	e7b5      	b.n	9001b8a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b93a:	b005      	add	sp, #20
9001b93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b940:	fffff800 	.word	0xfffff800

9001b944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b948:	b087      	sub	sp, #28
9001b94a:	468b      	mov	fp, r1
9001b94c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b950:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b952:	9204      	str	r2, [sp, #16]
9001b954:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b958:	6861      	ldr	r1, [r4, #4]
9001b95a:	9205      	str	r2, [sp, #20]
9001b95c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b960:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b964:	fb01 2000 	mla	r0, r1, r0, r2
9001b968:	6822      	ldr	r2, [r4, #0]
9001b96a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b96e:	f8de 2000 	ldr.w	r2, [lr]
9001b972:	9201      	str	r2, [sp, #4]
9001b974:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b978:	9202      	str	r2, [sp, #8]
9001b97a:	f1bb 0f00 	cmp.w	fp, #0
9001b97e:	dc03      	bgt.n	9001b988 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001b980:	9a04      	ldr	r2, [sp, #16]
9001b982:	2a00      	cmp	r2, #0
9001b984:	f340 8142 	ble.w	9001bc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b988:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b98a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b98e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b992:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b994:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b998:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b99c:	2b00      	cmp	r3, #0
9001b99e:	dd0e      	ble.n	9001b9be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b9a0:	140c      	asrs	r4, r1, #16
9001b9a2:	d405      	bmi.n	9001b9b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b9a4:	42bc      	cmp	r4, r7
9001b9a6:	da03      	bge.n	9001b9b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b9a8:	1414      	asrs	r4, r2, #16
9001b9aa:	d401      	bmi.n	9001b9b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b9ac:	42b4      	cmp	r4, r6
9001b9ae:	db07      	blt.n	9001b9c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b9b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b9b2:	3b01      	subs	r3, #1
9001b9b4:	3002      	adds	r0, #2
9001b9b6:	4421      	add	r1, r4
9001b9b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b9ba:	4422      	add	r2, r4
9001b9bc:	e7ee      	b.n	9001b99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001b9be:	d019      	beq.n	9001b9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b9c0:	1e5c      	subs	r4, r3, #1
9001b9c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b9c4:	fb05 1504 	mla	r5, r5, r4, r1
9001b9c8:	142d      	asrs	r5, r5, #16
9001b9ca:	d409      	bmi.n	9001b9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b9cc:	42bd      	cmp	r5, r7
9001b9ce:	da07      	bge.n	9001b9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b9d0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b9d2:	fb05 2404 	mla	r4, r5, r4, r2
9001b9d6:	1424      	asrs	r4, r4, #16
9001b9d8:	d402      	bmi.n	9001b9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b9da:	42b4      	cmp	r4, r6
9001b9dc:	f2c0 80b1 	blt.w	9001bb42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001b9e0:	f04f 0800 	mov.w	r8, #0
9001b9e4:	eb03 0408 	add.w	r4, r3, r8
9001b9e8:	2c00      	cmp	r4, #0
9001b9ea:	dc3e      	bgt.n	9001ba6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001b9ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b9f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b9f4:	f1bb 0f00 	cmp.w	fp, #0
9001b9f8:	f340 8108 	ble.w	9001bc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b9fc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ba00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba02:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ba06:	f1bb 0b01 	subs.w	fp, fp, #1
9001ba0a:	eeb0 6a62 	vmov.f32	s12, s5
9001ba0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ba12:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ba16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ba1a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ba1e:	eeb0 6a43 	vmov.f32	s12, s6
9001ba22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ba26:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ba2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ba2e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ba32:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ba36:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ba3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ba3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ba42:	ee12 2a90 	vmov	r2, s5
9001ba46:	eef0 2a47 	vmov.f32	s5, s14
9001ba4a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ba4e:	ee13 2a10 	vmov	r2, s6
9001ba52:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ba54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba56:	eeb0 3a67 	vmov.f32	s6, s15
9001ba5a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ba5e:	9a04      	ldr	r2, [sp, #16]
9001ba60:	9314      	str	r3, [sp, #80]	@ 0x50
9001ba62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ba64:	bf08      	it	eq
9001ba66:	4613      	moveq	r3, r2
9001ba68:	e787      	b.n	9001b97a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001ba6a:	140e      	asrs	r6, r1, #16
9001ba6c:	d462      	bmi.n	9001bb34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ba6e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ba72:	42b5      	cmp	r5, r6
9001ba74:	dd5e      	ble.n	9001bb34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ba76:	1417      	asrs	r7, r2, #16
9001ba78:	d45c      	bmi.n	9001bb34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ba7a:	f8de 400c 	ldr.w	r4, [lr, #12]
9001ba7e:	42bc      	cmp	r4, r7
9001ba80:	dd58      	ble.n	9001bb34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ba82:	b22d      	sxth	r5, r5
9001ba84:	9c02      	ldr	r4, [sp, #8]
9001ba86:	fb07 6505 	mla	r5, r7, r5, r6
9001ba8a:	5d66      	ldrb	r6, [r4, r5]
9001ba8c:	2e00      	cmp	r6, #0
9001ba8e:	d051      	beq.n	9001bb34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ba90:	9c01      	ldr	r4, [sp, #4]
9001ba92:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001ba96:	f06f 0401 	mvn.w	r4, #1
9001ba9a:	fb04 f408 	mul.w	r4, r4, r8
9001ba9e:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001baa2:	5b05      	ldrh	r5, [r0, r4]
9001baa4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001baa8:	9403      	str	r4, [sp, #12]
9001baaa:	9c05      	ldr	r4, [sp, #20]
9001baac:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bab0:	4366      	muls	r6, r4
9001bab2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bab6:	1c74      	adds	r4, r6, #1
9001bab8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001babc:	122e      	asrs	r6, r5, #8
9001babe:	1224      	asrs	r4, r4, #8
9001bac0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001bac4:	00ed      	lsls	r5, r5, #3
9001bac6:	b2a7      	uxth	r7, r4
9001bac8:	43e4      	mvns	r4, r4
9001baca:	b2ed      	uxtb	r5, r5
9001bacc:	b2e4      	uxtb	r4, r4
9001bace:	fb16 f604 	smulbb	r6, r6, r4
9001bad2:	fb15 f504 	smulbb	r5, r5, r4
9001bad6:	fb0c 6c07 	mla	ip, ip, r7, r6
9001bada:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001bade:	fb1a fa04 	smulbb	sl, sl, r4
9001bae2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001bae6:	fa1f fc8c 	uxth.w	ip, ip
9001baea:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001baee:	fa5f f989 	uxtb.w	r9, r9
9001baf2:	fb06 a607 	mla	r6, r6, r7, sl
9001baf6:	f10c 0401 	add.w	r4, ip, #1
9001bafa:	fb09 5507 	mla	r5, r9, r7, r5
9001bafe:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001bb02:	9c03      	ldr	r4, [sp, #12]
9001bb04:	b2ad      	uxth	r5, r5
9001bb06:	b2b6      	uxth	r6, r6
9001bb08:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bb0c:	f105 0a01 	add.w	sl, r5, #1
9001bb10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bb14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bb18:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bb1c:	f106 0a01 	add.w	sl, r6, #1
9001bb20:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bb24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bb28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bb2c:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bb30:	f820 c004 	strh.w	ip, [r0, r4]
9001bb34:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001bb36:	f108 38ff 	add.w	r8, r8, #4294967295
9001bb3a:	4421      	add	r1, r4
9001bb3c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bb3e:	4422      	add	r2, r4
9001bb40:	e750      	b.n	9001b9e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bb42:	f04f 0900 	mov.w	r9, #0
9001bb46:	eba3 0409 	sub.w	r4, r3, r9
9001bb4a:	2c00      	cmp	r4, #0
9001bb4c:	f77f af4e 	ble.w	9001b9ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bb50:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001bb54:	140d      	asrs	r5, r1, #16
9001bb56:	1414      	asrs	r4, r2, #16
9001bb58:	fb06 5404 	mla	r4, r6, r4, r5
9001bb5c:	9d02      	ldr	r5, [sp, #8]
9001bb5e:	5d2e      	ldrb	r6, [r5, r4]
9001bb60:	2e00      	cmp	r6, #0
9001bb62:	d04c      	beq.n	9001bbfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001bb64:	9d01      	ldr	r5, [sp, #4]
9001bb66:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001bb6a:	9c05      	ldr	r4, [sp, #20]
9001bb6c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001bb70:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001bb74:	4366      	muls	r6, r4
9001bb76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bb7a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bb7e:	1c74      	adds	r4, r6, #1
9001bb80:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bb84:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001bb88:	122e      	asrs	r6, r5, #8
9001bb8a:	1224      	asrs	r4, r4, #8
9001bb8c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001bb90:	00ed      	lsls	r5, r5, #3
9001bb92:	b2a7      	uxth	r7, r4
9001bb94:	43e4      	mvns	r4, r4
9001bb96:	b2ed      	uxtb	r5, r5
9001bb98:	b2e4      	uxtb	r4, r4
9001bb9a:	fb16 f604 	smulbb	r6, r6, r4
9001bb9e:	fb15 f504 	smulbb	r5, r5, r4
9001bba2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001bba6:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001bbaa:	fb1a fa04 	smulbb	sl, sl, r4
9001bbae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bbb2:	fa1f fc8c 	uxth.w	ip, ip
9001bbb6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bbba:	fa5f f888 	uxtb.w	r8, r8
9001bbbe:	fb06 a607 	mla	r6, r6, r7, sl
9001bbc2:	f10c 0401 	add.w	r4, ip, #1
9001bbc6:	fb08 5507 	mla	r5, r8, r7, r5
9001bbca:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001bbce:	b2ad      	uxth	r5, r5
9001bbd0:	b2b6      	uxth	r6, r6
9001bbd2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bbd6:	f105 0a01 	add.w	sl, r5, #1
9001bbda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bbde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bbe2:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bbe6:	f106 0a01 	add.w	sl, r6, #1
9001bbea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bbee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bbf2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bbf6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bbfa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001bbfe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001bc00:	f109 0901 	add.w	r9, r9, #1
9001bc04:	4421      	add	r1, r4
9001bc06:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bc08:	4422      	add	r2, r4
9001bc0a:	e79c      	b.n	9001bb46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001bc0c:	b007      	add	sp, #28
9001bc0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bc12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bc12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bc16:	b085      	sub	sp, #20
9001bc18:	468b      	mov	fp, r1
9001bc1a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bc1e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001bc20:	9203      	str	r2, [sp, #12]
9001bc22:	6861      	ldr	r1, [r4, #4]
9001bc24:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001bc28:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001bc2c:	fb01 2000 	mla	r0, r1, r0, r2
9001bc30:	6822      	ldr	r2, [r4, #0]
9001bc32:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001bc36:	f8d8 2000 	ldr.w	r2, [r8]
9001bc3a:	9200      	str	r2, [sp, #0]
9001bc3c:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001bc40:	9201      	str	r2, [sp, #4]
9001bc42:	f1bb 0f00 	cmp.w	fp, #0
9001bc46:	dc03      	bgt.n	9001bc50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001bc48:	9a03      	ldr	r2, [sp, #12]
9001bc4a:	2a00      	cmp	r2, #0
9001bc4c:	f340 8146 	ble.w	9001bedc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001bc50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bc52:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001bc56:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bc5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bc5c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001bc60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bc64:	2b00      	cmp	r3, #0
9001bc66:	dd0e      	ble.n	9001bc86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001bc68:	140c      	asrs	r4, r1, #16
9001bc6a:	d405      	bmi.n	9001bc78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bc6c:	42bc      	cmp	r4, r7
9001bc6e:	da03      	bge.n	9001bc78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bc70:	1414      	asrs	r4, r2, #16
9001bc72:	d401      	bmi.n	9001bc78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bc74:	42b4      	cmp	r4, r6
9001bc76:	db07      	blt.n	9001bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bc78:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001bc7a:	3b01      	subs	r3, #1
9001bc7c:	3002      	adds	r0, #2
9001bc7e:	4421      	add	r1, r4
9001bc80:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001bc82:	4422      	add	r2, r4
9001bc84:	e7ee      	b.n	9001bc64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001bc86:	d017      	beq.n	9001bcb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001bc88:	1e5c      	subs	r4, r3, #1
9001bc8a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bc8c:	fb05 1504 	mla	r5, r5, r4, r1
9001bc90:	142d      	asrs	r5, r5, #16
9001bc92:	d409      	bmi.n	9001bca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bc94:	42bd      	cmp	r5, r7
9001bc96:	da07      	bge.n	9001bca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bc98:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bc9a:	fb05 2404 	mla	r4, r5, r4, r2
9001bc9e:	1424      	asrs	r4, r4, #16
9001bca0:	d402      	bmi.n	9001bca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bca2:	42b4      	cmp	r4, r6
9001bca4:	f2c0 80b3 	blt.w	9001be0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001bca8:	2600      	movs	r6, #0
9001bcaa:	199c      	adds	r4, r3, r6
9001bcac:	2c00      	cmp	r4, #0
9001bcae:	dc3e      	bgt.n	9001bd2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001bcb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bcb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001bcb8:	f1bb 0f00 	cmp.w	fp, #0
9001bcbc:	f340 810e 	ble.w	9001bedc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001bcc0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bcc4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bcc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bcca:	f1bb 0b01 	subs.w	fp, fp, #1
9001bcce:	eeb0 6a62 	vmov.f32	s12, s5
9001bcd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bcd6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bcda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bcde:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bce2:	eeb0 6a43 	vmov.f32	s12, s6
9001bce6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bcea:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bcee:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bcf2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bcf6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bcfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bcfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bd02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bd06:	ee12 2a90 	vmov	r2, s5
9001bd0a:	eef0 2a47 	vmov.f32	s5, s14
9001bd0e:	fb92 f3f3 	sdiv	r3, r2, r3
9001bd12:	ee13 2a10 	vmov	r2, s6
9001bd16:	9311      	str	r3, [sp, #68]	@ 0x44
9001bd18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bd1a:	eeb0 3a67 	vmov.f32	s6, s15
9001bd1e:	fb92 f3f3 	sdiv	r3, r2, r3
9001bd22:	9a03      	ldr	r2, [sp, #12]
9001bd24:	9312      	str	r3, [sp, #72]	@ 0x48
9001bd26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bd28:	bf08      	it	eq
9001bd2a:	4613      	moveq	r3, r2
9001bd2c:	e789      	b.n	9001bc42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bd2e:	140f      	asrs	r7, r1, #16
9001bd30:	d418      	bmi.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bd32:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001bd36:	42bd      	cmp	r5, r7
9001bd38:	dd14      	ble.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bd3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bd3e:	d411      	bmi.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bd40:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001bd44:	4564      	cmp	r4, ip
9001bd46:	dd0d      	ble.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bd48:	b22d      	sxth	r5, r5
9001bd4a:	9c01      	ldr	r4, [sp, #4]
9001bd4c:	fb0c 7505 	mla	r5, ip, r5, r7
9001bd50:	5d64      	ldrb	r4, [r4, r5]
9001bd52:	2cff      	cmp	r4, #255	@ 0xff
9001bd54:	d10c      	bne.n	9001bd70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001bd56:	9c00      	ldr	r4, [sp, #0]
9001bd58:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001bd5c:	f06f 0401 	mvn.w	r4, #1
9001bd60:	4374      	muls	r4, r6
9001bd62:	5305      	strh	r5, [r0, r4]
9001bd64:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001bd66:	3e01      	subs	r6, #1
9001bd68:	4421      	add	r1, r4
9001bd6a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001bd6c:	4422      	add	r2, r4
9001bd6e:	e79c      	b.n	9001bcaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bd70:	2c00      	cmp	r4, #0
9001bd72:	d0f7      	beq.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bd74:	9f00      	ldr	r7, [sp, #0]
9001bd76:	fa1f fc84 	uxth.w	ip, r4
9001bd7a:	43e4      	mvns	r4, r4
9001bd7c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001bd80:	f06f 0501 	mvn.w	r5, #1
9001bd84:	b2e4      	uxtb	r4, r4
9001bd86:	4375      	muls	r5, r6
9001bd88:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001bd8c:	9502      	str	r5, [sp, #8]
9001bd8e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001bd92:	5b45      	ldrh	r5, [r0, r5]
9001bd94:	122f      	asrs	r7, r5, #8
9001bd96:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bd9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bd9e:	00ed      	lsls	r5, r5, #3
9001bda0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bda4:	fb17 f704 	smulbb	r7, r7, r4
9001bda8:	b2ed      	uxtb	r5, r5
9001bdaa:	fb1a fa04 	smulbb	sl, sl, r4
9001bdae:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001bdb2:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001bdb6:	fb15 f504 	smulbb	r5, r5, r4
9001bdba:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001bdbe:	fa1f fe8e 	uxth.w	lr, lr
9001bdc2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bdc6:	fa5f f989 	uxtb.w	r9, r9
9001bdca:	fb07 a70c 	mla	r7, r7, ip, sl
9001bdce:	f10e 0401 	add.w	r4, lr, #1
9001bdd2:	fb09 550c 	mla	r5, r9, ip, r5
9001bdd6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001bdda:	9c02      	ldr	r4, [sp, #8]
9001bddc:	b2ad      	uxth	r5, r5
9001bdde:	b2bf      	uxth	r7, r7
9001bde0:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001bde4:	f105 0a01 	add.w	sl, r5, #1
9001bde8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bdec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bdf0:	ea4a 0e0e 	orr.w	lr, sl, lr
9001bdf4:	f107 0a01 	add.w	sl, r7, #1
9001bdf8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bdfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001be00:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001be04:	ea4e 0e0a 	orr.w	lr, lr, sl
9001be08:	f820 e004 	strh.w	lr, [r0, r4]
9001be0c:	e7aa      	b.n	9001bd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001be0e:	f04f 0900 	mov.w	r9, #0
9001be12:	eba3 0409 	sub.w	r4, r3, r9
9001be16:	2c00      	cmp	r4, #0
9001be18:	f77f af4a 	ble.w	9001bcb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001be1c:	1414      	asrs	r4, r2, #16
9001be1e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001be22:	140d      	asrs	r5, r1, #16
9001be24:	fb06 5504 	mla	r5, r6, r4, r5
9001be28:	9c01      	ldr	r4, [sp, #4]
9001be2a:	5d64      	ldrb	r4, [r4, r5]
9001be2c:	2cff      	cmp	r4, #255	@ 0xff
9001be2e:	d10b      	bne.n	9001be48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001be30:	9c00      	ldr	r4, [sp, #0]
9001be32:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001be36:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001be3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001be3c:	f109 0901 	add.w	r9, r9, #1
9001be40:	4421      	add	r1, r4
9001be42:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001be44:	4422      	add	r2, r4
9001be46:	e7e4      	b.n	9001be12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001be48:	2c00      	cmp	r4, #0
9001be4a:	d0f6      	beq.n	9001be3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001be4c:	9e00      	ldr	r6, [sp, #0]
9001be4e:	b2a7      	uxth	r7, r4
9001be50:	43e4      	mvns	r4, r4
9001be52:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001be56:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001be5a:	b2e4      	uxtb	r4, r4
9001be5c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001be60:	122e      	asrs	r6, r5, #8
9001be62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001be66:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001be6a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001be6e:	00ed      	lsls	r5, r5, #3
9001be70:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001be74:	fb16 f604 	smulbb	r6, r6, r4
9001be78:	b2ed      	uxtb	r5, r5
9001be7a:	fb1a fa04 	smulbb	sl, sl, r4
9001be7e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001be82:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001be86:	fb15 f504 	smulbb	r5, r5, r4
9001be8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001be8e:	fa1f fc8c 	uxth.w	ip, ip
9001be92:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001be96:	fa5f fe8e 	uxtb.w	lr, lr
9001be9a:	fb06 a607 	mla	r6, r6, r7, sl
9001be9e:	f10c 0401 	add.w	r4, ip, #1
9001bea2:	fb0e 5507 	mla	r5, lr, r7, r5
9001bea6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001beaa:	b2ad      	uxth	r5, r5
9001beac:	b2b6      	uxth	r6, r6
9001beae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001beb2:	f105 0a01 	add.w	sl, r5, #1
9001beb6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001beba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bebe:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bec2:	f106 0a01 	add.w	sl, r6, #1
9001bec6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001beca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bece:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bed2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bed6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001beda:	e7ae      	b.n	9001be3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001bedc:	b005      	add	sp, #20
9001bede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bee2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bee2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bee6:	b085      	sub	sp, #20
9001bee8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001beea:	9203      	str	r2, [sp, #12]
9001beec:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001bef0:	9100      	str	r1, [sp, #0]
9001bef2:	9201      	str	r2, [sp, #4]
9001bef4:	6841      	ldr	r1, [r0, #4]
9001bef6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001befa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001befe:	fb01 2404 	mla	r4, r1, r4, r2
9001bf02:	6802      	ldr	r2, [r0, #0]
9001bf04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bf08:	f8de 2000 	ldr.w	r2, [lr]
9001bf0c:	9202      	str	r2, [sp, #8]
9001bf0e:	9a01      	ldr	r2, [sp, #4]
9001bf10:	43d6      	mvns	r6, r2
9001bf12:	b2f6      	uxtb	r6, r6
9001bf14:	9a00      	ldr	r2, [sp, #0]
9001bf16:	2a00      	cmp	r2, #0
9001bf18:	dc03      	bgt.n	9001bf22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001bf1a:	9a03      	ldr	r2, [sp, #12]
9001bf1c:	2a00      	cmp	r2, #0
9001bf1e:	f340 8124 	ble.w	9001c16a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001bf22:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bf24:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001bf28:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bf2c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bf2e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001bf32:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bf36:	2b00      	cmp	r3, #0
9001bf38:	dd0e      	ble.n	9001bf58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bf3a:	1408      	asrs	r0, r1, #16
9001bf3c:	d405      	bmi.n	9001bf4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bf3e:	4560      	cmp	r0, ip
9001bf40:	da03      	bge.n	9001bf4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bf42:	1410      	asrs	r0, r2, #16
9001bf44:	d401      	bmi.n	9001bf4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bf46:	42b8      	cmp	r0, r7
9001bf48:	db07      	blt.n	9001bf5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001bf4a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bf4c:	3b01      	subs	r3, #1
9001bf4e:	3402      	adds	r4, #2
9001bf50:	4401      	add	r1, r0
9001bf52:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bf54:	4402      	add	r2, r0
9001bf56:	e7ee      	b.n	9001bf36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001bf58:	d06e      	beq.n	9001c038 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001bf5a:	1e58      	subs	r0, r3, #1
9001bf5c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bf5e:	fb05 1500 	mla	r5, r5, r0, r1
9001bf62:	142d      	asrs	r5, r5, #16
9001bf64:	d45c      	bmi.n	9001c020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bf66:	4565      	cmp	r5, ip
9001bf68:	da5a      	bge.n	9001c020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bf6a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bf6c:	fb05 2000 	mla	r0, r5, r0, r2
9001bf70:	1400      	asrs	r0, r0, #16
9001bf72:	d455      	bmi.n	9001c020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bf74:	42b8      	cmp	r0, r7
9001bf76:	da53      	bge.n	9001c020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bf78:	4699      	mov	r9, r3
9001bf7a:	46a2      	mov	sl, r4
9001bf7c:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001bf80:	f1b9 0f00 	cmp.w	r9, #0
9001bf84:	dd54      	ble.n	9001c030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bf86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001bf8a:	140d      	asrs	r5, r1, #16
9001bf8c:	1410      	asrs	r0, r2, #16
9001bf8e:	f109 39ff 	add.w	r9, r9, #4294967295
9001bf92:	fb07 5000 	mla	r0, r7, r0, r5
9001bf96:	9d02      	ldr	r5, [sp, #8]
9001bf98:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001bf9c:	f8ba 5000 	ldrh.w	r5, [sl]
9001bfa0:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bfa4:	122f      	asrs	r7, r5, #8
9001bfa6:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001bfaa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bfae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bfb2:	00ed      	lsls	r5, r5, #3
9001bfb4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001bfb8:	fb17 f706 	smulbb	r7, r7, r6
9001bfbc:	b2ed      	uxtb	r5, r5
9001bfbe:	fb18 f806 	smulbb	r8, r8, r6
9001bfc2:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001bfc6:	10c7      	asrs	r7, r0, #3
9001bfc8:	fb15 f506 	smulbb	r5, r5, r6
9001bfcc:	00c0      	lsls	r0, r0, #3
9001bfce:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bfd2:	fa1f fc8c 	uxth.w	ip, ip
9001bfd6:	b2c0      	uxtb	r0, r0
9001bfd8:	fb07 870b 	mla	r7, r7, fp, r8
9001bfdc:	fb00 500b 	mla	r0, r0, fp, r5
9001bfe0:	f10c 0501 	add.w	r5, ip, #1
9001bfe4:	b2bf      	uxth	r7, r7
9001bfe6:	b280      	uxth	r0, r0
9001bfe8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bfec:	f107 0801 	add.w	r8, r7, #1
9001bff0:	1c45      	adds	r5, r0, #1
9001bff2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001bff6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bffa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bffe:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c000:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c004:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c008:	4401      	add	r1, r0
9001c00a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001c00e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c010:	ea45 0c0c 	orr.w	ip, r5, ip
9001c014:	4402      	add	r2, r0
9001c016:	ea4c 0c08 	orr.w	ip, ip, r8
9001c01a:	f82a cb02 	strh.w	ip, [sl], #2
9001c01e:	e7af      	b.n	9001bf80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c020:	f04f 0800 	mov.w	r8, #0
9001c024:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001c028:	eb03 0008 	add.w	r0, r3, r8
9001c02c:	2800      	cmp	r0, #0
9001c02e:	dc41      	bgt.n	9001c0b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001c030:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c034:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c038:	9b00      	ldr	r3, [sp, #0]
9001c03a:	2b00      	cmp	r3, #0
9001c03c:	f340 8095 	ble.w	9001c16a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c040:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c044:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c046:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c04a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c04e:	eef0 6a62 	vmov.f32	s13, s5
9001c052:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c056:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c05a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c05e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001c062:	eef0 6a43 	vmov.f32	s13, s6
9001c066:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c06a:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001c06e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c072:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c076:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c07a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c07e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c082:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c086:	ee12 2a90 	vmov	r2, s5
9001c08a:	eef0 2a47 	vmov.f32	s5, s14
9001c08e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c092:	ee13 2a10 	vmov	r2, s6
9001c096:	9311      	str	r3, [sp, #68]	@ 0x44
9001c098:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c09a:	eeb0 3a67 	vmov.f32	s6, s15
9001c09e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c0a2:	9312      	str	r3, [sp, #72]	@ 0x48
9001c0a4:	9b00      	ldr	r3, [sp, #0]
9001c0a6:	9a03      	ldr	r2, [sp, #12]
9001c0a8:	3b01      	subs	r3, #1
9001c0aa:	9300      	str	r3, [sp, #0]
9001c0ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c0ae:	bf08      	it	eq
9001c0b0:	4613      	moveq	r3, r2
9001c0b2:	e72f      	b.n	9001bf14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c0b4:	140f      	asrs	r7, r1, #16
9001c0b6:	d451      	bmi.n	9001c15c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c0b8:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c0bc:	42bd      	cmp	r5, r7
9001c0be:	dd4d      	ble.n	9001c15c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c0c0:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c0c4:	d44a      	bmi.n	9001c15c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c0c6:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c0ca:	4560      	cmp	r0, ip
9001c0cc:	dd46      	ble.n	9001c15c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c0ce:	b22d      	sxth	r5, r5
9001c0d0:	9802      	ldr	r0, [sp, #8]
9001c0d2:	fb0c 7505 	mla	r5, ip, r5, r7
9001c0d6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001c0da:	f06f 0501 	mvn.w	r5, #1
9001c0de:	fb05 fb08 	mul.w	fp, r5, r8
9001c0e2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c0e6:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c0ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c0ee:	122f      	asrs	r7, r5, #8
9001c0f0:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c0f4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c0f8:	00ed      	lsls	r5, r5, #3
9001c0fa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c0fe:	fb17 f706 	smulbb	r7, r7, r6
9001c102:	b2ed      	uxtb	r5, r5
9001c104:	fb19 f906 	smulbb	r9, r9, r6
9001c108:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c10c:	10c7      	asrs	r7, r0, #3
9001c10e:	fb15 f506 	smulbb	r5, r5, r6
9001c112:	00c0      	lsls	r0, r0, #3
9001c114:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c118:	fa1f fc8c 	uxth.w	ip, ip
9001c11c:	b2c0      	uxtb	r0, r0
9001c11e:	fb07 970a 	mla	r7, r7, sl, r9
9001c122:	fb00 500a 	mla	r0, r0, sl, r5
9001c126:	f10c 0501 	add.w	r5, ip, #1
9001c12a:	b2bf      	uxth	r7, r7
9001c12c:	b280      	uxth	r0, r0
9001c12e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c132:	f107 0901 	add.w	r9, r7, #1
9001c136:	1c45      	adds	r5, r0, #1
9001c138:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c13c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c140:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c144:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c148:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c14c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c150:	ea45 0c0c 	orr.w	ip, r5, ip
9001c154:	ea4c 0c09 	orr.w	ip, ip, r9
9001c158:	f824 c00b 	strh.w	ip, [r4, fp]
9001c15c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c15e:	f108 38ff 	add.w	r8, r8, #4294967295
9001c162:	4401      	add	r1, r0
9001c164:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c166:	4402      	add	r2, r0
9001c168:	e75e      	b.n	9001c028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001c16a:	b005      	add	sp, #20
9001c16c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c170 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c174:	b085      	sub	sp, #20
9001c176:	4693      	mov	fp, r2
9001c178:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c17c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c17e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c180:	6870      	ldr	r0, [r6, #4]
9001c182:	9101      	str	r1, [sp, #4]
9001c184:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c188:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001c18c:	fb00 2404 	mla	r4, r0, r4, r2
9001c190:	6832      	ldr	r2, [r6, #0]
9001c192:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c196:	682a      	ldr	r2, [r5, #0]
9001c198:	9202      	str	r2, [sp, #8]
9001c19a:	9a01      	ldr	r2, [sp, #4]
9001c19c:	2a00      	cmp	r2, #0
9001c19e:	dc03      	bgt.n	9001c1a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c1a0:	f1bb 0f00 	cmp.w	fp, #0
9001c1a4:	f340 809a 	ble.w	9001c2dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c1a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c1aa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c1ae:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c1b2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c1b4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c1b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c1bc:	2b00      	cmp	r3, #0
9001c1be:	dd0c      	ble.n	9001c1da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001c1c0:	1406      	asrs	r6, r0, #16
9001c1c2:	d405      	bmi.n	9001c1d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c1c4:	454e      	cmp	r6, r9
9001c1c6:	da03      	bge.n	9001c1d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c1c8:	1416      	asrs	r6, r2, #16
9001c1ca:	d401      	bmi.n	9001c1d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c1cc:	4546      	cmp	r6, r8
9001c1ce:	db05      	blt.n	9001c1dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c1d0:	4470      	add	r0, lr
9001c1d2:	4462      	add	r2, ip
9001c1d4:	3b01      	subs	r3, #1
9001c1d6:	3402      	adds	r4, #2
9001c1d8:	e7f0      	b.n	9001c1bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c1da:	d00f      	beq.n	9001c1fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001c1dc:	1e5e      	subs	r6, r3, #1
9001c1de:	fb0e 0706 	mla	r7, lr, r6, r0
9001c1e2:	143f      	asrs	r7, r7, #16
9001c1e4:	d541      	bpl.n	9001c26a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001c1e6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c1ea:	4698      	mov	r8, r3
9001c1ec:	9603      	str	r6, [sp, #12]
9001c1ee:	f1b8 0f00 	cmp.w	r8, #0
9001c1f2:	dc56      	bgt.n	9001c2a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001c1f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c1f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c1fc:	9b01      	ldr	r3, [sp, #4]
9001c1fe:	2b00      	cmp	r3, #0
9001c200:	dd6c      	ble.n	9001c2dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c202:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c206:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c208:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c20c:	eeb0 6a62 	vmov.f32	s12, s5
9001c210:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c214:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c218:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c21c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c220:	eeb0 6a43 	vmov.f32	s12, s6
9001c224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c228:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c22c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c230:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c234:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c238:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c23c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c240:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c244:	ee12 2a90 	vmov	r2, s5
9001c248:	eef0 2a47 	vmov.f32	s5, s14
9001c24c:	fb92 fef3 	sdiv	lr, r2, r3
9001c250:	ee13 2a10 	vmov	r2, s6
9001c254:	eeb0 3a67 	vmov.f32	s6, s15
9001c258:	fb92 fcf3 	sdiv	ip, r2, r3
9001c25c:	9b01      	ldr	r3, [sp, #4]
9001c25e:	3b01      	subs	r3, #1
9001c260:	9301      	str	r3, [sp, #4]
9001c262:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c264:	bf08      	it	eq
9001c266:	465b      	moveq	r3, fp
9001c268:	e797      	b.n	9001c19a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c26a:	454f      	cmp	r7, r9
9001c26c:	dabb      	bge.n	9001c1e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c26e:	fb0c 2606 	mla	r6, ip, r6, r2
9001c272:	1436      	asrs	r6, r6, #16
9001c274:	d4b7      	bmi.n	9001c1e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c276:	4546      	cmp	r6, r8
9001c278:	dab5      	bge.n	9001c1e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c27a:	461e      	mov	r6, r3
9001c27c:	46a0      	mov	r8, r4
9001c27e:	2e00      	cmp	r6, #0
9001c280:	ddb8      	ble.n	9001c1f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c282:	1417      	asrs	r7, r2, #16
9001c284:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c288:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c28c:	9902      	ldr	r1, [sp, #8]
9001c28e:	4470      	add	r0, lr
9001c290:	4462      	add	r2, ip
9001c292:	fb0a 9707 	mla	r7, sl, r7, r9
9001c296:	3e01      	subs	r6, #1
9001c298:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c29c:	f828 7b02 	strh.w	r7, [r8], #2
9001c2a0:	e7ed      	b.n	9001c27e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001c2a2:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c2a6:	d414      	bmi.n	9001c2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c2a8:	68ae      	ldr	r6, [r5, #8]
9001c2aa:	454e      	cmp	r6, r9
9001c2ac:	dd11      	ble.n	9001c2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c2ae:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c2b2:	d40e      	bmi.n	9001c2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c2b4:	68ef      	ldr	r7, [r5, #12]
9001c2b6:	4557      	cmp	r7, sl
9001c2b8:	dd0b      	ble.n	9001c2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c2ba:	b236      	sxth	r6, r6
9001c2bc:	f06f 0101 	mvn.w	r1, #1
9001c2c0:	9f02      	ldr	r7, [sp, #8]
9001c2c2:	fb0a 9606 	mla	r6, sl, r6, r9
9001c2c6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c2ca:	fb01 f608 	mul.w	r6, r1, r8
9001c2ce:	9903      	ldr	r1, [sp, #12]
9001c2d0:	538f      	strh	r7, [r1, r6]
9001c2d2:	4470      	add	r0, lr
9001c2d4:	4462      	add	r2, ip
9001c2d6:	f108 38ff 	add.w	r8, r8, #4294967295
9001c2da:	e788      	b.n	9001c1ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c2dc:	b005      	add	sp, #20
9001c2de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c2e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c2e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c2e6:	b087      	sub	sp, #28
9001c2e8:	468b      	mov	fp, r1
9001c2ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c2ee:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c2f0:	9203      	str	r2, [sp, #12]
9001c2f2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c2f6:	6841      	ldr	r1, [r0, #4]
9001c2f8:	9204      	str	r2, [sp, #16]
9001c2fa:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c2fe:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001c302:	fb01 2505 	mla	r5, r1, r5, r2
9001c306:	6802      	ldr	r2, [r0, #0]
9001c308:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001c30c:	f8d9 2000 	ldr.w	r2, [r9]
9001c310:	9201      	str	r2, [sp, #4]
9001c312:	f1bb 0f00 	cmp.w	fp, #0
9001c316:	dc03      	bgt.n	9001c320 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c318:	9a03      	ldr	r2, [sp, #12]
9001c31a:	2a00      	cmp	r2, #0
9001c31c:	f340 8158 	ble.w	9001c5d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c320:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c322:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c326:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c32a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c32c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c330:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c334:	2b00      	cmp	r3, #0
9001c336:	dd0e      	ble.n	9001c356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c338:	1402      	asrs	r2, r0, #16
9001c33a:	d405      	bmi.n	9001c348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c33c:	42ba      	cmp	r2, r7
9001c33e:	da03      	bge.n	9001c348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c340:	140a      	asrs	r2, r1, #16
9001c342:	d401      	bmi.n	9001c348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c344:	42b2      	cmp	r2, r6
9001c346:	db07      	blt.n	9001c358 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c348:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c34a:	3b01      	subs	r3, #1
9001c34c:	3502      	adds	r5, #2
9001c34e:	4410      	add	r0, r2
9001c350:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c352:	4411      	add	r1, r2
9001c354:	e7ee      	b.n	9001c334 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c356:	d017      	beq.n	9001c388 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c358:	1e5a      	subs	r2, r3, #1
9001c35a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c35c:	fb04 0402 	mla	r4, r4, r2, r0
9001c360:	1424      	asrs	r4, r4, #16
9001c362:	d409      	bmi.n	9001c378 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c364:	42bc      	cmp	r4, r7
9001c366:	da07      	bge.n	9001c378 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c368:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c36a:	fb04 1202 	mla	r2, r4, r2, r1
9001c36e:	1412      	asrs	r2, r2, #16
9001c370:	d402      	bmi.n	9001c378 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c372:	42b2      	cmp	r2, r6
9001c374:	f2c0 80bf 	blt.w	9001c4f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c378:	2700      	movs	r7, #0
9001c37a:	19da      	adds	r2, r3, r7
9001c37c:	2a00      	cmp	r2, #0
9001c37e:	dc3e      	bgt.n	9001c3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c384:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c388:	f1bb 0f00 	cmp.w	fp, #0
9001c38c:	f340 8120 	ble.w	9001c5d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c390:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c394:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c396:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c39a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c39e:	eeb0 6a62 	vmov.f32	s12, s5
9001c3a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c3a6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c3aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c3ae:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c3b2:	eeb0 6a43 	vmov.f32	s12, s6
9001c3b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c3ba:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c3be:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c3c2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c3c6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c3ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c3ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c3d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c3d6:	ee12 2a90 	vmov	r2, s5
9001c3da:	eef0 2a47 	vmov.f32	s5, s14
9001c3de:	fb92 f3f3 	sdiv	r3, r2, r3
9001c3e2:	ee13 2a10 	vmov	r2, s6
9001c3e6:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c3e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c3ea:	eeb0 3a67 	vmov.f32	s6, s15
9001c3ee:	fb92 f3f3 	sdiv	r3, r2, r3
9001c3f2:	9a03      	ldr	r2, [sp, #12]
9001c3f4:	9314      	str	r3, [sp, #80]	@ 0x50
9001c3f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c3f8:	bf08      	it	eq
9001c3fa:	4613      	moveq	r3, r2
9001c3fc:	e789      	b.n	9001c312 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c3fe:	1406      	asrs	r6, r0, #16
9001c400:	d42d      	bmi.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c402:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001c406:	42b4      	cmp	r4, r6
9001c408:	dd29      	ble.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c40a:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001c40e:	d426      	bmi.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c410:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c414:	4562      	cmp	r2, ip
9001c416:	dd22      	ble.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c418:	b224      	sxth	r4, r4
9001c41a:	9a01      	ldr	r2, [sp, #4]
9001c41c:	fb0c 6404 	mla	r4, ip, r4, r6
9001c420:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001c424:	0e22      	lsrs	r2, r4, #24
9001c426:	d01a      	beq.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c428:	9e04      	ldr	r6, [sp, #16]
9001c42a:	4372      	muls	r2, r6
9001c42c:	1c56      	adds	r6, r2, #1
9001c42e:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c432:	0a26      	lsrs	r6, r4, #8
9001c434:	1212      	asrs	r2, r2, #8
9001c436:	9605      	str	r6, [sp, #20]
9001c438:	2aff      	cmp	r2, #255	@ 0xff
9001c43a:	d116      	bne.n	9001c46a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001c43c:	f06f 0201 	mvn.w	r2, #1
9001c440:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c444:	fb02 fc07 	mul.w	ip, r2, r7
9001c448:	0962      	lsrs	r2, r4, #5
9001c44a:	f026 0607 	bic.w	r6, r6, #7
9001c44e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c452:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c456:	4316      	orrs	r6, r2
9001c458:	4326      	orrs	r6, r4
9001c45a:	f825 600c 	strh.w	r6, [r5, ip]
9001c45e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c460:	3f01      	subs	r7, #1
9001c462:	4410      	add	r0, r2
9001c464:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c466:	4411      	add	r1, r2
9001c468:	e787      	b.n	9001c37a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c46a:	f06f 0601 	mvn.w	r6, #1
9001c46e:	fa1f fa82 	uxth.w	sl, r2
9001c472:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001c476:	43d2      	mvns	r2, r2
9001c478:	437e      	muls	r6, r7
9001c47a:	b2e4      	uxtb	r4, r4
9001c47c:	fb1c fc0a 	smulbb	ip, ip, sl
9001c480:	b2d2      	uxtb	r2, r2
9001c482:	f835 8006 	ldrh.w	r8, [r5, r6]
9001c486:	fb14 f40a 	smulbb	r4, r4, sl
9001c48a:	9602      	str	r6, [sp, #8]
9001c48c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c490:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c494:	fb16 f60a 	smulbb	r6, r6, sl
9001c498:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c49c:	fb0e ce02 	mla	lr, lr, r2, ip
9001c4a0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c4a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c4a8:	fa1f fe8e 	uxth.w	lr, lr
9001c4ac:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c4b0:	fa5f f888 	uxtb.w	r8, r8
9001c4b4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c4b8:	fb08 4402 	mla	r4, r8, r2, r4
9001c4bc:	f10e 0201 	add.w	r2, lr, #1
9001c4c0:	fa1f fc8c 	uxth.w	ip, ip
9001c4c4:	b2a4      	uxth	r4, r4
9001c4c6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c4ca:	9a02      	ldr	r2, [sp, #8]
9001c4cc:	1c66      	adds	r6, r4, #1
9001c4ce:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c4d2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001c4d6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c4da:	ea46 0e0e 	orr.w	lr, r6, lr
9001c4de:	f10c 0601 	add.w	r6, ip, #1
9001c4e2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c4e6:	0976      	lsrs	r6, r6, #5
9001c4e8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c4ec:	ea4e 0e06 	orr.w	lr, lr, r6
9001c4f0:	f825 e002 	strh.w	lr, [r5, r2]
9001c4f4:	e7b3      	b.n	9001c45e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c4f6:	f04f 0800 	mov.w	r8, #0
9001c4fa:	eba3 0208 	sub.w	r2, r3, r8
9001c4fe:	2a00      	cmp	r2, #0
9001c500:	f77f af3e 	ble.w	9001c380 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c504:	1404      	asrs	r4, r0, #16
9001c506:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001c50a:	140a      	asrs	r2, r1, #16
9001c50c:	fb06 4202 	mla	r2, r6, r2, r4
9001c510:	9c01      	ldr	r4, [sp, #4]
9001c512:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001c516:	0e22      	lsrs	r2, r4, #24
9001c518:	d015      	beq.n	9001c546 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001c51a:	9e04      	ldr	r6, [sp, #16]
9001c51c:	4372      	muls	r2, r6
9001c51e:	1c56      	adds	r6, r2, #1
9001c520:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c524:	0a26      	lsrs	r6, r4, #8
9001c526:	1212      	asrs	r2, r2, #8
9001c528:	2aff      	cmp	r2, #255	@ 0xff
9001c52a:	d113      	bne.n	9001c554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001c52c:	0962      	lsrs	r2, r4, #5
9001c52e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c532:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c536:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c53a:	f026 0607 	bic.w	r6, r6, #7
9001c53e:	4316      	orrs	r6, r2
9001c540:	4326      	orrs	r6, r4
9001c542:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001c546:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c548:	f108 0801 	add.w	r8, r8, #1
9001c54c:	4410      	add	r0, r2
9001c54e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c550:	4411      	add	r1, r2
9001c552:	e7d2      	b.n	9001c4fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001c554:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001c558:	fa1f fa82 	uxth.w	sl, r2
9001c55c:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001c560:	43d2      	mvns	r2, r2
9001c562:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c566:	fb17 f70a 	smulbb	r7, r7, sl
9001c56a:	b2d2      	uxtb	r2, r2
9001c56c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c570:	b2e4      	uxtb	r4, r4
9001c572:	b2f6      	uxtb	r6, r6
9001c574:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c578:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c57c:	fb14 f40a 	smulbb	r4, r4, sl
9001c580:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c584:	fa1f fc8c 	uxth.w	ip, ip
9001c588:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c58c:	fb16 f60a 	smulbb	r6, r6, sl
9001c590:	fa5f fe8e 	uxtb.w	lr, lr
9001c594:	fb0e 4402 	mla	r4, lr, r2, r4
9001c598:	fb07 6702 	mla	r7, r7, r2, r6
9001c59c:	f10c 0201 	add.w	r2, ip, #1
9001c5a0:	b2a4      	uxth	r4, r4
9001c5a2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c5a6:	1c66      	adds	r6, r4, #1
9001c5a8:	b2bf      	uxth	r7, r7
9001c5aa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c5ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001c5b2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c5b6:	ea46 0c0c 	orr.w	ip, r6, ip
9001c5ba:	1c7e      	adds	r6, r7, #1
9001c5bc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c5c0:	0976      	lsrs	r6, r6, #5
9001c5c2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c5c6:	ea4c 0c06 	orr.w	ip, ip, r6
9001c5ca:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001c5ce:	e7ba      	b.n	9001c546 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001c5d0:	b007      	add	sp, #28
9001c5d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c5d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c5dc:	b085      	sub	sp, #20
9001c5de:	468b      	mov	fp, r1
9001c5e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c5e4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c5e6:	9203      	str	r2, [sp, #12]
9001c5e8:	6841      	ldr	r1, [r0, #4]
9001c5ea:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001c5ee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c5f2:	fb01 2404 	mla	r4, r1, r4, r2
9001c5f6:	6802      	ldr	r2, [r0, #0]
9001c5f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c5fc:	f8d8 2000 	ldr.w	r2, [r8]
9001c600:	9201      	str	r2, [sp, #4]
9001c602:	f1bb 0f00 	cmp.w	fp, #0
9001c606:	dc03      	bgt.n	9001c610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c608:	9a03      	ldr	r2, [sp, #12]
9001c60a:	2a00      	cmp	r2, #0
9001c60c:	f340 814f 	ble.w	9001c8ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c610:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c612:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c616:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c61a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c61c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c620:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c624:	2b00      	cmp	r3, #0
9001c626:	dd0e      	ble.n	9001c646 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c628:	1408      	asrs	r0, r1, #16
9001c62a:	d405      	bmi.n	9001c638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c62c:	42b8      	cmp	r0, r7
9001c62e:	da03      	bge.n	9001c638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c630:	1410      	asrs	r0, r2, #16
9001c632:	d401      	bmi.n	9001c638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c634:	42b0      	cmp	r0, r6
9001c636:	db07      	blt.n	9001c648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c638:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c63a:	3b01      	subs	r3, #1
9001c63c:	3402      	adds	r4, #2
9001c63e:	4401      	add	r1, r0
9001c640:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c642:	4402      	add	r2, r0
9001c644:	e7ee      	b.n	9001c624 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c646:	d017      	beq.n	9001c678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c648:	1e58      	subs	r0, r3, #1
9001c64a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c64c:	fb05 1500 	mla	r5, r5, r0, r1
9001c650:	142d      	asrs	r5, r5, #16
9001c652:	d409      	bmi.n	9001c668 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c654:	42bd      	cmp	r5, r7
9001c656:	da07      	bge.n	9001c668 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c658:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c65a:	fb05 2000 	mla	r0, r5, r0, r2
9001c65e:	1400      	asrs	r0, r0, #16
9001c660:	d402      	bmi.n	9001c668 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c662:	42b0      	cmp	r0, r6
9001c664:	f2c0 80ba 	blt.w	9001c7dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001c668:	2600      	movs	r6, #0
9001c66a:	1998      	adds	r0, r3, r6
9001c66c:	2800      	cmp	r0, #0
9001c66e:	dc3e      	bgt.n	9001c6ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001c670:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c674:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c678:	f1bb 0f00 	cmp.w	fp, #0
9001c67c:	f340 8117 	ble.w	9001c8ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c680:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c684:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c686:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c68a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c68e:	eeb0 6a62 	vmov.f32	s12, s5
9001c692:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c696:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c69a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c69e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c6a2:	eeb0 6a43 	vmov.f32	s12, s6
9001c6a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c6aa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c6ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c6b2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c6b6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c6ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c6be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c6c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c6c6:	ee12 2a90 	vmov	r2, s5
9001c6ca:	eef0 2a47 	vmov.f32	s5, s14
9001c6ce:	fb92 f3f3 	sdiv	r3, r2, r3
9001c6d2:	ee13 2a10 	vmov	r2, s6
9001c6d6:	9311      	str	r3, [sp, #68]	@ 0x44
9001c6d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c6da:	eeb0 3a67 	vmov.f32	s6, s15
9001c6de:	fb92 f3f3 	sdiv	r3, r2, r3
9001c6e2:	9a03      	ldr	r2, [sp, #12]
9001c6e4:	9312      	str	r3, [sp, #72]	@ 0x48
9001c6e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c6e8:	bf08      	it	eq
9001c6ea:	4613      	moveq	r3, r2
9001c6ec:	e789      	b.n	9001c602 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c6ee:	140f      	asrs	r7, r1, #16
9001c6f0:	d424      	bmi.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c6f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c6f6:	42bd      	cmp	r5, r7
9001c6f8:	dd20      	ble.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c6fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c6fe:	d41d      	bmi.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c700:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001c704:	4560      	cmp	r0, ip
9001c706:	dd19      	ble.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c708:	b22d      	sxth	r5, r5
9001c70a:	9801      	ldr	r0, [sp, #4]
9001c70c:	fb0c 7505 	mla	r5, ip, r5, r7
9001c710:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001c714:	0e07      	lsrs	r7, r0, #24
9001c716:	2fff      	cmp	r7, #255	@ 0xff
9001c718:	d116      	bne.n	9001c748 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c71a:	f06f 0501 	mvn.w	r5, #1
9001c71e:	fb05 f706 	mul.w	r7, r5, r6
9001c722:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001c726:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c72a:	0945      	lsrs	r5, r0, #5
9001c72c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c730:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c734:	ea4c 0505 	orr.w	r5, ip, r5
9001c738:	4305      	orrs	r5, r0
9001c73a:	53e5      	strh	r5, [r4, r7]
9001c73c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c73e:	3e01      	subs	r6, #1
9001c740:	4401      	add	r1, r0
9001c742:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c744:	4402      	add	r2, r0
9001c746:	e790      	b.n	9001c66a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c748:	b2fd      	uxtb	r5, r7
9001c74a:	2f00      	cmp	r7, #0
9001c74c:	d0f6      	beq.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c74e:	f06f 0701 	mvn.w	r7, #1
9001c752:	fa1f f985 	uxth.w	r9, r5
9001c756:	43ed      	mvns	r5, r5
9001c758:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c75c:	4377      	muls	r7, r6
9001c75e:	fb1a fa09 	smulbb	sl, sl, r9
9001c762:	b2ed      	uxtb	r5, r5
9001c764:	f834 e007 	ldrh.w	lr, [r4, r7]
9001c768:	9702      	str	r7, [sp, #8]
9001c76a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c76e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c772:	fb17 f709 	smulbb	r7, r7, r9
9001c776:	b2c0      	uxtb	r0, r0
9001c778:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c77c:	fb10 f009 	smulbb	r0, r0, r9
9001c780:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c784:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c788:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c78c:	fa1f fc8c 	uxth.w	ip, ip
9001c790:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c794:	fa5f fe8e 	uxtb.w	lr, lr
9001c798:	fb07 a705 	mla	r7, r7, r5, sl
9001c79c:	fb0e 0005 	mla	r0, lr, r5, r0
9001c7a0:	f10c 0501 	add.w	r5, ip, #1
9001c7a4:	b2bf      	uxth	r7, r7
9001c7a6:	b280      	uxth	r0, r0
9001c7a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c7ac:	f100 0a01 	add.w	sl, r0, #1
9001c7b0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c7b4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c7b8:	9802      	ldr	r0, [sp, #8]
9001c7ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c7be:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c7c2:	f107 0a01 	add.w	sl, r7, #1
9001c7c6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c7ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c7ce:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c7d2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c7d6:	f824 c000 	strh.w	ip, [r4, r0]
9001c7da:	e7af      	b.n	9001c73c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c7dc:	f04f 0e00 	mov.w	lr, #0
9001c7e0:	eba3 000e 	sub.w	r0, r3, lr
9001c7e4:	2800      	cmp	r0, #0
9001c7e6:	f77f af43 	ble.w	9001c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c7ea:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c7ee:	140d      	asrs	r5, r1, #16
9001c7f0:	1410      	asrs	r0, r2, #16
9001c7f2:	fb06 5000 	mla	r0, r6, r0, r5
9001c7f6:	9d01      	ldr	r5, [sp, #4]
9001c7f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c7fc:	0e2e      	lsrs	r6, r5, #24
9001c7fe:	2eff      	cmp	r6, #255	@ 0xff
9001c800:	d112      	bne.n	9001c828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001c802:	482c      	ldr	r0, [pc, #176]	@ (9001c8b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001c804:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c808:	0968      	lsrs	r0, r5, #5
9001c80a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c80e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001c812:	4330      	orrs	r0, r6
9001c814:	4328      	orrs	r0, r5
9001c816:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001c81a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c81c:	f10e 0e01 	add.w	lr, lr, #1
9001c820:	4401      	add	r1, r0
9001c822:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c824:	4402      	add	r2, r0
9001c826:	e7db      	b.n	9001c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001c828:	b2f0      	uxtb	r0, r6
9001c82a:	2e00      	cmp	r6, #0
9001c82c:	d0f5      	beq.n	9001c81a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c82e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c832:	fa1f f980 	uxth.w	r9, r0
9001c836:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c83a:	43c0      	mvns	r0, r0
9001c83c:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c840:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c844:	fb16 f609 	smulbb	r6, r6, r9
9001c848:	b2c0      	uxtb	r0, r0
9001c84a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c84e:	b2ed      	uxtb	r5, r5
9001c850:	fb1a fa09 	smulbb	sl, sl, r9
9001c854:	fb07 6700 	mla	r7, r7, r0, r6
9001c858:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c85c:	fb15 f509 	smulbb	r5, r5, r9
9001c860:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c864:	b2bf      	uxth	r7, r7
9001c866:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c86a:	fa5f fc8c 	uxtb.w	ip, ip
9001c86e:	fb06 a600 	mla	r6, r6, r0, sl
9001c872:	fb0c 5500 	mla	r5, ip, r0, r5
9001c876:	1c78      	adds	r0, r7, #1
9001c878:	b2b6      	uxth	r6, r6
9001c87a:	b2ad      	uxth	r5, r5
9001c87c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c880:	f105 0a01 	add.w	sl, r5, #1
9001c884:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c888:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c88c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c890:	ea4a 0707 	orr.w	r7, sl, r7
9001c894:	f106 0a01 	add.w	sl, r6, #1
9001c898:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c89c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c8a0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c8a4:	ea47 070a 	orr.w	r7, r7, sl
9001c8a8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001c8ac:	e7b5      	b.n	9001c81a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c8ae:	b005      	add	sp, #20
9001c8b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c8b4:	fffff800 	.word	0xfffff800

9001c8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c8bc:	b087      	sub	sp, #28
9001c8be:	468b      	mov	fp, r1
9001c8c0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c8c4:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c8c6:	9203      	str	r2, [sp, #12]
9001c8c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c8cc:	6841      	ldr	r1, [r0, #4]
9001c8ce:	9204      	str	r2, [sp, #16]
9001c8d0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c8d4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c8d8:	fb01 2404 	mla	r4, r1, r4, r2
9001c8dc:	6802      	ldr	r2, [r0, #0]
9001c8de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c8e2:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c8e6:	3201      	adds	r2, #1
9001c8e8:	f022 0201 	bic.w	r2, r2, #1
9001c8ec:	9200      	str	r2, [sp, #0]
9001c8ee:	f8d9 2000 	ldr.w	r2, [r9]
9001c8f2:	9201      	str	r2, [sp, #4]
9001c8f4:	f1bb 0f00 	cmp.w	fp, #0
9001c8f8:	dc03      	bgt.n	9001c902 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c8fa:	9a03      	ldr	r2, [sp, #12]
9001c8fc:	2a00      	cmp	r2, #0
9001c8fe:	f340 816a 	ble.w	9001cbd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c902:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c904:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c908:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c90c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c90e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c912:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c916:	2b00      	cmp	r3, #0
9001c918:	dd0e      	ble.n	9001c938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c91a:	1402      	asrs	r2, r0, #16
9001c91c:	d405      	bmi.n	9001c92a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c91e:	42ba      	cmp	r2, r7
9001c920:	da03      	bge.n	9001c92a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c922:	140a      	asrs	r2, r1, #16
9001c924:	d401      	bmi.n	9001c92a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c926:	42b2      	cmp	r2, r6
9001c928:	db07      	blt.n	9001c93a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001c92a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c92c:	3b01      	subs	r3, #1
9001c92e:	3402      	adds	r4, #2
9001c930:	4410      	add	r0, r2
9001c932:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c934:	4411      	add	r1, r2
9001c936:	e7ee      	b.n	9001c916 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c938:	d017      	beq.n	9001c96a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c93a:	1e5a      	subs	r2, r3, #1
9001c93c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c93e:	fb05 0502 	mla	r5, r5, r2, r0
9001c942:	142d      	asrs	r5, r5, #16
9001c944:	d409      	bmi.n	9001c95a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c946:	42bd      	cmp	r5, r7
9001c948:	da07      	bge.n	9001c95a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c94a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c94c:	fb05 1202 	mla	r2, r5, r2, r1
9001c950:	1412      	asrs	r2, r2, #16
9001c952:	d402      	bmi.n	9001c95a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c954:	42b2      	cmp	r2, r6
9001c956:	f2c0 80c8 	blt.w	9001caea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001c95a:	2700      	movs	r7, #0
9001c95c:	19da      	adds	r2, r3, r7
9001c95e:	2a00      	cmp	r2, #0
9001c960:	dc3e      	bgt.n	9001c9e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c962:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c966:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c96a:	f1bb 0f00 	cmp.w	fp, #0
9001c96e:	f340 8132 	ble.w	9001cbd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c972:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c976:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c978:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c97c:	f1bb 0b01 	subs.w	fp, fp, #1
9001c980:	eeb0 6a62 	vmov.f32	s12, s5
9001c984:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c988:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c98c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c990:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c994:	eeb0 6a43 	vmov.f32	s12, s6
9001c998:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c99c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c9a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c9a4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c9a8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c9ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c9b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c9b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c9b8:	ee12 2a90 	vmov	r2, s5
9001c9bc:	eef0 2a47 	vmov.f32	s5, s14
9001c9c0:	fb92 f3f3 	sdiv	r3, r2, r3
9001c9c4:	ee13 2a10 	vmov	r2, s6
9001c9c8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c9ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c9cc:	eeb0 3a67 	vmov.f32	s6, s15
9001c9d0:	fb92 f3f3 	sdiv	r3, r2, r3
9001c9d4:	9a03      	ldr	r2, [sp, #12]
9001c9d6:	9314      	str	r3, [sp, #80]	@ 0x50
9001c9d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c9da:	bf08      	it	eq
9001c9dc:	4613      	moveq	r3, r2
9001c9de:	e789      	b.n	9001c8f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c9e0:	1405      	asrs	r5, r0, #16
9001c9e2:	d436      	bmi.n	9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c9e4:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c9e8:	42aa      	cmp	r2, r5
9001c9ea:	dd32      	ble.n	9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c9ec:	140e      	asrs	r6, r1, #16
9001c9ee:	d430      	bmi.n	9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c9f0:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c9f4:	42b2      	cmp	r2, r6
9001c9f6:	dd2c      	ble.n	9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c9f8:	9a00      	ldr	r2, [sp, #0]
9001c9fa:	fb06 5502 	mla	r5, r6, r2, r5
9001c9fe:	9e01      	ldr	r6, [sp, #4]
9001ca00:	086a      	lsrs	r2, r5, #1
9001ca02:	5cb2      	ldrb	r2, [r6, r2]
9001ca04:	07ee      	lsls	r6, r5, #31
9001ca06:	bf54      	ite	pl
9001ca08:	f002 020f 	andpl.w	r2, r2, #15
9001ca0c:	1112      	asrmi	r2, r2, #4
9001ca0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ca12:	b2d2      	uxtb	r2, r2
9001ca14:	b1ea      	cbz	r2, 9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ca16:	9d04      	ldr	r5, [sp, #16]
9001ca18:	436a      	muls	r2, r5
9001ca1a:	1c55      	adds	r5, r2, #1
9001ca1c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ca20:	4d6e      	ldr	r5, [pc, #440]	@ (9001cbdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ca22:	1212      	asrs	r2, r2, #8
9001ca24:	682d      	ldr	r5, [r5, #0]
9001ca26:	2aff      	cmp	r2, #255	@ 0xff
9001ca28:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001ca2c:	9605      	str	r6, [sp, #20]
9001ca2e:	d116      	bne.n	9001ca5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001ca30:	f06f 0201 	mvn.w	r2, #1
9001ca34:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ca38:	fb02 fc07 	mul.w	ip, r2, r7
9001ca3c:	096a      	lsrs	r2, r5, #5
9001ca3e:	f026 0607 	bic.w	r6, r6, #7
9001ca42:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ca46:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ca4a:	4316      	orrs	r6, r2
9001ca4c:	432e      	orrs	r6, r5
9001ca4e:	f824 600c 	strh.w	r6, [r4, ip]
9001ca52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ca54:	3f01      	subs	r7, #1
9001ca56:	4410      	add	r0, r2
9001ca58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ca5a:	4411      	add	r1, r2
9001ca5c:	e77e      	b.n	9001c95c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001ca5e:	f06f 0601 	mvn.w	r6, #1
9001ca62:	fa1f fa82 	uxth.w	sl, r2
9001ca66:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001ca6a:	43d2      	mvns	r2, r2
9001ca6c:	437e      	muls	r6, r7
9001ca6e:	b2ed      	uxtb	r5, r5
9001ca70:	fb1c fc0a 	smulbb	ip, ip, sl
9001ca74:	b2d2      	uxtb	r2, r2
9001ca76:	f834 8006 	ldrh.w	r8, [r4, r6]
9001ca7a:	fb15 f50a 	smulbb	r5, r5, sl
9001ca7e:	9602      	str	r6, [sp, #8]
9001ca80:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ca84:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ca88:	fb16 f60a 	smulbb	r6, r6, sl
9001ca8c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001ca90:	fb0e ce02 	mla	lr, lr, r2, ip
9001ca94:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ca98:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ca9c:	fa1f fe8e 	uxth.w	lr, lr
9001caa0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001caa4:	fa5f f888 	uxtb.w	r8, r8
9001caa8:	fb0c 6c02 	mla	ip, ip, r2, r6
9001caac:	fb08 5502 	mla	r5, r8, r2, r5
9001cab0:	f10e 0201 	add.w	r2, lr, #1
9001cab4:	fa1f fc8c 	uxth.w	ip, ip
9001cab8:	b2ad      	uxth	r5, r5
9001caba:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001cabe:	9a02      	ldr	r2, [sp, #8]
9001cac0:	1c6e      	adds	r6, r5, #1
9001cac2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001cac6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001caca:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001cace:	ea46 0e0e 	orr.w	lr, r6, lr
9001cad2:	f10c 0601 	add.w	r6, ip, #1
9001cad6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001cada:	0976      	lsrs	r6, r6, #5
9001cadc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cae0:	ea4e 0e06 	orr.w	lr, lr, r6
9001cae4:	f824 e002 	strh.w	lr, [r4, r2]
9001cae8:	e7b3      	b.n	9001ca52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001caea:	f04f 0800 	mov.w	r8, #0
9001caee:	eba3 0208 	sub.w	r2, r3, r8
9001caf2:	2a00      	cmp	r2, #0
9001caf4:	f77f af35 	ble.w	9001c962 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001caf8:	1402      	asrs	r2, r0, #16
9001cafa:	9e00      	ldr	r6, [sp, #0]
9001cafc:	140d      	asrs	r5, r1, #16
9001cafe:	fb06 2505 	mla	r5, r6, r5, r2
9001cb02:	9e01      	ldr	r6, [sp, #4]
9001cb04:	086a      	lsrs	r2, r5, #1
9001cb06:	07ed      	lsls	r5, r5, #31
9001cb08:	5cb2      	ldrb	r2, [r6, r2]
9001cb0a:	bf54      	ite	pl
9001cb0c:	f002 020f 	andpl.w	r2, r2, #15
9001cb10:	1112      	asrmi	r2, r2, #4
9001cb12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cb16:	b2d2      	uxtb	r2, r2
9001cb18:	b1c2      	cbz	r2, 9001cb4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001cb1a:	9d04      	ldr	r5, [sp, #16]
9001cb1c:	436a      	muls	r2, r5
9001cb1e:	1c55      	adds	r5, r2, #1
9001cb20:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001cb24:	4d2d      	ldr	r5, [pc, #180]	@ (9001cbdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001cb26:	1212      	asrs	r2, r2, #8
9001cb28:	682e      	ldr	r6, [r5, #0]
9001cb2a:	2aff      	cmp	r2, #255	@ 0xff
9001cb2c:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001cb30:	d113      	bne.n	9001cb5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001cb32:	0972      	lsrs	r2, r6, #5
9001cb34:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001cb38:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001cb3c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cb40:	f025 0507 	bic.w	r5, r5, #7
9001cb44:	4315      	orrs	r5, r2
9001cb46:	4335      	orrs	r5, r6
9001cb48:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001cb4c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cb4e:	f108 0801 	add.w	r8, r8, #1
9001cb52:	4410      	add	r0, r2
9001cb54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cb56:	4411      	add	r1, r2
9001cb58:	e7c9      	b.n	9001caee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001cb5a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001cb5e:	fa1f fa82 	uxth.w	sl, r2
9001cb62:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001cb66:	43d2      	mvns	r2, r2
9001cb68:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cb6c:	fb17 f70a 	smulbb	r7, r7, sl
9001cb70:	b2d2      	uxtb	r2, r2
9001cb72:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cb76:	b2f6      	uxtb	r6, r6
9001cb78:	b2ed      	uxtb	r5, r5
9001cb7a:	fb0c 7c02 	mla	ip, ip, r2, r7
9001cb7e:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001cb82:	fb16 f60a 	smulbb	r6, r6, sl
9001cb86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cb8a:	fa1f fc8c 	uxth.w	ip, ip
9001cb8e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cb92:	fb15 f50a 	smulbb	r5, r5, sl
9001cb96:	fa5f fe8e 	uxtb.w	lr, lr
9001cb9a:	fb0e 6602 	mla	r6, lr, r2, r6
9001cb9e:	fb07 5702 	mla	r7, r7, r2, r5
9001cba2:	f10c 0201 	add.w	r2, ip, #1
9001cba6:	b2b6      	uxth	r6, r6
9001cba8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001cbac:	1c75      	adds	r5, r6, #1
9001cbae:	b2bf      	uxth	r7, r7
9001cbb0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cbb4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001cbb8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cbbc:	ea45 0c0c 	orr.w	ip, r5, ip
9001cbc0:	1c7d      	adds	r5, r7, #1
9001cbc2:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001cbc6:	096d      	lsrs	r5, r5, #5
9001cbc8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cbcc:	ea4c 0c05 	orr.w	ip, ip, r5
9001cbd0:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001cbd4:	e7ba      	b.n	9001cb4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001cbd6:	b007      	add	sp, #28
9001cbd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cbdc:	24021854 	.word	0x24021854

9001cbe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cbe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cbe4:	b087      	sub	sp, #28
9001cbe6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cbea:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001cef4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001cbee:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001cbf0:	9101      	str	r1, [sp, #4]
9001cbf2:	9205      	str	r2, [sp, #20]
9001cbf4:	6841      	ldr	r1, [r0, #4]
9001cbf6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001cbfa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001cbfe:	fb01 2404 	mla	r4, r1, r4, r2
9001cc02:	6802      	ldr	r2, [r0, #0]
9001cc04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cc08:	f8db 2008 	ldr.w	r2, [fp, #8]
9001cc0c:	3201      	adds	r2, #1
9001cc0e:	f022 0201 	bic.w	r2, r2, #1
9001cc12:	9202      	str	r2, [sp, #8]
9001cc14:	f8db 2000 	ldr.w	r2, [fp]
9001cc18:	9203      	str	r2, [sp, #12]
9001cc1a:	9a01      	ldr	r2, [sp, #4]
9001cc1c:	2a00      	cmp	r2, #0
9001cc1e:	dc03      	bgt.n	9001cc28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001cc20:	9a05      	ldr	r2, [sp, #20]
9001cc22:	2a00      	cmp	r2, #0
9001cc24:	f340 8162 	ble.w	9001ceec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001cc28:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cc2a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001cc2e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001cc32:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cc34:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001cc38:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cc3c:	2b00      	cmp	r3, #0
9001cc3e:	dd0e      	ble.n	9001cc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001cc40:	1402      	asrs	r2, r0, #16
9001cc42:	d405      	bmi.n	9001cc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cc44:	42ba      	cmp	r2, r7
9001cc46:	da03      	bge.n	9001cc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cc48:	140a      	asrs	r2, r1, #16
9001cc4a:	d401      	bmi.n	9001cc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cc4c:	42b2      	cmp	r2, r6
9001cc4e:	db07      	blt.n	9001cc60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001cc50:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cc52:	3b01      	subs	r3, #1
9001cc54:	3402      	adds	r4, #2
9001cc56:	4410      	add	r0, r2
9001cc58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cc5a:	4411      	add	r1, r2
9001cc5c:	e7ee      	b.n	9001cc3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001cc5e:	d017      	beq.n	9001cc90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001cc60:	1e5a      	subs	r2, r3, #1
9001cc62:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001cc64:	fb05 0502 	mla	r5, r5, r2, r0
9001cc68:	142d      	asrs	r5, r5, #16
9001cc6a:	d409      	bmi.n	9001cc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc6c:	42bd      	cmp	r5, r7
9001cc6e:	da07      	bge.n	9001cc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc70:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001cc72:	fb05 1202 	mla	r2, r5, r2, r1
9001cc76:	1412      	asrs	r2, r2, #16
9001cc78:	d402      	bmi.n	9001cc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cc7a:	42b2      	cmp	r2, r6
9001cc7c:	f2c0 80c3 	blt.w	9001ce06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001cc80:	2500      	movs	r5, #0
9001cc82:	195a      	adds	r2, r3, r5
9001cc84:	2a00      	cmp	r2, #0
9001cc86:	dc3f      	bgt.n	9001cd08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001cc88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cc8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cc90:	9b01      	ldr	r3, [sp, #4]
9001cc92:	2b00      	cmp	r3, #0
9001cc94:	f340 812a 	ble.w	9001ceec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001cc98:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cc9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cc9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cca2:	eeb0 6a62 	vmov.f32	s12, s5
9001cca6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ccaa:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ccae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ccb2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ccb6:	eeb0 6a43 	vmov.f32	s12, s6
9001ccba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ccbe:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ccc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ccc6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ccca:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ccce:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ccd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ccd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ccda:	ee12 2a90 	vmov	r2, s5
9001ccde:	eef0 2a47 	vmov.f32	s5, s14
9001cce2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cce6:	ee13 2a10 	vmov	r2, s6
9001ccea:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ccec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ccee:	eeb0 3a67 	vmov.f32	s6, s15
9001ccf2:	fb92 f3f3 	sdiv	r3, r2, r3
9001ccf6:	9314      	str	r3, [sp, #80]	@ 0x50
9001ccf8:	9b01      	ldr	r3, [sp, #4]
9001ccfa:	9a05      	ldr	r2, [sp, #20]
9001ccfc:	3b01      	subs	r3, #1
9001ccfe:	9301      	str	r3, [sp, #4]
9001cd00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cd02:	bf08      	it	eq
9001cd04:	4613      	moveq	r3, r2
9001cd06:	e788      	b.n	9001cc1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001cd08:	1406      	asrs	r6, r0, #16
9001cd0a:	d42c      	bmi.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cd0c:	f8db 2008 	ldr.w	r2, [fp, #8]
9001cd10:	42b2      	cmp	r2, r6
9001cd12:	dd28      	ble.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cd14:	140f      	asrs	r7, r1, #16
9001cd16:	d426      	bmi.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cd18:	f8db 200c 	ldr.w	r2, [fp, #12]
9001cd1c:	42ba      	cmp	r2, r7
9001cd1e:	dd22      	ble.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cd20:	9a02      	ldr	r2, [sp, #8]
9001cd22:	fb07 6602 	mla	r6, r7, r2, r6
9001cd26:	9f03      	ldr	r7, [sp, #12]
9001cd28:	0872      	lsrs	r2, r6, #1
9001cd2a:	07f6      	lsls	r6, r6, #31
9001cd2c:	5cba      	ldrb	r2, [r7, r2]
9001cd2e:	bf54      	ite	pl
9001cd30:	f002 020f 	andpl.w	r2, r2, #15
9001cd34:	1112      	asrmi	r2, r2, #4
9001cd36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cd3a:	b2d2      	uxtb	r2, r2
9001cd3c:	2aff      	cmp	r2, #255	@ 0xff
9001cd3e:	d118      	bne.n	9001cd72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001cd40:	f06f 0601 	mvn.w	r6, #1
9001cd44:	f8d8 2000 	ldr.w	r2, [r8]
9001cd48:	fb06 f705 	mul.w	r7, r6, r5
9001cd4c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001cd50:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001cd54:	0956      	lsrs	r6, r2, #5
9001cd56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cd5a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cd5e:	ea4c 0606 	orr.w	r6, ip, r6
9001cd62:	4316      	orrs	r6, r2
9001cd64:	53e6      	strh	r6, [r4, r7]
9001cd66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cd68:	3d01      	subs	r5, #1
9001cd6a:	4410      	add	r0, r2
9001cd6c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cd6e:	4411      	add	r1, r2
9001cd70:	e787      	b.n	9001cc82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cd72:	2a00      	cmp	r2, #0
9001cd74:	d0f7      	beq.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cd76:	f06f 0601 	mvn.w	r6, #1
9001cd7a:	f8d8 c000 	ldr.w	ip, [r8]
9001cd7e:	fa1f f982 	uxth.w	r9, r2
9001cd82:	43d2      	mvns	r2, r2
9001cd84:	436e      	muls	r6, r5
9001cd86:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001cd8a:	b2d2      	uxtb	r2, r2
9001cd8c:	f834 e006 	ldrh.w	lr, [r4, r6]
9001cd90:	fb1a fa09 	smulbb	sl, sl, r9
9001cd94:	9604      	str	r6, [sp, #16]
9001cd96:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001cd9a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001cd9e:	fb16 f609 	smulbb	r6, r6, r9
9001cda2:	fa5f fc8c 	uxtb.w	ip, ip
9001cda6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cdaa:	fb1c fc09 	smulbb	ip, ip, r9
9001cdae:	fb07 6702 	mla	r7, r7, r2, r6
9001cdb2:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cdb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cdba:	b2bf      	uxth	r7, r7
9001cdbc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cdc0:	fa5f fe8e 	uxtb.w	lr, lr
9001cdc4:	fb06 a602 	mla	r6, r6, r2, sl
9001cdc8:	fb0e cc02 	mla	ip, lr, r2, ip
9001cdcc:	1c7a      	adds	r2, r7, #1
9001cdce:	b2b6      	uxth	r6, r6
9001cdd0:	fa1f fc8c 	uxth.w	ip, ip
9001cdd4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cdd8:	9a04      	ldr	r2, [sp, #16]
9001cdda:	f10c 0a01 	add.w	sl, ip, #1
9001cdde:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cde2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001cde6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cdea:	ea4a 0707 	orr.w	r7, sl, r7
9001cdee:	f106 0a01 	add.w	sl, r6, #1
9001cdf2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cdf6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cdfa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cdfe:	ea47 070a 	orr.w	r7, r7, sl
9001ce02:	52a7      	strh	r7, [r4, r2]
9001ce04:	e7af      	b.n	9001cd66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ce06:	f04f 0e00 	mov.w	lr, #0
9001ce0a:	eba3 020e 	sub.w	r2, r3, lr
9001ce0e:	2a00      	cmp	r2, #0
9001ce10:	f77f af3a 	ble.w	9001cc88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ce14:	1402      	asrs	r2, r0, #16
9001ce16:	9e02      	ldr	r6, [sp, #8]
9001ce18:	140d      	asrs	r5, r1, #16
9001ce1a:	fb06 2505 	mla	r5, r6, r5, r2
9001ce1e:	9e03      	ldr	r6, [sp, #12]
9001ce20:	086a      	lsrs	r2, r5, #1
9001ce22:	07ed      	lsls	r5, r5, #31
9001ce24:	5cb2      	ldrb	r2, [r6, r2]
9001ce26:	bf54      	ite	pl
9001ce28:	f002 020f 	andpl.w	r2, r2, #15
9001ce2c:	1112      	asrmi	r2, r2, #4
9001ce2e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ce32:	b2d2      	uxtb	r2, r2
9001ce34:	2aff      	cmp	r2, #255	@ 0xff
9001ce36:	d115      	bne.n	9001ce64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001ce38:	f8d8 5000 	ldr.w	r5, [r8]
9001ce3c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001ce40:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001ce44:	096a      	lsrs	r2, r5, #5
9001ce46:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ce4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ce4e:	4332      	orrs	r2, r6
9001ce50:	432a      	orrs	r2, r5
9001ce52:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001ce56:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ce58:	f10e 0e01 	add.w	lr, lr, #1
9001ce5c:	4410      	add	r0, r2
9001ce5e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce60:	4411      	add	r1, r2
9001ce62:	e7d2      	b.n	9001ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001ce64:	2a00      	cmp	r2, #0
9001ce66:	d0f6      	beq.n	9001ce56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001ce68:	f8d8 7000 	ldr.w	r7, [r8]
9001ce6c:	fa1f f982 	uxth.w	r9, r2
9001ce70:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ce74:	43d2      	mvns	r2, r2
9001ce76:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001ce7a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001ce7e:	ea4f 262c 	mov.w	r6, ip, asr #8
9001ce82:	fb15 f509 	smulbb	r5, r5, r9
9001ce86:	b2d2      	uxtb	r2, r2
9001ce88:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ce8c:	b2ff      	uxtb	r7, r7
9001ce8e:	fb1a fa09 	smulbb	sl, sl, r9
9001ce92:	fb06 5602 	mla	r6, r6, r2, r5
9001ce96:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001ce9a:	fb17 f709 	smulbb	r7, r7, r9
9001ce9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cea2:	b2b6      	uxth	r6, r6
9001cea4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001cea8:	fa5f fc8c 	uxtb.w	ip, ip
9001ceac:	fb05 a502 	mla	r5, r5, r2, sl
9001ceb0:	fb0c 7702 	mla	r7, ip, r2, r7
9001ceb4:	1c72      	adds	r2, r6, #1
9001ceb6:	b2ad      	uxth	r5, r5
9001ceb8:	b2bf      	uxth	r7, r7
9001ceba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001cebe:	f107 0a01 	add.w	sl, r7, #1
9001cec2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001cec6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ceca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cece:	ea4a 0606 	orr.w	r6, sl, r6
9001ced2:	f105 0a01 	add.w	sl, r5, #1
9001ced6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ceda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cede:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cee2:	ea46 060a 	orr.w	r6, r6, sl
9001cee6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001ceea:	e7b4      	b.n	9001ce56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001ceec:	b007      	add	sp, #28
9001ceee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cef2:	bf00      	nop
9001cef4:	24021854 	.word	0x24021854

9001cef8 <_ZN8touchgfx8LCD16bppD1Ev>:
9001cef8:	4770      	bx	lr

9001cefa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001cefa:	4770      	bx	lr

9001cefc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001cefc:	4770      	bx	lr

9001cefe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001cefe:	4770      	bx	lr

9001cf00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001cf00:	4770      	bx	lr

9001cf02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001cf02:	4770      	bx	lr

9001cf04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001cf04:	4770      	bx	lr

9001cf06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001cf06:	4770      	bx	lr

9001cf08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001cf08:	4770      	bx	lr

9001cf0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001cf0a:	4770      	bx	lr

9001cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001cf0c:	4770      	bx	lr

9001cf0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001cf0e:	4770      	bx	lr

9001cf10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001cf10:	4770      	bx	lr

9001cf12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001cf12:	4770      	bx	lr

9001cf14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001cf14:	4770      	bx	lr

9001cf16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001cf16:	4770      	bx	lr

9001cf18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001cf18:	4770      	bx	lr

9001cf1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cf1a:	4770      	bx	lr

9001cf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001cf1c:	4770      	bx	lr

9001cf1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001cf1e:	4770      	bx	lr

9001cf20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001cf20:	4770      	bx	lr

9001cf22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001cf22:	4770      	bx	lr

9001cf24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001cf24:	4770      	bx	lr

9001cf26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001cf26:	4770      	bx	lr

9001cf28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001cf28:	4770      	bx	lr

9001cf2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001cf2a:	4770      	bx	lr

9001cf2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001cf2c:	4770      	bx	lr

9001cf2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cf2e:	4770      	bx	lr

9001cf30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001cf30:	4770      	bx	lr

9001cf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001cf32:	4770      	bx	lr

9001cf34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001cf34:	4770      	bx	lr

9001cf36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cf36:	4770      	bx	lr

9001cf38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001cf38:	4770      	bx	lr

9001cf3a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001cf3a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001cf3e:	b088      	sub	sp, #32
9001cf40:	4606      	mov	r6, r0
9001cf42:	4688      	mov	r8, r1
9001cf44:	4691      	mov	r9, r2
9001cf46:	ac08      	add	r4, sp, #32
9001cf48:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001cf4c:	4620      	mov	r0, r4
9001cf4e:	f7fd fc33 	bl	9001a7b8 <_ZNK8touchgfx6Bitmap7getDataEv>
9001cf52:	6833      	ldr	r3, [r6, #0]
9001cf54:	4605      	mov	r5, r0
9001cf56:	4620      	mov	r0, r4
9001cf58:	699f      	ldr	r7, [r3, #24]
9001cf5a:	f7fd fb3b 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001cf5e:	4682      	mov	sl, r0
9001cf60:	4620      	mov	r0, r4
9001cf62:	f7fd fb6b 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001cf66:	9500      	str	r5, [sp, #0]
9001cf68:	464b      	mov	r3, r9
9001cf6a:	4642      	mov	r2, r8
9001cf6c:	4631      	mov	r1, r6
9001cf6e:	e9cd a001 	strd	sl, r0, [sp, #4]
9001cf72:	a806      	add	r0, sp, #24
9001cf74:	47b8      	blx	r7
9001cf76:	4628      	mov	r0, r5
9001cf78:	b008      	add	sp, #32
9001cf7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001cf80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001cf80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001cf84:	2300      	movs	r3, #0
9001cf86:	9300      	str	r3, [sp, #0]
9001cf88:	4b3d      	ldr	r3, [pc, #244]	@ (9001d080 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001cf8a:	781b      	ldrb	r3, [r3, #0]
9001cf8c:	2b00      	cmp	r3, #0
9001cf8e:	d137      	bne.n	9001d000 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001cf90:	4a3c      	ldr	r2, [pc, #240]	@ (9001d084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001cf92:	f9b2 2000 	ldrsh.w	r2, [r2]
9001cf96:	f8ad 2004 	strh.w	r2, [sp, #4]
9001cf9a:	2b00      	cmp	r3, #0
9001cf9c:	d132      	bne.n	9001d004 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001cf9e:	4b3a      	ldr	r3, [pc, #232]	@ (9001d088 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001cfa0:	f9b3 3000 	ldrsh.w	r3, [r3]
9001cfa4:	ac02      	add	r4, sp, #8
9001cfa6:	6808      	ldr	r0, [r1, #0]
9001cfa8:	f8ad 3006 	strh.w	r3, [sp, #6]
9001cfac:	ab02      	add	r3, sp, #8
9001cfae:	6849      	ldr	r1, [r1, #4]
9001cfb0:	4d36      	ldr	r5, [pc, #216]	@ (9001d08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001cfb2:	c303      	stmia	r3!, {r0, r1}
9001cfb4:	4669      	mov	r1, sp
9001cfb6:	4620      	mov	r0, r4
9001cfb8:	f7f9 ff7a 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cfbc:	4668      	mov	r0, sp
9001cfbe:	f7f9 ff33 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cfc2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001cfc6:	f8bd 2000 	ldrh.w	r2, [sp]
9001cfca:	462f      	mov	r7, r5
9001cfcc:	6828      	ldr	r0, [r5, #0]
9001cfce:	4413      	add	r3, r2
9001cfd0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001cfd4:	f8ad 3008 	strh.w	r3, [sp, #8]
9001cfd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001cfdc:	4413      	add	r3, r2
9001cfde:	f8ad 300a 	strh.w	r3, [sp, #10]
9001cfe2:	6803      	ldr	r3, [r0, #0]
9001cfe4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001cfe6:	4798      	blx	r3
9001cfe8:	f010 0f01 	tst.w	r0, #1
9001cfec:	d00c      	beq.n	9001d008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001cfee:	6828      	ldr	r0, [r5, #0]
9001cff0:	6803      	ldr	r3, [r0, #0]
9001cff2:	e894 0006 	ldmia.w	r4, {r1, r2}
9001cff6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001cff8:	4798      	blx	r3
9001cffa:	b004      	add	sp, #16
9001cffc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d000:	4a21      	ldr	r2, [pc, #132]	@ (9001d088 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d002:	e7c6      	b.n	9001cf92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001d004:	4b1f      	ldr	r3, [pc, #124]	@ (9001d084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d006:	e7cb      	b.n	9001cfa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001d008:	6838      	ldr	r0, [r7, #0]
9001d00a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001d00e:	6803      	ldr	r3, [r0, #0]
9001d010:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001d014:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001d018:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001d01a:	4798      	blx	r3
9001d01c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001d020:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d024:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001d028:	fb16 3602 	smlabb	r6, r6, r2, r3
9001d02c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d030:	6838      	ldr	r0, [r7, #0]
9001d032:	6803      	ldr	r3, [r0, #0]
9001d034:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d036:	4798      	blx	r3
9001d038:	4a12      	ldr	r2, [pc, #72]	@ (9001d084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d03a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001d03e:	8813      	ldrh	r3, [r2, #0]
9001d040:	4691      	mov	r9, r2
9001d042:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001d046:	435d      	muls	r5, r3
9001d048:	fb03 1404 	mla	r4, r3, r4, r1
9001d04c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d050:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d054:	6838      	ldr	r0, [r7, #0]
9001d056:	42ac      	cmp	r4, r5
9001d058:	6803      	ldr	r3, [r0, #0]
9001d05a:	d20e      	bcs.n	9001d07a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001d05c:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001d060:	4632      	mov	r2, r6
9001d062:	4643      	mov	r3, r8
9001d064:	4621      	mov	r1, r4
9001d066:	47d0      	blx	sl
9001d068:	f8b9 3000 	ldrh.w	r3, [r9]
9001d06c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d070:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001d074:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d078:	e7ec      	b.n	9001d054 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001d07a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d07c:	4798      	blx	r3
9001d07e:	e7bc      	b.n	9001cffa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001d080:	2402183c 	.word	0x2402183c
9001d084:	2402183e 	.word	0x2402183e
9001d088:	24021840 	.word	0x24021840
9001d08c:	24021844 	.word	0x24021844

9001d090 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001d090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d094:	b08b      	sub	sp, #44	@ 0x2c
9001d096:	460f      	mov	r7, r1
9001d098:	4616      	mov	r6, r2
9001d09a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001d09e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001d0a2:	f1bb 0f00 	cmp.w	fp, #0
9001d0a6:	d04a      	beq.n	9001d13e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d0a8:	6810      	ldr	r0, [r2, #0]
9001d0aa:	ad06      	add	r5, sp, #24
9001d0ac:	6851      	ldr	r1, [r2, #4]
9001d0ae:	c503      	stmia	r5!, {r0, r1}
9001d0b0:	6818      	ldr	r0, [r3, #0]
9001d0b2:	ad08      	add	r5, sp, #32
9001d0b4:	6859      	ldr	r1, [r3, #4]
9001d0b6:	c503      	stmia	r5!, {r0, r1}
9001d0b8:	a806      	add	r0, sp, #24
9001d0ba:	f7f9 feb5 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d0be:	4631      	mov	r1, r6
9001d0c0:	a808      	add	r0, sp, #32
9001d0c2:	f7f9 fef5 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d0c6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001d0ca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001d0ce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001d0d2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001d0d6:	fb16 2103 	smlabb	r1, r6, r3, r2
9001d0da:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001d0de:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001d0e2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001d0e6:	4f5f      	ldr	r7, [pc, #380]	@ (9001d264 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d0e8:	440a      	add	r2, r1
9001d0ea:	6838      	ldr	r0, [r7, #0]
9001d0ec:	46b9      	mov	r9, r7
9001d0ee:	f8ad 2020 	strh.w	r2, [sp, #32]
9001d0f2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001d0f6:	4413      	add	r3, r2
9001d0f8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001d0fc:	6803      	ldr	r3, [r0, #0]
9001d0fe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d100:	4798      	blx	r3
9001d102:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d106:	d11d      	bne.n	9001d144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001d108:	b9fc      	cbnz	r4, 9001d14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d10a:	f010 0f01 	tst.w	r0, #1
9001d10e:	d01c      	beq.n	9001d14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d110:	f8d9 0000 	ldr.w	r0, [r9]
9001d114:	2700      	movs	r7, #0
9001d116:	b2ad      	uxth	r5, r5
9001d118:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001d11c:	6801      	ldr	r1, [r0, #0]
9001d11e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001d122:	f8cd b00c 	str.w	fp, [sp, #12]
9001d126:	9501      	str	r5, [sp, #4]
9001d128:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001d12c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001d130:	9402      	str	r4, [sp, #8]
9001d132:	fa1f f488 	uxth.w	r4, r8
9001d136:	9400      	str	r4, [sp, #0]
9001d138:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001d13a:	4631      	mov	r1, r6
9001d13c:	47a0      	blx	r4
9001d13e:	b00b      	add	sp, #44	@ 0x2c
9001d140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d144:	f010 0f04 	tst.w	r0, #4
9001d148:	e7e1      	b.n	9001d10e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001d14a:	f8d9 0000 	ldr.w	r0, [r9]
9001d14e:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001d152:	6803      	ldr	r3, [r0, #0]
9001d154:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d156:	4798      	blx	r3
9001d158:	4b43      	ldr	r3, [pc, #268]	@ (9001d268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001d15a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001d15e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d162:	881a      	ldrh	r2, [r3, #0]
9001d164:	469a      	mov	sl, r3
9001d166:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001d16a:	fb05 f502 	mul.w	r5, r5, r2
9001d16e:	fb02 1404 	mla	r4, r2, r4, r1
9001d172:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d176:	d059      	beq.n	9001d22c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001d178:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001d17c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d180:	fa1f f28b 	uxth.w	r2, fp
9001d184:	469e      	mov	lr, r3
9001d186:	fa1f f989 	uxth.w	r9, r9
9001d18a:	42ac      	cmp	r4, r5
9001d18c:	d264      	bcs.n	9001d258 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d18e:	eb04 0a07 	add.w	sl, r4, r7
9001d192:	4554      	cmp	r4, sl
9001d194:	d23d      	bcs.n	9001d212 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001d196:	8821      	ldrh	r1, [r4, #0]
9001d198:	f836 3b02 	ldrh.w	r3, [r6], #2
9001d19c:	1208      	asrs	r0, r1, #8
9001d19e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001d1a2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001d1a6:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001d1aa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d1ae:	00c9      	lsls	r1, r1, #3
9001d1b0:	fb10 f009 	smulbb	r0, r0, r9
9001d1b4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d1b8:	b2c9      	uxtb	r1, r1
9001d1ba:	fb0c 0c02 	mla	ip, ip, r2, r0
9001d1be:	10d8      	asrs	r0, r3, #3
9001d1c0:	fb1b fb09 	smulbb	fp, fp, r9
9001d1c4:	00db      	lsls	r3, r3, #3
9001d1c6:	fa1f fc8c 	uxth.w	ip, ip
9001d1ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001d1ce:	fb11 f109 	smulbb	r1, r1, r9
9001d1d2:	b2db      	uxtb	r3, r3
9001d1d4:	fb00 b002 	mla	r0, r0, r2, fp
9001d1d8:	f10c 0b01 	add.w	fp, ip, #1
9001d1dc:	fb03 1302 	mla	r3, r3, r2, r1
9001d1e0:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001d1e4:	b29b      	uxth	r3, r3
9001d1e6:	b280      	uxth	r0, r0
9001d1e8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001d1ec:	f103 0c01 	add.w	ip, r3, #1
9001d1f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d1f4:	1c43      	adds	r3, r0, #1
9001d1f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001d1fa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d1fe:	0940      	lsrs	r0, r0, #5
9001d200:	ea4c 0c0b 	orr.w	ip, ip, fp
9001d204:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001d208:	ea4c 0c00 	orr.w	ip, ip, r0
9001d20c:	f824 cb02 	strh.w	ip, [r4], #2
9001d210:	e7bf      	b.n	9001d192 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001d212:	f8be 3000 	ldrh.w	r3, [lr]
9001d216:	eba3 0308 	sub.w	r3, r3, r8
9001d21a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d21e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d222:	eba3 0308 	sub.w	r3, r3, r8
9001d226:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d22a:	e7ae      	b.n	9001d18a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001d22c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d230:	f8d9 0000 	ldr.w	r0, [r9]
9001d234:	42ac      	cmp	r4, r5
9001d236:	6803      	ldr	r3, [r0, #0]
9001d238:	d20e      	bcs.n	9001d258 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d23a:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001d23e:	4632      	mov	r2, r6
9001d240:	463b      	mov	r3, r7
9001d242:	4621      	mov	r1, r4
9001d244:	47c0      	blx	r8
9001d246:	f8ba 3000 	ldrh.w	r3, [sl]
9001d24a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d24e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d252:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d256:	e7eb      	b.n	9001d230 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001d258:	4b02      	ldr	r3, [pc, #8]	@ (9001d264 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d25a:	6818      	ldr	r0, [r3, #0]
9001d25c:	6803      	ldr	r3, [r0, #0]
9001d25e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d260:	4798      	blx	r3
9001d262:	e76c      	b.n	9001d13e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d264:	24021844 	.word	0x24021844
9001d268:	2402183e 	.word	0x2402183e

9001d26c <_ZN8touchgfx8LCD16bppD0Ev>:
9001d26c:	b510      	push	{r4, lr}
9001d26e:	4604      	mov	r4, r0
9001d270:	218c      	movs	r1, #140	@ 0x8c
9001d272:	f00c fa5d 	bl	90029730 <_ZdlPvj>
9001d276:	4620      	mov	r0, r4
9001d278:	bd10      	pop	{r4, pc}

9001d27a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001d27a:	b510      	push	{r4, lr}
9001d27c:	4604      	mov	r4, r0
9001d27e:	2104      	movs	r1, #4
9001d280:	f00c fa56 	bl	90029730 <_ZdlPvj>
9001d284:	4620      	mov	r0, r4
9001d286:	bd10      	pop	{r4, pc}

9001d288 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001d288:	b510      	push	{r4, lr}
9001d28a:	4604      	mov	r4, r0
9001d28c:	2104      	movs	r1, #4
9001d28e:	f00c fa4f 	bl	90029730 <_ZdlPvj>
9001d292:	4620      	mov	r0, r4
9001d294:	bd10      	pop	{r4, pc}

9001d296 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001d296:	b510      	push	{r4, lr}
9001d298:	4604      	mov	r4, r0
9001d29a:	f640 0144 	movw	r1, #2116	@ 0x844
9001d29e:	f00c fa47 	bl	90029730 <_ZdlPvj>
9001d2a2:	4620      	mov	r0, r4
9001d2a4:	bd10      	pop	{r4, pc}

9001d2a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001d2a6:	b510      	push	{r4, lr}
9001d2a8:	4604      	mov	r4, r0
9001d2aa:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001d2ae:	f00c fa3f 	bl	90029730 <_ZdlPvj>
9001d2b2:	4620      	mov	r0, r4
9001d2b4:	bd10      	pop	{r4, pc}

9001d2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d2b6:	b510      	push	{r4, lr}
9001d2b8:	4604      	mov	r4, r0
9001d2ba:	2104      	movs	r1, #4
9001d2bc:	f00c fa38 	bl	90029730 <_ZdlPvj>
9001d2c0:	4620      	mov	r0, r4
9001d2c2:	bd10      	pop	{r4, pc}

9001d2c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d2c4:	b510      	push	{r4, lr}
9001d2c6:	4604      	mov	r4, r0
9001d2c8:	2104      	movs	r1, #4
9001d2ca:	f00c fa31 	bl	90029730 <_ZdlPvj>
9001d2ce:	4620      	mov	r0, r4
9001d2d0:	bd10      	pop	{r4, pc}

9001d2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d2d2:	b510      	push	{r4, lr}
9001d2d4:	4604      	mov	r4, r0
9001d2d6:	2104      	movs	r1, #4
9001d2d8:	f00c fa2a 	bl	90029730 <_ZdlPvj>
9001d2dc:	4620      	mov	r0, r4
9001d2de:	bd10      	pop	{r4, pc}

9001d2e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d2e0:	b510      	push	{r4, lr}
9001d2e2:	4604      	mov	r4, r0
9001d2e4:	2104      	movs	r1, #4
9001d2e6:	f00c fa23 	bl	90029730 <_ZdlPvj>
9001d2ea:	4620      	mov	r0, r4
9001d2ec:	bd10      	pop	{r4, pc}

9001d2ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d2ee:	b510      	push	{r4, lr}
9001d2f0:	4604      	mov	r4, r0
9001d2f2:	2104      	movs	r1, #4
9001d2f4:	f00c fa1c 	bl	90029730 <_ZdlPvj>
9001d2f8:	4620      	mov	r0, r4
9001d2fa:	bd10      	pop	{r4, pc}

9001d2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001d2fc:	b510      	push	{r4, lr}
9001d2fe:	4604      	mov	r4, r0
9001d300:	2104      	movs	r1, #4
9001d302:	f00c fa15 	bl	90029730 <_ZdlPvj>
9001d306:	4620      	mov	r0, r4
9001d308:	bd10      	pop	{r4, pc}

9001d30a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d30a:	b510      	push	{r4, lr}
9001d30c:	4604      	mov	r4, r0
9001d30e:	2104      	movs	r1, #4
9001d310:	f00c fa0e 	bl	90029730 <_ZdlPvj>
9001d314:	4620      	mov	r0, r4
9001d316:	bd10      	pop	{r4, pc}

9001d318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001d318:	b510      	push	{r4, lr}
9001d31a:	4604      	mov	r4, r0
9001d31c:	2104      	movs	r1, #4
9001d31e:	f00c fa07 	bl	90029730 <_ZdlPvj>
9001d322:	4620      	mov	r0, r4
9001d324:	bd10      	pop	{r4, pc}

9001d326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d326:	b510      	push	{r4, lr}
9001d328:	4604      	mov	r4, r0
9001d32a:	2104      	movs	r1, #4
9001d32c:	f00c fa00 	bl	90029730 <_ZdlPvj>
9001d330:	4620      	mov	r0, r4
9001d332:	bd10      	pop	{r4, pc}

9001d334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d334:	b510      	push	{r4, lr}
9001d336:	4604      	mov	r4, r0
9001d338:	2104      	movs	r1, #4
9001d33a:	f00c f9f9 	bl	90029730 <_ZdlPvj>
9001d33e:	4620      	mov	r0, r4
9001d340:	bd10      	pop	{r4, pc}

9001d342 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d342:	b510      	push	{r4, lr}
9001d344:	4604      	mov	r4, r0
9001d346:	2104      	movs	r1, #4
9001d348:	f00c f9f2 	bl	90029730 <_ZdlPvj>
9001d34c:	4620      	mov	r0, r4
9001d34e:	bd10      	pop	{r4, pc}

9001d350 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d350:	b510      	push	{r4, lr}
9001d352:	4604      	mov	r4, r0
9001d354:	2104      	movs	r1, #4
9001d356:	f00c f9eb 	bl	90029730 <_ZdlPvj>
9001d35a:	4620      	mov	r0, r4
9001d35c:	bd10      	pop	{r4, pc}

9001d35e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d35e:	b510      	push	{r4, lr}
9001d360:	4604      	mov	r4, r0
9001d362:	2104      	movs	r1, #4
9001d364:	f00c f9e4 	bl	90029730 <_ZdlPvj>
9001d368:	4620      	mov	r0, r4
9001d36a:	bd10      	pop	{r4, pc}

9001d36c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d36c:	b510      	push	{r4, lr}
9001d36e:	4604      	mov	r4, r0
9001d370:	2104      	movs	r1, #4
9001d372:	f00c f9dd 	bl	90029730 <_ZdlPvj>
9001d376:	4620      	mov	r0, r4
9001d378:	bd10      	pop	{r4, pc}

9001d37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d37a:	b510      	push	{r4, lr}
9001d37c:	4604      	mov	r4, r0
9001d37e:	2104      	movs	r1, #4
9001d380:	f00c f9d6 	bl	90029730 <_ZdlPvj>
9001d384:	4620      	mov	r0, r4
9001d386:	bd10      	pop	{r4, pc}

9001d388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d388:	b510      	push	{r4, lr}
9001d38a:	4604      	mov	r4, r0
9001d38c:	2104      	movs	r1, #4
9001d38e:	f00c f9cf 	bl	90029730 <_ZdlPvj>
9001d392:	4620      	mov	r0, r4
9001d394:	bd10      	pop	{r4, pc}

9001d396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d396:	b510      	push	{r4, lr}
9001d398:	4604      	mov	r4, r0
9001d39a:	2104      	movs	r1, #4
9001d39c:	f00c f9c8 	bl	90029730 <_ZdlPvj>
9001d3a0:	4620      	mov	r0, r4
9001d3a2:	bd10      	pop	{r4, pc}

9001d3a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d3a4:	b510      	push	{r4, lr}
9001d3a6:	4604      	mov	r4, r0
9001d3a8:	2104      	movs	r1, #4
9001d3aa:	f00c f9c1 	bl	90029730 <_ZdlPvj>
9001d3ae:	4620      	mov	r0, r4
9001d3b0:	bd10      	pop	{r4, pc}

9001d3b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d3b2:	b510      	push	{r4, lr}
9001d3b4:	4604      	mov	r4, r0
9001d3b6:	2104      	movs	r1, #4
9001d3b8:	f00c f9ba 	bl	90029730 <_ZdlPvj>
9001d3bc:	4620      	mov	r0, r4
9001d3be:	bd10      	pop	{r4, pc}

9001d3c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d3c0:	b510      	push	{r4, lr}
9001d3c2:	4604      	mov	r4, r0
9001d3c4:	2104      	movs	r1, #4
9001d3c6:	f00c f9b3 	bl	90029730 <_ZdlPvj>
9001d3ca:	4620      	mov	r0, r4
9001d3cc:	bd10      	pop	{r4, pc}

9001d3ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d3ce:	b510      	push	{r4, lr}
9001d3d0:	4604      	mov	r4, r0
9001d3d2:	2104      	movs	r1, #4
9001d3d4:	f00c f9ac 	bl	90029730 <_ZdlPvj>
9001d3d8:	4620      	mov	r0, r4
9001d3da:	bd10      	pop	{r4, pc}

9001d3dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d3dc:	b510      	push	{r4, lr}
9001d3de:	4604      	mov	r4, r0
9001d3e0:	2104      	movs	r1, #4
9001d3e2:	f00c f9a5 	bl	90029730 <_ZdlPvj>
9001d3e6:	4620      	mov	r0, r4
9001d3e8:	bd10      	pop	{r4, pc}

9001d3ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d3ea:	b510      	push	{r4, lr}
9001d3ec:	4604      	mov	r4, r0
9001d3ee:	2104      	movs	r1, #4
9001d3f0:	f00c f99e 	bl	90029730 <_ZdlPvj>
9001d3f4:	4620      	mov	r0, r4
9001d3f6:	bd10      	pop	{r4, pc}

9001d3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d3f8:	b510      	push	{r4, lr}
9001d3fa:	4604      	mov	r4, r0
9001d3fc:	2104      	movs	r1, #4
9001d3fe:	f00c f997 	bl	90029730 <_ZdlPvj>
9001d402:	4620      	mov	r0, r4
9001d404:	bd10      	pop	{r4, pc}

9001d406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001d406:	b510      	push	{r4, lr}
9001d408:	4604      	mov	r4, r0
9001d40a:	2104      	movs	r1, #4
9001d40c:	f00c f990 	bl	90029730 <_ZdlPvj>
9001d410:	4620      	mov	r0, r4
9001d412:	bd10      	pop	{r4, pc}

9001d414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001d414:	b510      	push	{r4, lr}
9001d416:	4604      	mov	r4, r0
9001d418:	2104      	movs	r1, #4
9001d41a:	f00c f989 	bl	90029730 <_ZdlPvj>
9001d41e:	4620      	mov	r0, r4
9001d420:	bd10      	pop	{r4, pc}

9001d422 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001d422:	b510      	push	{r4, lr}
9001d424:	4604      	mov	r4, r0
9001d426:	2104      	movs	r1, #4
9001d428:	f00c f982 	bl	90029730 <_ZdlPvj>
9001d42c:	4620      	mov	r0, r4
9001d42e:	bd10      	pop	{r4, pc}

9001d430 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001d430:	b510      	push	{r4, lr}
9001d432:	4604      	mov	r4, r0
9001d434:	2104      	movs	r1, #4
9001d436:	f00c f97b 	bl	90029730 <_ZdlPvj>
9001d43a:	4620      	mov	r0, r4
9001d43c:	bd10      	pop	{r4, pc}
	...

9001d440 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001d440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d444:	b08f      	sub	sp, #60	@ 0x3c
9001d446:	4616      	mov	r6, r2
9001d448:	4682      	mov	sl, r0
9001d44a:	460d      	mov	r5, r1
9001d44c:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001d450:	9205      	str	r2, [sp, #20]
9001d452:	2a00      	cmp	r2, #0
9001d454:	f000 82b7 	beq.w	9001d9c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001d458:	6830      	ldr	r0, [r6, #0]
9001d45a:	ac0a      	add	r4, sp, #40	@ 0x28
9001d45c:	6871      	ldr	r1, [r6, #4]
9001d45e:	c403      	stmia	r4!, {r0, r1}
9001d460:	6818      	ldr	r0, [r3, #0]
9001d462:	ac0c      	add	r4, sp, #48	@ 0x30
9001d464:	6859      	ldr	r1, [r3, #4]
9001d466:	c403      	stmia	r4!, {r0, r1}
9001d468:	a80a      	add	r0, sp, #40	@ 0x28
9001d46a:	f7f9 fcdd 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d46e:	4631      	mov	r1, r6
9001d470:	a80c      	add	r0, sp, #48	@ 0x30
9001d472:	f7f9 fd1d 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d476:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001d47a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d47e:	bfdb      	ittet	le
9001d480:	b293      	uxthle	r3, r2
9001d482:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d486:	2301      	movgt	r3, #1
9001d488:	fb91 f3f3 	sdivle	r3, r1, r3
9001d48c:	9300      	str	r3, [sp, #0]
9001d48e:	f105 0308 	add.w	r3, r5, #8
9001d492:	9900      	ldr	r1, [sp, #0]
9001d494:	9306      	str	r3, [sp, #24]
9001d496:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001d49a:	440b      	add	r3, r1
9001d49c:	3b01      	subs	r3, #1
9001d49e:	fb93 f3f1 	sdiv	r3, r3, r1
9001d4a2:	3b01      	subs	r3, #1
9001d4a4:	9906      	ldr	r1, [sp, #24]
9001d4a6:	b29b      	uxth	r3, r3
9001d4a8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d4ac:	9900      	ldr	r1, [sp, #0]
9001d4ae:	9307      	str	r3, [sp, #28]
9001d4b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001d4b4:	fb93 f0f1 	sdiv	r0, r3, r1
9001d4b8:	b284      	uxth	r4, r0
9001d4ba:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001d4be:	9402      	str	r4, [sp, #8]
9001d4c0:	9d02      	ldr	r5, [sp, #8]
9001d4c2:	9c00      	ldr	r4, [sp, #0]
9001d4c4:	fb05 3414 	mls	r4, r5, r4, r3
9001d4c8:	fb14 f402 	smulbb	r4, r4, r2
9001d4cc:	440c      	add	r4, r1
9001d4ce:	b2a4      	uxth	r4, r4
9001d4d0:	2d00      	cmp	r5, #0
9001d4d2:	d06c      	beq.n	9001d5ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001d4d4:	1e6a      	subs	r2, r5, #1
9001d4d6:	9806      	ldr	r0, [sp, #24]
9001d4d8:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001d4dc:	9a07      	ldr	r2, [sp, #28]
9001d4de:	ba36      	rev	r6, r6
9001d4e0:	4416      	add	r6, r2
9001d4e2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001d4e6:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001d4ea:	4411      	add	r1, r2
9001d4ec:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001d4f0:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001d820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001d4f4:	4413      	add	r3, r2
9001d4f6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001d4fa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001d4fe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001d502:	9301      	str	r3, [sp, #4]
9001d504:	4bc4      	ldr	r3, [pc, #784]	@ (9001d818 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001d506:	6818      	ldr	r0, [r3, #0]
9001d508:	6803      	ldr	r3, [r0, #0]
9001d50a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d50c:	4798      	blx	r3
9001d50e:	4bc3      	ldr	r3, [pc, #780]	@ (9001d81c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001d510:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001d514:	881b      	ldrh	r3, [r3, #0]
9001d516:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001d51a:	fb03 2808 	mla	r8, r3, r8, r2
9001d51e:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d522:	436b      	muls	r3, r5
9001d524:	2500      	movs	r5, #0
9001d526:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001d52a:	4629      	mov	r1, r5
9001d52c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001d530:	9309      	str	r3, [sp, #36]	@ 0x24
9001d532:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001d536:	fb94 f3f3 	sdiv	r3, r4, r3
9001d53a:	9304      	str	r3, [sp, #16]
9001d53c:	f10a 0304 	add.w	r3, sl, #4
9001d540:	4618      	mov	r0, r3
9001d542:	9308      	str	r3, [sp, #32]
9001d544:	f00c ff08 	bl	9002a358 <memset>
9001d548:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d54a:	4543      	cmp	r3, r8
9001d54c:	f240 8236 	bls.w	9001d9bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001d550:	2203      	movs	r2, #3
9001d552:	2107      	movs	r1, #7
9001d554:	200b      	movs	r0, #11
9001d556:	2c00      	cmp	r4, #0
9001d558:	f000 8131 	beq.w	9001d7be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001d55c:	7833      	ldrb	r3, [r6, #0]
9001d55e:	b2db      	uxtb	r3, r3
9001d560:	2bfe      	cmp	r3, #254	@ 0xfe
9001d562:	d126      	bne.n	9001d5b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001d564:	f896 e001 	ldrb.w	lr, [r6, #1]
9001d568:	3c01      	subs	r4, #1
9001d56a:	f896 c002 	ldrb.w	ip, [r6, #2]
9001d56e:	1d37      	adds	r7, r6, #4
9001d570:	fa5f fe8e 	uxtb.w	lr, lr
9001d574:	f896 b003 	ldrb.w	fp, [r6, #3]
9001d578:	fa5f fc8c 	uxtb.w	ip, ip
9001d57c:	f36e 0507 	bfi	r5, lr, #0, #8
9001d580:	fa5f fb8b 	uxtb.w	fp, fp
9001d584:	b2a4      	uxth	r4, r4
9001d586:	f36c 250f 	bfi	r5, ip, #8, #8
9001d58a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001d58e:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001d592:	f36b 4517 	bfi	r5, fp, #16, #8
9001d596:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001d59a:	0e2b      	lsrs	r3, r5, #24
9001d59c:	fb10 c303 	smlabb	r3, r0, r3, ip
9001d5a0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d5a4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d5a8:	605d      	str	r5, [r3, #4]
9001d5aa:	463e      	mov	r6, r7
9001d5ac:	e7d3      	b.n	9001d556 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001d5ae:	9e07      	ldr	r6, [sp, #28]
9001d5b0:	e797      	b.n	9001d4e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001d5b2:	2bff      	cmp	r3, #255	@ 0xff
9001d5b4:	d127      	bne.n	9001d606 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001d5b6:	f896 c001 	ldrb.w	ip, [r6, #1]
9001d5ba:	3c01      	subs	r4, #1
9001d5bc:	78b3      	ldrb	r3, [r6, #2]
9001d5be:	1d77      	adds	r7, r6, #5
9001d5c0:	fa5f fc8c 	uxtb.w	ip, ip
9001d5c4:	f896 e003 	ldrb.w	lr, [r6, #3]
9001d5c8:	b2db      	uxtb	r3, r3
9001d5ca:	f896 b004 	ldrb.w	fp, [r6, #4]
9001d5ce:	f36c 0507 	bfi	r5, ip, #0, #8
9001d5d2:	fa5f fe8e 	uxtb.w	lr, lr
9001d5d6:	fa5f fb8b 	uxtb.w	fp, fp
9001d5da:	f363 250f 	bfi	r5, r3, #8, #8
9001d5de:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001d5e2:	b2a4      	uxth	r4, r4
9001d5e4:	fb12 330e 	smlabb	r3, r2, lr, r3
9001d5e8:	f36e 4517 	bfi	r5, lr, #16, #8
9001d5ec:	fb11 330c 	smlabb	r3, r1, ip, r3
9001d5f0:	f36b 651f 	bfi	r5, fp, #24, #8
9001d5f4:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001d5f8:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001d5fc:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001d600:	f8cb 5004 	str.w	r5, [fp, #4]
9001d604:	e7d1      	b.n	9001d5aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d606:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001d60a:	f106 0701 	add.w	r7, r6, #1
9001d60e:	d107      	bne.n	9001d620 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001d610:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d614:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d618:	685d      	ldr	r5, [r3, #4]
9001d61a:	3c01      	subs	r4, #1
9001d61c:	b2a4      	uxth	r4, r4
9001d61e:	e7c4      	b.n	9001d5aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d620:	f1bc 0f01 	cmp.w	ip, #1
9001d624:	d12c      	bne.n	9001d680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001d626:	f003 0e03 	and.w	lr, r3, #3
9001d62a:	f003 0c0c 	and.w	ip, r3, #12
9001d62e:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001d632:	f1ae 0e02 	sub.w	lr, lr, #2
9001d636:	f1ac 0c08 	sub.w	ip, ip, #8
9001d63a:	3b02      	subs	r3, #2
9001d63c:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001d640:	fa5f fe8e 	uxtb.w	lr, lr
9001d644:	f36e 0507 	bfi	r5, lr, #0, #8
9001d648:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001d64c:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001d650:	f36c 250f 	bfi	r5, ip, #8, #8
9001d654:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001d658:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d65c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001d660:	b2db      	uxtb	r3, r3
9001d662:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001d666:	f363 4517 	bfi	r5, r3, #16, #8
9001d66a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001d66e:	0e2e      	lsrs	r6, r5, #24
9001d670:	fb10 c606 	smlabb	r6, r0, r6, ip
9001d674:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001d678:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001d67c:	6075      	str	r5, [r6, #4]
9001d67e:	e7cc      	b.n	9001d61a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001d680:	f1bc 0f02 	cmp.w	ip, #2
9001d684:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d688:	d12a      	bne.n	9001d6e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001d68a:	1cb7      	adds	r7, r6, #2
9001d68c:	7876      	ldrb	r6, [r6, #1]
9001d68e:	3b20      	subs	r3, #32
9001d690:	b2f6      	uxtb	r6, r6
9001d692:	f006 0c0f 	and.w	ip, r6, #15
9001d696:	1136      	asrs	r6, r6, #4
9001d698:	f1ac 0c08 	sub.w	ip, ip, #8
9001d69c:	3e08      	subs	r6, #8
9001d69e:	449c      	add	ip, r3
9001d6a0:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001d6a4:	fa5f fc8c 	uxtb.w	ip, ip
9001d6a8:	f36c 0507 	bfi	r5, ip, #0, #8
9001d6ac:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001d6b0:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001d6b4:	4433      	add	r3, r6
9001d6b6:	fa5f fe8e 	uxtb.w	lr, lr
9001d6ba:	f36e 250f 	bfi	r5, lr, #8, #8
9001d6be:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001d6c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d6c6:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001d6ca:	b2db      	uxtb	r3, r3
9001d6cc:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001d6d0:	f363 4517 	bfi	r5, r3, #16, #8
9001d6d4:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001d6d8:	0e2e      	lsrs	r6, r5, #24
9001d6da:	fb10 e606 	smlabb	r6, r0, r6, lr
9001d6de:	e7c9      	b.n	9001d674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001d6e0:	1c5e      	adds	r6, r3, #1
9001d6e2:	42a6      	cmp	r6, r4
9001d6e4:	dd4e      	ble.n	9001d784 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001d6e6:	1b36      	subs	r6, r6, r4
9001d6e8:	2e00      	cmp	r6, #0
9001d6ea:	dc4e      	bgt.n	9001d78a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001d6ec:	f8dd b004 	ldr.w	fp, [sp, #4]
9001d6f0:	2400      	movs	r4, #0
9001d6f2:	f1bb 0f00 	cmp.w	fp, #0
9001d6f6:	f340 8122 	ble.w	9001d93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001d6fa:	1c7b      	adds	r3, r7, #1
9001d6fc:	9303      	str	r3, [sp, #12]
9001d6fe:	783b      	ldrb	r3, [r7, #0]
9001d700:	b2db      	uxtb	r3, r3
9001d702:	2bfe      	cmp	r3, #254	@ 0xfe
9001d704:	d160      	bne.n	9001d7c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001d706:	7879      	ldrb	r1, [r7, #1]
9001d708:	1d3b      	adds	r3, r7, #4
9001d70a:	78ba      	ldrb	r2, [r7, #2]
9001d70c:	b2c9      	uxtb	r1, r1
9001d70e:	78f8      	ldrb	r0, [r7, #3]
9001d710:	b2d2      	uxtb	r2, r2
9001d712:	9303      	str	r3, [sp, #12]
9001d714:	f361 0507 	bfi	r5, r1, #0, #8
9001d718:	b2c0      	uxtb	r0, r0
9001d71a:	2303      	movs	r3, #3
9001d71c:	f362 250f 	bfi	r5, r2, #8, #8
9001d720:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d724:	fb13 2200 	smlabb	r2, r3, r0, r2
9001d728:	f360 4517 	bfi	r5, r0, #16, #8
9001d72c:	2307      	movs	r3, #7
9001d72e:	0e2e      	lsrs	r6, r5, #24
9001d730:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d734:	230b      	movs	r3, #11
9001d736:	fb13 1306 	smlabb	r3, r3, r6, r1
9001d73a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d73e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d742:	605d      	str	r5, [r3, #4]
9001d744:	2601      	movs	r6, #1
9001d746:	4637      	mov	r7, r6
9001d748:	0e2b      	lsrs	r3, r5, #24
9001d74a:	ebab 0b07 	sub.w	fp, fp, r7
9001d74e:	eba6 0607 	sub.w	r6, r6, r7
9001d752:	f040 80d3 	bne.w	9001d8fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001d756:	b18c      	cbz	r4, 9001d77c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001d758:	4648      	mov	r0, r9
9001d75a:	00a1      	lsls	r1, r4, #2
9001d75c:	f7e5 f8e4 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001d760:	9b05      	ldr	r3, [sp, #20]
9001d762:	4622      	mov	r2, r4
9001d764:	4649      	mov	r1, r9
9001d766:	4640      	mov	r0, r8
9001d768:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d76c:	f7e5 f94a 	bl	90002a04 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d770:	4b2b      	ldr	r3, [pc, #172]	@ (9001d820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001d772:	4a2c      	ldr	r2, [pc, #176]	@ (9001d824 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001d774:	4599      	cmp	r9, r3
9001d776:	bf08      	it	eq
9001d778:	4613      	moveq	r3, r2
9001d77a:	4699      	mov	r9, r3
9001d77c:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001d780:	2400      	movs	r4, #0
9001d782:	e0da      	b.n	9001d93a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001d784:	1ba6      	subs	r6, r4, r6
9001d786:	b2b4      	uxth	r4, r6
9001d788:	e70f      	b.n	9001d5aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d78a:	9b01      	ldr	r3, [sp, #4]
9001d78c:	9a01      	ldr	r2, [sp, #4]
9001d78e:	42b3      	cmp	r3, r6
9001d790:	bfa8      	it	ge
9001d792:	4633      	movge	r3, r6
9001d794:	0e2c      	lsrs	r4, r5, #24
9001d796:	eba2 0b03 	sub.w	fp, r2, r3
9001d79a:	eba6 0603 	sub.w	r6, r6, r3
9001d79e:	d00b      	beq.n	9001d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001d7a0:	f1a9 0104 	sub.w	r1, r9, #4
9001d7a4:	461a      	mov	r2, r3
9001d7a6:	2a00      	cmp	r2, #0
9001d7a8:	dc02      	bgt.n	9001d7b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001d7aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001d7ae:	e7a0      	b.n	9001d6f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d7b0:	f841 5f04 	str.w	r5, [r1, #4]!
9001d7b4:	3a01      	subs	r2, #1
9001d7b6:	e7f6      	b.n	9001d7a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001d7b8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d7bc:	e799      	b.n	9001d6f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d7be:	4637      	mov	r7, r6
9001d7c0:	f8dd b004 	ldr.w	fp, [sp, #4]
9001d7c4:	4626      	mov	r6, r4
9001d7c6:	e794      	b.n	9001d6f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d7c8:	2bff      	cmp	r3, #255	@ 0xff
9001d7ca:	d11d      	bne.n	9001d808 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001d7cc:	7878      	ldrb	r0, [r7, #1]
9001d7ce:	1d7b      	adds	r3, r7, #5
9001d7d0:	78ba      	ldrb	r2, [r7, #2]
9001d7d2:	b2c0      	uxtb	r0, r0
9001d7d4:	78fe      	ldrb	r6, [r7, #3]
9001d7d6:	b2d2      	uxtb	r2, r2
9001d7d8:	9303      	str	r3, [sp, #12]
9001d7da:	f360 0507 	bfi	r5, r0, #0, #8
9001d7de:	793b      	ldrb	r3, [r7, #4]
9001d7e0:	b2f6      	uxtb	r6, r6
9001d7e2:	b2d9      	uxtb	r1, r3
9001d7e4:	f362 250f 	bfi	r5, r2, #8, #8
9001d7e8:	2303      	movs	r3, #3
9001d7ea:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d7ee:	f366 4517 	bfi	r5, r6, #16, #8
9001d7f2:	fb13 2206 	smlabb	r2, r3, r6, r2
9001d7f6:	2307      	movs	r3, #7
9001d7f8:	f361 651f 	bfi	r5, r1, #24, #8
9001d7fc:	fb13 2000 	smlabb	r0, r3, r0, r2
9001d800:	230b      	movs	r3, #11
9001d802:	fb13 0301 	smlabb	r3, r3, r1, r0
9001d806:	e798      	b.n	9001d73a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001d808:	119e      	asrs	r6, r3, #6
9001d80a:	d10d      	bne.n	9001d828 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001d80c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d810:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d814:	685d      	ldr	r5, [r3, #4]
9001d816:	e795      	b.n	9001d744 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d818:	24021844 	.word	0x24021844
9001d81c:	2402183e 	.word	0x2402183e
9001d820:	24005b80 	.word	0x24005b80
9001d824:	24005c80 	.word	0x24005c80
9001d828:	2e01      	cmp	r6, #1
9001d82a:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001d82e:	d12b      	bne.n	9001d888 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001d830:	f003 0003 	and.w	r0, r3, #3
9001d834:	f003 020c 	and.w	r2, r3, #12
9001d838:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001d83c:	3802      	subs	r0, #2
9001d83e:	3a08      	subs	r2, #8
9001d840:	1e9f      	subs	r7, r3, #2
9001d842:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001d846:	b2c0      	uxtb	r0, r0
9001d848:	f360 0507 	bfi	r5, r0, #0, #8
9001d84c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001d850:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001d854:	f362 250f 	bfi	r5, r2, #8, #8
9001d858:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d85c:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001d860:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001d864:	2703      	movs	r7, #3
9001d866:	b2db      	uxtb	r3, r3
9001d868:	fb17 2203 	smlabb	r2, r7, r3, r2
9001d86c:	2707      	movs	r7, #7
9001d86e:	f363 4517 	bfi	r5, r3, #16, #8
9001d872:	230b      	movs	r3, #11
9001d874:	fb17 2000 	smlabb	r0, r7, r0, r2
9001d878:	fb13 0101 	smlabb	r1, r3, r1, r0
9001d87c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d880:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d884:	604d      	str	r5, [r1, #4]
9001d886:	e75e      	b.n	9001d746 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001d888:	2e02      	cmp	r6, #2
9001d88a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d88e:	d12f      	bne.n	9001d8f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001d890:	7878      	ldrb	r0, [r7, #1]
9001d892:	1cba      	adds	r2, r7, #2
9001d894:	3b20      	subs	r3, #32
9001d896:	b2c0      	uxtb	r0, r0
9001d898:	9203      	str	r2, [sp, #12]
9001d89a:	f000 020f 	and.w	r2, r0, #15
9001d89e:	1100      	asrs	r0, r0, #4
9001d8a0:	3a08      	subs	r2, #8
9001d8a2:	3808      	subs	r0, #8
9001d8a4:	441a      	add	r2, r3
9001d8a6:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001d8aa:	b2d2      	uxtb	r2, r2
9001d8ac:	f362 0507 	bfi	r5, r2, #0, #8
9001d8b0:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001d8b4:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001d8b8:	4403      	add	r3, r0
9001d8ba:	b2f6      	uxtb	r6, r6
9001d8bc:	f366 250f 	bfi	r5, r6, #8, #8
9001d8c0:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001d8c4:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001d8c8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001d8cc:	2003      	movs	r0, #3
9001d8ce:	b2db      	uxtb	r3, r3
9001d8d0:	fb10 6603 	smlabb	r6, r0, r3, r6
9001d8d4:	2007      	movs	r0, #7
9001d8d6:	f363 4517 	bfi	r5, r3, #16, #8
9001d8da:	230b      	movs	r3, #11
9001d8dc:	fb10 6202 	smlabb	r2, r0, r2, r6
9001d8e0:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d8e4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d8e8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d8ec:	604d      	str	r5, [r1, #4]
9001d8ee:	e729      	b.n	9001d744 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d8f0:	1c5e      	adds	r6, r3, #1
9001d8f2:	465f      	mov	r7, fp
9001d8f4:	45b3      	cmp	fp, r6
9001d8f6:	bfa8      	it	ge
9001d8f8:	4637      	movge	r7, r6
9001d8fa:	e725      	b.n	9001d748 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001d8fc:	193b      	adds	r3, r7, r4
9001d8fe:	2b40      	cmp	r3, #64	@ 0x40
9001d900:	dd13      	ble.n	9001d92a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001d902:	4648      	mov	r0, r9
9001d904:	00a1      	lsls	r1, r4, #2
9001d906:	f7e5 f80f 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001d90a:	4649      	mov	r1, r9
9001d90c:	9b05      	ldr	r3, [sp, #20]
9001d90e:	4622      	mov	r2, r4
9001d910:	4640      	mov	r0, r8
9001d912:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d916:	f7e5 f875 	bl	90002a04 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d91a:	4b2c      	ldr	r3, [pc, #176]	@ (9001d9cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001d91c:	2400      	movs	r4, #0
9001d91e:	4599      	cmp	r9, r3
9001d920:	bf0c      	ite	eq
9001d922:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001d9d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001d926:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001d9cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001d92a:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001d92e:	463b      	mov	r3, r7
9001d930:	3b01      	subs	r3, #1
9001d932:	f842 5b04 	str.w	r5, [r2], #4
9001d936:	d1fb      	bne.n	9001d930 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001d938:	443c      	add	r4, r7
9001d93a:	9f03      	ldr	r7, [sp, #12]
9001d93c:	e6d9      	b.n	9001d6f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d93e:	b15c      	cbz	r4, 9001d958 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001d940:	00a1      	lsls	r1, r4, #2
9001d942:	4648      	mov	r0, r9
9001d944:	f7e4 fff0 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001d948:	4640      	mov	r0, r8
9001d94a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d94e:	9b05      	ldr	r3, [sp, #20]
9001d950:	4622      	mov	r2, r4
9001d952:	4649      	mov	r1, r9
9001d954:	f7e5 f856 	bl	90002a04 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d958:	4b1d      	ldr	r3, [pc, #116]	@ (9001d9d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001d95a:	9a01      	ldr	r2, [sp, #4]
9001d95c:	881b      	ldrh	r3, [r3, #0]
9001d95e:	1a9b      	subs	r3, r3, r2
9001d960:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d964:	9b04      	ldr	r3, [sp, #16]
9001d966:	3301      	adds	r3, #1
9001d968:	9304      	str	r3, [sp, #16]
9001d96a:	9a04      	ldr	r2, [sp, #16]
9001d96c:	9b00      	ldr	r3, [sp, #0]
9001d96e:	4293      	cmp	r3, r2
9001d970:	d11d      	bne.n	9001d9ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001d972:	9b02      	ldr	r3, [sp, #8]
9001d974:	2500      	movs	r5, #0
9001d976:	9a02      	ldr	r2, [sp, #8]
9001d978:	f103 0b01 	add.w	fp, r3, #1
9001d97c:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001d980:	9b06      	ldr	r3, [sp, #24]
9001d982:	4629      	mov	r1, r5
9001d984:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001d988:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001d98c:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d990:	1ba4      	subs	r4, r4, r6
9001d992:	9b07      	ldr	r3, [sp, #28]
9001d994:	ba3f      	rev	r7, r7
9001d996:	9808      	ldr	r0, [sp, #32]
9001d998:	b2a4      	uxth	r4, r4
9001d99a:	441f      	add	r7, r3
9001d99c:	f00c fcdc 	bl	9002a358 <memset>
9001d9a0:	f8cd b008 	str.w	fp, [sp, #8]
9001d9a4:	9504      	str	r5, [sp, #16]
9001d9a6:	f7e4 ffb5 	bl	90002914 <_ZN8touchgfx5paint8tearDownEv>
9001d9aa:	463e      	mov	r6, r7
9001d9ac:	e5cc      	b.n	9001d548 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001d9ae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d9b2:	9b01      	ldr	r3, [sp, #4]
9001d9b4:	1ae4      	subs	r4, r4, r3
9001d9b6:	1ba4      	subs	r4, r4, r6
9001d9b8:	b2a4      	uxth	r4, r4
9001d9ba:	e7f4      	b.n	9001d9a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001d9bc:	4b05      	ldr	r3, [pc, #20]	@ (9001d9d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001d9be:	6818      	ldr	r0, [r3, #0]
9001d9c0:	6803      	ldr	r3, [r0, #0]
9001d9c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d9c4:	4798      	blx	r3
9001d9c6:	b00f      	add	sp, #60	@ 0x3c
9001d9c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d9cc:	24005b80 	.word	0x24005b80
9001d9d0:	2402183e 	.word	0x2402183e
9001d9d4:	24021844 	.word	0x24021844
9001d9d8:	24005c80 	.word	0x24005c80

9001d9dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d9e0:	b08f      	sub	sp, #60	@ 0x3c
9001d9e2:	461c      	mov	r4, r3
9001d9e4:	9205      	str	r2, [sp, #20]
9001d9e6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d9ea:	9100      	str	r1, [sp, #0]
9001d9ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001d9ee:	9201      	str	r2, [sp, #4]
9001d9f0:	2a00      	cmp	r2, #0
9001d9f2:	f000 8116 	beq.w	9001dc22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001d9f6:	6820      	ldr	r0, [r4, #0]
9001d9f8:	aa0a      	add	r2, sp, #40	@ 0x28
9001d9fa:	6861      	ldr	r1, [r4, #4]
9001d9fc:	c203      	stmia	r2!, {r0, r1}
9001d9fe:	6818      	ldr	r0, [r3, #0]
9001da00:	aa0c      	add	r2, sp, #48	@ 0x30
9001da02:	6859      	ldr	r1, [r3, #4]
9001da04:	c203      	stmia	r2!, {r0, r1}
9001da06:	a80a      	add	r0, sp, #40	@ 0x28
9001da08:	f7f9 fa0e 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001da0c:	4621      	mov	r1, r4
9001da0e:	a80c      	add	r0, sp, #48	@ 0x30
9001da10:	f7f9 fa4e 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001da14:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001da18:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001da1c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001da20:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001da24:	bfdb      	ittet	le
9001da26:	b2b3      	uxthle	r3, r6
9001da28:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001da2c:	2301      	movgt	r3, #1
9001da2e:	fb92 f3f3 	sdivle	r3, r2, r3
9001da32:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001da36:	441d      	add	r5, r3
9001da38:	fb92 f1f3 	sdiv	r1, r2, r3
9001da3c:	fa1f fc81 	uxth.w	ip, r1
9001da40:	3d01      	subs	r5, #1
9001da42:	fb0c 2413 	mls	r4, ip, r3, r2
9001da46:	4661      	mov	r1, ip
9001da48:	fb14 f406 	smulbb	r4, r4, r6
9001da4c:	4404      	add	r4, r0
9001da4e:	fb95 f5f3 	sdiv	r5, r5, r3
9001da52:	b2a4      	uxth	r4, r4
9001da54:	b131      	cbz	r1, 9001da64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001da56:	9b05      	ldr	r3, [sp, #20]
9001da58:	9900      	ldr	r1, [sp, #0]
9001da5a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001da5e:	ba1b      	rev	r3, r3
9001da60:	4419      	add	r1, r3
9001da62:	9100      	str	r1, [sp, #0]
9001da64:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001da68:	b2ad      	uxth	r5, r5
9001da6a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001da6e:	4418      	add	r0, r3
9001da70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001da74:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001da78:	00ad      	lsls	r5, r5, #2
9001da7a:	441a      	add	r2, r3
9001da7c:	4b6a      	ldr	r3, [pc, #424]	@ (9001dc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001da7e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001da82:	6818      	ldr	r0, [r3, #0]
9001da84:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001da88:	6803      	ldr	r3, [r0, #0]
9001da8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001da8c:	4798      	blx	r3
9001da8e:	4967      	ldr	r1, [pc, #412]	@ (9001dc2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001da90:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001da94:	2c00      	cmp	r4, #0
9001da96:	880b      	ldrh	r3, [r1, #0]
9001da98:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001da9c:	bf0c      	ite	eq
9001da9e:	46c6      	moveq	lr, r8
9001daa0:	f04f 0e00 	movne.w	lr, #0
9001daa4:	9109      	str	r1, [sp, #36]	@ 0x24
9001daa6:	fb03 c202 	mla	r2, r3, r2, ip
9001daaa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001daae:	4373      	muls	r3, r6
9001dab0:	fa1f fe8e 	uxth.w	lr, lr
9001dab4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dab8:	9103      	str	r1, [sp, #12]
9001daba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dabe:	9306      	str	r3, [sp, #24]
9001dac0:	1d2b      	adds	r3, r5, #4
9001dac2:	9307      	str	r3, [sp, #28]
9001dac4:	9b01      	ldr	r3, [sp, #4]
9001dac6:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001daca:	2300      	movs	r3, #0
9001dacc:	b292      	uxth	r2, r2
9001dace:	9302      	str	r3, [sp, #8]
9001dad0:	9204      	str	r2, [sp, #16]
9001dad2:	9a06      	ldr	r2, [sp, #24]
9001dad4:	4282      	cmp	r2, r0
9001dad6:	f240 809f 	bls.w	9001dc18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001dada:	b963      	cbnz	r3, 9001daf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001dadc:	9b00      	ldr	r3, [sp, #0]
9001dade:	781a      	ldrb	r2, [r3, #0]
9001dae0:	0993      	lsrs	r3, r2, #6
9001dae2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001dae6:	9202      	str	r2, [sp, #8]
9001dae8:	1e5a      	subs	r2, r3, #1
9001daea:	2a02      	cmp	r2, #2
9001daec:	d815      	bhi.n	9001db1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001daee:	9a00      	ldr	r2, [sp, #0]
9001daf0:	b29b      	uxth	r3, r3
9001daf2:	3201      	adds	r2, #1
9001daf4:	9200      	str	r2, [sp, #0]
9001daf6:	b1b4      	cbz	r4, 9001db26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001daf8:	429c      	cmp	r4, r3
9001dafa:	bf91      	iteee	ls
9001dafc:	1b1c      	subls	r4, r3, r4
9001dafe:	1ae4      	subhi	r4, r4, r3
9001db00:	4671      	movhi	r1, lr
9001db02:	f04f 0a00 	movhi.w	sl, #0
9001db06:	bf9b      	ittet	ls
9001db08:	fa1f fa84 	uxthls.w	sl, r4
9001db0c:	2400      	movls	r4, #0
9001db0e:	b2a4      	uxthhi	r4, r4
9001db10:	fa1f f188 	uxthls.w	r1, r8
9001db14:	4653      	mov	r3, sl
9001db16:	468e      	mov	lr, r1
9001db18:	e7db      	b.n	9001dad2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001db1a:	9a00      	ldr	r2, [sp, #0]
9001db1c:	9b00      	ldr	r3, [sp, #0]
9001db1e:	3202      	adds	r2, #2
9001db20:	785b      	ldrb	r3, [r3, #1]
9001db22:	9200      	str	r2, [sp, #0]
9001db24:	e7e7      	b.n	9001daf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001db26:	2202      	movs	r2, #2
9001db28:	9907      	ldr	r1, [sp, #28]
9001db2a:	4573      	cmp	r3, lr
9001db2c:	4615      	mov	r5, r2
9001db2e:	9a02      	ldr	r2, [sp, #8]
9001db30:	bf24      	itt	cs
9001db32:	eba3 0a0e 	subcs.w	sl, r3, lr
9001db36:	46f1      	movcs	r9, lr
9001db38:	fb15 1202 	smlabb	r2, r5, r2, r1
9001db3c:	9905      	ldr	r1, [sp, #20]
9001db3e:	bf34      	ite	cc
9001db40:	4699      	movcc	r9, r3
9001db42:	fa1f fa8a 	uxthcs.w	sl, sl
9001db46:	f831 c002 	ldrh.w	ip, [r1, r2]
9001db4a:	bf38      	it	cc
9001db4c:	ebae 0103 	subcc.w	r1, lr, r3
9001db50:	9a01      	ldr	r2, [sp, #4]
9001db52:	bf2e      	itee	cs
9001db54:	4621      	movcs	r1, r4
9001db56:	b289      	uxthcc	r1, r1
9001db58:	46a2      	movcc	sl, r4
9001db5a:	2aff      	cmp	r2, #255	@ 0xff
9001db5c:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001db60:	d105      	bne.n	9001db6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001db62:	4481      	add	r9, r0
9001db64:	4581      	cmp	r9, r0
9001db66:	d045      	beq.n	9001dbf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001db68:	f820 cb02 	strh.w	ip, [r0], #2
9001db6c:	e7fa      	b.n	9001db64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001db6e:	ea4f 222c 	mov.w	r2, ip, asr #8
9001db72:	9d03      	ldr	r5, [sp, #12]
9001db74:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001db78:	4481      	add	r9, r0
9001db7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001db7e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001db82:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001db86:	fa5f fc8c 	uxtb.w	ip, ip
9001db8a:	436a      	muls	r2, r5
9001db8c:	fb0b fb05 	mul.w	fp, fp, r5
9001db90:	fb0c fc05 	mul.w	ip, ip, r5
9001db94:	9208      	str	r2, [sp, #32]
9001db96:	4581      	cmp	r9, r0
9001db98:	d02c      	beq.n	9001dbf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001db9a:	8802      	ldrh	r2, [r0, #0]
9001db9c:	9d04      	ldr	r5, [sp, #16]
9001db9e:	1216      	asrs	r6, r2, #8
9001dba0:	9f04      	ldr	r7, [sp, #16]
9001dba2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dba6:	fb16 f605 	smulbb	r6, r6, r5
9001dbaa:	9d08      	ldr	r5, [sp, #32]
9001dbac:	442e      	add	r6, r5
9001dbae:	10d5      	asrs	r5, r2, #3
9001dbb0:	00d2      	lsls	r2, r2, #3
9001dbb2:	b2b6      	uxth	r6, r6
9001dbb4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001dbb8:	b2d2      	uxtb	r2, r2
9001dbba:	fb15 f507 	smulbb	r5, r5, r7
9001dbbe:	fb12 f207 	smulbb	r2, r2, r7
9001dbc2:	1c77      	adds	r7, r6, #1
9001dbc4:	445d      	add	r5, fp
9001dbc6:	4462      	add	r2, ip
9001dbc8:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001dbcc:	b2ad      	uxth	r5, r5
9001dbce:	b292      	uxth	r2, r2
9001dbd0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001dbd4:	1c57      	adds	r7, r2, #1
9001dbd6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001dbda:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dbde:	4316      	orrs	r6, r2
9001dbe0:	1c6a      	adds	r2, r5, #1
9001dbe2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001dbe6:	096d      	lsrs	r5, r5, #5
9001dbe8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001dbec:	432e      	orrs	r6, r5
9001dbee:	f820 6b02 	strh.w	r6, [r0], #2
9001dbf2:	e7d0      	b.n	9001db96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001dbf4:	4573      	cmp	r3, lr
9001dbf6:	d38d      	bcc.n	9001db14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001dbf8:	fa1f f188 	uxth.w	r1, r8
9001dbfc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001dc00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dc02:	1a64      	subs	r4, r4, r1
9001dc04:	881b      	ldrh	r3, [r3, #0]
9001dc06:	b2a4      	uxth	r4, r4
9001dc08:	eba3 0308 	sub.w	r3, r3, r8
9001dc0c:	2c00      	cmp	r4, #0
9001dc0e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dc12:	bf18      	it	ne
9001dc14:	2100      	movne	r1, #0
9001dc16:	e77d      	b.n	9001db14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001dc18:	4b03      	ldr	r3, [pc, #12]	@ (9001dc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001dc1a:	6818      	ldr	r0, [r3, #0]
9001dc1c:	6803      	ldr	r3, [r0, #0]
9001dc1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001dc20:	4798      	blx	r3
9001dc22:	b00f      	add	sp, #60	@ 0x3c
9001dc24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dc28:	24021844 	.word	0x24021844
9001dc2c:	2402183e 	.word	0x2402183e

9001dc30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001dc30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dc34:	b09f      	sub	sp, #124	@ 0x7c
9001dc36:	461d      	mov	r5, r3
9001dc38:	4604      	mov	r4, r0
9001dc3a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001dc3c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001dc40:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001dc44:	9209      	str	r2, [sp, #36]	@ 0x24
9001dc46:	2a00      	cmp	r2, #0
9001dc48:	f000 81ed 	beq.w	9001e026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001dc4c:	6828      	ldr	r0, [r5, #0]
9001dc4e:	aa1a      	add	r2, sp, #104	@ 0x68
9001dc50:	6869      	ldr	r1, [r5, #4]
9001dc52:	c203      	stmia	r2!, {r0, r1}
9001dc54:	6818      	ldr	r0, [r3, #0]
9001dc56:	aa1c      	add	r2, sp, #112	@ 0x70
9001dc58:	6859      	ldr	r1, [r3, #4]
9001dc5a:	c203      	stmia	r2!, {r0, r1}
9001dc5c:	a81a      	add	r0, sp, #104	@ 0x68
9001dc5e:	f7f9 f8e3 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dc62:	4629      	mov	r1, r5
9001dc64:	a81c      	add	r0, sp, #112	@ 0x70
9001dc66:	f7f9 f923 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dc6a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001dc6e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001dc72:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001dc76:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001dc7a:	bfdb      	ittet	le
9001dc7c:	b29a      	uxthle	r2, r3
9001dc7e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001dc82:	2201      	movgt	r2, #1
9001dc84:	fb91 f2f2 	sdivle	r2, r1, r2
9001dc88:	9202      	str	r2, [sp, #8]
9001dc8a:	9802      	ldr	r0, [sp, #8]
9001dc8c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001dc90:	9902      	ldr	r1, [sp, #8]
9001dc92:	fb92 f0f0 	sdiv	r0, r2, r0
9001dc96:	b280      	uxth	r0, r0
9001dc98:	4488      	add	r8, r1
9001dc9a:	9010      	str	r0, [sp, #64]	@ 0x40
9001dc9c:	f108 38ff 	add.w	r8, r8, #4294967295
9001dca0:	9802      	ldr	r0, [sp, #8]
9001dca2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001dca4:	fb05 2510 	mls	r5, r5, r0, r2
9001dca8:	fb98 f8f1 	sdiv	r8, r8, r1
9001dcac:	fb15 f503 	smulbb	r5, r5, r3
9001dcb0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001dcb4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001dcb8:	f108 0801 	add.w	r8, r8, #1
9001dcbc:	440d      	add	r5, r1
9001dcbe:	4419      	add	r1, r3
9001dcc0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001dcc4:	fa1f f888 	uxth.w	r8, r8
9001dcc8:	441a      	add	r2, r3
9001dcca:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001dcce:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001dcd2:	b2ad      	uxth	r5, r5
9001dcd4:	9304      	str	r3, [sp, #16]
9001dcd6:	4b94      	ldr	r3, [pc, #592]	@ (9001df28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001dcd8:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001dcdc:	6818      	ldr	r0, [r3, #0]
9001dcde:	6803      	ldr	r3, [r0, #0]
9001dce0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dce2:	4798      	blx	r3
9001dce4:	4b91      	ldr	r3, [pc, #580]	@ (9001df2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001dce6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001dcea:	2d00      	cmp	r5, #0
9001dcec:	881a      	ldrh	r2, [r3, #0]
9001dcee:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001dcf2:	fb02 f606 	mul.w	r6, r2, r6
9001dcf6:	fb02 7101 	mla	r1, r2, r1, r7
9001dcfa:	9318      	str	r3, [sp, #96]	@ 0x60
9001dcfc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001dd00:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001dd04:	f04f 0100 	mov.w	r1, #0
9001dd08:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001dd0c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001dd0e:	4b88      	ldr	r3, [pc, #544]	@ (9001df30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001dd10:	920a      	str	r2, [sp, #40]	@ 0x28
9001dd12:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dd14:	eba3 0304 	sub.w	r3, r3, r4
9001dd18:	910d      	str	r1, [sp, #52]	@ 0x34
9001dd1a:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001dd1e:	9319      	str	r3, [sp, #100]	@ 0x64
9001dd20:	f108 0204 	add.w	r2, r8, #4
9001dd24:	9211      	str	r2, [sp, #68]	@ 0x44
9001dd26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001dd28:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001dd2c:	9215      	str	r2, [sp, #84]	@ 0x54
9001dd2e:	9a04      	ldr	r2, [sp, #16]
9001dd30:	bf18      	it	ne
9001dd32:	2200      	movne	r2, #0
9001dd34:	b292      	uxth	r2, r2
9001dd36:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001dd38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dd3a:	fa11 f383 	uxtah	r3, r1, r3
9001dd3e:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001dd40:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001dd44:	3304      	adds	r3, #4
9001dd46:	9306      	str	r3, [sp, #24]
9001dd48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001dd4a:	4283      	cmp	r3, r0
9001dd4c:	f240 8166 	bls.w	9001e01c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001dd50:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001dd54:	f04f 0a01 	mov.w	sl, #1
9001dd58:	9902      	ldr	r1, [sp, #8]
9001dd5a:	9e06      	ldr	r6, [sp, #24]
9001dd5c:	46d3      	mov	fp, sl
9001dd5e:	4657      	mov	r7, sl
9001dd60:	7836      	ldrb	r6, [r6, #0]
9001dd62:	fbb5 f3f3 	udiv	r3, r5, r3
9001dd66:	1acb      	subs	r3, r1, r3
9001dd68:	9612      	str	r6, [sp, #72]	@ 0x48
9001dd6a:	3601      	adds	r6, #1
9001dd6c:	b29b      	uxth	r3, r3
9001dd6e:	9605      	str	r6, [sp, #20]
9001dd70:	9316      	str	r3, [sp, #88]	@ 0x58
9001dd72:	9b06      	ldr	r3, [sp, #24]
9001dd74:	7859      	ldrb	r1, [r3, #1]
9001dd76:	789b      	ldrb	r3, [r3, #2]
9001dd78:	021b      	lsls	r3, r3, #8
9001dd7a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001dd7e:	9906      	ldr	r1, [sp, #24]
9001dd80:	78c9      	ldrb	r1, [r1, #3]
9001dd82:	430b      	orrs	r3, r1
9001dd84:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001dd86:	4419      	add	r1, r3
9001dd88:	1c4e      	adds	r6, r1, #1
9001dd8a:	7849      	ldrb	r1, [r1, #1]
9001dd8c:	9603      	str	r6, [sp, #12]
9001dd8e:	0209      	lsls	r1, r1, #8
9001dd90:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001dd92:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001dd96:	5cf3      	ldrb	r3, [r6, r3]
9001dd98:	4319      	orrs	r1, r3
9001dd9a:	b28b      	uxth	r3, r1
9001dd9c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001dda0:	930c      	str	r3, [sp, #48]	@ 0x30
9001dda2:	2300      	movs	r3, #0
9001dda4:	9307      	str	r3, [sp, #28]
9001dda6:	469c      	mov	ip, r3
9001dda8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001ddac:	930e      	str	r3, [sp, #56]	@ 0x38
9001ddae:	2d00      	cmp	r5, #0
9001ddb0:	d07e      	beq.n	9001deb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001ddb2:	42af      	cmp	r7, r5
9001ddb4:	d26e      	bcs.n	9001de94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001ddb6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ddb8:	1bed      	subs	r5, r5, r7
9001ddba:	9201      	str	r2, [sp, #4]
9001ddbc:	4283      	cmp	r3, r0
9001ddbe:	b2ad      	uxth	r5, r5
9001ddc0:	d802      	bhi.n	9001ddc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001ddc2:	e073      	b.n	9001deac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001ddc4:	2b00      	cmp	r3, #0
9001ddc6:	d15f      	bne.n	9001de88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001ddc8:	9b03      	ldr	r3, [sp, #12]
9001ddca:	f1cb 0207 	rsb	r2, fp, #7
9001ddce:	785b      	ldrb	r3, [r3, #1]
9001ddd0:	4093      	lsls	r3, r2
9001ddd2:	005b      	lsls	r3, r3, #1
9001ddd4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001ddd8:	9b03      	ldr	r3, [sp, #12]
9001ddda:	781b      	ldrb	r3, [r3, #0]
9001dddc:	fa43 f30b 	asr.w	r3, r3, fp
9001dde0:	b2db      	uxtb	r3, r3
9001dde2:	4313      	orrs	r3, r2
9001dde4:	f10b 0201 	add.w	r2, fp, #1
9001dde8:	fa5f fb82 	uxtb.w	fp, r2
9001ddec:	9a03      	ldr	r2, [sp, #12]
9001ddee:	b29f      	uxth	r7, r3
9001ddf0:	f1bb 0f08 	cmp.w	fp, #8
9001ddf4:	bf13      	iteet	ne
9001ddf6:	3201      	addne	r2, #1
9001ddf8:	3202      	addeq	r2, #2
9001ddfa:	f04f 0b00 	moveq.w	fp, #0
9001ddfe:	9203      	strne	r2, [sp, #12]
9001de00:	bf08      	it	eq
9001de02:	9203      	streq	r2, [sp, #12]
9001de04:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001de06:	42ba      	cmp	r2, r7
9001de08:	d309      	bcc.n	9001de1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001de0a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001de0e:	2301      	movs	r3, #1
9001de10:	9a05      	ldr	r2, [sp, #20]
9001de12:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001de16:	d30e      	bcc.n	9001de36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001de18:	469a      	mov	sl, r3
9001de1a:	2600      	movs	r6, #0
9001de1c:	e035      	b.n	9001de8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001de1e:	9b05      	ldr	r3, [sp, #20]
9001de20:	429f      	cmp	r7, r3
9001de22:	d318      	bcc.n	9001de56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001de24:	eb04 030a 	add.w	r3, r4, sl
9001de28:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001de2c:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001de30:	f10a 0301 	add.w	r3, sl, #1
9001de34:	b29b      	uxth	r3, r3
9001de36:	9a05      	ldr	r2, [sp, #20]
9001de38:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001de3c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001de40:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001de42:	7116      	strb	r6, [r2, #4]
9001de44:	f10a 0601 	add.w	r6, sl, #1
9001de48:	80d1      	strh	r1, [r2, #6]
9001de4a:	7156      	strb	r6, [r2, #5]
9001de4c:	9a05      	ldr	r2, [sp, #20]
9001de4e:	3201      	adds	r2, #1
9001de50:	b292      	uxth	r2, r2
9001de52:	9205      	str	r2, [sp, #20]
9001de54:	e7e0      	b.n	9001de18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001de56:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001de5a:	463a      	mov	r2, r7
9001de5c:	795b      	ldrb	r3, [r3, #5]
9001de5e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001de62:	4426      	add	r6, r4
9001de64:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001de66:	eb01 0c06 	add.w	ip, r1, r6
9001de6a:	f1bc 0f00 	cmp.w	ip, #0
9001de6e:	dd07      	ble.n	9001de80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001de70:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001de74:	f892 c004 	ldrb.w	ip, [r2, #4]
9001de78:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001de7c:	88d2      	ldrh	r2, [r2, #6]
9001de7e:	e7f1      	b.n	9001de64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001de80:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001de84:	b29b      	uxth	r3, r3
9001de86:	e7c3      	b.n	9001de10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001de88:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001de8a:	970c      	str	r7, [sp, #48]	@ 0x30
9001de8c:	46b4      	mov	ip, r6
9001de8e:	9a01      	ldr	r2, [sp, #4]
9001de90:	461f      	mov	r7, r3
9001de92:	e78c      	b.n	9001ddae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001de94:	1b7b      	subs	r3, r7, r5
9001de96:	eb0c 0605 	add.w	r6, ip, r5
9001de9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001de9e:	b29b      	uxth	r3, r3
9001dea0:	b2b6      	uxth	r6, r6
9001dea2:	9201      	str	r2, [sp, #4]
9001dea4:	2500      	movs	r5, #0
9001dea6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001dea8:	4282      	cmp	r2, r0
9001deaa:	d88b      	bhi.n	9001ddc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001deac:	9a01      	ldr	r2, [sp, #4]
9001deae:	e74b      	b.n	9001dd48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001deb0:	4297      	cmp	r7, r2
9001deb2:	d332      	bcc.n	9001df1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001deb4:	1abb      	subs	r3, r7, r2
9001deb6:	9208      	str	r2, [sp, #32]
9001deb8:	9501      	str	r5, [sp, #4]
9001deba:	b29b      	uxth	r3, r3
9001debc:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001debe:	29ff      	cmp	r1, #255	@ 0xff
9001dec0:	9908      	ldr	r1, [sp, #32]
9001dec2:	eb0c 0601 	add.w	r6, ip, r1
9001dec6:	d135      	bne.n	9001df34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001dec8:	f1a0 0e02 	sub.w	lr, r0, #2
9001decc:	b2b6      	uxth	r6, r6
9001dece:	45b4      	cmp	ip, r6
9001ded0:	f040 808c 	bne.w	9001dfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001ded4:	9908      	ldr	r1, [sp, #32]
9001ded6:	4297      	cmp	r7, r2
9001ded8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001dedc:	d3e2      	bcc.n	9001dea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001dede:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001dee0:	9904      	ldr	r1, [sp, #16]
9001dee2:	8812      	ldrh	r2, [r2, #0]
9001dee4:	1a52      	subs	r2, r2, r1
9001dee6:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001dee8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001deec:	9a07      	ldr	r2, [sp, #28]
9001deee:	3201      	adds	r2, #1
9001def0:	428a      	cmp	r2, r1
9001def2:	9207      	str	r2, [sp, #28]
9001def4:	f040 8087 	bne.w	9001e006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001def8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001defc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001df00:	9b04      	ldr	r3, [sp, #16]
9001df02:	1bed      	subs	r5, r5, r7
9001df04:	b2ad      	uxth	r5, r5
9001df06:	2d00      	cmp	r5, #0
9001df08:	bf08      	it	eq
9001df0a:	461a      	moveq	r2, r3
9001df0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001df0e:	bf18      	it	ne
9001df10:	2200      	movne	r2, #0
9001df12:	3301      	adds	r3, #1
9001df14:	b292      	uxth	r2, r2
9001df16:	930d      	str	r3, [sp, #52]	@ 0x34
9001df18:	e70d      	b.n	9001dd36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001df1a:	1bd1      	subs	r1, r2, r7
9001df1c:	9708      	str	r7, [sp, #32]
9001df1e:	b28b      	uxth	r3, r1
9001df20:	9301      	str	r3, [sp, #4]
9001df22:	462b      	mov	r3, r5
9001df24:	e7ca      	b.n	9001debc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001df26:	bf00      	nop
9001df28:	24021844 	.word	0x24021844
9001df2c:	2402183e 	.word	0x2402183e
9001df30:	fffff7fb 	.word	0xfffff7fb
9001df34:	b2b6      	uxth	r6, r6
9001df36:	900b      	str	r0, [sp, #44]	@ 0x2c
9001df38:	45b4      	cmp	ip, r6
9001df3a:	d0cb      	beq.n	9001ded4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001df3c:	f10c 0101 	add.w	r1, ip, #1
9001df40:	44a4      	add	ip, r4
9001df42:	9117      	str	r1, [sp, #92]	@ 0x5c
9001df44:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001df48:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001df4a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001df4e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001df50:	ea4f 2825 	mov.w	r8, r5, asr #8
9001df54:	f8b1 c000 	ldrh.w	ip, [r1]
9001df58:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001df5a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001df5e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001df62:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001df66:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001df6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001df6e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001df72:	fb1e fe01 	smulbb	lr, lr, r1
9001df76:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001df78:	fa5f fc8c 	uxtb.w	ip, ip
9001df7c:	fb08 e801 	mla	r8, r8, r1, lr
9001df80:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001df84:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001df86:	00ed      	lsls	r5, r5, #3
9001df88:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001df8c:	fa1f f888 	uxth.w	r8, r8
9001df90:	fb19 f901 	smulbb	r9, r9, r1
9001df94:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001df96:	b2ed      	uxtb	r5, r5
9001df98:	fb0e 9e01 	mla	lr, lr, r1, r9
9001df9c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001df9e:	fb1c fc01 	smulbb	ip, ip, r1
9001dfa2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001dfa4:	fa1f fe8e 	uxth.w	lr, lr
9001dfa8:	fb05 c501 	mla	r5, r5, r1, ip
9001dfac:	f108 0c01 	add.w	ip, r8, #1
9001dfb0:	f10e 0901 	add.w	r9, lr, #1
9001dfb4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001dfb6:	b2ad      	uxth	r5, r5
9001dfb8:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001dfbc:	f105 0c01 	add.w	ip, r5, #1
9001dfc0:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001dfc4:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001dfc8:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001dfcc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001dfd0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001dfd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001dfd8:	ea4c 0808 	orr.w	r8, ip, r8
9001dfdc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001dfe0:	ea48 0809 	orr.w	r8, r8, r9
9001dfe4:	f821 8b02 	strh.w	r8, [r1], #2
9001dfe8:	910b      	str	r1, [sp, #44]	@ 0x2c
9001dfea:	e7a5      	b.n	9001df38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001dfec:	f10c 0801 	add.w	r8, ip, #1
9001dff0:	44a4      	add	ip, r4
9001dff2:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001dff4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001dff8:	fa1f fc88 	uxth.w	ip, r8
9001dffc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e000:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001e004:	e763      	b.n	9001dece <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001e006:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e00a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001e00e:	1aad      	subs	r5, r5, r2
9001e010:	b2ad      	uxth	r5, r5
9001e012:	2d00      	cmp	r5, #0
9001e014:	bf18      	it	ne
9001e016:	2200      	movne	r2, #0
9001e018:	9201      	str	r2, [sp, #4]
9001e01a:	e744      	b.n	9001dea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001e01c:	4b03      	ldr	r3, [pc, #12]	@ (9001e02c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001e01e:	6818      	ldr	r0, [r3, #0]
9001e020:	6803      	ldr	r3, [r0, #0]
9001e022:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e024:	4798      	blx	r3
9001e026:	b01f      	add	sp, #124	@ 0x7c
9001e028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e02c:	24021844 	.word	0x24021844

9001e030 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001e030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e034:	b093      	sub	sp, #76	@ 0x4c
9001e036:	4616      	mov	r6, r2
9001e038:	460d      	mov	r5, r1
9001e03a:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001e03e:	9003      	str	r0, [sp, #12]
9001e040:	9201      	str	r2, [sp, #4]
9001e042:	2a00      	cmp	r2, #0
9001e044:	f000 8303 	beq.w	9001e64e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001e048:	6830      	ldr	r0, [r6, #0]
9001e04a:	ac0e      	add	r4, sp, #56	@ 0x38
9001e04c:	6871      	ldr	r1, [r6, #4]
9001e04e:	c403      	stmia	r4!, {r0, r1}
9001e050:	6818      	ldr	r0, [r3, #0]
9001e052:	ac10      	add	r4, sp, #64	@ 0x40
9001e054:	6859      	ldr	r1, [r3, #4]
9001e056:	c403      	stmia	r4!, {r0, r1}
9001e058:	a80e      	add	r0, sp, #56	@ 0x38
9001e05a:	f7f8 fee5 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e05e:	4631      	mov	r1, r6
9001e060:	a810      	add	r0, sp, #64	@ 0x40
9001e062:	f7f8 ff25 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e066:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001e06a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001e06e:	bfdb      	ittet	le
9001e070:	b293      	uxthle	r3, r2
9001e072:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e076:	2301      	movgt	r3, #1
9001e078:	fb91 f3f3 	sdivle	r3, r1, r3
9001e07c:	9304      	str	r3, [sp, #16]
9001e07e:	f105 0308 	add.w	r3, r5, #8
9001e082:	9904      	ldr	r1, [sp, #16]
9001e084:	9308      	str	r3, [sp, #32]
9001e086:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001e08a:	440b      	add	r3, r1
9001e08c:	3b01      	subs	r3, #1
9001e08e:	fb93 f3f1 	sdiv	r3, r3, r1
9001e092:	3b01      	subs	r3, #1
9001e094:	9908      	ldr	r1, [sp, #32]
9001e096:	b29b      	uxth	r3, r3
9001e098:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e09c:	9904      	ldr	r1, [sp, #16]
9001e09e:	9309      	str	r3, [sp, #36]	@ 0x24
9001e0a0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001e0a4:	fb93 f0f1 	sdiv	r0, r3, r1
9001e0a8:	b284      	uxth	r4, r0
9001e0aa:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001e0ae:	9405      	str	r4, [sp, #20]
9001e0b0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001e0b4:	fb05 3914 	mls	r9, r5, r4, r3
9001e0b8:	fb19 f902 	smulbb	r9, r9, r2
9001e0bc:	4489      	add	r9, r1
9001e0be:	fa1f f989 	uxth.w	r9, r9
9001e0c2:	2d00      	cmp	r5, #0
9001e0c4:	d05d      	beq.n	9001e182 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001e0c6:	1e6a      	subs	r2, r5, #1
9001e0c8:	9808      	ldr	r0, [sp, #32]
9001e0ca:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001e0ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e0d0:	fa9a fa8a 	rev.w	sl, sl
9001e0d4:	4492      	add	sl, r2
9001e0d6:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001e0da:	f04f 0600 	mov.w	r6, #0
9001e0de:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001e0e2:	4411      	add	r1, r2
9001e0e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e0e8:	4413      	add	r3, r2
9001e0ea:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001e0ee:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001e0f2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001e0f6:	9302      	str	r3, [sp, #8]
9001e0f8:	4bca      	ldr	r3, [pc, #808]	@ (9001e424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001e0fa:	6818      	ldr	r0, [r3, #0]
9001e0fc:	6803      	ldr	r3, [r0, #0]
9001e0fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e100:	4798      	blx	r3
9001e102:	4bc9      	ldr	r3, [pc, #804]	@ (9001e428 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001e104:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001e108:	2100      	movs	r1, #0
9001e10a:	881b      	ldrh	r3, [r3, #0]
9001e10c:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001e110:	fb03 2404 	mla	r4, r3, r4, r2
9001e114:	2280      	movs	r2, #128	@ 0x80
9001e116:	436b      	muls	r3, r5
9001e118:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e11c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e120:	930d      	str	r3, [sp, #52]	@ 0x34
9001e122:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001e126:	fb99 f3f3 	sdiv	r3, r9, r3
9001e12a:	9306      	str	r3, [sp, #24]
9001e12c:	9b01      	ldr	r3, [sp, #4]
9001e12e:	43db      	mvns	r3, r3
9001e130:	b2db      	uxtb	r3, r3
9001e132:	930a      	str	r3, [sp, #40]	@ 0x28
9001e134:	9b03      	ldr	r3, [sp, #12]
9001e136:	3304      	adds	r3, #4
9001e138:	4618      	mov	r0, r3
9001e13a:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e13c:	f00c f90c 	bl	9002a358 <memset>
9001e140:	4bba      	ldr	r3, [pc, #744]	@ (9001e42c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001e142:	9300      	str	r3, [sp, #0]
9001e144:	2300      	movs	r3, #0
9001e146:	9307      	str	r3, [sp, #28]
9001e148:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e14a:	42a3      	cmp	r3, r4
9001e14c:	f240 827a 	bls.w	9001e644 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001e150:	f04f 0e07 	mov.w	lr, #7
9001e154:	f1b9 0f00 	cmp.w	r9, #0
9001e158:	f000 8159 	beq.w	9001e40e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001e15c:	f89a 5000 	ldrb.w	r5, [sl]
9001e160:	f10a 0701 	add.w	r7, sl, #1
9001e164:	b2ed      	uxtb	r5, r5
9001e166:	11aa      	asrs	r2, r5, #6
9001e168:	d10e      	bne.n	9001e188 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001e16a:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e16e:	9b03      	ldr	r3, [sp, #12]
9001e170:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001e174:	88ae      	ldrh	r6, [r5, #4]
9001e176:	f109 39ff 	add.w	r9, r9, #4294967295
9001e17a:	fa1f f989 	uxth.w	r9, r9
9001e17e:	46ba      	mov	sl, r7
9001e180:	e7e8      	b.n	9001e154 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001e182:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001e186:	e7a6      	b.n	9001e0d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001e188:	2a01      	cmp	r2, #1
9001e18a:	d129      	bne.n	9001e1e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001e18c:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001e190:	f005 0203 	and.w	r2, r5, #3
9001e194:	2103      	movs	r1, #3
9001e196:	3b02      	subs	r3, #2
9001e198:	4413      	add	r3, r2
9001e19a:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001e19e:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001e1a2:	f003 031f 	and.w	r3, r3, #31
9001e1a6:	3a02      	subs	r2, #2
9001e1a8:	3d02      	subs	r5, #2
9001e1aa:	f363 0604 	bfi	r6, r3, #0, #5
9001e1ae:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001e1b2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e1b6:	f362 164a 	bfi	r6, r2, #5, #6
9001e1ba:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e1be:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001e1c2:	f005 051f 	and.w	r5, r5, #31
9001e1c6:	fb11 2205 	smlabb	r2, r1, r5, r2
9001e1ca:	f365 26cf 	bfi	r6, r5, #11, #5
9001e1ce:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001e1d2:	9a03      	ldr	r2, [sp, #12]
9001e1d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e1d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e1dc:	809e      	strh	r6, [r3, #4]
9001e1de:	e7ca      	b.n	9001e176 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001e1e0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e1e4:	2a02      	cmp	r2, #2
9001e1e6:	b2ab      	uxth	r3, r5
9001e1e8:	d136      	bne.n	9001e258 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001e1ea:	2101      	movs	r1, #1
9001e1ec:	fb12 1205 	smlabb	r2, r2, r5, r1
9001e1f0:	4492      	add	sl, r2
9001e1f2:	463a      	mov	r2, r7
9001e1f4:	4552      	cmp	r2, sl
9001e1f6:	d01c      	beq.n	9001e232 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001e1f8:	4694      	mov	ip, r2
9001e1fa:	f04f 0b03 	mov.w	fp, #3
9001e1fe:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001e202:	7852      	ldrb	r2, [r2, #1]
9001e204:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001e208:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001e20c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001e210:	f001 021f 	and.w	r2, r1, #31
9001e214:	460e      	mov	r6, r1
9001e216:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e21a:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001e21e:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e222:	9a03      	ldr	r2, [sp, #12]
9001e224:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e228:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e22c:	4662      	mov	r2, ip
9001e22e:	8081      	strh	r1, [r0, #4]
9001e230:	e7e0      	b.n	9001e1f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001e232:	4599      	cmp	r9, r3
9001e234:	d20b      	bcs.n	9001e24e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001e236:	eba5 0509 	sub.w	r5, r5, r9
9001e23a:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001e23e:	2d00      	cmp	r5, #0
9001e240:	f300 8208 	bgt.w	9001e654 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001e244:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e248:	2301      	movs	r3, #1
9001e24a:	9307      	str	r3, [sp, #28]
9001e24c:	e00c      	b.n	9001e268 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e24e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001e252:	eba9 0903 	sub.w	r9, r9, r3
9001e256:	e790      	b.n	9001e17a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001e258:	4599      	cmp	r9, r3
9001e25a:	d2fa      	bcs.n	9001e252 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001e25c:	eba5 0509 	sub.w	r5, r5, r9
9001e260:	2d00      	cmp	r5, #0
9001e262:	dc1d      	bgt.n	9001e2a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001e264:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e268:	f04f 0b00 	mov.w	fp, #0
9001e26c:	f1b8 0f00 	cmp.w	r8, #0
9001e270:	f340 81a0 	ble.w	9001e5b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001e274:	783b      	ldrb	r3, [r7, #0]
9001e276:	f107 0a01 	add.w	sl, r7, #1
9001e27a:	b2db      	uxtb	r3, r3
9001e27c:	119a      	asrs	r2, r3, #6
9001e27e:	f040 80d7 	bne.w	9001e430 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001e282:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e286:	9a03      	ldr	r2, [sp, #12]
9001e288:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e28c:	889e      	ldrh	r6, [r3, #4]
9001e28e:	9b01      	ldr	r3, [sp, #4]
9001e290:	2bff      	cmp	r3, #255	@ 0xff
9001e292:	f040 81e8 	bne.w	9001e666 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001e296:	8026      	strh	r6, [r4, #0]
9001e298:	f108 38ff 	add.w	r8, r8, #4294967295
9001e29c:	3402      	adds	r4, #2
9001e29e:	e0be      	b.n	9001e41e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e2a0:	9b02      	ldr	r3, [sp, #8]
9001e2a2:	9a02      	ldr	r2, [sp, #8]
9001e2a4:	42ab      	cmp	r3, r5
9001e2a6:	bfa8      	it	ge
9001e2a8:	462b      	movge	r3, r5
9001e2aa:	eba2 0803 	sub.w	r8, r2, r3
9001e2ae:	9a07      	ldr	r2, [sp, #28]
9001e2b0:	1aed      	subs	r5, r5, r3
9001e2b2:	2a00      	cmp	r2, #0
9001e2b4:	d05a      	beq.n	9001e36c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001e2b6:	9a01      	ldr	r2, [sp, #4]
9001e2b8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e2bc:	2aff      	cmp	r2, #255	@ 0xff
9001e2be:	d049      	beq.n	9001e354 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e2c0:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001e2c4:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001e2c8:	42a3      	cmp	r3, r4
9001e2ca:	f240 80a5 	bls.w	9001e418 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e2ce:	46bc      	mov	ip, r7
9001e2d0:	8820      	ldrh	r0, [r4, #0]
9001e2d2:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001e2d6:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001e2da:	7879      	ldrb	r1, [r7, #1]
9001e2dc:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001e2e0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001e2e4:	fb1a fa09 	smulbb	sl, sl, r9
9001e2e8:	b212      	sxth	r2, r2
9001e2ea:	b291      	uxth	r1, r2
9001e2ec:	00d2      	lsls	r2, r2, #3
9001e2ee:	120f      	asrs	r7, r1, #8
9001e2f0:	10c9      	asrs	r1, r1, #3
9001e2f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e2f6:	b2d2      	uxtb	r2, r2
9001e2f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e2fc:	fb07 a70e 	mla	r7, r7, lr, sl
9001e300:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001e304:	00c0      	lsls	r0, r0, #3
9001e306:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e30a:	b2bf      	uxth	r7, r7
9001e30c:	b2c0      	uxtb	r0, r0
9001e30e:	fb1a fa09 	smulbb	sl, sl, r9
9001e312:	fb10 f009 	smulbb	r0, r0, r9
9001e316:	fb01 a10e 	mla	r1, r1, lr, sl
9001e31a:	fb02 020e 	mla	r2, r2, lr, r0
9001e31e:	1c78      	adds	r0, r7, #1
9001e320:	b289      	uxth	r1, r1
9001e322:	b292      	uxth	r2, r2
9001e324:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e328:	f101 0a01 	add.w	sl, r1, #1
9001e32c:	1c50      	adds	r0, r2, #1
9001e32e:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001e332:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e336:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e33a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e33e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e342:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e346:	4307      	orrs	r7, r0
9001e348:	ea47 070a 	orr.w	r7, r7, sl
9001e34c:	f824 7b02 	strh.w	r7, [r4], #2
9001e350:	4667      	mov	r7, ip
9001e352:	e7b9      	b.n	9001e2c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001e354:	42a3      	cmp	r3, r4
9001e356:	d95f      	bls.n	9001e418 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e358:	463a      	mov	r2, r7
9001e35a:	f812 1b02 	ldrb.w	r1, [r2], #2
9001e35e:	7878      	ldrb	r0, [r7, #1]
9001e360:	4617      	mov	r7, r2
9001e362:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001e366:	f824 1b02 	strh.w	r1, [r4], #2
9001e36a:	e7f3      	b.n	9001e354 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e36c:	9901      	ldr	r1, [sp, #4]
9001e36e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e372:	b2b2      	uxth	r2, r6
9001e374:	29ff      	cmp	r1, #255	@ 0xff
9001e376:	d044      	beq.n	9001e402 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e378:	ea4f 2922 	mov.w	r9, r2, asr #8
9001e37c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e380:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e384:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001e388:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001e38c:	4608      	mov	r0, r1
9001e38e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e392:	fb09 f901 	mul.w	r9, r9, r1
9001e396:	fb0e fe01 	mul.w	lr, lr, r1
9001e39a:	00d1      	lsls	r1, r2, #3
9001e39c:	b2c9      	uxtb	r1, r1
9001e39e:	4341      	muls	r1, r0
9001e3a0:	429c      	cmp	r4, r3
9001e3a2:	f4bf af61 	bcs.w	9001e268 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e3a6:	8822      	ldrh	r2, [r4, #0]
9001e3a8:	1210      	asrs	r0, r2, #8
9001e3aa:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001e3ae:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e3b2:	00d2      	lsls	r2, r2, #3
9001e3b4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e3b8:	fb00 900a 	mla	r0, r0, sl, r9
9001e3bc:	b2d2      	uxtb	r2, r2
9001e3be:	fb0c ec0a 	mla	ip, ip, sl, lr
9001e3c2:	b280      	uxth	r0, r0
9001e3c4:	fb02 120a 	mla	r2, r2, sl, r1
9001e3c8:	fa1f fc8c 	uxth.w	ip, ip
9001e3cc:	b292      	uxth	r2, r2
9001e3ce:	f100 0b01 	add.w	fp, r0, #1
9001e3d2:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001e3d6:	1c50      	adds	r0, r2, #1
9001e3d8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e3dc:	f10c 0201 	add.w	r2, ip, #1
9001e3e0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001e3e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e3e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e3ec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001e3f0:	ea40 0b0b 	orr.w	fp, r0, fp
9001e3f4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001e3f8:	ea4b 0b0c 	orr.w	fp, fp, ip
9001e3fc:	f824 bb02 	strh.w	fp, [r4], #2
9001e400:	e7ce      	b.n	9001e3a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001e402:	429c      	cmp	r4, r3
9001e404:	f4bf af30 	bcs.w	9001e268 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e408:	f824 2b02 	strh.w	r2, [r4], #2
9001e40c:	e7f9      	b.n	9001e402 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e40e:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e412:	4657      	mov	r7, sl
9001e414:	464d      	mov	r5, r9
9001e416:	e727      	b.n	9001e268 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e418:	2300      	movs	r3, #0
9001e41a:	e716      	b.n	9001e24a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001e41c:	44bb      	add	fp, r7
9001e41e:	4657      	mov	r7, sl
9001e420:	e724      	b.n	9001e26c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001e422:	bf00      	nop
9001e424:	24021844 	.word	0x24021844
9001e428:	2402183e 	.word	0x2402183e
9001e42c:	24005b80 	.word	0x24005b80
9001e430:	2a01      	cmp	r2, #1
9001e432:	d12a      	bne.n	9001e48a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001e434:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001e438:	f003 0203 	and.w	r2, r3, #3
9001e43c:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001e440:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e444:	3902      	subs	r1, #2
9001e446:	3802      	subs	r0, #2
9001e448:	3b02      	subs	r3, #2
9001e44a:	4411      	add	r1, r2
9001e44c:	f001 011f 	and.w	r1, r1, #31
9001e450:	f361 0604 	bfi	r6, r1, #0, #5
9001e454:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001e458:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e45c:	f360 164a 	bfi	r6, r0, #5, #6
9001e460:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e464:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001e468:	f002 031f 	and.w	r3, r2, #31
9001e46c:	2203      	movs	r2, #3
9001e46e:	f363 26cf 	bfi	r6, r3, #11, #5
9001e472:	fb12 0303 	smlabb	r3, r2, r3, r0
9001e476:	2207      	movs	r2, #7
9001e478:	fb12 3301 	smlabb	r3, r2, r1, r3
9001e47c:	9a03      	ldr	r2, [sp, #12]
9001e47e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e482:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e486:	809e      	strh	r6, [r3, #4]
9001e488:	e701      	b.n	9001e28e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001e48a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001e48e:	4647      	mov	r7, r8
9001e490:	45a8      	cmp	r8, r5
9001e492:	bfa8      	it	ge
9001e494:	462f      	movge	r7, r5
9001e496:	2a02      	cmp	r2, #2
9001e498:	d154      	bne.n	9001e544 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001e49a:	9b01      	ldr	r3, [sp, #4]
9001e49c:	2bff      	cmp	r3, #255	@ 0xff
9001e49e:	d01a      	beq.n	9001e4d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e4a0:	eb0b 0307 	add.w	r3, fp, r7
9001e4a4:	2b40      	cmp	r3, #64	@ 0x40
9001e4a6:	dd16      	ble.n	9001e4d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e4a8:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001e4ac:	9800      	ldr	r0, [sp, #0]
9001e4ae:	4649      	mov	r1, r9
9001e4b0:	f7e4 fa3a 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001e4b4:	465a      	mov	r2, fp
9001e4b6:	9b01      	ldr	r3, [sp, #4]
9001e4b8:	4620      	mov	r0, r4
9001e4ba:	9900      	ldr	r1, [sp, #0]
9001e4bc:	444c      	add	r4, r9
9001e4be:	f7e4 fa79 	bl	900029b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e4c2:	9b00      	ldr	r3, [sp, #0]
9001e4c4:	f04f 0b00 	mov.w	fp, #0
9001e4c8:	461a      	mov	r2, r3
9001e4ca:	4b6a      	ldr	r3, [pc, #424]	@ (9001e674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e4cc:	429a      	cmp	r2, r3
9001e4ce:	bf0c      	ite	eq
9001e4d0:	4b69      	ldreq	r3, [pc, #420]	@ (9001e678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001e4d2:	4b68      	ldrne	r3, [pc, #416]	@ (9001e674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e4d4:	9300      	str	r3, [sp, #0]
9001e4d6:	4652      	mov	r2, sl
9001e4d8:	2100      	movs	r1, #0
9001e4da:	42a9      	cmp	r1, r5
9001e4dc:	da2c      	bge.n	9001e538 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001e4de:	4694      	mov	ip, r2
9001e4e0:	f04f 0903 	mov.w	r9, #3
9001e4e4:	42b9      	cmp	r1, r7
9001e4e6:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001e4ea:	7852      	ldrb	r2, [r2, #1]
9001e4ec:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001e4f0:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001e4f4:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001e4f8:	f003 021f 	and.w	r2, r3, #31
9001e4fc:	461e      	mov	r6, r3
9001e4fe:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e502:	fb19 000e 	smlabb	r0, r9, lr, r0
9001e506:	f04f 0e07 	mov.w	lr, #7
9001e50a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e50e:	9a03      	ldr	r2, [sp, #12]
9001e510:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e514:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e518:	8083      	strh	r3, [r0, #4]
9001e51a:	da0a      	bge.n	9001e532 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001e51c:	9a01      	ldr	r2, [sp, #4]
9001e51e:	2aff      	cmp	r2, #255	@ 0xff
9001e520:	bf13      	iteet	ne
9001e522:	9a00      	ldrne	r2, [sp, #0]
9001e524:	8023      	strheq	r3, [r4, #0]
9001e526:	3402      	addeq	r4, #2
9001e528:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001e52c:	bf18      	it	ne
9001e52e:	f10b 0b01 	addne.w	fp, fp, #1
9001e532:	3101      	adds	r1, #1
9001e534:	4662      	mov	r2, ip
9001e536:	e7d0      	b.n	9001e4da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001e538:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001e53c:	eba8 0807 	sub.w	r8, r8, r7
9001e540:	1bed      	subs	r5, r5, r7
9001e542:	e76c      	b.n	9001e41e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e544:	9b01      	ldr	r3, [sp, #4]
9001e546:	eba8 0807 	sub.w	r8, r8, r7
9001e54a:	1bed      	subs	r5, r5, r7
9001e54c:	fa1f f986 	uxth.w	r9, r6
9001e550:	2bff      	cmp	r3, #255	@ 0xff
9001e552:	d027      	beq.n	9001e5a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001e554:	eb0b 0307 	add.w	r3, fp, r7
9001e558:	2b40      	cmp	r3, #64	@ 0x40
9001e55a:	dd18      	ble.n	9001e58e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001e55c:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001e560:	9800      	ldr	r0, [sp, #0]
9001e562:	4619      	mov	r1, r3
9001e564:	930c      	str	r3, [sp, #48]	@ 0x30
9001e566:	f7e4 f9df 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001e56a:	465a      	mov	r2, fp
9001e56c:	9b01      	ldr	r3, [sp, #4]
9001e56e:	4620      	mov	r0, r4
9001e570:	9900      	ldr	r1, [sp, #0]
9001e572:	f04f 0b00 	mov.w	fp, #0
9001e576:	f7e4 fa1d 	bl	900029b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e57a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e57c:	441c      	add	r4, r3
9001e57e:	9b00      	ldr	r3, [sp, #0]
9001e580:	461a      	mov	r2, r3
9001e582:	4b3c      	ldr	r3, [pc, #240]	@ (9001e674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e584:	429a      	cmp	r2, r3
9001e586:	bf0c      	ite	eq
9001e588:	4b3b      	ldreq	r3, [pc, #236]	@ (9001e678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001e58a:	4b3a      	ldrne	r3, [pc, #232]	@ (9001e674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e58c:	9300      	str	r3, [sp, #0]
9001e58e:	9b00      	ldr	r3, [sp, #0]
9001e590:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001e594:	463b      	mov	r3, r7
9001e596:	2b00      	cmp	r3, #0
9001e598:	f43f af40 	beq.w	9001e41c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001e59c:	f822 9b02 	strh.w	r9, [r2], #2
9001e5a0:	3b01      	subs	r3, #1
9001e5a2:	e7f8      	b.n	9001e596 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001e5a4:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001e5a8:	42a7      	cmp	r7, r4
9001e5aa:	f67f af38 	bls.w	9001e41e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e5ae:	f824 9b02 	strh.w	r9, [r4], #2
9001e5b2:	e7f9      	b.n	9001e5a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001e5b4:	f1bb 0f00 	cmp.w	fp, #0
9001e5b8:	d00c      	beq.n	9001e5d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001e5ba:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001e5be:	9800      	ldr	r0, [sp, #0]
9001e5c0:	4641      	mov	r1, r8
9001e5c2:	f7e4 f9b1 	bl	90002928 <_ZN8touchgfx5paint9flushLineEPmi>
9001e5c6:	4620      	mov	r0, r4
9001e5c8:	4444      	add	r4, r8
9001e5ca:	9b01      	ldr	r3, [sp, #4]
9001e5cc:	465a      	mov	r2, fp
9001e5ce:	9900      	ldr	r1, [sp, #0]
9001e5d0:	f7e4 f9f0 	bl	900029b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e5d4:	4b29      	ldr	r3, [pc, #164]	@ (9001e67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001e5d6:	9a02      	ldr	r2, [sp, #8]
9001e5d8:	881b      	ldrh	r3, [r3, #0]
9001e5da:	1a9b      	subs	r3, r3, r2
9001e5dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e5e0:	9b06      	ldr	r3, [sp, #24]
9001e5e2:	3301      	adds	r3, #1
9001e5e4:	9306      	str	r3, [sp, #24]
9001e5e6:	9a06      	ldr	r2, [sp, #24]
9001e5e8:	9b04      	ldr	r3, [sp, #16]
9001e5ea:	4293      	cmp	r3, r2
9001e5ec:	d120      	bne.n	9001e630 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001e5ee:	9b05      	ldr	r3, [sp, #20]
9001e5f0:	2100      	movs	r1, #0
9001e5f2:	9a05      	ldr	r2, [sp, #20]
9001e5f4:	f04f 0600 	mov.w	r6, #0
9001e5f8:	f103 0801 	add.w	r8, r3, #1
9001e5fc:	9b08      	ldr	r3, [sp, #32]
9001e5fe:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001e602:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001e606:	2280      	movs	r2, #128	@ 0x80
9001e608:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001e60c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e60e:	ba3f      	rev	r7, r7
9001e610:	eba9 0905 	sub.w	r9, r9, r5
9001e614:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001e616:	441f      	add	r7, r3
9001e618:	f00b fe9e 	bl	9002a358 <memset>
9001e61c:	fa1f f989 	uxth.w	r9, r9
9001e620:	2300      	movs	r3, #0
9001e622:	f8cd 8014 	str.w	r8, [sp, #20]
9001e626:	9306      	str	r3, [sp, #24]
9001e628:	f7e4 f974 	bl	90002914 <_ZN8touchgfx5paint8tearDownEv>
9001e62c:	46ba      	mov	sl, r7
9001e62e:	e58b      	b.n	9001e148 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001e630:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001e634:	9b02      	ldr	r3, [sp, #8]
9001e636:	eba9 0903 	sub.w	r9, r9, r3
9001e63a:	eba9 0505 	sub.w	r5, r9, r5
9001e63e:	fa1f f985 	uxth.w	r9, r5
9001e642:	e7f1      	b.n	9001e628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001e644:	4b0e      	ldr	r3, [pc, #56]	@ (9001e680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001e646:	6818      	ldr	r0, [r3, #0]
9001e648:	6803      	ldr	r3, [r0, #0]
9001e64a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e64c:	4798      	blx	r3
9001e64e:	b013      	add	sp, #76	@ 0x4c
9001e650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e654:	9b02      	ldr	r3, [sp, #8]
9001e656:	9a02      	ldr	r2, [sp, #8]
9001e658:	42ab      	cmp	r3, r5
9001e65a:	bfa8      	it	ge
9001e65c:	462b      	movge	r3, r5
9001e65e:	eba2 0803 	sub.w	r8, r2, r3
9001e662:	1aed      	subs	r5, r5, r3
9001e664:	e627      	b.n	9001e2b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001e666:	f108 38ff 	add.w	r8, r8, #4294967295
9001e66a:	fa1f f986 	uxth.w	r9, r6
9001e66e:	2500      	movs	r5, #0
9001e670:	2701      	movs	r7, #1
9001e672:	e76f      	b.n	9001e554 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001e674:	24005b80 	.word	0x24005b80
9001e678:	24005c80 	.word	0x24005c80
9001e67c:	2402183e 	.word	0x2402183e
9001e680:	24021844 	.word	0x24021844

9001e684 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e688:	b08f      	sub	sp, #60	@ 0x3c
9001e68a:	461c      	mov	r4, r3
9001e68c:	460f      	mov	r7, r1
9001e68e:	9203      	str	r2, [sp, #12]
9001e690:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e694:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001e696:	9202      	str	r2, [sp, #8]
9001e698:	2a00      	cmp	r2, #0
9001e69a:	f000 8128 	beq.w	9001e8ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001e69e:	6820      	ldr	r0, [r4, #0]
9001e6a0:	aa0a      	add	r2, sp, #40	@ 0x28
9001e6a2:	6861      	ldr	r1, [r4, #4]
9001e6a4:	c203      	stmia	r2!, {r0, r1}
9001e6a6:	6818      	ldr	r0, [r3, #0]
9001e6a8:	aa0c      	add	r2, sp, #48	@ 0x30
9001e6aa:	6859      	ldr	r1, [r3, #4]
9001e6ac:	c203      	stmia	r2!, {r0, r1}
9001e6ae:	a80a      	add	r0, sp, #40	@ 0x28
9001e6b0:	f7f8 fbba 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e6b4:	4621      	mov	r1, r4
9001e6b6:	a80c      	add	r0, sp, #48	@ 0x30
9001e6b8:	f7f8 fbfa 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e6bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001e6c0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001e6c4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e6c8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001e6cc:	bfdb      	ittet	le
9001e6ce:	b2b3      	uxthle	r3, r6
9001e6d0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e6d4:	2301      	movgt	r3, #1
9001e6d6:	fb92 f3f3 	sdivle	r3, r2, r3
9001e6da:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e6de:	441d      	add	r5, r3
9001e6e0:	fb92 f1f3 	sdiv	r1, r2, r3
9001e6e4:	fa1f fc81 	uxth.w	ip, r1
9001e6e8:	3d01      	subs	r5, #1
9001e6ea:	fb0c 2413 	mls	r4, ip, r3, r2
9001e6ee:	4661      	mov	r1, ip
9001e6f0:	fb14 f406 	smulbb	r4, r4, r6
9001e6f4:	4404      	add	r4, r0
9001e6f6:	fb95 f5f3 	sdiv	r5, r5, r3
9001e6fa:	b2a4      	uxth	r4, r4
9001e6fc:	b121      	cbz	r1, 9001e708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001e6fe:	9b03      	ldr	r3, [sp, #12]
9001e700:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e704:	ba1b      	rev	r3, r3
9001e706:	441f      	add	r7, r3
9001e708:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001e70c:	b2ad      	uxth	r5, r5
9001e70e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001e712:	4418      	add	r0, r3
9001e714:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001e718:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001e71c:	00ad      	lsls	r5, r5, #2
9001e71e:	441a      	add	r2, r3
9001e720:	4b74      	ldr	r3, [pc, #464]	@ (9001e8f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e722:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001e726:	6818      	ldr	r0, [r3, #0]
9001e728:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001e72c:	6803      	ldr	r3, [r0, #0]
9001e72e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e730:	4798      	blx	r3
9001e732:	4a71      	ldr	r2, [pc, #452]	@ (9001e8f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001e734:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001e738:	2c00      	cmp	r4, #0
9001e73a:	8813      	ldrh	r3, [r2, #0]
9001e73c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001e740:	bf0c      	ite	eq
9001e742:	46c8      	moveq	r8, r9
9001e744:	f04f 0800 	movne.w	r8, #0
9001e748:	9209      	str	r2, [sp, #36]	@ 0x24
9001e74a:	fb03 c101 	mla	r1, r3, r1, ip
9001e74e:	4373      	muls	r3, r6
9001e750:	fa1f f888 	uxth.w	r8, r8
9001e754:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e758:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e75c:	9304      	str	r3, [sp, #16]
9001e75e:	1d2b      	adds	r3, r5, #4
9001e760:	9305      	str	r3, [sp, #20]
9001e762:	2300      	movs	r3, #0
9001e764:	9301      	str	r3, [sp, #4]
9001e766:	9a04      	ldr	r2, [sp, #16]
9001e768:	4282      	cmp	r2, r0
9001e76a:	f240 80bb 	bls.w	9001e8e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001e76e:	b95b      	cbnz	r3, 9001e788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001e770:	783a      	ldrb	r2, [r7, #0]
9001e772:	0993      	lsrs	r3, r2, #6
9001e774:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e778:	9201      	str	r2, [sp, #4]
9001e77a:	1e5a      	subs	r2, r3, #1
9001e77c:	2a02      	cmp	r2, #2
9001e77e:	bf8d      	iteet	hi
9001e780:	787b      	ldrbhi	r3, [r7, #1]
9001e782:	3701      	addls	r7, #1
9001e784:	b29b      	uxthls	r3, r3
9001e786:	3702      	addhi	r7, #2
9001e788:	b184      	cbz	r4, 9001e7ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001e78a:	429c      	cmp	r4, r3
9001e78c:	bf91      	iteee	ls
9001e78e:	1b1c      	subls	r4, r3, r4
9001e790:	1ae4      	subhi	r4, r4, r3
9001e792:	46c4      	movhi	ip, r8
9001e794:	f04f 0a00 	movhi.w	sl, #0
9001e798:	bf9b      	ittet	ls
9001e79a:	fa1f fa84 	uxthls.w	sl, r4
9001e79e:	2400      	movls	r4, #0
9001e7a0:	b2a4      	uxthhi	r4, r4
9001e7a2:	fa1f fc89 	uxthls.w	ip, r9
9001e7a6:	4653      	mov	r3, sl
9001e7a8:	46e0      	mov	r8, ip
9001e7aa:	e7dc      	b.n	9001e766 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001e7ac:	2204      	movs	r2, #4
9001e7ae:	9905      	ldr	r1, [sp, #20]
9001e7b0:	4543      	cmp	r3, r8
9001e7b2:	4615      	mov	r5, r2
9001e7b4:	9a01      	ldr	r2, [sp, #4]
9001e7b6:	bf24      	itt	cs
9001e7b8:	eba3 0a08 	subcs.w	sl, r3, r8
9001e7bc:	46c6      	movcs	lr, r8
9001e7be:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e7c2:	9903      	ldr	r1, [sp, #12]
9001e7c4:	bf3c      	itt	cc
9001e7c6:	eba8 0c03 	subcc.w	ip, r8, r3
9001e7ca:	469e      	movcc	lr, r3
9001e7cc:	588a      	ldr	r2, [r1, r2]
9001e7ce:	bf26      	itte	cs
9001e7d0:	fa1f fa8a 	uxthcs.w	sl, sl
9001e7d4:	46a4      	movcs	ip, r4
9001e7d6:	fa1f fc8c 	uxthcc.w	ip, ip
9001e7da:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001e7de:	bf38      	it	cc
9001e7e0:	46a2      	movcc	sl, r4
9001e7e2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001e7e6:	2900      	cmp	r1, #0
9001e7e8:	d066      	beq.n	9001e8b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001e7ea:	29ff      	cmp	r1, #255	@ 0xff
9001e7ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001e7f0:	d114      	bne.n	9001e81c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e7f2:	9d02      	ldr	r5, [sp, #8]
9001e7f4:	2dff      	cmp	r5, #255	@ 0xff
9001e7f6:	d111      	bne.n	9001e81c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e7f8:	0951      	lsrs	r1, r2, #5
9001e7fa:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e7fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e802:	4486      	add	lr, r0
9001e804:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e808:	f026 0607 	bic.w	r6, r6, #7
9001e80c:	430e      	orrs	r6, r1
9001e80e:	4316      	orrs	r6, r2
9001e810:	b2b6      	uxth	r6, r6
9001e812:	4586      	cmp	lr, r0
9001e814:	d051      	beq.n	9001e8ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e816:	f820 6b02 	strh.w	r6, [r0], #2
9001e81a:	e7fa      	b.n	9001e812 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001e81c:	9d02      	ldr	r5, [sp, #8]
9001e81e:	b2f6      	uxtb	r6, r6
9001e820:	4486      	add	lr, r0
9001e822:	4369      	muls	r1, r5
9001e824:	1c4d      	adds	r5, r1, #1
9001e826:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001e82a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001e82e:	b2d2      	uxtb	r2, r2
9001e830:	122d      	asrs	r5, r5, #8
9001e832:	ea6f 0b05 	mvn.w	fp, r5
9001e836:	b2ad      	uxth	r5, r5
9001e838:	fb11 f105 	smulbb	r1, r1, r5
9001e83c:	fa5f fb8b 	uxtb.w	fp, fp
9001e840:	fb16 f605 	smulbb	r6, r6, r5
9001e844:	fb12 f205 	smulbb	r2, r2, r5
9001e848:	b289      	uxth	r1, r1
9001e84a:	b2b6      	uxth	r6, r6
9001e84c:	b292      	uxth	r2, r2
9001e84e:	9106      	str	r1, [sp, #24]
9001e850:	9607      	str	r6, [sp, #28]
9001e852:	9208      	str	r2, [sp, #32]
9001e854:	4586      	cmp	lr, r0
9001e856:	d030      	beq.n	9001e8ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e858:	8802      	ldrh	r2, [r0, #0]
9001e85a:	9906      	ldr	r1, [sp, #24]
9001e85c:	1216      	asrs	r6, r2, #8
9001e85e:	10d5      	asrs	r5, r2, #3
9001e860:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e864:	00d2      	lsls	r2, r2, #3
9001e866:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e86a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e86e:	b2d2      	uxtb	r2, r2
9001e870:	fb06 160b 	mla	r6, r6, fp, r1
9001e874:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e878:	9907      	ldr	r1, [sp, #28]
9001e87a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e87e:	b2b6      	uxth	r6, r6
9001e880:	fb05 150b 	mla	r5, r5, fp, r1
9001e884:	9908      	ldr	r1, [sp, #32]
9001e886:	fb02 120b 	mla	r2, r2, fp, r1
9001e88a:	1c71      	adds	r1, r6, #1
9001e88c:	b2ad      	uxth	r5, r5
9001e88e:	b292      	uxth	r2, r2
9001e890:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001e894:	1c51      	adds	r1, r2, #1
9001e896:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e89a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e89e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e8a2:	4316      	orrs	r6, r2
9001e8a4:	1c6a      	adds	r2, r5, #1
9001e8a6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e8aa:	096d      	lsrs	r5, r5, #5
9001e8ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e8b0:	432e      	orrs	r6, r5
9001e8b2:	f820 6b02 	strh.w	r6, [r0], #2
9001e8b6:	e7cd      	b.n	9001e854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001e8b8:	4470      	add	r0, lr
9001e8ba:	4543      	cmp	r3, r8
9001e8bc:	f4ff af73 	bcc.w	9001e7a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e8c0:	fa1f fc89 	uxth.w	ip, r9
9001e8c4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e8c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e8ca:	eba4 040c 	sub.w	r4, r4, ip
9001e8ce:	881b      	ldrh	r3, [r3, #0]
9001e8d0:	b2a4      	uxth	r4, r4
9001e8d2:	eba3 0309 	sub.w	r3, r3, r9
9001e8d6:	2c00      	cmp	r4, #0
9001e8d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e8dc:	bf18      	it	ne
9001e8de:	f04f 0c00 	movne.w	ip, #0
9001e8e2:	e760      	b.n	9001e7a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e8e4:	4b03      	ldr	r3, [pc, #12]	@ (9001e8f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e8e6:	6818      	ldr	r0, [r3, #0]
9001e8e8:	6803      	ldr	r3, [r0, #0]
9001e8ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e8ec:	4798      	blx	r3
9001e8ee:	b00f      	add	sp, #60	@ 0x3c
9001e8f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e8f4:	24021844 	.word	0x24021844
9001e8f8:	2402183e 	.word	0x2402183e

9001e8fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e900:	b093      	sub	sp, #76	@ 0x4c
9001e902:	461c      	mov	r4, r3
9001e904:	9205      	str	r2, [sp, #20]
9001e906:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001e90a:	9101      	str	r1, [sp, #4]
9001e90c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001e90e:	9202      	str	r2, [sp, #8]
9001e910:	2a00      	cmp	r2, #0
9001e912:	f000 812e 	beq.w	9001eb72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001e916:	6820      	ldr	r0, [r4, #0]
9001e918:	aa0e      	add	r2, sp, #56	@ 0x38
9001e91a:	6861      	ldr	r1, [r4, #4]
9001e91c:	c203      	stmia	r2!, {r0, r1}
9001e91e:	6818      	ldr	r0, [r3, #0]
9001e920:	aa10      	add	r2, sp, #64	@ 0x40
9001e922:	6859      	ldr	r1, [r3, #4]
9001e924:	c203      	stmia	r2!, {r0, r1}
9001e926:	a80e      	add	r0, sp, #56	@ 0x38
9001e928:	f7f8 fa7e 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e92c:	4621      	mov	r1, r4
9001e92e:	a810      	add	r0, sp, #64	@ 0x40
9001e930:	f7f8 fabe 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e934:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001e938:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001e93c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e940:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001e944:	bfdb      	ittet	le
9001e946:	b2b3      	uxthle	r3, r6
9001e948:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e94c:	2301      	movgt	r3, #1
9001e94e:	fb92 f3f3 	sdivle	r3, r2, r3
9001e952:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e956:	441d      	add	r5, r3
9001e958:	fb92 f1f3 	sdiv	r1, r2, r3
9001e95c:	fa1f fc81 	uxth.w	ip, r1
9001e960:	3d01      	subs	r5, #1
9001e962:	fb0c 2413 	mls	r4, ip, r3, r2
9001e966:	4661      	mov	r1, ip
9001e968:	fb14 f406 	smulbb	r4, r4, r6
9001e96c:	4404      	add	r4, r0
9001e96e:	fb95 f5f3 	sdiv	r5, r5, r3
9001e972:	b2a4      	uxth	r4, r4
9001e974:	b131      	cbz	r1, 9001e984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001e976:	9b05      	ldr	r3, [sp, #20]
9001e978:	9901      	ldr	r1, [sp, #4]
9001e97a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e97e:	ba1b      	rev	r3, r3
9001e980:	4419      	add	r1, r3
9001e982:	9101      	str	r1, [sp, #4]
9001e984:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001e988:	b2ad      	uxth	r5, r5
9001e98a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001e98e:	4418      	add	r0, r3
9001e990:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001e994:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001e998:	00ad      	lsls	r5, r5, #2
9001e99a:	441a      	add	r2, r3
9001e99c:	4b76      	ldr	r3, [pc, #472]	@ (9001eb78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e99e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001e9a2:	6818      	ldr	r0, [r3, #0]
9001e9a4:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001e9a8:	6803      	ldr	r3, [r0, #0]
9001e9aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e9ac:	4798      	blx	r3
9001e9ae:	4973      	ldr	r1, [pc, #460]	@ (9001eb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001e9b0:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001e9b4:	2c00      	cmp	r4, #0
9001e9b6:	880b      	ldrh	r3, [r1, #0]
9001e9b8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e9bc:	910d      	str	r1, [sp, #52]	@ 0x34
9001e9be:	fb03 c202 	mla	r2, r3, r2, ip
9001e9c2:	bf08      	it	eq
9001e9c4:	46dc      	moveq	ip, fp
9001e9c6:	fb03 f306 	mul.w	r3, r3, r6
9001e9ca:	bf18      	it	ne
9001e9cc:	f04f 0c00 	movne.w	ip, #0
9001e9d0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e9d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e9d8:	fa1f fc8c 	uxth.w	ip, ip
9001e9dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e9e0:	9106      	str	r1, [sp, #24]
9001e9e2:	9308      	str	r3, [sp, #32]
9001e9e4:	1d2b      	adds	r3, r5, #4
9001e9e6:	9309      	str	r3, [sp, #36]	@ 0x24
9001e9e8:	9b02      	ldr	r3, [sp, #8]
9001e9ea:	43da      	mvns	r2, r3
9001e9ec:	2300      	movs	r3, #0
9001e9ee:	b2d2      	uxtb	r2, r2
9001e9f0:	9303      	str	r3, [sp, #12]
9001e9f2:	9207      	str	r2, [sp, #28]
9001e9f4:	9a08      	ldr	r2, [sp, #32]
9001e9f6:	4282      	cmp	r2, r0
9001e9f8:	f240 80b6 	bls.w	9001eb68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001e9fc:	b963      	cbnz	r3, 9001ea18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e9fe:	9b01      	ldr	r3, [sp, #4]
9001ea00:	781a      	ldrb	r2, [r3, #0]
9001ea02:	0993      	lsrs	r3, r2, #6
9001ea04:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ea08:	9203      	str	r2, [sp, #12]
9001ea0a:	1e5a      	subs	r2, r3, #1
9001ea0c:	2a02      	cmp	r2, #2
9001ea0e:	d815      	bhi.n	9001ea3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ea10:	9a01      	ldr	r2, [sp, #4]
9001ea12:	b29b      	uxth	r3, r3
9001ea14:	3201      	adds	r2, #1
9001ea16:	9201      	str	r2, [sp, #4]
9001ea18:	b1b4      	cbz	r4, 9001ea48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ea1a:	429c      	cmp	r4, r3
9001ea1c:	bf91      	iteee	ls
9001ea1e:	1b1c      	subls	r4, r3, r4
9001ea20:	1ae4      	subhi	r4, r4, r3
9001ea22:	4666      	movhi	r6, ip
9001ea24:	f04f 0800 	movhi.w	r8, #0
9001ea28:	bf9b      	ittet	ls
9001ea2a:	fa1f f884 	uxthls.w	r8, r4
9001ea2e:	2400      	movls	r4, #0
9001ea30:	b2a4      	uxthhi	r4, r4
9001ea32:	fa1f f68b 	uxthls.w	r6, fp
9001ea36:	4643      	mov	r3, r8
9001ea38:	46b4      	mov	ip, r6
9001ea3a:	e7db      	b.n	9001e9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ea3c:	9a01      	ldr	r2, [sp, #4]
9001ea3e:	9b01      	ldr	r3, [sp, #4]
9001ea40:	3202      	adds	r2, #2
9001ea42:	785b      	ldrb	r3, [r3, #1]
9001ea44:	9201      	str	r2, [sp, #4]
9001ea46:	e7e7      	b.n	9001ea18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ea48:	2203      	movs	r2, #3
9001ea4a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001ea4c:	4563      	cmp	r3, ip
9001ea4e:	4615      	mov	r5, r2
9001ea50:	9a03      	ldr	r2, [sp, #12]
9001ea52:	bf2c      	ite	cs
9001ea54:	eba3 080c 	subcs.w	r8, r3, ip
9001ea58:	ebac 0603 	subcc.w	r6, ip, r3
9001ea5c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ea60:	9905      	ldr	r1, [sp, #20]
9001ea62:	bf24      	itt	cs
9001ea64:	fa1f f888 	uxthcs.w	r8, r8
9001ea68:	46e1      	movcs	r9, ip
9001ea6a:	eb01 0502 	add.w	r5, r1, r2
9001ea6e:	9902      	ldr	r1, [sp, #8]
9001ea70:	bf2f      	iteee	cs
9001ea72:	4626      	movcs	r6, r4
9001ea74:	b2b6      	uxthcc	r6, r6
9001ea76:	4699      	movcc	r9, r3
9001ea78:	46a0      	movcc	r8, r4
9001ea7a:	29ff      	cmp	r1, #255	@ 0xff
9001ea7c:	d04a      	beq.n	9001eb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001ea7e:	9f06      	ldr	r7, [sp, #24]
9001ea80:	46ca      	mov	sl, r9
9001ea82:	78a9      	ldrb	r1, [r5, #2]
9001ea84:	9004      	str	r0, [sp, #16]
9001ea86:	4379      	muls	r1, r7
9001ea88:	910a      	str	r1, [sp, #40]	@ 0x28
9001ea8a:	7869      	ldrb	r1, [r5, #1]
9001ea8c:	4379      	muls	r1, r7
9001ea8e:	910b      	str	r1, [sp, #44]	@ 0x2c
9001ea90:	9905      	ldr	r1, [sp, #20]
9001ea92:	5c8a      	ldrb	r2, [r1, r2]
9001ea94:	437a      	muls	r2, r7
9001ea96:	920c      	str	r2, [sp, #48]	@ 0x30
9001ea98:	f1ba 0f00 	cmp.w	sl, #0
9001ea9c:	d03d      	beq.n	9001eb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001ea9e:	9a04      	ldr	r2, [sp, #16]
9001eaa0:	f10a 3aff 	add.w	sl, sl, #4294967295
9001eaa4:	9f07      	ldr	r7, [sp, #28]
9001eaa6:	8812      	ldrh	r2, [r2, #0]
9001eaa8:	fa1f fa8a 	uxth.w	sl, sl
9001eaac:	46be      	mov	lr, r7
9001eaae:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001eab0:	1215      	asrs	r5, r2, #8
9001eab2:	10d1      	asrs	r1, r2, #3
9001eab4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001eab8:	00d2      	lsls	r2, r2, #3
9001eaba:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001eabe:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001eac2:	b2d2      	uxtb	r2, r2
9001eac4:	fb05 750e 	mla	r5, r5, lr, r7
9001eac8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001eacc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001eace:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ead2:	b2ad      	uxth	r5, r5
9001ead4:	fb01 710e 	mla	r1, r1, lr, r7
9001ead8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001eada:	fb02 720e 	mla	r2, r2, lr, r7
9001eade:	f105 0e01 	add.w	lr, r5, #1
9001eae2:	b289      	uxth	r1, r1
9001eae4:	b292      	uxth	r2, r2
9001eae6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001eaea:	f102 0e01 	add.w	lr, r2, #1
9001eaee:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001eaf2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001eaf6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eafa:	4315      	orrs	r5, r2
9001eafc:	1c4a      	adds	r2, r1, #1
9001eafe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001eb02:	9a04      	ldr	r2, [sp, #16]
9001eb04:	0949      	lsrs	r1, r1, #5
9001eb06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001eb0a:	430d      	orrs	r5, r1
9001eb0c:	f822 5b02 	strh.w	r5, [r2], #2
9001eb10:	9204      	str	r2, [sp, #16]
9001eb12:	e7c1      	b.n	9001ea98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001eb14:	4649      	mov	r1, r9
9001eb16:	4686      	mov	lr, r0
9001eb18:	b999      	cbnz	r1, 9001eb42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001eb1a:	4563      	cmp	r3, ip
9001eb1c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001eb20:	d389      	bcc.n	9001ea36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001eb22:	fa1f f68b 	uxth.w	r6, fp
9001eb26:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001eb2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001eb2c:	1ba4      	subs	r4, r4, r6
9001eb2e:	881b      	ldrh	r3, [r3, #0]
9001eb30:	b2a4      	uxth	r4, r4
9001eb32:	eba3 030b 	sub.w	r3, r3, fp
9001eb36:	2c00      	cmp	r4, #0
9001eb38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eb3c:	bf18      	it	ne
9001eb3e:	2600      	movne	r6, #0
9001eb40:	e779      	b.n	9001ea36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001eb42:	78aa      	ldrb	r2, [r5, #2]
9001eb44:	3901      	subs	r1, #1
9001eb46:	4f0e      	ldr	r7, [pc, #56]	@ (9001eb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001eb48:	b289      	uxth	r1, r1
9001eb4a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001eb4e:	786a      	ldrb	r2, [r5, #1]
9001eb50:	00d2      	lsls	r2, r2, #3
9001eb52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001eb56:	ea4a 0202 	orr.w	r2, sl, r2
9001eb5a:	f895 a000 	ldrb.w	sl, [r5]
9001eb5e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001eb62:	f82e 2b02 	strh.w	r2, [lr], #2
9001eb66:	e7d7      	b.n	9001eb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001eb68:	4b03      	ldr	r3, [pc, #12]	@ (9001eb78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001eb6a:	6818      	ldr	r0, [r3, #0]
9001eb6c:	6803      	ldr	r3, [r0, #0]
9001eb6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001eb70:	4798      	blx	r3
9001eb72:	b013      	add	sp, #76	@ 0x4c
9001eb74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb78:	24021844 	.word	0x24021844
9001eb7c:	2402183e 	.word	0x2402183e
9001eb80:	fffff800 	.word	0xfffff800

9001eb84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001eb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb88:	b09d      	sub	sp, #116	@ 0x74
9001eb8a:	461c      	mov	r4, r3
9001eb8c:	4683      	mov	fp, r0
9001eb8e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001eb90:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001eb94:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001eb98:	920e      	str	r2, [sp, #56]	@ 0x38
9001eb9a:	2a00      	cmp	r2, #0
9001eb9c:	f000 81e4 	beq.w	9001ef68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001eba0:	6820      	ldr	r0, [r4, #0]
9001eba2:	aa18      	add	r2, sp, #96	@ 0x60
9001eba4:	6861      	ldr	r1, [r4, #4]
9001eba6:	c203      	stmia	r2!, {r0, r1}
9001eba8:	6818      	ldr	r0, [r3, #0]
9001ebaa:	aa1a      	add	r2, sp, #104	@ 0x68
9001ebac:	6859      	ldr	r1, [r3, #4]
9001ebae:	c203      	stmia	r2!, {r0, r1}
9001ebb0:	a818      	add	r0, sp, #96	@ 0x60
9001ebb2:	f7f8 f939 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ebb6:	4621      	mov	r1, r4
9001ebb8:	a81a      	add	r0, sp, #104	@ 0x68
9001ebba:	f7f8 f979 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ebbe:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001ebc2:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001ebc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001ebca:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001ebce:	bfdb      	ittet	le
9001ebd0:	b29a      	uxthle	r2, r3
9001ebd2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ebd6:	2201      	movgt	r2, #1
9001ebd8:	fb91 f2f2 	sdivle	r2, r1, r2
9001ebdc:	9202      	str	r2, [sp, #8]
9001ebde:	9802      	ldr	r0, [sp, #8]
9001ebe0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001ebe4:	9902      	ldr	r1, [sp, #8]
9001ebe6:	fb92 f0f0 	sdiv	r0, r2, r0
9001ebea:	b280      	uxth	r0, r0
9001ebec:	440c      	add	r4, r1
9001ebee:	900f      	str	r0, [sp, #60]	@ 0x3c
9001ebf0:	3c01      	subs	r4, #1
9001ebf2:	9802      	ldr	r0, [sp, #8]
9001ebf4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001ebf6:	fb05 2510 	mls	r5, r5, r0, r2
9001ebfa:	fb94 f4f1 	sdiv	r4, r4, r1
9001ebfe:	fb15 f503 	smulbb	r5, r5, r3
9001ec02:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001ec06:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001ec0a:	3401      	adds	r4, #1
9001ec0c:	440d      	add	r5, r1
9001ec0e:	4419      	add	r1, r3
9001ec10:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001ec14:	b2a4      	uxth	r4, r4
9001ec16:	441a      	add	r2, r3
9001ec18:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ec1c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001ec20:	00a4      	lsls	r4, r4, #2
9001ec22:	9306      	str	r3, [sp, #24]
9001ec24:	b2ad      	uxth	r5, r5
9001ec26:	4bb3      	ldr	r3, [pc, #716]	@ (9001eef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ec28:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001ec2c:	6818      	ldr	r0, [r3, #0]
9001ec2e:	6803      	ldr	r3, [r0, #0]
9001ec30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ec32:	4798      	blx	r3
9001ec34:	4bb0      	ldr	r3, [pc, #704]	@ (9001eef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ec36:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001ec3a:	2d00      	cmp	r5, #0
9001ec3c:	881a      	ldrh	r2, [r3, #0]
9001ec3e:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001ec42:	fb02 f606 	mul.w	r6, r2, r6
9001ec46:	fb02 7101 	mla	r1, r2, r1, r7
9001ec4a:	9316      	str	r3, [sp, #88]	@ 0x58
9001ec4c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ec50:	4baa      	ldr	r3, [pc, #680]	@ (9001eefc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ec52:	bf18      	it	ne
9001ec54:	2100      	movne	r1, #0
9001ec56:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ec5a:	eba3 030b 	sub.w	r3, r3, fp
9001ec5e:	920a      	str	r2, [sp, #40]	@ 0x28
9001ec60:	f104 0204 	add.w	r2, r4, #4
9001ec64:	9317      	str	r3, [sp, #92]	@ 0x5c
9001ec66:	9213      	str	r2, [sp, #76]	@ 0x4c
9001ec68:	9a06      	ldr	r2, [sp, #24]
9001ec6a:	bf08      	it	eq
9001ec6c:	4611      	moveq	r1, r2
9001ec6e:	2200      	movs	r2, #0
9001ec70:	b289      	uxth	r1, r1
9001ec72:	920d      	str	r2, [sp, #52]	@ 0x34
9001ec74:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ec76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ec78:	fa12 f383 	uxtah	r3, r2, r3
9001ec7c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ec7e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ec82:	3304      	adds	r3, #4
9001ec84:	9308      	str	r3, [sp, #32]
9001ec86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ec88:	4543      	cmp	r3, r8
9001ec8a:	f240 8168 	bls.w	9001ef5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ec8e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001ec92:	f04f 0e01 	mov.w	lr, #1
9001ec96:	9a02      	ldr	r2, [sp, #8]
9001ec98:	9808      	ldr	r0, [sp, #32]
9001ec9a:	fbb5 f3f3 	udiv	r3, r5, r3
9001ec9e:	1ad3      	subs	r3, r2, r3
9001eca0:	7800      	ldrb	r0, [r0, #0]
9001eca2:	b29b      	uxth	r3, r3
9001eca4:	9010      	str	r0, [sp, #64]	@ 0x40
9001eca6:	3001      	adds	r0, #1
9001eca8:	9314      	str	r3, [sp, #80]	@ 0x50
9001ecaa:	9b08      	ldr	r3, [sp, #32]
9001ecac:	9007      	str	r0, [sp, #28]
9001ecae:	785a      	ldrb	r2, [r3, #1]
9001ecb0:	789b      	ldrb	r3, [r3, #2]
9001ecb2:	021b      	lsls	r3, r3, #8
9001ecb4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001ecb8:	9a08      	ldr	r2, [sp, #32]
9001ecba:	78d2      	ldrb	r2, [r2, #3]
9001ecbc:	4313      	orrs	r3, r2
9001ecbe:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ecc0:	441a      	add	r2, r3
9001ecc2:	1c50      	adds	r0, r2, #1
9001ecc4:	7852      	ldrb	r2, [r2, #1]
9001ecc6:	9005      	str	r0, [sp, #20]
9001ecc8:	0212      	lsls	r2, r2, #8
9001ecca:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001eccc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001ecd0:	5cc3      	ldrb	r3, [r0, r3]
9001ecd2:	431a      	orrs	r2, r3
9001ecd4:	b293      	uxth	r3, r2
9001ecd6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001ecda:	930b      	str	r3, [sp, #44]	@ 0x2c
9001ecdc:	2300      	movs	r3, #0
9001ecde:	9309      	str	r3, [sp, #36]	@ 0x24
9001ece0:	2301      	movs	r3, #1
9001ece2:	9301      	str	r3, [sp, #4]
9001ece4:	9304      	str	r3, [sp, #16]
9001ece6:	2300      	movs	r3, #0
9001ece8:	9303      	str	r3, [sp, #12]
9001ecea:	2d00      	cmp	r5, #0
9001ecec:	d07d      	beq.n	9001edea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001ecee:	45ae      	cmp	lr, r5
9001ecf0:	d26c      	bcs.n	9001edcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001ecf2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ecf4:	eba5 050e 	sub.w	r5, r5, lr
9001ecf8:	460c      	mov	r4, r1
9001ecfa:	4543      	cmp	r3, r8
9001ecfc:	b2ad      	uxth	r5, r5
9001ecfe:	d802      	bhi.n	9001ed06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001ed00:	e071      	b.n	9001ede6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001ed02:	2b00      	cmp	r3, #0
9001ed04:	d15d      	bne.n	9001edc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001ed06:	9b05      	ldr	r3, [sp, #20]
9001ed08:	9a04      	ldr	r2, [sp, #16]
9001ed0a:	785b      	ldrb	r3, [r3, #1]
9001ed0c:	f1c2 0207 	rsb	r2, r2, #7
9001ed10:	9904      	ldr	r1, [sp, #16]
9001ed12:	4093      	lsls	r3, r2
9001ed14:	005b      	lsls	r3, r3, #1
9001ed16:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001ed1a:	9b05      	ldr	r3, [sp, #20]
9001ed1c:	781b      	ldrb	r3, [r3, #0]
9001ed1e:	410b      	asrs	r3, r1
9001ed20:	3101      	adds	r1, #1
9001ed22:	b2c9      	uxtb	r1, r1
9001ed24:	b2db      	uxtb	r3, r3
9001ed26:	2908      	cmp	r1, #8
9001ed28:	9104      	str	r1, [sp, #16]
9001ed2a:	9905      	ldr	r1, [sp, #20]
9001ed2c:	ea43 0302 	orr.w	r3, r3, r2
9001ed30:	bf0c      	ite	eq
9001ed32:	3102      	addeq	r1, #2
9001ed34:	3101      	addne	r1, #1
9001ed36:	b29a      	uxth	r2, r3
9001ed38:	bf05      	ittet	eq
9001ed3a:	9105      	streq	r1, [sp, #20]
9001ed3c:	2100      	moveq	r1, #0
9001ed3e:	9105      	strne	r1, [sp, #20]
9001ed40:	9104      	streq	r1, [sp, #16]
9001ed42:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001ed44:	4291      	cmp	r1, r2
9001ed46:	d30a      	bcc.n	9001ed5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001ed48:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001ed4c:	2301      	movs	r3, #1
9001ed4e:	9907      	ldr	r1, [sp, #28]
9001ed50:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001ed54:	d30f      	bcc.n	9001ed76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001ed56:	2100      	movs	r1, #0
9001ed58:	9301      	str	r3, [sp, #4]
9001ed5a:	9103      	str	r1, [sp, #12]
9001ed5c:	e032      	b.n	9001edc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001ed5e:	9b07      	ldr	r3, [sp, #28]
9001ed60:	429a      	cmp	r2, r3
9001ed62:	d318      	bcc.n	9001ed96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001ed64:	9b01      	ldr	r3, [sp, #4]
9001ed66:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001ed6a:	445b      	add	r3, fp
9001ed6c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001ed70:	9b01      	ldr	r3, [sp, #4]
9001ed72:	3301      	adds	r3, #1
9001ed74:	b29b      	uxth	r3, r3
9001ed76:	9907      	ldr	r1, [sp, #28]
9001ed78:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001ed7c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001ed80:	7108      	strb	r0, [r1, #4]
9001ed82:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001ed84:	80c8      	strh	r0, [r1, #6]
9001ed86:	9801      	ldr	r0, [sp, #4]
9001ed88:	3001      	adds	r0, #1
9001ed8a:	7148      	strb	r0, [r1, #5]
9001ed8c:	9907      	ldr	r1, [sp, #28]
9001ed8e:	3101      	adds	r1, #1
9001ed90:	b289      	uxth	r1, r1
9001ed92:	9107      	str	r1, [sp, #28]
9001ed94:	e7df      	b.n	9001ed56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001ed96:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001ed9a:	4611      	mov	r1, r2
9001ed9c:	795b      	ldrb	r3, [r3, #5]
9001ed9e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001eda2:	4458      	add	r0, fp
9001eda4:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001eda6:	4406      	add	r6, r0
9001eda8:	2e00      	cmp	r6, #0
9001edaa:	dd06      	ble.n	9001edba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001edac:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001edb0:	790e      	ldrb	r6, [r1, #4]
9001edb2:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001edb6:	88c9      	ldrh	r1, [r1, #6]
9001edb8:	e7f4      	b.n	9001eda4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001edba:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001edbe:	b29b      	uxth	r3, r3
9001edc0:	e7c5      	b.n	9001ed4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001edc2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001edc4:	4621      	mov	r1, r4
9001edc6:	920b      	str	r2, [sp, #44]	@ 0x2c
9001edc8:	469e      	mov	lr, r3
9001edca:	e78e      	b.n	9001ecea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001edcc:	9a03      	ldr	r2, [sp, #12]
9001edce:	ebae 0305 	sub.w	r3, lr, r5
9001edd2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001edd6:	442a      	add	r2, r5
9001edd8:	b29b      	uxth	r3, r3
9001edda:	b292      	uxth	r2, r2
9001eddc:	9203      	str	r2, [sp, #12]
9001edde:	2500      	movs	r5, #0
9001ede0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ede2:	4542      	cmp	r2, r8
9001ede4:	d88d      	bhi.n	9001ed02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001ede6:	4621      	mov	r1, r4
9001ede8:	e74d      	b.n	9001ec86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001edea:	458e      	cmp	lr, r1
9001edec:	f04f 0900 	mov.w	r9, #0
9001edf0:	bf2b      	itete	cs
9001edf2:	ebae 0301 	subcs.w	r3, lr, r1
9001edf6:	eba1 040e 	subcc.w	r4, r1, lr
9001edfa:	462c      	movcs	r4, r5
9001edfc:	462b      	movcc	r3, r5
9001edfe:	bf27      	ittee	cs
9001ee00:	b29b      	uxthcs	r3, r3
9001ee02:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001ee04:	b2a4      	uxthcc	r4, r4
9001ee06:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001ee0a:	9a03      	ldr	r2, [sp, #12]
9001ee0c:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001ee0e:	444a      	add	r2, r9
9001ee10:	4548      	cmp	r0, r9
9001ee12:	b292      	uxth	r2, r2
9001ee14:	d074      	beq.n	9001ef00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001ee16:	2004      	movs	r0, #4
9001ee18:	445a      	add	r2, fp
9001ee1a:	4605      	mov	r5, r0
9001ee1c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001ee20:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ee22:	fb15 0202 	smlabb	r2, r5, r2, r0
9001ee26:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ee28:	5880      	ldr	r0, [r0, r2]
9001ee2a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001ee2e:	d014      	beq.n	9001ee5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001ee30:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001ee34:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001ee38:	d112      	bne.n	9001ee60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001ee3a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001ee3c:	2aff      	cmp	r2, #255	@ 0xff
9001ee3e:	d10f      	bne.n	9001ee60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001ee40:	0942      	lsrs	r2, r0, #5
9001ee42:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001ee46:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ee4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ee4e:	f025 0507 	bic.w	r5, r5, #7
9001ee52:	4315      	orrs	r5, r2
9001ee54:	4305      	orrs	r5, r0
9001ee56:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001ee5a:	f109 0901 	add.w	r9, r9, #1
9001ee5e:	e7d4      	b.n	9001ee0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001ee60:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001ee64:	b2ed      	uxtb	r5, r5
9001ee66:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ee6a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ee6e:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001ee72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ee76:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001ee7a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ee7e:	9215      	str	r2, [sp, #84]	@ 0x54
9001ee80:	fa5f fc8c 	uxtb.w	ip, ip
9001ee84:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001ee86:	b2c0      	uxtb	r0, r0
9001ee88:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001ee8c:	fb02 fa0a 	mul.w	sl, r2, sl
9001ee90:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001ee94:	f10a 0201 	add.w	r2, sl, #1
9001ee98:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001ee9c:	1212      	asrs	r2, r2, #8
9001ee9e:	fa1f fa82 	uxth.w	sl, r2
9001eea2:	43d2      	mvns	r2, r2
9001eea4:	fb16 f60a 	smulbb	r6, r6, sl
9001eea8:	b2d2      	uxtb	r2, r2
9001eeaa:	fb10 f00a 	smulbb	r0, r0, sl
9001eeae:	fb07 6702 	mla	r7, r7, r2, r6
9001eeb2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001eeb4:	fb0c 0002 	mla	r0, ip, r2, r0
9001eeb8:	fb15 f50a 	smulbb	r5, r5, sl
9001eebc:	b2bf      	uxth	r7, r7
9001eebe:	b280      	uxth	r0, r0
9001eec0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001eec4:	fb06 5602 	mla	r6, r6, r2, r5
9001eec8:	1c7a      	adds	r2, r7, #1
9001eeca:	1c45      	adds	r5, r0, #1
9001eecc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001eed0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001eed4:	b2b6      	uxth	r6, r6
9001eed6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001eeda:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001eede:	432f      	orrs	r7, r5
9001eee0:	1c75      	adds	r5, r6, #1
9001eee2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001eee6:	096d      	lsrs	r5, r5, #5
9001eee8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001eeec:	432f      	orrs	r7, r5
9001eeee:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001eef2:	e7b2      	b.n	9001ee5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001eef4:	24021844 	.word	0x24021844
9001eef8:	2402183e 	.word	0x2402183e
9001eefc:	fffff7fb 	.word	0xfffff7fb
9001ef00:	9203      	str	r2, [sp, #12]
9001ef02:	458e      	cmp	lr, r1
9001ef04:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001ef06:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ef0a:	f4ff af68 	bcc.w	9001edde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001ef0e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001ef10:	9906      	ldr	r1, [sp, #24]
9001ef12:	8812      	ldrh	r2, [r2, #0]
9001ef14:	1a52      	subs	r2, r2, r1
9001ef16:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001ef18:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ef1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ef1e:	3201      	adds	r2, #1
9001ef20:	428a      	cmp	r2, r1
9001ef22:	9209      	str	r2, [sp, #36]	@ 0x24
9001ef24:	d111      	bne.n	9001ef4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001ef26:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001ef2a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001ef2e:	9b06      	ldr	r3, [sp, #24]
9001ef30:	eba5 0509 	sub.w	r5, r5, r9
9001ef34:	b2ad      	uxth	r5, r5
9001ef36:	2d00      	cmp	r5, #0
9001ef38:	bf08      	it	eq
9001ef3a:	4619      	moveq	r1, r3
9001ef3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ef3e:	bf18      	it	ne
9001ef40:	2100      	movne	r1, #0
9001ef42:	3301      	adds	r3, #1
9001ef44:	b289      	uxth	r1, r1
9001ef46:	930d      	str	r3, [sp, #52]	@ 0x34
9001ef48:	e694      	b.n	9001ec74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001ef4a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001ef4e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001ef52:	1b2d      	subs	r5, r5, r4
9001ef54:	b2ad      	uxth	r5, r5
9001ef56:	2d00      	cmp	r5, #0
9001ef58:	bf18      	it	ne
9001ef5a:	2400      	movne	r4, #0
9001ef5c:	e740      	b.n	9001ede0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001ef5e:	4b04      	ldr	r3, [pc, #16]	@ (9001ef70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001ef60:	6818      	ldr	r0, [r3, #0]
9001ef62:	6803      	ldr	r3, [r0, #0]
9001ef64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ef66:	4798      	blx	r3
9001ef68:	b01d      	add	sp, #116	@ 0x74
9001ef6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ef6e:	bf00      	nop
9001ef70:	24021844 	.word	0x24021844

9001ef74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ef74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef78:	b09f      	sub	sp, #124	@ 0x7c
9001ef7a:	461d      	mov	r5, r3
9001ef7c:	4604      	mov	r4, r0
9001ef7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001ef80:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001ef84:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001ef88:	920a      	str	r2, [sp, #40]	@ 0x28
9001ef8a:	2a00      	cmp	r2, #0
9001ef8c:	f000 81fe 	beq.w	9001f38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001ef90:	6828      	ldr	r0, [r5, #0]
9001ef92:	aa1a      	add	r2, sp, #104	@ 0x68
9001ef94:	6869      	ldr	r1, [r5, #4]
9001ef96:	c203      	stmia	r2!, {r0, r1}
9001ef98:	6818      	ldr	r0, [r3, #0]
9001ef9a:	aa1c      	add	r2, sp, #112	@ 0x70
9001ef9c:	6859      	ldr	r1, [r3, #4]
9001ef9e:	c203      	stmia	r2!, {r0, r1}
9001efa0:	a81a      	add	r0, sp, #104	@ 0x68
9001efa2:	f7f7 ff41 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001efa6:	4629      	mov	r1, r5
9001efa8:	a81c      	add	r0, sp, #112	@ 0x70
9001efaa:	f7f7 ff81 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001efae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001efb2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001efb6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001efba:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001efbe:	bfdb      	ittet	le
9001efc0:	b29a      	uxthle	r2, r3
9001efc2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001efc6:	2201      	movgt	r2, #1
9001efc8:	fb91 f2f2 	sdivle	r2, r1, r2
9001efcc:	9201      	str	r2, [sp, #4]
9001efce:	9801      	ldr	r0, [sp, #4]
9001efd0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001efd4:	9901      	ldr	r1, [sp, #4]
9001efd6:	fb92 f0f0 	sdiv	r0, r2, r0
9001efda:	b280      	uxth	r0, r0
9001efdc:	440e      	add	r6, r1
9001efde:	9010      	str	r0, [sp, #64]	@ 0x40
9001efe0:	3e01      	subs	r6, #1
9001efe2:	9801      	ldr	r0, [sp, #4]
9001efe4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001efe6:	fb05 2510 	mls	r5, r5, r0, r2
9001efea:	fb96 f6f1 	sdiv	r6, r6, r1
9001efee:	fb15 f503 	smulbb	r5, r5, r3
9001eff2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001eff6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001effa:	3601      	adds	r6, #1
9001effc:	440d      	add	r5, r1
9001effe:	4419      	add	r1, r3
9001f000:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001f004:	b2b6      	uxth	r6, r6
9001f006:	441a      	add	r2, r3
9001f008:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001f00c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001f010:	b2ad      	uxth	r5, r5
9001f012:	9304      	str	r3, [sp, #16]
9001f014:	4b96      	ldr	r3, [pc, #600]	@ (9001f270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f016:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001f01a:	6818      	ldr	r0, [r3, #0]
9001f01c:	6803      	ldr	r3, [r0, #0]
9001f01e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f020:	4798      	blx	r3
9001f022:	4b94      	ldr	r3, [pc, #592]	@ (9001f274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f024:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001f028:	2d00      	cmp	r5, #0
9001f02a:	881a      	ldrh	r2, [r3, #0]
9001f02c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001f030:	fb02 f707 	mul.w	r7, r2, r7
9001f034:	fb02 c101 	mla	r1, r2, r1, ip
9001f038:	9318      	str	r3, [sp, #96]	@ 0x60
9001f03a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f03e:	4b8e      	ldr	r3, [pc, #568]	@ (9001f278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f040:	bf18      	it	ne
9001f042:	2100      	movne	r1, #0
9001f044:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f048:	eba3 0304 	sub.w	r3, r3, r4
9001f04c:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f04e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f050:	9319      	str	r3, [sp, #100]	@ 0x64
9001f052:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f056:	f106 0204 	add.w	r2, r6, #4
9001f05a:	9206      	str	r2, [sp, #24]
9001f05c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f05e:	ea6f 0202 	mvn.w	r2, r2
9001f062:	b2d2      	uxtb	r2, r2
9001f064:	9215      	str	r2, [sp, #84]	@ 0x54
9001f066:	9a04      	ldr	r2, [sp, #16]
9001f068:	bf08      	it	eq
9001f06a:	4611      	moveq	r1, r2
9001f06c:	2200      	movs	r2, #0
9001f06e:	b289      	uxth	r1, r1
9001f070:	920d      	str	r2, [sp, #52]	@ 0x34
9001f072:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001f074:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f076:	fa12 f383 	uxtah	r3, r2, r3
9001f07a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f07c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f080:	3304      	adds	r3, #4
9001f082:	9307      	str	r3, [sp, #28]
9001f084:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f086:	455b      	cmp	r3, fp
9001f088:	f240 817b 	bls.w	9001f382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f08c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001f090:	f04f 0801 	mov.w	r8, #1
9001f094:	9a01      	ldr	r2, [sp, #4]
9001f096:	9807      	ldr	r0, [sp, #28]
9001f098:	46c4      	mov	ip, r8
9001f09a:	f8cd 8008 	str.w	r8, [sp, #8]
9001f09e:	7800      	ldrb	r0, [r0, #0]
9001f0a0:	fbb5 f3f3 	udiv	r3, r5, r3
9001f0a4:	1ad3      	subs	r3, r2, r3
9001f0a6:	9011      	str	r0, [sp, #68]	@ 0x44
9001f0a8:	3001      	adds	r0, #1
9001f0aa:	b29b      	uxth	r3, r3
9001f0ac:	9005      	str	r0, [sp, #20]
9001f0ae:	9316      	str	r3, [sp, #88]	@ 0x58
9001f0b0:	9b07      	ldr	r3, [sp, #28]
9001f0b2:	785a      	ldrb	r2, [r3, #1]
9001f0b4:	789b      	ldrb	r3, [r3, #2]
9001f0b6:	021b      	lsls	r3, r3, #8
9001f0b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f0bc:	9a07      	ldr	r2, [sp, #28]
9001f0be:	78d2      	ldrb	r2, [r2, #3]
9001f0c0:	4313      	orrs	r3, r2
9001f0c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f0c4:	441a      	add	r2, r3
9001f0c6:	1c50      	adds	r0, r2, #1
9001f0c8:	7852      	ldrb	r2, [r2, #1]
9001f0ca:	9003      	str	r0, [sp, #12]
9001f0cc:	0212      	lsls	r2, r2, #8
9001f0ce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f0d0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f0d4:	5cc3      	ldrb	r3, [r0, r3]
9001f0d6:	431a      	orrs	r2, r3
9001f0d8:	b293      	uxth	r3, r2
9001f0da:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001f0de:	930c      	str	r3, [sp, #48]	@ 0x30
9001f0e0:	2300      	movs	r3, #0
9001f0e2:	9308      	str	r3, [sp, #32]
9001f0e4:	461a      	mov	r2, r3
9001f0e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f0ea:	930e      	str	r3, [sp, #56]	@ 0x38
9001f0ec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001f0f0:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f0f2:	2d00      	cmp	r5, #0
9001f0f4:	d07d      	beq.n	9001f1f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f0f6:	45ac      	cmp	ip, r5
9001f0f8:	d26d      	bcs.n	9001f1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f0fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f0fc:	eba5 050c 	sub.w	r5, r5, ip
9001f100:	4608      	mov	r0, r1
9001f102:	455b      	cmp	r3, fp
9001f104:	b2ad      	uxth	r5, r5
9001f106:	d802      	bhi.n	9001f10e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f108:	e071      	b.n	9001f1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f10a:	2b00      	cmp	r3, #0
9001f10c:	d15d      	bne.n	9001f1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f10e:	9b03      	ldr	r3, [sp, #12]
9001f110:	9a02      	ldr	r2, [sp, #8]
9001f112:	785b      	ldrb	r3, [r3, #1]
9001f114:	f1c2 0207 	rsb	r2, r2, #7
9001f118:	9902      	ldr	r1, [sp, #8]
9001f11a:	4093      	lsls	r3, r2
9001f11c:	005b      	lsls	r3, r3, #1
9001f11e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f122:	9b03      	ldr	r3, [sp, #12]
9001f124:	781b      	ldrb	r3, [r3, #0]
9001f126:	410b      	asrs	r3, r1
9001f128:	3101      	adds	r1, #1
9001f12a:	b2c9      	uxtb	r1, r1
9001f12c:	b2db      	uxtb	r3, r3
9001f12e:	2908      	cmp	r1, #8
9001f130:	9102      	str	r1, [sp, #8]
9001f132:	9903      	ldr	r1, [sp, #12]
9001f134:	ea43 0302 	orr.w	r3, r3, r2
9001f138:	bf0c      	ite	eq
9001f13a:	3102      	addeq	r1, #2
9001f13c:	3101      	addne	r1, #1
9001f13e:	b29a      	uxth	r2, r3
9001f140:	bf05      	ittet	eq
9001f142:	9103      	streq	r1, [sp, #12]
9001f144:	2100      	moveq	r1, #0
9001f146:	9103      	strne	r1, [sp, #12]
9001f148:	9102      	streq	r1, [sp, #8]
9001f14a:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f14c:	4291      	cmp	r1, r2
9001f14e:	d30a      	bcc.n	9001f166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f150:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001f154:	2301      	movs	r3, #1
9001f156:	9905      	ldr	r1, [sp, #20]
9001f158:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f15c:	d30f      	bcc.n	9001f17e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f15e:	2100      	movs	r1, #0
9001f160:	4698      	mov	r8, r3
9001f162:	9100      	str	r1, [sp, #0]
9001f164:	e032      	b.n	9001f1cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f166:	9b05      	ldr	r3, [sp, #20]
9001f168:	429a      	cmp	r2, r3
9001f16a:	d318      	bcc.n	9001f19e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f16c:	eb04 0308 	add.w	r3, r4, r8
9001f170:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001f174:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f178:	f108 0301 	add.w	r3, r8, #1
9001f17c:	b29b      	uxth	r3, r3
9001f17e:	9905      	ldr	r1, [sp, #20]
9001f180:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001f184:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f188:	710e      	strb	r6, [r1, #4]
9001f18a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001f18c:	80ce      	strh	r6, [r1, #6]
9001f18e:	f108 0601 	add.w	r6, r8, #1
9001f192:	714e      	strb	r6, [r1, #5]
9001f194:	9905      	ldr	r1, [sp, #20]
9001f196:	3101      	adds	r1, #1
9001f198:	b289      	uxth	r1, r1
9001f19a:	9105      	str	r1, [sp, #20]
9001f19c:	e7df      	b.n	9001f15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f19e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f1a2:	4611      	mov	r1, r2
9001f1a4:	795b      	ldrb	r3, [r3, #5]
9001f1a6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001f1aa:	4426      	add	r6, r4
9001f1ac:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001f1ae:	4437      	add	r7, r6
9001f1b0:	2f00      	cmp	r7, #0
9001f1b2:	dd06      	ble.n	9001f1c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f1b4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f1b8:	790f      	ldrb	r7, [r1, #4]
9001f1ba:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f1be:	88c9      	ldrh	r1, [r1, #6]
9001f1c0:	e7f4      	b.n	9001f1ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f1c2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001f1c6:	b29b      	uxth	r3, r3
9001f1c8:	e7c5      	b.n	9001f156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f1ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f1cc:	920c      	str	r2, [sp, #48]	@ 0x30
9001f1ce:	4601      	mov	r1, r0
9001f1d0:	9a00      	ldr	r2, [sp, #0]
9001f1d2:	469c      	mov	ip, r3
9001f1d4:	e78d      	b.n	9001f0f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f1d6:	ebac 0305 	sub.w	r3, ip, r5
9001f1da:	1957      	adds	r7, r2, r5
9001f1dc:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f1e0:	b2ba      	uxth	r2, r7
9001f1e2:	b29b      	uxth	r3, r3
9001f1e4:	9200      	str	r2, [sp, #0]
9001f1e6:	2500      	movs	r5, #0
9001f1e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f1ea:	455a      	cmp	r2, fp
9001f1ec:	d88d      	bhi.n	9001f10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f1ee:	4601      	mov	r1, r0
9001f1f0:	e748      	b.n	9001f084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f1f2:	458c      	cmp	ip, r1
9001f1f4:	bf27      	ittee	cs
9001f1f6:	ebac 0301 	subcs.w	r3, ip, r1
9001f1fa:	4628      	movcs	r0, r5
9001f1fc:	eba1 000c 	subcc.w	r0, r1, ip
9001f200:	462b      	movcc	r3, r5
9001f202:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001f204:	bf27      	ittee	cs
9001f206:	b29b      	uxthcs	r3, r3
9001f208:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001f20a:	b280      	uxthcc	r0, r0
9001f20c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001f210:	2dff      	cmp	r5, #255	@ 0xff
9001f212:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001f214:	eb02 0705 	add.w	r7, r2, r5
9001f218:	b2bd      	uxth	r5, r7
9001f21a:	9500      	str	r5, [sp, #0]
9001f21c:	d12e      	bne.n	9001f27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f21e:	465e      	mov	r6, fp
9001f220:	9d00      	ldr	r5, [sp, #0]
9001f222:	42aa      	cmp	r2, r5
9001f224:	f040 8083 	bne.w	9001f32e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f228:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f22a:	458c      	cmp	ip, r1
9001f22c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f230:	d3d9      	bcc.n	9001f1e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f232:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001f234:	9904      	ldr	r1, [sp, #16]
9001f236:	8812      	ldrh	r2, [r2, #0]
9001f238:	1a52      	subs	r2, r2, r1
9001f23a:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001f23c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f240:	9a08      	ldr	r2, [sp, #32]
9001f242:	3201      	adds	r2, #1
9001f244:	428a      	cmp	r2, r1
9001f246:	9208      	str	r2, [sp, #32]
9001f248:	f040 8091 	bne.w	9001f36e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f24c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001f250:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001f254:	9b04      	ldr	r3, [sp, #16]
9001f256:	eba5 050c 	sub.w	r5, r5, ip
9001f25a:	b2ad      	uxth	r5, r5
9001f25c:	2d00      	cmp	r5, #0
9001f25e:	bf08      	it	eq
9001f260:	4619      	moveq	r1, r3
9001f262:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f264:	bf18      	it	ne
9001f266:	2100      	movne	r1, #0
9001f268:	3301      	adds	r3, #1
9001f26a:	b289      	uxth	r1, r1
9001f26c:	930d      	str	r3, [sp, #52]	@ 0x34
9001f26e:	e700      	b.n	9001f072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f270:	24021844 	.word	0x24021844
9001f274:	2402183e 	.word	0x2402183e
9001f278:	fffff7fb 	.word	0xfffff7fb
9001f27c:	46d9      	mov	r9, fp
9001f27e:	9d00      	ldr	r5, [sp, #0]
9001f280:	42aa      	cmp	r2, r5
9001f282:	d0d1      	beq.n	9001f228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f284:	1c55      	adds	r5, r2, #1
9001f286:	4422      	add	r2, r4
9001f288:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001f28c:	9a06      	ldr	r2, [sp, #24]
9001f28e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f292:	9517      	str	r5, [sp, #92]	@ 0x5c
9001f294:	4472      	add	r2, lr
9001f296:	9212      	str	r2, [sp, #72]	@ 0x48
9001f298:	f8b9 2000 	ldrh.w	r2, [r9]
9001f29c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f29e:	1216      	asrs	r6, r2, #8
9001f2a0:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f2a4:	10d5      	asrs	r5, r2, #3
9001f2a6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f2a8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f2ac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f2b0:	00d2      	lsls	r2, r2, #3
9001f2b2:	fb1a fa07 	smulbb	sl, sl, r7
9001f2b6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f2ba:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f2bc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f2c0:	b2d2      	uxtb	r2, r2
9001f2c2:	fb06 a607 	mla	r6, r6, r7, sl
9001f2c6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f2c8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f2cc:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f2d0:	b2b6      	uxth	r6, r6
9001f2d2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f2d4:	fb1a fa07 	smulbb	sl, sl, r7
9001f2d8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f2da:	fb05 a507 	mla	r5, r5, r7, sl
9001f2de:	9f06      	ldr	r7, [sp, #24]
9001f2e0:	f106 0a01 	add.w	sl, r6, #1
9001f2e4:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f2e8:	b2ad      	uxth	r5, r5
9001f2ea:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f2ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f2f0:	f105 0a01 	add.w	sl, r5, #1
9001f2f4:	fb1e fe07 	smulbb	lr, lr, r7
9001f2f8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f2fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f2fe:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f302:	fb02 e207 	mla	r2, r2, r7, lr
9001f306:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f30a:	b292      	uxth	r2, r2
9001f30c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f310:	f102 0e01 	add.w	lr, r2, #1
9001f314:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f318:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f31c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f320:	ea4e 0606 	orr.w	r6, lr, r6
9001f324:	ea46 060a 	orr.w	r6, r6, sl
9001f328:	f829 6b02 	strh.w	r6, [r9], #2
9001f32c:	e7a7      	b.n	9001f27e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f32e:	f102 0e01 	add.w	lr, r2, #1
9001f332:	4422      	add	r2, r4
9001f334:	9f06      	ldr	r7, [sp, #24]
9001f336:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001f33a:	9a06      	ldr	r2, [sp, #24]
9001f33c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f340:	eb02 0a05 	add.w	sl, r2, r5
9001f344:	4a13      	ldr	r2, [pc, #76]	@ (9001f394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f346:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f34a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f34e:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f352:	00d2      	lsls	r2, r2, #3
9001f354:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f358:	ea49 0202 	orr.w	r2, r9, r2
9001f35c:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f360:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f364:	f826 2b02 	strh.w	r2, [r6], #2
9001f368:	fa1f f28e 	uxth.w	r2, lr
9001f36c:	e758      	b.n	9001f220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f36e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f372:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f376:	1a2d      	subs	r5, r5, r0
9001f378:	b2ad      	uxth	r5, r5
9001f37a:	2d00      	cmp	r5, #0
9001f37c:	bf18      	it	ne
9001f37e:	2000      	movne	r0, #0
9001f380:	e732      	b.n	9001f1e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f382:	4b05      	ldr	r3, [pc, #20]	@ (9001f398 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f384:	6818      	ldr	r0, [r3, #0]
9001f386:	6803      	ldr	r3, [r0, #0]
9001f388:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f38a:	4798      	blx	r3
9001f38c:	b01f      	add	sp, #124	@ 0x7c
9001f38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f392:	bf00      	nop
9001f394:	fffff800 	.word	0xfffff800
9001f398:	24021844 	.word	0x24021844

9001f39c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f3a0:	b091      	sub	sp, #68	@ 0x44
9001f3a2:	469b      	mov	fp, r3
9001f3a4:	4616      	mov	r6, r2
9001f3a6:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f3aa:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001f3ae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f3b2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001f3b6:	4604      	mov	r4, r0
9001f3b8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001f3bc:	4640      	mov	r0, r8
9001f3be:	460d      	mov	r5, r1
9001f3c0:	4659      	mov	r1, fp
9001f3c2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f3c6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f3ca:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001f3ce:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001f3d2:	f7f1 fda7 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
9001f3d6:	4631      	mov	r1, r6
9001f3d8:	4640      	mov	r0, r8
9001f3da:	f7f1 fda3 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
9001f3de:	4b74      	ldr	r3, [pc, #464]	@ (9001f5b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f3e0:	8818      	ldrh	r0, [r3, #0]
9001f3e2:	4b74      	ldr	r3, [pc, #464]	@ (9001f5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f3e4:	b202      	sxth	r2, r0
9001f3e6:	8819      	ldrh	r1, [r3, #0]
9001f3e8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f3ec:	b20e      	sxth	r6, r1
9001f3ee:	2b00      	cmp	r3, #0
9001f3f0:	da07      	bge.n	9001f402 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f3f2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001f3f6:	4463      	add	r3, ip
9001f3f8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001f3fc:	2300      	movs	r3, #0
9001f3fe:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001f402:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f406:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f40a:	1ad2      	subs	r2, r2, r3
9001f40c:	4594      	cmp	ip, r2
9001f40e:	bfc4      	itt	gt
9001f410:	1ac2      	subgt	r2, r0, r3
9001f412:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001f416:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f41a:	2a00      	cmp	r2, #0
9001f41c:	da07      	bge.n	9001f42e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f41e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001f422:	4462      	add	r2, ip
9001f424:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001f428:	2200      	movs	r2, #0
9001f42a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001f42e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001f432:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f436:	eba6 060a 	sub.w	r6, r6, sl
9001f43a:	42b2      	cmp	r2, r6
9001f43c:	bfc4      	itt	gt
9001f43e:	eba1 020a 	subgt.w	r2, r1, sl
9001f442:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001f446:	4a5c      	ldr	r2, [pc, #368]	@ (9001f5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f448:	7812      	ldrb	r2, [r2, #0]
9001f44a:	b9a2      	cbnz	r2, 9001f476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f44c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f450:	4286      	cmp	r6, r0
9001f452:	4640      	mov	r0, r8
9001f454:	9303      	str	r3, [sp, #12]
9001f456:	bf14      	ite	ne
9001f458:	2600      	movne	r6, #0
9001f45a:	2601      	moveq	r6, #1
9001f45c:	f7f1 fda5 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
9001f460:	9b03      	ldr	r3, [sp, #12]
9001f462:	b160      	cbz	r0, 9001f47e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f464:	2300      	movs	r3, #0
9001f466:	8023      	strh	r3, [r4, #0]
9001f468:	8063      	strh	r3, [r4, #2]
9001f46a:	80a3      	strh	r3, [r4, #4]
9001f46c:	4620      	mov	r0, r4
9001f46e:	80e3      	strh	r3, [r4, #6]
9001f470:	b011      	add	sp, #68	@ 0x44
9001f472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f476:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f47a:	428e      	cmp	r6, r1
9001f47c:	e7e9      	b.n	9001f452 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f47e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f482:	a90e      	add	r1, sp, #56	@ 0x38
9001f484:	900e      	str	r0, [sp, #56]	@ 0x38
9001f486:	a80c      	add	r0, sp, #48	@ 0x30
9001f488:	9205      	str	r2, [sp, #20]
9001f48a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f48e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001f492:	9206      	str	r2, [sp, #24]
9001f494:	f8bb 2000 	ldrh.w	r2, [fp]
9001f498:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001f49c:	1a9b      	subs	r3, r3, r2
9001f49e:	b21b      	sxth	r3, r3
9001f4a0:	9303      	str	r3, [sp, #12]
9001f4a2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f4a6:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001f5c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f4aa:	ebaa 0a03 	sub.w	sl, sl, r3
9001f4ae:	fa0f f38a 	sxth.w	r3, sl
9001f4b2:	9304      	str	r3, [sp, #16]
9001f4b4:	9b03      	ldr	r3, [sp, #12]
9001f4b6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001f4ba:	9b04      	ldr	r3, [sp, #16]
9001f4bc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f4c0:	9b05      	ldr	r3, [sp, #20]
9001f4c2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001f4c6:	9b06      	ldr	r3, [sp, #24]
9001f4c8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001f4cc:	f7f7 fcf0 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f4d0:	4640      	mov	r0, r8
9001f4d2:	f7f7 fca9 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f4d6:	a80e      	add	r0, sp, #56	@ 0x38
9001f4d8:	f7f7 fca6 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f4dc:	4b37      	ldr	r3, [pc, #220]	@ (9001f5bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001f4de:	4628      	mov	r0, r5
9001f4e0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001f4e4:	881b      	ldrh	r3, [r3, #0]
9001f4e6:	9307      	str	r3, [sp, #28]
9001f4e8:	682b      	ldr	r3, [r5, #0]
9001f4ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f4ec:	4798      	blx	r3
9001f4ee:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001f4f2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001f4f6:	4681      	mov	r9, r0
9001f4f8:	f8db 0000 	ldr.w	r0, [fp]
9001f4fc:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001f500:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001f502:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f506:	6803      	ldr	r3, [r0, #0]
9001f508:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001f50a:	4798      	blx	r3
9001f50c:	4607      	mov	r7, r0
9001f50e:	f8db 0000 	ldr.w	r0, [fp]
9001f512:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001f516:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f51a:	6803      	ldr	r3, [r0, #0]
9001f51c:	9109      	str	r1, [sp, #36]	@ 0x24
9001f51e:	9208      	str	r2, [sp, #32]
9001f520:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f522:	4798      	blx	r3
9001f524:	f010 0f01 	tst.w	r0, #1
9001f528:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f52c:	d012      	beq.n	9001f554 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001f52e:	f8db 0000 	ldr.w	r0, [fp]
9001f532:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001f536:	6803      	ldr	r3, [r0, #0]
9001f538:	9200      	str	r2, [sp, #0]
9001f53a:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001f53c:	462b      	mov	r3, r5
9001f53e:	e898 0006 	ldmia.w	r8, {r1, r2}
9001f542:	47b0      	blx	r6
9001f544:	9b03      	ldr	r3, [sp, #12]
9001f546:	8023      	strh	r3, [r4, #0]
9001f548:	9b04      	ldr	r3, [sp, #16]
9001f54a:	8063      	strh	r3, [r4, #2]
9001f54c:	9b05      	ldr	r3, [sp, #20]
9001f54e:	80a3      	strh	r3, [r4, #4]
9001f550:	9b06      	ldr	r3, [sp, #24]
9001f552:	e78b      	b.n	9001f46c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001f554:	fb09 f202 	mul.w	r2, r9, r2
9001f558:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001f55c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001f560:	440f      	add	r7, r1
9001f562:	b166      	cbz	r6, 9001f57e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f564:	9a07      	ldr	r2, [sp, #28]
9001f566:	4592      	cmp	sl, r2
9001f568:	d109      	bne.n	9001f57e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f56a:	f8db 0000 	ldr.w	r0, [fp]
9001f56e:	fb09 f303 	mul.w	r3, r9, r3
9001f572:	4629      	mov	r1, r5
9001f574:	6802      	ldr	r2, [r0, #0]
9001f576:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001f578:	463a      	mov	r2, r7
9001f57a:	47b0      	blx	r6
9001f57c:	e7e2      	b.n	9001f544 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f57e:	fb0a f303 	mul.w	r3, sl, r3
9001f582:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001f586:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001f5c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f58a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001f58e:	4545      	cmp	r5, r8
9001f590:	d2d8      	bcs.n	9001f544 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f592:	f8db 0000 	ldr.w	r0, [fp]
9001f596:	4629      	mov	r1, r5
9001f598:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f59c:	4435      	add	r5, r6
9001f59e:	6802      	ldr	r2, [r0, #0]
9001f5a0:	005b      	lsls	r3, r3, #1
9001f5a2:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001f5a6:	463a      	mov	r2, r7
9001f5a8:	47d0      	blx	sl
9001f5aa:	444f      	add	r7, r9
9001f5ac:	e7ef      	b.n	9001f58e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001f5ae:	bf00      	nop
9001f5b0:	24021838 	.word	0x24021838
9001f5b4:	2402183a 	.word	0x2402183a
9001f5b8:	2402183c 	.word	0x2402183c
9001f5bc:	2402183e 	.word	0x2402183e
9001f5c0:	24021844 	.word	0x24021844

9001f5c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001f5c4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001f5c6:	4606      	mov	r6, r0
9001f5c8:	b087      	sub	sp, #28
9001f5ca:	460c      	mov	r4, r1
9001f5cc:	4617      	mov	r7, r2
9001f5ce:	461d      	mov	r5, r3
9001f5d0:	b333      	cbz	r3, 9001f620 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f5d2:	4608      	mov	r0, r1
9001f5d4:	f7f1 fce9 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
9001f5d8:	bb10      	cbnz	r0, 9001f620 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f5da:	6820      	ldr	r0, [r4, #0]
9001f5dc:	ab04      	add	r3, sp, #16
9001f5de:	6861      	ldr	r1, [r4, #4]
9001f5e0:	4c1b      	ldr	r4, [pc, #108]	@ (9001f650 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001f5e2:	c303      	stmia	r3!, {r0, r1}
9001f5e4:	a804      	add	r0, sp, #16
9001f5e6:	f7f7 fc1f 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f5ea:	6820      	ldr	r0, [r4, #0]
9001f5ec:	6803      	ldr	r3, [r0, #0]
9001f5ee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f5f0:	4798      	blx	r3
9001f5f2:	2dff      	cmp	r5, #255	@ 0xff
9001f5f4:	d016      	beq.n	9001f624 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001f5f6:	f010 0f08 	tst.w	r0, #8
9001f5fa:	6820      	ldr	r0, [r4, #0]
9001f5fc:	d015      	beq.n	9001f62a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001f5fe:	2400      	movs	r4, #0
9001f600:	6801      	ldr	r1, [r0, #0]
9001f602:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001f606:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f60a:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001f60e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001f612:	9401      	str	r4, [sp, #4]
9001f614:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001f618:	9400      	str	r4, [sp, #0]
9001f61a:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
9001f61c:	4639      	mov	r1, r7
9001f61e:	47a0      	blx	r4
9001f620:	b007      	add	sp, #28
9001f622:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f624:	f010 0f02 	tst.w	r0, #2
9001f628:	e7e7      	b.n	9001f5fa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001f62a:	6803      	ldr	r3, [r0, #0]
9001f62c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f62e:	4798      	blx	r3
9001f630:	4b08      	ldr	r3, [pc, #32]	@ (9001f654 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001f632:	4601      	mov	r1, r0
9001f634:	4630      	mov	r0, r6
9001f636:	881a      	ldrh	r2, [r3, #0]
9001f638:	6833      	ldr	r3, [r6, #0]
9001f63a:	e9cd 7500 	strd	r7, r5, [sp]
9001f63e:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001f640:	ab04      	add	r3, sp, #16
9001f642:	47a8      	blx	r5
9001f644:	6820      	ldr	r0, [r4, #0]
9001f646:	6803      	ldr	r3, [r0, #0]
9001f648:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f64a:	4798      	blx	r3
9001f64c:	e7e8      	b.n	9001f620 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f64e:	bf00      	nop
9001f650:	24021844 	.word	0x24021844
9001f654:	2402183e 	.word	0x2402183e

9001f658 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001f658:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f65c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001f660:	4688      	mov	r8, r1
9001f662:	4614      	mov	r4, r2
9001f664:	461d      	mov	r5, r3
9001f666:	9e08      	ldr	r6, [sp, #32]
9001f668:	2f00      	cmp	r7, #0
9001f66a:	f000 80ab 	beq.w	9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f66e:	4618      	mov	r0, r3
9001f670:	f7f1 fc9b 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
9001f674:	2800      	cmp	r0, #0
9001f676:	f040 80a5 	bne.w	9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f67a:	f9b5 1000 	ldrsh.w	r1, [r5]
9001f67e:	2fff      	cmp	r7, #255	@ 0xff
9001f680:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001f684:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001f688:	fb04 1303 	mla	r3, r4, r3, r1
9001f68c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001f690:	eba4 0200 	sub.w	r2, r4, r0
9001f694:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001f698:	fb04 f505 	mul.w	r5, r4, r5
9001f69c:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001f6a0:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001f6a4:	d04a      	beq.n	9001f73c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001f6a6:	b2bc      	uxth	r4, r7
9001f6a8:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001f6ac:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001f6b0:	fa5f f788 	uxtb.w	r7, r8
9001f6b4:	b2f3      	uxtb	r3, r6
9001f6b6:	0040      	lsls	r0, r0, #1
9001f6b8:	fb0e fe04 	mul.w	lr, lr, r4
9001f6bc:	4367      	muls	r7, r4
9001f6be:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001f6c2:	4363      	muls	r3, r4
9001f6c4:	fa1f fc8c 	uxth.w	ip, ip
9001f6c8:	42a9      	cmp	r1, r5
9001f6ca:	d27b      	bcs.n	9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f6cc:	eb01 0900 	add.w	r9, r1, r0
9001f6d0:	4549      	cmp	r1, r9
9001f6d2:	d231      	bcs.n	9001f738 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001f6d4:	880a      	ldrh	r2, [r1, #0]
9001f6d6:	1214      	asrs	r4, r2, #8
9001f6d8:	10d6      	asrs	r6, r2, #3
9001f6da:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001f6de:	00d2      	lsls	r2, r2, #3
9001f6e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f6e4:	b2d2      	uxtb	r2, r2
9001f6e6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f6ea:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f6ee:	fb14 f40c 	smulbb	r4, r4, ip
9001f6f2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f6f6:	fb12 f20c 	smulbb	r2, r2, ip
9001f6fa:	fb16 f60c 	smulbb	r6, r6, ip
9001f6fe:	4474      	add	r4, lr
9001f700:	441a      	add	r2, r3
9001f702:	b2a4      	uxth	r4, r4
9001f704:	443e      	add	r6, r7
9001f706:	b292      	uxth	r2, r2
9001f708:	f104 0a01 	add.w	sl, r4, #1
9001f70c:	b2b6      	uxth	r6, r6
9001f70e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f712:	f102 0a01 	add.w	sl, r2, #1
9001f716:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001f71a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001f71e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f722:	4322      	orrs	r2, r4
9001f724:	1c74      	adds	r4, r6, #1
9001f726:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001f72a:	0976      	lsrs	r6, r6, #5
9001f72c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f730:	4332      	orrs	r2, r6
9001f732:	f821 2b02 	strh.w	r2, [r1], #2
9001f736:	e7cb      	b.n	9001f6d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001f738:	4441      	add	r1, r8
9001f73a:	e7c5      	b.n	9001f6c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001f73c:	0973      	lsrs	r3, r6, #5
9001f73e:	4f22      	ldr	r7, [pc, #136]	@ (9001f7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001f740:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001f744:	ea08 0707 	and.w	r7, r8, r7
9001f748:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f74c:	433b      	orrs	r3, r7
9001f74e:	07e7      	lsls	r7, r4, #31
9001f750:	ea43 0306 	orr.w	r3, r3, r6
9001f754:	b29b      	uxth	r3, r3
9001f756:	d50b      	bpl.n	9001f770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001f758:	0040      	lsls	r0, r0, #1
9001f75a:	0052      	lsls	r2, r2, #1
9001f75c:	42a9      	cmp	r1, r5
9001f75e:	d231      	bcs.n	9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f760:	180c      	adds	r4, r1, r0
9001f762:	42a1      	cmp	r1, r4
9001f764:	d202      	bcs.n	9001f76c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001f766:	f821 3b02 	strh.w	r3, [r1], #2
9001f76a:	e7fa      	b.n	9001f762 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001f76c:	4411      	add	r1, r2
9001f76e:	e7f5      	b.n	9001f75c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001f770:	078e      	lsls	r6, r1, #30
9001f772:	d008      	beq.n	9001f786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001f774:	0066      	lsls	r6, r4, #1
9001f776:	460a      	mov	r2, r1
9001f778:	42aa      	cmp	r2, r5
9001f77a:	d202      	bcs.n	9001f782 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001f77c:	8013      	strh	r3, [r2, #0]
9001f77e:	4432      	add	r2, r6
9001f780:	e7fa      	b.n	9001f778 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001f782:	3102      	adds	r1, #2
9001f784:	3801      	subs	r0, #1
9001f786:	07c2      	lsls	r2, r0, #31
9001f788:	d50b      	bpl.n	9001f7a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001f78a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001f78e:	0066      	lsls	r6, r4, #1
9001f790:	3a01      	subs	r2, #1
9001f792:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001f796:	42aa      	cmp	r2, r5
9001f798:	d202      	bcs.n	9001f7a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001f79a:	8013      	strh	r3, [r2, #0]
9001f79c:	4432      	add	r2, r6
9001f79e:	e7fa      	b.n	9001f796 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001f7a0:	3801      	subs	r0, #1
9001f7a2:	b178      	cbz	r0, 9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f7a4:	1040      	asrs	r0, r0, #1
9001f7a6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001f7aa:	0080      	lsls	r0, r0, #2
9001f7ac:	0064      	lsls	r4, r4, #1
9001f7ae:	42a9      	cmp	r1, r5
9001f7b0:	d208      	bcs.n	9001f7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f7b2:	180e      	adds	r6, r1, r0
9001f7b4:	460a      	mov	r2, r1
9001f7b6:	42b2      	cmp	r2, r6
9001f7b8:	d202      	bcs.n	9001f7c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001f7ba:	f842 3b04 	str.w	r3, [r2], #4
9001f7be:	e7fa      	b.n	9001f7b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001f7c0:	4421      	add	r1, r4
9001f7c2:	e7f4      	b.n	9001f7ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001f7c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f7c8:	00fff800 	.word	0x00fff800

9001f7cc <_ZN8touchgfx8LCD16bppC1Ev>:
9001f7cc:	2200      	movs	r2, #0
9001f7ce:	4912      	ldr	r1, [pc, #72]	@ (9001f818 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001f7d0:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001f7d4:	6001      	str	r1, [r0, #0]
9001f7d6:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001f7da:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001f7de:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001f7e2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001f7e6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001f7ea:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001f7ee:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001f7f2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001f7f6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001f7fa:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001f7fe:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001f802:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001f806:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001f80a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001f80e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001f812:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001f816:	4770      	bx	lr
9001f818:	9002dc2c 	.word	0x9002dc2c

9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001f81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f820:	b08d      	sub	sp, #52	@ 0x34
9001f822:	460d      	mov	r5, r1
9001f824:	4604      	mov	r4, r0
9001f826:	4699      	mov	r9, r3
9001f828:	6808      	ldr	r0, [r1, #0]
9001f82a:	ab08      	add	r3, sp, #32
9001f82c:	6849      	ldr	r1, [r1, #4]
9001f82e:	c303      	stmia	r3!, {r0, r1}
9001f830:	6810      	ldr	r0, [r2, #0]
9001f832:	ab0a      	add	r3, sp, #40	@ 0x28
9001f834:	6851      	ldr	r1, [r2, #4]
9001f836:	c303      	stmia	r3!, {r0, r1}
9001f838:	a808      	add	r0, sp, #32
9001f83a:	f7f7 faf5 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f83e:	4629      	mov	r1, r5
9001f840:	a80a      	add	r0, sp, #40	@ 0x28
9001f842:	4d67      	ldr	r5, [pc, #412]	@ (9001f9e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f844:	f7f7 fb34 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f848:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001f84c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001f850:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001f854:	6828      	ldr	r0, [r5, #0]
9001f856:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f85a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001f85e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f862:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f866:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001f86a:	440a      	add	r2, r1
9001f86c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f870:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001f874:	4413      	add	r3, r2
9001f876:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f87a:	6803      	ldr	r3, [r0, #0]
9001f87c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f87e:	4798      	blx	r3
9001f880:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f884:	d119      	bne.n	9001f8ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001f886:	f010 0f20 	tst.w	r0, #32
9001f88a:	6828      	ldr	r0, [r5, #0]
9001f88c:	d018      	beq.n	9001f8c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001f88e:	2500      	movs	r5, #0
9001f890:	6801      	ldr	r1, [r0, #0]
9001f892:	b2b6      	uxth	r6, r6
9001f894:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f898:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001f89c:	9601      	str	r6, [sp, #4]
9001f89e:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001f8a2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001f8a6:	9502      	str	r5, [sp, #8]
9001f8a8:	fa1f f588 	uxth.w	r5, r8
9001f8ac:	9500      	str	r5, [sp, #0]
9001f8ae:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
9001f8b0:	4621      	mov	r1, r4
9001f8b2:	47a8      	blx	r5
9001f8b4:	b00d      	add	sp, #52	@ 0x34
9001f8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f8ba:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001f8be:	e7e4      	b.n	9001f88a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001f8c0:	6803      	ldr	r3, [r0, #0]
9001f8c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f8c4:	4798      	blx	r3
9001f8c6:	4947      	ldr	r1, [pc, #284]	@ (9001f9e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001f8c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f8cc:	880b      	ldrh	r3, [r1, #0]
9001f8ce:	468a      	mov	sl, r1
9001f8d0:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001f8d4:	fb03 5202 	mla	r2, r3, r2, r5
9001f8d8:	4373      	muls	r3, r6
9001f8da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f8de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f8e2:	9307      	str	r3, [sp, #28]
9001f8e4:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001f8e8:	9306      	str	r3, [sp, #24]
9001f8ea:	9b07      	ldr	r3, [sp, #28]
9001f8ec:	4298      	cmp	r0, r3
9001f8ee:	d270      	bcs.n	9001f9d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001f8f0:	9b06      	ldr	r3, [sp, #24]
9001f8f2:	4621      	mov	r1, r4
9001f8f4:	eb00 0b03 	add.w	fp, r0, r3
9001f8f8:	4558      	cmp	r0, fp
9001f8fa:	d25d      	bcs.n	9001f9b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001f8fc:	f851 4b04 	ldr.w	r4, [r1], #4
9001f900:	0e23      	lsrs	r3, r4, #24
9001f902:	d014      	beq.n	9001f92e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f904:	2bff      	cmp	r3, #255	@ 0xff
9001f906:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001f90a:	d112      	bne.n	9001f932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f90c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f910:	d10f      	bne.n	9001f932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f912:	0963      	lsrs	r3, r4, #5
9001f914:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001f918:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f91c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f920:	f02c 0c07 	bic.w	ip, ip, #7
9001f924:	ea43 0c0c 	orr.w	ip, r3, ip
9001f928:	ea4c 0404 	orr.w	r4, ip, r4
9001f92c:	8004      	strh	r4, [r0, #0]
9001f92e:	3002      	adds	r0, #2
9001f930:	e7e2      	b.n	9001f8f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001f932:	fb09 f303 	mul.w	r3, r9, r3
9001f936:	8807      	ldrh	r7, [r0, #0]
9001f938:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001f93c:	fa5f fc8c 	uxtb.w	ip, ip
9001f940:	1c5a      	adds	r2, r3, #1
9001f942:	123e      	asrs	r6, r7, #8
9001f944:	10fd      	asrs	r5, r7, #3
9001f946:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001f94a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f94e:	00ff      	lsls	r7, r7, #3
9001f950:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f954:	1212      	asrs	r2, r2, #8
9001f956:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f95a:	b293      	uxth	r3, r2
9001f95c:	43d2      	mvns	r2, r2
9001f95e:	b2ff      	uxtb	r7, r7
9001f960:	fb1e fe03 	smulbb	lr, lr, r3
9001f964:	b2d2      	uxtb	r2, r2
9001f966:	fb1c fc03 	smulbb	ip, ip, r3
9001f96a:	b2e4      	uxtb	r4, r4
9001f96c:	fb06 e602 	mla	r6, r6, r2, lr
9001f970:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f974:	fb14 f403 	smulbb	r4, r4, r3
9001f978:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f97c:	b2b6      	uxth	r6, r6
9001f97e:	fb05 c502 	mla	r5, r5, r2, ip
9001f982:	fb07 4702 	mla	r7, r7, r2, r4
9001f986:	f106 0e01 	add.w	lr, r6, #1
9001f98a:	b2ad      	uxth	r5, r5
9001f98c:	b2bf      	uxth	r7, r7
9001f98e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001f992:	f105 0c01 	add.w	ip, r5, #1
9001f996:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001f99a:	1c7e      	adds	r6, r7, #1
9001f99c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f9a0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001f9a4:	096d      	lsrs	r5, r5, #5
9001f9a6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f9aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f9ae:	ea46 060e 	orr.w	r6, r6, lr
9001f9b2:	432e      	orrs	r6, r5
9001f9b4:	8006      	strh	r6, [r0, #0]
9001f9b6:	e7ba      	b.n	9001f92e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f9b8:	f8ba 3000 	ldrh.w	r3, [sl]
9001f9bc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001f9c0:	eba3 0308 	sub.w	r3, r3, r8
9001f9c4:	eba4 0408 	sub.w	r4, r4, r8
9001f9c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f9cc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001f9d0:	e78b      	b.n	9001f8ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001f9d2:	4b03      	ldr	r3, [pc, #12]	@ (9001f9e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f9d4:	6818      	ldr	r0, [r3, #0]
9001f9d6:	6803      	ldr	r3, [r0, #0]
9001f9d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f9da:	4798      	blx	r3
9001f9dc:	e76a      	b.n	9001f8b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001f9de:	bf00      	nop
9001f9e0:	24021844 	.word	0x24021844
9001f9e4:	2402183e 	.word	0x2402183e

9001f9e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001f9e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001f9ec:	b085      	sub	sp, #20
9001f9ee:	6810      	ldr	r0, [r2, #0]
9001f9f0:	460c      	mov	r4, r1
9001f9f2:	6851      	ldr	r1, [r2, #4]
9001f9f4:	466d      	mov	r5, sp
9001f9f6:	4616      	mov	r6, r2
9001f9f8:	c503      	stmia	r5!, {r0, r1}
9001f9fa:	6818      	ldr	r0, [r3, #0]
9001f9fc:	6859      	ldr	r1, [r3, #4]
9001f9fe:	c503      	stmia	r5!, {r0, r1}
9001fa00:	4668      	mov	r0, sp
9001fa02:	4d2e      	ldr	r5, [pc, #184]	@ (9001fabc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001fa04:	f7f7 fa10 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa08:	4631      	mov	r1, r6
9001fa0a:	a802      	add	r0, sp, #8
9001fa0c:	4e2c      	ldr	r6, [pc, #176]	@ (9001fac0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001fa0e:	f7f7 fa4f 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fa12:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001fa16:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001fa1a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fa1e:	6828      	ldr	r0, [r5, #0]
9001fa20:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fa24:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001fa28:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001fa2c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fa30:	f8bd 1000 	ldrh.w	r1, [sp]
9001fa34:	440a      	add	r2, r1
9001fa36:	f8ad 2008 	strh.w	r2, [sp, #8]
9001fa3a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001fa3e:	4413      	add	r3, r2
9001fa40:	f8ad 300a 	strh.w	r3, [sp, #10]
9001fa44:	6803      	ldr	r3, [r0, #0]
9001fa46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fa48:	4798      	blx	r3
9001fa4a:	8833      	ldrh	r3, [r6, #0]
9001fa4c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001fa50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001fa54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001fa58:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001fac4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001fa5c:	fb03 1202 	mla	r2, r3, r2, r1
9001fa60:	fb08 f303 	mul.w	r3, r8, r3
9001fa64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fa68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fa6c:	4298      	cmp	r0, r3
9001fa6e:	d21d      	bcs.n	9001faac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001fa70:	eb00 080c 	add.w	r8, r0, ip
9001fa74:	4540      	cmp	r0, r8
9001fa76:	d20f      	bcs.n	9001fa98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001fa78:	f854 1b04 	ldr.w	r1, [r4], #4
9001fa7c:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001fa80:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001fa84:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001fa88:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001fa8c:	ea42 0209 	orr.w	r2, r2, r9
9001fa90:	430a      	orrs	r2, r1
9001fa92:	f820 2b02 	strh.w	r2, [r0], #2
9001fa96:	e7ed      	b.n	9001fa74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001fa98:	8832      	ldrh	r2, [r6, #0]
9001fa9a:	1bd2      	subs	r2, r2, r7
9001fa9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001faa0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001faa4:	1bd2      	subs	r2, r2, r7
9001faa6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001faaa:	e7df      	b.n	9001fa6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001faac:	6828      	ldr	r0, [r5, #0]
9001faae:	6803      	ldr	r3, [r0, #0]
9001fab0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fab2:	4798      	blx	r3
9001fab4:	b005      	add	sp, #20
9001fab6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001faba:	bf00      	nop
9001fabc:	24021844 	.word	0x24021844
9001fac0:	2402183e 	.word	0x2402183e
9001fac4:	fffff800 	.word	0xfffff800

9001fac8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001fac8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001facc:	b08e      	sub	sp, #56	@ 0x38
9001face:	460e      	mov	r6, r1
9001fad0:	4604      	mov	r4, r0
9001fad2:	461d      	mov	r5, r3
9001fad4:	6808      	ldr	r0, [r1, #0]
9001fad6:	ab0a      	add	r3, sp, #40	@ 0x28
9001fad8:	6849      	ldr	r1, [r1, #4]
9001fada:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001fcb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001fade:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001fcb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001fae2:	c303      	stmia	r3!, {r0, r1}
9001fae4:	6810      	ldr	r0, [r2, #0]
9001fae6:	ab0c      	add	r3, sp, #48	@ 0x30
9001fae8:	6851      	ldr	r1, [r2, #4]
9001faea:	c303      	stmia	r3!, {r0, r1}
9001faec:	a80a      	add	r0, sp, #40	@ 0x28
9001faee:	f7f7 f99b 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001faf2:	4631      	mov	r1, r6
9001faf4:	a80c      	add	r0, sp, #48	@ 0x30
9001faf6:	f7f7 f9db 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fafa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001fafe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001fb02:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001fb06:	f8d8 0000 	ldr.w	r0, [r8]
9001fb0a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fb0e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001fb12:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001fb16:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001fb1a:	440c      	add	r4, r1
9001fb1c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001fb20:	440a      	add	r2, r1
9001fb22:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001fb26:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001fb2a:	4413      	add	r3, r2
9001fb2c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001fb30:	6803      	ldr	r3, [r0, #0]
9001fb32:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fb34:	4798      	blx	r3
9001fb36:	2dff      	cmp	r5, #255	@ 0xff
9001fb38:	d124      	bne.n	9001fb84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001fb3a:	f010 0f01 	tst.w	r0, #1
9001fb3e:	f8d8 0000 	ldr.w	r0, [r8]
9001fb42:	d022      	beq.n	9001fb8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001fb44:	2100      	movs	r1, #0
9001fb46:	f04f 0e01 	mov.w	lr, #1
9001fb4a:	f8d0 c000 	ldr.w	ip, [r0]
9001fb4e:	b2b6      	uxth	r6, r6
9001fb50:	f8cd e018 	str.w	lr, [sp, #24]
9001fb54:	b2bf      	uxth	r7, r7
9001fb56:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001fb5a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001fb5e:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001fb62:	f8b9 e000 	ldrh.w	lr, [r9]
9001fb66:	9503      	str	r5, [sp, #12]
9001fb68:	9601      	str	r6, [sp, #4]
9001fb6a:	9700      	str	r7, [sp, #0]
9001fb6c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001fb70:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001fb74:	9102      	str	r1, [sp, #8]
9001fb76:	4621      	mov	r1, r4
9001fb78:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
9001fb7c:	47a8      	blx	r5
9001fb7e:	b00e      	add	sp, #56	@ 0x38
9001fb80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fb84:	f010 0f04 	tst.w	r0, #4
9001fb88:	e7d9      	b.n	9001fb3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001fb8a:	6803      	ldr	r3, [r0, #0]
9001fb8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fb8e:	4798      	blx	r3
9001fb90:	f8b9 3000 	ldrh.w	r3, [r9]
9001fb94:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fb98:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001fb9c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001fba0:	435e      	muls	r6, r3
9001fba2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001fba6:	2dff      	cmp	r5, #255	@ 0xff
9001fba8:	fb03 1202 	mla	r2, r3, r2, r1
9001fbac:	ebac 0c07 	sub.w	ip, ip, r7
9001fbb0:	eba3 0707 	sub.w	r7, r3, r7
9001fbb4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fbb8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001fbbc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001fbc0:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001fbc4:	d049      	beq.n	9001fc5a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001fbc6:	43eb      	mvns	r3, r5
9001fbc8:	fa1f f985 	uxth.w	r9, r5
9001fbcc:	b2db      	uxtb	r3, r3
9001fbce:	42b0      	cmp	r0, r6
9001fbd0:	d266      	bcs.n	9001fca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001fbd2:	eb00 0a0e 	add.w	sl, r0, lr
9001fbd6:	4550      	cmp	r0, sl
9001fbd8:	4621      	mov	r1, r4
9001fbda:	f104 0403 	add.w	r4, r4, #3
9001fbde:	d25b      	bcs.n	9001fc98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001fbe0:	8802      	ldrh	r2, [r0, #0]
9001fbe2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fbe6:	ea4f 2822 	mov.w	r8, r2, asr #8
9001fbea:	fb11 f109 	smulbb	r1, r1, r9
9001fbee:	10d5      	asrs	r5, r2, #3
9001fbf0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001fbf4:	00d2      	lsls	r2, r2, #3
9001fbf6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fbfa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001fbfe:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fc02:	fb08 1803 	mla	r8, r8, r3, r1
9001fc06:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001fc0a:	b2d2      	uxtb	r2, r2
9001fc0c:	fb11 f109 	smulbb	r1, r1, r9
9001fc10:	fa1f f888 	uxth.w	r8, r8
9001fc14:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fc18:	fb05 1503 	mla	r5, r5, r3, r1
9001fc1c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fc20:	fb11 f109 	smulbb	r1, r1, r9
9001fc24:	b2ad      	uxth	r5, r5
9001fc26:	fb02 1203 	mla	r2, r2, r3, r1
9001fc2a:	f108 0101 	add.w	r1, r8, #1
9001fc2e:	b292      	uxth	r2, r2
9001fc30:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001fc34:	1c51      	adds	r1, r2, #1
9001fc36:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001fc3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001fc3e:	1c69      	adds	r1, r5, #1
9001fc40:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001fc44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fc48:	096d      	lsrs	r5, r5, #5
9001fc4a:	ea42 0208 	orr.w	r2, r2, r8
9001fc4e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fc52:	432a      	orrs	r2, r5
9001fc54:	f820 2b02 	strh.w	r2, [r0], #2
9001fc58:	e7bd      	b.n	9001fbd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001fc5a:	4a14      	ldr	r2, [pc, #80]	@ (9001fcac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001fc5c:	42b0      	cmp	r0, r6
9001fc5e:	d21f      	bcs.n	9001fca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001fc60:	eb00 050e 	add.w	r5, r0, lr
9001fc64:	42a8      	cmp	r0, r5
9001fc66:	4621      	mov	r1, r4
9001fc68:	f104 0403 	add.w	r4, r4, #3
9001fc6c:	d210      	bcs.n	9001fc90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001fc6e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001fc72:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fc76:	00db      	lsls	r3, r3, #3
9001fc78:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001fc7c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fc80:	430b      	orrs	r3, r1
9001fc82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fc86:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001fc8a:	f820 3b02 	strh.w	r3, [r0], #2
9001fc8e:	e7e9      	b.n	9001fc64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001fc90:	4438      	add	r0, r7
9001fc92:	eb01 040c 	add.w	r4, r1, ip
9001fc96:	e7e1      	b.n	9001fc5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001fc98:	4438      	add	r0, r7
9001fc9a:	eb01 040c 	add.w	r4, r1, ip
9001fc9e:	e796      	b.n	9001fbce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001fca0:	4b03      	ldr	r3, [pc, #12]	@ (9001fcb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001fca2:	6818      	ldr	r0, [r3, #0]
9001fca4:	6803      	ldr	r3, [r0, #0]
9001fca6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fca8:	4798      	blx	r3
9001fcaa:	e768      	b.n	9001fb7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001fcac:	fffff800 	.word	0xfffff800
9001fcb0:	24021844 	.word	0x24021844
9001fcb4:	2402183e 	.word	0x2402183e

9001fcb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001fcb8:	b4f0      	push	{r4, r5, r6, r7}
9001fcba:	4616      	mov	r6, r2
9001fcbc:	461c      	mov	r4, r3
9001fcbe:	460d      	mov	r5, r1
9001fcc0:	9a04      	ldr	r2, [sp, #16]
9001fcc2:	2e01      	cmp	r6, #1
9001fcc4:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001fcc8:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001fccc:	d012      	beq.n	9001fcf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001fcce:	d303      	bcc.n	9001fcd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001fcd0:	2e02      	cmp	r6, #2
9001fcd2:	d00a      	beq.n	9001fcea <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001fcd4:	bcf0      	pop	{r4, r5, r6, r7}
9001fcd6:	4770      	bx	lr
9001fcd8:	6805      	ldr	r5, [r0, #0]
9001fcda:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001fcde:	68ed      	ldr	r5, [r5, #12]
9001fce0:	4613      	mov	r3, r2
9001fce2:	4622      	mov	r2, r4
9001fce4:	46ac      	mov	ip, r5
9001fce6:	bcf0      	pop	{r4, r5, r6, r7}
9001fce8:	4760      	bx	ip
9001fcea:	4621      	mov	r1, r4
9001fcec:	4628      	mov	r0, r5
9001fcee:	bcf0      	pop	{r4, r5, r6, r7}
9001fcf0:	f7ff bd94 	b.w	9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fcf4:	4621      	mov	r1, r4
9001fcf6:	4628      	mov	r0, r5
9001fcf8:	bcf0      	pop	{r4, r5, r6, r7}
9001fcfa:	f7ff bee5 	b.w	9001fac8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001fd00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001fd00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd04:	b093      	sub	sp, #76	@ 0x4c
9001fd06:	4681      	mov	r9, r0
9001fd08:	4688      	mov	r8, r1
9001fd0a:	6810      	ldr	r0, [r2, #0]
9001fd0c:	6851      	ldr	r1, [r2, #4]
9001fd0e:	ac0e      	add	r4, sp, #56	@ 0x38
9001fd10:	4616      	mov	r6, r2
9001fd12:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001fd16:	4f6b      	ldr	r7, [pc, #428]	@ (9001fec4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001fd18:	c403      	stmia	r4!, {r0, r1}
9001fd1a:	6818      	ldr	r0, [r3, #0]
9001fd1c:	ac10      	add	r4, sp, #64	@ 0x40
9001fd1e:	6859      	ldr	r1, [r3, #4]
9001fd20:	c403      	stmia	r4!, {r0, r1}
9001fd22:	a80e      	add	r0, sp, #56	@ 0x38
9001fd24:	f7f7 f880 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fd28:	4631      	mov	r1, r6
9001fd2a:	a810      	add	r0, sp, #64	@ 0x40
9001fd2c:	4e66      	ldr	r6, [pc, #408]	@ (9001fec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001fd2e:	f7f7 f8bf 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fd32:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001fd36:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001fd3a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001fd3e:	6830      	ldr	r0, [r6, #0]
9001fd40:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fd44:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001fd48:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001fd4c:	4489      	add	r9, r1
9001fd4e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001fd52:	440a      	add	r2, r1
9001fd54:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001fd58:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001fd5c:	4413      	add	r3, r2
9001fd5e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001fd62:	6803      	ldr	r3, [r0, #0]
9001fd64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fd66:	4798      	blx	r3
9001fd68:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001fd6c:	6830      	ldr	r0, [r6, #0]
9001fd6e:	d01d      	beq.n	9001fdac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001fd70:	2200      	movs	r2, #0
9001fd72:	6801      	ldr	r1, [r0, #0]
9001fd74:	b2a4      	uxth	r4, r4
9001fd76:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001fd7a:	b2ad      	uxth	r5, r5
9001fd7c:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001fd80:	220b      	movs	r2, #11
9001fd82:	9207      	str	r2, [sp, #28]
9001fd84:	883a      	ldrh	r2, [r7, #0]
9001fd86:	9502      	str	r5, [sp, #8]
9001fd88:	9206      	str	r2, [sp, #24]
9001fd8a:	2201      	movs	r2, #1
9001fd8c:	9401      	str	r4, [sp, #4]
9001fd8e:	e9cd a204 	strd	sl, r2, [sp, #16]
9001fd92:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001fd96:	9203      	str	r2, [sp, #12]
9001fd98:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001fd9c:	9200      	str	r2, [sp, #0]
9001fd9e:	4642      	mov	r2, r8
9001fda0:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
9001fda2:	4649      	mov	r1, r9
9001fda4:	47a0      	blx	r4
9001fda6:	b013      	add	sp, #76	@ 0x4c
9001fda8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fdac:	6803      	ldr	r3, [r0, #0]
9001fdae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fdb0:	4798      	blx	r3
9001fdb2:	883b      	ldrh	r3, [r7, #0]
9001fdb4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001fdb8:	f04f 0e04 	mov.w	lr, #4
9001fdbc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001fdc0:	435d      	muls	r5, r3
9001fdc2:	fb03 1202 	mla	r2, r3, r2, r1
9001fdc6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fdca:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001fdce:	920c      	str	r2, [sp, #48]	@ 0x30
9001fdd0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001fdd4:	1b12      	subs	r2, r2, r4
9001fdd6:	920d      	str	r2, [sp, #52]	@ 0x34
9001fdd8:	0062      	lsls	r2, r4, #1
9001fdda:	1b1c      	subs	r4, r3, r4
9001fddc:	920a      	str	r2, [sp, #40]	@ 0x28
9001fdde:	0063      	lsls	r3, r4, #1
9001fde0:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fde2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001fde4:	4298      	cmp	r0, r3
9001fde6:	d266      	bcs.n	9001feb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001fde8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001fdea:	eb00 0b03 	add.w	fp, r0, r3
9001fdee:	4558      	cmp	r0, fp
9001fdf0:	d25c      	bcs.n	9001feac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001fdf2:	f819 3b01 	ldrb.w	r3, [r9], #1
9001fdf6:	fb1e e303 	smlabb	r3, lr, r3, lr
9001fdfa:	f858 2003 	ldr.w	r2, [r8, r3]
9001fdfe:	0e11      	lsrs	r1, r2, #24
9001fe00:	d012      	beq.n	9001fe28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001fe02:	29ff      	cmp	r1, #255	@ 0xff
9001fe04:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001fe08:	d110      	bne.n	9001fe2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001fe0a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001fe0e:	d10d      	bne.n	9001fe2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001fe10:	0953      	lsrs	r3, r2, #5
9001fe12:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001fe16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001fe1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fe1e:	f027 0707 	bic.w	r7, r7, #7
9001fe22:	431f      	orrs	r7, r3
9001fe24:	433a      	orrs	r2, r7
9001fe26:	8002      	strh	r2, [r0, #0]
9001fe28:	3002      	adds	r0, #2
9001fe2a:	e7e0      	b.n	9001fdee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001fe2c:	fb0a f101 	mul.w	r1, sl, r1
9001fe30:	8806      	ldrh	r6, [r0, #0]
9001fe32:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001fe36:	b2d2      	uxtb	r2, r2
9001fe38:	1c4b      	adds	r3, r1, #1
9001fe3a:	1235      	asrs	r5, r6, #8
9001fe3c:	10f4      	asrs	r4, r6, #3
9001fe3e:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001fe42:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001fe46:	00f6      	lsls	r6, r6, #3
9001fe48:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001fe4c:	121b      	asrs	r3, r3, #8
9001fe4e:	b2f6      	uxtb	r6, r6
9001fe50:	b299      	uxth	r1, r3
9001fe52:	43db      	mvns	r3, r3
9001fe54:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001fe58:	fb1c fc01 	smulbb	ip, ip, r1
9001fe5c:	b2db      	uxtb	r3, r3
9001fe5e:	fb12 f201 	smulbb	r2, r2, r1
9001fe62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fe66:	fb05 c503 	mla	r5, r5, r3, ip
9001fe6a:	b2ff      	uxtb	r7, r7
9001fe6c:	fb06 2203 	mla	r2, r6, r3, r2
9001fe70:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001fe74:	fb17 f701 	smulbb	r7, r7, r1
9001fe78:	b2ad      	uxth	r5, r5
9001fe7a:	b292      	uxth	r2, r2
9001fe7c:	fb04 7403 	mla	r4, r4, r3, r7
9001fe80:	f105 0c01 	add.w	ip, r5, #1
9001fe84:	1c57      	adds	r7, r2, #1
9001fe86:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fe8a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001fe8e:	b2a4      	uxth	r4, r4
9001fe90:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001fe94:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fe98:	433d      	orrs	r5, r7
9001fe9a:	1c67      	adds	r7, r4, #1
9001fe9c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001fea0:	0964      	lsrs	r4, r4, #5
9001fea2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001fea6:	4325      	orrs	r5, r4
9001fea8:	8005      	strh	r5, [r0, #0]
9001feaa:	e7bd      	b.n	9001fe28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001feac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001feae:	4418      	add	r0, r3
9001feb0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001feb2:	4499      	add	r9, r3
9001feb4:	e795      	b.n	9001fde2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001feb6:	4b04      	ldr	r3, [pc, #16]	@ (9001fec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001feb8:	6818      	ldr	r0, [r3, #0]
9001feba:	6803      	ldr	r3, [r0, #0]
9001febc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001febe:	4798      	blx	r3
9001fec0:	e771      	b.n	9001fda6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001fec2:	bf00      	nop
9001fec4:	2402183e 	.word	0x2402183e
9001fec8:	24021844 	.word	0x24021844

9001fecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001fecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fed0:	b087      	sub	sp, #28
9001fed2:	4680      	mov	r8, r0
9001fed4:	460d      	mov	r5, r1
9001fed6:	4614      	mov	r4, r2
9001fed8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001fedc:	2e00      	cmp	r6, #0
9001fede:	f000 80b9 	beq.w	90020054 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001fee2:	6810      	ldr	r0, [r2, #0]
9001fee4:	af02      	add	r7, sp, #8
9001fee6:	6851      	ldr	r1, [r2, #4]
9001fee8:	c703      	stmia	r7!, {r0, r1}
9001feea:	6818      	ldr	r0, [r3, #0]
9001feec:	af04      	add	r7, sp, #16
9001feee:	6859      	ldr	r1, [r3, #4]
9001fef0:	c703      	stmia	r7!, {r0, r1}
9001fef2:	a802      	add	r0, sp, #8
9001fef4:	f7f6 ff98 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fef8:	4621      	mov	r1, r4
9001fefa:	a804      	add	r0, sp, #16
9001fefc:	f7f6 ffd8 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff00:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ff04:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ff08:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001ff0c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001ff10:	fb14 2103 	smlabb	r1, r4, r3, r2
9001ff14:	eb08 0401 	add.w	r4, r8, r1
9001ff18:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ff1c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001ff20:	440a      	add	r2, r1
9001ff22:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001ff26:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ff2a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ff2e:	4413      	add	r3, r2
9001ff30:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ff34:	4b49      	ldr	r3, [pc, #292]	@ (9002005c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001ff36:	6818      	ldr	r0, [r3, #0]
9001ff38:	6803      	ldr	r3, [r0, #0]
9001ff3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ff3c:	4798      	blx	r3
9001ff3e:	4b48      	ldr	r3, [pc, #288]	@ (90020060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001ff40:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001ff44:	2eff      	cmp	r6, #255	@ 0xff
9001ff46:	881a      	ldrh	r2, [r3, #0]
9001ff48:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001ff4c:	fb02 c101 	mla	r1, r2, r1, ip
9001ff50:	fb02 f207 	mul.w	r2, r2, r7
9001ff54:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ff58:	f105 0104 	add.w	r1, r5, #4
9001ff5c:	461d      	mov	r5, r3
9001ff5e:	d05a      	beq.n	90020016 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001ff60:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001ff64:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001ff68:	b2b6      	uxth	r6, r6
9001ff6a:	9301      	str	r3, [sp, #4]
9001ff6c:	fa1f fe8e 	uxth.w	lr, lr
9001ff70:	4282      	cmp	r2, r0
9001ff72:	d96a      	bls.n	9002004a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001ff74:	eb00 0b0a 	add.w	fp, r0, sl
9001ff78:	4583      	cmp	fp, r0
9001ff7a:	d940      	bls.n	9001fffe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001ff7c:	8805      	ldrh	r5, [r0, #0]
9001ff7e:	f814 3b01 	ldrb.w	r3, [r4], #1
9001ff82:	122f      	asrs	r7, r5, #8
9001ff84:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001ff88:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001ff8c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ff90:	00ed      	lsls	r5, r5, #3
9001ff92:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001ff96:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001ff9a:	fb17 f70e 	smulbb	r7, r7, lr
9001ff9e:	b2ed      	uxtb	r5, r5
9001ffa0:	fb19 f90e 	smulbb	r9, r9, lr
9001ffa4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ffa8:	fb15 f50e 	smulbb	r5, r5, lr
9001ffac:	fb0c 7c06 	mla	ip, ip, r6, r7
9001ffb0:	10df      	asrs	r7, r3, #3
9001ffb2:	00db      	lsls	r3, r3, #3
9001ffb4:	fa1f fc8c 	uxth.w	ip, ip
9001ffb8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ffbc:	b2db      	uxtb	r3, r3
9001ffbe:	fb07 9706 	mla	r7, r7, r6, r9
9001ffc2:	f10c 0901 	add.w	r9, ip, #1
9001ffc6:	fb03 5306 	mla	r3, r3, r6, r5
9001ffca:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001ffce:	b29b      	uxth	r3, r3
9001ffd0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001ffd4:	b2bf      	uxth	r7, r7
9001ffd6:	f103 0c01 	add.w	ip, r3, #1
9001ffda:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ffde:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ffe2:	ea4c 0c09 	orr.w	ip, ip, r9
9001ffe6:	f107 0901 	add.w	r9, r7, #1
9001ffea:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001ffee:	097f      	lsrs	r7, r7, #5
9001fff0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001fff4:	ea4c 0c07 	orr.w	ip, ip, r7
9001fff8:	f820 cb02 	strh.w	ip, [r0], #2
9001fffc:	e7bc      	b.n	9001ff78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001fffe:	9b01      	ldr	r3, [sp, #4]
90020000:	881b      	ldrh	r3, [r3, #0]
90020002:	eba3 0308 	sub.w	r3, r3, r8
90020006:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002000a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002000e:	eba3 0308 	sub.w	r3, r3, r8
90020012:	441c      	add	r4, r3
90020014:	e7ac      	b.n	9001ff70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90020016:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9002001a:	4282      	cmp	r2, r0
9002001c:	d915      	bls.n	9002004a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002001e:	eb00 060a 	add.w	r6, r0, sl
90020022:	4286      	cmp	r6, r0
90020024:	d906      	bls.n	90020034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90020026:	f814 3b01 	ldrb.w	r3, [r4], #1
9002002a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002002e:	f820 3b02 	strh.w	r3, [r0], #2
90020032:	e7f6      	b.n	90020022 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90020034:	882b      	ldrh	r3, [r5, #0]
90020036:	eba3 0308 	sub.w	r3, r3, r8
9002003a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002003e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020042:	eba3 0308 	sub.w	r3, r3, r8
90020046:	441c      	add	r4, r3
90020048:	e7e7      	b.n	9002001a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9002004a:	4b04      	ldr	r3, [pc, #16]	@ (9002005c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002004c:	6818      	ldr	r0, [r3, #0]
9002004e:	6803      	ldr	r3, [r0, #0]
90020050:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020052:	4798      	blx	r3
90020054:	b007      	add	sp, #28
90020056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002005a:	bf00      	nop
9002005c:	24021844 	.word	0x24021844
90020060:	2402183e 	.word	0x2402183e

90020064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90020064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020068:	b091      	sub	sp, #68	@ 0x44
9002006a:	4680      	mov	r8, r0
9002006c:	460f      	mov	r7, r1
9002006e:	4614      	mov	r4, r2
90020070:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
90020074:	2d00      	cmp	r5, #0
90020076:	d051      	beq.n	9002011c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020078:	6810      	ldr	r0, [r2, #0]
9002007a:	ae0c      	add	r6, sp, #48	@ 0x30
9002007c:	6851      	ldr	r1, [r2, #4]
9002007e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90020280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90020082:	c603      	stmia	r6!, {r0, r1}
90020084:	6818      	ldr	r0, [r3, #0]
90020086:	ae0e      	add	r6, sp, #56	@ 0x38
90020088:	6859      	ldr	r1, [r3, #4]
9002008a:	c603      	stmia	r6!, {r0, r1}
9002008c:	a80c      	add	r0, sp, #48	@ 0x30
9002008e:	f7f6 fecb 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020092:	4621      	mov	r1, r4
90020094:	a80e      	add	r0, sp, #56	@ 0x38
90020096:	f7f6 ff0b 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002009a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9002009e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900200a2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900200a6:	f8d9 0000 	ldr.w	r0, [r9]
900200aa:	fb11 2103 	smlabb	r1, r1, r3, r2
900200ae:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900200b2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
900200b6:	eb08 0401 	add.w	r4, r8, r1
900200ba:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
900200be:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90020284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900200c2:	440a      	add	r2, r1
900200c4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
900200c8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900200cc:	4413      	add	r3, r2
900200ce:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
900200d2:	6803      	ldr	r3, [r0, #0]
900200d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900200d6:	4798      	blx	r3
900200d8:	f010 0f80 	tst.w	r0, #128	@ 0x80
900200dc:	f8d9 0000 	ldr.w	r0, [r9]
900200e0:	d01f      	beq.n	90020122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900200e2:	2200      	movs	r2, #0
900200e4:	6801      	ldr	r1, [r0, #0]
900200e6:	b2b6      	uxth	r6, r6
900200e8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900200ec:	e9cd 2208 	strd	r2, r2, [sp, #32]
900200f0:	220b      	movs	r2, #11
900200f2:	9207      	str	r2, [sp, #28]
900200f4:	f8b8 2000 	ldrh.w	r2, [r8]
900200f8:	9601      	str	r6, [sp, #4]
900200fa:	9206      	str	r2, [sp, #24]
900200fc:	2201      	movs	r2, #1
900200fe:	e9cd 5204 	strd	r5, r2, [sp, #16]
90020102:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90020106:	9203      	str	r2, [sp, #12]
90020108:	fa1f f28a 	uxth.w	r2, sl
9002010c:	9202      	str	r2, [sp, #8]
9002010e:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020112:	9200      	str	r2, [sp, #0]
90020114:	463a      	mov	r2, r7
90020116:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
90020118:	4621      	mov	r1, r4
9002011a:	47a8      	blx	r5
9002011c:	b011      	add	sp, #68	@ 0x44
9002011e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020122:	6803      	ldr	r3, [r0, #0]
90020124:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020128:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002012a:	4798      	blx	r3
9002012c:	f8b8 2000 	ldrh.w	r2, [r8]
90020130:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020134:	2dff      	cmp	r5, #255	@ 0xff
90020136:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9002013a:	fb0a fa02 	mul.w	sl, sl, r2
9002013e:	fb02 1303 	mla	r3, r2, r3, r1
90020142:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020146:	d062      	beq.n	9002020e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020148:	ea6f 0c05 	mvn.w	ip, r5
9002014c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020150:	b2ad      	uxth	r5, r5
90020152:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90020156:	fa5f fc8c 	uxtb.w	ip, ip
9002015a:	930a      	str	r3, [sp, #40]	@ 0x28
9002015c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002015e:	4298      	cmp	r0, r3
90020160:	f080 8085 	bcs.w	9002026e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020164:	eb00 0b09 	add.w	fp, r0, r9
90020168:	4558      	cmp	r0, fp
9002016a:	d246      	bcs.n	900201fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9002016c:	f814 eb01 	ldrb.w	lr, [r4], #1
90020170:	2303      	movs	r3, #3
90020172:	2204      	movs	r2, #4
90020174:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020178:	8803      	ldrh	r3, [r0, #0]
9002017a:	eb07 0a0e 	add.w	sl, r7, lr
9002017e:	1219      	asrs	r1, r3, #8
90020180:	10da      	asrs	r2, r3, #3
90020182:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020186:	f89a 8002 	ldrb.w	r8, [sl, #2]
9002018a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002018e:	00db      	lsls	r3, r3, #3
90020190:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020194:	fb18 f805 	smulbb	r8, r8, r5
90020198:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9002019c:	fb1e fe05 	smulbb	lr, lr, r5
900201a0:	b2db      	uxtb	r3, r3
900201a2:	fb01 810c 	mla	r1, r1, ip, r8
900201a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900201aa:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900201ae:	fb18 f805 	smulbb	r8, r8, r5
900201b2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900201b6:	b289      	uxth	r1, r1
900201b8:	fb02 820c 	mla	r2, r2, ip, r8
900201bc:	fb03 e30c 	mla	r3, r3, ip, lr
900201c0:	f101 0801 	add.w	r8, r1, #1
900201c4:	b292      	uxth	r2, r2
900201c6:	b29b      	uxth	r3, r3
900201c8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900201cc:	f102 0801 	add.w	r8, r2, #1
900201d0:	f103 0e01 	add.w	lr, r3, #1
900201d4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900201d8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900201dc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900201e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
900201e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900201e8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900201ec:	ea4e 0101 	orr.w	r1, lr, r1
900201f0:	ea41 0108 	orr.w	r1, r1, r8
900201f4:	f820 1b02 	strh.w	r1, [r0], #2
900201f8:	e7b6      	b.n	90020168 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
900201fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900201fc:	881b      	ldrh	r3, [r3, #0]
900201fe:	1b9b      	subs	r3, r3, r6
90020200:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020204:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020208:	1b9b      	subs	r3, r3, r6
9002020a:	441c      	add	r4, r3
9002020c:	e7a6      	b.n	9002015c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002020e:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90020212:	2203      	movs	r2, #3
90020214:	2504      	movs	r5, #4
90020216:	4919      	ldr	r1, [pc, #100]	@ (9002027c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020218:	4550      	cmp	r0, sl
9002021a:	d228      	bcs.n	9002026e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002021c:	eb00 0c09 	add.w	ip, r0, r9
90020220:	4560      	cmp	r0, ip
90020222:	4623      	mov	r3, r4
90020224:	d219      	bcs.n	9002025a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020226:	f893 e000 	ldrb.w	lr, [r3]
9002022a:	3401      	adds	r4, #1
9002022c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020230:	eb07 0b0e 	add.w	fp, r7, lr
90020234:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020238:	f89b 3002 	ldrb.w	r3, [fp, #2]
9002023c:	f89b b001 	ldrb.w	fp, [fp, #1]
90020240:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020244:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020248:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002024c:	ea43 030b 	orr.w	r3, r3, fp
90020250:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020254:	f820 3b02 	strh.w	r3, [r0], #2
90020258:	e7e2      	b.n	90020220 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9002025a:	f8b8 3000 	ldrh.w	r3, [r8]
9002025e:	1b9b      	subs	r3, r3, r6
90020260:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020264:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020268:	1b9b      	subs	r3, r3, r6
9002026a:	441c      	add	r4, r3
9002026c:	e7d4      	b.n	90020218 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9002026e:	4b04      	ldr	r3, [pc, #16]	@ (90020280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020270:	6818      	ldr	r0, [r3, #0]
90020272:	6803      	ldr	r3, [r0, #0]
90020274:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020276:	4798      	blx	r3
90020278:	e750      	b.n	9002011c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9002027a:	bf00      	nop
9002027c:	fffff800 	.word	0xfffff800
90020280:	24021844 	.word	0x24021844
90020284:	2402183e 	.word	0x2402183e

90020288 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020288:	b4f0      	push	{r4, r5, r6, r7}
9002028a:	460c      	mov	r4, r1
9002028c:	4611      	mov	r1, r2
9002028e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90020292:	461a      	mov	r2, r3
90020294:	780f      	ldrb	r7, [r1, #0]
90020296:	9b04      	ldr	r3, [sp, #16]
90020298:	2f01      	cmp	r7, #1
9002029a:	784e      	ldrb	r6, [r1, #1]
9002029c:	d038      	beq.n	90020310 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9002029e:	d31f      	bcc.n	900202e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
900202a0:	2f02      	cmp	r7, #2
900202a2:	d14d      	bne.n	90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900202a4:	2e03      	cmp	r6, #3
900202a6:	d84b      	bhi.n	90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900202a8:	e8df f006 	tbb	[pc, r6]
900202ac:	17140702 	.word	0x17140702
900202b0:	9504      	str	r5, [sp, #16]
900202b2:	4620      	mov	r0, r4
900202b4:	bcf0      	pop	{r4, r5, r6, r7}
900202b6:	f7ff be09 	b.w	9001fecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900202ba:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900202bc:	2800      	cmp	r0, #0
900202be:	d03f      	beq.n	90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900202c0:	6806      	ldr	r6, [r0, #0]
900202c2:	e9cd 3504 	strd	r3, r5, [sp, #16]
900202c6:	68b5      	ldr	r5, [r6, #8]
900202c8:	4613      	mov	r3, r2
900202ca:	46ac      	mov	ip, r5
900202cc:	460a      	mov	r2, r1
900202ce:	4621      	mov	r1, r4
900202d0:	bcf0      	pop	{r4, r5, r6, r7}
900202d2:	4760      	bx	ip
900202d4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
900202d8:	e7f0      	b.n	900202bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900202da:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
900202de:	e7ed      	b.n	900202bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900202e0:	2e03      	cmp	r6, #3
900202e2:	d82d      	bhi.n	90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900202e4:	e8df f006 	tbb	[pc, r6]
900202e8:	110e0702 	.word	0x110e0702
900202ec:	9504      	str	r5, [sp, #16]
900202ee:	4620      	mov	r0, r4
900202f0:	bcf0      	pop	{r4, r5, r6, r7}
900202f2:	f7ff bd05 	b.w	9001fd00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
900202f6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900202f8:	b310      	cbz	r0, 90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900202fa:	6806      	ldr	r6, [r0, #0]
900202fc:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020300:	68f5      	ldr	r5, [r6, #12]
90020302:	e7e1      	b.n	900202c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020304:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020308:	e7f6      	b.n	900202f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9002030a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002030e:	e7f3      	b.n	900202f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020310:	2e03      	cmp	r6, #3
90020312:	d815      	bhi.n	90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020314:	e8df f006 	tbb	[pc, r6]
90020318:	110e0702 	.word	0x110e0702
9002031c:	9504      	str	r5, [sp, #16]
9002031e:	4620      	mov	r0, r4
90020320:	bcf0      	pop	{r4, r5, r6, r7}
90020322:	f7ff be9f 	b.w	90020064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020326:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020328:	b150      	cbz	r0, 90020340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9002032a:	6806      	ldr	r6, [r0, #0]
9002032c:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020330:	6935      	ldr	r5, [r6, #16]
90020332:	e7c9      	b.n	900202c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020334:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020338:	e7f6      	b.n	90020328 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002033a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002033e:	e7f3      	b.n	90020328 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020340:	bcf0      	pop	{r4, r5, r6, r7}
90020342:	4770      	bx	lr

90020344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020348:	b087      	sub	sp, #28
9002034a:	4604      	mov	r4, r0
9002034c:	460e      	mov	r6, r1
9002034e:	6810      	ldr	r0, [r2, #0]
90020350:	6851      	ldr	r1, [r2, #4]
90020352:	ad02      	add	r5, sp, #8
90020354:	4617      	mov	r7, r2
90020356:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9002035a:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9002058c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9002035e:	c503      	stmia	r5!, {r0, r1}
90020360:	6818      	ldr	r0, [r3, #0]
90020362:	ad04      	add	r5, sp, #16
90020364:	6859      	ldr	r1, [r3, #4]
90020366:	c503      	stmia	r5!, {r0, r1}
90020368:	a802      	add	r0, sp, #8
9002036a:	f7f6 fd5d 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002036e:	4639      	mov	r1, r7
90020370:	a804      	add	r0, sp, #16
90020372:	f7f6 fd9d 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020376:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002037a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002037e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020382:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020386:	fb11 2103 	smlabb	r1, r1, r3, r2
9002038a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9002038e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020392:	440e      	add	r6, r1
90020394:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020398:	440a      	add	r2, r1
9002039a:	f8ad 2010 	strh.w	r2, [sp, #16]
9002039e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900203a2:	4413      	add	r3, r2
900203a4:	f8ad 3012 	strh.w	r3, [sp, #18]
900203a8:	4b77      	ldr	r3, [pc, #476]	@ (90020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900203aa:	6818      	ldr	r0, [r3, #0]
900203ac:	6803      	ldr	r3, [r0, #0]
900203ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900203b0:	4798      	blx	r3
900203b2:	f8b9 b000 	ldrh.w	fp, [r9]
900203b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900203ba:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900203be:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900203c2:	fb05 f50b 	mul.w	r5, r5, fp
900203c6:	fb0b 2303 	mla	r3, fp, r3, r2
900203ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900203ce:	ea4f 0348 	mov.w	r3, r8, lsl #1
900203d2:	9300      	str	r3, [sp, #0]
900203d4:	d069      	beq.n	900204aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
900203d6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
900203da:	4558      	cmp	r0, fp
900203dc:	f080 80cc 	bcs.w	90020578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900203e0:	9b00      	ldr	r3, [sp, #0]
900203e2:	4631      	mov	r1, r6
900203e4:	18c3      	adds	r3, r0, r3
900203e6:	9301      	str	r3, [sp, #4]
900203e8:	9b01      	ldr	r3, [sp, #4]
900203ea:	4298      	cmp	r0, r3
900203ec:	d24f      	bcs.n	9002048e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
900203ee:	f811 2b01 	ldrb.w	r2, [r1], #1
900203f2:	2a00      	cmp	r2, #0
900203f4:	d048      	beq.n	90020488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900203f6:	fb0a f202 	mul.w	r2, sl, r2
900203fa:	1c53      	adds	r3, r2, #1
900203fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020400:	121b      	asrs	r3, r3, #8
90020402:	d041      	beq.n	90020488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020404:	8802      	ldrh	r2, [r0, #0]
90020406:	b29e      	uxth	r6, r3
90020408:	f8b4 c000 	ldrh.w	ip, [r4]
9002040c:	43db      	mvns	r3, r3
9002040e:	1215      	asrs	r5, r2, #8
90020410:	b2db      	uxtb	r3, r3
90020412:	ea4f 272c 	mov.w	r7, ip, asr #8
90020416:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002041a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002041e:	fb15 f503 	smulbb	r5, r5, r3
90020422:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020426:	00d2      	lsls	r2, r2, #3
90020428:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9002042c:	fb07 5706 	mla	r7, r7, r6, r5
90020430:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020434:	b2d2      	uxtb	r2, r2
90020436:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002043a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002043e:	fb1e fe03 	smulbb	lr, lr, r3
90020442:	b2bf      	uxth	r7, r7
90020444:	fb12 f203 	smulbb	r2, r2, r3
90020448:	fa5f fc8c 	uxtb.w	ip, ip
9002044c:	fb05 e506 	mla	r5, r5, r6, lr
90020450:	f107 0e01 	add.w	lr, r7, #1
90020454:	fb0c 2c06 	mla	ip, ip, r6, r2
90020458:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9002045c:	fa1f fc8c 	uxth.w	ip, ip
90020460:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90020464:	b2ad      	uxth	r5, r5
90020466:	f10c 0701 	add.w	r7, ip, #1
9002046a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002046e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020472:	ea47 070e 	orr.w	r7, r7, lr
90020476:	f105 0e01 	add.w	lr, r5, #1
9002047a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9002047e:	096d      	lsrs	r5, r5, #5
90020480:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020484:	432f      	orrs	r7, r5
90020486:	8007      	strh	r7, [r0, #0]
90020488:	3002      	adds	r0, #2
9002048a:	3402      	adds	r4, #2
9002048c:	e7ac      	b.n	900203e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9002048e:	f8b9 3000 	ldrh.w	r3, [r9]
90020492:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020496:	eba3 0308 	sub.w	r3, r3, r8
9002049a:	eba6 0608 	sub.w	r6, r6, r8
9002049e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900204a2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900204a6:	440e      	add	r6, r1
900204a8:	e797      	b.n	900203da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
900204aa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900204ae:	42a8      	cmp	r0, r5
900204b0:	d262      	bcs.n	90020578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900204b2:	9b00      	ldr	r3, [sp, #0]
900204b4:	4631      	mov	r1, r6
900204b6:	eb00 0b03 	add.w	fp, r0, r3
900204ba:	4558      	cmp	r0, fp
900204bc:	d24e      	bcs.n	9002055c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900204be:	f811 3b01 	ldrb.w	r3, [r1], #1
900204c2:	b12b      	cbz	r3, 900204d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900204c4:	2bff      	cmp	r3, #255	@ 0xff
900204c6:	f8b4 e000 	ldrh.w	lr, [r4]
900204ca:	d104      	bne.n	900204d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
900204cc:	f8a0 e000 	strh.w	lr, [r0]
900204d0:	3002      	adds	r0, #2
900204d2:	3402      	adds	r4, #2
900204d4:	e7f1      	b.n	900204ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
900204d6:	8802      	ldrh	r2, [r0, #0]
900204d8:	b29f      	uxth	r7, r3
900204da:	43db      	mvns	r3, r3
900204dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900204e0:	1216      	asrs	r6, r2, #8
900204e2:	b2db      	uxtb	r3, r3
900204e4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900204e8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900204ec:	ea4f 0ae2 	mov.w	sl, r2, asr #3
900204f0:	00d2      	lsls	r2, r2, #3
900204f2:	fb16 f603 	smulbb	r6, r6, r3
900204f6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
900204fa:	b2d2      	uxtb	r2, r2
900204fc:	fb0c 6c07 	mla	ip, ip, r7, r6
90020500:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020504:	fb1a fa03 	smulbb	sl, sl, r3
90020508:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002050c:	fa1f fc8c 	uxth.w	ip, ip
90020510:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020514:	fb12 f303 	smulbb	r3, r2, r3
90020518:	fa5f fe8e 	uxtb.w	lr, lr
9002051c:	fb06 a607 	mla	r6, r6, r7, sl
90020520:	f10c 0201 	add.w	r2, ip, #1
90020524:	fb0e 3307 	mla	r3, lr, r7, r3
90020528:	b2b6      	uxth	r6, r6
9002052a:	b29b      	uxth	r3, r3
9002052c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020530:	f106 0a01 	add.w	sl, r6, #1
90020534:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020538:	f103 0c01 	add.w	ip, r3, #1
9002053c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020540:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020544:	0976      	lsrs	r6, r6, #5
90020546:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002054a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002054e:	ea4c 0c02 	orr.w	ip, ip, r2
90020552:	ea4c 0c06 	orr.w	ip, ip, r6
90020556:	f8a0 c000 	strh.w	ip, [r0]
9002055a:	e7b9      	b.n	900204d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9002055c:	f8b9 3000 	ldrh.w	r3, [r9]
90020560:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020564:	eba3 0308 	sub.w	r3, r3, r8
90020568:	eba6 0608 	sub.w	r6, r6, r8
9002056c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020570:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020574:	440e      	add	r6, r1
90020576:	e79a      	b.n	900204ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020578:	4b03      	ldr	r3, [pc, #12]	@ (90020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002057a:	6818      	ldr	r0, [r3, #0]
9002057c:	6803      	ldr	r3, [r0, #0]
9002057e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020580:	4798      	blx	r3
90020582:	b007      	add	sp, #28
90020584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020588:	24021844 	.word	0x24021844
9002058c:	2402183e 	.word	0x2402183e

90020590 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020594:	b089      	sub	sp, #36	@ 0x24
90020596:	4607      	mov	r7, r0
90020598:	4688      	mov	r8, r1
9002059a:	4692      	mov	sl, r2
9002059c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
900205a0:	4699      	mov	r9, r3
900205a2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900205a4:	2e00      	cmp	r6, #0
900205a6:	d048      	beq.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900205a8:	4608      	mov	r0, r1
900205aa:	f7fa f813 	bl	9001a5d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
900205ae:	4605      	mov	r5, r0
900205b0:	4640      	mov	r0, r8
900205b2:	f7fa f843 	bl	9001a63c <_ZNK8touchgfx6Bitmap9getHeightEv>
900205b6:	f8ad 000e 	strh.w	r0, [sp, #14]
900205ba:	4640      	mov	r0, r8
900205bc:	f8ad a008 	strh.w	sl, [sp, #8]
900205c0:	f8ad 500c 	strh.w	r5, [sp, #12]
900205c4:	f8ad 900a 	strh.w	r9, [sp, #10]
900205c8:	f7fa f8f6 	bl	9001a7b8 <_ZNK8touchgfx6Bitmap7getDataEv>
900205cc:	4605      	mov	r5, r0
900205ce:	4640      	mov	r0, r8
900205d0:	f7fa f922 	bl	9001a818 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900205d4:	4682      	mov	sl, r0
900205d6:	4640      	mov	r0, r8
900205d8:	f7fa f972 	bl	9001a8c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
900205dc:	2810      	cmp	r0, #16
900205de:	d82c      	bhi.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900205e0:	e8df f010 	tbh	[pc, r0, lsl #1]
900205e4:	00ba00ca 	.word	0x00ba00ca
900205e8:	002b0011 	.word	0x002b0011
900205ec:	002b002b 	.word	0x002b002b
900205f0:	002b002b 	.word	0x002b002b
900205f4:	002b002b 	.word	0x002b002b
900205f8:	00c1002b 	.word	0x00c1002b
900205fc:	002b002b 	.word	0x002b002b
90020600:	002b0180 	.word	0x002b0180
90020604:	0173      	.short	0x0173
90020606:	4bbc      	ldr	r3, [pc, #752]	@ (900208f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90020608:	6818      	ldr	r0, [r3, #0]
9002060a:	6803      	ldr	r3, [r0, #0]
9002060c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002060e:	4798      	blx	r3
90020610:	2eff      	cmp	r6, #255	@ 0xff
90020612:	d101      	bne.n	90020618 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020614:	0683      	lsls	r3, r0, #26
90020616:	d506      	bpl.n	90020626 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90020618:	4633      	mov	r3, r6
9002061a:	4622      	mov	r2, r4
9002061c:	a902      	add	r1, sp, #8
9002061e:	4628      	mov	r0, r5
90020620:	f7ff f8fc 	bl	9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020624:	e009      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020626:	4640      	mov	r0, r8
90020628:	f7fa f88e 	bl	9001a748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002062c:	b940      	cbnz	r0, 90020640 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9002062e:	4623      	mov	r3, r4
90020630:	aa02      	add	r2, sp, #8
90020632:	4629      	mov	r1, r5
90020634:	4638      	mov	r0, r7
90020636:	f7ff f9d7 	bl	9001f9e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9002063a:	b009      	add	sp, #36	@ 0x24
9002063c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020640:	f10d 0918 	add.w	r9, sp, #24
90020644:	4641      	mov	r1, r8
90020646:	f10d 0810 	add.w	r8, sp, #16
9002064a:	4648      	mov	r0, r9
9002064c:	f7fa f82a 	bl	9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020650:	e899 0003 	ldmia.w	r9, {r0, r1}
90020654:	e888 0003 	stmia.w	r8, {r0, r1}
90020658:	4640      	mov	r0, r8
9002065a:	4621      	mov	r1, r4
9002065c:	f7f0 fc62 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
90020660:	4640      	mov	r0, r8
90020662:	f7f0 fca2 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
90020666:	2800      	cmp	r0, #0
90020668:	d1d6      	bne.n	90020618 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9002066a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002066e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020672:	4293      	cmp	r3, r2
90020674:	dd12      	ble.n	9002069c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90020676:	1a9b      	subs	r3, r3, r2
90020678:	f9b4 0000 	ldrsh.w	r0, [r4]
9002067c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020680:	f8ad 0018 	strh.w	r0, [sp, #24]
90020684:	4628      	mov	r0, r5
90020686:	f8ad 201a 	strh.w	r2, [sp, #26]
9002068a:	464a      	mov	r2, r9
9002068c:	f8ad 101c 	strh.w	r1, [sp, #28]
90020690:	a902      	add	r1, sp, #8
90020692:	f8ad 301e 	strh.w	r3, [sp, #30]
90020696:	4633      	mov	r3, r6
90020698:	f7ff f8c0 	bl	9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9002069c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900206a0:	f9b4 2000 	ldrsh.w	r2, [r4]
900206a4:	4293      	cmp	r3, r2
900206a6:	dd12      	ble.n	900206ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
900206a8:	1a9b      	subs	r3, r3, r2
900206aa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900206ae:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900206b2:	f8ad 2018 	strh.w	r2, [sp, #24]
900206b6:	464a      	mov	r2, r9
900206b8:	f8ad 001a 	strh.w	r0, [sp, #26]
900206bc:	4628      	mov	r0, r5
900206be:	f8ad 301c 	strh.w	r3, [sp, #28]
900206c2:	23ff      	movs	r3, #255	@ 0xff
900206c4:	f8ad 101e 	strh.w	r1, [sp, #30]
900206c8:	a902      	add	r1, sp, #8
900206ca:	f7ff f8a7 	bl	9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900206ce:	4643      	mov	r3, r8
900206d0:	aa02      	add	r2, sp, #8
900206d2:	4629      	mov	r1, r5
900206d4:	4638      	mov	r0, r7
900206d6:	f7ff f987 	bl	9001f9e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900206da:	88a2      	ldrh	r2, [r4, #4]
900206dc:	8823      	ldrh	r3, [r4, #0]
900206de:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900206e2:	4413      	add	r3, r2
900206e4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900206e8:	440a      	add	r2, r1
900206ea:	b29b      	uxth	r3, r3
900206ec:	b292      	uxth	r2, r2
900206ee:	b218      	sxth	r0, r3
900206f0:	b211      	sxth	r1, r2
900206f2:	4288      	cmp	r0, r1
900206f4:	dd12      	ble.n	9002071c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
900206f6:	1a9b      	subs	r3, r3, r2
900206f8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900206fc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90020700:	464a      	mov	r2, r9
90020702:	f8ad 1018 	strh.w	r1, [sp, #24]
90020706:	a902      	add	r1, sp, #8
90020708:	f8ad 301c 	strh.w	r3, [sp, #28]
9002070c:	23ff      	movs	r3, #255	@ 0xff
9002070e:	f8ad 001e 	strh.w	r0, [sp, #30]
90020712:	4628      	mov	r0, r5
90020714:	f8ad 601a 	strh.w	r6, [sp, #26]
90020718:	f7ff f880 	bl	9001f81c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9002071c:	88e2      	ldrh	r2, [r4, #6]
9002071e:	8863      	ldrh	r3, [r4, #2]
90020720:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020724:	4413      	add	r3, r2
90020726:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9002072a:	440a      	add	r2, r1
9002072c:	b29b      	uxth	r3, r3
9002072e:	b292      	uxth	r2, r2
90020730:	b218      	sxth	r0, r3
90020732:	b211      	sxth	r1, r2
90020734:	4288      	cmp	r0, r1
90020736:	dd80      	ble.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020738:	1a9b      	subs	r3, r3, r2
9002073a:	f9b4 6000 	ldrsh.w	r6, [r4]
9002073e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020742:	464a      	mov	r2, r9
90020744:	f8ad 301e 	strh.w	r3, [sp, #30]
90020748:	23ff      	movs	r3, #255	@ 0xff
9002074a:	f8ad 6018 	strh.w	r6, [sp, #24]
9002074e:	f8ad 101a 	strh.w	r1, [sp, #26]
90020752:	f8ad 001c 	strh.w	r0, [sp, #28]
90020756:	e761      	b.n	9002061c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90020758:	4633      	mov	r3, r6
9002075a:	4622      	mov	r2, r4
9002075c:	a902      	add	r1, sp, #8
9002075e:	4628      	mov	r0, r5
90020760:	f7ff f9b2 	bl	9001fac8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020764:	e769      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020766:	e9cd 4600 	strd	r4, r6, [sp]
9002076a:	ab02      	add	r3, sp, #8
9002076c:	4652      	mov	r2, sl
9002076e:	4629      	mov	r1, r5
90020770:	4638      	mov	r0, r7
90020772:	f7ff fd89 	bl	90020288 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020776:	e760      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020778:	4640      	mov	r0, r8
9002077a:	f7f9 ffe5 	bl	9001a748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002077e:	b948      	cbnz	r0, 90020794 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90020780:	683b      	ldr	r3, [r7, #0]
90020782:	aa02      	add	r2, sp, #8
90020784:	4629      	mov	r1, r5
90020786:	e9cd 6000 	strd	r6, r0, [sp]
9002078a:	4638      	mov	r0, r7
9002078c:	68de      	ldr	r6, [r3, #12]
9002078e:	4623      	mov	r3, r4
90020790:	47b0      	blx	r6
90020792:	e752      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020794:	f10d 0918 	add.w	r9, sp, #24
90020798:	4641      	mov	r1, r8
9002079a:	f10d 0810 	add.w	r8, sp, #16
9002079e:	4648      	mov	r0, r9
900207a0:	f7f9 ff80 	bl	9001a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900207a4:	e899 0003 	ldmia.w	r9, {r0, r1}
900207a8:	e888 0003 	stmia.w	r8, {r0, r1}
900207ac:	4640      	mov	r0, r8
900207ae:	4621      	mov	r1, r4
900207b0:	f7f0 fbb8 	bl	90010f24 <_ZN8touchgfx4RectaNERKS0_>
900207b4:	4640      	mov	r0, r8
900207b6:	f7f0 fbf8 	bl	90010faa <_ZNK8touchgfx4Rect7isEmptyEv>
900207ba:	b138      	cbz	r0, 900207cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
900207bc:	4623      	mov	r3, r4
900207be:	9600      	str	r6, [sp, #0]
900207c0:	aa02      	add	r2, sp, #8
900207c2:	4651      	mov	r1, sl
900207c4:	4628      	mov	r0, r5
900207c6:	f7ff fdbd 	bl	90020344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900207ca:	e736      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900207cc:	683b      	ldr	r3, [r7, #0]
900207ce:	aa02      	add	r2, sp, #8
900207d0:	4629      	mov	r1, r5
900207d2:	e9cd 6000 	strd	r6, r0, [sp]
900207d6:	4638      	mov	r0, r7
900207d8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
900207dc:	4643      	mov	r3, r8
900207de:	47d8      	blx	fp
900207e0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900207e4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900207e8:	4293      	cmp	r3, r2
900207ea:	dd13      	ble.n	90020814 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
900207ec:	f9b4 0000 	ldrsh.w	r0, [r4]
900207f0:	1a9b      	subs	r3, r3, r2
900207f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900207f6:	f8ad 0018 	strh.w	r0, [sp, #24]
900207fa:	4628      	mov	r0, r5
900207fc:	f8ad 201a 	strh.w	r2, [sp, #26]
90020800:	aa02      	add	r2, sp, #8
90020802:	f8ad 101c 	strh.w	r1, [sp, #28]
90020806:	4651      	mov	r1, sl
90020808:	f8ad 301e 	strh.w	r3, [sp, #30]
9002080c:	464b      	mov	r3, r9
9002080e:	9600      	str	r6, [sp, #0]
90020810:	f7ff fd98 	bl	90020344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020814:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020818:	f9b4 2000 	ldrsh.w	r2, [r4]
9002081c:	4293      	cmp	r3, r2
9002081e:	dd13      	ble.n	90020848 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90020820:	1a9b      	subs	r3, r3, r2
90020822:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020826:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002082a:	f8ad 2018 	strh.w	r2, [sp, #24]
9002082e:	aa02      	add	r2, sp, #8
90020830:	f8ad 001a 	strh.w	r0, [sp, #26]
90020834:	4628      	mov	r0, r5
90020836:	f8ad 301c 	strh.w	r3, [sp, #28]
9002083a:	464b      	mov	r3, r9
9002083c:	f8ad 101e 	strh.w	r1, [sp, #30]
90020840:	4651      	mov	r1, sl
90020842:	9600      	str	r6, [sp, #0]
90020844:	f7ff fd7e 	bl	90020344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020848:	88a2      	ldrh	r2, [r4, #4]
9002084a:	8823      	ldrh	r3, [r4, #0]
9002084c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020850:	4413      	add	r3, r2
90020852:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020856:	440a      	add	r2, r1
90020858:	b29b      	uxth	r3, r3
9002085a:	b292      	uxth	r2, r2
9002085c:	b218      	sxth	r0, r3
9002085e:	b211      	sxth	r1, r2
90020860:	4288      	cmp	r0, r1
90020862:	dd13      	ble.n	9002088c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90020864:	1a9b      	subs	r3, r3, r2
90020866:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9002086a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9002086e:	aa02      	add	r2, sp, #8
90020870:	f8ad 1018 	strh.w	r1, [sp, #24]
90020874:	4651      	mov	r1, sl
90020876:	f8ad 301c 	strh.w	r3, [sp, #28]
9002087a:	464b      	mov	r3, r9
9002087c:	f8ad 001e 	strh.w	r0, [sp, #30]
90020880:	4628      	mov	r0, r5
90020882:	9600      	str	r6, [sp, #0]
90020884:	f8ad 701a 	strh.w	r7, [sp, #26]
90020888:	f7ff fd5c 	bl	90020344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002088c:	88e2      	ldrh	r2, [r4, #6]
9002088e:	8863      	ldrh	r3, [r4, #2]
90020890:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020894:	4413      	add	r3, r2
90020896:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9002089a:	440a      	add	r2, r1
9002089c:	b29b      	uxth	r3, r3
9002089e:	b292      	uxth	r2, r2
900208a0:	b218      	sxth	r0, r3
900208a2:	b211      	sxth	r1, r2
900208a4:	4288      	cmp	r0, r1
900208a6:	f77f aec8 	ble.w	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900208aa:	f9b4 7000 	ldrsh.w	r7, [r4]
900208ae:	1a9b      	subs	r3, r3, r2
900208b0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900208b4:	f8ad 301e 	strh.w	r3, [sp, #30]
900208b8:	464b      	mov	r3, r9
900208ba:	f8ad 7018 	strh.w	r7, [sp, #24]
900208be:	f8ad 101a 	strh.w	r1, [sp, #26]
900208c2:	f8ad 001c 	strh.w	r0, [sp, #28]
900208c6:	9600      	str	r6, [sp, #0]
900208c8:	e77a      	b.n	900207c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
900208ca:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900208ce:	2800      	cmp	r0, #0
900208d0:	f43f aeb3 	beq.w	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900208d4:	6803      	ldr	r3, [r0, #0]
900208d6:	9600      	str	r6, [sp, #0]
900208d8:	68de      	ldr	r6, [r3, #12]
900208da:	4623      	mov	r3, r4
900208dc:	aa02      	add	r2, sp, #8
900208de:	4629      	mov	r1, r5
900208e0:	47b0      	blx	r6
900208e2:	e6aa      	b.n	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900208e4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900208e8:	2800      	cmp	r0, #0
900208ea:	f43f aea6 	beq.w	9002063a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900208ee:	6803      	ldr	r3, [r0, #0]
900208f0:	9600      	str	r6, [sp, #0]
900208f2:	689e      	ldr	r6, [r3, #8]
900208f4:	e7f1      	b.n	900208da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
900208f6:	bf00      	nop
900208f8:	24021844 	.word	0x24021844

900208fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
900208fc:	b180      	cbz	r0, 90020920 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
900208fe:	2903      	cmp	r1, #3
90020900:	d81c      	bhi.n	9002093c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020902:	e8df f001 	tbb	[pc, r1]
90020906:	1d02      	.short	0x1d02
90020908:	1f08      	.short	0x1f08
9002090a:	4b10      	ldr	r3, [pc, #64]	@ (9002094c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9002090c:	8818      	ldrh	r0, [r3, #0]
9002090e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020912:	4240      	negs	r0, r0
90020914:	4770      	bx	lr
90020916:	4b0d      	ldr	r3, [pc, #52]	@ (9002094c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020918:	8818      	ldrh	r0, [r3, #0]
9002091a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002091e:	4770      	bx	lr
90020920:	2903      	cmp	r1, #3
90020922:	d80b      	bhi.n	9002093c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020924:	a301      	add	r3, pc, #4	@ (adr r3, 9002092c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020926:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002092a:	bf00      	nop
9002092c:	90020941 	.word	0x90020941
90020930:	90020917 	.word	0x90020917
90020934:	90020945 	.word	0x90020945
90020938:	9002090b 	.word	0x9002090b
9002093c:	2000      	movs	r0, #0
9002093e:	4770      	bx	lr
90020940:	2001      	movs	r0, #1
90020942:	4770      	bx	lr
90020944:	f04f 30ff 	mov.w	r0, #4294967295
90020948:	4770      	bx	lr
9002094a:	bf00      	nop
9002094c:	2402183e 	.word	0x2402183e

90020950 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020950:	b180      	cbz	r0, 90020974 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020952:	2903      	cmp	r1, #3
90020954:	d81c      	bhi.n	90020990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020956:	e8df f001 	tbb	[pc, r1]
9002095a:	021d      	.short	0x021d
9002095c:	071f      	.short	0x071f
9002095e:	4b10      	ldr	r3, [pc, #64]	@ (900209a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020960:	8818      	ldrh	r0, [r3, #0]
90020962:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020966:	4770      	bx	lr
90020968:	4b0d      	ldr	r3, [pc, #52]	@ (900209a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9002096a:	8818      	ldrh	r0, [r3, #0]
9002096c:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020970:	4240      	negs	r0, r0
90020972:	4770      	bx	lr
90020974:	2903      	cmp	r1, #3
90020976:	d80b      	bhi.n	90020990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020978:	a301      	add	r3, pc, #4	@ (adr r3, 90020980 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9002097a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002097e:	bf00      	nop
90020980:	9002095f 	.word	0x9002095f
90020984:	90020999 	.word	0x90020999
90020988:	90020969 	.word	0x90020969
9002098c:	90020995 	.word	0x90020995
90020990:	2000      	movs	r0, #0
90020992:	4770      	bx	lr
90020994:	2001      	movs	r0, #1
90020996:	4770      	bx	lr
90020998:	f04f 30ff 	mov.w	r0, #4294967295
9002099c:	4770      	bx	lr
9002099e:	bf00      	nop
900209a0:	2402183e 	.word	0x2402183e

900209a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900209a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900209a8:	b099      	sub	sp, #100	@ 0x64
900209aa:	910d      	str	r1, [sp, #52]	@ 0x34
900209ac:	a914      	add	r1, sp, #80	@ 0x50
900209ae:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900209b2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900209b6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900209ba:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
900209bc:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
900209c0:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900209c4:	e881 000c 	stmia.w	r1, {r2, r3}
900209c8:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900209cc:	930b      	str	r3, [sp, #44]	@ 0x2c
900209ce:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900209d2:	9310      	str	r3, [sp, #64]	@ 0x40
900209d4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
900209d8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900209dc:	9308      	str	r3, [sp, #32]
900209de:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
900209e2:	9309      	str	r3, [sp, #36]	@ 0x24
900209e4:	7b4b      	ldrb	r3, [r1, #13]
900209e6:	ea4f 1843 	mov.w	r8, r3, lsl #5
900209ea:	f408 7080 	and.w	r0, r8, #256	@ 0x100
900209ee:	f891 8006 	ldrb.w	r8, [r1, #6]
900209f2:	ea58 0800 	orrs.w	r8, r8, r0
900209f6:	f000 81d0 	beq.w	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900209fa:	011b      	lsls	r3, r3, #4
900209fc:	79c8      	ldrb	r0, [r1, #7]
900209fe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90020a02:	4303      	orrs	r3, r0
90020a04:	930c      	str	r3, [sp, #48]	@ 0x30
90020a06:	f000 81c8 	beq.w	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020a0a:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020a0e:	b29b      	uxth	r3, r3
90020a10:	2d00      	cmp	r5, #0
90020a12:	f000 812d 	beq.w	90020c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
90020a16:	1aed      	subs	r5, r5, r3
90020a18:	b2ad      	uxth	r5, r5
90020a1a:	0429      	lsls	r1, r5, #16
90020a1c:	d502      	bpl.n	90020a24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
90020a1e:	1b64      	subs	r4, r4, r5
90020a20:	2500      	movs	r5, #0
90020a22:	b224      	sxth	r4, r4
90020a24:	f9b2 0000 	ldrsh.w	r0, [r2]
90020a28:	8891      	ldrh	r1, [r2, #4]
90020a2a:	4284      	cmp	r4, r0
90020a2c:	b283      	uxth	r3, r0
90020a2e:	bfb8      	it	lt
90020a30:	18ed      	addlt	r5, r5, r3
90020a32:	440b      	add	r3, r1
90020a34:	b21b      	sxth	r3, r3
90020a36:	bfb8      	it	lt
90020a38:	1b2c      	sublt	r4, r5, r4
90020a3a:	930a      	str	r3, [sp, #40]	@ 0x28
90020a3c:	bfb8      	it	lt
90020a3e:	b2a5      	uxthlt	r5, r4
90020a40:	88d3      	ldrh	r3, [r2, #6]
90020a42:	bfb8      	it	lt
90020a44:	4604      	movlt	r4, r0
90020a46:	8852      	ldrh	r2, [r2, #2]
90020a48:	a814      	add	r0, sp, #80	@ 0x50
90020a4a:	4621      	mov	r1, r4
90020a4c:	4413      	add	r3, r2
90020a4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020a50:	b21b      	sxth	r3, r3
90020a52:	930f      	str	r3, [sp, #60]	@ 0x3c
90020a54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020a56:	930e      	str	r3, [sp, #56]	@ 0x38
90020a58:	4bb2      	ldr	r3, [pc, #712]	@ (90020d24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
90020a5a:	f893 b000 	ldrb.w	fp, [r3]
90020a5e:	4653      	mov	r3, sl
90020a60:	f7f6 f857 	bl	90016b12 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020a64:	4621      	mov	r1, r4
90020a66:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90020a6a:	4653      	mov	r3, sl
90020a6c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020a6e:	a814      	add	r0, sp, #80	@ 0x50
90020a70:	f7f6 f86c 	bl	90016b4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020a74:	a918      	add	r1, sp, #96	@ 0x60
90020a76:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020a7a:	a817      	add	r0, sp, #92	@ 0x5c
90020a7c:	f7f6 f992 	bl	90016da4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020a80:	f1ba 0f00 	cmp.w	sl, #0
90020a84:	f040 80f7 	bne.w	90020c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
90020a88:	f1bb 0f01 	cmp.w	fp, #1
90020a8c:	f040 80fb 	bne.w	90020c86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
90020a90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a92:	2b00      	cmp	r3, #0
90020a94:	f040 81a9 	bne.w	90020dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
90020a98:	fa1f f288 	uxth.w	r2, r8
90020a9c:	b905      	cbnz	r5, 90020aa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020a9e:	b15e      	cbz	r6, 90020ab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
90020aa0:	fb06 5302 	mla	r3, r6, r2, r5
90020aa4:	9808      	ldr	r0, [sp, #32]
90020aa6:	4631      	mov	r1, r6
90020aa8:	4343      	muls	r3, r0
90020aaa:	f003 0607 	and.w	r6, r3, #7
90020aae:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
90020ab2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020ab4:	1a5b      	subs	r3, r3, r1
90020ab6:	930e      	str	r3, [sp, #56]	@ 0x38
90020ab8:	f10b 31ff 	add.w	r1, fp, #4294967295
90020abc:	424b      	negs	r3, r1
90020abe:	414b      	adcs	r3, r1
90020ac0:	4651      	mov	r1, sl
90020ac2:	4618      	mov	r0, r3
90020ac4:	930c      	str	r3, [sp, #48]	@ 0x30
90020ac6:	f7ff ff19 	bl	900208fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90020aca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020acc:	4683      	mov	fp, r0
90020ace:	4618      	mov	r0, r3
90020ad0:	f7ff ff3e 	bl	90020950 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020ad4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020ad6:	4603      	mov	r3, r0
90020ad8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020ada:	eba1 0a00 	sub.w	sl, r1, r0
90020ade:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020ae0:	458a      	cmp	sl, r1
90020ae2:	bfa8      	it	ge
90020ae4:	468a      	movge	sl, r1
90020ae6:	f1ba 0f00 	cmp.w	sl, #0
90020aea:	f340 8156 	ble.w	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020aee:	1b64      	subs	r4, r4, r5
90020af0:	990a      	ldr	r1, [sp, #40]	@ 0x28
90020af2:	1b0c      	subs	r4, r1, r4
90020af4:	4544      	cmp	r4, r8
90020af6:	bfd4      	ite	le
90020af8:	ebc5 0504 	rsble	r5, r5, r4
90020afc:	ebc5 0508 	rsbgt	r5, r5, r8
90020b00:	2d00      	cmp	r5, #0
90020b02:	f340 814a 	ble.w	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020b06:	1b52      	subs	r2, r2, r5
90020b08:	9908      	ldr	r1, [sp, #32]
90020b0a:	434a      	muls	r2, r1
90020b0c:	920e      	str	r2, [sp, #56]	@ 0x38
90020b0e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90020b10:	2a00      	cmp	r2, #0
90020b12:	f040 8176 	bne.w	90020e02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
90020b16:	4a84      	ldr	r2, [pc, #528]	@ (90020d28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90020b18:	930a      	str	r3, [sp, #40]	@ 0x28
90020b1a:	6810      	ldr	r0, [r2, #0]
90020b1c:	6802      	ldr	r2, [r0, #0]
90020b1e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90020b20:	4790      	blx	r2
90020b22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020b24:	9908      	ldr	r1, [sp, #32]
90020b26:	2201      	movs	r2, #1
90020b28:	408a      	lsls	r2, r1
90020b2a:	4980      	ldr	r1, [pc, #512]	@ (90020d2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90020b2c:	3a01      	subs	r2, #1
90020b2e:	880c      	ldrh	r4, [r1, #0]
90020b30:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
90020b34:	b2d2      	uxtb	r2, r2
90020b36:	920c      	str	r2, [sp, #48]	@ 0x30
90020b38:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90020b3c:	fb04 1202 	mla	r2, r4, r2, r1
90020b40:	ea4f 2419 	mov.w	r4, r9, lsr #8
90020b44:	ea4f 1159 	mov.w	r1, r9, lsr #5
90020b48:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020b4c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020b50:	920a      	str	r2, [sp, #40]	@ 0x28
90020b52:	f3c9 4207 	ubfx	r2, r9, #16, #8
90020b56:	9212      	str	r2, [sp, #72]	@ 0x48
90020b58:	b2e2      	uxtb	r2, r4
90020b5a:	9211      	str	r2, [sp, #68]	@ 0x44
90020b5c:	fa5f f289 	uxtb.w	r2, r9
90020b60:	f3c9 09c4 	ubfx	r9, r9, #3, #5
90020b64:	9210      	str	r2, [sp, #64]	@ 0x40
90020b66:	4a72      	ldr	r2, [pc, #456]	@ (90020d30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
90020b68:	4022      	ands	r2, r4
90020b6a:	430a      	orrs	r2, r1
90020b6c:	ea4f 014b 	mov.w	r1, fp, lsl #1
90020b70:	fb05 3b1b 	mls	fp, r5, fp, r3
90020b74:	ea42 0209 	orr.w	r2, r2, r9
90020b78:	460b      	mov	r3, r1
90020b7a:	910b      	str	r1, [sp, #44]	@ 0x2c
90020b7c:	b292      	uxth	r2, r2
90020b7e:	436b      	muls	r3, r5
90020b80:	920f      	str	r2, [sp, #60]	@ 0x3c
90020b82:	eb03 034b 	add.w	r3, r3, fp, lsl #1
90020b86:	783a      	ldrb	r2, [r7, #0]
90020b88:	9313      	str	r3, [sp, #76]	@ 0x4c
90020b8a:	4132      	asrs	r2, r6
90020b8c:	b2d2      	uxtb	r2, r2
90020b8e:	f11a 3aff 	adds.w	sl, sl, #4294967295
90020b92:	f0c0 814a 	bcc.w	90020e2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
90020b96:	46a9      	mov	r9, r5
90020b98:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90020b9c:	f119 39ff 	adds.w	r9, r9, #4294967295
90020ba0:	f0c0 8133 	bcc.w	90020e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
90020ba4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020ba6:	4013      	ands	r3, r2
90020ba8:	d054      	beq.n	90020c54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
90020baa:	20ff      	movs	r0, #255	@ 0xff
90020bac:	990c      	ldr	r1, [sp, #48]	@ 0x30
90020bae:	fb90 f1f1 	sdiv	r1, r0, r1
90020bb2:	434b      	muls	r3, r1
90020bb4:	2bfe      	cmp	r3, #254	@ 0xfe
90020bb6:	dd03      	ble.n	90020bc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
90020bb8:	9909      	ldr	r1, [sp, #36]	@ 0x24
90020bba:	4281      	cmp	r1, r0
90020bbc:	f000 8123 	beq.w	90020e06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
90020bc0:	9909      	ldr	r1, [sp, #36]	@ 0x24
90020bc2:	f8b8 4000 	ldrh.w	r4, [r8]
90020bc6:	fb11 f303 	smulbb	r3, r1, r3
90020bca:	9812      	ldr	r0, [sp, #72]	@ 0x48
90020bcc:	ea4f 0ce4 	mov.w	ip, r4, asr #3
90020bd0:	b29b      	uxth	r3, r3
90020bd2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020bd6:	1c59      	adds	r1, r3, #1
90020bd8:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
90020bdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90020be0:	1221      	asrs	r1, r4, #8
90020be2:	f3c3 2307 	ubfx	r3, r3, #8, #8
90020be6:	00e4      	lsls	r4, r4, #3
90020be8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020bec:	fa1f fe83 	uxth.w	lr, r3
90020bf0:	43db      	mvns	r3, r3
90020bf2:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020bf6:	fb10 fb0e 	smulbb	fp, r0, lr
90020bfa:	b2db      	uxtb	r3, r3
90020bfc:	9811      	ldr	r0, [sp, #68]	@ 0x44
90020bfe:	b2e4      	uxtb	r4, r4
90020c00:	fb01 b103 	mla	r1, r1, r3, fp
90020c04:	fb10 fb0e 	smulbb	fp, r0, lr
90020c08:	9810      	ldr	r0, [sp, #64]	@ 0x40
90020c0a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020c0e:	fb10 fe0e 	smulbb	lr, r0, lr
90020c12:	b289      	uxth	r1, r1
90020c14:	fb0c bc03 	mla	ip, ip, r3, fp
90020c18:	fb04 e403 	mla	r4, r4, r3, lr
90020c1c:	1c4b      	adds	r3, r1, #1
90020c1e:	fa1f fc8c 	uxth.w	ip, ip
90020c22:	b2a4      	uxth	r4, r4
90020c24:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90020c28:	f104 0b01 	add.w	fp, r4, #1
90020c2c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020c30:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
90020c34:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90020c38:	ea4b 0101 	orr.w	r1, fp, r1
90020c3c:	f10c 0b01 	add.w	fp, ip, #1
90020c40:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
90020c44:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90020c48:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020c4c:	ea41 010b 	orr.w	r1, r1, fp
90020c50:	f8a8 1000 	strh.w	r1, [r8]
90020c54:	9b08      	ldr	r3, [sp, #32]
90020c56:	441e      	add	r6, r3
90020c58:	b2b6      	uxth	r6, r6
90020c5a:	2e07      	cmp	r6, #7
90020c5c:	bf98      	it	ls
90020c5e:	411a      	asrls	r2, r3
90020c60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020c62:	bf85      	ittet	hi
90020c64:	787a      	ldrbhi	r2, [r7, #1]
90020c66:	2600      	movhi	r6, #0
90020c68:	b2d2      	uxtbls	r2, r2
90020c6a:	3701      	addhi	r7, #1
90020c6c:	4498      	add	r8, r3
90020c6e:	e795      	b.n	90020b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
90020c70:	441c      	add	r4, r3
90020c72:	b224      	sxth	r4, r4
90020c74:	e6d6      	b.n	90020a24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
90020c76:	f1ba 0f01 	cmp.w	sl, #1
90020c7a:	f47f af09 	bne.w	90020a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020c7e:	f1bb 0f01 	cmp.w	fp, #1
90020c82:	f47f af05 	bne.w	90020a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020c86:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90020c88:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020c8a:	1a99      	subs	r1, r3, r2
90020c8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020c8e:	1b9b      	subs	r3, r3, r6
90020c90:	4299      	cmp	r1, r3
90020c92:	bfa8      	it	ge
90020c94:	4619      	movge	r1, r3
90020c96:	2900      	cmp	r1, #0
90020c98:	9112      	str	r1, [sp, #72]	@ 0x48
90020c9a:	dd7e      	ble.n	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020c9c:	4a22      	ldr	r2, [pc, #136]	@ (90020d28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90020c9e:	6810      	ldr	r0, [r2, #0]
90020ca0:	9211      	str	r2, [sp, #68]	@ 0x44
90020ca2:	6803      	ldr	r3, [r0, #0]
90020ca4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020ca6:	4798      	blx	r3
90020ca8:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
90020cac:	9912      	ldr	r1, [sp, #72]	@ 0x48
90020cae:	d006      	beq.n	90020cbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
90020cb0:	9b08      	ldr	r3, [sp, #32]
90020cb2:	2b04      	cmp	r3, #4
90020cb4:	d133      	bne.n	90020d1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
90020cb6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020cb8:	3300      	adds	r3, #0
90020cba:	bf18      	it	ne
90020cbc:	2301      	movne	r3, #1
90020cbe:	0582      	lsls	r2, r0, #22
90020cc0:	fa1f fc88 	uxth.w	ip, r8
90020cc4:	f140 80ba 	bpl.w	90020e3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90020cc8:	9808      	ldr	r0, [sp, #32]
90020cca:	2808      	cmp	r0, #8
90020ccc:	f040 80b6 	bne.w	90020e3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90020cd0:	2b00      	cmp	r3, #0
90020cd2:	d065      	beq.n	90020da0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
90020cd4:	f10c 0c01 	add.w	ip, ip, #1
90020cd8:	f02c 0301 	bic.w	r3, ip, #1
90020cdc:	b29b      	uxth	r3, r3
90020cde:	bb4d      	cbnz	r5, 90020d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90020ce0:	eb08 0004 	add.w	r0, r8, r4
90020ce4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020ce6:	4290      	cmp	r0, r2
90020ce8:	dc24      	bgt.n	90020d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90020cea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020cec:	b289      	uxth	r1, r1
90020cee:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
90020cf2:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90020cf6:	6810      	ldr	r0, [r2, #0]
90020cf8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020cfc:	6804      	ldr	r4, [r0, #0]
90020cfe:	9506      	str	r5, [sp, #24]
90020d00:	f44f 7580 	mov.w	r5, #256	@ 0x100
90020d04:	9302      	str	r3, [sp, #8]
90020d06:	9505      	str	r5, [sp, #20]
90020d08:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90020d0a:	e9cd 3100 	strd	r3, r1, [sp]
90020d0e:	e9cd 9503 	strd	r9, r5, [sp, #12]
90020d12:	4673      	mov	r3, lr
90020d14:	6da4      	ldr	r4, [r4, #88]	@ 0x58
90020d16:	fb06 710c 	mla	r1, r6, ip, r7
90020d1a:	47a0      	blx	r4
90020d1c:	e03d      	b.n	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020d1e:	2300      	movs	r3, #0
90020d20:	e7cd      	b.n	90020cbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
90020d22:	bf00      	nop
90020d24:	2402183c 	.word	0x2402183c
90020d28:	24021844 	.word	0x24021844
90020d2c:	2402183e 	.word	0x2402183e
90020d30:	00fff800 	.word	0x00fff800
90020d34:	eba4 0e05 	sub.w	lr, r4, r5
90020d38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020d3a:	eba2 0e0e 	sub.w	lr, r2, lr
90020d3e:	45c6      	cmp	lr, r8
90020d40:	bfd4      	ite	le
90020d42:	ebc5 0e0e 	rsble	lr, r5, lr
90020d46:	ebc5 0e08 	rsbgt	lr, r5, r8
90020d4a:	f1be 0f00 	cmp.w	lr, #0
90020d4e:	d024      	beq.n	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020d50:	07e8      	lsls	r0, r5, #31
90020d52:	f53f ae9d 	bmi.w	90020a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020d56:	f01e 0001 	ands.w	r0, lr, #1
90020d5a:	f47f ae99 	bne.w	90020a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020d5e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020d60:	086d      	lsrs	r5, r5, #1
90020d62:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90020d66:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
90020d6a:	6814      	ldr	r4, [r2, #0]
90020d6c:	b289      	uxth	r1, r1
90020d6e:	fb06 560c 	mla	r6, r6, ip, r5
90020d72:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020d76:	6825      	ldr	r5, [r4, #0]
90020d78:	9006      	str	r0, [sp, #24]
90020d7a:	f44f 7080 	mov.w	r0, #256	@ 0x100
90020d7e:	9302      	str	r3, [sp, #8]
90020d80:	fa1f f38e 	uxth.w	r3, lr
90020d84:	9005      	str	r0, [sp, #20]
90020d86:	9809      	ldr	r0, [sp, #36]	@ 0x24
90020d88:	9101      	str	r1, [sp, #4]
90020d8a:	19b9      	adds	r1, r7, r6
90020d8c:	9300      	str	r3, [sp, #0]
90020d8e:	4643      	mov	r3, r8
90020d90:	e9cd 9003 	strd	r9, r0, [sp, #12]
90020d94:	4620      	mov	r0, r4
90020d96:	6dad      	ldr	r5, [r5, #88]	@ 0x58
90020d98:	47a8      	blx	r5
90020d9a:	b019      	add	sp, #100	@ 0x64
90020d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020da0:	4a28      	ldr	r2, [pc, #160]	@ (90020e44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
90020da2:	1b64      	subs	r4, r4, r5
90020da4:	fb06 5608 	mla	r6, r6, r8, r5
90020da8:	b289      	uxth	r1, r1
90020daa:	6810      	ldr	r0, [r2, #0]
90020dac:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
90020db0:	f8d0 a000 	ldr.w	sl, [r0]
90020db4:	9306      	str	r3, [sp, #24]
90020db6:	f44f 7300 	mov.w	r3, #512	@ 0x200
90020dba:	9101      	str	r1, [sp, #4]
90020dbc:	19b9      	adds	r1, r7, r6
90020dbe:	9305      	str	r3, [sp, #20]
90020dc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020dc2:	f8cd c008 	str.w	ip, [sp, #8]
90020dc6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020dca:	e9cd 9303 	strd	r9, r3, [sp, #12]
90020dce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020dd0:	1b1c      	subs	r4, r3, r4
90020dd2:	4673      	mov	r3, lr
90020dd4:	4544      	cmp	r4, r8
90020dd6:	bfd4      	ite	le
90020dd8:	ebc5 0504 	rsble	r5, r5, r4
90020ddc:	ebc5 0508 	rsbgt	r5, r5, r8
90020de0:	b2ad      	uxth	r5, r5
90020de2:	9500      	str	r5, [sp, #0]
90020de4:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
90020de8:	e797      	b.n	90020d1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020dea:	2208      	movs	r2, #8
90020dec:	9b08      	ldr	r3, [sp, #32]
90020dee:	fb92 f3f3 	sdiv	r3, r2, r3
90020df2:	1e5a      	subs	r2, r3, #1
90020df4:	4442      	add	r2, r8
90020df6:	fb92 f2f3 	sdiv	r2, r2, r3
90020dfa:	fb12 f203 	smulbb	r2, r2, r3
90020dfe:	b292      	uxth	r2, r2
90020e00:	e64c      	b.n	90020a9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90020e02:	980d      	ldr	r0, [sp, #52]	@ 0x34
90020e04:	e68e      	b.n	90020b24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
90020e06:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020e08:	e722      	b.n	90020c50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
90020e0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020e0c:	b143      	cbz	r3, 90020e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
90020e0e:	441e      	add	r6, r3
90020e10:	b2b6      	uxth	r6, r6
90020e12:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
90020e16:	f006 0607 	and.w	r6, r6, #7
90020e1a:	783a      	ldrb	r2, [r7, #0]
90020e1c:	4132      	asrs	r2, r6
90020e1e:	b2d2      	uxtb	r2, r2
90020e20:	990a      	ldr	r1, [sp, #40]	@ 0x28
90020e22:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90020e24:	4419      	add	r1, r3
90020e26:	910a      	str	r1, [sp, #40]	@ 0x28
90020e28:	e6b1      	b.n	90020b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
90020e2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020e2c:	2b00      	cmp	r3, #0
90020e2e:	d1b4      	bne.n	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020e30:	4b04      	ldr	r3, [pc, #16]	@ (90020e44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
90020e32:	6818      	ldr	r0, [r3, #0]
90020e34:	6803      	ldr	r3, [r0, #0]
90020e36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020e38:	4798      	blx	r3
90020e3a:	e7ae      	b.n	90020d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020e3c:	2b00      	cmp	r3, #0
90020e3e:	f47f af49 	bne.w	90020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
90020e42:	e625      	b.n	90020a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020e44:	24021844 	.word	0x24021844

90020e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90020e48:	b538      	push	{r3, r4, r5, lr}
90020e4a:	4c15      	ldr	r4, [pc, #84]	@ (90020ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90020e4c:	4605      	mov	r5, r0
90020e4e:	7823      	ldrb	r3, [r4, #0]
90020e50:	f3bf 8f5b 	dmb	ish
90020e54:	07da      	lsls	r2, r3, #31
90020e56:	d40b      	bmi.n	90020e70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020e58:	4620      	mov	r0, r4
90020e5a:	f008 fc6b 	bl	90029734 <__cxa_guard_acquire>
90020e5e:	b138      	cbz	r0, 90020e70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020e60:	4620      	mov	r0, r4
90020e62:	f008 fc73 	bl	9002974c <__cxa_guard_release>
90020e66:	4a0f      	ldr	r2, [pc, #60]	@ (90020ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020e68:	490f      	ldr	r1, [pc, #60]	@ (90020ea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90020e6a:	4810      	ldr	r0, [pc, #64]	@ (90020eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020e6c:	f008 fc5b 	bl	90029726 <__aeabi_atexit>
90020e70:	4c0f      	ldr	r4, [pc, #60]	@ (90020eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90020e72:	7823      	ldrb	r3, [r4, #0]
90020e74:	f3bf 8f5b 	dmb	ish
90020e78:	07db      	lsls	r3, r3, #31
90020e7a:	d40b      	bmi.n	90020e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020e7c:	4620      	mov	r0, r4
90020e7e:	f008 fc59 	bl	90029734 <__cxa_guard_acquire>
90020e82:	b138      	cbz	r0, 90020e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020e84:	4620      	mov	r0, r4
90020e86:	f008 fc61 	bl	9002974c <__cxa_guard_release>
90020e8a:	4a06      	ldr	r2, [pc, #24]	@ (90020ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020e8c:	4909      	ldr	r1, [pc, #36]	@ (90020eb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90020e8e:	480a      	ldr	r0, [pc, #40]	@ (90020eb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020e90:	f008 fc49 	bl	90029726 <__aeabi_atexit>
90020e94:	4b05      	ldr	r3, [pc, #20]	@ (90020eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020e96:	616b      	str	r3, [r5, #20]
90020e98:	4b07      	ldr	r3, [pc, #28]	@ (90020eb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020e9a:	61ab      	str	r3, [r5, #24]
90020e9c:	bd38      	pop	{r3, r4, r5, pc}
90020e9e:	bf00      	nop
90020ea0:	24021928 	.word	0x24021928
90020ea4:	24000000 	.word	0x24000000
90020ea8:	9001cf35 	.word	0x9001cf35
90020eac:	240000d4 	.word	0x240000d4
90020eb0:	2402192c 	.word	0x2402192c
90020eb4:	9001cf33 	.word	0x9001cf33
90020eb8:	240000d8 	.word	0x240000d8

90020ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90020ebc:	b538      	push	{r3, r4, r5, lr}
90020ebe:	4c15      	ldr	r4, [pc, #84]	@ (90020f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90020ec0:	4605      	mov	r5, r0
90020ec2:	7823      	ldrb	r3, [r4, #0]
90020ec4:	f3bf 8f5b 	dmb	ish
90020ec8:	07da      	lsls	r2, r3, #31
90020eca:	d40b      	bmi.n	90020ee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020ecc:	4620      	mov	r0, r4
90020ece:	f008 fc31 	bl	90029734 <__cxa_guard_acquire>
90020ed2:	b138      	cbz	r0, 90020ee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020ed4:	4620      	mov	r0, r4
90020ed6:	f008 fc39 	bl	9002974c <__cxa_guard_release>
90020eda:	4a0f      	ldr	r2, [pc, #60]	@ (90020f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020edc:	490f      	ldr	r1, [pc, #60]	@ (90020f1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90020ede:	4810      	ldr	r0, [pc, #64]	@ (90020f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020ee0:	f008 fc21 	bl	90029726 <__aeabi_atexit>
90020ee4:	4c0f      	ldr	r4, [pc, #60]	@ (90020f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90020ee6:	7823      	ldrb	r3, [r4, #0]
90020ee8:	f3bf 8f5b 	dmb	ish
90020eec:	07db      	lsls	r3, r3, #31
90020eee:	d40b      	bmi.n	90020f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020ef0:	4620      	mov	r0, r4
90020ef2:	f008 fc1f 	bl	90029734 <__cxa_guard_acquire>
90020ef6:	b138      	cbz	r0, 90020f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020ef8:	4620      	mov	r0, r4
90020efa:	f008 fc27 	bl	9002974c <__cxa_guard_release>
90020efe:	4a06      	ldr	r2, [pc, #24]	@ (90020f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020f00:	4909      	ldr	r1, [pc, #36]	@ (90020f28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90020f02:	480a      	ldr	r0, [pc, #40]	@ (90020f2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020f04:	f008 fc0f 	bl	90029726 <__aeabi_atexit>
90020f08:	4b05      	ldr	r3, [pc, #20]	@ (90020f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020f0a:	60eb      	str	r3, [r5, #12]
90020f0c:	4b07      	ldr	r3, [pc, #28]	@ (90020f2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020f0e:	612b      	str	r3, [r5, #16]
90020f10:	bd38      	pop	{r3, r4, r5, pc}
90020f12:	bf00      	nop
90020f14:	24021900 	.word	0x24021900
90020f18:	24000000 	.word	0x24000000
90020f1c:	9001cf39 	.word	0x9001cf39
90020f20:	240000ac 	.word	0x240000ac
90020f24:	24021904 	.word	0x24021904
90020f28:	9001cf37 	.word	0x9001cf37
90020f2c:	240000b0 	.word	0x240000b0

90020f30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90020f30:	b510      	push	{r4, lr}
90020f32:	4604      	mov	r4, r0
90020f34:	f7ff ff88 	bl	90020e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90020f38:	4620      	mov	r0, r4
90020f3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020f3e:	f7ff bfbd 	b.w	90020ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90020f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90020f44:	b538      	push	{r3, r4, r5, lr}
90020f46:	4c15      	ldr	r4, [pc, #84]	@ (90020f9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90020f48:	4605      	mov	r5, r0
90020f4a:	7823      	ldrb	r3, [r4, #0]
90020f4c:	f3bf 8f5b 	dmb	ish
90020f50:	07da      	lsls	r2, r3, #31
90020f52:	d40b      	bmi.n	90020f6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020f54:	4620      	mov	r0, r4
90020f56:	f008 fbed 	bl	90029734 <__cxa_guard_acquire>
90020f5a:	b138      	cbz	r0, 90020f6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020f5c:	4620      	mov	r0, r4
90020f5e:	f008 fbf5 	bl	9002974c <__cxa_guard_release>
90020f62:	4a0f      	ldr	r2, [pc, #60]	@ (90020fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90020f64:	490f      	ldr	r1, [pc, #60]	@ (90020fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90020f66:	4810      	ldr	r0, [pc, #64]	@ (90020fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90020f68:	f008 fbdd 	bl	90029726 <__aeabi_atexit>
90020f6c:	4c0f      	ldr	r4, [pc, #60]	@ (90020fac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90020f6e:	7823      	ldrb	r3, [r4, #0]
90020f70:	f3bf 8f5b 	dmb	ish
90020f74:	07db      	lsls	r3, r3, #31
90020f76:	d40b      	bmi.n	90020f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90020f78:	4620      	mov	r0, r4
90020f7a:	f008 fbdb 	bl	90029734 <__cxa_guard_acquire>
90020f7e:	b138      	cbz	r0, 90020f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90020f80:	4620      	mov	r0, r4
90020f82:	f008 fbe3 	bl	9002974c <__cxa_guard_release>
90020f86:	4a06      	ldr	r2, [pc, #24]	@ (90020fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90020f88:	4909      	ldr	r1, [pc, #36]	@ (90020fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90020f8a:	480a      	ldr	r0, [pc, #40]	@ (90020fb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90020f8c:	f008 fbcb 	bl	90029726 <__aeabi_atexit>
90020f90:	4b05      	ldr	r3, [pc, #20]	@ (90020fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90020f92:	626b      	str	r3, [r5, #36]	@ 0x24
90020f94:	4b07      	ldr	r3, [pc, #28]	@ (90020fb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90020f96:	62ab      	str	r3, [r5, #40]	@ 0x28
90020f98:	bd38      	pop	{r3, r4, r5, pc}
90020f9a:	bf00      	nop
90020f9c:	24021930 	.word	0x24021930
90020fa0:	24000000 	.word	0x24000000
90020fa4:	9001cf2d 	.word	0x9001cf2d
90020fa8:	240000dc 	.word	0x240000dc
90020fac:	24021934 	.word	0x24021934
90020fb0:	9001cf2b 	.word	0x9001cf2b
90020fb4:	240000e0 	.word	0x240000e0

90020fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90020fb8:	b538      	push	{r3, r4, r5, lr}
90020fba:	4c15      	ldr	r4, [pc, #84]	@ (90021010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90020fbc:	4605      	mov	r5, r0
90020fbe:	7823      	ldrb	r3, [r4, #0]
90020fc0:	f3bf 8f5b 	dmb	ish
90020fc4:	07da      	lsls	r2, r3, #31
90020fc6:	d40b      	bmi.n	90020fe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90020fc8:	4620      	mov	r0, r4
90020fca:	f008 fbb3 	bl	90029734 <__cxa_guard_acquire>
90020fce:	b138      	cbz	r0, 90020fe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90020fd0:	4620      	mov	r0, r4
90020fd2:	f008 fbbb 	bl	9002974c <__cxa_guard_release>
90020fd6:	4a0f      	ldr	r2, [pc, #60]	@ (90021014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020fd8:	490f      	ldr	r1, [pc, #60]	@ (90021018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90020fda:	4810      	ldr	r0, [pc, #64]	@ (9002101c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020fdc:	f008 fba3 	bl	90029726 <__aeabi_atexit>
90020fe0:	4c0f      	ldr	r4, [pc, #60]	@ (90021020 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90020fe2:	7823      	ldrb	r3, [r4, #0]
90020fe4:	f3bf 8f5b 	dmb	ish
90020fe8:	07db      	lsls	r3, r3, #31
90020fea:	d40b      	bmi.n	90021004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020fec:	4620      	mov	r0, r4
90020fee:	f008 fba1 	bl	90029734 <__cxa_guard_acquire>
90020ff2:	b138      	cbz	r0, 90021004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020ff4:	4620      	mov	r0, r4
90020ff6:	f008 fba9 	bl	9002974c <__cxa_guard_release>
90020ffa:	4a06      	ldr	r2, [pc, #24]	@ (90021014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020ffc:	4909      	ldr	r1, [pc, #36]	@ (90021024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90020ffe:	480a      	ldr	r0, [pc, #40]	@ (90021028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021000:	f008 fb91 	bl	90029726 <__aeabi_atexit>
90021004:	4b05      	ldr	r3, [pc, #20]	@ (9002101c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021006:	61eb      	str	r3, [r5, #28]
90021008:	4b07      	ldr	r3, [pc, #28]	@ (90021028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002100a:	622b      	str	r3, [r5, #32]
9002100c:	bd38      	pop	{r3, r4, r5, pc}
9002100e:	bf00      	nop
90021010:	24021908 	.word	0x24021908
90021014:	24000000 	.word	0x24000000
90021018:	9001cf31 	.word	0x9001cf31
9002101c:	240000b4 	.word	0x240000b4
90021020:	2402190c 	.word	0x2402190c
90021024:	9001cf2f 	.word	0x9001cf2f
90021028:	240000b8 	.word	0x240000b8

9002102c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9002102c:	b510      	push	{r4, lr}
9002102e:	4604      	mov	r4, r0
90021030:	f7ff ff88 	bl	90020f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021034:	4620      	mov	r0, r4
90021036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002103a:	f7ff bfbd 	b.w	90020fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90021040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90021040:	b538      	push	{r3, r4, r5, lr}
90021042:	4c15      	ldr	r4, [pc, #84]	@ (90021098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021044:	4605      	mov	r5, r0
90021046:	7823      	ldrb	r3, [r4, #0]
90021048:	f3bf 8f5b 	dmb	ish
9002104c:	07da      	lsls	r2, r3, #31
9002104e:	d40b      	bmi.n	90021068 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021050:	4620      	mov	r0, r4
90021052:	f008 fb6f 	bl	90029734 <__cxa_guard_acquire>
90021056:	b138      	cbz	r0, 90021068 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021058:	4620      	mov	r0, r4
9002105a:	f008 fb77 	bl	9002974c <__cxa_guard_release>
9002105e:	4a0f      	ldr	r2, [pc, #60]	@ (9002109c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021060:	490f      	ldr	r1, [pc, #60]	@ (900210a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90021062:	4810      	ldr	r0, [pc, #64]	@ (900210a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021064:	f008 fb5f 	bl	90029726 <__aeabi_atexit>
90021068:	4c0f      	ldr	r4, [pc, #60]	@ (900210a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9002106a:	7823      	ldrb	r3, [r4, #0]
9002106c:	f3bf 8f5b 	dmb	ish
90021070:	07db      	lsls	r3, r3, #31
90021072:	d40b      	bmi.n	9002108c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021074:	4620      	mov	r0, r4
90021076:	f008 fb5d 	bl	90029734 <__cxa_guard_acquire>
9002107a:	b138      	cbz	r0, 9002108c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9002107c:	4620      	mov	r0, r4
9002107e:	f008 fb65 	bl	9002974c <__cxa_guard_release>
90021082:	4a06      	ldr	r2, [pc, #24]	@ (9002109c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021084:	4909      	ldr	r1, [pc, #36]	@ (900210ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021086:	480a      	ldr	r0, [pc, #40]	@ (900210b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021088:	f008 fb4d 	bl	90029726 <__aeabi_atexit>
9002108c:	4b05      	ldr	r3, [pc, #20]	@ (900210a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002108e:	636b      	str	r3, [r5, #52]	@ 0x34
90021090:	4b07      	ldr	r3, [pc, #28]	@ (900210b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021092:	63ab      	str	r3, [r5, #56]	@ 0x38
90021094:	bd38      	pop	{r3, r4, r5, pc}
90021096:	bf00      	nop
90021098:	24021940 	.word	0x24021940
9002109c:	24000000 	.word	0x24000000
900210a0:	9001cf25 	.word	0x9001cf25
900210a4:	240000ec 	.word	0x240000ec
900210a8:	24021944 	.word	0x24021944
900210ac:	9001cf23 	.word	0x9001cf23
900210b0:	240000f0 	.word	0x240000f0

900210b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900210b4:	b538      	push	{r3, r4, r5, lr}
900210b6:	4c15      	ldr	r4, [pc, #84]	@ (9002110c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900210b8:	4605      	mov	r5, r0
900210ba:	7823      	ldrb	r3, [r4, #0]
900210bc:	f3bf 8f5b 	dmb	ish
900210c0:	07da      	lsls	r2, r3, #31
900210c2:	d40b      	bmi.n	900210dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900210c4:	4620      	mov	r0, r4
900210c6:	f008 fb35 	bl	90029734 <__cxa_guard_acquire>
900210ca:	b138      	cbz	r0, 900210dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900210cc:	4620      	mov	r0, r4
900210ce:	f008 fb3d 	bl	9002974c <__cxa_guard_release>
900210d2:	4a0f      	ldr	r2, [pc, #60]	@ (90021110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900210d4:	490f      	ldr	r1, [pc, #60]	@ (90021114 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
900210d6:	4810      	ldr	r0, [pc, #64]	@ (90021118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900210d8:	f008 fb25 	bl	90029726 <__aeabi_atexit>
900210dc:	4c0f      	ldr	r4, [pc, #60]	@ (9002111c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
900210de:	7823      	ldrb	r3, [r4, #0]
900210e0:	f3bf 8f5b 	dmb	ish
900210e4:	07db      	lsls	r3, r3, #31
900210e6:	d40b      	bmi.n	90021100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900210e8:	4620      	mov	r0, r4
900210ea:	f008 fb23 	bl	90029734 <__cxa_guard_acquire>
900210ee:	b138      	cbz	r0, 90021100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900210f0:	4620      	mov	r0, r4
900210f2:	f008 fb2b 	bl	9002974c <__cxa_guard_release>
900210f6:	4a06      	ldr	r2, [pc, #24]	@ (90021110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900210f8:	4909      	ldr	r1, [pc, #36]	@ (90021120 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900210fa:	480a      	ldr	r0, [pc, #40]	@ (90021124 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900210fc:	f008 fb13 	bl	90029726 <__aeabi_atexit>
90021100:	4b05      	ldr	r3, [pc, #20]	@ (90021118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021102:	62eb      	str	r3, [r5, #44]	@ 0x2c
90021104:	4b07      	ldr	r3, [pc, #28]	@ (90021124 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021106:	632b      	str	r3, [r5, #48]	@ 0x30
90021108:	bd38      	pop	{r3, r4, r5, pc}
9002110a:	bf00      	nop
9002110c:	24021910 	.word	0x24021910
90021110:	24000000 	.word	0x24000000
90021114:	9001cf29 	.word	0x9001cf29
90021118:	240000bc 	.word	0x240000bc
9002111c:	24021914 	.word	0x24021914
90021120:	9001cf27 	.word	0x9001cf27
90021124:	240000c0 	.word	0x240000c0

90021128 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021128:	b510      	push	{r4, lr}
9002112a:	4604      	mov	r4, r0
9002112c:	f7ff ff88 	bl	90021040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90021130:	4620      	mov	r0, r4
90021132:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021136:	f7ff bfbd 	b.w	900210b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9002113c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9002113c:	b538      	push	{r3, r4, r5, lr}
9002113e:	4c15      	ldr	r4, [pc, #84]	@ (90021194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021140:	4605      	mov	r5, r0
90021142:	7823      	ldrb	r3, [r4, #0]
90021144:	f3bf 8f5b 	dmb	ish
90021148:	07da      	lsls	r2, r3, #31
9002114a:	d40b      	bmi.n	90021164 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9002114c:	4620      	mov	r0, r4
9002114e:	f008 faf1 	bl	90029734 <__cxa_guard_acquire>
90021152:	b138      	cbz	r0, 90021164 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021154:	4620      	mov	r0, r4
90021156:	f008 faf9 	bl	9002974c <__cxa_guard_release>
9002115a:	4a0f      	ldr	r2, [pc, #60]	@ (90021198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9002115c:	490f      	ldr	r1, [pc, #60]	@ (9002119c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002115e:	4810      	ldr	r0, [pc, #64]	@ (900211a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021160:	f008 fae1 	bl	90029726 <__aeabi_atexit>
90021164:	4c0f      	ldr	r4, [pc, #60]	@ (900211a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021166:	7823      	ldrb	r3, [r4, #0]
90021168:	f3bf 8f5b 	dmb	ish
9002116c:	07db      	lsls	r3, r3, #31
9002116e:	d40b      	bmi.n	90021188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021170:	4620      	mov	r0, r4
90021172:	f008 fadf 	bl	90029734 <__cxa_guard_acquire>
90021176:	b138      	cbz	r0, 90021188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021178:	4620      	mov	r0, r4
9002117a:	f008 fae7 	bl	9002974c <__cxa_guard_release>
9002117e:	4a06      	ldr	r2, [pc, #24]	@ (90021198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021180:	4909      	ldr	r1, [pc, #36]	@ (900211a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021182:	480a      	ldr	r0, [pc, #40]	@ (900211ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021184:	f008 facf 	bl	90029726 <__aeabi_atexit>
90021188:	4b05      	ldr	r3, [pc, #20]	@ (900211a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002118a:	656b      	str	r3, [r5, #84]	@ 0x54
9002118c:	4b07      	ldr	r3, [pc, #28]	@ (900211ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002118e:	65ab      	str	r3, [r5, #88]	@ 0x58
90021190:	bd38      	pop	{r3, r4, r5, pc}
90021192:	bf00      	nop
90021194:	24021948 	.word	0x24021948
90021198:	24000000 	.word	0x24000000
9002119c:	9001cf15 	.word	0x9001cf15
900211a0:	240000f4 	.word	0x240000f4
900211a4:	2402194c 	.word	0x2402194c
900211a8:	9001cf13 	.word	0x9001cf13
900211ac:	240000f8 	.word	0x240000f8

900211b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900211b0:	b538      	push	{r3, r4, r5, lr}
900211b2:	4c15      	ldr	r4, [pc, #84]	@ (90021208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900211b4:	4605      	mov	r5, r0
900211b6:	7823      	ldrb	r3, [r4, #0]
900211b8:	f3bf 8f5b 	dmb	ish
900211bc:	07da      	lsls	r2, r3, #31
900211be:	d40b      	bmi.n	900211d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900211c0:	4620      	mov	r0, r4
900211c2:	f008 fab7 	bl	90029734 <__cxa_guard_acquire>
900211c6:	b138      	cbz	r0, 900211d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900211c8:	4620      	mov	r0, r4
900211ca:	f008 fabf 	bl	9002974c <__cxa_guard_release>
900211ce:	4a0f      	ldr	r2, [pc, #60]	@ (9002120c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900211d0:	490f      	ldr	r1, [pc, #60]	@ (90021210 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
900211d2:	4810      	ldr	r0, [pc, #64]	@ (90021214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900211d4:	f008 faa7 	bl	90029726 <__aeabi_atexit>
900211d8:	4c0f      	ldr	r4, [pc, #60]	@ (90021218 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
900211da:	7823      	ldrb	r3, [r4, #0]
900211dc:	f3bf 8f5b 	dmb	ish
900211e0:	07db      	lsls	r3, r3, #31
900211e2:	d40b      	bmi.n	900211fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900211e4:	4620      	mov	r0, r4
900211e6:	f008 faa5 	bl	90029734 <__cxa_guard_acquire>
900211ea:	b138      	cbz	r0, 900211fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900211ec:	4620      	mov	r0, r4
900211ee:	f008 faad 	bl	9002974c <__cxa_guard_release>
900211f2:	4a06      	ldr	r2, [pc, #24]	@ (9002120c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900211f4:	4909      	ldr	r1, [pc, #36]	@ (9002121c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
900211f6:	480a      	ldr	r0, [pc, #40]	@ (90021220 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900211f8:	f008 fa95 	bl	90029726 <__aeabi_atexit>
900211fc:	4b05      	ldr	r3, [pc, #20]	@ (90021214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900211fe:	64eb      	str	r3, [r5, #76]	@ 0x4c
90021200:	4b07      	ldr	r3, [pc, #28]	@ (90021220 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021202:	652b      	str	r3, [r5, #80]	@ 0x50
90021204:	bd38      	pop	{r3, r4, r5, pc}
90021206:	bf00      	nop
90021208:	24021950 	.word	0x24021950
9002120c:	24000000 	.word	0x24000000
90021210:	9001cf19 	.word	0x9001cf19
90021214:	240000fc 	.word	0x240000fc
90021218:	24021954 	.word	0x24021954
9002121c:	9001cf17 	.word	0x9001cf17
90021220:	24000100 	.word	0x24000100

90021224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021224:	b538      	push	{r3, r4, r5, lr}
90021226:	4c15      	ldr	r4, [pc, #84]	@ (9002127c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021228:	4605      	mov	r5, r0
9002122a:	7823      	ldrb	r3, [r4, #0]
9002122c:	f3bf 8f5b 	dmb	ish
90021230:	07da      	lsls	r2, r3, #31
90021232:	d40b      	bmi.n	9002124c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021234:	4620      	mov	r0, r4
90021236:	f008 fa7d 	bl	90029734 <__cxa_guard_acquire>
9002123a:	b138      	cbz	r0, 9002124c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002123c:	4620      	mov	r0, r4
9002123e:	f008 fa85 	bl	9002974c <__cxa_guard_release>
90021242:	4a0f      	ldr	r2, [pc, #60]	@ (90021280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021244:	490f      	ldr	r1, [pc, #60]	@ (90021284 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021246:	4810      	ldr	r0, [pc, #64]	@ (90021288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021248:	f008 fa6d 	bl	90029726 <__aeabi_atexit>
9002124c:	4c0f      	ldr	r4, [pc, #60]	@ (9002128c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002124e:	7823      	ldrb	r3, [r4, #0]
90021250:	f3bf 8f5b 	dmb	ish
90021254:	07db      	lsls	r3, r3, #31
90021256:	d40b      	bmi.n	90021270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021258:	4620      	mov	r0, r4
9002125a:	f008 fa6b 	bl	90029734 <__cxa_guard_acquire>
9002125e:	b138      	cbz	r0, 90021270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021260:	4620      	mov	r0, r4
90021262:	f008 fa73 	bl	9002974c <__cxa_guard_release>
90021266:	4a06      	ldr	r2, [pc, #24]	@ (90021280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021268:	4909      	ldr	r1, [pc, #36]	@ (90021290 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9002126a:	480a      	ldr	r0, [pc, #40]	@ (90021294 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9002126c:	f008 fa5b 	bl	90029726 <__aeabi_atexit>
90021270:	4b05      	ldr	r3, [pc, #20]	@ (90021288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021272:	646b      	str	r3, [r5, #68]	@ 0x44
90021274:	4b07      	ldr	r3, [pc, #28]	@ (90021294 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021276:	64ab      	str	r3, [r5, #72]	@ 0x48
90021278:	bd38      	pop	{r3, r4, r5, pc}
9002127a:	bf00      	nop
9002127c:	24021918 	.word	0x24021918
90021280:	24000000 	.word	0x24000000
90021284:	9001cf1d 	.word	0x9001cf1d
90021288:	240000c4 	.word	0x240000c4
9002128c:	2402191c 	.word	0x2402191c
90021290:	9001cf1b 	.word	0x9001cf1b
90021294:	240000c8 	.word	0x240000c8

90021298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021298:	b538      	push	{r3, r4, r5, lr}
9002129a:	4c15      	ldr	r4, [pc, #84]	@ (900212f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9002129c:	4605      	mov	r5, r0
9002129e:	7823      	ldrb	r3, [r4, #0]
900212a0:	f3bf 8f5b 	dmb	ish
900212a4:	07da      	lsls	r2, r3, #31
900212a6:	d40b      	bmi.n	900212c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900212a8:	4620      	mov	r0, r4
900212aa:	f008 fa43 	bl	90029734 <__cxa_guard_acquire>
900212ae:	b138      	cbz	r0, 900212c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900212b0:	4620      	mov	r0, r4
900212b2:	f008 fa4b 	bl	9002974c <__cxa_guard_release>
900212b6:	4a0f      	ldr	r2, [pc, #60]	@ (900212f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900212b8:	490f      	ldr	r1, [pc, #60]	@ (900212f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
900212ba:	4810      	ldr	r0, [pc, #64]	@ (900212fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900212bc:	f008 fa33 	bl	90029726 <__aeabi_atexit>
900212c0:	4c0f      	ldr	r4, [pc, #60]	@ (90021300 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
900212c2:	7823      	ldrb	r3, [r4, #0]
900212c4:	f3bf 8f5b 	dmb	ish
900212c8:	07db      	lsls	r3, r3, #31
900212ca:	d40b      	bmi.n	900212e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900212cc:	4620      	mov	r0, r4
900212ce:	f008 fa31 	bl	90029734 <__cxa_guard_acquire>
900212d2:	b138      	cbz	r0, 900212e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900212d4:	4620      	mov	r0, r4
900212d6:	f008 fa39 	bl	9002974c <__cxa_guard_release>
900212da:	4a06      	ldr	r2, [pc, #24]	@ (900212f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900212dc:	4909      	ldr	r1, [pc, #36]	@ (90021304 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
900212de:	480a      	ldr	r0, [pc, #40]	@ (90021308 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900212e0:	f008 fa21 	bl	90029726 <__aeabi_atexit>
900212e4:	4b05      	ldr	r3, [pc, #20]	@ (900212fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900212e6:	63eb      	str	r3, [r5, #60]	@ 0x3c
900212e8:	4b07      	ldr	r3, [pc, #28]	@ (90021308 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900212ea:	642b      	str	r3, [r5, #64]	@ 0x40
900212ec:	bd38      	pop	{r3, r4, r5, pc}
900212ee:	bf00      	nop
900212f0:	24021938 	.word	0x24021938
900212f4:	24000000 	.word	0x24000000
900212f8:	9001cf21 	.word	0x9001cf21
900212fc:	240000e4 	.word	0x240000e4
90021300:	2402193c 	.word	0x2402193c
90021304:	9001cf1f 	.word	0x9001cf1f
90021308:	240000e8 	.word	0x240000e8

9002130c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9002130c:	b510      	push	{r4, lr}
9002130e:	4604      	mov	r4, r0
90021310:	f7ff ff14 	bl	9002113c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021314:	4620      	mov	r0, r4
90021316:	f7ff ff85 	bl	90021224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9002131a:	4620      	mov	r0, r4
9002131c:	f7ff ff48 	bl	900211b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021320:	4620      	mov	r0, r4
90021322:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021326:	f7ff bfb7 	b.w	90021298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9002132c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9002132c:	b538      	push	{r3, r4, r5, lr}
9002132e:	4c15      	ldr	r4, [pc, #84]	@ (90021384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021330:	4605      	mov	r5, r0
90021332:	7823      	ldrb	r3, [r4, #0]
90021334:	f3bf 8f5b 	dmb	ish
90021338:	07da      	lsls	r2, r3, #31
9002133a:	d40b      	bmi.n	90021354 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9002133c:	4620      	mov	r0, r4
9002133e:	f008 f9f9 	bl	90029734 <__cxa_guard_acquire>
90021342:	b138      	cbz	r0, 90021354 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021344:	4620      	mov	r0, r4
90021346:	f008 fa01 	bl	9002974c <__cxa_guard_release>
9002134a:	4a0f      	ldr	r2, [pc, #60]	@ (90021388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002134c:	490f      	ldr	r1, [pc, #60]	@ (9002138c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002134e:	4810      	ldr	r0, [pc, #64]	@ (90021390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021350:	f008 f9e9 	bl	90029726 <__aeabi_atexit>
90021354:	4c0f      	ldr	r4, [pc, #60]	@ (90021394 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021356:	7823      	ldrb	r3, [r4, #0]
90021358:	f3bf 8f5b 	dmb	ish
9002135c:	07db      	lsls	r3, r3, #31
9002135e:	d40b      	bmi.n	90021378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021360:	4620      	mov	r0, r4
90021362:	f008 f9e7 	bl	90029734 <__cxa_guard_acquire>
90021366:	b138      	cbz	r0, 90021378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021368:	4620      	mov	r0, r4
9002136a:	f008 f9ef 	bl	9002974c <__cxa_guard_release>
9002136e:	4a06      	ldr	r2, [pc, #24]	@ (90021388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021370:	4909      	ldr	r1, [pc, #36]	@ (90021398 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021372:	480a      	ldr	r0, [pc, #40]	@ (9002139c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021374:	f008 f9d7 	bl	90029726 <__aeabi_atexit>
90021378:	4b05      	ldr	r3, [pc, #20]	@ (90021390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002137a:	666b      	str	r3, [r5, #100]	@ 0x64
9002137c:	4b07      	ldr	r3, [pc, #28]	@ (9002139c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002137e:	66ab      	str	r3, [r5, #104]	@ 0x68
90021380:	bd38      	pop	{r3, r4, r5, pc}
90021382:	bf00      	nop
90021384:	24021920 	.word	0x24021920
90021388:	24000000 	.word	0x24000000
9002138c:	9001cf0d 	.word	0x9001cf0d
90021390:	240000cc 	.word	0x240000cc
90021394:	24021924 	.word	0x24021924
90021398:	9001cf0b 	.word	0x9001cf0b
9002139c:	240000d0 	.word	0x240000d0

900213a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900213a0:	b538      	push	{r3, r4, r5, lr}
900213a2:	4c15      	ldr	r4, [pc, #84]	@ (900213f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
900213a4:	4605      	mov	r5, r0
900213a6:	7823      	ldrb	r3, [r4, #0]
900213a8:	f3bf 8f5b 	dmb	ish
900213ac:	07da      	lsls	r2, r3, #31
900213ae:	d40b      	bmi.n	900213c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900213b0:	4620      	mov	r0, r4
900213b2:	f008 f9bf 	bl	90029734 <__cxa_guard_acquire>
900213b6:	b138      	cbz	r0, 900213c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900213b8:	4620      	mov	r0, r4
900213ba:	f008 f9c7 	bl	9002974c <__cxa_guard_release>
900213be:	4a0f      	ldr	r2, [pc, #60]	@ (900213fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900213c0:	490f      	ldr	r1, [pc, #60]	@ (90021400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
900213c2:	4810      	ldr	r0, [pc, #64]	@ (90021404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900213c4:	f008 f9af 	bl	90029726 <__aeabi_atexit>
900213c8:	4c0f      	ldr	r4, [pc, #60]	@ (90021408 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
900213ca:	7823      	ldrb	r3, [r4, #0]
900213cc:	f3bf 8f5b 	dmb	ish
900213d0:	07db      	lsls	r3, r3, #31
900213d2:	d40b      	bmi.n	900213ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900213d4:	4620      	mov	r0, r4
900213d6:	f008 f9ad 	bl	90029734 <__cxa_guard_acquire>
900213da:	b138      	cbz	r0, 900213ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900213dc:	4620      	mov	r0, r4
900213de:	f008 f9b5 	bl	9002974c <__cxa_guard_release>
900213e2:	4a06      	ldr	r2, [pc, #24]	@ (900213fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900213e4:	4909      	ldr	r1, [pc, #36]	@ (9002140c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
900213e6:	480a      	ldr	r0, [pc, #40]	@ (90021410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900213e8:	f008 f99d 	bl	90029726 <__aeabi_atexit>
900213ec:	4b05      	ldr	r3, [pc, #20]	@ (90021404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900213ee:	65eb      	str	r3, [r5, #92]	@ 0x5c
900213f0:	4b07      	ldr	r3, [pc, #28]	@ (90021410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900213f2:	662b      	str	r3, [r5, #96]	@ 0x60
900213f4:	bd38      	pop	{r3, r4, r5, pc}
900213f6:	bf00      	nop
900213f8:	240218f8 	.word	0x240218f8
900213fc:	24000000 	.word	0x24000000
90021400:	9001cf11 	.word	0x9001cf11
90021404:	240000a4 	.word	0x240000a4
90021408:	240218fc 	.word	0x240218fc
9002140c:	9001cf0f 	.word	0x9001cf0f
90021410:	240000a8 	.word	0x240000a8

90021414 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021414:	b510      	push	{r4, lr}
90021416:	4604      	mov	r4, r0
90021418:	f7ff ff88 	bl	9002132c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9002141c:	4620      	mov	r0, r4
9002141e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021422:	f7ff bfbd 	b.w	900213a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021428:	b538      	push	{r3, r4, r5, lr}
9002142a:	4c15      	ldr	r4, [pc, #84]	@ (90021480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9002142c:	4605      	mov	r5, r0
9002142e:	7823      	ldrb	r3, [r4, #0]
90021430:	f3bf 8f5b 	dmb	ish
90021434:	07da      	lsls	r2, r3, #31
90021436:	d40b      	bmi.n	90021450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021438:	4620      	mov	r0, r4
9002143a:	f008 f97b 	bl	90029734 <__cxa_guard_acquire>
9002143e:	b138      	cbz	r0, 90021450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021440:	4620      	mov	r0, r4
90021442:	f008 f983 	bl	9002974c <__cxa_guard_release>
90021446:	4a0f      	ldr	r2, [pc, #60]	@ (90021484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021448:	490f      	ldr	r1, [pc, #60]	@ (90021488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9002144a:	4810      	ldr	r0, [pc, #64]	@ (9002148c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9002144c:	f008 f96b 	bl	90029726 <__aeabi_atexit>
90021450:	4c0f      	ldr	r4, [pc, #60]	@ (90021490 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021452:	7823      	ldrb	r3, [r4, #0]
90021454:	f3bf 8f5b 	dmb	ish
90021458:	07db      	lsls	r3, r3, #31
9002145a:	d40b      	bmi.n	90021474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9002145c:	4620      	mov	r0, r4
9002145e:	f008 f969 	bl	90029734 <__cxa_guard_acquire>
90021462:	b138      	cbz	r0, 90021474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021464:	4620      	mov	r0, r4
90021466:	f008 f971 	bl	9002974c <__cxa_guard_release>
9002146a:	4a06      	ldr	r2, [pc, #24]	@ (90021484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9002146c:	4909      	ldr	r1, [pc, #36]	@ (90021494 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002146e:	480a      	ldr	r0, [pc, #40]	@ (90021498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021470:	f008 f959 	bl	90029726 <__aeabi_atexit>
90021474:	4b05      	ldr	r3, [pc, #20]	@ (9002148c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021476:	676b      	str	r3, [r5, #116]	@ 0x74
90021478:	4b07      	ldr	r3, [pc, #28]	@ (90021498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002147a:	67ab      	str	r3, [r5, #120]	@ 0x78
9002147c:	bd38      	pop	{r3, r4, r5, pc}
9002147e:	bf00      	nop
90021480:	240218f0 	.word	0x240218f0
90021484:	24000000 	.word	0x24000000
90021488:	9001cf05 	.word	0x9001cf05
9002148c:	2400009c 	.word	0x2400009c
90021490:	240218f4 	.word	0x240218f4
90021494:	9001cf03 	.word	0x9001cf03
90021498:	240000a0 	.word	0x240000a0

9002149c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002149c:	b538      	push	{r3, r4, r5, lr}
9002149e:	4c15      	ldr	r4, [pc, #84]	@ (900214f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900214a0:	4605      	mov	r5, r0
900214a2:	7823      	ldrb	r3, [r4, #0]
900214a4:	f3bf 8f5b 	dmb	ish
900214a8:	07da      	lsls	r2, r3, #31
900214aa:	d40b      	bmi.n	900214c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900214ac:	4620      	mov	r0, r4
900214ae:	f008 f941 	bl	90029734 <__cxa_guard_acquire>
900214b2:	b138      	cbz	r0, 900214c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900214b4:	4620      	mov	r0, r4
900214b6:	f008 f949 	bl	9002974c <__cxa_guard_release>
900214ba:	4a0f      	ldr	r2, [pc, #60]	@ (900214f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900214bc:	490f      	ldr	r1, [pc, #60]	@ (900214fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
900214be:	4810      	ldr	r0, [pc, #64]	@ (90021500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900214c0:	f008 f931 	bl	90029726 <__aeabi_atexit>
900214c4:	4c0f      	ldr	r4, [pc, #60]	@ (90021504 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
900214c6:	7823      	ldrb	r3, [r4, #0]
900214c8:	f3bf 8f5b 	dmb	ish
900214cc:	07db      	lsls	r3, r3, #31
900214ce:	d40b      	bmi.n	900214e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900214d0:	4620      	mov	r0, r4
900214d2:	f008 f92f 	bl	90029734 <__cxa_guard_acquire>
900214d6:	b138      	cbz	r0, 900214e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900214d8:	4620      	mov	r0, r4
900214da:	f008 f937 	bl	9002974c <__cxa_guard_release>
900214de:	4a06      	ldr	r2, [pc, #24]	@ (900214f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900214e0:	4909      	ldr	r1, [pc, #36]	@ (90021508 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
900214e2:	480a      	ldr	r0, [pc, #40]	@ (9002150c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900214e4:	f008 f91f 	bl	90029726 <__aeabi_atexit>
900214e8:	4b05      	ldr	r3, [pc, #20]	@ (90021500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900214ea:	66eb      	str	r3, [r5, #108]	@ 0x6c
900214ec:	4b07      	ldr	r3, [pc, #28]	@ (9002150c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900214ee:	672b      	str	r3, [r5, #112]	@ 0x70
900214f0:	bd38      	pop	{r3, r4, r5, pc}
900214f2:	bf00      	nop
900214f4:	240218e8 	.word	0x240218e8
900214f8:	24000000 	.word	0x24000000
900214fc:	9001cf09 	.word	0x9001cf09
90021500:	24000094 	.word	0x24000094
90021504:	240218ec 	.word	0x240218ec
90021508:	9001cf07 	.word	0x9001cf07
9002150c:	24000098 	.word	0x24000098

90021510 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021510:	b510      	push	{r4, lr}
90021512:	4604      	mov	r4, r0
90021514:	f7ff ff88 	bl	90021428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021518:	4620      	mov	r0, r4
9002151a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002151e:	f7ff bfbd 	b.w	9002149c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021522 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021522:	b510      	push	{r4, lr}
90021524:	4604      	mov	r4, r0
90021526:	f7ff fff3 	bl	90021510 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9002152a:	4620      	mov	r0, r4
9002152c:	f7ff ff72 	bl	90021414 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021530:	4620      	mov	r0, r4
90021532:	f7ff fdf9 	bl	90021128 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021536:	4620      	mov	r0, r4
90021538:	f7ff fcfa 	bl	90020f30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9002153c:	4620      	mov	r0, r4
9002153e:	f7ff fd75 	bl	9002102c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021542:	4620      	mov	r0, r4
90021544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021548:	f7ff bee0 	b.w	9002130c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9002154c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9002154c:	b538      	push	{r3, r4, r5, lr}
9002154e:	4c0b      	ldr	r4, [pc, #44]	@ (9002157c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021550:	4605      	mov	r5, r0
90021552:	7823      	ldrb	r3, [r4, #0]
90021554:	f3bf 8f5b 	dmb	ish
90021558:	07db      	lsls	r3, r3, #31
9002155a:	d40b      	bmi.n	90021574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9002155c:	4620      	mov	r0, r4
9002155e:	f008 f8e9 	bl	90029734 <__cxa_guard_acquire>
90021562:	b138      	cbz	r0, 90021574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021564:	4620      	mov	r0, r4
90021566:	f008 f8f1 	bl	9002974c <__cxa_guard_release>
9002156a:	4a05      	ldr	r2, [pc, #20]	@ (90021580 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9002156c:	4905      	ldr	r1, [pc, #20]	@ (90021584 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9002156e:	4806      	ldr	r0, [pc, #24]	@ (90021588 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021570:	f008 f8d9 	bl	90029726 <__aeabi_atexit>
90021574:	4b04      	ldr	r3, [pc, #16]	@ (90021588 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021576:	67eb      	str	r3, [r5, #124]	@ 0x7c
90021578:	bd38      	pop	{r3, r4, r5, pc}
9002157a:	bf00      	nop
9002157c:	240218dc 	.word	0x240218dc
90021580:	24000000 	.word	0x24000000
90021584:	9001cf01 	.word	0x9001cf01
90021588:	2400008c 	.word	0x2400008c

9002158c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9002158c:	b538      	push	{r3, r4, r5, lr}
9002158e:	4c0b      	ldr	r4, [pc, #44]	@ (900215bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021590:	4605      	mov	r5, r0
90021592:	7823      	ldrb	r3, [r4, #0]
90021594:	f3bf 8f5b 	dmb	ish
90021598:	07db      	lsls	r3, r3, #31
9002159a:	d40b      	bmi.n	900215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9002159c:	4620      	mov	r0, r4
9002159e:	f008 f8c9 	bl	90029734 <__cxa_guard_acquire>
900215a2:	b138      	cbz	r0, 900215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900215a4:	4620      	mov	r0, r4
900215a6:	f008 f8d1 	bl	9002974c <__cxa_guard_release>
900215aa:	4a05      	ldr	r2, [pc, #20]	@ (900215c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
900215ac:	4905      	ldr	r1, [pc, #20]	@ (900215c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
900215ae:	4806      	ldr	r0, [pc, #24]	@ (900215c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900215b0:	f008 f8b9 	bl	90029726 <__aeabi_atexit>
900215b4:	4b04      	ldr	r3, [pc, #16]	@ (900215c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900215b6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
900215ba:	bd38      	pop	{r3, r4, r5, pc}
900215bc:	240218e0 	.word	0x240218e0
900215c0:	24000000 	.word	0x24000000
900215c4:	9001ceff 	.word	0x9001ceff
900215c8:	24000090 	.word	0x24000090

900215cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
900215cc:	b570      	push	{r4, r5, r6, lr}
900215ce:	4d0d      	ldr	r5, [pc, #52]	@ (90021604 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
900215d0:	4606      	mov	r6, r0
900215d2:	4c0d      	ldr	r4, [pc, #52]	@ (90021608 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
900215d4:	782b      	ldrb	r3, [r5, #0]
900215d6:	f3bf 8f5b 	dmb	ish
900215da:	f013 0f01 	tst.w	r3, #1
900215de:	d10d      	bne.n	900215fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900215e0:	4628      	mov	r0, r5
900215e2:	f008 f8a7 	bl	90029734 <__cxa_guard_acquire>
900215e6:	b148      	cbz	r0, 900215fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900215e8:	4b08      	ldr	r3, [pc, #32]	@ (9002160c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
900215ea:	4628      	mov	r0, r5
900215ec:	6023      	str	r3, [r4, #0]
900215ee:	f008 f8ad 	bl	9002974c <__cxa_guard_release>
900215f2:	4a07      	ldr	r2, [pc, #28]	@ (90021610 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
900215f4:	4620      	mov	r0, r4
900215f6:	4907      	ldr	r1, [pc, #28]	@ (90021614 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
900215f8:	f008 f895 	bl	90029726 <__aeabi_atexit>
900215fc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90021600:	bd70      	pop	{r4, r5, r6, pc}
90021602:	bf00      	nop
90021604:	240218e4 	.word	0x240218e4
90021608:	24021a5c 	.word	0x24021a5c
9002160c:	9002d9c8 	.word	0x9002d9c8
90021610:	24000000 	.word	0x24000000
90021614:	9001cefd 	.word	0x9001cefd

90021618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021618:	b510      	push	{r4, lr}
9002161a:	4604      	mov	r4, r0
9002161c:	f7ff ff96 	bl	9002154c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021620:	4620      	mov	r0, r4
90021622:	f7ff ffb3 	bl	9002158c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021626:	4620      	mov	r0, r4
90021628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002162c:	f7ff bfce 	b.w	900215cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021630 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90021630:	b570      	push	{r4, r5, r6, lr}
90021632:	4d0d      	ldr	r5, [pc, #52]	@ (90021668 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90021634:	4606      	mov	r6, r0
90021636:	4c0d      	ldr	r4, [pc, #52]	@ (9002166c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90021638:	782b      	ldrb	r3, [r5, #0]
9002163a:	f3bf 8f5b 	dmb	ish
9002163e:	f013 0f01 	tst.w	r3, #1
90021642:	d10d      	bne.n	90021660 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021644:	4628      	mov	r0, r5
90021646:	f008 f875 	bl	90029734 <__cxa_guard_acquire>
9002164a:	b148      	cbz	r0, 90021660 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9002164c:	4b08      	ldr	r3, [pc, #32]	@ (90021670 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
9002164e:	4628      	mov	r0, r5
90021650:	6023      	str	r3, [r4, #0]
90021652:	f008 f87b 	bl	9002974c <__cxa_guard_release>
90021656:	4a07      	ldr	r2, [pc, #28]	@ (90021674 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90021658:	4620      	mov	r0, r4
9002165a:	4907      	ldr	r1, [pc, #28]	@ (90021678 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
9002165c:	f008 f863 	bl	90029726 <__aeabi_atexit>
90021660:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90021664:	bd70      	pop	{r4, r5, r6, pc}
90021666:	bf00      	nop
90021668:	240218d8 	.word	0x240218d8
9002166c:	24021958 	.word	0x24021958
90021670:	9002d9e4 	.word	0x9002d9e4
90021674:	24000000 	.word	0x24000000
90021678:	9001cefb 	.word	0x9001cefb

9002167c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9002167c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021680:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90021684:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90021688:	2d00      	cmp	r5, #0
9002168a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9002168e:	fb05 4c0e 	mla	ip, r5, lr, r4
90021692:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90021696:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
9002169a:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9002169e:	eb02 0a0c 	add.w	sl, r2, ip
900216a2:	8808      	ldrh	r0, [r1, #0]
900216a4:	f2c0 80b0 	blt.w	90021808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900216a8:	45ab      	cmp	fp, r5
900216aa:	f340 80ad 	ble.w	90021808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900216ae:	2c00      	cmp	r4, #0
900216b0:	f2c0 80a8 	blt.w	90021804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900216b4:	45a6      	cmp	lr, r4
900216b6:	f340 80a5 	ble.w	90021804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900216ba:	f812 200c 	ldrb.w	r2, [r2, ip]
900216be:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
900216c2:	1c62      	adds	r2, r4, #1
900216c4:	f100 80a3 	bmi.w	9002180e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900216c8:	4596      	cmp	lr, r2
900216ca:	f340 80a0 	ble.w	9002180e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900216ce:	f1b9 0f00 	cmp.w	r9, #0
900216d2:	f000 809c 	beq.w	9002180e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
900216d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
900216da:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900216de:	3501      	adds	r5, #1
900216e0:	f100 8099 	bmi.w	90021816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900216e4:	45ab      	cmp	fp, r5
900216e6:	f340 8096 	ble.w	90021816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900216ea:	2f00      	cmp	r7, #0
900216ec:	f000 8093 	beq.w	90021816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900216f0:	2c00      	cmp	r4, #0
900216f2:	f2c0 808e 	blt.w	90021812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900216f6:	45a6      	cmp	lr, r4
900216f8:	f340 808b 	ble.w	90021812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900216fc:	f81a 200e 	ldrb.w	r2, [sl, lr]
90021700:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021704:	3401      	adds	r4, #1
90021706:	f100 8089 	bmi.w	9002181c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002170a:	45a6      	cmp	lr, r4
9002170c:	f340 8086 	ble.w	9002181c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021710:	f1b9 0f00 	cmp.w	r9, #0
90021714:	f000 8082 	beq.w	9002181c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021718:	44d6      	add	lr, sl
9002171a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002171e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90021722:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021726:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9002172a:	fb19 fe07 	smulbb	lr, r9, r7
9002172e:	f1c7 0210 	rsb	r2, r7, #16
90021732:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021736:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002173a:	eba2 0209 	sub.w	r2, r2, r9
9002173e:	ea44 0808 	orr.w	r8, r4, r8
90021742:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021746:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002174a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002174e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021752:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021756:	ea44 0c0c 	orr.w	ip, r4, ip
9002175a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002175e:	fb04 f40c 	mul.w	r4, r4, ip
90021762:	fb02 4808 	mla	r8, r2, r8, r4
90021766:	041a      	lsls	r2, r3, #16
90021768:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002176c:	b2b4      	uxth	r4, r6
9002176e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021772:	43f6      	mvns	r6, r6
90021774:	4313      	orrs	r3, r2
90021776:	042a      	lsls	r2, r5, #16
90021778:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002177c:	b2f6      	uxtb	r6, r6
9002177e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021782:	fb0e 8303 	mla	r3, lr, r3, r8
90021786:	432a      	orrs	r2, r5
90021788:	fb07 3202 	mla	r2, r7, r2, r3
9002178c:	10c7      	asrs	r7, r0, #3
9002178e:	0d53      	lsrs	r3, r2, #21
90021790:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021794:	0952      	lsrs	r2, r2, #5
90021796:	fb17 f706 	smulbb	r7, r7, r6
9002179a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002179e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900217a2:	431a      	orrs	r2, r3
900217a4:	b293      	uxth	r3, r2
900217a6:	1202      	asrs	r2, r0, #8
900217a8:	121d      	asrs	r5, r3, #8
900217aa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900217ae:	00c0      	lsls	r0, r0, #3
900217b0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900217b4:	fb12 f206 	smulbb	r2, r2, r6
900217b8:	b2c0      	uxtb	r0, r0
900217ba:	fb05 2504 	mla	r5, r5, r4, r2
900217be:	10da      	asrs	r2, r3, #3
900217c0:	fb10 f006 	smulbb	r0, r0, r6
900217c4:	00db      	lsls	r3, r3, #3
900217c6:	b2ad      	uxth	r5, r5
900217c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900217cc:	b2db      	uxtb	r3, r3
900217ce:	fb02 7204 	mla	r2, r2, r4, r7
900217d2:	fb03 0004 	mla	r0, r3, r4, r0
900217d6:	1c6b      	adds	r3, r5, #1
900217d8:	b292      	uxth	r2, r2
900217da:	b280      	uxth	r0, r0
900217dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900217e0:	1c43      	adds	r3, r0, #1
900217e2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900217e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900217ea:	1c50      	adds	r0, r2, #1
900217ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900217f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900217f4:	0952      	lsrs	r2, r2, #5
900217f6:	432b      	orrs	r3, r5
900217f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900217fc:	4313      	orrs	r3, r2
900217fe:	800b      	strh	r3, [r1, #0]
90021800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021804:	4680      	mov	r8, r0
90021806:	e75c      	b.n	900216c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021808:	4684      	mov	ip, r0
9002180a:	4680      	mov	r8, r0
9002180c:	e767      	b.n	900216de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002180e:	4684      	mov	ip, r0
90021810:	e765      	b.n	900216de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021812:	4605      	mov	r5, r0
90021814:	e776      	b.n	90021704 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021816:	4603      	mov	r3, r0
90021818:	4605      	mov	r5, r0
9002181a:	e782      	b.n	90021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9002181c:	4603      	mov	r3, r0
9002181e:	e780      	b.n	90021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021824:	b099      	sub	sp, #100	@ 0x64
90021826:	9215      	str	r2, [sp, #84]	@ 0x54
90021828:	9309      	str	r3, [sp, #36]	@ 0x24
9002182a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9002182c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90021830:	9016      	str	r0, [sp, #88]	@ 0x58
90021832:	930d      	str	r3, [sp, #52]	@ 0x34
90021834:	6850      	ldr	r0, [r2, #4]
90021836:	910c      	str	r1, [sp, #48]	@ 0x30
90021838:	6812      	ldr	r2, [r2, #0]
9002183a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002183e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90021842:	fb00 1303 	mla	r3, r0, r3, r1
90021846:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9002184a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002184c:	681b      	ldr	r3, [r3, #0]
9002184e:	930b      	str	r3, [sp, #44]	@ 0x2c
90021850:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021852:	685e      	ldr	r6, [r3, #4]
90021854:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021856:	3604      	adds	r6, #4
90021858:	43db      	mvns	r3, r3
9002185a:	b2db      	uxtb	r3, r3
9002185c:	930a      	str	r3, [sp, #40]	@ 0x28
9002185e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021860:	2b00      	cmp	r3, #0
90021862:	dc03      	bgt.n	9002186c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021864:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90021866:	2b00      	cmp	r3, #0
90021868:	f340 8225 	ble.w	90021cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002186c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002186e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021872:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021876:	1e48      	subs	r0, r1, #1
90021878:	1e57      	subs	r7, r2, #1
9002187a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002187c:	2b00      	cmp	r3, #0
9002187e:	f340 80e3 	ble.w	90021a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021882:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90021886:	ea4f 4325 	mov.w	r3, r5, asr #16
9002188a:	d406      	bmi.n	9002189a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002188c:	4584      	cmp	ip, r0
9002188e:	da04      	bge.n	9002189a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021890:	2b00      	cmp	r3, #0
90021892:	db02      	blt.n	9002189a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021894:	42bb      	cmp	r3, r7
90021896:	f2c0 80d8 	blt.w	90021a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002189a:	f11c 0c01 	adds.w	ip, ip, #1
9002189e:	f100 80c9 	bmi.w	90021a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900218a2:	4561      	cmp	r1, ip
900218a4:	f2c0 80c6 	blt.w	90021a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900218a8:	3301      	adds	r3, #1
900218aa:	f100 80c3 	bmi.w	90021a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900218ae:	429a      	cmp	r2, r3
900218b0:	f2c0 80c0 	blt.w	90021a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900218b4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900218b8:	4647      	mov	r7, r8
900218ba:	f1bb 0f00 	cmp.w	fp, #0
900218be:	f340 80e3 	ble.w	90021a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900218c2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
900218c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
900218c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900218ca:	f3ca 3003 	ubfx	r0, sl, #12, #4
900218ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900218d2:	ea5f 422a 	movs.w	r2, sl, asr #16
900218d6:	f3c5 3103 	ubfx	r1, r5, #12, #4
900218da:	689b      	ldr	r3, [r3, #8]
900218dc:	f100 8121 	bmi.w	90021b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900218e0:	f103 39ff 	add.w	r9, r3, #4294967295
900218e4:	454a      	cmp	r2, r9
900218e6:	f280 811c 	bge.w	90021b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900218ea:	f1bc 0f00 	cmp.w	ip, #0
900218ee:	f2c0 8118 	blt.w	90021b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900218f2:	f10e 39ff 	add.w	r9, lr, #4294967295
900218f6:	45cc      	cmp	ip, r9
900218f8:	f280 8113 	bge.w	90021b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900218fc:	b21b      	sxth	r3, r3
900218fe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021900:	fb0c 2203 	mla	r2, ip, r3, r2
90021904:	eb04 0902 	add.w	r9, r4, r2
90021908:	5ca2      	ldrb	r2, [r4, r2]
9002190a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002190e:	2800      	cmp	r0, #0
90021910:	f000 80fe 	beq.w	90021b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021914:	f899 2001 	ldrb.w	r2, [r9, #1]
90021918:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002191c:	9211      	str	r2, [sp, #68]	@ 0x44
9002191e:	b151      	cbz	r1, 90021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021920:	eb09 0203 	add.w	r2, r9, r3
90021924:	f819 3003 	ldrb.w	r3, [r9, r3]
90021928:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002192c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002192e:	7853      	ldrb	r3, [r2, #1]
90021930:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021934:	9312      	str	r3, [sp, #72]	@ 0x48
90021936:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021938:	fb10 f201 	smulbb	r2, r0, r1
9002193c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002193e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021942:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021946:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9002194a:	10d2      	asrs	r2, r2, #3
9002194c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021950:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021954:	ea4c 0c03 	orr.w	ip, ip, r3
90021958:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002195a:	041b      	lsls	r3, r3, #16
9002195c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021960:	4323      	orrs	r3, r4
90021962:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021964:	4353      	muls	r3, r2
90021966:	fb09 330c 	mla	r3, r9, ip, r3
9002196a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9002196e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021972:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021976:	ea4c 0e0e 	orr.w	lr, ip, lr
9002197a:	f1c1 0c10 	rsb	ip, r1, #16
9002197e:	ebac 0c00 	sub.w	ip, ip, r0
90021982:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021986:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002198a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002198e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021990:	0418      	lsls	r0, r3, #16
90021992:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021996:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002199a:	4318      	orrs	r0, r3
9002199c:	fb02 c200 	mla	r2, r2, r0, ip
900219a0:	8838      	ldrh	r0, [r7, #0]
900219a2:	0d53      	lsrs	r3, r2, #21
900219a4:	0952      	lsrs	r2, r2, #5
900219a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900219aa:	1201      	asrs	r1, r0, #8
900219ac:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900219b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900219b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900219b8:	00c0      	lsls	r0, r0, #3
900219ba:	431a      	orrs	r2, r3
900219bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900219c0:	fb11 f104 	smulbb	r1, r1, r4
900219c4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900219c8:	b292      	uxth	r2, r2
900219ca:	fb1e fe04 	smulbb	lr, lr, r4
900219ce:	b2c0      	uxtb	r0, r0
900219d0:	ea4f 2c22 	mov.w	ip, r2, asr #8
900219d4:	fb10 f004 	smulbb	r0, r0, r4
900219d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900219dc:	fb0c 1c03 	mla	ip, ip, r3, r1
900219e0:	10d1      	asrs	r1, r2, #3
900219e2:	00d2      	lsls	r2, r2, #3
900219e4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900219e8:	fa1f fc8c 	uxth.w	ip, ip
900219ec:	b2d2      	uxtb	r2, r2
900219ee:	fb01 e103 	mla	r1, r1, r3, lr
900219f2:	fb02 0303 	mla	r3, r2, r3, r0
900219f6:	b289      	uxth	r1, r1
900219f8:	b29a      	uxth	r2, r3
900219fa:	f10c 0301 	add.w	r3, ip, #1
900219fe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021a02:	1c53      	adds	r3, r2, #1
90021a04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021a08:	1c4a      	adds	r2, r1, #1
90021a0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90021a0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021a12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021a16:	0949      	lsrs	r1, r1, #5
90021a18:	ea43 030c 	orr.w	r3, r3, ip
90021a1c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021a20:	430b      	orrs	r3, r1
90021a22:	803b      	strh	r3, [r7, #0]
90021a24:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021a26:	3702      	adds	r7, #2
90021a28:	f10b 3bff 	add.w	fp, fp, #4294967295
90021a2c:	449a      	add	sl, r3
90021a2e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021a30:	441d      	add	r5, r3
90021a32:	e742      	b.n	900218ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021a34:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021a36:	f108 0802 	add.w	r8, r8, #2
90021a3a:	449a      	add	sl, r3
90021a3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021a3e:	441d      	add	r5, r3
90021a40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021a42:	3b01      	subs	r3, #1
90021a44:	9309      	str	r3, [sp, #36]	@ 0x24
90021a46:	e718      	b.n	9002187a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021a48:	d023      	beq.n	90021a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021a4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021a4c:	9825      	ldr	r0, [sp, #148]	@ 0x94
90021a4e:	3b01      	subs	r3, #1
90021a50:	fb00 a003 	mla	r0, r0, r3, sl
90021a54:	1400      	asrs	r0, r0, #16
90021a56:	f53f af2d 	bmi.w	900218b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021a5a:	3901      	subs	r1, #1
90021a5c:	4288      	cmp	r0, r1
90021a5e:	f6bf af29 	bge.w	900218b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021a62:	9926      	ldr	r1, [sp, #152]	@ 0x98
90021a64:	fb01 5303 	mla	r3, r1, r3, r5
90021a68:	141b      	asrs	r3, r3, #16
90021a6a:	f53f af23 	bmi.w	900218b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021a6e:	3a01      	subs	r2, #1
90021a70:	4293      	cmp	r3, r2
90021a72:	f6bf af1f 	bge.w	900218b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021a76:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90021a7a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90021a7e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90021a82:	f1be 0f00 	cmp.w	lr, #0
90021a86:	dc6c      	bgt.n	90021b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021a88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021a8a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021a8e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021a92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021a94:	2b00      	cmp	r3, #0
90021a96:	f340 810e 	ble.w	90021cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021a9a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021a9e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021aa0:	ee30 0a04 	vadd.f32	s0, s0, s8
90021aa4:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021aa8:	eef0 6a62 	vmov.f32	s13, s5
90021aac:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021ab0:	ee31 1a05 	vadd.f32	s2, s2, s10
90021ab4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021ab8:	ee16 aa90 	vmov	sl, s13
90021abc:	eef0 6a43 	vmov.f32	s13, s6
90021ac0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021ac4:	ee16 5a90 	vmov	r5, s13
90021ac8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021acc:	ee61 7a27 	vmul.f32	s15, s2, s15
90021ad0:	ee77 2a62 	vsub.f32	s5, s14, s5
90021ad4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021ad8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021adc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021ae0:	ee12 2a90 	vmov	r2, s5
90021ae4:	eef0 2a47 	vmov.f32	s5, s14
90021ae8:	fb92 f3f3 	sdiv	r3, r2, r3
90021aec:	ee13 2a10 	vmov	r2, s6
90021af0:	9325      	str	r3, [sp, #148]	@ 0x94
90021af2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021af4:	eeb0 3a67 	vmov.f32	s6, s15
90021af8:	fb92 f3f3 	sdiv	r3, r2, r3
90021afc:	9326      	str	r3, [sp, #152]	@ 0x98
90021afe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021b00:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90021b02:	3b01      	subs	r3, #1
90021b04:	930c      	str	r3, [sp, #48]	@ 0x30
90021b06:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021b08:	bf08      	it	eq
90021b0a:	4613      	moveq	r3, r2
90021b0c:	9309      	str	r3, [sp, #36]	@ 0x24
90021b0e:	e6a6      	b.n	9002185e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021b10:	2900      	cmp	r1, #0
90021b12:	f43f af10 	beq.w	90021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021b16:	f819 3003 	ldrb.w	r3, [r9, r3]
90021b1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021b1e:	930f      	str	r3, [sp, #60]	@ 0x3c
90021b20:	e709      	b.n	90021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021b22:	f112 0901 	adds.w	r9, r2, #1
90021b26:	f53f af7d 	bmi.w	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021b2a:	454b      	cmp	r3, r9
90021b2c:	f6ff af7a 	blt.w	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021b30:	f11c 0901 	adds.w	r9, ip, #1
90021b34:	f53f af76 	bmi.w	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021b38:	45ce      	cmp	lr, r9
90021b3a:	f6ff af73 	blt.w	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021b3e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021b40:	b21b      	sxth	r3, r3
90021b42:	9202      	str	r2, [sp, #8]
90021b44:	fa0f f28e 	sxth.w	r2, lr
90021b48:	9300      	str	r3, [sp, #0]
90021b4a:	4633      	mov	r3, r6
90021b4c:	9201      	str	r2, [sp, #4]
90021b4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021b50:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021b54:	e9cd c003 	strd	ip, r0, [sp, #12]
90021b58:	4639      	mov	r1, r7
90021b5a:	9816      	ldr	r0, [sp, #88]	@ 0x58
90021b5c:	f7ff fd8e 	bl	9002167c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90021b60:	e760      	b.n	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021b62:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021b64:	ea4f 422a 	mov.w	r2, sl, asr #16
90021b68:	1429      	asrs	r1, r5, #16
90021b6a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021b6c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90021b70:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90021b74:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021b78:	fb03 2101 	mla	r1, r3, r1, r2
90021b7c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021b7e:	440a      	add	r2, r1
90021b80:	5c61      	ldrb	r1, [r4, r1]
90021b82:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90021b86:	f1bc 0f00 	cmp.w	ip, #0
90021b8a:	f000 808c 	beq.w	90021ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90021b8e:	7857      	ldrb	r7, [r2, #1]
90021b90:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90021b94:	9413      	str	r4, [sp, #76]	@ 0x4c
90021b96:	b140      	cbz	r0, 90021baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021b98:	18d7      	adds	r7, r2, r3
90021b9a:	5cd3      	ldrb	r3, [r2, r3]
90021b9c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021ba0:	9310      	str	r3, [sp, #64]	@ 0x40
90021ba2:	787b      	ldrb	r3, [r7, #1]
90021ba4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021ba8:	9314      	str	r3, [sp, #80]	@ 0x50
90021baa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021bac:	fb1c f200 	smulbb	r2, ip, r0
90021bb0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021bb2:	f10e 3eff 	add.w	lr, lr, #4294967295
90021bb6:	041f      	lsls	r7, r3, #16
90021bb8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021bbc:	10d2      	asrs	r2, r2, #3
90021bbe:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
90021bc2:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90021bc6:	431f      	orrs	r7, r3
90021bc8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021bcc:	9317      	str	r3, [sp, #92]	@ 0x5c
90021bce:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90021bd0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021bd2:	041b      	lsls	r3, r3, #16
90021bd4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021bd8:	ea43 030b 	orr.w	r3, r3, fp
90021bdc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90021be0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021be4:	4353      	muls	r3, r2
90021be6:	fb04 3707 	mla	r7, r4, r7, r3
90021bea:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90021bee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021bf0:	ea43 0b01 	orr.w	fp, r3, r1
90021bf4:	f1c0 0110 	rsb	r1, r0, #16
90021bf8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021bfa:	eba1 0c0c 	sub.w	ip, r1, ip
90021bfe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021c02:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021c06:	fb0c 770b 	mla	r7, ip, fp, r7
90021c0a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021c0e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90021c12:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021c16:	ea4c 0c0b 	orr.w	ip, ip, fp
90021c1a:	fb02 770c 	mla	r7, r2, ip, r7
90021c1e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90021c20:	0d79      	lsrs	r1, r7, #21
90021c22:	8812      	ldrh	r2, [r2, #0]
90021c24:	097f      	lsrs	r7, r7, #5
90021c26:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021c2a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90021c2e:	430f      	orrs	r7, r1
90021c30:	1211      	asrs	r1, r2, #8
90021c32:	b2bb      	uxth	r3, r7
90021c34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021c38:	10d7      	asrs	r7, r2, #3
90021c3a:	fb11 f104 	smulbb	r1, r1, r4
90021c3e:	1218      	asrs	r0, r3, #8
90021c40:	00d2      	lsls	r2, r2, #3
90021c42:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021c46:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021c4a:	fb17 f704 	smulbb	r7, r7, r4
90021c4e:	b2d2      	uxtb	r2, r2
90021c50:	fb00 1009 	mla	r0, r0, r9, r1
90021c54:	10d9      	asrs	r1, r3, #3
90021c56:	fb12 f204 	smulbb	r2, r2, r4
90021c5a:	00db      	lsls	r3, r3, #3
90021c5c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021c60:	b280      	uxth	r0, r0
90021c62:	b2db      	uxtb	r3, r3
90021c64:	fb01 7109 	mla	r1, r1, r9, r7
90021c68:	fb03 2309 	mla	r3, r3, r9, r2
90021c6c:	1c42      	adds	r2, r0, #1
90021c6e:	b289      	uxth	r1, r1
90021c70:	b29b      	uxth	r3, r3
90021c72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021c76:	1c4f      	adds	r7, r1, #1
90021c78:	1c5a      	adds	r2, r3, #1
90021c7a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021c7e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90021c82:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90021c86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021c88:	0949      	lsrs	r1, r1, #5
90021c8a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021c8e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021c92:	4310      	orrs	r0, r2
90021c94:	4308      	orrs	r0, r1
90021c96:	f823 0b02 	strh.w	r0, [r3], #2
90021c9a:	930e      	str	r3, [sp, #56]	@ 0x38
90021c9c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021c9e:	449a      	add	sl, r3
90021ca0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ca2:	441d      	add	r5, r3
90021ca4:	e6ed      	b.n	90021a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90021ca6:	2800      	cmp	r0, #0
90021ca8:	f43f af7f 	beq.w	90021baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021cac:	5cd3      	ldrb	r3, [r2, r3]
90021cae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021cb2:	9310      	str	r3, [sp, #64]	@ 0x40
90021cb4:	e779      	b.n	90021baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021cb6:	b019      	add	sp, #100	@ 0x64
90021cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021cc0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90021cc4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021cc8:	f1b8 0f00 	cmp.w	r8, #0
90021ccc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90021cd0:	fb08 470e 	mla	r7, r8, lr, r4
90021cd4:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90021cd8:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90021cdc:	eb02 0907 	add.w	r9, r2, r7
90021ce0:	8808      	ldrh	r0, [r1, #0]
90021ce2:	db67      	blt.n	90021db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021ce4:	45c2      	cmp	sl, r8
90021ce6:	dd65      	ble.n	90021db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021ce8:	2c00      	cmp	r4, #0
90021cea:	db61      	blt.n	90021db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021cec:	45a6      	cmp	lr, r4
90021cee:	dd5f      	ble.n	90021db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021cf0:	5dd2      	ldrb	r2, [r2, r7]
90021cf2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021cf6:	1c62      	adds	r2, r4, #1
90021cf8:	d45f      	bmi.n	90021dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021cfa:	4596      	cmp	lr, r2
90021cfc:	dd5d      	ble.n	90021dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021cfe:	2d00      	cmp	r5, #0
90021d00:	d05b      	beq.n	90021dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021d02:	f899 2001 	ldrb.w	r2, [r9, #1]
90021d06:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021d0a:	f118 0801 	adds.w	r8, r8, #1
90021d0e:	d458      	bmi.n	90021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021d10:	45c2      	cmp	sl, r8
90021d12:	dd56      	ble.n	90021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021d14:	2e00      	cmp	r6, #0
90021d16:	d054      	beq.n	90021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021d18:	2c00      	cmp	r4, #0
90021d1a:	db50      	blt.n	90021dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021d1c:	45a6      	cmp	lr, r4
90021d1e:	dd4e      	ble.n	90021dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021d20:	f819 200e 	ldrb.w	r2, [r9, lr]
90021d24:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021d28:	3401      	adds	r4, #1
90021d2a:	d407      	bmi.n	90021d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021d2c:	45a6      	cmp	lr, r4
90021d2e:	dd05      	ble.n	90021d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021d30:	b125      	cbz	r5, 90021d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021d32:	44ce      	add	lr, r9
90021d34:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021d38:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021d3c:	fb15 f406 	smulbb	r4, r5, r6
90021d40:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021d44:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021d48:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021d4c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021d50:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90021d54:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90021d58:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90021d5c:	ea43 0c0c 	orr.w	ip, r3, ip
90021d60:	f1c6 0310 	rsb	r3, r6, #16
90021d64:	ea4e 0707 	orr.w	r7, lr, r7
90021d68:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90021d6c:	1b5b      	subs	r3, r3, r5
90021d6e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90021d72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90021d76:	437d      	muls	r5, r7
90021d78:	fb03 5c0c 	mla	ip, r3, ip, r5
90021d7c:	0403      	lsls	r3, r0, #16
90021d7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021d82:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021d86:	4318      	orrs	r0, r3
90021d88:	0413      	lsls	r3, r2, #16
90021d8a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021d8e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021d92:	fb04 c000 	mla	r0, r4, r0, ip
90021d96:	4313      	orrs	r3, r2
90021d98:	fb06 0003 	mla	r0, r6, r3, r0
90021d9c:	0d43      	lsrs	r3, r0, #21
90021d9e:	0940      	lsrs	r0, r0, #5
90021da0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021da4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021da8:	4318      	orrs	r0, r3
90021daa:	8008      	strh	r0, [r1, #0]
90021dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021db0:	4684      	mov	ip, r0
90021db2:	e7a0      	b.n	90021cf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90021db4:	4607      	mov	r7, r0
90021db6:	4684      	mov	ip, r0
90021db8:	e7a7      	b.n	90021d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021dba:	4607      	mov	r7, r0
90021dbc:	e7a5      	b.n	90021d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021dbe:	4602      	mov	r2, r0
90021dc0:	e7b2      	b.n	90021d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90021dc2:	4602      	mov	r2, r0
90021dc4:	e7ba      	b.n	90021d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90021dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021dc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021dca:	b093      	sub	sp, #76	@ 0x4c
90021dcc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90021dd0:	920f      	str	r2, [sp, #60]	@ 0x3c
90021dd2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021dd4:	9010      	str	r0, [sp, #64]	@ 0x40
90021dd6:	9108      	str	r1, [sp, #32]
90021dd8:	6850      	ldr	r0, [r2, #4]
90021dda:	9306      	str	r3, [sp, #24]
90021ddc:	6812      	ldr	r2, [r2, #0]
90021dde:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90021de2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90021de6:	fb00 1303 	mla	r3, r0, r3, r1
90021dea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90021dee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021df0:	681b      	ldr	r3, [r3, #0]
90021df2:	9307      	str	r3, [sp, #28]
90021df4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021df6:	685f      	ldr	r7, [r3, #4]
90021df8:	3704      	adds	r7, #4
90021dfa:	9b08      	ldr	r3, [sp, #32]
90021dfc:	2b00      	cmp	r3, #0
90021dfe:	dc03      	bgt.n	90021e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90021e00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021e02:	2b00      	cmp	r3, #0
90021e04:	f340 81b2 	ble.w	9002216c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021e08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021e0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021e0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021e12:	1e48      	subs	r0, r1, #1
90021e14:	f102 3cff 	add.w	ip, r2, #4294967295
90021e18:	9b06      	ldr	r3, [sp, #24]
90021e1a:	2b00      	cmp	r3, #0
90021e1c:	f340 80a9 	ble.w	90021f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021e20:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021e24:	ea4f 4326 	mov.w	r3, r6, asr #16
90021e28:	d406      	bmi.n	90021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021e2a:	4586      	cmp	lr, r0
90021e2c:	da04      	bge.n	90021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021e2e:	2b00      	cmp	r3, #0
90021e30:	db02      	blt.n	90021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021e32:	4563      	cmp	r3, ip
90021e34:	f2c0 809e 	blt.w	90021f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021e38:	f11e 0e01 	adds.w	lr, lr, #1
90021e3c:	f100 808f 	bmi.w	90021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021e40:	4571      	cmp	r1, lr
90021e42:	f2c0 808c 	blt.w	90021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021e46:	3301      	adds	r3, #1
90021e48:	f100 8089 	bmi.w	90021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021e4c:	429a      	cmp	r2, r3
90021e4e:	f2c0 8086 	blt.w	90021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021e52:	f8dd b018 	ldr.w	fp, [sp, #24]
90021e56:	46c8      	mov	r8, r9
90021e58:	f1bb 0f00 	cmp.w	fp, #0
90021e5c:	f340 80a6 	ble.w	90021fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90021e60:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90021e62:	ea4f 4c26 	mov.w	ip, r6, asr #16
90021e66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021e68:	f3c4 3003 	ubfx	r0, r4, #12, #4
90021e6c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021e70:	1422      	asrs	r2, r4, #16
90021e72:	f3c6 3103 	ubfx	r1, r6, #12, #4
90021e76:	689b      	ldr	r3, [r3, #8]
90021e78:	f100 80e3 	bmi.w	90022042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021e7c:	f103 3aff 	add.w	sl, r3, #4294967295
90021e80:	4552      	cmp	r2, sl
90021e82:	f280 80de 	bge.w	90022042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021e86:	f1bc 0f00 	cmp.w	ip, #0
90021e8a:	f2c0 80da 	blt.w	90022042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021e8e:	f10e 3aff 	add.w	sl, lr, #4294967295
90021e92:	45d4      	cmp	ip, sl
90021e94:	f280 80d5 	bge.w	90022042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021e98:	b21b      	sxth	r3, r3
90021e9a:	9d07      	ldr	r5, [sp, #28]
90021e9c:	fb0c 2203 	mla	r2, ip, r3, r2
90021ea0:	eb05 0a02 	add.w	sl, r5, r2
90021ea4:	5caa      	ldrb	r2, [r5, r2]
90021ea6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90021eaa:	2800      	cmp	r0, #0
90021eac:	f000 80c0 	beq.w	90022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90021eb0:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021eb4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90021eb8:	920b      	str	r2, [sp, #44]	@ 0x2c
90021eba:	b151      	cbz	r1, 90021ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021ebc:	eb0a 0203 	add.w	r2, sl, r3
90021ec0:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021ec4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021ec8:	9309      	str	r3, [sp, #36]	@ 0x24
90021eca:	7853      	ldrb	r3, [r2, #1]
90021ecc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021ed0:	930c      	str	r3, [sp, #48]	@ 0x30
90021ed2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021ed4:	fb10 f201 	smulbb	r2, r0, r1
90021ed8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90021eda:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021ede:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021ee2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021ee6:	10d2      	asrs	r2, r2, #3
90021ee8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021eec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90021ef0:	ea4c 0c03 	orr.w	ip, ip, r3
90021ef4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021ef6:	041b      	lsls	r3, r3, #16
90021ef8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021efc:	432b      	orrs	r3, r5
90021efe:	4353      	muls	r3, r2
90021f00:	fb0a 330c 	mla	r3, sl, ip, r3
90021f04:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021f08:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021f0c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021f10:	ea4c 0e0e 	orr.w	lr, ip, lr
90021f14:	f1c1 0c10 	rsb	ip, r1, #16
90021f18:	ebac 0c00 	sub.w	ip, ip, r0
90021f1c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021f20:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021f24:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021f28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021f2a:	0418      	lsls	r0, r3, #16
90021f2c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021f30:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021f34:	4318      	orrs	r0, r3
90021f36:	fb02 c200 	mla	r2, r2, r0, ip
90021f3a:	0d53      	lsrs	r3, r2, #21
90021f3c:	0952      	lsrs	r2, r2, #5
90021f3e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021f42:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021f46:	431a      	orrs	r2, r3
90021f48:	f8a8 2000 	strh.w	r2, [r8]
90021f4c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021f4e:	f108 0802 	add.w	r8, r8, #2
90021f52:	f10b 3bff 	add.w	fp, fp, #4294967295
90021f56:	441c      	add	r4, r3
90021f58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021f5a:	441e      	add	r6, r3
90021f5c:	e77c      	b.n	90021e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021f5e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021f60:	f109 0902 	add.w	r9, r9, #2
90021f64:	441c      	add	r4, r3
90021f66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021f68:	441e      	add	r6, r3
90021f6a:	9b06      	ldr	r3, [sp, #24]
90021f6c:	3b01      	subs	r3, #1
90021f6e:	9306      	str	r3, [sp, #24]
90021f70:	e752      	b.n	90021e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90021f72:	d020      	beq.n	90021fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90021f74:	9b06      	ldr	r3, [sp, #24]
90021f76:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90021f78:	3b01      	subs	r3, #1
90021f7a:	fb00 4003 	mla	r0, r0, r3, r4
90021f7e:	1400      	asrs	r0, r0, #16
90021f80:	f53f af67 	bmi.w	90021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021f84:	3901      	subs	r1, #1
90021f86:	4288      	cmp	r0, r1
90021f88:	f6bf af63 	bge.w	90021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021f8c:	9920      	ldr	r1, [sp, #128]	@ 0x80
90021f8e:	fb01 6303 	mla	r3, r1, r3, r6
90021f92:	141b      	asrs	r3, r3, #16
90021f94:	f53f af5d 	bmi.w	90021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021f98:	3a01      	subs	r2, #1
90021f9a:	4293      	cmp	r3, r2
90021f9c:	f6bf af59 	bge.w	90021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021fa0:	f8dd 8018 	ldr.w	r8, [sp, #24]
90021fa4:	46ca      	mov	sl, r9
90021fa6:	f1b8 0f00 	cmp.w	r8, #0
90021faa:	dc67      	bgt.n	9002207c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90021fac:	9b06      	ldr	r3, [sp, #24]
90021fae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90021fb2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90021fb6:	9b08      	ldr	r3, [sp, #32]
90021fb8:	2b00      	cmp	r3, #0
90021fba:	f340 80d7 	ble.w	9002216c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
90021fc2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021fc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021fc8:	eeb0 6a62 	vmov.f32	s12, s5
90021fcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
90021fd0:	ee31 1a05 	vadd.f32	s2, s2, s10
90021fd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021fd8:	ee16 4a10 	vmov	r4, s12
90021fdc:	eeb0 6a43 	vmov.f32	s12, s6
90021fe0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021fe4:	ee16 6a10 	vmov	r6, s12
90021fe8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021fec:	ee61 7a27 	vmul.f32	s15, s2, s15
90021ff0:	ee77 2a62 	vsub.f32	s5, s14, s5
90021ff4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021ff8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021ffc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022000:	ee12 2a90 	vmov	r2, s5
90022004:	eef0 2a47 	vmov.f32	s5, s14
90022008:	fb92 f3f3 	sdiv	r3, r2, r3
9002200c:	ee13 2a10 	vmov	r2, s6
90022010:	931f      	str	r3, [sp, #124]	@ 0x7c
90022012:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022014:	eeb0 3a67 	vmov.f32	s6, s15
90022018:	fb92 f3f3 	sdiv	r3, r2, r3
9002201c:	9320      	str	r3, [sp, #128]	@ 0x80
9002201e:	9b08      	ldr	r3, [sp, #32]
90022020:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90022022:	3b01      	subs	r3, #1
90022024:	9308      	str	r3, [sp, #32]
90022026:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022028:	bf08      	it	eq
9002202a:	4613      	moveq	r3, r2
9002202c:	9306      	str	r3, [sp, #24]
9002202e:	e6e4      	b.n	90021dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90022030:	2900      	cmp	r1, #0
90022032:	f43f af4e 	beq.w	90021ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022036:	f81a 3003 	ldrb.w	r3, [sl, r3]
9002203a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002203e:	9309      	str	r3, [sp, #36]	@ 0x24
90022040:	e747      	b.n	90021ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022042:	f112 0a01 	adds.w	sl, r2, #1
90022046:	d481      	bmi.n	90021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022048:	4553      	cmp	r3, sl
9002204a:	f6ff af7f 	blt.w	90021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002204e:	f11c 0a01 	adds.w	sl, ip, #1
90022052:	f53f af7b 	bmi.w	90021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022056:	45d6      	cmp	lr, sl
90022058:	f6ff af78 	blt.w	90021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002205c:	b21b      	sxth	r3, r3
9002205e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90022062:	fa0f f28e 	sxth.w	r2, lr
90022066:	9300      	str	r3, [sp, #0]
90022068:	463b      	mov	r3, r7
9002206a:	9201      	str	r2, [sp, #4]
9002206c:	9a07      	ldr	r2, [sp, #28]
9002206e:	e9cd 0104 	strd	r0, r1, [sp, #16]
90022072:	4641      	mov	r1, r8
90022074:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022076:	f7ff fe21 	bl	90021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002207a:	e767      	b.n	90021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002207c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002207e:	1422      	asrs	r2, r4, #16
90022080:	1431      	asrs	r1, r6, #16
90022082:	9d07      	ldr	r5, [sp, #28]
90022084:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022088:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9002208c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90022090:	fb03 2101 	mla	r1, r3, r1, r2
90022094:	9a07      	ldr	r2, [sp, #28]
90022096:	440a      	add	r2, r1
90022098:	5c69      	ldrb	r1, [r5, r1]
9002209a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002209e:	f1be 0f00 	cmp.w	lr, #0
900220a2:	d05c      	beq.n	9002215e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900220a4:	f892 c001 	ldrb.w	ip, [r2, #1]
900220a8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900220ac:	950d      	str	r5, [sp, #52]	@ 0x34
900220ae:	b150      	cbz	r0, 900220c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900220b0:	eb02 0c03 	add.w	ip, r2, r3
900220b4:	5cd3      	ldrb	r3, [r2, r3]
900220b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900220ba:	930a      	str	r3, [sp, #40]	@ 0x28
900220bc:	f89c 3001 	ldrb.w	r3, [ip, #1]
900220c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900220c4:	930e      	str	r3, [sp, #56]	@ 0x38
900220c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900220c8:	fb1e f200 	smulbb	r2, lr, r0
900220cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900220ce:	f108 38ff 	add.w	r8, r8, #4294967295
900220d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900220d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900220da:	10d2      	asrs	r2, r2, #3
900220dc:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
900220e0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900220e4:	ea4c 0c03 	orr.w	ip, ip, r3
900220e8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900220ec:	9311      	str	r3, [sp, #68]	@ 0x44
900220ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900220f0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900220f2:	041b      	lsls	r3, r3, #16
900220f4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900220f8:	ea43 030b 	orr.w	r3, r3, fp
900220fc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022100:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022104:	4353      	muls	r3, r2
90022106:	fb05 3c0c 	mla	ip, r5, ip, r3
9002210a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002210e:	ea43 0b01 	orr.w	fp, r3, r1
90022112:	f1c0 0110 	rsb	r1, r0, #16
90022116:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022118:	eba1 0e0e 	sub.w	lr, r1, lr
9002211c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90022120:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022124:	fb0e cc0b 	mla	ip, lr, fp, ip
90022128:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9002212c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90022130:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022134:	ea4b 0e0e 	orr.w	lr, fp, lr
90022138:	fb02 cc0e 	mla	ip, r2, lr, ip
9002213c:	ea4f 535c 	mov.w	r3, ip, lsr #21
90022140:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022144:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022148:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002214c:	ea43 0c0c 	orr.w	ip, r3, ip
90022150:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022152:	441c      	add	r4, r3
90022154:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022156:	f82a cb02 	strh.w	ip, [sl], #2
9002215a:	441e      	add	r6, r3
9002215c:	e723      	b.n	90021fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002215e:	2800      	cmp	r0, #0
90022160:	d0b1      	beq.n	900220c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022162:	5cd3      	ldrb	r3, [r2, r3]
90022164:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022168:	930a      	str	r3, [sp, #40]	@ 0x28
9002216a:	e7ac      	b.n	900220c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002216c:	b013      	add	sp, #76	@ 0x4c
9002216e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90022172:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022176:	880d      	ldrh	r5, [r1, #0]
90022178:	b087      	sub	sp, #28
9002217a:	10ef      	asrs	r7, r5, #3
9002217c:	9103      	str	r1, [sp, #12]
9002217e:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022182:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90022186:	00ed      	lsls	r5, r5, #3
90022188:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002218c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90022190:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90022194:	b2ed      	uxtb	r5, r5
90022196:	9701      	str	r7, [sp, #4]
90022198:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
9002219c:	9502      	str	r5, [sp, #8]
9002219e:	9d01      	ldr	r5, [sp, #4]
900221a0:	9902      	ldr	r1, [sp, #8]
900221a2:	022d      	lsls	r5, r5, #8
900221a4:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
900221a8:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
900221ac:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900221b0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
900221b4:	430d      	orrs	r5, r1
900221b6:	fb06 0709 	mla	r7, r6, r9, r0
900221ba:	2e00      	cmp	r6, #0
900221bc:	9505      	str	r5, [sp, #20]
900221be:	eb02 0c07 	add.w	ip, r2, r7
900221c2:	f2c0 80b6 	blt.w	90022332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900221c6:	45b3      	cmp	fp, r6
900221c8:	f340 80b3 	ble.w	90022332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900221cc:	2800      	cmp	r0, #0
900221ce:	f2c0 80ae 	blt.w	9002232e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900221d2:	4581      	cmp	r9, r0
900221d4:	f340 80ab 	ble.w	9002232e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900221d8:	5dd7      	ldrb	r7, [r2, r7]
900221da:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900221de:	441f      	add	r7, r3
900221e0:	1c42      	adds	r2, r0, #1
900221e2:	f100 80a9 	bmi.w	90022338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900221e6:	4591      	cmp	r9, r2
900221e8:	f340 80a6 	ble.w	90022338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900221ec:	2c00      	cmp	r4, #0
900221ee:	f000 80a3 	beq.w	90022338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900221f2:	f89c 5001 	ldrb.w	r5, [ip, #1]
900221f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900221fa:	441d      	add	r5, r3
900221fc:	3601      	adds	r6, #1
900221fe:	f100 809f 	bmi.w	90022340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022202:	45b3      	cmp	fp, r6
90022204:	f340 809c 	ble.w	90022340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022208:	f1be 0f00 	cmp.w	lr, #0
9002220c:	f000 8098 	beq.w	90022340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022210:	2800      	cmp	r0, #0
90022212:	f2c0 8093 	blt.w	9002233c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022216:	4581      	cmp	r9, r0
90022218:	f340 8090 	ble.w	9002233c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002221c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90022220:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022224:	441e      	add	r6, r3
90022226:	3001      	adds	r0, #1
90022228:	f100 808d 	bmi.w	90022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002222c:	4581      	cmp	r9, r0
9002222e:	f340 808a 	ble.w	90022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022232:	2c00      	cmp	r4, #0
90022234:	f000 8087 	beq.w	90022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022238:	44e1      	add	r9, ip
9002223a:	f899 2001 	ldrb.w	r2, [r9, #1]
9002223e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022242:	4413      	add	r3, r2
90022244:	b2a4      	uxth	r4, r4
90022246:	f897 c002 	ldrb.w	ip, [r7, #2]
9002224a:	fa1f fe8e 	uxth.w	lr, lr
9002224e:	9901      	ldr	r1, [sp, #4]
90022250:	fb04 fb0e 	mul.w	fp, r4, lr
90022254:	0124      	lsls	r4, r4, #4
90022256:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002225a:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
9002225e:	eba4 040b 	sub.w	r4, r4, fp
90022262:	fa1f f08e 	uxth.w	r0, lr
90022266:	b2a2      	uxth	r2, r4
90022268:	78ac      	ldrb	r4, [r5, #2]
9002226a:	eba9 0900 	sub.w	r9, r9, r0
9002226e:	fa1f fe88 	uxth.w	lr, r8
90022272:	4354      	muls	r4, r2
90022274:	ea6f 0808 	mvn.w	r8, r8
90022278:	fa1f f989 	uxth.w	r9, r9
9002227c:	fa5f f888 	uxtb.w	r8, r8
90022280:	fb09 440c 	mla	r4, r9, ip, r4
90022284:	f896 c002 	ldrb.w	ip, [r6, #2]
90022288:	fb1a fa08 	smulbb	sl, sl, r8
9002228c:	fb00 440c 	mla	r4, r0, ip, r4
90022290:	f893 c002 	ldrb.w	ip, [r3, #2]
90022294:	fb0b 4c0c 	mla	ip, fp, ip, r4
90022298:	787c      	ldrb	r4, [r7, #1]
9002229a:	783f      	ldrb	r7, [r7, #0]
9002229c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900222a0:	fb0c ac0e 	mla	ip, ip, lr, sl
900222a4:	f895 a001 	ldrb.w	sl, [r5, #1]
900222a8:	782d      	ldrb	r5, [r5, #0]
900222aa:	fb02 fa0a 	mul.w	sl, r2, sl
900222ae:	fa1f fc8c 	uxth.w	ip, ip
900222b2:	436a      	muls	r2, r5
900222b4:	7835      	ldrb	r5, [r6, #0]
900222b6:	fb09 aa04 	mla	sl, r9, r4, sl
900222ba:	7874      	ldrb	r4, [r6, #1]
900222bc:	fb09 2207 	mla	r2, r9, r7, r2
900222c0:	fb00 aa04 	mla	sl, r0, r4, sl
900222c4:	785c      	ldrb	r4, [r3, #1]
900222c6:	fb00 2005 	mla	r0, r0, r5, r2
900222ca:	781b      	ldrb	r3, [r3, #0]
900222cc:	fb0b a404 	mla	r4, fp, r4, sl
900222d0:	fb11 fa08 	smulbb	sl, r1, r8
900222d4:	fb0b 0b03 	mla	fp, fp, r3, r0
900222d8:	9b02      	ldr	r3, [sp, #8]
900222da:	f3c4 2407 	ubfx	r4, r4, #8, #8
900222de:	fb13 f808 	smulbb	r8, r3, r8
900222e2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
900222e6:	fb04 a40e 	mla	r4, r4, lr, sl
900222ea:	f10c 0301 	add.w	r3, ip, #1
900222ee:	fb0b 8e0e 	mla	lr, fp, lr, r8
900222f2:	b2a4      	uxth	r4, r4
900222f4:	fa1f fe8e 	uxth.w	lr, lr
900222f8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900222fc:	f104 0a01 	add.w	sl, r4, #1
90022300:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90022304:	f10e 0c01 	add.w	ip, lr, #1
90022308:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002230c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022310:	0964      	lsrs	r4, r4, #5
90022312:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022316:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002231a:	ea4c 0c03 	orr.w	ip, ip, r3
9002231e:	9b03      	ldr	r3, [sp, #12]
90022320:	ea4c 0c04 	orr.w	ip, ip, r4
90022324:	f8a3 c000 	strh.w	ip, [r3]
90022328:	b007      	add	sp, #28
9002232a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002232e:	af05      	add	r7, sp, #20
90022330:	e756      	b.n	900221e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90022332:	ad05      	add	r5, sp, #20
90022334:	462f      	mov	r7, r5
90022336:	e761      	b.n	900221fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022338:	ad05      	add	r5, sp, #20
9002233a:	e75f      	b.n	900221fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9002233c:	ae05      	add	r6, sp, #20
9002233e:	e772      	b.n	90022226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90022340:	ab05      	add	r3, sp, #20
90022342:	461e      	mov	r6, r3
90022344:	e77e      	b.n	90022244 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022346:	ab05      	add	r3, sp, #20
90022348:	e77c      	b.n	90022244 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9002234a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002234a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002234e:	b095      	sub	sp, #84	@ 0x54
90022350:	9212      	str	r2, [sp, #72]	@ 0x48
90022352:	9309      	str	r3, [sp, #36]	@ 0x24
90022354:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022356:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
9002235a:	9013      	str	r0, [sp, #76]	@ 0x4c
9002235c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002235e:	6850      	ldr	r0, [r2, #4]
90022360:	910e      	str	r1, [sp, #56]	@ 0x38
90022362:	6812      	ldr	r2, [r2, #0]
90022364:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90022368:	fb00 1303 	mla	r3, r0, r3, r1
9002236c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022370:	930a      	str	r3, [sp, #40]	@ 0x28
90022372:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022374:	681b      	ldr	r3, [r3, #0]
90022376:	930d      	str	r3, [sp, #52]	@ 0x34
90022378:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002237a:	685c      	ldr	r4, [r3, #4]
9002237c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002237e:	3404      	adds	r4, #4
90022380:	43db      	mvns	r3, r3
90022382:	b2db      	uxtb	r3, r3
90022384:	930b      	str	r3, [sp, #44]	@ 0x2c
90022386:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022388:	2b00      	cmp	r3, #0
9002238a:	dc03      	bgt.n	90022394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002238c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002238e:	2b00      	cmp	r3, #0
90022390:	f340 8255 	ble.w	9002283e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022394:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90022396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002239a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002239e:	1e48      	subs	r0, r1, #1
900223a0:	1e55      	subs	r5, r2, #1
900223a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900223a4:	2b00      	cmp	r3, #0
900223a6:	f340 80f9 	ble.w	9002259c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900223aa:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
900223ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900223ae:	1436      	asrs	r6, r6, #16
900223b0:	ea4f 4323 	mov.w	r3, r3, asr #16
900223b4:	d406      	bmi.n	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900223b6:	4286      	cmp	r6, r0
900223b8:	da04      	bge.n	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900223ba:	2b00      	cmp	r3, #0
900223bc:	db02      	blt.n	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900223be:	42ab      	cmp	r3, r5
900223c0:	f2c0 80ed 	blt.w	9002259e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
900223c4:	3601      	adds	r6, #1
900223c6:	f100 80da 	bmi.w	9002257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900223ca:	42b1      	cmp	r1, r6
900223cc:	f2c0 80d7 	blt.w	9002257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900223d0:	3301      	adds	r3, #1
900223d2:	f100 80d4 	bmi.w	9002257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900223d6:	429a      	cmp	r2, r3
900223d8:	f2c0 80d1 	blt.w	9002257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900223dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900223de:	9311      	str	r3, [sp, #68]	@ 0x44
900223e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900223e2:	930c      	str	r3, [sp, #48]	@ 0x30
900223e4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900223e6:	2b00      	cmp	r3, #0
900223e8:	f340 80fa 	ble.w	900225e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900223ec:	9826      	ldr	r0, [sp, #152]	@ 0x98
900223ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900223f0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900223f2:	68c6      	ldr	r6, [r0, #12]
900223f4:	141d      	asrs	r5, r3, #16
900223f6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900223f8:	f3c2 3103 	ubfx	r1, r2, #12, #4
900223fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900223fe:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022400:	1400      	asrs	r0, r0, #16
90022402:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022406:	6892      	ldr	r2, [r2, #8]
90022408:	f100 813e 	bmi.w	90022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002240c:	1e57      	subs	r7, r2, #1
9002240e:	42b8      	cmp	r0, r7
90022410:	f280 813a 	bge.w	90022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022414:	2d00      	cmp	r5, #0
90022416:	f2c0 8137 	blt.w	90022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002241a:	1e77      	subs	r7, r6, #1
9002241c:	42bd      	cmp	r5, r7
9002241e:	f280 8133 	bge.w	90022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022422:	b212      	sxth	r2, r2
90022424:	fb05 0002 	mla	r0, r5, r2, r0
90022428:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002242a:	f815 a000 	ldrb.w	sl, [r5, r0]
9002242e:	182e      	adds	r6, r5, r0
90022430:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022434:	eb04 050a 	add.w	r5, r4, sl
90022438:	2b00      	cmp	r3, #0
9002243a:	f000 8117 	beq.w	9002266c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002243e:	f896 c001 	ldrb.w	ip, [r6, #1]
90022442:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022446:	44a4      	add	ip, r4
90022448:	2900      	cmp	r1, #0
9002244a:	f000 8117 	beq.w	9002267c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9002244e:	18b0      	adds	r0, r6, r2
90022450:	5cb2      	ldrb	r2, [r6, r2]
90022452:	7840      	ldrb	r0, [r0, #1]
90022454:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022458:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002245c:	4422      	add	r2, r4
9002245e:	4420      	add	r0, r4
90022460:	b29b      	uxth	r3, r3
90022462:	f89c 7002 	ldrb.w	r7, [ip, #2]
90022466:	b289      	uxth	r1, r1
90022468:	f895 b002 	ldrb.w	fp, [r5, #2]
9002246c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002246e:	fb03 f901 	mul.w	r9, r3, r1
90022472:	011b      	lsls	r3, r3, #4
90022474:	f8b6 e000 	ldrh.w	lr, [r6]
90022478:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002247c:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90022480:	eba3 0309 	sub.w	r3, r3, r9
90022484:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90022488:	b289      	uxth	r1, r1
9002248a:	f814 a00a 	ldrb.w	sl, [r4, sl]
9002248e:	b29b      	uxth	r3, r3
90022490:	eba8 0801 	sub.w	r8, r8, r1
90022494:	435f      	muls	r7, r3
90022496:	fa1f f888 	uxth.w	r8, r8
9002249a:	9310      	str	r3, [sp, #64]	@ 0x40
9002249c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002249e:	fb08 770b 	mla	r7, r8, fp, r7
900224a2:	f892 b002 	ldrb.w	fp, [r2, #2]
900224a6:	fb01 770b 	mla	r7, r1, fp, r7
900224aa:	f890 b002 	ldrb.w	fp, [r0, #2]
900224ae:	fb09 770b 	mla	r7, r9, fp, r7
900224b2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900224b6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900224ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
900224be:	fb1b fb03 	smulbb	fp, fp, r3
900224c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900224c4:	fb07 b706 	mla	r7, r7, r6, fp
900224c8:	f895 b001 	ldrb.w	fp, [r5, #1]
900224cc:	f89c 5001 	ldrb.w	r5, [ip, #1]
900224d0:	f89c c000 	ldrb.w	ip, [ip]
900224d4:	b2bf      	uxth	r7, r7
900224d6:	435d      	muls	r5, r3
900224d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900224da:	fb08 550b 	mla	r5, r8, fp, r5
900224de:	f892 b001 	ldrb.w	fp, [r2, #1]
900224e2:	fb01 550b 	mla	r5, r1, fp, r5
900224e6:	f890 b001 	ldrb.w	fp, [r0, #1]
900224ea:	fb09 550b 	mla	r5, r9, fp, r5
900224ee:	ea4f 0bee 	mov.w	fp, lr, asr #3
900224f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900224f6:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900224fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
900224fe:	fa5f fe8e 	uxtb.w	lr, lr
90022502:	fb1b fb03 	smulbb	fp, fp, r3
90022506:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022508:	fb03 f30c 	mul.w	r3, r3, ip
9002250c:	f892 c000 	ldrb.w	ip, [r2]
90022510:	fb05 b506 	mla	r5, r5, r6, fp
90022514:	fb08 330a 	mla	r3, r8, sl, r3
90022518:	b2ad      	uxth	r5, r5
9002251a:	fb01 330c 	mla	r3, r1, ip, r3
9002251e:	f890 c000 	ldrb.w	ip, [r0]
90022522:	f105 0b01 	add.w	fp, r5, #1
90022526:	fb09 3c0c 	mla	ip, r9, ip, r3
9002252a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002252c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022530:	fb1e fe03 	smulbb	lr, lr, r3
90022534:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022538:	1c7b      	adds	r3, r7, #1
9002253a:	096d      	lsrs	r5, r5, #5
9002253c:	fb0c e606 	mla	r6, ip, r6, lr
90022540:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022544:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022548:	b2b6      	uxth	r6, r6
9002254a:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
9002254e:	1c77      	adds	r7, r6, #1
90022550:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022554:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022558:	431f      	orrs	r7, r3
9002255a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002255c:	433d      	orrs	r5, r7
9002255e:	801d      	strh	r5, [r3, #0]
90022560:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022562:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022564:	3302      	adds	r3, #2
90022566:	930c      	str	r3, [sp, #48]	@ 0x30
90022568:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002256a:	4413      	add	r3, r2
9002256c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002256e:	931f      	str	r3, [sp, #124]	@ 0x7c
90022570:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022572:	4413      	add	r3, r2
90022574:	9320      	str	r3, [sp, #128]	@ 0x80
90022576:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022578:	3b01      	subs	r3, #1
9002257a:	9311      	str	r3, [sp, #68]	@ 0x44
9002257c:	e732      	b.n	900223e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002257e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022580:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022582:	4433      	add	r3, r6
90022584:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90022586:	931f      	str	r3, [sp, #124]	@ 0x7c
90022588:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002258a:	4433      	add	r3, r6
9002258c:	9320      	str	r3, [sp, #128]	@ 0x80
9002258e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022590:	3b01      	subs	r3, #1
90022592:	9309      	str	r3, [sp, #36]	@ 0x24
90022594:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022596:	3302      	adds	r3, #2
90022598:	930a      	str	r3, [sp, #40]	@ 0x28
9002259a:	e702      	b.n	900223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002259c:	d027      	beq.n	900225ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9002259e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900225a0:	9821      	ldr	r0, [sp, #132]	@ 0x84
900225a2:	3b01      	subs	r3, #1
900225a4:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900225a6:	fb00 5003 	mla	r0, r0, r3, r5
900225aa:	1400      	asrs	r0, r0, #16
900225ac:	f53f af16 	bmi.w	900223dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900225b0:	3901      	subs	r1, #1
900225b2:	4288      	cmp	r0, r1
900225b4:	f6bf af12 	bge.w	900223dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900225b8:	9922      	ldr	r1, [sp, #136]	@ 0x88
900225ba:	9820      	ldr	r0, [sp, #128]	@ 0x80
900225bc:	fb01 0303 	mla	r3, r1, r3, r0
900225c0:	141b      	asrs	r3, r3, #16
900225c2:	f53f af0b 	bmi.w	900223dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900225c6:	3a01      	subs	r2, #1
900225c8:	4293      	cmp	r3, r2
900225ca:	f6bf af07 	bge.w	900223dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900225ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900225d0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
900225d4:	9311      	str	r3, [sp, #68]	@ 0x44
900225d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900225d8:	930c      	str	r3, [sp, #48]	@ 0x30
900225da:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900225dc:	2b00      	cmp	r3, #0
900225de:	dc70      	bgt.n	900226c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900225e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900225e2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900225e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900225e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900225ec:	930a      	str	r3, [sp, #40]	@ 0x28
900225ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900225f0:	2b00      	cmp	r3, #0
900225f2:	f340 8124 	ble.w	9002283e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900225f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900225fa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900225fc:	ee30 0a04 	vadd.f32	s0, s0, s8
90022600:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022604:	eef0 6a62 	vmov.f32	s13, s5
90022608:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002260c:	ee31 1a05 	vadd.f32	s2, s2, s10
90022610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022614:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90022618:	eef0 6a43 	vmov.f32	s13, s6
9002261c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022620:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90022624:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022628:	ee61 7a27 	vmul.f32	s15, s2, s15
9002262c:	ee77 2a62 	vsub.f32	s5, s14, s5
90022630:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022634:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022638:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002263c:	ee12 2a90 	vmov	r2, s5
90022640:	eef0 2a47 	vmov.f32	s5, s14
90022644:	fb92 f3f3 	sdiv	r3, r2, r3
90022648:	ee13 2a10 	vmov	r2, s6
9002264c:	9321      	str	r3, [sp, #132]	@ 0x84
9002264e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022650:	eeb0 3a67 	vmov.f32	s6, s15
90022654:	fb92 f3f3 	sdiv	r3, r2, r3
90022658:	9322      	str	r3, [sp, #136]	@ 0x88
9002265a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002265c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002265e:	3b01      	subs	r3, #1
90022660:	930e      	str	r3, [sp, #56]	@ 0x38
90022662:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022664:	bf08      	it	eq
90022666:	4613      	moveq	r3, r2
90022668:	9309      	str	r3, [sp, #36]	@ 0x24
9002266a:	e68c      	b.n	90022386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002266c:	b149      	cbz	r1, 90022682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9002266e:	5cb2      	ldrb	r2, [r6, r2]
90022670:	4628      	mov	r0, r5
90022672:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022676:	4422      	add	r2, r4
90022678:	46ac      	mov	ip, r5
9002267a:	e6f1      	b.n	90022460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002267c:	4628      	mov	r0, r5
9002267e:	462a      	mov	r2, r5
90022680:	e6ee      	b.n	90022460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022682:	4628      	mov	r0, r5
90022684:	462a      	mov	r2, r5
90022686:	e7f7      	b.n	90022678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90022688:	1c47      	adds	r7, r0, #1
9002268a:	f53f af69 	bmi.w	90022560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002268e:	42ba      	cmp	r2, r7
90022690:	f6ff af66 	blt.w	90022560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022694:	1c6f      	adds	r7, r5, #1
90022696:	f53f af63 	bmi.w	90022560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002269a:	42be      	cmp	r6, r7
9002269c:	f6ff af60 	blt.w	90022560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900226a0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900226a2:	b236      	sxth	r6, r6
900226a4:	b212      	sxth	r2, r2
900226a6:	9002      	str	r0, [sp, #8]
900226a8:	9601      	str	r6, [sp, #4]
900226aa:	9200      	str	r2, [sp, #0]
900226ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900226ae:	e9cd 1705 	strd	r1, r7, [sp, #20]
900226b2:	e9cd 5303 	strd	r5, r3, [sp, #12]
900226b6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
900226ba:	4623      	mov	r3, r4
900226bc:	f7ff fd59 	bl	90022172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900226c0:	e74e      	b.n	90022560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900226c2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900226c4:	9820      	ldr	r0, [sp, #128]	@ 0x80
900226c6:	f3c2 3103 	ubfx	r1, r2, #12, #4
900226ca:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900226cc:	9a26      	ldr	r2, [sp, #152]	@ 0x98
900226ce:	1400      	asrs	r0, r0, #16
900226d0:	142d      	asrs	r5, r5, #16
900226d2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900226d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900226d8:	f3c3 3303 	ubfx	r3, r3, #12, #4
900226dc:	fb02 5000 	mla	r0, r2, r0, r5
900226e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900226e2:	f815 9000 	ldrb.w	r9, [r5, r0]
900226e6:	182e      	adds	r6, r5, r0
900226e8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
900226ec:	eb04 0509 	add.w	r5, r4, r9
900226f0:	2b00      	cmp	r3, #0
900226f2:	f000 8096 	beq.w	90022822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
900226f6:	7877      	ldrb	r7, [r6, #1]
900226f8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900226fc:	4427      	add	r7, r4
900226fe:	2900      	cmp	r1, #0
90022700:	f000 8097 	beq.w	90022832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022704:	18b0      	adds	r0, r6, r2
90022706:	5cb2      	ldrb	r2, [r6, r2]
90022708:	7840      	ldrb	r0, [r0, #1]
9002270a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002270e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022712:	4422      	add	r2, r4
90022714:	4420      	add	r0, r4
90022716:	b29b      	uxth	r3, r3
90022718:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002271a:	b289      	uxth	r1, r1
9002271c:	f895 b002 	ldrb.w	fp, [r5, #2]
90022720:	f8b6 c000 	ldrh.w	ip, [r6]
90022724:	fb03 f801 	mul.w	r8, r3, r1
90022728:	011b      	lsls	r3, r3, #4
9002272a:	78be      	ldrb	r6, [r7, #2]
9002272c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90022730:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022734:	eba3 0308 	sub.w	r3, r3, r8
90022738:	f814 9009 	ldrb.w	r9, [r4, r9]
9002273c:	b289      	uxth	r1, r1
9002273e:	b29b      	uxth	r3, r3
90022740:	ebae 0e01 	sub.w	lr, lr, r1
90022744:	435e      	muls	r6, r3
90022746:	fa1f fe8e 	uxth.w	lr, lr
9002274a:	9310      	str	r3, [sp, #64]	@ 0x40
9002274c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002274e:	fb0e 660b 	mla	r6, lr, fp, r6
90022752:	f892 b002 	ldrb.w	fp, [r2, #2]
90022756:	fb01 660b 	mla	r6, r1, fp, r6
9002275a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002275e:	fb08 660b 	mla	r6, r8, fp, r6
90022762:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90022766:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9002276a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002276e:	fb1b fb03 	smulbb	fp, fp, r3
90022772:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022774:	fb06 b60a 	mla	r6, r6, sl, fp
90022778:	f895 b001 	ldrb.w	fp, [r5, #1]
9002277c:	787d      	ldrb	r5, [r7, #1]
9002277e:	783f      	ldrb	r7, [r7, #0]
90022780:	b2b6      	uxth	r6, r6
90022782:	435d      	muls	r5, r3
90022784:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022786:	fb0e 550b 	mla	r5, lr, fp, r5
9002278a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002278e:	fb01 550b 	mla	r5, r1, fp, r5
90022792:	f890 b001 	ldrb.w	fp, [r0, #1]
90022796:	fb08 550b 	mla	r5, r8, fp, r5
9002279a:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002279e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900227a2:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900227a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
900227aa:	fa5f fc8c 	uxtb.w	ip, ip
900227ae:	fb1b fb03 	smulbb	fp, fp, r3
900227b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900227b4:	437b      	muls	r3, r7
900227b6:	7817      	ldrb	r7, [r2, #0]
900227b8:	fb05 b50a 	mla	r5, r5, sl, fp
900227bc:	fb0e 3309 	mla	r3, lr, r9, r3
900227c0:	b2ad      	uxth	r5, r5
900227c2:	fb01 3307 	mla	r3, r1, r7, r3
900227c6:	7807      	ldrb	r7, [r0, #0]
900227c8:	f105 0b01 	add.w	fp, r5, #1
900227cc:	fb08 3707 	mla	r7, r8, r7, r3
900227d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900227d2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900227d6:	fb1c fc03 	smulbb	ip, ip, r3
900227da:	f3c7 2707 	ubfx	r7, r7, #8, #8
900227de:	1c73      	adds	r3, r6, #1
900227e0:	096d      	lsrs	r5, r5, #5
900227e2:	fb07 c70a 	mla	r7, r7, sl, ip
900227e6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900227ea:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900227ee:	b2bf      	uxth	r7, r7
900227f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900227f2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
900227f6:	1c7a      	adds	r2, r7, #1
900227f8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900227fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022800:	4316      	orrs	r6, r2
90022802:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022804:	432e      	orrs	r6, r5
90022806:	f823 6b02 	strh.w	r6, [r3], #2
9002280a:	930c      	str	r3, [sp, #48]	@ 0x30
9002280c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002280e:	4413      	add	r3, r2
90022810:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022812:	931f      	str	r3, [sp, #124]	@ 0x7c
90022814:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022816:	4413      	add	r3, r2
90022818:	9320      	str	r3, [sp, #128]	@ 0x80
9002281a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002281c:	3b01      	subs	r3, #1
9002281e:	9311      	str	r3, [sp, #68]	@ 0x44
90022820:	e6db      	b.n	900225da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90022822:	b149      	cbz	r1, 90022838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022824:	5cb2      	ldrb	r2, [r6, r2]
90022826:	4628      	mov	r0, r5
90022828:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002282c:	4422      	add	r2, r4
9002282e:	462f      	mov	r7, r5
90022830:	e771      	b.n	90022716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022832:	4628      	mov	r0, r5
90022834:	462a      	mov	r2, r5
90022836:	e76e      	b.n	90022716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022838:	4628      	mov	r0, r5
9002283a:	462a      	mov	r2, r5
9002283c:	e7f7      	b.n	9002282e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002283e:	b015      	add	sp, #84	@ 0x54
90022840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022844:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022848:	880f      	ldrh	r7, [r1, #0]
9002284a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002284e:	023c      	lsls	r4, r7, #8
90022850:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90022854:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90022858:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
9002285c:	017c      	lsls	r4, r7, #5
9002285e:	00ff      	lsls	r7, r7, #3
90022860:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90022864:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90022868:	b2ff      	uxtb	r7, r7
9002286a:	ea4b 0404 	orr.w	r4, fp, r4
9002286e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90022872:	4327      	orrs	r7, r4
90022874:	fb05 ca0e 	mla	sl, r5, lr, ip
90022878:	2d00      	cmp	r5, #0
9002287a:	9701      	str	r7, [sp, #4]
9002287c:	eb02 080a 	add.w	r8, r2, sl
90022880:	db7e      	blt.n	90022980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022882:	45a9      	cmp	r9, r5
90022884:	dd7c      	ble.n	90022980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022886:	f1bc 0f00 	cmp.w	ip, #0
9002288a:	db77      	blt.n	9002297c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9002288c:	45e6      	cmp	lr, ip
9002288e:	dd75      	ble.n	9002297c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022890:	f812 700a 	ldrb.w	r7, [r2, sl]
90022894:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022898:	441f      	add	r7, r3
9002289a:	f11c 0201 	adds.w	r2, ip, #1
9002289e:	d472      	bmi.n	90022986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900228a0:	4596      	cmp	lr, r2
900228a2:	dd70      	ble.n	90022986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900228a4:	2800      	cmp	r0, #0
900228a6:	d06e      	beq.n	90022986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900228a8:	f898 4001 	ldrb.w	r4, [r8, #1]
900228ac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900228b0:	441c      	add	r4, r3
900228b2:	3501      	adds	r5, #1
900228b4:	d46b      	bmi.n	9002298e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900228b6:	45a9      	cmp	r9, r5
900228b8:	dd69      	ble.n	9002298e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900228ba:	2e00      	cmp	r6, #0
900228bc:	d067      	beq.n	9002298e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900228be:	f1bc 0f00 	cmp.w	ip, #0
900228c2:	db62      	blt.n	9002298a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900228c4:	45e6      	cmp	lr, ip
900228c6:	dd60      	ble.n	9002298a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
900228c8:	f818 500e 	ldrb.w	r5, [r8, lr]
900228cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900228d0:	441d      	add	r5, r3
900228d2:	f11c 0201 	adds.w	r2, ip, #1
900228d6:	d45d      	bmi.n	90022994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900228d8:	4596      	cmp	lr, r2
900228da:	dd5b      	ble.n	90022994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900228dc:	2800      	cmp	r0, #0
900228de:	d059      	beq.n	90022994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
900228e0:	44c6      	add	lr, r8
900228e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
900228e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900228ea:	4413      	add	r3, r2
900228ec:	b280      	uxth	r0, r0
900228ee:	f897 e002 	ldrb.w	lr, [r7, #2]
900228f2:	b2b2      	uxth	r2, r6
900228f4:	f897 9000 	ldrb.w	r9, [r7]
900228f8:	787f      	ldrb	r7, [r7, #1]
900228fa:	fb00 f602 	mul.w	r6, r0, r2
900228fe:	0100      	lsls	r0, r0, #4
90022900:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022904:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022908:	1b80      	subs	r0, r0, r6
9002290a:	fa1f fc82 	uxth.w	ip, r2
9002290e:	b282      	uxth	r2, r0
90022910:	78a0      	ldrb	r0, [r4, #2]
90022912:	eba8 080c 	sub.w	r8, r8, ip
90022916:	4350      	muls	r0, r2
90022918:	fa1f f888 	uxth.w	r8, r8
9002291c:	fb08 0e0e 	mla	lr, r8, lr, r0
90022920:	78a8      	ldrb	r0, [r5, #2]
90022922:	fb0c e000 	mla	r0, ip, r0, lr
90022926:	f893 e002 	ldrb.w	lr, [r3, #2]
9002292a:	fb06 0e0e 	mla	lr, r6, lr, r0
9002292e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90022932:	f894 e000 	ldrb.w	lr, [r4]
90022936:	fb02 fe0e 	mul.w	lr, r2, lr
9002293a:	fb08 e909 	mla	r9, r8, r9, lr
9002293e:	f895 e000 	ldrb.w	lr, [r5]
90022942:	fb0c 990e 	mla	r9, ip, lr, r9
90022946:	f893 e000 	ldrb.w	lr, [r3]
9002294a:	785b      	ldrb	r3, [r3, #1]
9002294c:	fb06 9e0e 	mla	lr, r6, lr, r9
90022950:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022954:	ea4e 0e00 	orr.w	lr, lr, r0
90022958:	7860      	ldrb	r0, [r4, #1]
9002295a:	4350      	muls	r0, r2
9002295c:	786a      	ldrb	r2, [r5, #1]
9002295e:	fb08 0007 	mla	r0, r8, r7, r0
90022962:	fb0c 0202 	mla	r2, ip, r2, r0
90022966:	fb06 2303 	mla	r3, r6, r3, r2
9002296a:	095b      	lsrs	r3, r3, #5
9002296c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022970:	ea4e 0303 	orr.w	r3, lr, r3
90022974:	800b      	strh	r3, [r1, #0]
90022976:	b003      	add	sp, #12
90022978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002297c:	af01      	add	r7, sp, #4
9002297e:	e78c      	b.n	9002289a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022980:	ac01      	add	r4, sp, #4
90022982:	4627      	mov	r7, r4
90022984:	e795      	b.n	900228b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022986:	ac01      	add	r4, sp, #4
90022988:	e793      	b.n	900228b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002298a:	ad01      	add	r5, sp, #4
9002298c:	e7a1      	b.n	900228d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9002298e:	ab01      	add	r3, sp, #4
90022990:	461d      	mov	r5, r3
90022992:	e7ab      	b.n	900228ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022994:	ab01      	add	r3, sp, #4
90022996:	e7a9      	b.n	900228ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002299c:	b08f      	sub	sp, #60	@ 0x3c
9002299e:	920c      	str	r2, [sp, #48]	@ 0x30
900229a0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900229a2:	900d      	str	r0, [sp, #52]	@ 0x34
900229a4:	910a      	str	r1, [sp, #40]	@ 0x28
900229a6:	6850      	ldr	r0, [r2, #4]
900229a8:	9306      	str	r3, [sp, #24]
900229aa:	6812      	ldr	r2, [r2, #0]
900229ac:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900229b0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900229b4:	fb00 1303 	mla	r3, r0, r3, r1
900229b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900229bc:	9307      	str	r3, [sp, #28]
900229be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900229c0:	681b      	ldr	r3, [r3, #0]
900229c2:	9308      	str	r3, [sp, #32]
900229c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900229c6:	685c      	ldr	r4, [r3, #4]
900229c8:	3404      	adds	r4, #4
900229ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900229cc:	2b00      	cmp	r3, #0
900229ce:	dc03      	bgt.n	900229d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900229d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900229d2:	2b00      	cmp	r3, #0
900229d4:	f340 81d5 	ble.w	90022d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900229d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900229da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900229de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900229e2:	1e48      	subs	r0, r1, #1
900229e4:	1e56      	subs	r6, r2, #1
900229e6:	9b06      	ldr	r3, [sp, #24]
900229e8:	2b00      	cmp	r3, #0
900229ea:	f340 80b6 	ble.w	90022b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900229ee:	ea5f 472b 	movs.w	r7, fp, asr #16
900229f2:	ea4f 4325 	mov.w	r3, r5, asr #16
900229f6:	d406      	bmi.n	90022a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900229f8:	4287      	cmp	r7, r0
900229fa:	da04      	bge.n	90022a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900229fc:	2b00      	cmp	r3, #0
900229fe:	db02      	blt.n	90022a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022a00:	42b3      	cmp	r3, r6
90022a02:	f2c0 80ab 	blt.w	90022b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022a06:	3701      	adds	r7, #1
90022a08:	f100 809c 	bmi.w	90022b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022a0c:	42b9      	cmp	r1, r7
90022a0e:	f2c0 8099 	blt.w	90022b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022a12:	3301      	adds	r3, #1
90022a14:	f100 8096 	bmi.w	90022b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022a18:	429a      	cmp	r2, r3
90022a1a:	f2c0 8093 	blt.w	90022b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022a1e:	9b06      	ldr	r3, [sp, #24]
90022a20:	930b      	str	r3, [sp, #44]	@ 0x2c
90022a22:	9b07      	ldr	r3, [sp, #28]
90022a24:	9309      	str	r3, [sp, #36]	@ 0x24
90022a26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022a28:	2b00      	cmp	r3, #0
90022a2a:	f340 80b4 	ble.w	90022b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022a2e:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022a30:	142e      	asrs	r6, r5, #16
90022a32:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022a34:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022a38:	68c7      	ldr	r7, [r0, #12]
90022a3a:	ea5f 402b 	movs.w	r0, fp, asr #16
90022a3e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022a42:	6892      	ldr	r2, [r2, #8]
90022a44:	f100 80fb 	bmi.w	90022c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022a48:	f102 3cff 	add.w	ip, r2, #4294967295
90022a4c:	4560      	cmp	r0, ip
90022a4e:	f280 80f6 	bge.w	90022c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022a52:	2e00      	cmp	r6, #0
90022a54:	f2c0 80f3 	blt.w	90022c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022a58:	f107 3cff 	add.w	ip, r7, #4294967295
90022a5c:	4566      	cmp	r6, ip
90022a5e:	f280 80ee 	bge.w	90022c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022a62:	b212      	sxth	r2, r2
90022a64:	fb06 0002 	mla	r0, r6, r2, r0
90022a68:	9e08      	ldr	r6, [sp, #32]
90022a6a:	1837      	adds	r7, r6, r0
90022a6c:	5c30      	ldrb	r0, [r6, r0]
90022a6e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022a72:	eb04 0c08 	add.w	ip, r4, r8
90022a76:	2b00      	cmp	r3, #0
90022a78:	f000 80d3 	beq.w	90022c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022a7c:	787e      	ldrb	r6, [r7, #1]
90022a7e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022a82:	4426      	add	r6, r4
90022a84:	2900      	cmp	r1, #0
90022a86:	f000 80d4 	beq.w	90022c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022a8a:	18b8      	adds	r0, r7, r2
90022a8c:	5cba      	ldrb	r2, [r7, r2]
90022a8e:	7840      	ldrb	r0, [r0, #1]
90022a90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022a94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022a98:	4422      	add	r2, r4
90022a9a:	4420      	add	r0, r4
90022a9c:	b29b      	uxth	r3, r3
90022a9e:	78b7      	ldrb	r7, [r6, #2]
90022aa0:	b289      	uxth	r1, r1
90022aa2:	f89c a002 	ldrb.w	sl, [ip, #2]
90022aa6:	f89c c001 	ldrb.w	ip, [ip, #1]
90022aaa:	fb03 f901 	mul.w	r9, r3, r1
90022aae:	011b      	lsls	r3, r3, #4
90022ab0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022ab4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022ab8:	eba3 0309 	sub.w	r3, r3, r9
90022abc:	b289      	uxth	r1, r1
90022abe:	b29b      	uxth	r3, r3
90022ac0:	ebae 0e01 	sub.w	lr, lr, r1
90022ac4:	435f      	muls	r7, r3
90022ac6:	fa1f fe8e 	uxth.w	lr, lr
90022aca:	fb0e 770a 	mla	r7, lr, sl, r7
90022ace:	f892 a002 	ldrb.w	sl, [r2, #2]
90022ad2:	fb01 770a 	mla	r7, r1, sl, r7
90022ad6:	f890 a002 	ldrb.w	sl, [r0, #2]
90022ada:	fb09 7a0a 	mla	sl, r9, sl, r7
90022ade:	f814 7008 	ldrb.w	r7, [r4, r8]
90022ae2:	f896 8000 	ldrb.w	r8, [r6]
90022ae6:	7876      	ldrb	r6, [r6, #1]
90022ae8:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022aec:	fb03 f808 	mul.w	r8, r3, r8
90022af0:	4373      	muls	r3, r6
90022af2:	fb0e 8807 	mla	r8, lr, r7, r8
90022af6:	7817      	ldrb	r7, [r2, #0]
90022af8:	fb0e 330c 	mla	r3, lr, ip, r3
90022afc:	fb01 8807 	mla	r8, r1, r7, r8
90022b00:	7807      	ldrb	r7, [r0, #0]
90022b02:	fb09 8707 	mla	r7, r9, r7, r8
90022b06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022b0a:	ea47 070a 	orr.w	r7, r7, sl
90022b0e:	f892 a001 	ldrb.w	sl, [r2, #1]
90022b12:	fb01 310a 	mla	r1, r1, sl, r3
90022b16:	f890 a001 	ldrb.w	sl, [r0, #1]
90022b1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b1c:	fb09 1a0a 	mla	sl, r9, sl, r1
90022b20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022b24:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022b28:	ea47 070a 	orr.w	r7, r7, sl
90022b2c:	801f      	strh	r7, [r3, #0]
90022b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b30:	3302      	adds	r3, #2
90022b32:	9309      	str	r3, [sp, #36]	@ 0x24
90022b34:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022b36:	449b      	add	fp, r3
90022b38:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022b3a:	441d      	add	r5, r3
90022b3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022b3e:	3b01      	subs	r3, #1
90022b40:	930b      	str	r3, [sp, #44]	@ 0x2c
90022b42:	e770      	b.n	90022a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022b44:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022b46:	449b      	add	fp, r3
90022b48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022b4a:	441d      	add	r5, r3
90022b4c:	9b06      	ldr	r3, [sp, #24]
90022b4e:	3b01      	subs	r3, #1
90022b50:	9306      	str	r3, [sp, #24]
90022b52:	9b07      	ldr	r3, [sp, #28]
90022b54:	3302      	adds	r3, #2
90022b56:	9307      	str	r3, [sp, #28]
90022b58:	e745      	b.n	900229e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022b5a:	d023      	beq.n	90022ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022b5c:	9b06      	ldr	r3, [sp, #24]
90022b5e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90022b60:	3b01      	subs	r3, #1
90022b62:	fb00 b003 	mla	r0, r0, r3, fp
90022b66:	1400      	asrs	r0, r0, #16
90022b68:	f53f af59 	bmi.w	90022a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b6c:	3901      	subs	r1, #1
90022b6e:	4288      	cmp	r0, r1
90022b70:	f6bf af55 	bge.w	90022a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b74:	991c      	ldr	r1, [sp, #112]	@ 0x70
90022b76:	fb01 5303 	mla	r3, r1, r3, r5
90022b7a:	141b      	asrs	r3, r3, #16
90022b7c:	f53f af4f 	bmi.w	90022a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b80:	3a01      	subs	r2, #1
90022b82:	4293      	cmp	r3, r2
90022b84:	f6bf af4b 	bge.w	90022a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022b88:	9b06      	ldr	r3, [sp, #24]
90022b8a:	9309      	str	r3, [sp, #36]	@ 0x24
90022b8c:	9b07      	ldr	r3, [sp, #28]
90022b8e:	930b      	str	r3, [sp, #44]	@ 0x2c
90022b90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b92:	2b00      	cmp	r3, #0
90022b94:	dc70      	bgt.n	90022c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90022b96:	9b06      	ldr	r3, [sp, #24]
90022b98:	9a07      	ldr	r2, [sp, #28]
90022b9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022b9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022ba2:	9307      	str	r3, [sp, #28]
90022ba4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022ba6:	2b00      	cmp	r3, #0
90022ba8:	f340 80eb 	ble.w	90022d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022bac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022bb0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022bb2:	ee30 0a04 	vadd.f32	s0, s0, s8
90022bb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022bba:	eef0 6a62 	vmov.f32	s13, s5
90022bbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022bc2:	ee31 1a05 	vadd.f32	s2, s2, s10
90022bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022bca:	ee16 ba90 	vmov	fp, s13
90022bce:	eef0 6a43 	vmov.f32	s13, s6
90022bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022bd6:	ee16 5a90 	vmov	r5, s13
90022bda:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022bde:	ee61 7a27 	vmul.f32	s15, s2, s15
90022be2:	ee77 2a62 	vsub.f32	s5, s14, s5
90022be6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022bea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022bee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022bf2:	ee12 2a90 	vmov	r2, s5
90022bf6:	eef0 2a47 	vmov.f32	s5, s14
90022bfa:	fb92 f3f3 	sdiv	r3, r2, r3
90022bfe:	ee13 2a10 	vmov	r2, s6
90022c02:	931b      	str	r3, [sp, #108]	@ 0x6c
90022c04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022c06:	eeb0 3a67 	vmov.f32	s6, s15
90022c0a:	fb92 f3f3 	sdiv	r3, r2, r3
90022c0e:	931c      	str	r3, [sp, #112]	@ 0x70
90022c10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022c12:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022c14:	3b01      	subs	r3, #1
90022c16:	930a      	str	r3, [sp, #40]	@ 0x28
90022c18:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022c1a:	bf08      	it	eq
90022c1c:	4613      	moveq	r3, r2
90022c1e:	9306      	str	r3, [sp, #24]
90022c20:	e6d3      	b.n	900229ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90022c22:	b149      	cbz	r1, 90022c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022c24:	5cba      	ldrb	r2, [r7, r2]
90022c26:	4660      	mov	r0, ip
90022c28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022c2c:	4422      	add	r2, r4
90022c2e:	4666      	mov	r6, ip
90022c30:	e734      	b.n	90022a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022c32:	4660      	mov	r0, ip
90022c34:	4662      	mov	r2, ip
90022c36:	e731      	b.n	90022a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022c38:	4660      	mov	r0, ip
90022c3a:	4662      	mov	r2, ip
90022c3c:	e7f7      	b.n	90022c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022c3e:	f110 0c01 	adds.w	ip, r0, #1
90022c42:	f53f af74 	bmi.w	90022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022c46:	4562      	cmp	r2, ip
90022c48:	f6ff af71 	blt.w	90022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022c4c:	f116 0c01 	adds.w	ip, r6, #1
90022c50:	f53f af6d 	bmi.w	90022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022c54:	4567      	cmp	r7, ip
90022c56:	f6ff af6a 	blt.w	90022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022c5a:	b23f      	sxth	r7, r7
90022c5c:	b212      	sxth	r2, r2
90022c5e:	9701      	str	r7, [sp, #4]
90022c60:	9200      	str	r2, [sp, #0]
90022c62:	e9cd 3104 	strd	r3, r1, [sp, #16]
90022c66:	e9cd 0602 	strd	r0, r6, [sp, #8]
90022c6a:	4623      	mov	r3, r4
90022c6c:	980d      	ldr	r0, [sp, #52]	@ 0x34
90022c6e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90022c72:	f7ff fde7 	bl	90022844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90022c76:	e75a      	b.n	90022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022c78:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022c7a:	ea4f 462b 	mov.w	r6, fp, asr #16
90022c7e:	1428      	asrs	r0, r5, #16
90022c80:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022c84:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022c88:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022c8c:	fb02 6000 	mla	r0, r2, r0, r6
90022c90:	9e08      	ldr	r6, [sp, #32]
90022c92:	f816 8000 	ldrb.w	r8, [r6, r0]
90022c96:	1837      	adds	r7, r6, r0
90022c98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90022c9c:	eb04 0c08 	add.w	ip, r4, r8
90022ca0:	2b00      	cmp	r3, #0
90022ca2:	d060      	beq.n	90022d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90022ca4:	787e      	ldrb	r6, [r7, #1]
90022ca6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022caa:	4426      	add	r6, r4
90022cac:	2900      	cmp	r1, #0
90022cae:	d062      	beq.n	90022d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90022cb0:	18b8      	adds	r0, r7, r2
90022cb2:	5cba      	ldrb	r2, [r7, r2]
90022cb4:	7840      	ldrb	r0, [r0, #1]
90022cb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022cba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022cbe:	4422      	add	r2, r4
90022cc0:	4420      	add	r0, r4
90022cc2:	b29b      	uxth	r3, r3
90022cc4:	78b7      	ldrb	r7, [r6, #2]
90022cc6:	b289      	uxth	r1, r1
90022cc8:	f89c a002 	ldrb.w	sl, [ip, #2]
90022ccc:	f89c c001 	ldrb.w	ip, [ip, #1]
90022cd0:	fb03 f901 	mul.w	r9, r3, r1
90022cd4:	011b      	lsls	r3, r3, #4
90022cd6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022cda:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022cde:	eba3 0309 	sub.w	r3, r3, r9
90022ce2:	b289      	uxth	r1, r1
90022ce4:	b29b      	uxth	r3, r3
90022ce6:	ebae 0e01 	sub.w	lr, lr, r1
90022cea:	435f      	muls	r7, r3
90022cec:	fa1f fe8e 	uxth.w	lr, lr
90022cf0:	fb0e 770a 	mla	r7, lr, sl, r7
90022cf4:	f892 a002 	ldrb.w	sl, [r2, #2]
90022cf8:	fb01 770a 	mla	r7, r1, sl, r7
90022cfc:	f890 a002 	ldrb.w	sl, [r0, #2]
90022d00:	fb09 7a0a 	mla	sl, r9, sl, r7
90022d04:	f814 7008 	ldrb.w	r7, [r4, r8]
90022d08:	f896 8000 	ldrb.w	r8, [r6]
90022d0c:	7876      	ldrb	r6, [r6, #1]
90022d0e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022d12:	fb03 f808 	mul.w	r8, r3, r8
90022d16:	4373      	muls	r3, r6
90022d18:	7856      	ldrb	r6, [r2, #1]
90022d1a:	fb0e 8807 	mla	r8, lr, r7, r8
90022d1e:	7817      	ldrb	r7, [r2, #0]
90022d20:	fb0e 330c 	mla	r3, lr, ip, r3
90022d24:	fb01 8807 	mla	r8, r1, r7, r8
90022d28:	7807      	ldrb	r7, [r0, #0]
90022d2a:	fb01 3306 	mla	r3, r1, r6, r3
90022d2e:	fb09 8707 	mla	r7, r9, r7, r8
90022d32:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022d36:	ea47 070a 	orr.w	r7, r7, sl
90022d3a:	f890 a001 	ldrb.w	sl, [r0, #1]
90022d3e:	fb09 3a0a 	mla	sl, r9, sl, r3
90022d42:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022d44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022d48:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022d4c:	ea47 070a 	orr.w	r7, r7, sl
90022d50:	f823 7b02 	strh.w	r7, [r3], #2
90022d54:	930b      	str	r3, [sp, #44]	@ 0x2c
90022d56:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022d58:	449b      	add	fp, r3
90022d5a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022d5c:	441d      	add	r5, r3
90022d5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022d60:	3b01      	subs	r3, #1
90022d62:	9309      	str	r3, [sp, #36]	@ 0x24
90022d64:	e714      	b.n	90022b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90022d66:	b149      	cbz	r1, 90022d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90022d68:	5cba      	ldrb	r2, [r7, r2]
90022d6a:	4660      	mov	r0, ip
90022d6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022d70:	4422      	add	r2, r4
90022d72:	4666      	mov	r6, ip
90022d74:	e7a5      	b.n	90022cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022d76:	4660      	mov	r0, ip
90022d78:	4662      	mov	r2, ip
90022d7a:	e7a2      	b.n	90022cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022d7c:	4660      	mov	r0, ip
90022d7e:	4662      	mov	r2, ip
90022d80:	e7f7      	b.n	90022d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90022d82:	b00f      	add	sp, #60	@ 0x3c
90022d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022d88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90022d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d8c:	b085      	sub	sp, #20
90022d8e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90022d92:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90022d96:	9102      	str	r1, [sp, #8]
90022d98:	2c00      	cmp	r4, #0
90022d9a:	fb04 710c 	mla	r1, r4, ip, r7
90022d9e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90022da2:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90022da6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90022daa:	eb02 0e01 	add.w	lr, r2, r1
90022dae:	f2c0 8122 	blt.w	90022ff6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022db2:	45a0      	cmp	r8, r4
90022db4:	f340 811f 	ble.w	90022ff6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022db8:	2f00      	cmp	r7, #0
90022dba:	f2c0 811a 	blt.w	90022ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022dbe:	45bc      	cmp	ip, r7
90022dc0:	f340 8117 	ble.w	90022ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022dc4:	5c52      	ldrb	r2, [r2, r1]
90022dc6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90022dca:	1c7a      	adds	r2, r7, #1
90022dcc:	f100 8116 	bmi.w	90022ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022dd0:	4594      	cmp	ip, r2
90022dd2:	f340 8113 	ble.w	90022ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022dd6:	2e00      	cmp	r6, #0
90022dd8:	f000 8112 	beq.w	90023000 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022ddc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022de0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022de4:	3401      	adds	r4, #1
90022de6:	f100 810f 	bmi.w	90023008 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022dea:	45a0      	cmp	r8, r4
90022dec:	f340 810c 	ble.w	90023008 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022df0:	2800      	cmp	r0, #0
90022df2:	f000 810c 	beq.w	9002300e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022df6:	2f00      	cmp	r7, #0
90022df8:	f2c0 8104 	blt.w	90023004 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022dfc:	45bc      	cmp	ip, r7
90022dfe:	f340 8101 	ble.w	90023004 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022e02:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022e06:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022e0a:	3701      	adds	r7, #1
90022e0c:	f100 8102 	bmi.w	90023014 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022e10:	45bc      	cmp	ip, r7
90022e12:	f340 80ff 	ble.w	90023014 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022e16:	2e00      	cmp	r6, #0
90022e18:	f000 80fe 	beq.w	90023018 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022e1c:	44f4      	add	ip, lr
90022e1e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90022e22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022e26:	b2b6      	uxth	r6, r6
90022e28:	b280      	uxth	r0, r0
90022e2a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022e2e:	fb00 fe06 	mul.w	lr, r0, r6
90022e32:	0136      	lsls	r6, r6, #4
90022e34:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022e38:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022e3c:	eba6 070e 	sub.w	r7, r6, lr
90022e40:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90022e44:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022e48:	b280      	uxth	r0, r0
90022e4a:	b2bf      	uxth	r7, r7
90022e4c:	1a1b      	subs	r3, r3, r0
90022e4e:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022e52:	fb0a f607 	mul.w	r6, sl, r7
90022e56:	b29b      	uxth	r3, r3
90022e58:	fb0b 6603 	mla	r6, fp, r3, r6
90022e5c:	fb00 6609 	mla	r6, r0, r9, r6
90022e60:	fb0e 6608 	mla	r6, lr, r8, r6
90022e64:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022e68:	9600      	str	r6, [sp, #0]
90022e6a:	2e00      	cmp	r6, #0
90022e6c:	f000 80be 	beq.w	90022fec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90022e70:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90022e74:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90022e78:	9e02      	ldr	r6, [sp, #8]
90022e7a:	fb0b fc0c 	mul.w	ip, fp, ip
90022e7e:	fb0b f505 	mul.w	r5, fp, r5
90022e82:	8836      	ldrh	r6, [r6, #0]
90022e84:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022e88:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022e8c:	9501      	str	r5, [sp, #4]
90022e8e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90022e92:	44dc      	add	ip, fp
90022e94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e98:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90022e9c:	9503      	str	r5, [sp, #12]
90022e9e:	9d01      	ldr	r5, [sp, #4]
90022ea0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90022ea4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022ea8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90022eac:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90022eb0:	fb0a fc0c 	mul.w	ip, sl, ip
90022eb4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022eb8:	fb0a fa01 	mul.w	sl, sl, r1
90022ebc:	ea4f 251c 	mov.w	r5, ip, lsr #8
90022ec0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022ec4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90022ec8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022ecc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90022ed0:	4465      	add	r5, ip
90022ed2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022ed6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90022eda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022ede:	fb09 fc0c 	mul.w	ip, r9, ip
90022ee2:	0a2d      	lsrs	r5, r5, #8
90022ee4:	fb09 f904 	mul.w	r9, r9, r4
90022ee8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022eec:	ea4f 211c 	mov.w	r1, ip, lsr #8
90022ef0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022ef4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90022ef8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022efc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022f00:	437d      	muls	r5, r7
90022f02:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022f06:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90022f0a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90022f0e:	4461      	add	r1, ip
90022f10:	fb08 f404 	mul.w	r4, r8, r4
90022f14:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022f18:	fb08 f802 	mul.w	r8, r8, r2
90022f1c:	0a09      	lsrs	r1, r1, #8
90022f1e:	0a22      	lsrs	r2, r4, #8
90022f20:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90022f24:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022f28:	fb07 f70a 	mul.w	r7, r7, sl
90022f2c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90022f30:	4414      	add	r4, r2
90022f32:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90022f36:	0a24      	lsrs	r4, r4, #8
90022f38:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022f3c:	9a03      	ldr	r2, [sp, #12]
90022f3e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90022f42:	fb02 5503 	mla	r5, r2, r3, r5
90022f46:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022f4a:	9a00      	ldr	r2, [sp, #0]
90022f4c:	fb04 540e 	mla	r4, r4, lr, r5
90022f50:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90022f54:	1235      	asrs	r5, r6, #8
90022f56:	fb01 4100 	mla	r1, r1, r0, r4
90022f5a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022f5e:	0a09      	lsrs	r1, r1, #8
90022f60:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90022f64:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90022f68:	fb03 7101 	mla	r1, r3, r1, r7
90022f6c:	fb0e 1e08 	mla	lr, lr, r8, r1
90022f70:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90022f74:	fb00 e101 	mla	r1, r0, r1, lr
90022f78:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90022f7c:	b287      	uxth	r7, r0
90022f7e:	0a09      	lsrs	r1, r1, #8
90022f80:	437a      	muls	r2, r7
90022f82:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90022f86:	1c53      	adds	r3, r2, #1
90022f88:	4321      	orrs	r1, r4
90022f8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022f8e:	0c0a      	lsrs	r2, r1, #16
90022f90:	f3c1 2407 	ubfx	r4, r1, #8, #8
90022f94:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90022f98:	b2c8      	uxtb	r0, r1
90022f9a:	fb12 f207 	smulbb	r2, r2, r7
90022f9e:	fb14 f407 	smulbb	r4, r4, r7
90022fa2:	b2db      	uxtb	r3, r3
90022fa4:	fb10 f007 	smulbb	r0, r0, r7
90022fa8:	fb05 2503 	mla	r5, r5, r3, r2
90022fac:	10f2      	asrs	r2, r6, #3
90022fae:	00f6      	lsls	r6, r6, #3
90022fb0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022fb4:	b2ad      	uxth	r5, r5
90022fb6:	b2f6      	uxtb	r6, r6
90022fb8:	fb02 4203 	mla	r2, r2, r3, r4
90022fbc:	fb06 0303 	mla	r3, r6, r3, r0
90022fc0:	b294      	uxth	r4, r2
90022fc2:	b299      	uxth	r1, r3
90022fc4:	1c6b      	adds	r3, r5, #1
90022fc6:	1c62      	adds	r2, r4, #1
90022fc8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022fcc:	1c4b      	adds	r3, r1, #1
90022fce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90022fd2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022fd6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022fda:	0952      	lsrs	r2, r2, #5
90022fdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022fe0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022fe4:	432b      	orrs	r3, r5
90022fe6:	4313      	orrs	r3, r2
90022fe8:	9a02      	ldr	r2, [sp, #8]
90022fea:	8013      	strh	r3, [r2, #0]
90022fec:	b005      	add	sp, #20
90022fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022ff2:	2500      	movs	r5, #0
90022ff4:	e6e9      	b.n	90022dca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90022ff6:	2100      	movs	r1, #0
90022ff8:	460d      	mov	r5, r1
90022ffa:	e6f3      	b.n	90022de4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022ffc:	2100      	movs	r1, #0
90022ffe:	e6f1      	b.n	90022de4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023000:	4631      	mov	r1, r6
90023002:	e6ef      	b.n	90022de4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023004:	2400      	movs	r4, #0
90023006:	e700      	b.n	90022e0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90023008:	2200      	movs	r2, #0
9002300a:	4614      	mov	r4, r2
9002300c:	e70b      	b.n	90022e26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002300e:	4602      	mov	r2, r0
90023010:	4604      	mov	r4, r0
90023012:	e708      	b.n	90022e26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023014:	2200      	movs	r2, #0
90023016:	e706      	b.n	90022e26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023018:	4632      	mov	r2, r6
9002301a:	e704      	b.n	90022e26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002301c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002301c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023020:	b09f      	sub	sp, #124	@ 0x7c
90023022:	921b      	str	r2, [sp, #108]	@ 0x6c
90023024:	9309      	str	r3, [sp, #36]	@ 0x24
90023026:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90023028:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
9002302c:	901d      	str	r0, [sp, #116]	@ 0x74
9002302e:	931c      	str	r3, [sp, #112]	@ 0x70
90023030:	6850      	ldr	r0, [r2, #4]
90023032:	9119      	str	r1, [sp, #100]	@ 0x64
90023034:	6812      	ldr	r2, [r2, #0]
90023036:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90023038:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
9002303c:	fb00 1303 	mla	r3, r0, r3, r1
90023040:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023044:	930c      	str	r3, [sp, #48]	@ 0x30
90023046:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023048:	681b      	ldr	r3, [r3, #0]
9002304a:	9312      	str	r3, [sp, #72]	@ 0x48
9002304c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002304e:	685e      	ldr	r6, [r3, #4]
90023050:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90023054:	3604      	adds	r6, #4
90023056:	930d      	str	r3, [sp, #52]	@ 0x34
90023058:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002305a:	2b00      	cmp	r3, #0
9002305c:	dc03      	bgt.n	90023066 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002305e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023060:	2b00      	cmp	r3, #0
90023062:	f340 8387 	ble.w	90023774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023066:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023068:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002306c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023070:	1e48      	subs	r0, r1, #1
90023072:	1e57      	subs	r7, r2, #1
90023074:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023076:	2b00      	cmp	r3, #0
90023078:	f340 8194 	ble.w	900233a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9002307c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002307e:	142b      	asrs	r3, r5, #16
90023080:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023084:	d406      	bmi.n	90023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023086:	4584      	cmp	ip, r0
90023088:	da04      	bge.n	90023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002308a:	2b00      	cmp	r3, #0
9002308c:	db02      	blt.n	90023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002308e:	42bb      	cmp	r3, r7
90023090:	f2c0 8189 	blt.w	900233a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023094:	f11c 0c01 	adds.w	ip, ip, #1
90023098:	f100 8177 	bmi.w	9002338a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002309c:	4561      	cmp	r1, ip
9002309e:	f2c0 8174 	blt.w	9002338a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900230a2:	3301      	adds	r3, #1
900230a4:	f100 8171 	bmi.w	9002338a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900230a8:	429a      	cmp	r2, r3
900230aa:	f2c0 816e 	blt.w	9002338a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900230ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900230b0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900230b2:	931a      	str	r3, [sp, #104]	@ 0x68
900230b4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900230b6:	2b00      	cmp	r3, #0
900230b8:	f340 8193 	ble.w	900233e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900230bc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900230be:	ea4f 4c25 	mov.w	ip, r5, asr #16
900230c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900230c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
900230ca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900230cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900230d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900230d2:	141b      	asrs	r3, r3, #16
900230d4:	f100 81d6 	bmi.w	90023484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900230d8:	f100 38ff 	add.w	r8, r0, #4294967295
900230dc:	4543      	cmp	r3, r8
900230de:	f280 81d1 	bge.w	90023484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900230e2:	f1bc 0f00 	cmp.w	ip, #0
900230e6:	f2c0 81cd 	blt.w	90023484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900230ea:	f10e 38ff 	add.w	r8, lr, #4294967295
900230ee:	45c4      	cmp	ip, r8
900230f0:	f280 81c8 	bge.w	90023484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900230f4:	b200      	sxth	r0, r0
900230f6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900230f8:	fb0c 3300 	mla	r3, ip, r0, r3
900230fc:	eb04 0803 	add.w	r8, r4, r3
90023100:	5ce3      	ldrb	r3, [r4, r3]
90023102:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023106:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002310a:	2a00      	cmp	r2, #0
9002310c:	f000 81af 	beq.w	9002346e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023110:	f898 c001 	ldrb.w	ip, [r8, #1]
90023114:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023118:	940e      	str	r4, [sp, #56]	@ 0x38
9002311a:	0e24      	lsrs	r4, r4, #24
9002311c:	9415      	str	r4, [sp, #84]	@ 0x54
9002311e:	b179      	cbz	r1, 90023140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023120:	eb08 0c00 	add.w	ip, r8, r0
90023124:	f818 0000 	ldrb.w	r0, [r8, r0]
90023128:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002312c:	900a      	str	r0, [sp, #40]	@ 0x28
9002312e:	0e00      	lsrs	r0, r0, #24
90023130:	9013      	str	r0, [sp, #76]	@ 0x4c
90023132:	f89c 0001 	ldrb.w	r0, [ip, #1]
90023136:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002313a:	900f      	str	r0, [sp, #60]	@ 0x3c
9002313c:	0e00      	lsrs	r0, r0, #24
9002313e:	9016      	str	r0, [sp, #88]	@ 0x58
90023140:	b292      	uxth	r2, r2
90023142:	9815      	ldr	r0, [sp, #84]	@ 0x54
90023144:	b289      	uxth	r1, r1
90023146:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023148:	fb02 f901 	mul.w	r9, r2, r1
9002314c:	0112      	lsls	r2, r2, #4
9002314e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023152:	eba2 0809 	sub.w	r8, r2, r9
90023156:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002315a:	b289      	uxth	r1, r1
9002315c:	fa1f f888 	uxth.w	r8, r8
90023160:	1a52      	subs	r2, r2, r1
90023162:	fb08 f000 	mul.w	r0, r8, r0
90023166:	b292      	uxth	r2, r2
90023168:	fb02 000e 	mla	r0, r2, lr, r0
9002316c:	fb01 0004 	mla	r0, r1, r4, r0
90023170:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023172:	fb09 0004 	mla	r0, r9, r4, r0
90023176:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002317a:	2800      	cmp	r0, #0
9002317c:	f000 80fa 	beq.w	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023180:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023184:	d01b      	beq.n	900231be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90023186:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002318a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002318e:	fb0e fa0a 	mul.w	sl, lr, sl
90023192:	fb0e fe03 	mul.w	lr, lr, r3
90023196:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002319a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002319e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900231a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900231a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900231aa:	4453      	add	r3, sl
900231ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900231b0:	0a1b      	lsrs	r3, r3, #8
900231b2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900231b6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900231ba:	ea43 030c 	orr.w	r3, r3, ip
900231be:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900231c0:	2cff      	cmp	r4, #255	@ 0xff
900231c2:	d021      	beq.n	90023208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900231c4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900231c6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900231ca:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900231cc:	fb04 fb0b 	mul.w	fp, r4, fp
900231d0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900231d2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900231d6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900231d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900231dc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900231e0:	fb04 fa0a 	mul.w	sl, r4, sl
900231e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900231e8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900231ec:	44de      	add	lr, fp
900231ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900231f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900231f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900231fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900231fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023202:	ea4e 040a 	orr.w	r4, lr, sl
90023206:	940e      	str	r4, [sp, #56]	@ 0x38
90023208:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002320a:	2cff      	cmp	r4, #255	@ 0xff
9002320c:	d021      	beq.n	90023252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002320e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023210:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023214:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023216:	fb04 fb0b 	mul.w	fp, r4, fp
9002321a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002321c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023220:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023222:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023226:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002322a:	fb04 fa0a 	mul.w	sl, r4, sl
9002322e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023232:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023236:	44de      	add	lr, fp
90023238:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002323c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023240:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023244:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023248:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002324c:	ea4e 040a 	orr.w	r4, lr, sl
90023250:	940a      	str	r4, [sp, #40]	@ 0x28
90023252:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023254:	2cff      	cmp	r4, #255	@ 0xff
90023256:	d021      	beq.n	9002329c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023258:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002325a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002325e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023260:	fb04 fb0b 	mul.w	fp, r4, fp
90023264:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023266:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002326a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002326c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023270:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023274:	fb04 fa0a 	mul.w	sl, r4, sl
90023278:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002327c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023280:	44de      	add	lr, fp
90023282:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023286:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002328a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002328e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023292:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023296:	ea4e 040a 	orr.w	r4, lr, sl
9002329a:	940f      	str	r4, [sp, #60]	@ 0x3c
9002329c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002329e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900232a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900232a6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900232aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900232ac:	fb08 fc0c 	mul.w	ip, r8, ip
900232b0:	fb02 cc0e 	mla	ip, r2, lr, ip
900232b4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900232b8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900232ba:	fb01 cc0e 	mla	ip, r1, lr, ip
900232be:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900232c2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900232c4:	fb09 cc0e 	mla	ip, r9, lr, ip
900232c8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900232cc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900232ce:	fb08 f80e 	mul.w	r8, r8, lr
900232d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900232d6:	fb02 8303 	mla	r3, r2, r3, r8
900232da:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900232dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900232e0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900232e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900232e6:	fb01 330a 	mla	r3, r1, sl, r3
900232ea:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
900232ee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900232f0:	fb09 3901 	mla	r9, r9, r1, r3
900232f4:	883b      	ldrh	r3, [r7, #0]
900232f6:	4342      	muls	r2, r0
900232f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900232fc:	1c50      	adds	r0, r2, #1
900232fe:	1219      	asrs	r1, r3, #8
90023300:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023304:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023308:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002330c:	ea4c 0c09 	orr.w	ip, ip, r9
90023310:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023314:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023318:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002331c:	b2c0      	uxtb	r0, r0
9002331e:	fb12 f204 	smulbb	r2, r2, r4
90023322:	fa5f fc8c 	uxtb.w	ip, ip
90023326:	fb1e fe04 	smulbb	lr, lr, r4
9002332a:	fb01 2100 	mla	r1, r1, r0, r2
9002332e:	10da      	asrs	r2, r3, #3
90023330:	fb1c fc04 	smulbb	ip, ip, r4
90023334:	00db      	lsls	r3, r3, #3
90023336:	b289      	uxth	r1, r1
90023338:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002333c:	b2db      	uxtb	r3, r3
9002333e:	fb02 e200 	mla	r2, r2, r0, lr
90023342:	fb03 c300 	mla	r3, r3, r0, ip
90023346:	b292      	uxth	r2, r2
90023348:	fa1f fc83 	uxth.w	ip, r3
9002334c:	1c4b      	adds	r3, r1, #1
9002334e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023352:	f10c 0301 	add.w	r3, ip, #1
90023356:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002335a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002335e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023362:	430b      	orrs	r3, r1
90023364:	1c51      	adds	r1, r2, #1
90023366:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002336a:	0952      	lsrs	r2, r2, #5
9002336c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023370:	4313      	orrs	r3, r2
90023372:	803b      	strh	r3, [r7, #0]
90023374:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023376:	3702      	adds	r7, #2
90023378:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002337a:	441a      	add	r2, r3
9002337c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002337e:	441d      	add	r5, r3
90023380:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90023382:	9229      	str	r2, [sp, #164]	@ 0xa4
90023384:	3b01      	subs	r3, #1
90023386:	931a      	str	r3, [sp, #104]	@ 0x68
90023388:	e694      	b.n	900230b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002338a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002338c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002338e:	441c      	add	r4, r3
90023390:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023392:	441d      	add	r5, r3
90023394:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023396:	9429      	str	r4, [sp, #164]	@ 0xa4
90023398:	3b01      	subs	r3, #1
9002339a:	9309      	str	r3, [sp, #36]	@ 0x24
9002339c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002339e:	3302      	adds	r3, #2
900233a0:	930c      	str	r3, [sp, #48]	@ 0x30
900233a2:	e667      	b.n	90023074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900233a4:	d024      	beq.n	900233f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900233a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900233a8:	982b      	ldr	r0, [sp, #172]	@ 0xac
900233aa:	3b01      	subs	r3, #1
900233ac:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900233ae:	fb00 4003 	mla	r0, r0, r3, r4
900233b2:	1400      	asrs	r0, r0, #16
900233b4:	f53f ae7b 	bmi.w	900230ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900233b8:	3901      	subs	r1, #1
900233ba:	4288      	cmp	r0, r1
900233bc:	f6bf ae77 	bge.w	900230ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900233c0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
900233c2:	fb01 5303 	mla	r3, r1, r3, r5
900233c6:	141b      	asrs	r3, r3, #16
900233c8:	f53f ae71 	bmi.w	900230ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900233cc:	3a01      	subs	r2, #1
900233ce:	4293      	cmp	r3, r2
900233d0:	f6bf ae6d 	bge.w	900230ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900233d4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900233d8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
900233dc:	f1bb 0f00 	cmp.w	fp, #0
900233e0:	dc70      	bgt.n	900234c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900233e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900233e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900233e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900233ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900233ee:	930c      	str	r3, [sp, #48]	@ 0x30
900233f0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900233f2:	2b00      	cmp	r3, #0
900233f4:	f340 81be 	ble.w	90023774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900233f8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900233fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900233fe:	ee30 0a04 	vadd.f32	s0, s0, s8
90023402:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023406:	eef0 6a62 	vmov.f32	s13, s5
9002340a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002340e:	ee31 1a05 	vadd.f32	s2, s2, s10
90023412:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023416:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
9002341a:	eef0 6a43 	vmov.f32	s13, s6
9002341e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023422:	ee16 5a90 	vmov	r5, s13
90023426:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002342a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002342e:	ee77 2a62 	vsub.f32	s5, s14, s5
90023432:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023436:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002343a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002343e:	ee12 2a90 	vmov	r2, s5
90023442:	eef0 2a47 	vmov.f32	s5, s14
90023446:	fb92 f3f3 	sdiv	r3, r2, r3
9002344a:	ee13 2a10 	vmov	r2, s6
9002344e:	932b      	str	r3, [sp, #172]	@ 0xac
90023450:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023452:	eeb0 3a67 	vmov.f32	s6, s15
90023456:	fb92 f3f3 	sdiv	r3, r2, r3
9002345a:	932c      	str	r3, [sp, #176]	@ 0xb0
9002345c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002345e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90023460:	3b01      	subs	r3, #1
90023462:	9319      	str	r3, [sp, #100]	@ 0x64
90023464:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023466:	bf08      	it	eq
90023468:	4613      	moveq	r3, r2
9002346a:	9309      	str	r3, [sp, #36]	@ 0x24
9002346c:	e5f4      	b.n	90023058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002346e:	2900      	cmp	r1, #0
90023470:	f43f ae66 	beq.w	90023140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023474:	f818 0000 	ldrb.w	r0, [r8, r0]
90023478:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002347c:	900a      	str	r0, [sp, #40]	@ 0x28
9002347e:	0e00      	lsrs	r0, r0, #24
90023480:	9013      	str	r0, [sp, #76]	@ 0x4c
90023482:	e65d      	b.n	90023140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023484:	f113 0801 	adds.w	r8, r3, #1
90023488:	f53f af74 	bmi.w	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002348c:	4540      	cmp	r0, r8
9002348e:	f6ff af71 	blt.w	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023492:	f11c 0801 	adds.w	r8, ip, #1
90023496:	f53f af6d 	bmi.w	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002349a:	45c6      	cmp	lr, r8
9002349c:	f6ff af6a 	blt.w	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900234a0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900234a2:	b200      	sxth	r0, r0
900234a4:	9302      	str	r3, [sp, #8]
900234a6:	fa0f f38e 	sxth.w	r3, lr
900234aa:	9000      	str	r0, [sp, #0]
900234ac:	9301      	str	r3, [sp, #4]
900234ae:	4633      	mov	r3, r6
900234b0:	981d      	ldr	r0, [sp, #116]	@ 0x74
900234b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
900234b6:	e9cd c203 	strd	ip, r2, [sp, #12]
900234ba:	4639      	mov	r1, r7
900234bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900234be:	f7ff fc63 	bl	90022d88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900234c2:	e757      	b.n	90023374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900234c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900234c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900234ca:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900234cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900234d0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900234d2:	1427      	asrs	r7, r4, #16
900234d4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900234d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900234da:	142b      	asrs	r3, r5, #16
900234dc:	fb01 7303 	mla	r3, r1, r3, r7
900234e0:	18e7      	adds	r7, r4, r3
900234e2:	5ce3      	ldrb	r3, [r4, r3]
900234e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900234e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900234ec:	2a00      	cmp	r2, #0
900234ee:	f000 8137 	beq.w	90023760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900234f2:	f897 e001 	ldrb.w	lr, [r7, #1]
900234f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900234fa:	9410      	str	r4, [sp, #64]	@ 0x40
900234fc:	0e24      	lsrs	r4, r4, #24
900234fe:	9417      	str	r4, [sp, #92]	@ 0x5c
90023500:	b170      	cbz	r0, 90023520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023502:	eb07 0e01 	add.w	lr, r7, r1
90023506:	5c79      	ldrb	r1, [r7, r1]
90023508:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002350c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002350e:	0e09      	lsrs	r1, r1, #24
90023510:	9114      	str	r1, [sp, #80]	@ 0x50
90023512:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023516:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002351a:	9111      	str	r1, [sp, #68]	@ 0x44
9002351c:	0e09      	lsrs	r1, r1, #24
9002351e:	9118      	str	r1, [sp, #96]	@ 0x60
90023520:	b292      	uxth	r2, r2
90023522:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90023524:	b280      	uxth	r0, r0
90023526:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023528:	fb02 f800 	mul.w	r8, r2, r0
9002352c:	0112      	lsls	r2, r2, #4
9002352e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023532:	eba2 0e08 	sub.w	lr, r2, r8
90023536:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002353a:	b280      	uxth	r0, r0
9002353c:	fa1f fe8e 	uxth.w	lr, lr
90023540:	1a12      	subs	r2, r2, r0
90023542:	fb0e f101 	mul.w	r1, lr, r1
90023546:	b292      	uxth	r2, r2
90023548:	fb02 110c 	mla	r1, r2, ip, r1
9002354c:	fb00 1104 	mla	r1, r0, r4, r1
90023550:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023552:	fb08 1104 	mla	r1, r8, r4, r1
90023556:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002355a:	2900      	cmp	r1, #0
9002355c:	f000 80f5 	beq.w	9002374a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023560:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023564:	d019      	beq.n	9002359a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023566:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002356a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002356e:	fb0c fa0a 	mul.w	sl, ip, sl
90023572:	fb0c fc03 	mul.w	ip, ip, r3
90023576:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002357a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002357e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023582:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023586:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002358a:	4453      	add	r3, sl
9002358c:	0a3f      	lsrs	r7, r7, #8
9002358e:	0a1b      	lsrs	r3, r3, #8
90023590:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023594:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023598:	433b      	orrs	r3, r7
9002359a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002359c:	2cff      	cmp	r4, #255	@ 0xff
9002359e:	d020      	beq.n	900235e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900235a0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900235a2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900235a6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900235a8:	4367      	muls	r7, r4
900235aa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900235ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900235b0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900235b4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900235b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900235ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900235be:	fb04 fa0a 	mul.w	sl, r4, sl
900235c2:	44bc      	add	ip, r7
900235c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900235c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900235cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900235d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900235d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900235d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900235dc:	ea4c 040a 	orr.w	r4, ip, sl
900235e0:	9410      	str	r4, [sp, #64]	@ 0x40
900235e2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900235e4:	2cff      	cmp	r4, #255	@ 0xff
900235e6:	d020      	beq.n	9002362a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
900235e8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900235ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900235ee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900235f0:	4367      	muls	r7, r4
900235f2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900235f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900235f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900235fc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900235fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023602:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023606:	fb04 fa0a 	mul.w	sl, r4, sl
9002360a:	44bc      	add	ip, r7
9002360c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023610:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023614:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023618:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002361c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023620:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023624:	ea4c 040a 	orr.w	r4, ip, sl
90023628:	940b      	str	r4, [sp, #44]	@ 0x2c
9002362a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002362c:	2cff      	cmp	r4, #255	@ 0xff
9002362e:	d020      	beq.n	90023672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023630:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023632:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023636:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023638:	4367      	muls	r7, r4
9002363a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002363c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023640:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023644:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023646:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002364a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002364e:	fb04 fa0a 	mul.w	sl, r4, sl
90023652:	44bc      	add	ip, r7
90023654:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002365c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023660:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023664:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023668:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002366c:	ea4c 040a 	orr.w	r4, ip, sl
90023670:	9411      	str	r4, [sp, #68]	@ 0x44
90023672:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023674:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90023678:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002367c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023680:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023682:	fb0e f707 	mul.w	r7, lr, r7
90023686:	fb02 770c 	mla	r7, r2, ip, r7
9002368a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002368e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023690:	fb00 770c 	mla	r7, r0, ip, r7
90023694:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023698:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002369a:	fb08 770c 	mla	r7, r8, ip, r7
9002369e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900236a2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900236a4:	fb0e fe0c 	mul.w	lr, lr, ip
900236a8:	0a3f      	lsrs	r7, r7, #8
900236aa:	fb02 e303 	mla	r3, r2, r3, lr
900236ae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900236b0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900236b4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900236b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900236ba:	fb00 330a 	mla	r3, r0, sl, r3
900236be:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900236c2:	f8b9 0000 	ldrh.w	r0, [r9]
900236c6:	fb08 3c0c 	mla	ip, r8, ip, r3
900236ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900236cc:	1202      	asrs	r2, r0, #8
900236ce:	434b      	muls	r3, r1
900236d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900236d4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900236d8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900236dc:	1c59      	adds	r1, r3, #1
900236de:	ea47 070c 	orr.w	r7, r7, ip
900236e2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900236e6:	0c3b      	lsrs	r3, r7, #16
900236e8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900236ec:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900236f0:	b2ff      	uxtb	r7, r7
900236f2:	fb13 f304 	smulbb	r3, r3, r4
900236f6:	b2c9      	uxtb	r1, r1
900236f8:	fb1c fc04 	smulbb	ip, ip, r4
900236fc:	fb02 3201 	mla	r2, r2, r1, r3
90023700:	10c3      	asrs	r3, r0, #3
90023702:	fb17 f704 	smulbb	r7, r7, r4
90023706:	00c0      	lsls	r0, r0, #3
90023708:	b292      	uxth	r2, r2
9002370a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002370e:	b2c0      	uxtb	r0, r0
90023710:	fb03 c301 	mla	r3, r3, r1, ip
90023714:	f102 0c01 	add.w	ip, r2, #1
90023718:	fb00 7001 	mla	r0, r0, r1, r7
9002371c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90023720:	b280      	uxth	r0, r0
90023722:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90023726:	b29b      	uxth	r3, r3
90023728:	1c42      	adds	r2, r0, #1
9002372a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002372e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023732:	ea42 020c 	orr.w	r2, r2, ip
90023736:	f103 0c01 	add.w	ip, r3, #1
9002373a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002373e:	095b      	lsrs	r3, r3, #5
90023740:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023744:	431a      	orrs	r2, r3
90023746:	f8a9 2000 	strh.w	r2, [r9]
9002374a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002374c:	f109 0902 	add.w	r9, r9, #2
90023750:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023752:	f10b 3bff 	add.w	fp, fp, #4294967295
90023756:	441a      	add	r2, r3
90023758:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002375a:	9229      	str	r2, [sp, #164]	@ 0xa4
9002375c:	441d      	add	r5, r3
9002375e:	e63d      	b.n	900233dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023760:	2800      	cmp	r0, #0
90023762:	f43f aedd 	beq.w	90023520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023766:	5c79      	ldrb	r1, [r7, r1]
90023768:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002376c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002376e:	0e09      	lsrs	r1, r1, #24
90023770:	9114      	str	r1, [sp, #80]	@ 0x50
90023772:	e6d5      	b.n	90023520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023774:	b01f      	add	sp, #124	@ 0x7c
90023776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002377a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002377a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002377e:	b089      	sub	sp, #36	@ 0x24
90023780:	9101      	str	r1, [sp, #4]
90023782:	9801      	ldr	r0, [sp, #4]
90023784:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90023788:	8800      	ldrh	r0, [r0, #0]
9002378a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
9002378e:	1206      	asrs	r6, r0, #8
90023790:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90023794:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90023798:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9002379c:	9602      	str	r6, [sp, #8]
9002379e:	10c6      	asrs	r6, r0, #3
900237a0:	00c0      	lsls	r0, r0, #3
900237a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900237a6:	b2c0      	uxtb	r0, r0
900237a8:	9603      	str	r6, [sp, #12]
900237aa:	9004      	str	r0, [sp, #16]
900237ac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900237b0:	fb07 100c 	mla	r0, r7, ip, r1
900237b4:	2f00      	cmp	r7, #0
900237b6:	eb02 0e00 	add.w	lr, r2, r0
900237ba:	f2c0 810a 	blt.w	900239d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900237be:	45b8      	cmp	r8, r7
900237c0:	f340 8107 	ble.w	900239d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900237c4:	2900      	cmp	r1, #0
900237c6:	f2c0 8102 	blt.w	900239ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900237ca:	458c      	cmp	ip, r1
900237cc:	f340 80ff 	ble.w	900239ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900237d0:	5c12      	ldrb	r2, [r2, r0]
900237d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900237d6:	1c4a      	adds	r2, r1, #1
900237d8:	f100 80fe 	bmi.w	900239d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900237dc:	4594      	cmp	ip, r2
900237de:	f340 80fb 	ble.w	900239d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900237e2:	2d00      	cmp	r5, #0
900237e4:	f000 80fa 	beq.w	900239dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900237e8:	f89e 2001 	ldrb.w	r2, [lr, #1]
900237ec:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900237f0:	3701      	adds	r7, #1
900237f2:	f100 80f7 	bmi.w	900239e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900237f6:	45b8      	cmp	r8, r7
900237f8:	f340 80f4 	ble.w	900239e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900237fc:	2c00      	cmp	r4, #0
900237fe:	f000 80f4 	beq.w	900239ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90023802:	2900      	cmp	r1, #0
90023804:	eb0e 020c 	add.w	r2, lr, ip
90023808:	f2c0 80ea 	blt.w	900239e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002380c:	458c      	cmp	ip, r1
9002380e:	f340 80e7 	ble.w	900239e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023812:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023816:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002381a:	3101      	adds	r1, #1
9002381c:	f100 80e8 	bmi.w	900239f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023820:	458c      	cmp	ip, r1
90023822:	f340 80e5 	ble.w	900239f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023826:	2d00      	cmp	r5, #0
90023828:	f000 80e4 	beq.w	900239f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
9002382c:	7852      	ldrb	r2, [r2, #1]
9002382e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023832:	0e0b      	lsrs	r3, r1, #24
90023834:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90023838:	ea4f 6a10 	mov.w	sl, r0, lsr #24
9002383c:	9300      	str	r3, [sp, #0]
9002383e:	b2a4      	uxth	r4, r4
90023840:	b2ab      	uxth	r3, r5
90023842:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90023846:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002384a:	fb03 f904 	mul.w	r9, r3, r4
9002384e:	011b      	lsls	r3, r3, #4
90023850:	fb0a f505 	mul.w	r5, sl, r5
90023854:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023858:	eba3 0e09 	sub.w	lr, r3, r9
9002385c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90023860:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90023864:	0a28      	lsrs	r0, r5, #8
90023866:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
9002386a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002386e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023872:	fb0a f303 	mul.w	r3, sl, r3
90023876:	fb08 f707 	mul.w	r7, r8, r7
9002387a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
9002387e:	4405      	add	r5, r0
90023880:	fb08 fc0c 	mul.w	ip, r8, ip
90023884:	b2a4      	uxth	r4, r4
90023886:	0a2d      	lsrs	r5, r5, #8
90023888:	fa1f fe8e 	uxth.w	lr, lr
9002388c:	1b12      	subs	r2, r2, r4
9002388e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90023892:	b292      	uxth	r2, r2
90023894:	9005      	str	r0, [sp, #20]
90023896:	f503 7080 	add.w	r0, r3, #256	@ 0x100
9002389a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002389e:	ea4f 201c 	mov.w	r0, ip, lsr #8
900238a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900238a6:	0a1b      	lsrs	r3, r3, #8
900238a8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900238ac:	9306      	str	r3, [sp, #24]
900238ae:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900238b2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900238b6:	4460      	add	r0, ip
900238b8:	fb0b f303 	mul.w	r3, fp, r3
900238bc:	fb0b f606 	mul.w	r6, fp, r6
900238c0:	0a00      	lsrs	r0, r0, #8
900238c2:	0a1d      	lsrs	r5, r3, #8
900238c4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900238c8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900238cc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900238d0:	441d      	add	r5, r3
900238d2:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900238d6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900238da:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900238de:	0a2d      	lsrs	r5, r5, #8
900238e0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900238e4:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
900238e8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900238ec:	0a36      	lsrs	r6, r6, #8
900238ee:	0a1b      	lsrs	r3, r3, #8
900238f0:	fb05 f50e 	mul.w	r5, r5, lr
900238f4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900238f8:	9307      	str	r3, [sp, #28]
900238fa:	0e0b      	lsrs	r3, r1, #24
900238fc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023900:	fb0e f606 	mul.w	r6, lr, r6
90023904:	435f      	muls	r7, r3
90023906:	4359      	muls	r1, r3
90023908:	9b05      	ldr	r3, [sp, #20]
9002390a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002390e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023912:	fb03 5502 	mla	r5, r3, r2, r5
90023916:	9b06      	ldr	r3, [sp, #24]
90023918:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002391c:	fb0e fe0b 	mul.w	lr, lr, fp
90023920:	44bc      	add	ip, r7
90023922:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023926:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002392a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002392e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023932:	0a09      	lsrs	r1, r1, #8
90023934:	fb0c 5509 	mla	r5, ip, r9, r5
90023938:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002393c:	fb00 5504 	mla	r5, r0, r4, r5
90023940:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023944:	9b07      	ldr	r3, [sp, #28]
90023946:	fb02 6000 	mla	r0, r2, r0, r6
9002394a:	0a2d      	lsrs	r5, r5, #8
9002394c:	fb02 e20a 	mla	r2, r2, sl, lr
90023950:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023954:	fb09 0001 	mla	r0, r9, r1, r0
90023958:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002395c:	fb04 0003 	mla	r0, r4, r3, r0
90023960:	9b00      	ldr	r3, [sp, #0]
90023962:	fb04 2408 	mla	r4, r4, r8, r2
90023966:	9a04      	ldr	r2, [sp, #16]
90023968:	0a00      	lsrs	r0, r0, #8
9002396a:	fb09 4903 	mla	r9, r9, r3, r4
9002396e:	9b02      	ldr	r3, [sp, #8]
90023970:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90023974:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023978:	4305      	orrs	r5, r0
9002397a:	fa5f f989 	uxtb.w	r9, r9
9002397e:	fb03 f109 	mul.w	r1, r3, r9
90023982:	9b03      	ldr	r3, [sp, #12]
90023984:	fb03 f309 	mul.w	r3, r3, r9
90023988:	fb02 f909 	mul.w	r9, r2, r9
9002398c:	1c4a      	adds	r2, r1, #1
9002398e:	1c58      	adds	r0, r3, #1
90023990:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023994:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023998:	0c2a      	lsrs	r2, r5, #16
9002399a:	0a2b      	lsrs	r3, r5, #8
9002399c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900239a0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900239a4:	0212      	lsls	r2, r2, #8
900239a6:	00db      	lsls	r3, r3, #3
900239a8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900239ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900239b0:	4313      	orrs	r3, r2
900239b2:	f109 0201 	add.w	r2, r9, #1
900239b6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900239ba:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900239be:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900239c2:	431d      	orrs	r5, r3
900239c4:	9b01      	ldr	r3, [sp, #4]
900239c6:	801d      	strh	r5, [r3, #0]
900239c8:	b009      	add	sp, #36	@ 0x24
900239ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900239ce:	2000      	movs	r0, #0
900239d0:	e701      	b.n	900237d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900239d2:	2600      	movs	r6, #0
900239d4:	4630      	mov	r0, r6
900239d6:	e70b      	b.n	900237f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900239d8:	2600      	movs	r6, #0
900239da:	e709      	b.n	900237f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900239dc:	462e      	mov	r6, r5
900239de:	e707      	b.n	900237f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900239e0:	2700      	movs	r7, #0
900239e2:	e71a      	b.n	9002381a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900239e4:	2100      	movs	r1, #0
900239e6:	460f      	mov	r7, r1
900239e8:	e723      	b.n	90023832 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900239ea:	4621      	mov	r1, r4
900239ec:	4627      	mov	r7, r4
900239ee:	e720      	b.n	90023832 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900239f0:	2100      	movs	r1, #0
900239f2:	e71e      	b.n	90023832 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900239f4:	4629      	mov	r1, r5
900239f6:	e71c      	b.n	90023832 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

900239f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900239f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900239fc:	b09b      	sub	sp, #108	@ 0x6c
900239fe:	9218      	str	r2, [sp, #96]	@ 0x60
90023a00:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023a02:	9019      	str	r0, [sp, #100]	@ 0x64
90023a04:	9116      	str	r1, [sp, #88]	@ 0x58
90023a06:	6850      	ldr	r0, [r2, #4]
90023a08:	9307      	str	r3, [sp, #28]
90023a0a:	6812      	ldr	r2, [r2, #0]
90023a0c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90023a0e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90023a12:	fb00 1303 	mla	r3, r0, r3, r1
90023a16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023a1a:	930a      	str	r3, [sp, #40]	@ 0x28
90023a1c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023a1e:	681b      	ldr	r3, [r3, #0]
90023a20:	930f      	str	r3, [sp, #60]	@ 0x3c
90023a22:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023a24:	685e      	ldr	r6, [r3, #4]
90023a26:	3604      	adds	r6, #4
90023a28:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023a2a:	2b00      	cmp	r3, #0
90023a2c:	dc03      	bgt.n	90023a36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023a2e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023a30:	2b00      	cmp	r3, #0
90023a32:	f340 8373 	ble.w	9002411c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023a36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023a38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023a3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023a40:	1e48      	subs	r0, r1, #1
90023a42:	1e57      	subs	r7, r2, #1
90023a44:	9b07      	ldr	r3, [sp, #28]
90023a46:	2b00      	cmp	r3, #0
90023a48:	f340 818f 	ble.w	90023d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023a4c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023a4e:	142b      	asrs	r3, r5, #16
90023a50:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023a54:	d406      	bmi.n	90023a64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023a56:	4584      	cmp	ip, r0
90023a58:	da04      	bge.n	90023a64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023a5a:	2b00      	cmp	r3, #0
90023a5c:	db02      	blt.n	90023a64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023a5e:	42bb      	cmp	r3, r7
90023a60:	f2c0 8184 	blt.w	90023d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023a64:	f11c 0c01 	adds.w	ip, ip, #1
90023a68:	f100 8172 	bmi.w	90023d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a6c:	4561      	cmp	r1, ip
90023a6e:	f2c0 816f 	blt.w	90023d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a72:	3301      	adds	r3, #1
90023a74:	f100 816c 	bmi.w	90023d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a78:	429a      	cmp	r2, r3
90023a7a:	f2c0 8169 	blt.w	90023d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a7e:	9b07      	ldr	r3, [sp, #28]
90023a80:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90023a82:	9317      	str	r3, [sp, #92]	@ 0x5c
90023a84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023a86:	2b00      	cmp	r3, #0
90023a88:	f340 818e 	ble.w	90023da8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023a8c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023a8e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023a92:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023a96:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023a9a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023a9c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023aa0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023aa2:	141b      	asrs	r3, r3, #16
90023aa4:	f100 81d1 	bmi.w	90023e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023aa8:	f101 38ff 	add.w	r8, r1, #4294967295
90023aac:	4543      	cmp	r3, r8
90023aae:	f280 81cc 	bge.w	90023e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023ab2:	f1bc 0f00 	cmp.w	ip, #0
90023ab6:	f2c0 81c8 	blt.w	90023e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023aba:	f10e 38ff 	add.w	r8, lr, #4294967295
90023abe:	45c4      	cmp	ip, r8
90023ac0:	f280 81c3 	bge.w	90023e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023ac4:	b209      	sxth	r1, r1
90023ac6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023ac8:	fb0c 3301 	mla	r3, ip, r1, r3
90023acc:	eb04 0803 	add.w	r8, r4, r3
90023ad0:	5ce3      	ldrb	r3, [r4, r3]
90023ad2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023ad6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023ada:	2a00      	cmp	r2, #0
90023adc:	f000 81aa 	beq.w	90023e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90023ae0:	f898 c001 	ldrb.w	ip, [r8, #1]
90023ae4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023ae8:	940b      	str	r4, [sp, #44]	@ 0x2c
90023aea:	0e24      	lsrs	r4, r4, #24
90023aec:	9412      	str	r4, [sp, #72]	@ 0x48
90023aee:	b178      	cbz	r0, 90023b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023af0:	eb08 0c01 	add.w	ip, r8, r1
90023af4:	f818 1001 	ldrb.w	r1, [r8, r1]
90023af8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023afc:	9108      	str	r1, [sp, #32]
90023afe:	0e09      	lsrs	r1, r1, #24
90023b00:	9110      	str	r1, [sp, #64]	@ 0x40
90023b02:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023b06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023b0a:	910c      	str	r1, [sp, #48]	@ 0x30
90023b0c:	0e09      	lsrs	r1, r1, #24
90023b0e:	9113      	str	r1, [sp, #76]	@ 0x4c
90023b10:	b292      	uxth	r2, r2
90023b12:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023b14:	b280      	uxth	r0, r0
90023b16:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023b18:	fb02 f900 	mul.w	r9, r2, r0
90023b1c:	0112      	lsls	r2, r2, #4
90023b1e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023b22:	eba2 0809 	sub.w	r8, r2, r9
90023b26:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023b2a:	b280      	uxth	r0, r0
90023b2c:	fa1f f888 	uxth.w	r8, r8
90023b30:	1a12      	subs	r2, r2, r0
90023b32:	fb08 f101 	mul.w	r1, r8, r1
90023b36:	b292      	uxth	r2, r2
90023b38:	fb02 110e 	mla	r1, r2, lr, r1
90023b3c:	fb00 1104 	mla	r1, r0, r4, r1
90023b40:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023b42:	fb09 1104 	mla	r1, r9, r4, r1
90023b46:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023b4a:	2900      	cmp	r1, #0
90023b4c:	f000 80f5 	beq.w	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023b50:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023b54:	d01b      	beq.n	90023b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023b56:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023b5a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023b5e:	fb0e fa0a 	mul.w	sl, lr, sl
90023b62:	fb0e fe03 	mul.w	lr, lr, r3
90023b66:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023b6a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023b6e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90023b72:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023b76:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023b7a:	4453      	add	r3, sl
90023b7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b80:	0a1b      	lsrs	r3, r3, #8
90023b82:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023b86:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023b8a:	ea43 030c 	orr.w	r3, r3, ip
90023b8e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023b90:	2cff      	cmp	r4, #255	@ 0xff
90023b92:	d021      	beq.n	90023bd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023b94:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023b96:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023b9a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023b9c:	fb04 fb0b 	mul.w	fp, r4, fp
90023ba0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023ba2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023ba6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023ba8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023bac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023bb0:	fb04 fa0a 	mul.w	sl, r4, sl
90023bb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023bb8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023bbc:	44de      	add	lr, fp
90023bbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023bc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023bc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023bca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023bce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023bd2:	ea4e 040a 	orr.w	r4, lr, sl
90023bd6:	940b      	str	r4, [sp, #44]	@ 0x2c
90023bd8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023bda:	2cff      	cmp	r4, #255	@ 0xff
90023bdc:	d021      	beq.n	90023c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023bde:	9c08      	ldr	r4, [sp, #32]
90023be0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023be4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023be6:	fb04 fb0b 	mul.w	fp, r4, fp
90023bea:	9c08      	ldr	r4, [sp, #32]
90023bec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023bf0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023bf2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023bf6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023bfa:	fb04 fa0a 	mul.w	sl, r4, sl
90023bfe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c02:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023c06:	44de      	add	lr, fp
90023c08:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023c14:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023c1c:	ea4e 040a 	orr.w	r4, lr, sl
90023c20:	9408      	str	r4, [sp, #32]
90023c22:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c24:	2cff      	cmp	r4, #255	@ 0xff
90023c26:	d021      	beq.n	90023c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023c28:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023c2a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023c2e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c30:	fb04 fb0b 	mul.w	fp, r4, fp
90023c34:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023c36:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023c3a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023c3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023c40:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023c44:	fb04 fa0a 	mul.w	sl, r4, sl
90023c48:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c4c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023c50:	44de      	add	lr, fp
90023c52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023c5e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023c62:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023c66:	ea4e 040a 	orr.w	r4, lr, sl
90023c6a:	940c      	str	r4, [sp, #48]	@ 0x30
90023c6c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023c6e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90023c72:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023c76:	43c9      	mvns	r1, r1
90023c78:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023c7c:	9c08      	ldr	r4, [sp, #32]
90023c7e:	fb08 fc0c 	mul.w	ip, r8, ip
90023c82:	fb02 cc0e 	mla	ip, r2, lr, ip
90023c86:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023c8a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023c8c:	fb00 cc0e 	mla	ip, r0, lr, ip
90023c90:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90023c94:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023c96:	fb09 cc0e 	mla	ip, r9, lr, ip
90023c9a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023c9e:	fb08 f80e 	mul.w	r8, r8, lr
90023ca2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ca6:	fa5f fe81 	uxtb.w	lr, r1
90023caa:	fb02 8303 	mla	r3, r2, r3, r8
90023cae:	9a08      	ldr	r2, [sp, #32]
90023cb0:	f8b7 8000 	ldrh.w	r8, [r7]
90023cb4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023cb8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023cbc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023cbe:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90023cc2:	fb00 330a 	mla	r3, r0, sl, r3
90023cc6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90023cca:	ea4f 2228 	mov.w	r2, r8, asr #8
90023cce:	fb09 3900 	mla	r9, r9, r0, r3
90023cd2:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023cd6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023cda:	b2c9      	uxtb	r1, r1
90023cdc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023ce0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90023ce4:	fb02 f20e 	mul.w	r2, r2, lr
90023ce8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023cec:	fb00 f00e 	mul.w	r0, r0, lr
90023cf0:	1c53      	adds	r3, r2, #1
90023cf2:	fb01 f10e 	mul.w	r1, r1, lr
90023cf6:	ea4c 0c09 	orr.w	ip, ip, r9
90023cfa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90023cfe:	ea4f 431c 	mov.w	r3, ip, lsr #16
90023d02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023d06:	4a60      	ldr	r2, [pc, #384]	@ (90023e88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023d08:	b2db      	uxtb	r3, r3
90023d0a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90023d0e:	1c43      	adds	r3, r0, #1
90023d10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023d14:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023d18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023d1c:	00db      	lsls	r3, r3, #3
90023d1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023d22:	4313      	orrs	r3, r2
90023d24:	1c4a      	adds	r2, r1, #1
90023d26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023d2a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023d2e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023d32:	ea4c 0c03 	orr.w	ip, ip, r3
90023d36:	f8a7 c000 	strh.w	ip, [r7]
90023d3a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023d3c:	3702      	adds	r7, #2
90023d3e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023d40:	441a      	add	r2, r3
90023d42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d44:	441d      	add	r5, r3
90023d46:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023d48:	9225      	str	r2, [sp, #148]	@ 0x94
90023d4a:	3b01      	subs	r3, #1
90023d4c:	9317      	str	r3, [sp, #92]	@ 0x5c
90023d4e:	e699      	b.n	90023a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023d50:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023d52:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023d54:	441c      	add	r4, r3
90023d56:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023d58:	441d      	add	r5, r3
90023d5a:	9b07      	ldr	r3, [sp, #28]
90023d5c:	9425      	str	r4, [sp, #148]	@ 0x94
90023d5e:	3b01      	subs	r3, #1
90023d60:	9307      	str	r3, [sp, #28]
90023d62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023d64:	3302      	adds	r3, #2
90023d66:	930a      	str	r3, [sp, #40]	@ 0x28
90023d68:	e66c      	b.n	90023a44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023d6a:	d024      	beq.n	90023db6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90023d6c:	9b07      	ldr	r3, [sp, #28]
90023d6e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90023d70:	3b01      	subs	r3, #1
90023d72:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023d74:	fb00 4003 	mla	r0, r0, r3, r4
90023d78:	1400      	asrs	r0, r0, #16
90023d7a:	f53f ae80 	bmi.w	90023a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023d7e:	3901      	subs	r1, #1
90023d80:	4288      	cmp	r0, r1
90023d82:	f6bf ae7c 	bge.w	90023a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023d86:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90023d88:	fb01 5303 	mla	r3, r1, r3, r5
90023d8c:	141b      	asrs	r3, r3, #16
90023d8e:	f53f ae76 	bmi.w	90023a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023d92:	3a01      	subs	r2, #1
90023d94:	4293      	cmp	r3, r2
90023d96:	f6bf ae72 	bge.w	90023a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023d9a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023d9e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90023da2:	f1bb 0f00 	cmp.w	fp, #0
90023da6:	dc71      	bgt.n	90023e8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023da8:	9b07      	ldr	r3, [sp, #28]
90023daa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023dae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023db0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023db4:	930a      	str	r3, [sp, #40]	@ 0x28
90023db6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023db8:	2b00      	cmp	r3, #0
90023dba:	f340 81af 	ble.w	9002411c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023dbe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023dc2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023dc4:	ee30 0a04 	vadd.f32	s0, s0, s8
90023dc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023dcc:	eef0 6a62 	vmov.f32	s13, s5
90023dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023dd4:	ee31 1a05 	vadd.f32	s2, s2, s10
90023dd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023ddc:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90023de0:	eef0 6a43 	vmov.f32	s13, s6
90023de4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023de8:	ee16 5a90 	vmov	r5, s13
90023dec:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023df0:	ee61 7a27 	vmul.f32	s15, s2, s15
90023df4:	ee77 2a62 	vsub.f32	s5, s14, s5
90023df8:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023dfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023e00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023e04:	ee12 2a90 	vmov	r2, s5
90023e08:	eef0 2a47 	vmov.f32	s5, s14
90023e0c:	fb92 f3f3 	sdiv	r3, r2, r3
90023e10:	ee13 2a10 	vmov	r2, s6
90023e14:	9327      	str	r3, [sp, #156]	@ 0x9c
90023e16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023e18:	eeb0 3a67 	vmov.f32	s6, s15
90023e1c:	fb92 f3f3 	sdiv	r3, r2, r3
90023e20:	9328      	str	r3, [sp, #160]	@ 0xa0
90023e22:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023e24:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90023e26:	3b01      	subs	r3, #1
90023e28:	9316      	str	r3, [sp, #88]	@ 0x58
90023e2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023e2c:	bf08      	it	eq
90023e2e:	4613      	moveq	r3, r2
90023e30:	9307      	str	r3, [sp, #28]
90023e32:	e5f9      	b.n	90023a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023e34:	2800      	cmp	r0, #0
90023e36:	f43f ae6b 	beq.w	90023b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023e3a:	f818 1001 	ldrb.w	r1, [r8, r1]
90023e3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e42:	9108      	str	r1, [sp, #32]
90023e44:	0e09      	lsrs	r1, r1, #24
90023e46:	9110      	str	r1, [sp, #64]	@ 0x40
90023e48:	e662      	b.n	90023b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023e4a:	f113 0801 	adds.w	r8, r3, #1
90023e4e:	f53f af74 	bmi.w	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e52:	4541      	cmp	r1, r8
90023e54:	f6ff af71 	blt.w	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e58:	f11c 0801 	adds.w	r8, ip, #1
90023e5c:	f53f af6d 	bmi.w	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e60:	45c6      	cmp	lr, r8
90023e62:	f6ff af6a 	blt.w	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e66:	b209      	sxth	r1, r1
90023e68:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90023e6c:	fa0f f38e 	sxth.w	r3, lr
90023e70:	9100      	str	r1, [sp, #0]
90023e72:	4639      	mov	r1, r7
90023e74:	9301      	str	r3, [sp, #4]
90023e76:	4633      	mov	r3, r6
90023e78:	e9cd 2004 	strd	r2, r0, [sp, #16]
90023e7c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023e7e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90023e80:	f7ff fc7b 	bl	9002377a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90023e84:	e759      	b.n	90023d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023e86:	bf00      	nop
90023e88:	fffff800 	.word	0xfffff800
90023e8c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023e8e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023e92:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023e94:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023e98:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023e9a:	1427      	asrs	r7, r4, #16
90023e9c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023e9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023ea2:	142b      	asrs	r3, r5, #16
90023ea4:	fb01 7303 	mla	r3, r1, r3, r7
90023ea8:	18e7      	adds	r7, r4, r3
90023eaa:	5ce3      	ldrb	r3, [r4, r3]
90023eac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023eb0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023eb4:	2a00      	cmp	r2, #0
90023eb6:	f000 8127 	beq.w	90024108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90023eba:	f897 e001 	ldrb.w	lr, [r7, #1]
90023ebe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023ec2:	940d      	str	r4, [sp, #52]	@ 0x34
90023ec4:	0e24      	lsrs	r4, r4, #24
90023ec6:	9414      	str	r4, [sp, #80]	@ 0x50
90023ec8:	b170      	cbz	r0, 90023ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023eca:	eb07 0e01 	add.w	lr, r7, r1
90023ece:	5c79      	ldrb	r1, [r7, r1]
90023ed0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023ed4:	9109      	str	r1, [sp, #36]	@ 0x24
90023ed6:	0e09      	lsrs	r1, r1, #24
90023ed8:	9111      	str	r1, [sp, #68]	@ 0x44
90023eda:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023ede:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023ee2:	910e      	str	r1, [sp, #56]	@ 0x38
90023ee4:	0e09      	lsrs	r1, r1, #24
90023ee6:	9115      	str	r1, [sp, #84]	@ 0x54
90023ee8:	b292      	uxth	r2, r2
90023eea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023eec:	b280      	uxth	r0, r0
90023eee:	fb02 f800 	mul.w	r8, r2, r0
90023ef2:	0112      	lsls	r2, r2, #4
90023ef4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023ef8:	eba2 0e08 	sub.w	lr, r2, r8
90023efc:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90023f00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90023f02:	b280      	uxth	r0, r0
90023f04:	fa1f fe8e 	uxth.w	lr, lr
90023f08:	1a09      	subs	r1, r1, r0
90023f0a:	fb0e f202 	mul.w	r2, lr, r2
90023f0e:	b289      	uxth	r1, r1
90023f10:	fb01 220c 	mla	r2, r1, ip, r2
90023f14:	fb00 2204 	mla	r2, r0, r4, r2
90023f18:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023f1a:	fb08 2204 	mla	r2, r8, r4, r2
90023f1e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90023f22:	2a00      	cmp	r2, #0
90023f24:	f000 80e5 	beq.w	900240f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90023f28:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023f2c:	d019      	beq.n	90023f62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90023f2e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023f32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023f36:	fb0c fa0a 	mul.w	sl, ip, sl
90023f3a:	fb0c fc03 	mul.w	ip, ip, r3
90023f3e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023f42:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023f46:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023f4a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023f4e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023f52:	4453      	add	r3, sl
90023f54:	0a3f      	lsrs	r7, r7, #8
90023f56:	0a1b      	lsrs	r3, r3, #8
90023f58:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023f5c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023f60:	433b      	orrs	r3, r7
90023f62:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f64:	2cff      	cmp	r4, #255	@ 0xff
90023f66:	d020      	beq.n	90023faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90023f68:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023f6a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023f6e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f70:	4367      	muls	r7, r4
90023f72:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023f74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023f78:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023f7c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023f7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023f82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f86:	fb04 fa0a 	mul.w	sl, r4, sl
90023f8a:	44bc      	add	ip, r7
90023f8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023f90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023f98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023f9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023fa0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023fa4:	ea4c 040a 	orr.w	r4, ip, sl
90023fa8:	940d      	str	r4, [sp, #52]	@ 0x34
90023faa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023fac:	2cff      	cmp	r4, #255	@ 0xff
90023fae:	d020      	beq.n	90023ff2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90023fb0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023fb2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023fb6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023fb8:	4367      	muls	r7, r4
90023fba:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023fbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023fc0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023fc4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023fc6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023fca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023fce:	fb04 fa0a 	mul.w	sl, r4, sl
90023fd2:	44bc      	add	ip, r7
90023fd4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023fd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023fe0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023fe4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023fe8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023fec:	ea4c 040a 	orr.w	r4, ip, sl
90023ff0:	9409      	str	r4, [sp, #36]	@ 0x24
90023ff2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023ff4:	2cff      	cmp	r4, #255	@ 0xff
90023ff6:	d020      	beq.n	9002403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90023ff8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023ffa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023ffe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024000:	4367      	muls	r7, r4
90024002:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024004:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024008:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002400c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002400e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024012:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024016:	fb04 fa0a 	mul.w	sl, r4, sl
9002401a:	44bc      	add	ip, r7
9002401c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024024:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024028:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002402c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024030:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024034:	ea4c 040a 	orr.w	r4, ip, sl
90024038:	940e      	str	r4, [sp, #56]	@ 0x38
9002403a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002403c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90024040:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024044:	43d2      	mvns	r2, r2
90024046:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002404a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002404c:	b2d2      	uxtb	r2, r2
9002404e:	fb0e f707 	mul.w	r7, lr, r7
90024052:	fb01 770c 	mla	r7, r1, ip, r7
90024056:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002405a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002405c:	fb00 770c 	mla	r7, r0, ip, r7
90024060:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024064:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024066:	fb08 770c 	mla	r7, r8, ip, r7
9002406a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002406e:	fb0e fe0c 	mul.w	lr, lr, ip
90024072:	0a3f      	lsrs	r7, r7, #8
90024074:	fb01 e303 	mla	r3, r1, r3, lr
90024078:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002407a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002407e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90024082:	990e      	ldr	r1, [sp, #56]	@ 0x38
90024084:	fb00 330a 	mla	r3, r0, sl, r3
90024088:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
9002408c:	fb08 3c0c 	mla	ip, r8, ip, r3
90024090:	f8b9 3000 	ldrh.w	r3, [r9]
90024094:	1218      	asrs	r0, r3, #8
90024096:	10d9      	asrs	r1, r3, #3
90024098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002409c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900240a0:	00db      	lsls	r3, r3, #3
900240a2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900240a6:	4350      	muls	r0, r2
900240a8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900240ac:	b2db      	uxtb	r3, r3
900240ae:	4351      	muls	r1, r2
900240b0:	ea47 070c 	orr.w	r7, r7, ip
900240b4:	4353      	muls	r3, r2
900240b6:	1c42      	adds	r2, r0, #1
900240b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900240bc:	0c3a      	lsrs	r2, r7, #16
900240be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900240c2:	4a18      	ldr	r2, [pc, #96]	@ (90024124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900240c4:	b2c0      	uxtb	r0, r0
900240c6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900240ca:	1c4a      	adds	r2, r1, #1
900240cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900240d0:	0a3a      	lsrs	r2, r7, #8
900240d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900240d6:	00c9      	lsls	r1, r1, #3
900240d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900240dc:	4301      	orrs	r1, r0
900240de:	1c58      	adds	r0, r3, #1
900240e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900240e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900240e8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900240ec:	4308      	orrs	r0, r1
900240ee:	f8a9 0000 	strh.w	r0, [r9]
900240f2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900240f4:	f109 0902 	add.w	r9, r9, #2
900240f8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900240fa:	f10b 3bff 	add.w	fp, fp, #4294967295
900240fe:	441a      	add	r2, r3
90024100:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024102:	9225      	str	r2, [sp, #148]	@ 0x94
90024104:	441d      	add	r5, r3
90024106:	e64c      	b.n	90023da2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024108:	2800      	cmp	r0, #0
9002410a:	f43f aeed 	beq.w	90023ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002410e:	5c79      	ldrb	r1, [r7, r1]
90024110:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024114:	9109      	str	r1, [sp, #36]	@ 0x24
90024116:	0e09      	lsrs	r1, r1, #24
90024118:	9111      	str	r1, [sp, #68]	@ 0x44
9002411a:	e6e5      	b.n	90023ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002411c:	b01b      	add	sp, #108	@ 0x6c
9002411e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024122:	bf00      	nop
90024124:	fffff800 	.word	0xfffff800

90024128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90024128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002412c:	b085      	sub	sp, #20
9002412e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024132:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024136:	2800      	cmp	r0, #0
90024138:	9103      	str	r1, [sp, #12]
9002413a:	fb00 7406 	mla	r4, r0, r6, r7
9002413e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024142:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024146:	eb02 0544 	add.w	r5, r2, r4, lsl #1
9002414a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002414e:	eb03 0904 	add.w	r9, r3, r4
90024152:	9501      	str	r5, [sp, #4]
90024154:	f2c0 8150 	blt.w	900243f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024158:	4583      	cmp	fp, r0
9002415a:	f340 814d 	ble.w	900243f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002415e:	2f00      	cmp	r7, #0
90024160:	f2c0 8146 	blt.w	900243f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024164:	42be      	cmp	r6, r7
90024166:	f340 8143 	ble.w	900243f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002416a:	f813 c004 	ldrb.w	ip, [r3, r4]
9002416e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90024172:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024176:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002417a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002417e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024182:	4355      	muls	r5, r2
90024184:	fb0c f203 	mul.w	r2, ip, r3
90024188:	ea04 1355 	and.w	r3, r4, r5, lsr #5
9002418c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90024190:	441d      	add	r5, r3
90024192:	f102 0320 	add.w	r3, r2, #32
90024196:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002419a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002419e:	0a1b      	lsrs	r3, r3, #8
900241a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900241a4:	431c      	orrs	r4, r3
900241a6:	1c7b      	adds	r3, r7, #1
900241a8:	f100 812b 	bmi.w	90024402 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900241ac:	429e      	cmp	r6, r3
900241ae:	f340 8128 	ble.w	90024402 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900241b2:	2900      	cmp	r1, #0
900241b4:	f000 8128 	beq.w	90024408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900241b8:	9a01      	ldr	r2, [sp, #4]
900241ba:	f899 3001 	ldrb.w	r3, [r9, #1]
900241be:	8855      	ldrh	r5, [r2, #2]
900241c0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900241c4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900241c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900241cc:	fb08 f802 	mul.w	r8, r8, r2
900241d0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900241d4:	435d      	muls	r5, r3
900241d6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900241da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900241de:	44d0      	add	r8, sl
900241e0:	f105 0a20 	add.w	sl, r5, #32
900241e4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900241e8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900241ec:	0a2d      	lsrs	r5, r5, #8
900241ee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900241f2:	432a      	orrs	r2, r5
900241f4:	3001      	adds	r0, #1
900241f6:	f100 810d 	bmi.w	90024414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900241fa:	4583      	cmp	fp, r0
900241fc:	f340 810a 	ble.w	90024414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024200:	f1be 0f00 	cmp.w	lr, #0
90024204:	f000 810b 	beq.w	9002441e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90024208:	2f00      	cmp	r7, #0
9002420a:	f2c0 8100 	blt.w	9002440e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002420e:	42be      	cmp	r6, r7
90024210:	f340 80fd 	ble.w	9002440e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024214:	9801      	ldr	r0, [sp, #4]
90024216:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002421a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002421e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024222:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024226:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002422a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002422e:	fb0a fa00 	mul.w	sl, sl, r0
90024232:	fb05 f808 	mul.w	r8, r5, r8
90024236:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002423a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002423e:	4482      	add	sl, r0
90024240:	f108 0020 	add.w	r0, r8, #32
90024244:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024248:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002424c:	0a00      	lsrs	r0, r0, #8
9002424e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024252:	ea4b 0b00 	orr.w	fp, fp, r0
90024256:	3701      	adds	r7, #1
90024258:	f100 80e6 	bmi.w	90024428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002425c:	42be      	cmp	r6, r7
9002425e:	f340 80e3 	ble.w	90024428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024262:	2900      	cmp	r1, #0
90024264:	f000 80e3 	beq.w	9002442e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90024268:	3601      	adds	r6, #1
9002426a:	9801      	ldr	r0, [sp, #4]
9002426c:	f819 7006 	ldrb.w	r7, [r9, r6]
90024270:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024274:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024278:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
9002427c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024280:	fb09 f906 	mul.w	r9, r9, r6
90024284:	fb07 f800 	mul.w	r8, r7, r0
90024288:	f64f 001f 	movw	r0, #63519	@ 0xf81f
9002428c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024290:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024294:	44d1      	add	r9, sl
90024296:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002429a:	f108 0020 	add.w	r0, r8, #32
9002429e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900242a2:	0a00      	lsrs	r0, r0, #8
900242a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900242a8:	4330      	orrs	r0, r6
900242aa:	b28e      	uxth	r6, r1
900242ac:	fa1f f98e 	uxth.w	r9, lr
900242b0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900242b4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900242b8:	fb06 f809 	mul.w	r8, r6, r9
900242bc:	0136      	lsls	r6, r6, #4
900242be:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900242c2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900242c6:	9601      	str	r6, [sp, #4]
900242c8:	ea4a 0404 	orr.w	r4, sl, r4
900242cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900242d0:	fa1f f689 	uxth.w	r6, r9
900242d4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900242d8:	fb11 f90e 	smulbb	r9, r1, lr
900242dc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900242e0:	9602      	str	r6, [sp, #8]
900242e2:	4626      	mov	r6, r4
900242e4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900242e8:	f1ce 0410 	rsb	r4, lr, #16
900242ec:	ea4a 0202 	orr.w	r2, sl, r2
900242f0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900242f4:	1a64      	subs	r4, r4, r1
900242f6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900242fa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900242fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024302:	434a      	muls	r2, r1
90024304:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024308:	ea4a 0000 	orr.w	r0, sl, r0
9002430c:	9903      	ldr	r1, [sp, #12]
9002430e:	fb04 2406 	mla	r4, r4, r6, r2
90024312:	9e02      	ldr	r6, [sp, #8]
90024314:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024318:	fb09 4200 	mla	r2, r9, r0, r4
9002431c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024320:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024324:	8808      	ldrh	r0, [r1, #0]
90024326:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002432a:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
9002432e:	ea44 0b0b 	orr.w	fp, r4, fp
90024332:	9c01      	ldr	r4, [sp, #4]
90024334:	b289      	uxth	r1, r1
90024336:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
9002433a:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002433e:	1ba4      	subs	r4, r4, r6
90024340:	9e01      	ldr	r6, [sp, #4]
90024342:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024346:	eba6 0608 	sub.w	r6, r6, r8
9002434a:	b2a4      	uxth	r4, r4
9002434c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024350:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024354:	b2b6      	uxth	r6, r6
90024356:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002435a:	4373      	muls	r3, r6
9002435c:	ea42 0e0e 	orr.w	lr, r2, lr
90024360:	fb0c 3304 	mla	r3, ip, r4, r3
90024364:	9c02      	ldr	r4, [sp, #8]
90024366:	fa1f f28e 	uxth.w	r2, lr
9002436a:	fb04 3505 	mla	r5, r4, r5, r3
9002436e:	10d4      	asrs	r4, r2, #3
90024370:	fb08 5707 	mla	r7, r8, r7, r5
90024374:	1215      	asrs	r5, r2, #8
90024376:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9002437a:	00d2      	lsls	r2, r2, #3
9002437c:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024380:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024384:	b2d2      	uxtb	r2, r2
90024386:	434f      	muls	r7, r1
90024388:	1c7b      	adds	r3, r7, #1
9002438a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002438e:	1203      	asrs	r3, r0, #8
90024390:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024394:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024398:	b2ff      	uxtb	r7, r7
9002439a:	fb13 f307 	smulbb	r3, r3, r7
9002439e:	fb05 3501 	mla	r5, r5, r1, r3
900243a2:	10c3      	asrs	r3, r0, #3
900243a4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900243a8:	b2ad      	uxth	r5, r5
900243aa:	fb13 f307 	smulbb	r3, r3, r7
900243ae:	fb04 3401 	mla	r4, r4, r1, r3
900243b2:	00c3      	lsls	r3, r0, #3
900243b4:	b2db      	uxtb	r3, r3
900243b6:	b2a4      	uxth	r4, r4
900243b8:	fb13 f307 	smulbb	r3, r3, r7
900243bc:	fb02 3101 	mla	r1, r2, r1, r3
900243c0:	1c6b      	adds	r3, r5, #1
900243c2:	1c62      	adds	r2, r4, #1
900243c4:	b289      	uxth	r1, r1
900243c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900243ca:	1c4b      	adds	r3, r1, #1
900243cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900243d0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900243d4:	9a03      	ldr	r2, [sp, #12]
900243d6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900243da:	0964      	lsrs	r4, r4, #5
900243dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900243e0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900243e4:	432b      	orrs	r3, r5
900243e6:	4323      	orrs	r3, r4
900243e8:	8013      	strh	r3, [r2, #0]
900243ea:	b005      	add	sp, #20
900243ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900243f0:	f04f 0c00 	mov.w	ip, #0
900243f4:	4664      	mov	r4, ip
900243f6:	e6d6      	b.n	900241a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900243f8:	2300      	movs	r3, #0
900243fa:	469c      	mov	ip, r3
900243fc:	461a      	mov	r2, r3
900243fe:	461c      	mov	r4, r3
90024400:	e6f8      	b.n	900241f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024402:	2300      	movs	r3, #0
90024404:	461a      	mov	r2, r3
90024406:	e6f5      	b.n	900241f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024408:	460b      	mov	r3, r1
9002440a:	460a      	mov	r2, r1
9002440c:	e6f2      	b.n	900241f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002440e:	2500      	movs	r5, #0
90024410:	46ab      	mov	fp, r5
90024412:	e720      	b.n	90024256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024414:	2700      	movs	r7, #0
90024416:	463d      	mov	r5, r7
90024418:	4638      	mov	r0, r7
9002441a:	46bb      	mov	fp, r7
9002441c:	e745      	b.n	900242aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002441e:	4677      	mov	r7, lr
90024420:	4675      	mov	r5, lr
90024422:	4670      	mov	r0, lr
90024424:	46f3      	mov	fp, lr
90024426:	e740      	b.n	900242aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024428:	2700      	movs	r7, #0
9002442a:	4638      	mov	r0, r7
9002442c:	e73d      	b.n	900242aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002442e:	460f      	mov	r7, r1
90024430:	4608      	mov	r0, r1
90024432:	e73a      	b.n	900242aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024438:	b097      	sub	sp, #92	@ 0x5c
9002443a:	9214      	str	r2, [sp, #80]	@ 0x50
9002443c:	9308      	str	r3, [sp, #32]
9002443e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024440:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024444:	9015      	str	r0, [sp, #84]	@ 0x54
90024446:	9312      	str	r3, [sp, #72]	@ 0x48
90024448:	6850      	ldr	r0, [r2, #4]
9002444a:	9111      	str	r1, [sp, #68]	@ 0x44
9002444c:	6812      	ldr	r2, [r2, #0]
9002444e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90024452:	fb00 1303 	mla	r3, r0, r3, r1
90024456:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002445a:	9309      	str	r3, [sp, #36]	@ 0x24
9002445c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002445e:	681b      	ldr	r3, [r3, #0]
90024460:	930b      	str	r3, [sp, #44]	@ 0x2c
90024462:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024464:	685b      	ldr	r3, [r3, #4]
90024466:	930c      	str	r3, [sp, #48]	@ 0x30
90024468:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9002446c:	930a      	str	r3, [sp, #40]	@ 0x28
9002446e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024470:	2b00      	cmp	r3, #0
90024472:	dc03      	bgt.n	9002447c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024474:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90024476:	2b00      	cmp	r3, #0
90024478:	f340 83cd 	ble.w	90024c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002447c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002447e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024482:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024486:	1e48      	subs	r0, r1, #1
90024488:	1e55      	subs	r5, r2, #1
9002448a:	9b08      	ldr	r3, [sp, #32]
9002448c:	2b00      	cmp	r3, #0
9002448e:	f340 81a5 	ble.w	900247dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024492:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90024494:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024496:	1436      	asrs	r6, r6, #16
90024498:	ea4f 4323 	mov.w	r3, r3, asr #16
9002449c:	d406      	bmi.n	900244ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002449e:	4286      	cmp	r6, r0
900244a0:	da04      	bge.n	900244ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900244a2:	2b00      	cmp	r3, #0
900244a4:	db02      	blt.n	900244ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900244a6:	42ab      	cmp	r3, r5
900244a8:	f2c0 8199 	blt.w	900247de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900244ac:	3601      	adds	r6, #1
900244ae:	f100 8186 	bmi.w	900247be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900244b2:	42b1      	cmp	r1, r6
900244b4:	f2c0 8183 	blt.w	900247be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900244b8:	3301      	adds	r3, #1
900244ba:	f100 8180 	bmi.w	900247be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900244be:	429a      	cmp	r2, r3
900244c0:	f2c0 817d 	blt.w	900247be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900244c4:	9b08      	ldr	r3, [sp, #32]
900244c6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900244ca:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900244cc:	9313      	str	r3, [sp, #76]	@ 0x4c
900244ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900244d0:	2b00      	cmp	r3, #0
900244d2:	f340 81a6 	ble.w	90024822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900244d6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900244d8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900244da:	1418      	asrs	r0, r3, #16
900244dc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900244de:	142d      	asrs	r5, r5, #16
900244e0:	f3c3 3103 	ubfx	r1, r3, #12, #4
900244e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900244e6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900244ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900244ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900244f0:	f100 81fa 	bmi.w	900248e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900244f4:	f102 3eff 	add.w	lr, r2, #4294967295
900244f8:	4575      	cmp	r5, lr
900244fa:	f280 81f5 	bge.w	900248e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900244fe:	2800      	cmp	r0, #0
90024500:	f2c0 81f2 	blt.w	900248e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024504:	f103 3eff 	add.w	lr, r3, #4294967295
90024508:	4570      	cmp	r0, lr
9002450a:	f280 81ed 	bge.w	900248e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002450e:	b212      	sxth	r2, r2
90024510:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024512:	fa1f fe81 	uxth.w	lr, r1
90024516:	fb00 5002 	mla	r0, r0, r2, r5
9002451a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002451e:	eb03 0a00 	add.w	sl, r3, r0
90024522:	f813 9000 	ldrb.w	r9, [r3, r0]
90024526:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
9002452a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002452e:	b29b      	uxth	r3, r3
90024530:	f1bc 0f00 	cmp.w	ip, #0
90024534:	f000 81bb 	beq.w	900248ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024538:	f81a 4002 	ldrb.w	r4, [sl, r2]
9002453c:	eb0a 0b02 	add.w	fp, sl, r2
90024540:	fa1f fa8c 	uxth.w	sl, ip
90024544:	940d      	str	r4, [sp, #52]	@ 0x34
90024546:	fb0a fe0e 	mul.w	lr, sl, lr
9002454a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002454e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024552:	eba5 050e 	sub.w	r5, r5, lr
90024556:	940e      	str	r4, [sp, #56]	@ 0x38
90024558:	fa1f fa8a 	uxth.w	sl, sl
9002455c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002455e:	b2ad      	uxth	r5, r5
90024560:	eba3 030a 	sub.w	r3, r3, sl
90024564:	fb08 f505 	mul.w	r5, r8, r5
90024568:	b29b      	uxth	r3, r3
9002456a:	fb09 5303 	mla	r3, r9, r3, r5
9002456e:	fb0a 3304 	mla	r3, sl, r4, r3
90024572:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024574:	fb0e 3304 	mla	r3, lr, r4, r3
90024578:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002457c:	2b00      	cmp	r3, #0
9002457e:	f000 8111 	beq.w	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024582:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024584:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024588:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002458c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024590:	f000 8192 	beq.w	900248b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024594:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024598:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002459c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900245a0:	fb0a fe0e 	mul.w	lr, sl, lr
900245a4:	fb09 f000 	mul.w	r0, r9, r0
900245a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900245ac:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900245b0:	f100 0b20 	add.w	fp, r0, #32
900245b4:	44ce      	add	lr, r9
900245b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900245ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900245be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900245c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900245c6:	ea4e 0909 	orr.w	r9, lr, r9
900245ca:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900245ce:	8868      	ldrh	r0, [r5, #2]
900245d0:	d019      	beq.n	90024606 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900245d2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900245d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900245da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900245de:	fb0a fe0e 	mul.w	lr, sl, lr
900245e2:	fb08 f800 	mul.w	r8, r8, r0
900245e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900245ea:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900245ee:	f108 0b20 	add.w	fp, r8, #32
900245f2:	4486      	add	lr, r0
900245f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900245f8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900245fc:	0a00      	lsrs	r0, r0, #8
900245fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024602:	ea4e 0000 	orr.w	r0, lr, r0
90024606:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002460a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002460e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024612:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024616:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002461a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002461e:	ea4e 0909 	orr.w	r9, lr, r9
90024622:	ea4a 0000 	orr.w	r0, sl, r0
90024626:	f1bc 0f00 	cmp.w	ip, #0
9002462a:	f000 8147 	beq.w	900248bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002462e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90024632:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024634:	3a01      	subs	r2, #1
90024636:	2cff      	cmp	r4, #255	@ 0xff
90024638:	ea4f 0242 	mov.w	r2, r2, lsl #1
9002463c:	f102 0202 	add.w	r2, r2, #2
90024640:	eb05 0e02 	add.w	lr, r5, r2
90024644:	5aaa      	ldrh	r2, [r5, r2]
90024646:	d018      	beq.n	9002467a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024648:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
9002464c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024650:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024654:	fb04 fa02 	mul.w	sl, r4, r2
90024658:	fb08 f805 	mul.w	r8, r8, r5
9002465c:	f10a 0520 	add.w	r5, sl, #32
90024660:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024664:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024668:	eb05 251a 	add.w	r5, r5, sl, lsr #8
9002466c:	4442      	add	r2, r8
9002466e:	0a2d      	lsrs	r5, r5, #8
90024670:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024674:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024678:	432a      	orrs	r2, r5
9002467a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002467c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024680:	2cff      	cmp	r4, #255	@ 0xff
90024682:	d01a      	beq.n	900246ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024684:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024688:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002468c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024690:	fb04 fa05 	mul.w	sl, r4, r5
90024694:	fb08 f80e 	mul.w	r8, r8, lr
90024698:	f10a 0e20 	add.w	lr, sl, #32
9002469c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900246a0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900246a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900246a8:	4445      	add	r5, r8
900246aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900246ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900246b2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900246b6:	ea45 050e 	orr.w	r5, r5, lr
900246ba:	fb1c fe01 	smulbb	lr, ip, r1
900246be:	f1cc 0810 	rsb	r8, ip, #16
900246c2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900246c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900246ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
900246ce:	eba8 0801 	sub.w	r8, r8, r1
900246d2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900246d6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900246da:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900246de:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900246e2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900246e6:	ea4a 0202 	orr.w	r2, sl, r2
900246ea:	4341      	muls	r1, r0
900246ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900246f0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900246f4:	fb09 1108 	mla	r1, r9, r8, r1
900246f8:	ea4b 0505 	orr.w	r5, fp, r5
900246fc:	fb0c 1102 	mla	r1, ip, r2, r1
90024700:	fb0e 1e05 	mla	lr, lr, r5, r1
90024704:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024708:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002470c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024710:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024714:	ea42 0e0e 	orr.w	lr, r2, lr
90024718:	fa1f f28e 	uxth.w	r2, lr
9002471c:	2bff      	cmp	r3, #255	@ 0xff
9002471e:	d103      	bne.n	90024728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024720:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024722:	29ff      	cmp	r1, #255	@ 0xff
90024724:	f000 80de 	beq.w	900248e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024728:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002472a:	1215      	asrs	r5, r2, #8
9002472c:	8838      	ldrh	r0, [r7, #0]
9002472e:	434b      	muls	r3, r1
90024730:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024734:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024736:	f103 0c01 	add.w	ip, r3, #1
9002473a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002473e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024742:	fa5f fc83 	uxtb.w	ip, r3
90024746:	1203      	asrs	r3, r0, #8
90024748:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002474c:	fb13 f30c 	smulbb	r3, r3, ip
90024750:	fb05 3501 	mla	r5, r5, r1, r3
90024754:	10c3      	asrs	r3, r0, #3
90024756:	10d1      	asrs	r1, r2, #3
90024758:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002475c:	00d2      	lsls	r2, r2, #3
9002475e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024762:	b2ad      	uxth	r5, r5
90024764:	fb13 f30c 	smulbb	r3, r3, ip
90024768:	b2d2      	uxtb	r2, r2
9002476a:	fb01 3104 	mla	r1, r1, r4, r3
9002476e:	00c3      	lsls	r3, r0, #3
90024770:	b2db      	uxtb	r3, r3
90024772:	b289      	uxth	r1, r1
90024774:	fb13 f30c 	smulbb	r3, r3, ip
90024778:	fb02 3304 	mla	r3, r2, r4, r3
9002477c:	b29a      	uxth	r2, r3
9002477e:	1c6b      	adds	r3, r5, #1
90024780:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024784:	1c53      	adds	r3, r2, #1
90024786:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002478a:	1c4a      	adds	r2, r1, #1
9002478c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024790:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024794:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024798:	0949      	lsrs	r1, r1, #5
9002479a:	432b      	orrs	r3, r5
9002479c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900247a0:	430b      	orrs	r3, r1
900247a2:	803b      	strh	r3, [r7, #0]
900247a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900247a6:	3702      	adds	r7, #2
900247a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900247aa:	4413      	add	r3, r2
900247ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900247ae:	9321      	str	r3, [sp, #132]	@ 0x84
900247b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900247b2:	441a      	add	r2, r3
900247b4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900247b6:	3b01      	subs	r3, #1
900247b8:	9222      	str	r2, [sp, #136]	@ 0x88
900247ba:	9313      	str	r3, [sp, #76]	@ 0x4c
900247bc:	e687      	b.n	900244ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900247be:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900247c0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900247c2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900247c4:	4433      	add	r3, r6
900247c6:	9321      	str	r3, [sp, #132]	@ 0x84
900247c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900247ca:	441c      	add	r4, r3
900247cc:	9b08      	ldr	r3, [sp, #32]
900247ce:	3b01      	subs	r3, #1
900247d0:	9422      	str	r4, [sp, #136]	@ 0x88
900247d2:	9308      	str	r3, [sp, #32]
900247d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900247d6:	3302      	adds	r3, #2
900247d8:	9309      	str	r3, [sp, #36]	@ 0x24
900247da:	e656      	b.n	9002448a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900247dc:	d028      	beq.n	90024830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900247de:	9b08      	ldr	r3, [sp, #32]
900247e0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900247e2:	3b01      	subs	r3, #1
900247e4:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900247e6:	fb00 5003 	mla	r0, r0, r3, r5
900247ea:	1400      	asrs	r0, r0, #16
900247ec:	f53f ae6a 	bmi.w	900244c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900247f0:	3901      	subs	r1, #1
900247f2:	4288      	cmp	r0, r1
900247f4:	f6bf ae66 	bge.w	900244c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900247f8:	9924      	ldr	r1, [sp, #144]	@ 0x90
900247fa:	9822      	ldr	r0, [sp, #136]	@ 0x88
900247fc:	fb01 0303 	mla	r3, r1, r3, r0
90024800:	141b      	asrs	r3, r3, #16
90024802:	f53f ae5f 	bmi.w	900244c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024806:	3a01      	subs	r2, #1
90024808:	4293      	cmp	r3, r2
9002480a:	f6bf ae5b 	bge.w	900244c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002480e:	9b08      	ldr	r3, [sp, #32]
90024810:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024814:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024818:	9313      	str	r3, [sp, #76]	@ 0x4c
9002481a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002481c:	2b00      	cmp	r3, #0
9002481e:	f300 8082 	bgt.w	90024926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90024822:	9b08      	ldr	r3, [sp, #32]
90024824:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024828:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002482a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002482e:	9309      	str	r3, [sp, #36]	@ 0x24
90024830:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024832:	2b00      	cmp	r3, #0
90024834:	f340 81ef 	ble.w	90024c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024838:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002483c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002483e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024842:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024846:	eef0 6a62 	vmov.f32	s13, s5
9002484a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002484e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024852:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024856:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
9002485a:	eef0 6a43 	vmov.f32	s13, s6
9002485e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024862:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90024866:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002486a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002486e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024872:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024876:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002487a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002487e:	ee12 2a90 	vmov	r2, s5
90024882:	eef0 2a47 	vmov.f32	s5, s14
90024886:	fb92 f3f3 	sdiv	r3, r2, r3
9002488a:	ee13 2a10 	vmov	r2, s6
9002488e:	9323      	str	r3, [sp, #140]	@ 0x8c
90024890:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024892:	eeb0 3a67 	vmov.f32	s6, s15
90024896:	fb92 f3f3 	sdiv	r3, r2, r3
9002489a:	9324      	str	r3, [sp, #144]	@ 0x90
9002489c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002489e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900248a0:	3b01      	subs	r3, #1
900248a2:	9311      	str	r3, [sp, #68]	@ 0x44
900248a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900248a6:	bf08      	it	eq
900248a8:	4613      	moveq	r3, r2
900248aa:	9308      	str	r3, [sp, #32]
900248ac:	e5df      	b.n	9002446e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900248ae:	fb08 f505 	mul.w	r5, r8, r5
900248b2:	fb09 5303 	mla	r3, r9, r3, r5
900248b6:	e65f      	b.n	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900248b8:	4681      	mov	r9, r0
900248ba:	e686      	b.n	900245ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900248bc:	f1c1 0210 	rsb	r2, r1, #16
900248c0:	4341      	muls	r1, r0
900248c2:	fb09 1902 	mla	r9, r9, r2, r1
900248c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900248ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
900248ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
900248d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900248d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900248da:	ea42 0909 	orr.w	r9, r2, r9
900248de:	fa1f f289 	uxth.w	r2, r9
900248e2:	e71b      	b.n	9002471c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900248e4:	803a      	strh	r2, [r7, #0]
900248e6:	e75d      	b.n	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900248e8:	f115 0e01 	adds.w	lr, r5, #1
900248ec:	f53f af5a 	bmi.w	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900248f0:	4572      	cmp	r2, lr
900248f2:	f6ff af57 	blt.w	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900248f6:	f110 0e01 	adds.w	lr, r0, #1
900248fa:	f53f af53 	bmi.w	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900248fe:	4573      	cmp	r3, lr
90024900:	f6ff af50 	blt.w	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024904:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024906:	b21b      	sxth	r3, r3
90024908:	b212      	sxth	r2, r2
9002490a:	9502      	str	r5, [sp, #8]
9002490c:	9301      	str	r3, [sp, #4]
9002490e:	9200      	str	r2, [sp, #0]
90024910:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024914:	e9cd c405 	strd	ip, r4, [sp, #20]
90024918:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9002491c:	4639      	mov	r1, r7
9002491e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90024920:	f7ff fc02 	bl	90024128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024924:	e73e      	b.n	900247a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024926:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024928:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002492c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002492e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024932:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024934:	fa1f fc82 	uxth.w	ip, r2
90024938:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002493c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002493e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024942:	141f      	asrs	r7, r3, #16
90024944:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024946:	141b      	asrs	r3, r3, #16
90024948:	fb01 3707 	mla	r7, r1, r7, r3
9002494c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002494e:	eb03 0a07 	add.w	sl, r3, r7
90024952:	f813 9007 	ldrb.w	r9, [r3, r7]
90024956:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002495a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002495e:	b29b      	uxth	r3, r3
90024960:	2d00      	cmp	r5, #0
90024962:	f000 813d 	beq.w	90024be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024966:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002496a:	eb0a 0b01 	add.w	fp, sl, r1
9002496e:	fa1f fa85 	uxth.w	sl, r5
90024972:	940f      	str	r4, [sp, #60]	@ 0x3c
90024974:	fb0a fc0c 	mul.w	ip, sl, ip
90024978:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002497c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024980:	eba0 000c 	sub.w	r0, r0, ip
90024984:	9410      	str	r4, [sp, #64]	@ 0x40
90024986:	fa1f fa8a 	uxth.w	sl, sl
9002498a:	b280      	uxth	r0, r0
9002498c:	eba3 030a 	sub.w	r3, r3, sl
90024990:	fb08 f000 	mul.w	r0, r8, r0
90024994:	b29b      	uxth	r3, r3
90024996:	fb09 0303 	mla	r3, r9, r3, r0
9002499a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002499c:	fb0a 3300 	mla	r3, sl, r0, r3
900249a0:	fb0c 3304 	mla	r3, ip, r4, r3
900249a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900249a8:	2b00      	cmp	r3, #0
900249aa:	f000 810b 	beq.w	90024bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900249ae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900249b0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900249b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900249b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900249ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900249be:	f000 8114 	beq.w	90024bea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900249c2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900249c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900249ca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900249ce:	fb0a fc0c 	mul.w	ip, sl, ip
900249d2:	fb09 f707 	mul.w	r7, r9, r7
900249d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900249da:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900249de:	f107 0b20 	add.w	fp, r7, #32
900249e2:	44cc      	add	ip, r9
900249e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900249e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900249ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
900249f0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900249f4:	ea4c 0909 	orr.w	r9, ip, r9
900249f8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900249fc:	8847      	ldrh	r7, [r0, #2]
900249fe:	d019      	beq.n	90024a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024a00:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024a04:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024a08:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024a0c:	fb0a fc0c 	mul.w	ip, sl, ip
90024a10:	fb08 f807 	mul.w	r8, r8, r7
90024a14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024a18:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024a1c:	f108 0b20 	add.w	fp, r8, #32
90024a20:	44bc      	add	ip, r7
90024a22:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024a26:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024a2a:	0a3f      	lsrs	r7, r7, #8
90024a2c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024a30:	ea4c 0707 	orr.w	r7, ip, r7
90024a34:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024a38:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024a3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024a40:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024a44:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024a48:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024a4c:	ea4c 0909 	orr.w	r9, ip, r9
90024a50:	ea4a 0707 	orr.w	r7, sl, r7
90024a54:	2d00      	cmp	r5, #0
90024a56:	f000 80ca 	beq.w	90024bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024a5a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90024a5e:	3901      	subs	r1, #1
90024a60:	0049      	lsls	r1, r1, #1
90024a62:	3102      	adds	r1, #2
90024a64:	eb00 0c01 	add.w	ip, r0, r1
90024a68:	5a41      	ldrh	r1, [r0, r1]
90024a6a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024a6c:	28ff      	cmp	r0, #255	@ 0xff
90024a6e:	d019      	beq.n	90024aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024a70:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90024a74:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024a76:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024a7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024a7e:	fb04 fa01 	mul.w	sl, r4, r1
90024a82:	fb08 f800 	mul.w	r8, r8, r0
90024a86:	f10a 0020 	add.w	r0, sl, #32
90024a8a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024a8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024a92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024a96:	4441      	add	r1, r8
90024a98:	0a00      	lsrs	r0, r0, #8
90024a9a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024a9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024aa2:	4301      	orrs	r1, r0
90024aa4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024aa6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024aaa:	2cff      	cmp	r4, #255	@ 0xff
90024aac:	d01a      	beq.n	90024ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024aae:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90024ab2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ab6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024aba:	fb04 fa00 	mul.w	sl, r4, r0
90024abe:	fb08 f80c 	mul.w	r8, r8, ip
90024ac2:	f10a 0c20 	add.w	ip, sl, #32
90024ac6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024aca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024ace:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024ad2:	4440      	add	r0, r8
90024ad4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ad8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024adc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024ae0:	ea40 000c 	orr.w	r0, r0, ip
90024ae4:	fb15 fc02 	smulbb	ip, r5, r2
90024ae8:	f1c5 0810 	rsb	r8, r5, #16
90024aec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024af0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024af4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024af8:	eba8 0802 	sub.w	r8, r8, r2
90024afc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024b00:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024b04:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024b08:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024b0c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024b10:	ea4a 0101 	orr.w	r1, sl, r1
90024b14:	437a      	muls	r2, r7
90024b16:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024b1a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024b1e:	fb09 2208 	mla	r2, r9, r8, r2
90024b22:	ea4b 0000 	orr.w	r0, fp, r0
90024b26:	fb05 2201 	mla	r2, r5, r1, r2
90024b2a:	fb0c 2200 	mla	r2, ip, r0, r2
90024b2e:	0d57      	lsrs	r7, r2, #21
90024b30:	0952      	lsrs	r2, r2, #5
90024b32:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024b36:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024b3a:	433a      	orrs	r2, r7
90024b3c:	2bff      	cmp	r3, #255	@ 0xff
90024b3e:	b292      	uxth	r2, r2
90024b40:	d102      	bne.n	90024b48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024b42:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024b44:	29ff      	cmp	r1, #255	@ 0xff
90024b46:	d063      	beq.n	90024c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024b48:	980a      	ldr	r0, [sp, #40]	@ 0x28
90024b4a:	1215      	asrs	r5, r2, #8
90024b4c:	f8be 1000 	ldrh.w	r1, [lr]
90024b50:	4343      	muls	r3, r0
90024b52:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024b54:	10cf      	asrs	r7, r1, #3
90024b56:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024b5a:	1c58      	adds	r0, r3, #1
90024b5c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90024b60:	eb00 2323 	add.w	r3, r0, r3, asr #8
90024b64:	1208      	asrs	r0, r1, #8
90024b66:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024b6a:	00c9      	lsls	r1, r1, #3
90024b6c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024b70:	b2db      	uxtb	r3, r3
90024b72:	b2c9      	uxtb	r1, r1
90024b74:	fb10 f003 	smulbb	r0, r0, r3
90024b78:	fb11 f103 	smulbb	r1, r1, r3
90024b7c:	fb05 0504 	mla	r5, r5, r4, r0
90024b80:	10d0      	asrs	r0, r2, #3
90024b82:	fb17 f703 	smulbb	r7, r7, r3
90024b86:	00d2      	lsls	r2, r2, #3
90024b88:	b2ad      	uxth	r5, r5
90024b8a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024b8e:	b2d2      	uxtb	r2, r2
90024b90:	fb00 7004 	mla	r0, r0, r4, r7
90024b94:	1c6b      	adds	r3, r5, #1
90024b96:	fb02 1204 	mla	r2, r2, r4, r1
90024b9a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024b9e:	b292      	uxth	r2, r2
90024ba0:	b280      	uxth	r0, r0
90024ba2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024ba6:	1c57      	adds	r7, r2, #1
90024ba8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024bac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024bb0:	433d      	orrs	r5, r7
90024bb2:	1c47      	adds	r7, r0, #1
90024bb4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024bb8:	097f      	lsrs	r7, r7, #5
90024bba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024bbe:	433d      	orrs	r5, r7
90024bc0:	f8ae 5000 	strh.w	r5, [lr]
90024bc4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024bc6:	f10e 0e02 	add.w	lr, lr, #2
90024bca:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024bcc:	4413      	add	r3, r2
90024bce:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024bd0:	9321      	str	r3, [sp, #132]	@ 0x84
90024bd2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024bd4:	441a      	add	r2, r3
90024bd6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024bd8:	3b01      	subs	r3, #1
90024bda:	9222      	str	r2, [sp, #136]	@ 0x88
90024bdc:	9313      	str	r3, [sp, #76]	@ 0x4c
90024bde:	e61c      	b.n	9002481a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90024be0:	fb08 f000 	mul.w	r0, r8, r0
90024be4:	fb09 0303 	mla	r3, r9, r3, r0
90024be8:	e6dc      	b.n	900249a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024bea:	46b9      	mov	r9, r7
90024bec:	e704      	b.n	900249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90024bee:	f1c2 0110 	rsb	r1, r2, #16
90024bf2:	437a      	muls	r2, r7
90024bf4:	fb09 2901 	mla	r9, r9, r1, r2
90024bf8:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024bfc:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024c00:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024c04:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024c08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024c0c:	4302      	orrs	r2, r0
90024c0e:	e795      	b.n	90024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90024c10:	f8ae 2000 	strh.w	r2, [lr]
90024c14:	e7d6      	b.n	90024bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024c16:	b017      	add	sp, #92	@ 0x5c
90024c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024c20:	b085      	sub	sp, #20
90024c22:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024c26:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024c2a:	2800      	cmp	r0, #0
90024c2c:	9103      	str	r1, [sp, #12]
90024c2e:	fb00 7406 	mla	r4, r0, r6, r7
90024c32:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024c36:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024c3a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90024c3e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90024c42:	eb02 0904 	add.w	r9, r2, r4
90024c46:	9501      	str	r5, [sp, #4]
90024c48:	f2c0 8141 	blt.w	90024ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024c4c:	4583      	cmp	fp, r0
90024c4e:	f340 813e 	ble.w	90024ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024c52:	2f00      	cmp	r7, #0
90024c54:	f2c0 8137 	blt.w	90024ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024c58:	42be      	cmp	r6, r7
90024c5a:	f340 8134 	ble.w	90024ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024c5e:	f812 c004 	ldrb.w	ip, [r2, r4]
90024c62:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90024c66:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90024c6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024c6e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90024c72:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024c76:	4355      	muls	r5, r2
90024c78:	fb0c f203 	mul.w	r2, ip, r3
90024c7c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024c80:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90024c84:	441d      	add	r5, r3
90024c86:	f102 0320 	add.w	r3, r2, #32
90024c8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024c8e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024c92:	0a1b      	lsrs	r3, r3, #8
90024c94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024c98:	431c      	orrs	r4, r3
90024c9a:	1c7b      	adds	r3, r7, #1
90024c9c:	f100 811c 	bmi.w	90024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024ca0:	429e      	cmp	r6, r3
90024ca2:	f340 8119 	ble.w	90024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024ca6:	2900      	cmp	r1, #0
90024ca8:	f000 8119 	beq.w	90024ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90024cac:	9a01      	ldr	r2, [sp, #4]
90024cae:	f899 3001 	ldrb.w	r3, [r9, #1]
90024cb2:	8855      	ldrh	r5, [r2, #2]
90024cb4:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024cb8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024cbc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024cc0:	fb08 f802 	mul.w	r8, r8, r2
90024cc4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024cc8:	435d      	muls	r5, r3
90024cca:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024cce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024cd2:	44d0      	add	r8, sl
90024cd4:	f105 0a20 	add.w	sl, r5, #32
90024cd8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024cdc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024ce0:	0a2d      	lsrs	r5, r5, #8
90024ce2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024ce6:	432a      	orrs	r2, r5
90024ce8:	3001      	adds	r0, #1
90024cea:	f100 80fe 	bmi.w	90024eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024cee:	4583      	cmp	fp, r0
90024cf0:	f340 80fb 	ble.w	90024eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024cf4:	f1be 0f00 	cmp.w	lr, #0
90024cf8:	f000 80fc 	beq.w	90024ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024cfc:	2f00      	cmp	r7, #0
90024cfe:	f2c0 80f1 	blt.w	90024ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024d02:	42be      	cmp	r6, r7
90024d04:	f340 80ee 	ble.w	90024ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024d08:	9801      	ldr	r0, [sp, #4]
90024d0a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90024d0e:	f819 5006 	ldrb.w	r5, [r9, r6]
90024d12:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024d16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024d1a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90024d1e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90024d22:	fb0a fa00 	mul.w	sl, sl, r0
90024d26:	fb05 f808 	mul.w	r8, r5, r8
90024d2a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024d2e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90024d32:	4482      	add	sl, r0
90024d34:	f108 0020 	add.w	r0, r8, #32
90024d38:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024d3c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024d40:	0a00      	lsrs	r0, r0, #8
90024d42:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d46:	ea4b 0b00 	orr.w	fp, fp, r0
90024d4a:	3701      	adds	r7, #1
90024d4c:	f100 80d7 	bmi.w	90024efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024d50:	42be      	cmp	r6, r7
90024d52:	f340 80d4 	ble.w	90024efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024d56:	2900      	cmp	r1, #0
90024d58:	f000 80d4 	beq.w	90024f04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90024d5c:	3601      	adds	r6, #1
90024d5e:	9801      	ldr	r0, [sp, #4]
90024d60:	f819 7006 	ldrb.w	r7, [r9, r6]
90024d64:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024d68:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024d6c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90024d70:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d74:	fb09 f906 	mul.w	r9, r9, r6
90024d78:	fb07 f800 	mul.w	r8, r7, r0
90024d7c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90024d80:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024d84:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024d88:	44d1      	add	r9, sl
90024d8a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024d8e:	f108 0020 	add.w	r0, r8, #32
90024d92:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024d96:	0a00      	lsrs	r0, r0, #8
90024d98:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d9c:	4330      	orrs	r0, r6
90024d9e:	b28e      	uxth	r6, r1
90024da0:	fa1f f98e 	uxth.w	r9, lr
90024da4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024da8:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024dac:	fb06 f809 	mul.w	r8, r6, r9
90024db0:	0136      	lsls	r6, r6, #4
90024db2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024db6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024dba:	9601      	str	r6, [sp, #4]
90024dbc:	ea4a 0404 	orr.w	r4, sl, r4
90024dc0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024dc4:	fa1f f689 	uxth.w	r6, r9
90024dc8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024dcc:	fb11 f90e 	smulbb	r9, r1, lr
90024dd0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024dd4:	9602      	str	r6, [sp, #8]
90024dd6:	4626      	mov	r6, r4
90024dd8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024ddc:	f1ce 0410 	rsb	r4, lr, #16
90024de0:	ea4a 0202 	orr.w	r2, sl, r2
90024de4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024de8:	1a64      	subs	r4, r4, r1
90024dea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024dee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024df2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024df6:	434a      	muls	r2, r1
90024df8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024dfc:	ea4a 0000 	orr.w	r0, sl, r0
90024e00:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024e04:	fb04 2406 	mla	r4, r4, r6, r2
90024e08:	9903      	ldr	r1, [sp, #12]
90024e0a:	fb09 4200 	mla	r2, r9, r0, r4
90024e0e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024e12:	9801      	ldr	r0, [sp, #4]
90024e14:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024e18:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024e1c:	8809      	ldrh	r1, [r1, #0]
90024e1e:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90024e22:	ea44 0b0b 	orr.w	fp, r4, fp
90024e26:	9c02      	ldr	r4, [sp, #8]
90024e28:	1b00      	subs	r0, r0, r4
90024e2a:	9c01      	ldr	r4, [sp, #4]
90024e2c:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024e30:	eba4 0608 	sub.w	r6, r4, r8
90024e34:	b280      	uxth	r0, r0
90024e36:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024e3a:	b2b6      	uxth	r6, r6
90024e3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024e40:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024e44:	4373      	muls	r3, r6
90024e46:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024e4a:	fb0c 3300 	mla	r3, ip, r0, r3
90024e4e:	9802      	ldr	r0, [sp, #8]
90024e50:	ea42 0e0e 	orr.w	lr, r2, lr
90024e54:	fb00 3505 	mla	r5, r0, r5, r3
90024e58:	120b      	asrs	r3, r1, #8
90024e5a:	10c8      	asrs	r0, r1, #3
90024e5c:	fb08 5707 	mla	r7, r8, r7, r5
90024e60:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024e64:	00c9      	lsls	r1, r1, #3
90024e66:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024e6a:	ea6f 2727 	mvn.w	r7, r7, asr #8
90024e6e:	fa1f f28e 	uxth.w	r2, lr
90024e72:	b2c9      	uxtb	r1, r1
90024e74:	b2ff      	uxtb	r7, r7
90024e76:	437b      	muls	r3, r7
90024e78:	4378      	muls	r0, r7
90024e7a:	434f      	muls	r7, r1
90024e7c:	1c59      	adds	r1, r3, #1
90024e7e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024e82:	1213      	asrs	r3, r2, #8
90024e84:	f023 0307 	bic.w	r3, r3, #7
90024e88:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024e8c:	1c41      	adds	r1, r0, #1
90024e8e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024e92:	10d1      	asrs	r1, r2, #3
90024e94:	021b      	lsls	r3, r3, #8
90024e96:	f021 0103 	bic.w	r1, r1, #3
90024e9a:	00d2      	lsls	r2, r2, #3
90024e9c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90024ea0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90024ea4:	00c9      	lsls	r1, r1, #3
90024ea6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024eaa:	430b      	orrs	r3, r1
90024eac:	1c79      	adds	r1, r7, #1
90024eae:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90024eb2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024eb6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024eba:	431a      	orrs	r2, r3
90024ebc:	9b03      	ldr	r3, [sp, #12]
90024ebe:	801a      	strh	r2, [r3, #0]
90024ec0:	b005      	add	sp, #20
90024ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ec6:	f04f 0c00 	mov.w	ip, #0
90024eca:	4664      	mov	r4, ip
90024ecc:	e6e5      	b.n	90024c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90024ece:	2300      	movs	r3, #0
90024ed0:	469c      	mov	ip, r3
90024ed2:	461a      	mov	r2, r3
90024ed4:	461c      	mov	r4, r3
90024ed6:	e707      	b.n	90024ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024ed8:	2300      	movs	r3, #0
90024eda:	461a      	mov	r2, r3
90024edc:	e704      	b.n	90024ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024ede:	460b      	mov	r3, r1
90024ee0:	460a      	mov	r2, r1
90024ee2:	e701      	b.n	90024ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024ee4:	2500      	movs	r5, #0
90024ee6:	46ab      	mov	fp, r5
90024ee8:	e72f      	b.n	90024d4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90024eea:	2700      	movs	r7, #0
90024eec:	463d      	mov	r5, r7
90024eee:	4638      	mov	r0, r7
90024ef0:	46bb      	mov	fp, r7
90024ef2:	e754      	b.n	90024d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024ef4:	4677      	mov	r7, lr
90024ef6:	4675      	mov	r5, lr
90024ef8:	4670      	mov	r0, lr
90024efa:	46f3      	mov	fp, lr
90024efc:	e74f      	b.n	90024d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024efe:	2700      	movs	r7, #0
90024f00:	4638      	mov	r0, r7
90024f02:	e74c      	b.n	90024d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024f04:	460f      	mov	r7, r1
90024f06:	4608      	mov	r0, r1
90024f08:	e749      	b.n	90024d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90024f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f10:	b093      	sub	sp, #76	@ 0x4c
90024f12:	9210      	str	r2, [sp, #64]	@ 0x40
90024f14:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024f16:	9011      	str	r0, [sp, #68]	@ 0x44
90024f18:	910e      	str	r1, [sp, #56]	@ 0x38
90024f1a:	6850      	ldr	r0, [r2, #4]
90024f1c:	9306      	str	r3, [sp, #24]
90024f1e:	6812      	ldr	r2, [r2, #0]
90024f20:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90024f24:	fb00 1303 	mla	r3, r0, r3, r1
90024f28:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024f2c:	9307      	str	r3, [sp, #28]
90024f2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024f30:	681b      	ldr	r3, [r3, #0]
90024f32:	9308      	str	r3, [sp, #32]
90024f34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024f36:	685b      	ldr	r3, [r3, #4]
90024f38:	9309      	str	r3, [sp, #36]	@ 0x24
90024f3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024f3c:	2b00      	cmp	r3, #0
90024f3e:	dc03      	bgt.n	90024f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024f40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024f42:	2b00      	cmp	r3, #0
90024f44:	f340 83b6 	ble.w	900256b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024f48:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024f4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024f4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024f52:	1e48      	subs	r0, r1, #1
90024f54:	1e55      	subs	r5, r2, #1
90024f56:	9b06      	ldr	r3, [sp, #24]
90024f58:	2b00      	cmp	r3, #0
90024f5a:	f340 8165 	ble.w	90025228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90024f5e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90024f60:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024f62:	1436      	asrs	r6, r6, #16
90024f64:	ea4f 4323 	mov.w	r3, r3, asr #16
90024f68:	d406      	bmi.n	90024f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024f6a:	4286      	cmp	r6, r0
90024f6c:	da04      	bge.n	90024f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024f6e:	2b00      	cmp	r3, #0
90024f70:	db02      	blt.n	90024f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024f72:	42ab      	cmp	r3, r5
90024f74:	f2c0 8159 	blt.w	9002522a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90024f78:	3601      	adds	r6, #1
90024f7a:	f100 8146 	bmi.w	9002520a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024f7e:	42b1      	cmp	r1, r6
90024f80:	f2c0 8143 	blt.w	9002520a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024f84:	3301      	adds	r3, #1
90024f86:	f100 8140 	bmi.w	9002520a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024f8a:	429a      	cmp	r2, r3
90024f8c:	f2c0 813d 	blt.w	9002520a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024f90:	9b06      	ldr	r3, [sp, #24]
90024f92:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024f96:	9f07      	ldr	r7, [sp, #28]
90024f98:	930f      	str	r3, [sp, #60]	@ 0x3c
90024f9a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024f9c:	2b00      	cmp	r3, #0
90024f9e:	f340 8166 	ble.w	9002526e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024fa2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024fa4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90024fa6:	1418      	asrs	r0, r3, #16
90024fa8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024faa:	142d      	asrs	r5, r5, #16
90024fac:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024fb0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024fb2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024fb6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024fb8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024fbc:	f100 81f0 	bmi.w	900253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024fc0:	f102 3eff 	add.w	lr, r2, #4294967295
90024fc4:	4575      	cmp	r5, lr
90024fc6:	f280 81eb 	bge.w	900253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024fca:	2800      	cmp	r0, #0
90024fcc:	f2c0 81e8 	blt.w	900253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024fd0:	f103 3eff 	add.w	lr, r3, #4294967295
90024fd4:	4570      	cmp	r0, lr
90024fd6:	f280 81e3 	bge.w	900253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024fda:	b212      	sxth	r2, r2
90024fdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024fde:	fa1f fe81 	uxth.w	lr, r1
90024fe2:	fb00 5002 	mla	r0, r0, r2, r5
90024fe6:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024fea:	eb03 0a00 	add.w	sl, r3, r0
90024fee:	f813 9000 	ldrb.w	r9, [r3, r0]
90024ff2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024ff6:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024ffa:	b29b      	uxth	r3, r3
90024ffc:	f1bc 0f00 	cmp.w	ip, #0
90025000:	f000 817b 	beq.w	900252fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025004:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025008:	eb0a 0b02 	add.w	fp, sl, r2
9002500c:	fa1f fa8c 	uxth.w	sl, ip
90025010:	940a      	str	r4, [sp, #40]	@ 0x28
90025012:	fb0a fe0e 	mul.w	lr, sl, lr
90025016:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002501a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002501e:	eba5 050e 	sub.w	r5, r5, lr
90025022:	940b      	str	r4, [sp, #44]	@ 0x2c
90025024:	fa1f fa8a 	uxth.w	sl, sl
90025028:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002502a:	b2ad      	uxth	r5, r5
9002502c:	eba3 030a 	sub.w	r3, r3, sl
90025030:	fb08 f505 	mul.w	r5, r8, r5
90025034:	b29b      	uxth	r3, r3
90025036:	fb09 5303 	mla	r3, r9, r3, r5
9002503a:	fb0a 3304 	mla	r3, sl, r4, r3
9002503e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025040:	fb0e 3304 	mla	r3, lr, r4, r3
90025044:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025048:	2b00      	cmp	r3, #0
9002504a:	f000 80d1 	beq.w	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002504e:	9c08      	ldr	r4, [sp, #32]
90025050:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025054:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025058:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9002505c:	f000 8152 	beq.w	90025304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025060:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025064:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025068:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002506c:	fb0a fe0e 	mul.w	lr, sl, lr
90025070:	fb09 f000 	mul.w	r0, r9, r0
90025074:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90025078:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002507c:	f100 0b20 	add.w	fp, r0, #32
90025080:	44ce      	add	lr, r9
90025082:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90025086:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002508a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002508e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025092:	ea4e 0909 	orr.w	r9, lr, r9
90025096:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002509a:	8868      	ldrh	r0, [r5, #2]
9002509c:	d019      	beq.n	900250d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002509e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900250a2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900250a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900250aa:	fb0a fe0e 	mul.w	lr, sl, lr
900250ae:	fb08 f800 	mul.w	r8, r8, r0
900250b2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900250b6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900250ba:	f108 0b20 	add.w	fp, r8, #32
900250be:	4486      	add	lr, r0
900250c0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900250c4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900250c8:	0a00      	lsrs	r0, r0, #8
900250ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900250ce:	ea4e 0000 	orr.w	r0, lr, r0
900250d2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900250d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900250da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900250de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900250e2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900250e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900250ea:	ea4e 0909 	orr.w	r9, lr, r9
900250ee:	ea4a 0000 	orr.w	r0, sl, r0
900250f2:	f1bc 0f00 	cmp.w	ip, #0
900250f6:	f000 8107 	beq.w	90025308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900250fa:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
900250fe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025100:	3a01      	subs	r2, #1
90025102:	2cff      	cmp	r4, #255	@ 0xff
90025104:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025108:	f102 0202 	add.w	r2, r2, #2
9002510c:	eb05 0e02 	add.w	lr, r5, r2
90025110:	5aaa      	ldrh	r2, [r5, r2]
90025112:	d018      	beq.n	90025146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025114:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025118:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002511c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025120:	fb04 fa02 	mul.w	sl, r4, r2
90025124:	fb08 f805 	mul.w	r8, r8, r5
90025128:	f10a 0520 	add.w	r5, sl, #32
9002512c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025130:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025134:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025138:	4442      	add	r2, r8
9002513a:	0a2d      	lsrs	r5, r5, #8
9002513c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025140:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025144:	432a      	orrs	r2, r5
90025146:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025148:	f8be 5002 	ldrh.w	r5, [lr, #2]
9002514c:	2cff      	cmp	r4, #255	@ 0xff
9002514e:	d01a      	beq.n	90025186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025150:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025154:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025158:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002515c:	fb04 fa05 	mul.w	sl, r4, r5
90025160:	fb08 f80e 	mul.w	r8, r8, lr
90025164:	f10a 0e20 	add.w	lr, sl, #32
90025168:	ea06 1558 	and.w	r5, r6, r8, lsr #5
9002516c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025170:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025174:	4445      	add	r5, r8
90025176:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002517a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002517e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90025182:	ea45 050e 	orr.w	r5, r5, lr
90025186:	fb1c fe01 	smulbb	lr, ip, r1
9002518a:	f1cc 0810 	rsb	r8, ip, #16
9002518e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025192:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025196:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002519a:	eba8 0801 	sub.w	r8, r8, r1
9002519e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900251a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900251a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900251aa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900251ae:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900251b2:	ea4a 0202 	orr.w	r2, sl, r2
900251b6:	4341      	muls	r1, r0
900251b8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900251bc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900251c0:	fb09 1108 	mla	r1, r9, r8, r1
900251c4:	ea4b 0505 	orr.w	r5, fp, r5
900251c8:	fb0c 1102 	mla	r1, ip, r2, r1
900251cc:	fb0e 1e05 	mla	lr, lr, r5, r1
900251d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
900251d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900251d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900251dc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900251e0:	ea42 0e0e 	orr.w	lr, r2, lr
900251e4:	fa1f f28e 	uxth.w	r2, lr
900251e8:	2bff      	cmp	r3, #255	@ 0xff
900251ea:	f040 80a1 	bne.w	90025330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900251ee:	803a      	strh	r2, [r7, #0]
900251f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900251f2:	3702      	adds	r7, #2
900251f4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
900251f6:	4413      	add	r3, r2
900251f8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
900251fa:	931d      	str	r3, [sp, #116]	@ 0x74
900251fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900251fe:	441a      	add	r2, r3
90025200:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025202:	3b01      	subs	r3, #1
90025204:	921e      	str	r2, [sp, #120]	@ 0x78
90025206:	930f      	str	r3, [sp, #60]	@ 0x3c
90025208:	e6c7      	b.n	90024f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002520a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002520c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002520e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90025210:	4433      	add	r3, r6
90025212:	931d      	str	r3, [sp, #116]	@ 0x74
90025214:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025216:	441c      	add	r4, r3
90025218:	9b06      	ldr	r3, [sp, #24]
9002521a:	3b01      	subs	r3, #1
9002521c:	941e      	str	r4, [sp, #120]	@ 0x78
9002521e:	9306      	str	r3, [sp, #24]
90025220:	9b07      	ldr	r3, [sp, #28]
90025222:	3302      	adds	r3, #2
90025224:	9307      	str	r3, [sp, #28]
90025226:	e696      	b.n	90024f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025228:	d028      	beq.n	9002527c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002522a:	9b06      	ldr	r3, [sp, #24]
9002522c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002522e:	3b01      	subs	r3, #1
90025230:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90025232:	fb00 5003 	mla	r0, r0, r3, r5
90025236:	1400      	asrs	r0, r0, #16
90025238:	f53f aeaa 	bmi.w	90024f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002523c:	3901      	subs	r1, #1
9002523e:	4288      	cmp	r0, r1
90025240:	f6bf aea6 	bge.w	90024f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025244:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025246:	981e      	ldr	r0, [sp, #120]	@ 0x78
90025248:	fb01 0303 	mla	r3, r1, r3, r0
9002524c:	141b      	asrs	r3, r3, #16
9002524e:	f53f ae9f 	bmi.w	90024f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025252:	3a01      	subs	r2, #1
90025254:	4293      	cmp	r3, r2
90025256:	f6bf ae9b 	bge.w	90024f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002525a:	9b06      	ldr	r3, [sp, #24]
9002525c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025260:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025264:	930f      	str	r3, [sp, #60]	@ 0x3c
90025266:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025268:	2b00      	cmp	r3, #0
9002526a:	f300 80b6 	bgt.w	900253da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
9002526e:	9b06      	ldr	r3, [sp, #24]
90025270:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025274:	9b07      	ldr	r3, [sp, #28]
90025276:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002527a:	9307      	str	r3, [sp, #28]
9002527c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002527e:	2b00      	cmp	r3, #0
90025280:	f340 8218 	ble.w	900256b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025284:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025288:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002528a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002528e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025292:	eef0 6a62 	vmov.f32	s13, s5
90025296:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002529a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002529e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252a2:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
900252a6:	eef0 6a43 	vmov.f32	s13, s6
900252aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252ae:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900252b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900252b6:	ee61 7a27 	vmul.f32	s15, s2, s15
900252ba:	ee77 2a62 	vsub.f32	s5, s14, s5
900252be:	ee37 3ac3 	vsub.f32	s6, s15, s6
900252c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900252c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900252ca:	ee12 2a90 	vmov	r2, s5
900252ce:	eef0 2a47 	vmov.f32	s5, s14
900252d2:	fb92 f3f3 	sdiv	r3, r2, r3
900252d6:	ee13 2a10 	vmov	r2, s6
900252da:	931f      	str	r3, [sp, #124]	@ 0x7c
900252dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900252de:	eeb0 3a67 	vmov.f32	s6, s15
900252e2:	fb92 f3f3 	sdiv	r3, r2, r3
900252e6:	9320      	str	r3, [sp, #128]	@ 0x80
900252e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900252ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900252ec:	3b01      	subs	r3, #1
900252ee:	930e      	str	r3, [sp, #56]	@ 0x38
900252f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900252f2:	bf08      	it	eq
900252f4:	4613      	moveq	r3, r2
900252f6:	9306      	str	r3, [sp, #24]
900252f8:	e61f      	b.n	90024f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900252fa:	fb08 f505 	mul.w	r5, r8, r5
900252fe:	fb09 5303 	mla	r3, r9, r3, r5
90025302:	e69f      	b.n	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025304:	4681      	mov	r9, r0
90025306:	e6c6      	b.n	90025096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025308:	f1c1 0210 	rsb	r2, r1, #16
9002530c:	4341      	muls	r1, r0
9002530e:	fb09 1902 	mla	r9, r9, r2, r1
90025312:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025316:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002531a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002531e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025322:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025326:	ea42 0909 	orr.w	r9, r2, r9
9002532a:	fa1f f289 	uxth.w	r2, r9
9002532e:	e75b      	b.n	900251e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90025330:	f8b7 c000 	ldrh.w	ip, [r7]
90025334:	43db      	mvns	r3, r3
90025336:	ea4f 202c 	mov.w	r0, ip, asr #8
9002533a:	fa5f fe83 	uxtb.w	lr, r3
9002533e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025342:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025346:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002534a:	fb00 f00e 	mul.w	r0, r0, lr
9002534e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025352:	b2db      	uxtb	r3, r3
90025354:	1c41      	adds	r1, r0, #1
90025356:	fb05 f50e 	mul.w	r5, r5, lr
9002535a:	fb03 f30e 	mul.w	r3, r3, lr
9002535e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025362:	1211      	asrs	r1, r2, #8
90025364:	f021 0107 	bic.w	r1, r1, #7
90025368:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002536c:	48d3      	ldr	r0, [pc, #844]	@ (900256bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002536e:	b2c9      	uxtb	r1, r1
90025370:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025374:	1c69      	adds	r1, r5, #1
90025376:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002537a:	10d1      	asrs	r1, r2, #3
9002537c:	00d2      	lsls	r2, r2, #3
9002537e:	f021 0103 	bic.w	r1, r1, #3
90025382:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025386:	00c9      	lsls	r1, r1, #3
90025388:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002538c:	4301      	orrs	r1, r0
9002538e:	1c58      	adds	r0, r3, #1
90025390:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025394:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025398:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002539c:	430a      	orrs	r2, r1
9002539e:	e726      	b.n	900251ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900253a0:	f115 0e01 	adds.w	lr, r5, #1
900253a4:	f53f af24 	bmi.w	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900253a8:	4572      	cmp	r2, lr
900253aa:	f6ff af21 	blt.w	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900253ae:	f110 0e01 	adds.w	lr, r0, #1
900253b2:	f53f af1d 	bmi.w	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900253b6:	4573      	cmp	r3, lr
900253b8:	f6ff af1a 	blt.w	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900253bc:	b21b      	sxth	r3, r3
900253be:	b212      	sxth	r2, r2
900253c0:	9301      	str	r3, [sp, #4]
900253c2:	9200      	str	r2, [sp, #0]
900253c4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900253c8:	e9cd 5002 	strd	r5, r0, [sp, #8]
900253cc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900253d0:	4639      	mov	r1, r7
900253d2:	9811      	ldr	r0, [sp, #68]	@ 0x44
900253d4:	f7ff fc22 	bl	90024c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900253d8:	e70a      	b.n	900251f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900253da:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900253dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900253e0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900253e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900253e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900253e8:	fa1f fc82 	uxth.w	ip, r2
900253ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900253f0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900253f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900253f6:	141f      	asrs	r7, r3, #16
900253f8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900253fa:	141b      	asrs	r3, r3, #16
900253fc:	fb01 3707 	mla	r7, r1, r7, r3
90025400:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025402:	eb03 0a07 	add.w	sl, r3, r7
90025406:	f813 9007 	ldrb.w	r9, [r3, r7]
9002540a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002540e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025412:	b29b      	uxth	r3, r3
90025414:	2d00      	cmp	r5, #0
90025416:	f000 80fe 	beq.w	90025616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002541a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002541e:	eb0a 0b01 	add.w	fp, sl, r1
90025422:	fa1f fa85 	uxth.w	sl, r5
90025426:	940c      	str	r4, [sp, #48]	@ 0x30
90025428:	fb0a fc0c 	mul.w	ip, sl, ip
9002542c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025430:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025434:	eba0 000c 	sub.w	r0, r0, ip
90025438:	940d      	str	r4, [sp, #52]	@ 0x34
9002543a:	fa1f fa8a 	uxth.w	sl, sl
9002543e:	b280      	uxth	r0, r0
90025440:	eba3 030a 	sub.w	r3, r3, sl
90025444:	fb08 f000 	mul.w	r0, r8, r0
90025448:	b29b      	uxth	r3, r3
9002544a:	fb09 0303 	mla	r3, r9, r3, r0
9002544e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025450:	fb0a 3300 	mla	r3, sl, r0, r3
90025454:	fb0c 3304 	mla	r3, ip, r4, r3
90025458:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002545c:	2b00      	cmp	r3, #0
9002545e:	f000 80cc 	beq.w	900255fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025462:	9808      	ldr	r0, [sp, #32]
90025464:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025468:	9c08      	ldr	r4, [sp, #32]
9002546a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002546e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025472:	f000 80d5 	beq.w	90025620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025476:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
9002547a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002547e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025482:	fb0a fc0c 	mul.w	ip, sl, ip
90025486:	fb09 f707 	mul.w	r7, r9, r7
9002548a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002548e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025492:	f107 0b20 	add.w	fp, r7, #32
90025496:	44cc      	add	ip, r9
90025498:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002549c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900254a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900254a4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900254a8:	ea4c 0909 	orr.w	r9, ip, r9
900254ac:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900254b0:	8847      	ldrh	r7, [r0, #2]
900254b2:	d019      	beq.n	900254e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900254b4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900254b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900254bc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900254c0:	fb0a fc0c 	mul.w	ip, sl, ip
900254c4:	fb08 f807 	mul.w	r8, r8, r7
900254c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900254cc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900254d0:	f108 0b20 	add.w	fp, r8, #32
900254d4:	44bc      	add	ip, r7
900254d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900254da:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900254de:	0a3f      	lsrs	r7, r7, #8
900254e0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900254e4:	ea4c 0707 	orr.w	r7, ip, r7
900254e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900254ec:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900254f0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900254f4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900254f8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900254fc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025500:	ea4c 0909 	orr.w	r9, ip, r9
90025504:	ea4a 0707 	orr.w	r7, sl, r7
90025508:	2d00      	cmp	r5, #0
9002550a:	f000 808b 	beq.w	90025624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002550e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025512:	3901      	subs	r1, #1
90025514:	0049      	lsls	r1, r1, #1
90025516:	3102      	adds	r1, #2
90025518:	eb00 0c01 	add.w	ip, r0, r1
9002551c:	5a41      	ldrh	r1, [r0, r1]
9002551e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025520:	28ff      	cmp	r0, #255	@ 0xff
90025522:	d019      	beq.n	90025558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025524:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025528:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002552a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002552e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025532:	fb04 fa01 	mul.w	sl, r4, r1
90025536:	fb08 f800 	mul.w	r8, r8, r0
9002553a:	f10a 0020 	add.w	r0, sl, #32
9002553e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025542:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025546:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002554a:	4441      	add	r1, r8
9002554c:	0a00      	lsrs	r0, r0, #8
9002554e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025552:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025556:	4301      	orrs	r1, r0
90025558:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002555a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002555e:	2cff      	cmp	r4, #255	@ 0xff
90025560:	d01a      	beq.n	90025598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025562:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90025566:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002556a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002556e:	fb04 fa00 	mul.w	sl, r4, r0
90025572:	fb08 f80c 	mul.w	r8, r8, ip
90025576:	f10a 0c20 	add.w	ip, sl, #32
9002557a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002557e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025582:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025586:	4440      	add	r0, r8
90025588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002558c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025590:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025594:	ea40 000c 	orr.w	r0, r0, ip
90025598:	fb15 fc02 	smulbb	ip, r5, r2
9002559c:	f1c5 0810 	rsb	r8, r5, #16
900255a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900255a4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900255a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
900255ac:	eba8 0802 	sub.w	r8, r8, r2
900255b0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900255b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900255b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900255bc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900255c0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900255c4:	ea4a 0101 	orr.w	r1, sl, r1
900255c8:	437a      	muls	r2, r7
900255ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900255ce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900255d2:	fb09 2208 	mla	r2, r9, r8, r2
900255d6:	ea4b 0000 	orr.w	r0, fp, r0
900255da:	fb05 2201 	mla	r2, r5, r1, r2
900255de:	fb0c 2200 	mla	r2, ip, r0, r2
900255e2:	0d57      	lsrs	r7, r2, #21
900255e4:	0952      	lsrs	r2, r2, #5
900255e6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900255ea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900255ee:	433a      	orrs	r2, r7
900255f0:	2bff      	cmp	r3, #255	@ 0xff
900255f2:	b292      	uxth	r2, r2
900255f4:	d127      	bne.n	90025646 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900255f6:	f8ae 2000 	strh.w	r2, [lr]
900255fa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900255fc:	f10e 0e02 	add.w	lr, lr, #2
90025600:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025602:	4413      	add	r3, r2
90025604:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025606:	931d      	str	r3, [sp, #116]	@ 0x74
90025608:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002560a:	441a      	add	r2, r3
9002560c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002560e:	3b01      	subs	r3, #1
90025610:	921e      	str	r2, [sp, #120]	@ 0x78
90025612:	930f      	str	r3, [sp, #60]	@ 0x3c
90025614:	e627      	b.n	90025266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025616:	fb08 f000 	mul.w	r0, r8, r0
9002561a:	fb09 0303 	mla	r3, r9, r3, r0
9002561e:	e71b      	b.n	90025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025620:	46b9      	mov	r9, r7
90025622:	e743      	b.n	900254ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025624:	f1c2 0110 	rsb	r1, r2, #16
90025628:	437a      	muls	r2, r7
9002562a:	fb09 2901 	mla	r9, r9, r1, r2
9002562e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025632:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025636:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002563a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002563e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025642:	4302      	orrs	r2, r0
90025644:	e7d4      	b.n	900255f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025646:	f8be 7000 	ldrh.w	r7, [lr]
9002564a:	43db      	mvns	r3, r3
9002564c:	4c1b      	ldr	r4, [pc, #108]	@ (900256bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002564e:	1238      	asrs	r0, r7, #8
90025650:	fa5f fc83 	uxtb.w	ip, r3
90025654:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025658:	10fd      	asrs	r5, r7, #3
9002565a:	00fb      	lsls	r3, r7, #3
9002565c:	fb00 f00c 	mul.w	r0, r0, ip
90025660:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025664:	b2db      	uxtb	r3, r3
90025666:	fb05 f10c 	mul.w	r1, r5, ip
9002566a:	1c45      	adds	r5, r0, #1
9002566c:	fb03 f30c 	mul.w	r3, r3, ip
90025670:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025674:	1215      	asrs	r5, r2, #8
90025676:	f025 0507 	bic.w	r5, r5, #7
9002567a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9002567e:	1c4d      	adds	r5, r1, #1
90025680:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025684:	10d1      	asrs	r1, r2, #3
90025686:	b2c0      	uxtb	r0, r0
90025688:	f021 0103 	bic.w	r1, r1, #3
9002568c:	00d2      	lsls	r2, r2, #3
9002568e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025692:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025696:	00c9      	lsls	r1, r1, #3
90025698:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002569c:	4308      	orrs	r0, r1
9002569e:	1c59      	adds	r1, r3, #1
900256a0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900256a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900256a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900256ac:	4318      	orrs	r0, r3
900256ae:	f8ae 0000 	strh.w	r0, [lr]
900256b2:	e7a2      	b.n	900255fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900256b4:	b013      	add	sp, #76	@ 0x4c
900256b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900256ba:	bf00      	nop
900256bc:	fffff800 	.word	0xfffff800

900256c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900256c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900256c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
900256c8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
900256cc:	fb05 4c03 	mla	ip, r5, r3, r4
900256d0:	2d00      	cmp	r5, #0
900256d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
900256d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900256da:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900256de:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900256e2:	8808      	ldrh	r0, [r1, #0]
900256e4:	f2c0 80a7 	blt.w	90025836 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900256e8:	45aa      	cmp	sl, r5
900256ea:	f340 80a4 	ble.w	90025836 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900256ee:	2c00      	cmp	r4, #0
900256f0:	f2c0 809f 	blt.w	90025832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900256f4:	42a3      	cmp	r3, r4
900256f6:	f340 809c 	ble.w	90025832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900256fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900256fe:	1c62      	adds	r2, r4, #1
90025700:	f100 809c 	bmi.w	9002583c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025704:	4293      	cmp	r3, r2
90025706:	f340 8099 	ble.w	9002583c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002570a:	f1b9 0f00 	cmp.w	r9, #0
9002570e:	f000 8095 	beq.w	9002583c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025712:	f8be c002 	ldrh.w	ip, [lr, #2]
90025716:	3501      	adds	r5, #1
90025718:	f100 8094 	bmi.w	90025844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002571c:	45aa      	cmp	sl, r5
9002571e:	f340 8091 	ble.w	90025844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025722:	2f00      	cmp	r7, #0
90025724:	f000 808e 	beq.w	90025844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025728:	2c00      	cmp	r4, #0
9002572a:	f2c0 8089 	blt.w	90025840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002572e:	42a3      	cmp	r3, r4
90025730:	f340 8086 	ble.w	90025840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025734:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025738:	3401      	adds	r4, #1
9002573a:	f100 8086 	bmi.w	9002584a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002573e:	42a3      	cmp	r3, r4
90025740:	f340 8083 	ble.w	9002584a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025744:	f1b9 0f00 	cmp.w	r9, #0
90025748:	d07f      	beq.n	9002584a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002574a:	3301      	adds	r3, #1
9002574c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025750:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025754:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90025758:	fb19 fe07 	smulbb	lr, r9, r7
9002575c:	f1c7 0210 	rsb	r2, r7, #16
90025760:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025764:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90025768:	eba2 0209 	sub.w	r2, r2, r9
9002576c:	ea44 0808 	orr.w	r8, r4, r8
90025770:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025774:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025778:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002577c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025780:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025784:	ea44 0c0c 	orr.w	ip, r4, ip
90025788:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002578c:	fb04 f40c 	mul.w	r4, r4, ip
90025790:	fb02 4808 	mla	r8, r2, r8, r4
90025794:	041a      	lsls	r2, r3, #16
90025796:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002579a:	b2b4      	uxth	r4, r6
9002579c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900257a0:	43f6      	mvns	r6, r6
900257a2:	4313      	orrs	r3, r2
900257a4:	042a      	lsls	r2, r5, #16
900257a6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900257aa:	b2f6      	uxtb	r6, r6
900257ac:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900257b0:	fb0e 8303 	mla	r3, lr, r3, r8
900257b4:	432a      	orrs	r2, r5
900257b6:	fb07 3202 	mla	r2, r7, r2, r3
900257ba:	10c7      	asrs	r7, r0, #3
900257bc:	0d53      	lsrs	r3, r2, #21
900257be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900257c2:	0952      	lsrs	r2, r2, #5
900257c4:	fb17 f706 	smulbb	r7, r7, r6
900257c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900257cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900257d0:	431a      	orrs	r2, r3
900257d2:	b293      	uxth	r3, r2
900257d4:	1202      	asrs	r2, r0, #8
900257d6:	121d      	asrs	r5, r3, #8
900257d8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900257dc:	00c0      	lsls	r0, r0, #3
900257de:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900257e2:	fb12 f206 	smulbb	r2, r2, r6
900257e6:	b2c0      	uxtb	r0, r0
900257e8:	fb05 2504 	mla	r5, r5, r4, r2
900257ec:	10da      	asrs	r2, r3, #3
900257ee:	fb10 f006 	smulbb	r0, r0, r6
900257f2:	00db      	lsls	r3, r3, #3
900257f4:	b2ad      	uxth	r5, r5
900257f6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900257fa:	b2db      	uxtb	r3, r3
900257fc:	fb02 7204 	mla	r2, r2, r4, r7
90025800:	fb03 0004 	mla	r0, r3, r4, r0
90025804:	1c6b      	adds	r3, r5, #1
90025806:	b292      	uxth	r2, r2
90025808:	b280      	uxth	r0, r0
9002580a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002580e:	1c43      	adds	r3, r0, #1
90025810:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025814:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025818:	1c50      	adds	r0, r2, #1
9002581a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002581e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025822:	0952      	lsrs	r2, r2, #5
90025824:	432b      	orrs	r3, r5
90025826:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002582a:	4313      	orrs	r3, r2
9002582c:	800b      	strh	r3, [r1, #0]
9002582e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025832:	4680      	mov	r8, r0
90025834:	e763      	b.n	900256fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025836:	4684      	mov	ip, r0
90025838:	4680      	mov	r8, r0
9002583a:	e76c      	b.n	90025716 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002583c:	4684      	mov	ip, r0
9002583e:	e76a      	b.n	90025716 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025840:	4605      	mov	r5, r0
90025842:	e779      	b.n	90025738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025844:	4603      	mov	r3, r0
90025846:	4605      	mov	r5, r0
90025848:	e782      	b.n	90025750 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002584a:	4603      	mov	r3, r0
9002584c:	e780      	b.n	90025750 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002584e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002584e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025852:	b093      	sub	sp, #76	@ 0x4c
90025854:	461d      	mov	r5, r3
90025856:	9210      	str	r2, [sp, #64]	@ 0x40
90025858:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002585a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002585e:	910a      	str	r1, [sp, #40]	@ 0x28
90025860:	920b      	str	r2, [sp, #44]	@ 0x2c
90025862:	6859      	ldr	r1, [r3, #4]
90025864:	681b      	ldr	r3, [r3, #0]
90025866:	9011      	str	r0, [sp, #68]	@ 0x44
90025868:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
9002586c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90025870:	fb01 2707 	mla	r7, r1, r7, r2
90025874:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90025878:	9307      	str	r3, [sp, #28]
9002587a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002587c:	681b      	ldr	r3, [r3, #0]
9002587e:	9309      	str	r3, [sp, #36]	@ 0x24
90025880:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90025882:	43db      	mvns	r3, r3
90025884:	b2db      	uxtb	r3, r3
90025886:	9308      	str	r3, [sp, #32]
90025888:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002588a:	2b00      	cmp	r3, #0
9002588c:	dc03      	bgt.n	90025896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002588e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90025890:	2b00      	cmp	r3, #0
90025892:	f340 8205 	ble.w	90025ca0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025896:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025898:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002589c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900258a0:	1e48      	subs	r0, r1, #1
900258a2:	f102 3cff 	add.w	ip, r2, #4294967295
900258a6:	2d00      	cmp	r5, #0
900258a8:	f340 80da 	ble.w	90025a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900258ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
900258b0:	ea4f 4326 	mov.w	r3, r6, asr #16
900258b4:	d406      	bmi.n	900258c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900258b6:	4586      	cmp	lr, r0
900258b8:	da04      	bge.n	900258c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900258ba:	2b00      	cmp	r3, #0
900258bc:	db02      	blt.n	900258c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900258be:	4563      	cmp	r3, ip
900258c0:	f2c0 80cf 	blt.w	90025a62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900258c4:	f11e 0e01 	adds.w	lr, lr, #1
900258c8:	f100 80c1 	bmi.w	90025a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900258cc:	4571      	cmp	r1, lr
900258ce:	f2c0 80be 	blt.w	90025a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900258d2:	3301      	adds	r3, #1
900258d4:	f100 80bb 	bmi.w	90025a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900258d8:	429a      	cmp	r2, r3
900258da:	f2c0 80b8 	blt.w	90025a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900258de:	46a9      	mov	r9, r5
900258e0:	f8dd 801c 	ldr.w	r8, [sp, #28]
900258e4:	f1b9 0f00 	cmp.w	r9, #0
900258e8:	f340 80d8 	ble.w	90025a9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
900258ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900258ee:	1421      	asrs	r1, r4, #16
900258f0:	ea4f 4026 	mov.w	r0, r6, asr #16
900258f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
900258f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900258fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025900:	f100 8112 	bmi.w	90025b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025904:	f10e 3aff 	add.w	sl, lr, #4294967295
90025908:	4551      	cmp	r1, sl
9002590a:	f280 810d 	bge.w	90025b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002590e:	2800      	cmp	r0, #0
90025910:	f2c0 810a 	blt.w	90025b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025914:	f103 3aff 	add.w	sl, r3, #4294967295
90025918:	4550      	cmp	r0, sl
9002591a:	f280 8105 	bge.w	90025b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002591e:	fa0f f38e 	sxth.w	r3, lr
90025922:	fb00 1103 	mla	r1, r0, r3, r1
90025926:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025928:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9002592c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90025930:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025934:	f1bc 0f00 	cmp.w	ip, #0
90025938:	d007      	beq.n	9002594a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002593a:	005b      	lsls	r3, r3, #1
9002593c:	eb0a 0003 	add.w	r0, sl, r3
90025940:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025944:	930c      	str	r3, [sp, #48]	@ 0x30
90025946:	8843      	ldrh	r3, [r0, #2]
90025948:	930d      	str	r3, [sp, #52]	@ 0x34
9002594a:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002594e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025952:	fb12 f30c 	smulbb	r3, r2, ip
90025956:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002595a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002595e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025962:	10db      	asrs	r3, r3, #3
90025964:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025968:	ea40 000e 	orr.w	r0, r0, lr
9002596c:	f1cc 0e10 	rsb	lr, ip, #16
90025970:	ea4a 0101 	orr.w	r1, sl, r1
90025974:	9f08      	ldr	r7, [sp, #32]
90025976:	ebae 0e02 	sub.w	lr, lr, r2
9002597a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002597e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025982:	4351      	muls	r1, r2
90025984:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90025986:	fb0e 1e00 	mla	lr, lr, r0, r1
9002598a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002598c:	0410      	lsls	r0, r2, #16
9002598e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025992:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025996:	4310      	orrs	r0, r2
90025998:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002599a:	0412      	lsls	r2, r2, #16
9002599c:	fb03 e000 	mla	r0, r3, r0, lr
900259a0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900259a4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900259a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900259ac:	ea42 020e 	orr.w	r2, r2, lr
900259b0:	fb03 0302 	mla	r3, r3, r2, r0
900259b4:	f8b8 0000 	ldrh.w	r0, [r8]
900259b8:	0d5a      	lsrs	r2, r3, #21
900259ba:	095b      	lsrs	r3, r3, #5
900259bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900259c0:	1201      	asrs	r1, r0, #8
900259c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900259c6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900259ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900259ce:	00c0      	lsls	r0, r0, #3
900259d0:	4313      	orrs	r3, r2
900259d2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900259d6:	fb11 f107 	smulbb	r1, r1, r7
900259da:	b2c0      	uxtb	r0, r0
900259dc:	b29b      	uxth	r3, r3
900259de:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900259e2:	fb10 f007 	smulbb	r0, r0, r7
900259e6:	fb1e fe07 	smulbb	lr, lr, r7
900259ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
900259ee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900259f2:	fb0c 1c02 	mla	ip, ip, r2, r1
900259f6:	10d9      	asrs	r1, r3, #3
900259f8:	00db      	lsls	r3, r3, #3
900259fa:	fa1f fc8c 	uxth.w	ip, ip
900259fe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025a02:	b2db      	uxtb	r3, r3
90025a04:	fb01 e102 	mla	r1, r1, r2, lr
90025a08:	fb03 0302 	mla	r3, r3, r2, r0
90025a0c:	b289      	uxth	r1, r1
90025a0e:	b29a      	uxth	r2, r3
90025a10:	f10c 0301 	add.w	r3, ip, #1
90025a14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025a18:	1c53      	adds	r3, r2, #1
90025a1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025a1e:	1c4a      	adds	r2, r1, #1
90025a20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025a24:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025a28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025a2c:	0949      	lsrs	r1, r1, #5
90025a2e:	ea43 030c 	orr.w	r3, r3, ip
90025a32:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025a36:	430b      	orrs	r3, r1
90025a38:	f8a8 3000 	strh.w	r3, [r8]
90025a3c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025a3e:	f108 0802 	add.w	r8, r8, #2
90025a42:	f109 39ff 	add.w	r9, r9, #4294967295
90025a46:	441c      	add	r4, r3
90025a48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025a4a:	441e      	add	r6, r3
90025a4c:	e74a      	b.n	900258e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025a4e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025a50:	3d01      	subs	r5, #1
90025a52:	441c      	add	r4, r3
90025a54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025a56:	441e      	add	r6, r3
90025a58:	9b07      	ldr	r3, [sp, #28]
90025a5a:	3302      	adds	r3, #2
90025a5c:	9307      	str	r3, [sp, #28]
90025a5e:	e722      	b.n	900258a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025a60:	d022      	beq.n	90025aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025a62:	1e6b      	subs	r3, r5, #1
90025a64:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025a66:	fb00 4003 	mla	r0, r0, r3, r4
90025a6a:	1400      	asrs	r0, r0, #16
90025a6c:	f53f af37 	bmi.w	900258de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a70:	3901      	subs	r1, #1
90025a72:	4288      	cmp	r0, r1
90025a74:	f6bf af33 	bge.w	900258de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a78:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025a7a:	fb01 6303 	mla	r3, r1, r3, r6
90025a7e:	141b      	asrs	r3, r3, #16
90025a80:	f53f af2d 	bmi.w	900258de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a84:	3a01      	subs	r2, #1
90025a86:	4293      	cmp	r3, r2
90025a88:	f6bf af29 	bge.w	900258de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a8c:	46a8      	mov	r8, r5
90025a8e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025a92:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90025a96:	f1b8 0f00 	cmp.w	r8, #0
90025a9a:	dc60      	bgt.n	90025b5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025a9c:	9b07      	ldr	r3, [sp, #28]
90025a9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025aa2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025aa6:	9307      	str	r3, [sp, #28]
90025aa8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025aaa:	2b00      	cmp	r3, #0
90025aac:	f340 80f8 	ble.w	90025ca0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025ab0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025ab4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025ab6:	ee30 0a04 	vadd.f32	s0, s0, s8
90025aba:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025abe:	eef0 6a62 	vmov.f32	s13, s5
90025ac2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025ac6:	ee31 1a05 	vadd.f32	s2, s2, s10
90025aca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025ace:	ee16 4a90 	vmov	r4, s13
90025ad2:	eef0 6a43 	vmov.f32	s13, s6
90025ad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025ada:	ee16 6a90 	vmov	r6, s13
90025ade:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
90025ae6:	ee77 2a62 	vsub.f32	s5, s14, s5
90025aea:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025aee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025af2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025af6:	ee12 2a90 	vmov	r2, s5
90025afa:	eef0 2a47 	vmov.f32	s5, s14
90025afe:	fb92 f3f3 	sdiv	r3, r2, r3
90025b02:	ee13 2a10 	vmov	r2, s6
90025b06:	931f      	str	r3, [sp, #124]	@ 0x7c
90025b08:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025b0a:	eeb0 3a67 	vmov.f32	s6, s15
90025b0e:	fb92 f3f3 	sdiv	r3, r2, r3
90025b12:	9320      	str	r3, [sp, #128]	@ 0x80
90025b14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025b16:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025b18:	3b01      	subs	r3, #1
90025b1a:	930a      	str	r3, [sp, #40]	@ 0x28
90025b1c:	bf08      	it	eq
90025b1e:	4615      	moveq	r5, r2
90025b20:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025b22:	bf18      	it	ne
90025b24:	461d      	movne	r5, r3
90025b26:	e6af      	b.n	90025888 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025b28:	f111 0a01 	adds.w	sl, r1, #1
90025b2c:	d486      	bmi.n	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025b2e:	45d6      	cmp	lr, sl
90025b30:	db84      	blt.n	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025b32:	f110 0a01 	adds.w	sl, r0, #1
90025b36:	d481      	bmi.n	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025b38:	4553      	cmp	r3, sl
90025b3a:	f6ff af7f 	blt.w	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025b3e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90025b40:	b21b      	sxth	r3, r3
90025b42:	9101      	str	r1, [sp, #4]
90025b44:	4641      	mov	r1, r8
90025b46:	9300      	str	r3, [sp, #0]
90025b48:	fa0f f38e 	sxth.w	r3, lr
90025b4c:	e9cd 0202 	strd	r0, r2, [sp, #8]
90025b50:	e9cd c704 	strd	ip, r7, [sp, #16]
90025b54:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025b56:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025b58:	f7ff fdb2 	bl	900256c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025b5c:	e76e      	b.n	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025b5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025b60:	1430      	asrs	r0, r6, #16
90025b62:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90025b64:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025b68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025b6c:	1423      	asrs	r3, r4, #16
90025b6e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025b72:	fb01 3000 	mla	r0, r1, r0, r3
90025b76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025b78:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90025b7c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90025b80:	8858      	ldrh	r0, [r3, #2]
90025b82:	f1be 0f00 	cmp.w	lr, #0
90025b86:	d00b      	beq.n	90025ba0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025b88:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025b8c:	3901      	subs	r1, #1
90025b8e:	0049      	lsls	r1, r1, #1
90025b90:	3102      	adds	r1, #2
90025b92:	eb03 0b01 	add.w	fp, r3, r1
90025b96:	5a5b      	ldrh	r3, [r3, r1]
90025b98:	930e      	str	r3, [sp, #56]	@ 0x38
90025b9a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025b9e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025ba0:	ea4f 410c 	mov.w	r1, ip, lsl #16
90025ba4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025ba8:	fb12 f30e 	smulbb	r3, r2, lr
90025bac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025bb0:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90025bb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025bb8:	10db      	asrs	r3, r3, #3
90025bba:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025bbe:	ea41 010c 	orr.w	r1, r1, ip
90025bc2:	f1ce 0c10 	rsb	ip, lr, #16
90025bc6:	ea4b 0000 	orr.w	r0, fp, r0
90025bca:	9f08      	ldr	r7, [sp, #32]
90025bcc:	ebac 0c02 	sub.w	ip, ip, r2
90025bd0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025bd4:	f108 38ff 	add.w	r8, r8, #4294967295
90025bd8:	4350      	muls	r0, r2
90025bda:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90025bde:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025be0:	fb0c 0c01 	mla	ip, ip, r1, r0
90025be4:	980e      	ldr	r0, [sp, #56]	@ 0x38
90025be6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025bea:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90025bee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90025bf0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025bf4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025bf8:	0412      	lsls	r2, r2, #16
90025bfa:	ea4b 0101 	orr.w	r1, fp, r1
90025bfe:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025c02:	fb03 c101 	mla	r1, r3, r1, ip
90025c06:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025c0a:	4302      	orrs	r2, r0
90025c0c:	fb03 1202 	mla	r2, r3, r2, r1
90025c10:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025c14:	0952      	lsrs	r2, r2, #5
90025c16:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90025c1a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90025c1e:	f8b9 2000 	ldrh.w	r2, [r9]
90025c22:	ea4b 0303 	orr.w	r3, fp, r3
90025c26:	1211      	asrs	r1, r2, #8
90025c28:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025c2c:	b29b      	uxth	r3, r3
90025c2e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025c32:	00d2      	lsls	r2, r2, #3
90025c34:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90025c38:	fb11 f107 	smulbb	r1, r1, r7
90025c3c:	1218      	asrs	r0, r3, #8
90025c3e:	fb1c fc07 	smulbb	ip, ip, r7
90025c42:	b2d2      	uxtb	r2, r2
90025c44:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025c48:	fb12 f207 	smulbb	r2, r2, r7
90025c4c:	fb00 100a 	mla	r0, r0, sl, r1
90025c50:	10d9      	asrs	r1, r3, #3
90025c52:	00db      	lsls	r3, r3, #3
90025c54:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025c58:	b280      	uxth	r0, r0
90025c5a:	b2db      	uxtb	r3, r3
90025c5c:	fb01 c10a 	mla	r1, r1, sl, ip
90025c60:	fb03 230a 	mla	r3, r3, sl, r2
90025c64:	1c42      	adds	r2, r0, #1
90025c66:	b289      	uxth	r1, r1
90025c68:	b29b      	uxth	r3, r3
90025c6a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025c6e:	f101 0c01 	add.w	ip, r1, #1
90025c72:	1c5a      	adds	r2, r3, #1
90025c74:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025c78:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90025c7c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025c80:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025c82:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025c86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025c8a:	441c      	add	r4, r3
90025c8c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025c90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025c92:	4310      	orrs	r0, r2
90025c94:	441e      	add	r6, r3
90025c96:	ea40 000c 	orr.w	r0, r0, ip
90025c9a:	f829 0b02 	strh.w	r0, [r9], #2
90025c9e:	e6fa      	b.n	90025a96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90025ca0:	b013      	add	sp, #76	@ 0x4c
90025ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025ca6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90025ca6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90025caa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90025cae:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90025cb2:	fb0e 4703 	mla	r7, lr, r3, r4
90025cb6:	f1be 0f00 	cmp.w	lr, #0
90025cba:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90025cbe:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90025cc2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025cc6:	8808      	ldrh	r0, [r1, #0]
90025cc8:	db60      	blt.n	90025d8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025cca:	45f1      	cmp	r9, lr
90025ccc:	dd5e      	ble.n	90025d8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025cce:	2c00      	cmp	r4, #0
90025cd0:	db5a      	blt.n	90025d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025cd2:	42a3      	cmp	r3, r4
90025cd4:	dd58      	ble.n	90025d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025cd6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025cda:	1c62      	adds	r2, r4, #1
90025cdc:	d459      	bmi.n	90025d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025cde:	4293      	cmp	r3, r2
90025ce0:	dd57      	ble.n	90025d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025ce2:	2d00      	cmp	r5, #0
90025ce4:	d055      	beq.n	90025d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025ce6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025cea:	f11e 0e01 	adds.w	lr, lr, #1
90025cee:	d454      	bmi.n	90025d9a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025cf0:	45f1      	cmp	r9, lr
90025cf2:	dd52      	ble.n	90025d9a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025cf4:	2e00      	cmp	r6, #0
90025cf6:	d050      	beq.n	90025d9a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025cf8:	2c00      	cmp	r4, #0
90025cfa:	db4c      	blt.n	90025d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025cfc:	42a3      	cmp	r3, r4
90025cfe:	dd4a      	ble.n	90025d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025d00:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025d04:	3401      	adds	r4, #1
90025d06:	d405      	bmi.n	90025d14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025d08:	42a3      	cmp	r3, r4
90025d0a:	dd03      	ble.n	90025d14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025d0c:	b115      	cbz	r5, 90025d14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025d0e:	3301      	adds	r3, #1
90025d10:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025d14:	fb15 f406 	smulbb	r4, r5, r6
90025d18:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025d1c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90025d20:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025d24:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025d28:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025d2c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025d30:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025d34:	ea43 0c0c 	orr.w	ip, r3, ip
90025d38:	f1c6 0310 	rsb	r3, r6, #16
90025d3c:	ea4e 0707 	orr.w	r7, lr, r7
90025d40:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025d44:	1b5b      	subs	r3, r3, r5
90025d46:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025d4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025d4e:	437d      	muls	r5, r7
90025d50:	fb03 5c0c 	mla	ip, r3, ip, r5
90025d54:	0403      	lsls	r3, r0, #16
90025d56:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025d5a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025d5e:	4318      	orrs	r0, r3
90025d60:	0413      	lsls	r3, r2, #16
90025d62:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025d66:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025d6a:	fb04 c000 	mla	r0, r4, r0, ip
90025d6e:	4313      	orrs	r3, r2
90025d70:	fb06 0003 	mla	r0, r6, r3, r0
90025d74:	0d43      	lsrs	r3, r0, #21
90025d76:	0940      	lsrs	r0, r0, #5
90025d78:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025d7c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025d80:	4318      	orrs	r0, r3
90025d82:	8008      	strh	r0, [r1, #0]
90025d84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90025d88:	4684      	mov	ip, r0
90025d8a:	e7a6      	b.n	90025cda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90025d8c:	4607      	mov	r7, r0
90025d8e:	4684      	mov	ip, r0
90025d90:	e7ab      	b.n	90025cea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025d92:	4607      	mov	r7, r0
90025d94:	e7a9      	b.n	90025cea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025d96:	4602      	mov	r2, r0
90025d98:	e7b4      	b.n	90025d04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90025d9a:	4602      	mov	r2, r0
90025d9c:	e7ba      	b.n	90025d14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90025d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025d9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025da2:	b08f      	sub	sp, #60	@ 0x3c
90025da4:	461d      	mov	r5, r3
90025da6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025da8:	9107      	str	r1, [sp, #28]
90025daa:	920c      	str	r2, [sp, #48]	@ 0x30
90025dac:	6859      	ldr	r1, [r3, #4]
90025dae:	681b      	ldr	r3, [r3, #0]
90025db0:	900d      	str	r0, [sp, #52]	@ 0x34
90025db2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90025db6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90025dba:	fb01 2707 	mla	r7, r1, r7, r2
90025dbe:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90025dc2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025dc4:	f8d3 8000 	ldr.w	r8, [r3]
90025dc8:	9b07      	ldr	r3, [sp, #28]
90025dca:	2b00      	cmp	r3, #0
90025dcc:	dc03      	bgt.n	90025dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025dce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025dd0:	2b00      	cmp	r3, #0
90025dd2:	f340 8182 	ble.w	900260da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025dd6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025dd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025ddc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025de0:	1e48      	subs	r0, r1, #1
90025de2:	f102 3cff 	add.w	ip, r2, #4294967295
90025de6:	2d00      	cmp	r5, #0
90025de8:	f340 809b 	ble.w	90025f22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025dec:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025df0:	ea4f 4326 	mov.w	r3, r6, asr #16
90025df4:	d406      	bmi.n	90025e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025df6:	4586      	cmp	lr, r0
90025df8:	da04      	bge.n	90025e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025dfa:	2b00      	cmp	r3, #0
90025dfc:	db02      	blt.n	90025e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025dfe:	4563      	cmp	r3, ip
90025e00:	f2c0 8090 	blt.w	90025f24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025e04:	f11e 0e01 	adds.w	lr, lr, #1
90025e08:	f100 8084 	bmi.w	90025f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025e0c:	4571      	cmp	r1, lr
90025e0e:	f2c0 8081 	blt.w	90025f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025e12:	3301      	adds	r3, #1
90025e14:	d47e      	bmi.n	90025f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025e16:	429a      	cmp	r2, r3
90025e18:	db7c      	blt.n	90025f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025e1a:	46aa      	mov	sl, r5
90025e1c:	46b9      	mov	r9, r7
90025e1e:	f1ba 0f00 	cmp.w	sl, #0
90025e22:	f340 8099 	ble.w	90025f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025e26:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025e28:	1421      	asrs	r1, r4, #16
90025e2a:	ea4f 4026 	mov.w	r0, r6, asr #16
90025e2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025e32:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025e36:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025e3a:	f100 80d1 	bmi.w	90025fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025e3e:	f10e 3bff 	add.w	fp, lr, #4294967295
90025e42:	4559      	cmp	r1, fp
90025e44:	f280 80cc 	bge.w	90025fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025e48:	2800      	cmp	r0, #0
90025e4a:	f2c0 80c9 	blt.w	90025fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025e4e:	f103 3bff 	add.w	fp, r3, #4294967295
90025e52:	4558      	cmp	r0, fp
90025e54:	f280 80c4 	bge.w	90025fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025e58:	fa0f fe8e 	sxth.w	lr, lr
90025e5c:	fb00 110e 	mla	r1, r0, lr, r1
90025e60:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025e64:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90025e68:	8841      	ldrh	r1, [r0, #2]
90025e6a:	f1bc 0f00 	cmp.w	ip, #0
90025e6e:	d00b      	beq.n	90025e88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90025e70:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90025e74:	3b01      	subs	r3, #1
90025e76:	005b      	lsls	r3, r3, #1
90025e78:	3302      	adds	r3, #2
90025e7a:	eb00 0e03 	add.w	lr, r0, r3
90025e7e:	5ac3      	ldrh	r3, [r0, r3]
90025e80:	9308      	str	r3, [sp, #32]
90025e82:	f8be 3002 	ldrh.w	r3, [lr, #2]
90025e86:	9309      	str	r3, [sp, #36]	@ 0x24
90025e88:	ea4f 400b 	mov.w	r0, fp, lsl #16
90025e8c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025e90:	fb12 f30c 	smulbb	r3, r2, ip
90025e94:	f1cc 0e10 	rsb	lr, ip, #16
90025e98:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025e9c:	10db      	asrs	r3, r3, #3
90025e9e:	ebae 0e02 	sub.w	lr, lr, r2
90025ea2:	ea40 000b 	orr.w	r0, r0, fp
90025ea6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90025eaa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025eae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025eb2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025eb6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025eba:	ea4b 0101 	orr.w	r1, fp, r1
90025ebe:	4351      	muls	r1, r2
90025ec0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025ec2:	fb0e 1e00 	mla	lr, lr, r0, r1
90025ec6:	0410      	lsls	r0, r2, #16
90025ec8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025ecc:	9908      	ldr	r1, [sp, #32]
90025ece:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025ed2:	4310      	orrs	r0, r2
90025ed4:	9a08      	ldr	r2, [sp, #32]
90025ed6:	0412      	lsls	r2, r2, #16
90025ed8:	fb03 e000 	mla	r0, r3, r0, lr
90025edc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90025ee0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025ee4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025ee8:	ea42 020e 	orr.w	r2, r2, lr
90025eec:	fb03 0302 	mla	r3, r3, r2, r0
90025ef0:	0d5a      	lsrs	r2, r3, #21
90025ef2:	095b      	lsrs	r3, r3, #5
90025ef4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025ef8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025efc:	4313      	orrs	r3, r2
90025efe:	f8a9 3000 	strh.w	r3, [r9]
90025f02:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025f04:	f109 0902 	add.w	r9, r9, #2
90025f08:	f10a 3aff 	add.w	sl, sl, #4294967295
90025f0c:	441c      	add	r4, r3
90025f0e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025f10:	441e      	add	r6, r3
90025f12:	e784      	b.n	90025e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90025f14:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025f16:	3d01      	subs	r5, #1
90025f18:	3702      	adds	r7, #2
90025f1a:	441c      	add	r4, r3
90025f1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025f1e:	441e      	add	r6, r3
90025f20:	e761      	b.n	90025de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025f22:	d01d      	beq.n	90025f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025f24:	1e6b      	subs	r3, r5, #1
90025f26:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025f28:	fb00 4003 	mla	r0, r0, r3, r4
90025f2c:	1400      	asrs	r0, r0, #16
90025f2e:	f53f af74 	bmi.w	90025e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025f32:	3901      	subs	r1, #1
90025f34:	4288      	cmp	r0, r1
90025f36:	f6bf af70 	bge.w	90025e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025f3a:	991c      	ldr	r1, [sp, #112]	@ 0x70
90025f3c:	fb01 6303 	mla	r3, r1, r3, r6
90025f40:	141b      	asrs	r3, r3, #16
90025f42:	f53f af6a 	bmi.w	90025e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025f46:	3a01      	subs	r2, #1
90025f48:	4293      	cmp	r3, r2
90025f4a:	f6bf af66 	bge.w	90025e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025f4e:	46a9      	mov	r9, r5
90025f50:	46ba      	mov	sl, r7
90025f52:	f1b9 0f00 	cmp.w	r9, #0
90025f56:	dc5b      	bgt.n	90026010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90025f58:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025f5c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90025f60:	9b07      	ldr	r3, [sp, #28]
90025f62:	2b00      	cmp	r3, #0
90025f64:	f340 80b9 	ble.w	900260da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025f68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025f6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025f6e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025f76:	eef0 6a62 	vmov.f32	s13, s5
90025f7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025f7e:	ee31 1a05 	vadd.f32	s2, s2, s10
90025f82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f86:	ee16 4a90 	vmov	r4, s13
90025f8a:	eef0 6a43 	vmov.f32	s13, s6
90025f8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f92:	ee16 6a90 	vmov	r6, s13
90025f96:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025f9a:	ee61 7a27 	vmul.f32	s15, s2, s15
90025f9e:	ee77 2a62 	vsub.f32	s5, s14, s5
90025fa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025fa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025faa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025fae:	ee12 2a90 	vmov	r2, s5
90025fb2:	eef0 2a47 	vmov.f32	s5, s14
90025fb6:	fb92 f3f3 	sdiv	r3, r2, r3
90025fba:	ee13 2a10 	vmov	r2, s6
90025fbe:	931b      	str	r3, [sp, #108]	@ 0x6c
90025fc0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025fc2:	eeb0 3a67 	vmov.f32	s6, s15
90025fc6:	fb92 f3f3 	sdiv	r3, r2, r3
90025fca:	931c      	str	r3, [sp, #112]	@ 0x70
90025fcc:	9b07      	ldr	r3, [sp, #28]
90025fce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025fd0:	3b01      	subs	r3, #1
90025fd2:	9307      	str	r3, [sp, #28]
90025fd4:	bf08      	it	eq
90025fd6:	4615      	moveq	r5, r2
90025fd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025fda:	bf18      	it	ne
90025fdc:	461d      	movne	r5, r3
90025fde:	e6f3      	b.n	90025dc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90025fe0:	f111 0b01 	adds.w	fp, r1, #1
90025fe4:	d48d      	bmi.n	90025f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025fe6:	45de      	cmp	lr, fp
90025fe8:	db8b      	blt.n	90025f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025fea:	f110 0b01 	adds.w	fp, r0, #1
90025fee:	d488      	bmi.n	90025f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025ff0:	455b      	cmp	r3, fp
90025ff2:	db86      	blt.n	90025f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025ff4:	b21b      	sxth	r3, r3
90025ff6:	e9cd 1001 	strd	r1, r0, [sp, #4]
90025ffa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90025ffe:	9300      	str	r3, [sp, #0]
90026000:	4642      	mov	r2, r8
90026002:	fa0f f38e 	sxth.w	r3, lr
90026006:	4649      	mov	r1, r9
90026008:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002600a:	f7ff fe4c 	bl	90025ca6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002600e:	e778      	b.n	90025f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026010:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026012:	1420      	asrs	r0, r4, #16
90026014:	1431      	asrs	r1, r6, #16
90026016:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002601a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002601e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026022:	fb03 0101 	mla	r1, r3, r1, r0
90026026:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002602a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002602e:	8841      	ldrh	r1, [r0, #2]
90026030:	f1be 0f00 	cmp.w	lr, #0
90026034:	d00b      	beq.n	9002604e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90026036:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002603a:	3b01      	subs	r3, #1
9002603c:	005b      	lsls	r3, r3, #1
9002603e:	3302      	adds	r3, #2
90026040:	eb00 0b03 	add.w	fp, r0, r3
90026044:	5ac3      	ldrh	r3, [r0, r3]
90026046:	930a      	str	r3, [sp, #40]	@ 0x28
90026048:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002604c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002604e:	ea4f 400c 	mov.w	r0, ip, lsl #16
90026052:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026056:	fb12 f30e 	smulbb	r3, r2, lr
9002605a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002605e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90026062:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026066:	10db      	asrs	r3, r3, #3
90026068:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002606c:	ea40 000c 	orr.w	r0, r0, ip
90026070:	f1ce 0c10 	rsb	ip, lr, #16
90026074:	ea4b 0101 	orr.w	r1, fp, r1
90026078:	f109 39ff 	add.w	r9, r9, #4294967295
9002607c:	ebac 0c02 	sub.w	ip, ip, r2
90026080:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026084:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90026088:	4351      	muls	r1, r2
9002608a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002608c:	fb0c 1c00 	mla	ip, ip, r0, r1
90026090:	990a      	ldr	r1, [sp, #40]	@ 0x28
90026092:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026096:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
9002609a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002609c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900260a0:	0412      	lsls	r2, r2, #16
900260a2:	ea4b 0000 	orr.w	r0, fp, r0
900260a6:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900260aa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900260ae:	fb03 c000 	mla	r0, r3, r0, ip
900260b2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900260b6:	ea42 0b0b 	orr.w	fp, r2, fp
900260ba:	fb03 000b 	mla	r0, r3, fp, r0
900260be:	0d43      	lsrs	r3, r0, #21
900260c0:	0940      	lsrs	r0, r0, #5
900260c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900260c6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900260ca:	4318      	orrs	r0, r3
900260cc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900260ce:	441c      	add	r4, r3
900260d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900260d2:	f82a 0b02 	strh.w	r0, [sl], #2
900260d6:	441e      	add	r6, r3
900260d8:	e73b      	b.n	90025f52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900260da:	b00f      	add	sp, #60	@ 0x3c
900260dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900260e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900260e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260e4:	b085      	sub	sp, #20
900260e6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900260ea:	9102      	str	r1, [sp, #8]
900260ec:	2c00      	cmp	r4, #0
900260ee:	fb04 7103 	mla	r1, r4, r3, r7
900260f2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900260f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900260fa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900260fe:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026102:	f2c0 811b 	blt.w	9002633c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026106:	45a6      	cmp	lr, r4
90026108:	f340 8118 	ble.w	9002633c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002610c:	2f00      	cmp	r7, #0
9002610e:	f2c0 8113 	blt.w	90026338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026112:	42bb      	cmp	r3, r7
90026114:	f340 8110 	ble.w	90026338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026118:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002611c:	1c7a      	adds	r2, r7, #1
9002611e:	f100 8110 	bmi.w	90026342 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026122:	4293      	cmp	r3, r2
90026124:	f340 810d 	ble.w	90026342 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026128:	2e00      	cmp	r6, #0
9002612a:	f000 810c 	beq.w	90026346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002612e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026132:	3401      	adds	r4, #1
90026134:	f100 810b 	bmi.w	9002634e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026138:	45a6      	cmp	lr, r4
9002613a:	f340 8108 	ble.w	9002634e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002613e:	2800      	cmp	r0, #0
90026140:	f000 8108 	beq.w	90026354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90026144:	2f00      	cmp	r7, #0
90026146:	f2c0 8100 	blt.w	9002634a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002614a:	42bb      	cmp	r3, r7
9002614c:	f340 80fd 	ble.w	9002634a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026150:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026154:	3701      	adds	r7, #1
90026156:	f100 8100 	bmi.w	9002635a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002615a:	42bb      	cmp	r3, r7
9002615c:	f340 80fd 	ble.w	9002635a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026160:	2e00      	cmp	r6, #0
90026162:	f000 80fc 	beq.w	9002635e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90026166:	3301      	adds	r3, #1
90026168:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
9002616c:	b2b6      	uxth	r6, r6
9002616e:	b280      	uxth	r0, r0
90026170:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026174:	fb00 fe06 	mul.w	lr, r0, r6
90026178:	0136      	lsls	r6, r6, #4
9002617a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002617e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026182:	eba6 070e 	sub.w	r7, r6, lr
90026186:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002618a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002618e:	b280      	uxth	r0, r0
90026190:	b2bf      	uxth	r7, r7
90026192:	1a1b      	subs	r3, r3, r0
90026194:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026198:	fb0a f607 	mul.w	r6, sl, r7
9002619c:	b29b      	uxth	r3, r3
9002619e:	fb0b 6603 	mla	r6, fp, r3, r6
900261a2:	fb00 6609 	mla	r6, r0, r9, r6
900261a6:	fb0e 6608 	mla	r6, lr, r8, r6
900261aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
900261ae:	9600      	str	r6, [sp, #0]
900261b0:	2e00      	cmp	r6, #0
900261b2:	f000 80be 	beq.w	90026332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900261b6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900261ba:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900261be:	9e02      	ldr	r6, [sp, #8]
900261c0:	fb0b fc0c 	mul.w	ip, fp, ip
900261c4:	fb0b f505 	mul.w	r5, fp, r5
900261c8:	8836      	ldrh	r6, [r6, #0]
900261ca:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900261ce:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900261d2:	9501      	str	r5, [sp, #4]
900261d4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900261d8:	44dc      	add	ip, fp
900261da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900261de:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900261e2:	9503      	str	r5, [sp, #12]
900261e4:	9d01      	ldr	r5, [sp, #4]
900261e6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900261ea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900261ee:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900261f2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900261f6:	fb0a fc0c 	mul.w	ip, sl, ip
900261fa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900261fe:	fb0a fa01 	mul.w	sl, sl, r1
90026202:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026206:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002620a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002620e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026212:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026216:	4465      	add	r5, ip
90026218:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002621c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026224:	fb09 fc0c 	mul.w	ip, r9, ip
90026228:	0a2d      	lsrs	r5, r5, #8
9002622a:	fb09 f904 	mul.w	r9, r9, r4
9002622e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026232:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026236:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002623a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002623e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026242:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026246:	437d      	muls	r5, r7
90026248:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002624c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026250:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026254:	4461      	add	r1, ip
90026256:	fb08 f404 	mul.w	r4, r8, r4
9002625a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002625e:	fb08 f802 	mul.w	r8, r8, r2
90026262:	0a09      	lsrs	r1, r1, #8
90026264:	0a22      	lsrs	r2, r4, #8
90026266:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002626a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002626e:	fb07 f70a 	mul.w	r7, r7, sl
90026272:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026276:	4414      	add	r4, r2
90026278:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002627c:	0a24      	lsrs	r4, r4, #8
9002627e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026282:	9a03      	ldr	r2, [sp, #12]
90026284:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90026288:	fb02 5503 	mla	r5, r2, r3, r5
9002628c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026290:	9a00      	ldr	r2, [sp, #0]
90026292:	fb04 540e 	mla	r4, r4, lr, r5
90026296:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002629a:	1235      	asrs	r5, r6, #8
9002629c:	fb01 4100 	mla	r1, r1, r0, r4
900262a0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900262a4:	0a09      	lsrs	r1, r1, #8
900262a6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900262aa:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900262ae:	fb03 7101 	mla	r1, r3, r1, r7
900262b2:	fb0e 1e08 	mla	lr, lr, r8, r1
900262b6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900262ba:	fb00 e101 	mla	r1, r0, r1, lr
900262be:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900262c2:	b287      	uxth	r7, r0
900262c4:	0a09      	lsrs	r1, r1, #8
900262c6:	437a      	muls	r2, r7
900262c8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900262cc:	1c53      	adds	r3, r2, #1
900262ce:	4321      	orrs	r1, r4
900262d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900262d4:	0c0a      	lsrs	r2, r1, #16
900262d6:	f3c1 2407 	ubfx	r4, r1, #8, #8
900262da:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900262de:	b2c8      	uxtb	r0, r1
900262e0:	fb12 f207 	smulbb	r2, r2, r7
900262e4:	fb14 f407 	smulbb	r4, r4, r7
900262e8:	b2db      	uxtb	r3, r3
900262ea:	fb10 f007 	smulbb	r0, r0, r7
900262ee:	fb05 2503 	mla	r5, r5, r3, r2
900262f2:	10f2      	asrs	r2, r6, #3
900262f4:	00f6      	lsls	r6, r6, #3
900262f6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900262fa:	b2ad      	uxth	r5, r5
900262fc:	b2f6      	uxtb	r6, r6
900262fe:	fb02 4203 	mla	r2, r2, r3, r4
90026302:	fb06 0303 	mla	r3, r6, r3, r0
90026306:	b294      	uxth	r4, r2
90026308:	b299      	uxth	r1, r3
9002630a:	1c6b      	adds	r3, r5, #1
9002630c:	1c62      	adds	r2, r4, #1
9002630e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026312:	1c4b      	adds	r3, r1, #1
90026314:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026318:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002631c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026320:	0952      	lsrs	r2, r2, #5
90026322:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026326:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002632a:	432b      	orrs	r3, r5
9002632c:	4313      	orrs	r3, r2
9002632e:	9a02      	ldr	r2, [sp, #8]
90026330:	8013      	strh	r3, [r2, #0]
90026332:	b005      	add	sp, #20
90026334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026338:	2500      	movs	r5, #0
9002633a:	e6ef      	b.n	9002611c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
9002633c:	2100      	movs	r1, #0
9002633e:	460d      	mov	r5, r1
90026340:	e6f7      	b.n	90026132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026342:	2100      	movs	r1, #0
90026344:	e6f5      	b.n	90026132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026346:	4631      	mov	r1, r6
90026348:	e6f3      	b.n	90026132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002634a:	2400      	movs	r4, #0
9002634c:	e702      	b.n	90026154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9002634e:	2200      	movs	r2, #0
90026350:	4614      	mov	r4, r2
90026352:	e70b      	b.n	9002616c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026354:	4602      	mov	r2, r0
90026356:	4604      	mov	r4, r0
90026358:	e708      	b.n	9002616c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002635a:	2200      	movs	r2, #0
9002635c:	e706      	b.n	9002616c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002635e:	4632      	mov	r2, r6
90026360:	e704      	b.n	9002616c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026366:	b09d      	sub	sp, #116	@ 0x74
90026368:	9219      	str	r2, [sp, #100]	@ 0x64
9002636a:	9307      	str	r3, [sp, #28]
9002636c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
9002636e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90026372:	901b      	str	r0, [sp, #108]	@ 0x6c
90026374:	931a      	str	r3, [sp, #104]	@ 0x68
90026376:	6850      	ldr	r0, [r2, #4]
90026378:	9117      	str	r1, [sp, #92]	@ 0x5c
9002637a:	6812      	ldr	r2, [r2, #0]
9002637c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90026380:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90026384:	fb00 1303 	mla	r3, r0, r3, r1
90026388:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002638c:	930a      	str	r3, [sp, #40]	@ 0x28
9002638e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026390:	681b      	ldr	r3, [r3, #0]
90026392:	9310      	str	r3, [sp, #64]	@ 0x40
90026394:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90026398:	930b      	str	r3, [sp, #44]	@ 0x2c
9002639a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002639c:	2b00      	cmp	r3, #0
9002639e:	dc03      	bgt.n	900263a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900263a0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900263a2:	2b00      	cmp	r3, #0
900263a4:	f340 8375 	ble.w	90026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900263a8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900263aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900263ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900263b2:	1e48      	subs	r0, r1, #1
900263b4:	1e57      	subs	r7, r2, #1
900263b6:	9b07      	ldr	r3, [sp, #28]
900263b8:	2b00      	cmp	r3, #0
900263ba:	f340 818e 	ble.w	900266da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900263be:	ea5f 4c24 	movs.w	ip, r4, asr #16
900263c2:	ea4f 4326 	mov.w	r3, r6, asr #16
900263c6:	d406      	bmi.n	900263d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900263c8:	4584      	cmp	ip, r0
900263ca:	da04      	bge.n	900263d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900263cc:	2b00      	cmp	r3, #0
900263ce:	db02      	blt.n	900263d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900263d0:	42bb      	cmp	r3, r7
900263d2:	f2c0 8183 	blt.w	900266dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
900263d6:	f11c 0c01 	adds.w	ip, ip, #1
900263da:	f100 8173 	bmi.w	900266c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900263de:	4561      	cmp	r1, ip
900263e0:	f2c0 8170 	blt.w	900266c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900263e4:	3301      	adds	r3, #1
900263e6:	f100 816d 	bmi.w	900266c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900263ea:	429a      	cmp	r2, r3
900263ec:	f2c0 816a 	blt.w	900266c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900263f0:	9b07      	ldr	r3, [sp, #28]
900263f2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900263f4:	9318      	str	r3, [sp, #96]	@ 0x60
900263f6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900263f8:	2b00      	cmp	r3, #0
900263fa:	f340 818c 	ble.w	90026716 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900263fe:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90026400:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026404:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026406:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002640a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002640e:	1422      	asrs	r2, r4, #16
90026410:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026414:	689b      	ldr	r3, [r3, #8]
90026416:	f100 81cd 	bmi.w	900267b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002641a:	f103 38ff 	add.w	r8, r3, #4294967295
9002641e:	4542      	cmp	r2, r8
90026420:	f280 81c8 	bge.w	900267b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026424:	f1bc 0f00 	cmp.w	ip, #0
90026428:	f2c0 81c4 	blt.w	900267b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002642c:	f10e 38ff 	add.w	r8, lr, #4294967295
90026430:	45c4      	cmp	ip, r8
90026432:	f280 81bf 	bge.w	900267b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026436:	b21b      	sxth	r3, r3
90026438:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002643a:	fb0c 2203 	mla	r2, ip, r3, r2
9002643e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026442:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026446:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002644a:	2800      	cmp	r0, #0
9002644c:	f000 81a9 	beq.w	900267a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026450:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026454:	950c      	str	r5, [sp, #48]	@ 0x30
90026456:	0e2d      	lsrs	r5, r5, #24
90026458:	9513      	str	r5, [sp, #76]	@ 0x4c
9002645a:	b181      	cbz	r1, 9002647e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002645c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90026460:	3b01      	subs	r3, #1
90026462:	009b      	lsls	r3, r3, #2
90026464:	3304      	adds	r3, #4
90026466:	eb08 0c03 	add.w	ip, r8, r3
9002646a:	f858 3003 	ldr.w	r3, [r8, r3]
9002646e:	9308      	str	r3, [sp, #32]
90026470:	0e1b      	lsrs	r3, r3, #24
90026472:	9311      	str	r3, [sp, #68]	@ 0x44
90026474:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026478:	930d      	str	r3, [sp, #52]	@ 0x34
9002647a:	0e1b      	lsrs	r3, r3, #24
9002647c:	9314      	str	r3, [sp, #80]	@ 0x50
9002647e:	b280      	uxth	r0, r0
90026480:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026482:	b289      	uxth	r1, r1
90026484:	fb00 f901 	mul.w	r9, r0, r1
90026488:	0100      	lsls	r0, r0, #4
9002648a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002648e:	eba0 0809 	sub.w	r8, r0, r9
90026492:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026496:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90026498:	b289      	uxth	r1, r1
9002649a:	fa1f f888 	uxth.w	r8, r8
9002649e:	1a5b      	subs	r3, r3, r1
900264a0:	fb08 f000 	mul.w	r0, r8, r0
900264a4:	b29b      	uxth	r3, r3
900264a6:	fb03 000e 	mla	r0, r3, lr, r0
900264aa:	fb01 0005 	mla	r0, r1, r5, r0
900264ae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900264b0:	fb09 0005 	mla	r0, r9, r5, r0
900264b4:	f3c0 2007 	ubfx	r0, r0, #8, #8
900264b8:	2800      	cmp	r0, #0
900264ba:	f000 80fa 	beq.w	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900264be:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900264c2:	d01b      	beq.n	900264fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900264c4:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900264c8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900264cc:	fb0e fa0a 	mul.w	sl, lr, sl
900264d0:	fb0e fe02 	mul.w	lr, lr, r2
900264d4:	ea4f 221a 	mov.w	r2, sl, lsr #8
900264d8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900264dc:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900264e0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900264e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900264e8:	4452      	add	r2, sl
900264ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900264ee:	0a12      	lsrs	r2, r2, #8
900264f0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900264f4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900264f8:	ea42 020c 	orr.w	r2, r2, ip
900264fc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900264fe:	2dff      	cmp	r5, #255	@ 0xff
90026500:	d021      	beq.n	90026546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026502:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026504:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026508:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002650a:	fb05 fb0b 	mul.w	fp, r5, fp
9002650e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026510:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026514:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026516:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002651a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002651e:	fb05 fa0a 	mul.w	sl, r5, sl
90026522:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026526:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002652a:	44de      	add	lr, fp
9002652c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026530:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026534:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026538:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002653c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026540:	ea4e 050a 	orr.w	r5, lr, sl
90026544:	950c      	str	r5, [sp, #48]	@ 0x30
90026546:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026548:	2dff      	cmp	r5, #255	@ 0xff
9002654a:	d021      	beq.n	90026590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
9002654c:	9d08      	ldr	r5, [sp, #32]
9002654e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026552:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026554:	fb05 fb0b 	mul.w	fp, r5, fp
90026558:	9d08      	ldr	r5, [sp, #32]
9002655a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002655e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026560:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026564:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026568:	fb05 fa0a 	mul.w	sl, r5, sl
9002656c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026570:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026574:	44de      	add	lr, fp
90026576:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002657a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002657e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026582:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026586:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002658a:	ea4e 050a 	orr.w	r5, lr, sl
9002658e:	9508      	str	r5, [sp, #32]
90026590:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026592:	2dff      	cmp	r5, #255	@ 0xff
90026594:	d021      	beq.n	900265da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026596:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026598:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002659c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002659e:	fb05 fb0b 	mul.w	fp, r5, fp
900265a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900265a4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900265a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900265aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900265ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900265b2:	fb05 fa0a 	mul.w	sl, r5, sl
900265b6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900265ba:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900265be:	44de      	add	lr, fp
900265c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900265c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900265c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900265cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900265d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900265d4:	ea4e 050a 	orr.w	r5, lr, sl
900265d8:	950d      	str	r5, [sp, #52]	@ 0x34
900265da:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900265dc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900265e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900265e4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900265e8:	9d08      	ldr	r5, [sp, #32]
900265ea:	fb08 fc0c 	mul.w	ip, r8, ip
900265ee:	fb03 cc0e 	mla	ip, r3, lr, ip
900265f2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900265f6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900265f8:	fb01 cc0e 	mla	ip, r1, lr, ip
900265fc:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026600:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026602:	fb09 cc0e 	mla	ip, r9, lr, ip
90026606:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002660a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002660c:	fb08 f80e 	mul.w	r8, r8, lr
90026610:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026614:	fb03 8202 	mla	r2, r3, r2, r8
90026618:	9b08      	ldr	r3, [sp, #32]
9002661a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002661e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90026622:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026624:	fb01 220a 	mla	r2, r1, sl, r2
90026628:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
9002662c:	883b      	ldrh	r3, [r7, #0]
9002662e:	fb09 2901 	mla	r9, r9, r1, r2
90026632:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026634:	1219      	asrs	r1, r3, #8
90026636:	4342      	muls	r2, r0
90026638:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002663c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026640:	1c50      	adds	r0, r2, #1
90026642:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026646:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002664a:	ea4c 0c09 	orr.w	ip, ip, r9
9002664e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026652:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026656:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002665a:	fa5f fc8c 	uxtb.w	ip, ip
9002665e:	fb12 f205 	smulbb	r2, r2, r5
90026662:	b2c0      	uxtb	r0, r0
90026664:	fb1c fc05 	smulbb	ip, ip, r5
90026668:	fb01 2100 	mla	r1, r1, r0, r2
9002666c:	10da      	asrs	r2, r3, #3
9002666e:	fb1e fe05 	smulbb	lr, lr, r5
90026672:	00db      	lsls	r3, r3, #3
90026674:	b289      	uxth	r1, r1
90026676:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002667a:	b2db      	uxtb	r3, r3
9002667c:	fb02 e200 	mla	r2, r2, r0, lr
90026680:	fb03 c300 	mla	r3, r3, r0, ip
90026684:	b292      	uxth	r2, r2
90026686:	fa1f fc83 	uxth.w	ip, r3
9002668a:	1c4b      	adds	r3, r1, #1
9002668c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026690:	f10c 0301 	add.w	r3, ip, #1
90026694:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90026698:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002669c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900266a0:	430b      	orrs	r3, r1
900266a2:	1c51      	adds	r1, r2, #1
900266a4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900266a8:	0952      	lsrs	r2, r2, #5
900266aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900266ae:	4313      	orrs	r3, r2
900266b0:	803b      	strh	r3, [r7, #0]
900266b2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900266b4:	3702      	adds	r7, #2
900266b6:	441c      	add	r4, r3
900266b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900266ba:	441e      	add	r6, r3
900266bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900266be:	3b01      	subs	r3, #1
900266c0:	9318      	str	r3, [sp, #96]	@ 0x60
900266c2:	e698      	b.n	900263f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900266c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900266c6:	441c      	add	r4, r3
900266c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900266ca:	441e      	add	r6, r3
900266cc:	9b07      	ldr	r3, [sp, #28]
900266ce:	3b01      	subs	r3, #1
900266d0:	9307      	str	r3, [sp, #28]
900266d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900266d4:	3302      	adds	r3, #2
900266d6:	930a      	str	r3, [sp, #40]	@ 0x28
900266d8:	e66d      	b.n	900263b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900266da:	d023      	beq.n	90026724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900266dc:	9b07      	ldr	r3, [sp, #28]
900266de:	9829      	ldr	r0, [sp, #164]	@ 0xa4
900266e0:	3b01      	subs	r3, #1
900266e2:	fb00 4003 	mla	r0, r0, r3, r4
900266e6:	1400      	asrs	r0, r0, #16
900266e8:	f53f ae82 	bmi.w	900263f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900266ec:	3901      	subs	r1, #1
900266ee:	4288      	cmp	r0, r1
900266f0:	f6bf ae7e 	bge.w	900263f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900266f4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
900266f6:	fb01 6303 	mla	r3, r1, r3, r6
900266fa:	141b      	asrs	r3, r3, #16
900266fc:	f53f ae78 	bmi.w	900263f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026700:	3a01      	subs	r2, #1
90026702:	4293      	cmp	r3, r2
90026704:	f6bf ae74 	bge.w	900263f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026708:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002670c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90026710:	f1bb 0f00 	cmp.w	fp, #0
90026714:	dc6c      	bgt.n	900267f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026716:	9b07      	ldr	r3, [sp, #28]
90026718:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002671c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002671e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026722:	930a      	str	r3, [sp, #40]	@ 0x28
90026724:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026726:	2b00      	cmp	r3, #0
90026728:	f340 81b3 	ble.w	90026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002672c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026730:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026732:	ee30 0a04 	vadd.f32	s0, s0, s8
90026736:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002673a:	eef0 6a62 	vmov.f32	s13, s5
9002673e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026742:	ee31 1a05 	vadd.f32	s2, s2, s10
90026746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002674a:	ee16 4a90 	vmov	r4, s13
9002674e:	eef0 6a43 	vmov.f32	s13, s6
90026752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026756:	ee16 6a90 	vmov	r6, s13
9002675a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002675e:	ee61 7a27 	vmul.f32	s15, s2, s15
90026762:	ee77 2a62 	vsub.f32	s5, s14, s5
90026766:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002676a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002676e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026772:	ee12 2a90 	vmov	r2, s5
90026776:	eef0 2a47 	vmov.f32	s5, s14
9002677a:	fb92 f3f3 	sdiv	r3, r2, r3
9002677e:	ee13 2a10 	vmov	r2, s6
90026782:	9329      	str	r3, [sp, #164]	@ 0xa4
90026784:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026786:	eeb0 3a67 	vmov.f32	s6, s15
9002678a:	fb92 f3f3 	sdiv	r3, r2, r3
9002678e:	932a      	str	r3, [sp, #168]	@ 0xa8
90026790:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026792:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90026794:	3b01      	subs	r3, #1
90026796:	9317      	str	r3, [sp, #92]	@ 0x5c
90026798:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002679a:	bf08      	it	eq
9002679c:	4613      	moveq	r3, r2
9002679e:	9307      	str	r3, [sp, #28]
900267a0:	e5fb      	b.n	9002639a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900267a2:	2900      	cmp	r1, #0
900267a4:	f43f ae6b 	beq.w	9002647e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900267a8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900267ac:	9308      	str	r3, [sp, #32]
900267ae:	0e1b      	lsrs	r3, r3, #24
900267b0:	9311      	str	r3, [sp, #68]	@ 0x44
900267b2:	e664      	b.n	9002647e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900267b4:	f112 0801 	adds.w	r8, r2, #1
900267b8:	f53f af7b 	bmi.w	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267bc:	4543      	cmp	r3, r8
900267be:	f6ff af78 	blt.w	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267c2:	f11c 0801 	adds.w	r8, ip, #1
900267c6:	f53f af74 	bmi.w	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267ca:	45c6      	cmp	lr, r8
900267cc:	f6ff af71 	blt.w	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267d0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900267d2:	b21b      	sxth	r3, r3
900267d4:	9201      	str	r2, [sp, #4]
900267d6:	fa0f f28e 	sxth.w	r2, lr
900267da:	e9cd 1504 	strd	r1, r5, [sp, #16]
900267de:	e9cd c002 	strd	ip, r0, [sp, #8]
900267e2:	9200      	str	r2, [sp, #0]
900267e4:	4639      	mov	r1, r7
900267e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900267e8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900267ea:	f7ff fc79 	bl	900260e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900267ee:	e760      	b.n	900266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900267f0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900267f2:	1427      	asrs	r7, r4, #16
900267f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900267f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
900267fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900267fe:	1433      	asrs	r3, r6, #16
90026800:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026804:	fb01 7303 	mla	r3, r1, r3, r7
90026808:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9002680c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90026810:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026814:	2a00      	cmp	r2, #0
90026816:	f000 8133 	beq.w	90026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002681a:	687d      	ldr	r5, [r7, #4]
9002681c:	950e      	str	r5, [sp, #56]	@ 0x38
9002681e:	0e2d      	lsrs	r5, r5, #24
90026820:	9515      	str	r5, [sp, #84]	@ 0x54
90026822:	b178      	cbz	r0, 90026844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026824:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90026828:	3901      	subs	r1, #1
9002682a:	0089      	lsls	r1, r1, #2
9002682c:	3104      	adds	r1, #4
9002682e:	eb07 0e01 	add.w	lr, r7, r1
90026832:	5879      	ldr	r1, [r7, r1]
90026834:	9109      	str	r1, [sp, #36]	@ 0x24
90026836:	0e09      	lsrs	r1, r1, #24
90026838:	9112      	str	r1, [sp, #72]	@ 0x48
9002683a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002683e:	910f      	str	r1, [sp, #60]	@ 0x3c
90026840:	0e09      	lsrs	r1, r1, #24
90026842:	9116      	str	r1, [sp, #88]	@ 0x58
90026844:	b292      	uxth	r2, r2
90026846:	9915      	ldr	r1, [sp, #84]	@ 0x54
90026848:	b280      	uxth	r0, r0
9002684a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002684c:	fb02 f800 	mul.w	r8, r2, r0
90026850:	0112      	lsls	r2, r2, #4
90026852:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026856:	eba2 0e08 	sub.w	lr, r2, r8
9002685a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002685e:	b280      	uxth	r0, r0
90026860:	fa1f fe8e 	uxth.w	lr, lr
90026864:	1a12      	subs	r2, r2, r0
90026866:	fb0e f101 	mul.w	r1, lr, r1
9002686a:	b292      	uxth	r2, r2
9002686c:	fb02 110c 	mla	r1, r2, ip, r1
90026870:	fb00 1105 	mla	r1, r0, r5, r1
90026874:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026876:	fb08 1105 	mla	r1, r8, r5, r1
9002687a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002687e:	2900      	cmp	r1, #0
90026880:	f000 80f5 	beq.w	90026a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026884:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026888:	d019      	beq.n	900268be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002688a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002688e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026892:	fb0c fa0a 	mul.w	sl, ip, sl
90026896:	fb0c fc03 	mul.w	ip, ip, r3
9002689a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002689e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900268a2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900268a6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900268aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900268ae:	4453      	add	r3, sl
900268b0:	0a3f      	lsrs	r7, r7, #8
900268b2:	0a1b      	lsrs	r3, r3, #8
900268b4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900268b8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900268bc:	433b      	orrs	r3, r7
900268be:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900268c0:	2dff      	cmp	r5, #255	@ 0xff
900268c2:	d020      	beq.n	90026906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900268c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900268c6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900268ca:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900268cc:	436f      	muls	r7, r5
900268ce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900268d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900268d4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900268d8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900268da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900268de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900268e2:	fb05 fa0a 	mul.w	sl, r5, sl
900268e6:	44bc      	add	ip, r7
900268e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900268ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900268f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900268f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900268f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900268fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026900:	ea4c 050a 	orr.w	r5, ip, sl
90026904:	950e      	str	r5, [sp, #56]	@ 0x38
90026906:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026908:	2dff      	cmp	r5, #255	@ 0xff
9002690a:	d020      	beq.n	9002694e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002690c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002690e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026912:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026914:	436f      	muls	r7, r5
90026916:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026918:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002691c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026920:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026922:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026926:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002692a:	fb05 fa0a 	mul.w	sl, r5, sl
9002692e:	44bc      	add	ip, r7
90026930:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026938:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002693c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026940:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026944:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026948:	ea4c 050a 	orr.w	r5, ip, sl
9002694c:	9509      	str	r5, [sp, #36]	@ 0x24
9002694e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026950:	2dff      	cmp	r5, #255	@ 0xff
90026952:	d020      	beq.n	90026996 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026954:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026956:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002695a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002695c:	436f      	muls	r7, r5
9002695e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026960:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026964:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026968:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002696a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002696e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026972:	fb05 fa0a 	mul.w	sl, r5, sl
90026976:	44bc      	add	ip, r7
90026978:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002697c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026980:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026984:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026988:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002698c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026990:	ea4c 050a 	orr.w	r5, ip, sl
90026994:	950f      	str	r5, [sp, #60]	@ 0x3c
90026996:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026998:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002699c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900269a0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900269a4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900269a6:	fb0e f707 	mul.w	r7, lr, r7
900269aa:	fb02 770c 	mla	r7, r2, ip, r7
900269ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900269b2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900269b4:	fb00 770c 	mla	r7, r0, ip, r7
900269b8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900269bc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900269be:	fb08 770c 	mla	r7, r8, ip, r7
900269c2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900269c6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900269c8:	fb0e fe0c 	mul.w	lr, lr, ip
900269cc:	0a3f      	lsrs	r7, r7, #8
900269ce:	fb02 e303 	mla	r3, r2, r3, lr
900269d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900269d4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900269d8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900269dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900269de:	fb00 330a 	mla	r3, r0, sl, r3
900269e2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900269e6:	f8b9 0000 	ldrh.w	r0, [r9]
900269ea:	fb08 3c0c 	mla	ip, r8, ip, r3
900269ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900269f0:	1202      	asrs	r2, r0, #8
900269f2:	4359      	muls	r1, r3
900269f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900269f8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900269fc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026a00:	1c4b      	adds	r3, r1, #1
90026a02:	ea47 070c 	orr.w	r7, r7, ip
90026a06:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026a0a:	0c3b      	lsrs	r3, r7, #16
90026a0c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026a10:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026a14:	b2ff      	uxtb	r7, r7
90026a16:	fb13 f305 	smulbb	r3, r3, r5
90026a1a:	b2c9      	uxtb	r1, r1
90026a1c:	fb17 f705 	smulbb	r7, r7, r5
90026a20:	fb02 3201 	mla	r2, r2, r1, r3
90026a24:	10c3      	asrs	r3, r0, #3
90026a26:	fb1c fc05 	smulbb	ip, ip, r5
90026a2a:	00c0      	lsls	r0, r0, #3
90026a2c:	b292      	uxth	r2, r2
90026a2e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026a32:	b2c0      	uxtb	r0, r0
90026a34:	fb03 c301 	mla	r3, r3, r1, ip
90026a38:	fb00 7001 	mla	r0, r0, r1, r7
90026a3c:	1c51      	adds	r1, r2, #1
90026a3e:	b29b      	uxth	r3, r3
90026a40:	b280      	uxth	r0, r0
90026a42:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026a46:	f100 0c01 	add.w	ip, r0, #1
90026a4a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90026a4e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026a52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026a56:	ea4c 0202 	orr.w	r2, ip, r2
90026a5a:	f103 0c01 	add.w	ip, r3, #1
90026a5e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026a62:	095b      	lsrs	r3, r3, #5
90026a64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026a68:	431a      	orrs	r2, r3
90026a6a:	f8a9 2000 	strh.w	r2, [r9]
90026a6e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026a70:	f109 0902 	add.w	r9, r9, #2
90026a74:	f10b 3bff 	add.w	fp, fp, #4294967295
90026a78:	441c      	add	r4, r3
90026a7a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026a7c:	441e      	add	r6, r3
90026a7e:	e647      	b.n	90026710 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026a80:	2800      	cmp	r0, #0
90026a82:	f43f aedf 	beq.w	90026844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026a86:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026a8a:	9109      	str	r1, [sp, #36]	@ 0x24
90026a8c:	0e09      	lsrs	r1, r1, #24
90026a8e:	9112      	str	r1, [sp, #72]	@ 0x48
90026a90:	e6d8      	b.n	90026844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026a92:	b01d      	add	sp, #116	@ 0x74
90026a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026a98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a9c:	b085      	sub	sp, #20
90026a9e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026aa2:	9102      	str	r1, [sp, #8]
90026aa4:	2c00      	cmp	r4, #0
90026aa6:	fb04 7103 	mla	r1, r4, r3, r7
90026aaa:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026aae:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026ab2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026ab6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026aba:	f2c0 810c 	blt.w	90026cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026abe:	45a6      	cmp	lr, r4
90026ac0:	f340 8109 	ble.w	90026cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026ac4:	2f00      	cmp	r7, #0
90026ac6:	f2c0 8104 	blt.w	90026cd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026aca:	42bb      	cmp	r3, r7
90026acc:	f340 8101 	ble.w	90026cd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026ad0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026ad4:	1c7a      	adds	r2, r7, #1
90026ad6:	f100 8101 	bmi.w	90026cdc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026ada:	4293      	cmp	r3, r2
90026adc:	f340 80fe 	ble.w	90026cdc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026ae0:	2e00      	cmp	r6, #0
90026ae2:	f000 80fd 	beq.w	90026ce0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026ae6:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026aea:	3401      	adds	r4, #1
90026aec:	f100 80fc 	bmi.w	90026ce8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026af0:	45a6      	cmp	lr, r4
90026af2:	f340 80f9 	ble.w	90026ce8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026af6:	2800      	cmp	r0, #0
90026af8:	f000 80f9 	beq.w	90026cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026afc:	2f00      	cmp	r7, #0
90026afe:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90026b02:	f2c0 80ef 	blt.w	90026ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026b06:	42bb      	cmp	r3, r7
90026b08:	f340 80ec 	ble.w	90026ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026b0c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026b10:	3701      	adds	r7, #1
90026b12:	f100 80ef 	bmi.w	90026cf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026b16:	42bb      	cmp	r3, r7
90026b18:	f340 80ec 	ble.w	90026cf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026b1c:	2e00      	cmp	r6, #0
90026b1e:	f000 80eb 	beq.w	90026cf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90026b22:	6852      	ldr	r2, [r2, #4]
90026b24:	b2b6      	uxth	r6, r6
90026b26:	b280      	uxth	r0, r0
90026b28:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026b2c:	fb00 fe06 	mul.w	lr, r0, r6
90026b30:	0136      	lsls	r6, r6, #4
90026b32:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026b36:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026b3a:	eba6 070e 	sub.w	r7, r6, lr
90026b3e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90026b42:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026b46:	b280      	uxth	r0, r0
90026b48:	b2bf      	uxth	r7, r7
90026b4a:	1a1b      	subs	r3, r3, r0
90026b4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026b50:	fb07 f60a 	mul.w	r6, r7, sl
90026b54:	b29b      	uxth	r3, r3
90026b56:	fb0b 6603 	mla	r6, fp, r3, r6
90026b5a:	fb00 6609 	mla	r6, r0, r9, r6
90026b5e:	fb0e 6608 	mla	r6, lr, r8, r6
90026b62:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026b66:	9600      	str	r6, [sp, #0]
90026b68:	2e00      	cmp	r6, #0
90026b6a:	f000 80af 	beq.w	90026ccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90026b6e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026b72:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90026b76:	9e02      	ldr	r6, [sp, #8]
90026b78:	fb0b fc0c 	mul.w	ip, fp, ip
90026b7c:	fb0b f505 	mul.w	r5, fp, r5
90026b80:	8836      	ldrh	r6, [r6, #0]
90026b82:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026b86:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026b8a:	9501      	str	r5, [sp, #4]
90026b8c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90026b90:	44dc      	add	ip, fp
90026b92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026b96:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90026b9a:	9503      	str	r5, [sp, #12]
90026b9c:	9d01      	ldr	r5, [sp, #4]
90026b9e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90026ba2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026ba6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90026baa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026bae:	fb0a fc0c 	mul.w	ip, sl, ip
90026bb2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026bb6:	fb0a fa01 	mul.w	sl, sl, r1
90026bba:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026bbe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026bc2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90026bc6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026bca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026bce:	4465      	add	r5, ip
90026bd0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026bd4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026bd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026bdc:	fb09 fc0c 	mul.w	ip, r9, ip
90026be0:	0a2d      	lsrs	r5, r5, #8
90026be2:	fb09 f904 	mul.w	r9, r9, r4
90026be6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026bea:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026bee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026bf2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026bf6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026bfa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026bfe:	437d      	muls	r5, r7
90026c00:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026c04:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026c08:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026c0c:	4461      	add	r1, ip
90026c0e:	fb08 f404 	mul.w	r4, r8, r4
90026c12:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026c16:	fb08 f802 	mul.w	r8, r8, r2
90026c1a:	0a09      	lsrs	r1, r1, #8
90026c1c:	0a22      	lsrs	r2, r4, #8
90026c1e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90026c22:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026c26:	fb07 f70a 	mul.w	r7, r7, sl
90026c2a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026c2e:	4414      	add	r4, r2
90026c30:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026c34:	0a24      	lsrs	r4, r4, #8
90026c36:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026c3a:	9a03      	ldr	r2, [sp, #12]
90026c3c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90026c40:	fb02 5503 	mla	r5, r2, r3, r5
90026c44:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026c48:	fb04 540e 	mla	r4, r4, lr, r5
90026c4c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90026c50:	fb01 4100 	mla	r1, r1, r0, r4
90026c54:	0a09      	lsrs	r1, r1, #8
90026c56:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026c5a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90026c5e:	fb03 7101 	mla	r1, r3, r1, r7
90026c62:	9b00      	ldr	r3, [sp, #0]
90026c64:	fb0e 1e08 	mla	lr, lr, r8, r1
90026c68:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90026c6c:	43da      	mvns	r2, r3
90026c6e:	1233      	asrs	r3, r6, #8
90026c70:	fb00 e101 	mla	r1, r0, r1, lr
90026c74:	10f0      	asrs	r0, r6, #3
90026c76:	b2d2      	uxtb	r2, r2
90026c78:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026c7c:	0a09      	lsrs	r1, r1, #8
90026c7e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026c82:	00f6      	lsls	r6, r6, #3
90026c84:	4353      	muls	r3, r2
90026c86:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026c8a:	4350      	muls	r0, r2
90026c8c:	b2f6      	uxtb	r6, r6
90026c8e:	4321      	orrs	r1, r4
90026c90:	4356      	muls	r6, r2
90026c92:	1c5a      	adds	r2, r3, #1
90026c94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026c98:	0c0b      	lsrs	r3, r1, #16
90026c9a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026c9e:	1c42      	adds	r2, r0, #1
90026ca0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026ca4:	0a0a      	lsrs	r2, r1, #8
90026ca6:	021b      	lsls	r3, r3, #8
90026ca8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026cac:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90026cb0:	00d2      	lsls	r2, r2, #3
90026cb2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026cb6:	4313      	orrs	r3, r2
90026cb8:	1c72      	adds	r2, r6, #1
90026cba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90026cbe:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90026cc2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026cc6:	4319      	orrs	r1, r3
90026cc8:	9b02      	ldr	r3, [sp, #8]
90026cca:	8019      	strh	r1, [r3, #0]
90026ccc:	b005      	add	sp, #20
90026cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026cd2:	2500      	movs	r5, #0
90026cd4:	e6fe      	b.n	90026ad4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026cd6:	2100      	movs	r1, #0
90026cd8:	460d      	mov	r5, r1
90026cda:	e706      	b.n	90026aea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026cdc:	2100      	movs	r1, #0
90026cde:	e704      	b.n	90026aea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026ce0:	4631      	mov	r1, r6
90026ce2:	e702      	b.n	90026aea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026ce4:	2400      	movs	r4, #0
90026ce6:	e713      	b.n	90026b10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026ce8:	2200      	movs	r2, #0
90026cea:	4614      	mov	r4, r2
90026cec:	e71a      	b.n	90026b24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026cee:	4602      	mov	r2, r0
90026cf0:	4604      	mov	r4, r0
90026cf2:	e717      	b.n	90026b24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026cf4:	2200      	movs	r2, #0
90026cf6:	e715      	b.n	90026b24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026cf8:	4632      	mov	r2, r6
90026cfa:	e713      	b.n	90026b24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026cfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026d00:	b09b      	sub	sp, #108	@ 0x6c
90026d02:	9218      	str	r2, [sp, #96]	@ 0x60
90026d04:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90026d06:	9019      	str	r0, [sp, #100]	@ 0x64
90026d08:	9116      	str	r1, [sp, #88]	@ 0x58
90026d0a:	6850      	ldr	r0, [r2, #4]
90026d0c:	9307      	str	r3, [sp, #28]
90026d0e:	6812      	ldr	r2, [r2, #0]
90026d10:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90026d14:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90026d18:	fb00 1303 	mla	r3, r0, r3, r1
90026d1c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026d20:	930a      	str	r3, [sp, #40]	@ 0x28
90026d22:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026d24:	681b      	ldr	r3, [r3, #0]
90026d26:	930f      	str	r3, [sp, #60]	@ 0x3c
90026d28:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026d2a:	2b00      	cmp	r3, #0
90026d2c:	dc03      	bgt.n	90026d36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026d2e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026d30:	2b00      	cmp	r3, #0
90026d32:	f340 8387 	ble.w	90027444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026d36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026d38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026d3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026d40:	1e48      	subs	r0, r1, #1
90026d42:	1e57      	subs	r7, r2, #1
90026d44:	9b07      	ldr	r3, [sp, #28]
90026d46:	2b00      	cmp	r3, #0
90026d48:	f340 8166 	ble.w	90027018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026d4c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026d50:	ea4f 4326 	mov.w	r3, r6, asr #16
90026d54:	d406      	bmi.n	90026d64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026d56:	4584      	cmp	ip, r0
90026d58:	da04      	bge.n	90026d64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026d5a:	2b00      	cmp	r3, #0
90026d5c:	db02      	blt.n	90026d64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026d5e:	42bb      	cmp	r3, r7
90026d60:	f2c0 815b 	blt.w	9002701a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026d64:	f11c 0c01 	adds.w	ip, ip, #1
90026d68:	f100 814b 	bmi.w	90027002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026d6c:	4561      	cmp	r1, ip
90026d6e:	f2c0 8148 	blt.w	90027002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026d72:	3301      	adds	r3, #1
90026d74:	f100 8145 	bmi.w	90027002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026d78:	429a      	cmp	r2, r3
90026d7a:	f2c0 8142 	blt.w	90027002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026d7e:	9b07      	ldr	r3, [sp, #28]
90026d80:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026d82:	9317      	str	r3, [sp, #92]	@ 0x5c
90026d84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026d86:	2b00      	cmp	r3, #0
90026d88:	f340 8165 	ble.w	90027056 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90026d8c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90026d8e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026d92:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026d94:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026d98:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026d9c:	1422      	asrs	r2, r4, #16
90026d9e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026da2:	689b      	ldr	r3, [r3, #8]
90026da4:	f100 81d5 	bmi.w	90027152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026da8:	f103 38ff 	add.w	r8, r3, #4294967295
90026dac:	4542      	cmp	r2, r8
90026dae:	f280 81d0 	bge.w	90027152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026db2:	f1bc 0f00 	cmp.w	ip, #0
90026db6:	f2c0 81cc 	blt.w	90027152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026dba:	f10e 38ff 	add.w	r8, lr, #4294967295
90026dbe:	45c4      	cmp	ip, r8
90026dc0:	f280 81c7 	bge.w	90027152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026dc4:	b21b      	sxth	r3, r3
90026dc6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026dc8:	fb0c 2203 	mla	r2, ip, r3, r2
90026dcc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026dd0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026dd4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026dd8:	2900      	cmp	r1, #0
90026dda:	f000 8182 	beq.w	900270e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026dde:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026de2:	950b      	str	r5, [sp, #44]	@ 0x2c
90026de4:	0e2d      	lsrs	r5, r5, #24
90026de6:	9512      	str	r5, [sp, #72]	@ 0x48
90026de8:	b180      	cbz	r0, 90026e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026dea:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90026dee:	3b01      	subs	r3, #1
90026df0:	009b      	lsls	r3, r3, #2
90026df2:	3304      	adds	r3, #4
90026df4:	eb08 0c03 	add.w	ip, r8, r3
90026df8:	f858 3003 	ldr.w	r3, [r8, r3]
90026dfc:	9308      	str	r3, [sp, #32]
90026dfe:	0e1b      	lsrs	r3, r3, #24
90026e00:	9310      	str	r3, [sp, #64]	@ 0x40
90026e02:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026e06:	930c      	str	r3, [sp, #48]	@ 0x30
90026e08:	0e1b      	lsrs	r3, r3, #24
90026e0a:	9313      	str	r3, [sp, #76]	@ 0x4c
90026e0c:	b289      	uxth	r1, r1
90026e0e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90026e10:	b280      	uxth	r0, r0
90026e12:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026e14:	fb01 f900 	mul.w	r9, r1, r0
90026e18:	0109      	lsls	r1, r1, #4
90026e1a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026e1e:	eba1 0809 	sub.w	r8, r1, r9
90026e22:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90026e26:	b280      	uxth	r0, r0
90026e28:	fa1f f888 	uxth.w	r8, r8
90026e2c:	1a09      	subs	r1, r1, r0
90026e2e:	fb08 f303 	mul.w	r3, r8, r3
90026e32:	b289      	uxth	r1, r1
90026e34:	fb01 330e 	mla	r3, r1, lr, r3
90026e38:	fb00 3305 	mla	r3, r0, r5, r3
90026e3c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026e3e:	fb09 3305 	mla	r3, r9, r5, r3
90026e42:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026e46:	2b00      	cmp	r3, #0
90026e48:	f000 80d2 	beq.w	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026e4c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90026e50:	d01b      	beq.n	90026e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90026e52:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026e56:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026e5a:	fb0e fa0a 	mul.w	sl, lr, sl
90026e5e:	fb0e fe02 	mul.w	lr, lr, r2
90026e62:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026e66:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026e6a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90026e6e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026e72:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026e76:	4452      	add	r2, sl
90026e78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e7c:	0a12      	lsrs	r2, r2, #8
90026e7e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026e82:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026e86:	ea42 020c 	orr.w	r2, r2, ip
90026e8a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026e8c:	2dff      	cmp	r5, #255	@ 0xff
90026e8e:	d021      	beq.n	90026ed4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90026e90:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026e92:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026e96:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026e98:	fb05 fb0b 	mul.w	fp, r5, fp
90026e9c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026e9e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026ea2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026ea4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026ea8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026eac:	fb05 fa0a 	mul.w	sl, r5, sl
90026eb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026eb4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026eb8:	44de      	add	lr, fp
90026eba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026ebe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026ec2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026ec6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026eca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ece:	ea4e 050a 	orr.w	r5, lr, sl
90026ed2:	950b      	str	r5, [sp, #44]	@ 0x2c
90026ed4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026ed6:	2dff      	cmp	r5, #255	@ 0xff
90026ed8:	d021      	beq.n	90026f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90026eda:	9d08      	ldr	r5, [sp, #32]
90026edc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026ee0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026ee2:	fb05 fb0b 	mul.w	fp, r5, fp
90026ee6:	9d08      	ldr	r5, [sp, #32]
90026ee8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026eec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026eee:	fb05 fa0e 	mul.w	sl, r5, lr
90026ef2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026ef6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026efa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026efe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026f02:	44de      	add	lr, fp
90026f04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026f08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026f0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026f18:	ea4e 050a 	orr.w	r5, lr, sl
90026f1c:	9508      	str	r5, [sp, #32]
90026f1e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f20:	2dff      	cmp	r5, #255	@ 0xff
90026f22:	d021      	beq.n	90026f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90026f24:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f26:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026f2a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f2c:	fb05 fb0b 	mul.w	fp, r5, fp
90026f30:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f32:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026f36:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026f38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026f3c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026f40:	fb05 fa0a 	mul.w	sl, r5, sl
90026f44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f48:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026f4c:	44de      	add	lr, fp
90026f4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026f52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026f56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026f5e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026f62:	ea4e 050a 	orr.w	r5, lr, sl
90026f66:	950c      	str	r5, [sp, #48]	@ 0x30
90026f68:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026f6a:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026f6e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026f72:	2bff      	cmp	r3, #255	@ 0xff
90026f74:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026f78:	9d08      	ldr	r5, [sp, #32]
90026f7a:	fb08 fc0c 	mul.w	ip, r8, ip
90026f7e:	fb01 cc0e 	mla	ip, r1, lr, ip
90026f82:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026f86:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026f88:	fb00 cc0e 	mla	ip, r0, lr, ip
90026f8c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026f90:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026f92:	fb09 cc0e 	mla	ip, r9, lr, ip
90026f96:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026f9a:	fb08 f80e 	mul.w	r8, r8, lr
90026f9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026fa2:	fb01 8202 	mla	r2, r1, r2, r8
90026fa6:	9908      	ldr	r1, [sp, #32]
90026fa8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026fac:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90026fb0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90026fb2:	fb00 220a 	mla	r2, r0, sl, r2
90026fb6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90026fba:	fb09 2900 	mla	r9, r9, r0, r2
90026fbe:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026fc2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026fc6:	ea4c 0c09 	orr.w	ip, ip, r9
90026fca:	ea4f 221c 	mov.w	r2, ip, lsr #8
90026fce:	f040 8091 	bne.w	900270f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90026fd2:	ea4f 135c 	mov.w	r3, ip, lsr #5
90026fd6:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90026fda:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026fde:	f022 0207 	bic.w	r2, r2, #7
90026fe2:	431a      	orrs	r2, r3
90026fe4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90026fe8:	ea4c 0c02 	orr.w	ip, ip, r2
90026fec:	f8a7 c000 	strh.w	ip, [r7]
90026ff0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026ff2:	3702      	adds	r7, #2
90026ff4:	441c      	add	r4, r3
90026ff6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026ff8:	441e      	add	r6, r3
90026ffa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026ffc:	3b01      	subs	r3, #1
90026ffe:	9317      	str	r3, [sp, #92]	@ 0x5c
90027000:	e6c0      	b.n	90026d84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90027002:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027004:	441c      	add	r4, r3
90027006:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027008:	441e      	add	r6, r3
9002700a:	9b07      	ldr	r3, [sp, #28]
9002700c:	3b01      	subs	r3, #1
9002700e:	9307      	str	r3, [sp, #28]
90027010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027012:	3302      	adds	r3, #2
90027014:	930a      	str	r3, [sp, #40]	@ 0x28
90027016:	e695      	b.n	90026d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027018:	d024      	beq.n	90027064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002701a:	9b07      	ldr	r3, [sp, #28]
9002701c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002701e:	3b01      	subs	r3, #1
90027020:	fb00 4003 	mla	r0, r0, r3, r4
90027024:	1400      	asrs	r0, r0, #16
90027026:	f53f aeaa 	bmi.w	90026d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002702a:	3901      	subs	r1, #1
9002702c:	4288      	cmp	r0, r1
9002702e:	f6bf aea6 	bge.w	90026d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027032:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90027034:	fb01 6303 	mla	r3, r1, r3, r6
90027038:	141b      	asrs	r3, r3, #16
9002703a:	f53f aea0 	bmi.w	90026d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002703e:	3a01      	subs	r2, #1
90027040:	4293      	cmp	r3, r2
90027042:	f6bf ae9c 	bge.w	90026d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027046:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002704a:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002704e:	f1bb 0f00 	cmp.w	fp, #0
90027052:	f300 809a 	bgt.w	9002718a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027056:	9b07      	ldr	r3, [sp, #28]
90027058:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002705c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002705e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027062:	930a      	str	r3, [sp, #40]	@ 0x28
90027064:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027066:	2b00      	cmp	r3, #0
90027068:	f340 81ec 	ble.w	90027444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002706c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027070:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027072:	ee30 0a04 	vadd.f32	s0, s0, s8
90027076:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002707a:	eef0 6a62 	vmov.f32	s13, s5
9002707e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027082:	ee31 1a05 	vadd.f32	s2, s2, s10
90027086:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002708a:	ee16 4a90 	vmov	r4, s13
9002708e:	eef0 6a43 	vmov.f32	s13, s6
90027092:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027096:	ee16 6a90 	vmov	r6, s13
9002709a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002709e:	ee61 7a27 	vmul.f32	s15, s2, s15
900270a2:	ee77 2a62 	vsub.f32	s5, s14, s5
900270a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900270aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900270ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900270b2:	ee12 2a90 	vmov	r2, s5
900270b6:	eef0 2a47 	vmov.f32	s5, s14
900270ba:	fb92 f3f3 	sdiv	r3, r2, r3
900270be:	ee13 2a10 	vmov	r2, s6
900270c2:	9327      	str	r3, [sp, #156]	@ 0x9c
900270c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270c6:	eeb0 3a67 	vmov.f32	s6, s15
900270ca:	fb92 f3f3 	sdiv	r3, r2, r3
900270ce:	9328      	str	r3, [sp, #160]	@ 0xa0
900270d0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900270d2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900270d4:	3b01      	subs	r3, #1
900270d6:	9316      	str	r3, [sp, #88]	@ 0x58
900270d8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270da:	bf08      	it	eq
900270dc:	4613      	moveq	r3, r2
900270de:	9307      	str	r3, [sp, #28]
900270e0:	e622      	b.n	90026d28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900270e2:	2800      	cmp	r0, #0
900270e4:	f43f ae92 	beq.w	90026e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900270e8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900270ec:	9308      	str	r3, [sp, #32]
900270ee:	0e1b      	lsrs	r3, r3, #24
900270f0:	9310      	str	r3, [sp, #64]	@ 0x40
900270f2:	e68b      	b.n	90026e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900270f4:	8839      	ldrh	r1, [r7, #0]
900270f6:	43db      	mvns	r3, r3
900270f8:	4dd4      	ldr	r5, [pc, #848]	@ (9002744c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900270fa:	ea4f 2e21 	mov.w	lr, r1, asr #8
900270fe:	fa5f f883 	uxtb.w	r8, r3
90027102:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90027106:	10c8      	asrs	r0, r1, #3
90027108:	00cb      	lsls	r3, r1, #3
9002710a:	fb0e fe08 	mul.w	lr, lr, r8
9002710e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027112:	b2db      	uxtb	r3, r3
90027114:	f10e 0101 	add.w	r1, lr, #1
90027118:	fb00 f008 	mul.w	r0, r0, r8
9002711c:	fb03 f308 	mul.w	r3, r3, r8
90027120:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90027124:	ea4f 411c 	mov.w	r1, ip, lsr #16
90027128:	eb01 211e 	add.w	r1, r1, lr, lsr #8
9002712c:	f100 0e01 	add.w	lr, r0, #1
90027130:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90027134:	b2c9      	uxtb	r1, r1
90027136:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002713a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002713e:	00d2      	lsls	r2, r2, #3
90027140:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027144:	430a      	orrs	r2, r1
90027146:	1c59      	adds	r1, r3, #1
90027148:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002714c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027150:	e748      	b.n	90026fe4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027152:	f112 0801 	adds.w	r8, r2, #1
90027156:	f53f af4b 	bmi.w	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002715a:	4543      	cmp	r3, r8
9002715c:	f6ff af48 	blt.w	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027160:	f11c 0801 	adds.w	r8, ip, #1
90027164:	f53f af44 	bmi.w	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027168:	45c6      	cmp	lr, r8
9002716a:	f6ff af41 	blt.w	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002716e:	b21b      	sxth	r3, r3
90027170:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027174:	fa0f f28e 	sxth.w	r2, lr
90027178:	e9cd 1003 	strd	r1, r0, [sp, #12]
9002717c:	9200      	str	r2, [sp, #0]
9002717e:	4639      	mov	r1, r7
90027180:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027182:	9819      	ldr	r0, [sp, #100]	@ 0x64
90027184:	f7ff fc88 	bl	90026a98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90027188:	e732      	b.n	90026ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002718a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002718c:	1421      	asrs	r1, r4, #16
9002718e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027190:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027194:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90027198:	1433      	asrs	r3, r6, #16
9002719a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002719e:	fb07 1303 	mla	r3, r7, r3, r1
900271a2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900271a4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900271a8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900271ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900271b0:	2a00      	cmp	r2, #0
900271b2:	f000 8108 	beq.w	900273c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900271b6:	684d      	ldr	r5, [r1, #4]
900271b8:	950d      	str	r5, [sp, #52]	@ 0x34
900271ba:	0e2d      	lsrs	r5, r5, #24
900271bc:	9514      	str	r5, [sp, #80]	@ 0x50
900271be:	b178      	cbz	r0, 900271e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900271c0:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
900271c4:	3f01      	subs	r7, #1
900271c6:	00bf      	lsls	r7, r7, #2
900271c8:	3704      	adds	r7, #4
900271ca:	eb01 0e07 	add.w	lr, r1, r7
900271ce:	59c9      	ldr	r1, [r1, r7]
900271d0:	9109      	str	r1, [sp, #36]	@ 0x24
900271d2:	0e09      	lsrs	r1, r1, #24
900271d4:	9111      	str	r1, [sp, #68]	@ 0x44
900271d6:	f8de 1004 	ldr.w	r1, [lr, #4]
900271da:	910e      	str	r1, [sp, #56]	@ 0x38
900271dc:	0e09      	lsrs	r1, r1, #24
900271de:	9115      	str	r1, [sp, #84]	@ 0x54
900271e0:	b292      	uxth	r2, r2
900271e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900271e4:	b280      	uxth	r0, r0
900271e6:	fb02 f900 	mul.w	r9, r2, r0
900271ea:	0112      	lsls	r2, r2, #4
900271ec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900271f0:	eba2 0e09 	sub.w	lr, r2, r9
900271f4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
900271f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900271fa:	b280      	uxth	r0, r0
900271fc:	fa1f fe8e 	uxth.w	lr, lr
90027200:	1a09      	subs	r1, r1, r0
90027202:	fb0e f202 	mul.w	r2, lr, r2
90027206:	b289      	uxth	r1, r1
90027208:	fb01 220c 	mla	r2, r1, ip, r2
9002720c:	fb00 2205 	mla	r2, r0, r5, r2
90027210:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027212:	fb09 2205 	mla	r2, r9, r5, r2
90027216:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002721a:	2a00      	cmp	r2, #0
9002721c:	f000 80ca 	beq.w	900273b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027220:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90027224:	d019      	beq.n	9002725a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90027226:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002722a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002722e:	fb0c fa0a 	mul.w	sl, ip, sl
90027232:	fb0c fc03 	mul.w	ip, ip, r3
90027236:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002723a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002723e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90027242:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027246:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002724a:	4453      	add	r3, sl
9002724c:	0a3f      	lsrs	r7, r7, #8
9002724e:	0a1b      	lsrs	r3, r3, #8
90027250:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90027254:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027258:	433b      	orrs	r3, r7
9002725a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002725c:	2dff      	cmp	r5, #255	@ 0xff
9002725e:	d020      	beq.n	900272a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027260:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027262:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027266:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027268:	436f      	muls	r7, r5
9002726a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002726c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027270:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027274:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027276:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002727a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002727e:	fb05 fa0a 	mul.w	sl, r5, sl
90027282:	44bc      	add	ip, r7
90027284:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002728c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027290:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027294:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027298:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002729c:	ea4c 050a 	orr.w	r5, ip, sl
900272a0:	950d      	str	r5, [sp, #52]	@ 0x34
900272a2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900272a4:	2dff      	cmp	r5, #255	@ 0xff
900272a6:	d020      	beq.n	900272ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900272a8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900272aa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900272ae:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900272b0:	436f      	muls	r7, r5
900272b2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900272b4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900272b8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900272ba:	fb05 fa0c 	mul.w	sl, r5, ip
900272be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900272c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900272c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900272ca:	44bc      	add	ip, r7
900272cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900272d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900272d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900272d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900272dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900272e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900272e4:	ea4c 050a 	orr.w	r5, ip, sl
900272e8:	9509      	str	r5, [sp, #36]	@ 0x24
900272ea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900272ec:	2dff      	cmp	r5, #255	@ 0xff
900272ee:	d020      	beq.n	90027332 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900272f0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272f2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900272f6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900272f8:	436f      	muls	r7, r5
900272fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900272fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027300:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027304:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027306:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002730a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002730e:	fb05 fa0a 	mul.w	sl, r5, sl
90027312:	44bc      	add	ip, r7
90027314:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027318:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002731c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027320:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027328:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002732c:	ea4c 050a 	orr.w	r5, ip, sl
90027330:	950e      	str	r5, [sp, #56]	@ 0x38
90027332:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027334:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90027338:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002733c:	2aff      	cmp	r2, #255	@ 0xff
9002733e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027342:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027344:	fb0e f707 	mul.w	r7, lr, r7
90027348:	fb01 770c 	mla	r7, r1, ip, r7
9002734c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027350:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027352:	fb00 770c 	mla	r7, r0, ip, r7
90027356:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002735a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002735c:	fb09 770c 	mla	r7, r9, ip, r7
90027360:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90027364:	fb0e fe0c 	mul.w	lr, lr, ip
90027368:	ea4f 2717 	mov.w	r7, r7, lsr #8
9002736c:	fb01 e303 	mla	r3, r1, r3, lr
90027370:	9909      	ldr	r1, [sp, #36]	@ 0x24
90027372:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90027376:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002737a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002737c:	fb00 330a 	mla	r3, r0, sl, r3
90027380:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90027384:	fb09 3c0c 	mla	ip, r9, ip, r3
90027388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002738c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027390:	ea47 070c 	orr.w	r7, r7, ip
90027394:	ea4f 2317 	mov.w	r3, r7, lsr #8
90027398:	d11e      	bne.n	900273d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002739a:	097a      	lsrs	r2, r7, #5
9002739c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900273a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900273a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900273a8:	f023 0307 	bic.w	r3, r3, #7
900273ac:	4313      	orrs	r3, r2
900273ae:	431f      	orrs	r7, r3
900273b0:	f8a8 7000 	strh.w	r7, [r8]
900273b4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900273b6:	f108 0802 	add.w	r8, r8, #2
900273ba:	f10b 3bff 	add.w	fp, fp, #4294967295
900273be:	441c      	add	r4, r3
900273c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900273c2:	441e      	add	r6, r3
900273c4:	e643      	b.n	9002704e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900273c6:	2800      	cmp	r0, #0
900273c8:	f43f af0a 	beq.w	900271e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900273cc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
900273d0:	9109      	str	r1, [sp, #36]	@ 0x24
900273d2:	0e09      	lsrs	r1, r1, #24
900273d4:	9111      	str	r1, [sp, #68]	@ 0x44
900273d6:	e703      	b.n	900271e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900273d8:	f8b8 1000 	ldrh.w	r1, [r8]
900273dc:	43d2      	mvns	r2, r2
900273de:	ea4f 2c21 	mov.w	ip, r1, asr #8
900273e2:	fa5f fe82 	uxtb.w	lr, r2
900273e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900273ea:	10c8      	asrs	r0, r1, #3
900273ec:	00ca      	lsls	r2, r1, #3
900273ee:	fb0c fc0e 	mul.w	ip, ip, lr
900273f2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900273f6:	b2d2      	uxtb	r2, r2
900273f8:	f10c 0101 	add.w	r1, ip, #1
900273fc:	fb00 f00e 	mul.w	r0, r0, lr
90027400:	fb02 f20e 	mul.w	r2, r2, lr
90027404:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027408:	0c39      	lsrs	r1, r7, #16
9002740a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002740e:	490f      	ldr	r1, [pc, #60]	@ (9002744c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027410:	fa5f fc8c 	uxtb.w	ip, ip
90027414:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027418:	1c41      	adds	r1, r0, #1
9002741a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002741e:	1c51      	adds	r1, r2, #1
90027420:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027424:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027428:	00c0      	lsls	r0, r0, #3
9002742a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002742e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027432:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027436:	ea4c 0c00 	orr.w	ip, ip, r0
9002743a:	ea47 0c0c 	orr.w	ip, r7, ip
9002743e:	f8a8 c000 	strh.w	ip, [r8]
90027442:	e7b7      	b.n	900273b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027444:	b01b      	add	sp, #108	@ 0x6c
90027446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002744a:	bf00      	nop
9002744c:	fffff800 	.word	0xfffff800

90027450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027454:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027458:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002745c:	2d00      	cmp	r5, #0
9002745e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90027462:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027466:	fb05 0e03 	mla	lr, r5, r3, r0
9002746a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002746e:	f2c0 808c 	blt.w	9002758a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027472:	45a9      	cmp	r9, r5
90027474:	f340 8089 	ble.w	9002758a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027478:	2800      	cmp	r0, #0
9002747a:	f2c0 8084 	blt.w	90027586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002747e:	4580      	cmp	r8, r0
90027480:	f340 8081 	ble.w	90027586 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027484:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027488:	f01e 0f01 	tst.w	lr, #1
9002748c:	5d16      	ldrb	r6, [r2, r4]
9002748e:	bf0c      	ite	eq
90027490:	f006 060f 	andeq.w	r6, r6, #15
90027494:	1136      	asrne	r6, r6, #4
90027496:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002749a:	b2f6      	uxtb	r6, r6
9002749c:	1c44      	adds	r4, r0, #1
9002749e:	d477      	bmi.n	90027590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900274a0:	45a0      	cmp	r8, r4
900274a2:	dd75      	ble.n	90027590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900274a4:	2f00      	cmp	r7, #0
900274a6:	d075      	beq.n	90027594 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900274a8:	f10e 0a01 	add.w	sl, lr, #1
900274ac:	ea4f 045a 	mov.w	r4, sl, lsr #1
900274b0:	f01a 0f01 	tst.w	sl, #1
900274b4:	5d14      	ldrb	r4, [r2, r4]
900274b6:	bf0c      	ite	eq
900274b8:	f004 040f 	andeq.w	r4, r4, #15
900274bc:	1124      	asrne	r4, r4, #4
900274be:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900274c2:	b2e4      	uxtb	r4, r4
900274c4:	3501      	adds	r5, #1
900274c6:	d469      	bmi.n	9002759c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900274c8:	45a9      	cmp	r9, r5
900274ca:	dd67      	ble.n	9002759c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900274cc:	f1bc 0f00 	cmp.w	ip, #0
900274d0:	d067      	beq.n	900275a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
900274d2:	2800      	cmp	r0, #0
900274d4:	db60      	blt.n	90027598 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900274d6:	4580      	cmp	r8, r0
900274d8:	dd5e      	ble.n	90027598 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900274da:	eb03 090e 	add.w	r9, r3, lr
900274de:	ea4f 0559 	mov.w	r5, r9, lsr #1
900274e2:	f019 0f01 	tst.w	r9, #1
900274e6:	5d55      	ldrb	r5, [r2, r5]
900274e8:	bf0c      	ite	eq
900274ea:	f005 050f 	andeq.w	r5, r5, #15
900274ee:	112d      	asrne	r5, r5, #4
900274f0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900274f4:	b2ed      	uxtb	r5, r5
900274f6:	3001      	adds	r0, #1
900274f8:	d456      	bmi.n	900275a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900274fa:	4580      	cmp	r8, r0
900274fc:	dd54      	ble.n	900275a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900274fe:	2f00      	cmp	r7, #0
90027500:	d054      	beq.n	900275ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027502:	3301      	adds	r3, #1
90027504:	449e      	add	lr, r3
90027506:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002750a:	f01e 0f01 	tst.w	lr, #1
9002750e:	5cd0      	ldrb	r0, [r2, r3]
90027510:	bf0c      	ite	eq
90027512:	f000 000f 	andeq.w	r0, r0, #15
90027516:	1100      	asrne	r0, r0, #4
90027518:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002751c:	b2c3      	uxtb	r3, r0
9002751e:	b2ba      	uxth	r2, r7
90027520:	fa1f fc8c 	uxth.w	ip, ip
90027524:	fb02 f00c 	mul.w	r0, r2, ip
90027528:	0112      	lsls	r2, r2, #4
9002752a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002752e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90027532:	1a12      	subs	r2, r2, r0
90027534:	fa1f fc8c 	uxth.w	ip, ip
90027538:	b292      	uxth	r2, r2
9002753a:	eba7 070c 	sub.w	r7, r7, ip
9002753e:	4362      	muls	r2, r4
90027540:	b2bf      	uxth	r7, r7
90027542:	fb06 2207 	mla	r2, r6, r7, r2
90027546:	fb0c 2505 	mla	r5, ip, r5, r2
9002754a:	fb00 5303 	mla	r3, r0, r3, r5
9002754e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027552:	b1b3      	cbz	r3, 90027582 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027554:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027558:	435a      	muls	r2, r3
9002755a:	1c53      	adds	r3, r2, #1
9002755c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027560:	4a2d      	ldr	r2, [pc, #180]	@ (90027618 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027562:	121b      	asrs	r3, r3, #8
90027564:	6812      	ldr	r2, [r2, #0]
90027566:	2bff      	cmp	r3, #255	@ 0xff
90027568:	ea4f 2612 	mov.w	r6, r2, lsr #8
9002756c:	d120      	bne.n	900275b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
9002756e:	0950      	lsrs	r0, r2, #5
90027570:	4b2a      	ldr	r3, [pc, #168]	@ (9002761c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027572:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027576:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002757a:	4033      	ands	r3, r6
9002757c:	4318      	orrs	r0, r3
9002757e:	4302      	orrs	r2, r0
90027580:	800a      	strh	r2, [r1, #0]
90027582:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027586:	2600      	movs	r6, #0
90027588:	e788      	b.n	9002749c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002758a:	2400      	movs	r4, #0
9002758c:	4626      	mov	r6, r4
9002758e:	e799      	b.n	900274c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027590:	2400      	movs	r4, #0
90027592:	e797      	b.n	900274c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027594:	463c      	mov	r4, r7
90027596:	e795      	b.n	900274c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027598:	2500      	movs	r5, #0
9002759a:	e7ac      	b.n	900274f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
9002759c:	2300      	movs	r3, #0
9002759e:	461d      	mov	r5, r3
900275a0:	e7bd      	b.n	9002751e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900275a2:	4663      	mov	r3, ip
900275a4:	4665      	mov	r5, ip
900275a6:	e7ba      	b.n	9002751e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900275a8:	2300      	movs	r3, #0
900275aa:	e7b8      	b.n	9002751e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900275ac:	463b      	mov	r3, r7
900275ae:	e7b6      	b.n	9002751e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900275b0:	880d      	ldrh	r5, [r1, #0]
900275b2:	b29f      	uxth	r7, r3
900275b4:	f3c2 4007 	ubfx	r0, r2, #16, #8
900275b8:	43db      	mvns	r3, r3
900275ba:	122c      	asrs	r4, r5, #8
900275bc:	fb10 f007 	smulbb	r0, r0, r7
900275c0:	b2db      	uxtb	r3, r3
900275c2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900275c6:	b2f6      	uxtb	r6, r6
900275c8:	b2d2      	uxtb	r2, r2
900275ca:	fb04 0403 	mla	r4, r4, r3, r0
900275ce:	10e8      	asrs	r0, r5, #3
900275d0:	fb12 f207 	smulbb	r2, r2, r7
900275d4:	00ed      	lsls	r5, r5, #3
900275d6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900275da:	b2a4      	uxth	r4, r4
900275dc:	fb16 f607 	smulbb	r6, r6, r7
900275e0:	b2ed      	uxtb	r5, r5
900275e2:	fb00 6603 	mla	r6, r0, r3, r6
900275e6:	fb05 2303 	mla	r3, r5, r3, r2
900275ea:	b2b0      	uxth	r0, r6
900275ec:	b29a      	uxth	r2, r3
900275ee:	1c63      	adds	r3, r4, #1
900275f0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900275f4:	1c53      	adds	r3, r2, #1
900275f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900275fa:	1c42      	adds	r2, r0, #1
900275fc:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027600:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027604:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027608:	0940      	lsrs	r0, r0, #5
9002760a:	4323      	orrs	r3, r4
9002760c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027610:	4303      	orrs	r3, r0
90027612:	800b      	strh	r3, [r1, #0]
90027614:	e7b5      	b.n	90027582 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027616:	bf00      	nop
90027618:	24021854 	.word	0x24021854
9002761c:	00fff800 	.word	0x00fff800

90027620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027624:	b097      	sub	sp, #92	@ 0x5c
90027626:	9214      	str	r2, [sp, #80]	@ 0x50
90027628:	9309      	str	r3, [sp, #36]	@ 0x24
9002762a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002762c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90027630:	9015      	str	r0, [sp, #84]	@ 0x54
90027632:	910d      	str	r1, [sp, #52]	@ 0x34
90027634:	6850      	ldr	r0, [r2, #4]
90027636:	930f      	str	r3, [sp, #60]	@ 0x3c
90027638:	6812      	ldr	r2, [r2, #0]
9002763a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002763e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90027642:	fb00 1303 	mla	r3, r0, r3, r1
90027646:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002764a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002764c:	689b      	ldr	r3, [r3, #8]
9002764e:	3301      	adds	r3, #1
90027650:	f023 0301 	bic.w	r3, r3, #1
90027654:	930a      	str	r3, [sp, #40]	@ 0x28
90027656:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027658:	681f      	ldr	r7, [r3, #0]
9002765a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002765c:	2b00      	cmp	r3, #0
9002765e:	dc03      	bgt.n	90027668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027660:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90027662:	2b00      	cmp	r3, #0
90027664:	f340 8289 	ble.w	90027b7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027668:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002766a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002766e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027672:	1e48      	subs	r0, r1, #1
90027674:	f102 3cff 	add.w	ip, r2, #4294967295
90027678:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002767a:	2b00      	cmp	r3, #0
9002767c:	f340 80c5 	ble.w	9002780a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027680:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027684:	ea4f 4326 	mov.w	r3, r6, asr #16
90027688:	d406      	bmi.n	90027698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002768a:	4586      	cmp	lr, r0
9002768c:	da04      	bge.n	90027698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002768e:	2b00      	cmp	r3, #0
90027690:	db02      	blt.n	90027698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027692:	4563      	cmp	r3, ip
90027694:	f2c0 80ba 	blt.w	9002780c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90027698:	f11e 0e01 	adds.w	lr, lr, #1
9002769c:	f100 80ab 	bmi.w	900277f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900276a0:	4571      	cmp	r1, lr
900276a2:	f2c0 80a8 	blt.w	900277f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900276a6:	3301      	adds	r3, #1
900276a8:	f100 80a5 	bmi.w	900277f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900276ac:	429a      	cmp	r2, r3
900276ae:	f2c0 80a2 	blt.w	900277f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900276b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900276b4:	46c8      	mov	r8, r9
900276b6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900276ba:	930e      	str	r3, [sp, #56]	@ 0x38
900276bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900276be:	2b00      	cmp	r3, #0
900276c0:	f340 80c4 	ble.w	9002784c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900276c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900276c6:	1430      	asrs	r0, r6, #16
900276c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900276cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
900276d0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900276d4:	1423      	asrs	r3, r4, #16
900276d6:	f100 814f 	bmi.w	90027978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900276da:	f10c 3bff 	add.w	fp, ip, #4294967295
900276de:	455b      	cmp	r3, fp
900276e0:	f280 814a 	bge.w	90027978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900276e4:	2800      	cmp	r0, #0
900276e6:	f2c0 8147 	blt.w	90027978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900276ea:	f10e 3bff 	add.w	fp, lr, #4294967295
900276ee:	4558      	cmp	r0, fp
900276f0:	f280 8142 	bge.w	90027978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900276f4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900276f6:	fb00 3305 	mla	r3, r0, r5, r3
900276fa:	0858      	lsrs	r0, r3, #1
900276fc:	07dd      	lsls	r5, r3, #31
900276fe:	f817 c000 	ldrb.w	ip, [r7, r0]
90027702:	bf54      	ite	pl
90027704:	f00c 0c0f 	andpl.w	ip, ip, #15
90027708:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002770c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027710:	fa5f fc8c 	uxtb.w	ip, ip
90027714:	2a00      	cmp	r2, #0
90027716:	f000 80dd 	beq.w	900278d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002771a:	1c58      	adds	r0, r3, #1
9002771c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027720:	07c0      	lsls	r0, r0, #31
90027722:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027726:	bf54      	ite	pl
90027728:	f00e 0e0f 	andpl.w	lr, lr, #15
9002772c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027730:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027734:	fa5f f08e 	uxtb.w	r0, lr
90027738:	9010      	str	r0, [sp, #64]	@ 0x40
9002773a:	b1d9      	cbz	r1, 90027774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002773c:	4453      	add	r3, sl
9002773e:	0858      	lsrs	r0, r3, #1
90027740:	07dd      	lsls	r5, r3, #31
90027742:	f103 0301 	add.w	r3, r3, #1
90027746:	5c38      	ldrb	r0, [r7, r0]
90027748:	bf54      	ite	pl
9002774a:	f000 000f 	andpl.w	r0, r0, #15
9002774e:	1100      	asrmi	r0, r0, #4
90027750:	07dd      	lsls	r5, r3, #31
90027752:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027756:	b2c0      	uxtb	r0, r0
90027758:	900b      	str	r0, [sp, #44]	@ 0x2c
9002775a:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002775e:	f817 e000 	ldrb.w	lr, [r7, r0]
90027762:	bf54      	ite	pl
90027764:	f00e 030f 	andpl.w	r3, lr, #15
90027768:	ea4f 132e 	movmi.w	r3, lr, asr #4
9002776c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027770:	b2db      	uxtb	r3, r3
90027772:	9311      	str	r3, [sp, #68]	@ 0x44
90027774:	b292      	uxth	r2, r2
90027776:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027778:	b289      	uxth	r1, r1
9002777a:	fb02 f301 	mul.w	r3, r2, r1
9002777e:	0112      	lsls	r2, r2, #4
90027780:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027784:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90027788:	1ad2      	subs	r2, r2, r3
9002778a:	b289      	uxth	r1, r1
9002778c:	b292      	uxth	r2, r2
9002778e:	1a40      	subs	r0, r0, r1
90027790:	436a      	muls	r2, r5
90027792:	b280      	uxth	r0, r0
90027794:	fb0c 2c00 	mla	ip, ip, r0, r2
90027798:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002779a:	fb01 c102 	mla	r1, r1, r2, ip
9002779e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900277a0:	fb03 1302 	mla	r3, r3, r2, r1
900277a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900277a8:	b1db      	cbz	r3, 900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900277aa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900277ac:	4353      	muls	r3, r2
900277ae:	1c5a      	adds	r2, r3, #1
900277b0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900277b4:	4ac6      	ldr	r2, [pc, #792]	@ (90027ad0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900277b6:	121b      	asrs	r3, r3, #8
900277b8:	6812      	ldr	r2, [r2, #0]
900277ba:	2bff      	cmp	r3, #255	@ 0xff
900277bc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900277c0:	f040 8099 	bne.w	900278f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900277c4:	0953      	lsrs	r3, r2, #5
900277c6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900277ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900277ce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900277d2:	f02c 0c07 	bic.w	ip, ip, #7
900277d6:	ea43 0c0c 	orr.w	ip, r3, ip
900277da:	ea4c 0202 	orr.w	r2, ip, r2
900277de:	f8a8 2000 	strh.w	r2, [r8]
900277e2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900277e4:	f108 0802 	add.w	r8, r8, #2
900277e8:	441c      	add	r4, r3
900277ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900277ec:	441e      	add	r6, r3
900277ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900277f0:	3b01      	subs	r3, #1
900277f2:	930e      	str	r3, [sp, #56]	@ 0x38
900277f4:	e762      	b.n	900276bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900277f6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900277f8:	f109 0902 	add.w	r9, r9, #2
900277fc:	441c      	add	r4, r3
900277fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027800:	441e      	add	r6, r3
90027802:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027804:	3b01      	subs	r3, #1
90027806:	9309      	str	r3, [sp, #36]	@ 0x24
90027808:	e736      	b.n	90027678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002780a:	d024      	beq.n	90027856 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002780c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002780e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90027810:	3b01      	subs	r3, #1
90027812:	fb00 4003 	mla	r0, r0, r3, r4
90027816:	1400      	asrs	r0, r0, #16
90027818:	f53f af4b 	bmi.w	900276b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002781c:	3901      	subs	r1, #1
9002781e:	4288      	cmp	r0, r1
90027820:	f6bf af47 	bge.w	900276b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027824:	9924      	ldr	r1, [sp, #144]	@ 0x90
90027826:	fb01 6303 	mla	r3, r1, r3, r6
9002782a:	141b      	asrs	r3, r3, #16
9002782c:	f53f af41 	bmi.w	900276b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027830:	3a01      	subs	r2, #1
90027832:	4293      	cmp	r3, r2
90027834:	f6bf af3d 	bge.w	900276b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027838:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9002783c:	46c8      	mov	r8, r9
9002783e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90027842:	930e      	str	r3, [sp, #56]	@ 0x38
90027844:	f1bb 0f00 	cmp.w	fp, #0
90027848:	f300 80b7 	bgt.w	900279ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
9002784c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002784e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027852:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027856:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027858:	2b00      	cmp	r3, #0
9002785a:	f340 818e 	ble.w	90027b7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002785e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027862:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027864:	ee30 0a04 	vadd.f32	s0, s0, s8
90027868:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002786c:	eef0 6a62 	vmov.f32	s13, s5
90027870:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027874:	ee31 1a05 	vadd.f32	s2, s2, s10
90027878:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002787c:	ee16 4a90 	vmov	r4, s13
90027880:	eef0 6a43 	vmov.f32	s13, s6
90027884:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027888:	ee16 6a90 	vmov	r6, s13
9002788c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027890:	ee61 7a27 	vmul.f32	s15, s2, s15
90027894:	ee77 2a62 	vsub.f32	s5, s14, s5
90027898:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002789c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900278a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900278a4:	ee12 2a90 	vmov	r2, s5
900278a8:	eef0 2a47 	vmov.f32	s5, s14
900278ac:	fb92 f3f3 	sdiv	r3, r2, r3
900278b0:	ee13 2a10 	vmov	r2, s6
900278b4:	9323      	str	r3, [sp, #140]	@ 0x8c
900278b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900278b8:	eeb0 3a67 	vmov.f32	s6, s15
900278bc:	fb92 f3f3 	sdiv	r3, r2, r3
900278c0:	9324      	str	r3, [sp, #144]	@ 0x90
900278c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900278c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900278c6:	3b01      	subs	r3, #1
900278c8:	930d      	str	r3, [sp, #52]	@ 0x34
900278ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900278cc:	bf08      	it	eq
900278ce:	4613      	moveq	r3, r2
900278d0:	9309      	str	r3, [sp, #36]	@ 0x24
900278d2:	e6c2      	b.n	9002765a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900278d4:	2900      	cmp	r1, #0
900278d6:	f43f af4d 	beq.w	90027774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900278da:	eb0a 0003 	add.w	r0, sl, r3
900278de:	0843      	lsrs	r3, r0, #1
900278e0:	07c0      	lsls	r0, r0, #31
900278e2:	5cfb      	ldrb	r3, [r7, r3]
900278e4:	bf54      	ite	pl
900278e6:	f003 030f 	andpl.w	r3, r3, #15
900278ea:	111b      	asrmi	r3, r3, #4
900278ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900278f0:	b2db      	uxtb	r3, r3
900278f2:	930b      	str	r3, [sp, #44]	@ 0x2c
900278f4:	e73e      	b.n	90027774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900278f6:	f8b8 e000 	ldrh.w	lr, [r8]
900278fa:	fa1f fb83 	uxth.w	fp, r3
900278fe:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027902:	43db      	mvns	r3, r3
90027904:	ea4f 202e 	mov.w	r0, lr, asr #8
90027908:	fb11 f10b 	smulbb	r1, r1, fp
9002790c:	b2db      	uxtb	r3, r3
9002790e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027912:	fa5f fc8c 	uxtb.w	ip, ip
90027916:	b2d2      	uxtb	r2, r2
90027918:	fb00 1003 	mla	r0, r0, r3, r1
9002791c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027920:	fb1c fc0b 	smulbb	ip, ip, fp
90027924:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027928:	b280      	uxth	r0, r0
9002792a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002792e:	fb12 fb0b 	smulbb	fp, r2, fp
90027932:	fa5f fe8e 	uxtb.w	lr, lr
90027936:	fb01 cc03 	mla	ip, r1, r3, ip
9002793a:	fb0e bb03 	mla	fp, lr, r3, fp
9002793e:	1c43      	adds	r3, r0, #1
90027940:	fa1f fc8c 	uxth.w	ip, ip
90027944:	fa1f fb8b 	uxth.w	fp, fp
90027948:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002794c:	f10c 0101 	add.w	r1, ip, #1
90027950:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90027954:	f10b 0001 	add.w	r0, fp, #1
90027958:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002795c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027960:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027964:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027968:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002796c:	4318      	orrs	r0, r3
9002796e:	ea40 000c 	orr.w	r0, r0, ip
90027972:	f8a8 0000 	strh.w	r0, [r8]
90027976:	e734      	b.n	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027978:	f113 0b01 	adds.w	fp, r3, #1
9002797c:	f53f af31 	bmi.w	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027980:	45dc      	cmp	ip, fp
90027982:	f6ff af2e 	blt.w	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027986:	f110 0b01 	adds.w	fp, r0, #1
9002798a:	f53f af2a 	bmi.w	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002798e:	45de      	cmp	lr, fp
90027990:	f6ff af27 	blt.w	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027994:	9302      	str	r3, [sp, #8]
90027996:	fa0f f38e 	sxth.w	r3, lr
9002799a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002799c:	9301      	str	r3, [sp, #4]
9002799e:	fa0f f38c 	sxth.w	r3, ip
900279a2:	e9cd 0203 	strd	r0, r2, [sp, #12]
900279a6:	e9cd 1505 	strd	r1, r5, [sp, #20]
900279aa:	9300      	str	r3, [sp, #0]
900279ac:	463a      	mov	r2, r7
900279ae:	4653      	mov	r3, sl
900279b0:	4641      	mov	r1, r8
900279b2:	9815      	ldr	r0, [sp, #84]	@ 0x54
900279b4:	f7ff fd4c 	bl	90027450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900279b8:	e713      	b.n	900277e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900279ba:	1422      	asrs	r2, r4, #16
900279bc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900279be:	1433      	asrs	r3, r6, #16
900279c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900279c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900279c8:	fb05 2303 	mla	r3, r5, r3, r2
900279cc:	085a      	lsrs	r2, r3, #1
900279ce:	07dd      	lsls	r5, r3, #31
900279d0:	5cba      	ldrb	r2, [r7, r2]
900279d2:	bf54      	ite	pl
900279d4:	f002 020f 	andpl.w	r2, r2, #15
900279d8:	1112      	asrmi	r2, r2, #4
900279da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900279de:	b2d2      	uxtb	r2, r2
900279e0:	2900      	cmp	r1, #0
900279e2:	d077      	beq.n	90027ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900279e4:	f103 0e01 	add.w	lr, r3, #1
900279e8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
900279ec:	f01e 0f01 	tst.w	lr, #1
900279f0:	f817 c00c 	ldrb.w	ip, [r7, ip]
900279f4:	bf0c      	ite	eq
900279f6:	f00c 0c0f 	andeq.w	ip, ip, #15
900279fa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
900279fe:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027a02:	fa5f f58c 	uxtb.w	r5, ip
90027a06:	9512      	str	r5, [sp, #72]	@ 0x48
90027a08:	b308      	cbz	r0, 90027a4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027a0a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027a0c:	442b      	add	r3, r5
90027a0e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027a12:	07dd      	lsls	r5, r3, #31
90027a14:	f103 0301 	add.w	r3, r3, #1
90027a18:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027a1c:	bf54      	ite	pl
90027a1e:	f00c 0c0f 	andpl.w	ip, ip, #15
90027a22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027a26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027a2a:	fa5f f58c 	uxtb.w	r5, ip
90027a2e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027a32:	950c      	str	r5, [sp, #48]	@ 0x30
90027a34:	07dd      	lsls	r5, r3, #31
90027a36:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027a3a:	bf54      	ite	pl
90027a3c:	f00c 0c0f 	andpl.w	ip, ip, #15
90027a40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027a44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027a48:	fa5f f38c 	uxtb.w	r3, ip
90027a4c:	9313      	str	r3, [sp, #76]	@ 0x4c
90027a4e:	b289      	uxth	r1, r1
90027a50:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027a52:	b280      	uxth	r0, r0
90027a54:	fb01 f300 	mul.w	r3, r1, r0
90027a58:	0109      	lsls	r1, r1, #4
90027a5a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027a5e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90027a62:	1ac9      	subs	r1, r1, r3
90027a64:	b280      	uxth	r0, r0
90027a66:	b289      	uxth	r1, r1
90027a68:	ebac 0c00 	sub.w	ip, ip, r0
90027a6c:	4369      	muls	r1, r5
90027a6e:	fa1f fc8c 	uxth.w	ip, ip
90027a72:	fb02 120c 	mla	r2, r2, ip, r1
90027a76:	990c      	ldr	r1, [sp, #48]	@ 0x30
90027a78:	fb00 2001 	mla	r0, r0, r1, r2
90027a7c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90027a7e:	fb03 0302 	mla	r3, r3, r2, r0
90027a82:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027a86:	b1d3      	cbz	r3, 90027abe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027a88:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027a8a:	4353      	muls	r3, r2
90027a8c:	1c5a      	adds	r2, r3, #1
90027a8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027a92:	4a0f      	ldr	r2, [pc, #60]	@ (90027ad0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027a94:	121b      	asrs	r3, r3, #8
90027a96:	6812      	ldr	r2, [r2, #0]
90027a98:	2bff      	cmp	r3, #255	@ 0xff
90027a9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027a9e:	d12d      	bne.n	90027afc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027aa0:	0953      	lsrs	r3, r2, #5
90027aa2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027aa6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027aaa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027aae:	f02c 0c07 	bic.w	ip, ip, #7
90027ab2:	ea43 0c0c 	orr.w	ip, r3, ip
90027ab6:	ea4c 0202 	orr.w	r2, ip, r2
90027aba:	f8a8 2000 	strh.w	r2, [r8]
90027abe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027ac0:	f108 0802 	add.w	r8, r8, #2
90027ac4:	f10b 3bff 	add.w	fp, fp, #4294967295
90027ac8:	441c      	add	r4, r3
90027aca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027acc:	441e      	add	r6, r3
90027ace:	e6b9      	b.n	90027844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90027ad0:	24021854 	.word	0x24021854
90027ad4:	2800      	cmp	r0, #0
90027ad6:	d0ba      	beq.n	90027a4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027ad8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027ada:	442b      	add	r3, r5
90027adc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027ae0:	07db      	lsls	r3, r3, #31
90027ae2:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ae6:	bf54      	ite	pl
90027ae8:	f00c 0c0f 	andpl.w	ip, ip, #15
90027aec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027af0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027af4:	fa5f f38c 	uxtb.w	r3, ip
90027af8:	930c      	str	r3, [sp, #48]	@ 0x30
90027afa:	e7a8      	b.n	90027a4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027afc:	f8b8 e000 	ldrh.w	lr, [r8]
90027b00:	fa1f fa83 	uxth.w	sl, r3
90027b04:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027b08:	43db      	mvns	r3, r3
90027b0a:	ea4f 202e 	mov.w	r0, lr, asr #8
90027b0e:	fb11 f10a 	smulbb	r1, r1, sl
90027b12:	b2db      	uxtb	r3, r3
90027b14:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027b18:	b2d2      	uxtb	r2, r2
90027b1a:	fa5f fc8c 	uxtb.w	ip, ip
90027b1e:	fb00 1003 	mla	r0, r0, r3, r1
90027b22:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027b26:	fb12 f20a 	smulbb	r2, r2, sl
90027b2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027b2e:	b280      	uxth	r0, r0
90027b30:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027b34:	fb1c fc0a 	smulbb	ip, ip, sl
90027b38:	fa5f fe8e 	uxtb.w	lr, lr
90027b3c:	fb0e 2203 	mla	r2, lr, r3, r2
90027b40:	fb01 cc03 	mla	ip, r1, r3, ip
90027b44:	1c43      	adds	r3, r0, #1
90027b46:	b292      	uxth	r2, r2
90027b48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027b4c:	1c51      	adds	r1, r2, #1
90027b4e:	fa1f fc8c 	uxth.w	ip, ip
90027b52:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90027b56:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027b5a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90027b5e:	4308      	orrs	r0, r1
90027b60:	f10c 0101 	add.w	r1, ip, #1
90027b64:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027b68:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027b6c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027b70:	ea40 000c 	orr.w	r0, r0, ip
90027b74:	f8a8 0000 	strh.w	r0, [r8]
90027b78:	e7a1      	b.n	90027abe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027b7a:	b017      	add	sp, #92	@ 0x5c
90027b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90027b80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027b84:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027b88:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027b8c:	2d00      	cmp	r5, #0
90027b8e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90027b92:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027b96:	fb05 0e03 	mla	lr, r5, r3, r0
90027b9a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90027b9e:	f2c0 80b0 	blt.w	90027d02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027ba2:	45a9      	cmp	r9, r5
90027ba4:	f340 80ad 	ble.w	90027d02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027ba8:	2800      	cmp	r0, #0
90027baa:	f2c0 80a8 	blt.w	90027cfe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027bae:	4580      	cmp	r8, r0
90027bb0:	f340 80a5 	ble.w	90027cfe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027bb4:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027bb8:	f01e 0f01 	tst.w	lr, #1
90027bbc:	5d16      	ldrb	r6, [r2, r4]
90027bbe:	bf0c      	ite	eq
90027bc0:	f006 060f 	andeq.w	r6, r6, #15
90027bc4:	1136      	asrne	r6, r6, #4
90027bc6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027bca:	b2f6      	uxtb	r6, r6
90027bcc:	1c44      	adds	r4, r0, #1
90027bce:	f100 809b 	bmi.w	90027d08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027bd2:	45a0      	cmp	r8, r4
90027bd4:	f340 8098 	ble.w	90027d08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027bd8:	2f00      	cmp	r7, #0
90027bda:	f000 8097 	beq.w	90027d0c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90027bde:	f10e 0a01 	add.w	sl, lr, #1
90027be2:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027be6:	f01a 0f01 	tst.w	sl, #1
90027bea:	5d14      	ldrb	r4, [r2, r4]
90027bec:	bf0c      	ite	eq
90027bee:	f004 040f 	andeq.w	r4, r4, #15
90027bf2:	1124      	asrne	r4, r4, #4
90027bf4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027bf8:	b2e4      	uxtb	r4, r4
90027bfa:	3501      	adds	r5, #1
90027bfc:	f100 808a 	bmi.w	90027d14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027c00:	45a9      	cmp	r9, r5
90027c02:	f340 8087 	ble.w	90027d14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027c06:	f1bc 0f00 	cmp.w	ip, #0
90027c0a:	f000 8086 	beq.w	90027d1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90027c0e:	2800      	cmp	r0, #0
90027c10:	db7e      	blt.n	90027d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027c12:	4580      	cmp	r8, r0
90027c14:	dd7c      	ble.n	90027d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027c16:	eb03 090e 	add.w	r9, r3, lr
90027c1a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027c1e:	f019 0f01 	tst.w	r9, #1
90027c22:	5d55      	ldrb	r5, [r2, r5]
90027c24:	bf0c      	ite	eq
90027c26:	f005 050f 	andeq.w	r5, r5, #15
90027c2a:	112d      	asrne	r5, r5, #4
90027c2c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027c30:	b2ed      	uxtb	r5, r5
90027c32:	3001      	adds	r0, #1
90027c34:	d474      	bmi.n	90027d20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027c36:	4580      	cmp	r8, r0
90027c38:	dd72      	ble.n	90027d20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027c3a:	2f00      	cmp	r7, #0
90027c3c:	d072      	beq.n	90027d24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90027c3e:	3301      	adds	r3, #1
90027c40:	449e      	add	lr, r3
90027c42:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027c46:	f01e 0f01 	tst.w	lr, #1
90027c4a:	5cd0      	ldrb	r0, [r2, r3]
90027c4c:	bf0c      	ite	eq
90027c4e:	f000 000f 	andeq.w	r0, r0, #15
90027c52:	1100      	asrne	r0, r0, #4
90027c54:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027c58:	b2c3      	uxtb	r3, r0
90027c5a:	b2ba      	uxth	r2, r7
90027c5c:	fa1f fc8c 	uxth.w	ip, ip
90027c60:	fb02 f00c 	mul.w	r0, r2, ip
90027c64:	0112      	lsls	r2, r2, #4
90027c66:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027c6a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90027c6e:	1a12      	subs	r2, r2, r0
90027c70:	fa1f fc8c 	uxth.w	ip, ip
90027c74:	b292      	uxth	r2, r2
90027c76:	eba7 070c 	sub.w	r7, r7, ip
90027c7a:	4362      	muls	r2, r4
90027c7c:	b2bf      	uxth	r7, r7
90027c7e:	fb06 2207 	mla	r2, r6, r7, r2
90027c82:	fb0c 2505 	mla	r5, ip, r5, r2
90027c86:	fb00 5303 	mla	r3, r0, r3, r5
90027c8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027c8e:	b3a3      	cbz	r3, 90027cfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90027c90:	4a25      	ldr	r2, [pc, #148]	@ (90027d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90027c92:	880e      	ldrh	r6, [r1, #0]
90027c94:	6815      	ldr	r5, [r2, #0]
90027c96:	b29a      	uxth	r2, r3
90027c98:	1234      	asrs	r4, r6, #8
90027c9a:	43db      	mvns	r3, r3
90027c9c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90027ca0:	f3c5 2707 	ubfx	r7, r5, #8, #8
90027ca4:	b2db      	uxtb	r3, r3
90027ca6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027caa:	fb10 f002 	smulbb	r0, r0, r2
90027cae:	b2ed      	uxtb	r5, r5
90027cb0:	fb17 f702 	smulbb	r7, r7, r2
90027cb4:	fb04 0403 	mla	r4, r4, r3, r0
90027cb8:	10f0      	asrs	r0, r6, #3
90027cba:	fb15 f202 	smulbb	r2, r5, r2
90027cbe:	00f6      	lsls	r6, r6, #3
90027cc0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027cc4:	b2a4      	uxth	r4, r4
90027cc6:	b2f6      	uxtb	r6, r6
90027cc8:	fb00 7003 	mla	r0, r0, r3, r7
90027ccc:	fb06 2303 	mla	r3, r6, r3, r2
90027cd0:	b280      	uxth	r0, r0
90027cd2:	b29a      	uxth	r2, r3
90027cd4:	1c63      	adds	r3, r4, #1
90027cd6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027cda:	1c53      	adds	r3, r2, #1
90027cdc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027ce0:	1c42      	adds	r2, r0, #1
90027ce2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027ce6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027cea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027cee:	0940      	lsrs	r0, r0, #5
90027cf0:	4323      	orrs	r3, r4
90027cf2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027cf6:	4303      	orrs	r3, r0
90027cf8:	800b      	strh	r3, [r1, #0]
90027cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027cfe:	2600      	movs	r6, #0
90027d00:	e764      	b.n	90027bcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90027d02:	2400      	movs	r4, #0
90027d04:	4626      	mov	r6, r4
90027d06:	e778      	b.n	90027bfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027d08:	2400      	movs	r4, #0
90027d0a:	e776      	b.n	90027bfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027d0c:	463c      	mov	r4, r7
90027d0e:	e774      	b.n	90027bfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027d10:	2500      	movs	r5, #0
90027d12:	e78e      	b.n	90027c32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027d14:	2300      	movs	r3, #0
90027d16:	461d      	mov	r5, r3
90027d18:	e79f      	b.n	90027c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027d1a:	4663      	mov	r3, ip
90027d1c:	4665      	mov	r5, ip
90027d1e:	e79c      	b.n	90027c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027d20:	2300      	movs	r3, #0
90027d22:	e79a      	b.n	90027c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027d24:	463b      	mov	r3, r7
90027d26:	e798      	b.n	90027c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027d28:	24021854 	.word	0x24021854

90027d2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027d30:	b093      	sub	sp, #76	@ 0x4c
90027d32:	461d      	mov	r5, r3
90027d34:	920c      	str	r2, [sp, #48]	@ 0x30
90027d36:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90027d38:	9011      	str	r0, [sp, #68]	@ 0x44
90027d3a:	9107      	str	r1, [sp, #28]
90027d3c:	6850      	ldr	r0, [r2, #4]
90027d3e:	6812      	ldr	r2, [r2, #0]
90027d40:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90027d44:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027d48:	fb00 1303 	mla	r3, r0, r3, r1
90027d4c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027d50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027d52:	689b      	ldr	r3, [r3, #8]
90027d54:	3301      	adds	r3, #1
90027d56:	f023 0301 	bic.w	r3, r3, #1
90027d5a:	9306      	str	r3, [sp, #24]
90027d5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027d5e:	681f      	ldr	r7, [r3, #0]
90027d60:	9b07      	ldr	r3, [sp, #28]
90027d62:	2b00      	cmp	r3, #0
90027d64:	dc03      	bgt.n	90027d6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90027d66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027d68:	2b00      	cmp	r3, #0
90027d6a:	f340 8267 	ble.w	9002823c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027d6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027d70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027d74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027d78:	1e48      	subs	r0, r1, #1
90027d7a:	f102 3cff 	add.w	ip, r2, #4294967295
90027d7e:	2d00      	cmp	r5, #0
90027d80:	f340 80b7 	ble.w	90027ef2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90027d84:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027d88:	ea4f 4326 	mov.w	r3, r6, asr #16
90027d8c:	d406      	bmi.n	90027d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027d8e:	4586      	cmp	lr, r0
90027d90:	da04      	bge.n	90027d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027d92:	2b00      	cmp	r3, #0
90027d94:	db02      	blt.n	90027d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027d96:	4563      	cmp	r3, ip
90027d98:	f2c0 80ac 	blt.w	90027ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90027d9c:	f11e 0e01 	adds.w	lr, lr, #1
90027da0:	f100 809f 	bmi.w	90027ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027da4:	4571      	cmp	r1, lr
90027da6:	f2c0 809c 	blt.w	90027ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027daa:	3301      	adds	r3, #1
90027dac:	f100 8099 	bmi.w	90027ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027db0:	429a      	cmp	r2, r3
90027db2:	f2c0 8096 	blt.w	90027ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027db6:	46c8      	mov	r8, r9
90027db8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90027dbc:	9509      	str	r5, [sp, #36]	@ 0x24
90027dbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027dc0:	2b00      	cmp	r3, #0
90027dc2:	f340 80b5 	ble.w	90027f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90027dc6:	f3c4 3303 	ubfx	r3, r4, #12, #4
90027dca:	1430      	asrs	r0, r6, #16
90027dcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027dd0:	9308      	str	r3, [sp, #32]
90027dd2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027dd4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027dd8:	1423      	asrs	r3, r4, #16
90027dda:	f100 813f 	bmi.w	9002805c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027dde:	f10c 3bff 	add.w	fp, ip, #4294967295
90027de2:	455b      	cmp	r3, fp
90027de4:	f280 813a 	bge.w	9002805c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027de8:	2800      	cmp	r0, #0
90027dea:	f2c0 8137 	blt.w	9002805c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027dee:	f10e 3bff 	add.w	fp, lr, #4294967295
90027df2:	4558      	cmp	r0, fp
90027df4:	f280 8132 	bge.w	9002805c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027df8:	9a06      	ldr	r2, [sp, #24]
90027dfa:	fb00 3302 	mla	r3, r0, r2, r3
90027dfe:	0858      	lsrs	r0, r3, #1
90027e00:	07da      	lsls	r2, r3, #31
90027e02:	9a08      	ldr	r2, [sp, #32]
90027e04:	f817 c000 	ldrb.w	ip, [r7, r0]
90027e08:	bf54      	ite	pl
90027e0a:	f00c 0c0f 	andpl.w	ip, ip, #15
90027e0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027e12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027e16:	fa5f fc8c 	uxtb.w	ip, ip
90027e1a:	2a00      	cmp	r2, #0
90027e1c:	f000 80cc 	beq.w	90027fb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90027e20:	1c58      	adds	r0, r3, #1
90027e22:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027e26:	07c0      	lsls	r0, r0, #31
90027e28:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027e2c:	bf54      	ite	pl
90027e2e:	f00e 0e0f 	andpl.w	lr, lr, #15
90027e32:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027e36:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027e3a:	fa5f fe8e 	uxtb.w	lr, lr
90027e3e:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90027e42:	b1b9      	cbz	r1, 90027e74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027e44:	4453      	add	r3, sl
90027e46:	0858      	lsrs	r0, r3, #1
90027e48:	07da      	lsls	r2, r3, #31
90027e4a:	5c38      	ldrb	r0, [r7, r0]
90027e4c:	bf54      	ite	pl
90027e4e:	f000 000f 	andpl.w	r0, r0, #15
90027e52:	1100      	asrmi	r0, r0, #4
90027e54:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027e58:	b2c0      	uxtb	r0, r0
90027e5a:	900a      	str	r0, [sp, #40]	@ 0x28
90027e5c:	1c58      	adds	r0, r3, #1
90027e5e:	0843      	lsrs	r3, r0, #1
90027e60:	07c2      	lsls	r2, r0, #31
90027e62:	5cfb      	ldrb	r3, [r7, r3]
90027e64:	bf54      	ite	pl
90027e66:	f003 030f 	andpl.w	r3, r3, #15
90027e6a:	111b      	asrmi	r3, r3, #4
90027e6c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027e70:	b2db      	uxtb	r3, r3
90027e72:	930e      	str	r3, [sp, #56]	@ 0x38
90027e74:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90027e78:	b289      	uxth	r1, r1
90027e7a:	fb02 f301 	mul.w	r3, r2, r1
90027e7e:	0112      	lsls	r2, r2, #4
90027e80:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027e84:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90027e88:	1ad2      	subs	r2, r2, r3
90027e8a:	b289      	uxth	r1, r1
90027e8c:	b292      	uxth	r2, r2
90027e8e:	1a40      	subs	r0, r0, r1
90027e90:	fa1f fe80 	uxth.w	lr, r0
90027e94:	980d      	ldr	r0, [sp, #52]	@ 0x34
90027e96:	4342      	muls	r2, r0
90027e98:	fb0c 2c0e 	mla	ip, ip, lr, r2
90027e9c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90027e9e:	fb01 c102 	mla	r1, r1, r2, ip
90027ea2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027ea4:	fb03 1302 	mla	r3, r3, r2, r1
90027ea8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027eac:	2bff      	cmp	r3, #255	@ 0xff
90027eae:	f040 8094 	bne.w	90027fda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90027eb2:	4bbf      	ldr	r3, [pc, #764]	@ (900281b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027eb4:	681a      	ldr	r2, [r3, #0]
90027eb6:	4bbf      	ldr	r3, [pc, #764]	@ (900281b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027eb8:	0951      	lsrs	r1, r2, #5
90027eba:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90027ebe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027ec2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027ec6:	430b      	orrs	r3, r1
90027ec8:	4313      	orrs	r3, r2
90027eca:	f8a8 3000 	strh.w	r3, [r8]
90027ece:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027ed0:	f108 0802 	add.w	r8, r8, #2
90027ed4:	441c      	add	r4, r3
90027ed6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027ed8:	441e      	add	r6, r3
90027eda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027edc:	3b01      	subs	r3, #1
90027ede:	9309      	str	r3, [sp, #36]	@ 0x24
90027ee0:	e76d      	b.n	90027dbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027ee2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027ee4:	3d01      	subs	r5, #1
90027ee6:	f109 0902 	add.w	r9, r9, #2
90027eea:	441c      	add	r4, r3
90027eec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027eee:	441e      	add	r6, r3
90027ef0:	e745      	b.n	90027d7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90027ef2:	d021      	beq.n	90027f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90027ef4:	1e6b      	subs	r3, r5, #1
90027ef6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027ef8:	fb00 4003 	mla	r0, r0, r3, r4
90027efc:	1400      	asrs	r0, r0, #16
90027efe:	f53f af5a 	bmi.w	90027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027f02:	3901      	subs	r1, #1
90027f04:	4288      	cmp	r0, r1
90027f06:	f6bf af56 	bge.w	90027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027f0a:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027f0c:	fb01 6303 	mla	r3, r1, r3, r6
90027f10:	141b      	asrs	r3, r3, #16
90027f12:	f53f af50 	bmi.w	90027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027f16:	3a01      	subs	r2, #1
90027f18:	4293      	cmp	r3, r2
90027f1a:	f6bf af4c 	bge.w	90027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027f1e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90027f22:	46a8      	mov	r8, r5
90027f24:	46ce      	mov	lr, r9
90027f26:	9308      	str	r3, [sp, #32]
90027f28:	f1b8 0f00 	cmp.w	r8, #0
90027f2c:	f300 80b6 	bgt.w	9002809c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90027f30:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027f34:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027f38:	9b07      	ldr	r3, [sp, #28]
90027f3a:	2b00      	cmp	r3, #0
90027f3c:	f340 817e 	ble.w	9002823c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027f40:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027f44:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027f46:	ee30 0a04 	vadd.f32	s0, s0, s8
90027f4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027f4e:	eef0 6a62 	vmov.f32	s13, s5
90027f52:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027f56:	ee31 1a05 	vadd.f32	s2, s2, s10
90027f5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027f5e:	ee16 4a90 	vmov	r4, s13
90027f62:	eef0 6a43 	vmov.f32	s13, s6
90027f66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027f6a:	ee16 6a90 	vmov	r6, s13
90027f6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027f72:	ee61 7a27 	vmul.f32	s15, s2, s15
90027f76:	ee77 2a62 	vsub.f32	s5, s14, s5
90027f7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027f7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027f82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027f86:	ee12 2a90 	vmov	r2, s5
90027f8a:	eef0 2a47 	vmov.f32	s5, s14
90027f8e:	fb92 f3f3 	sdiv	r3, r2, r3
90027f92:	ee13 2a10 	vmov	r2, s6
90027f96:	931f      	str	r3, [sp, #124]	@ 0x7c
90027f98:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027f9a:	eeb0 3a67 	vmov.f32	s6, s15
90027f9e:	fb92 f3f3 	sdiv	r3, r2, r3
90027fa2:	9320      	str	r3, [sp, #128]	@ 0x80
90027fa4:	9b07      	ldr	r3, [sp, #28]
90027fa6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027fa8:	3b01      	subs	r3, #1
90027faa:	9307      	str	r3, [sp, #28]
90027fac:	bf08      	it	eq
90027fae:	4615      	moveq	r5, r2
90027fb0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027fb2:	bf18      	it	ne
90027fb4:	461d      	movne	r5, r3
90027fb6:	e6d3      	b.n	90027d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90027fb8:	2900      	cmp	r1, #0
90027fba:	f43f af5b 	beq.w	90027e74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027fbe:	eb0a 0003 	add.w	r0, sl, r3
90027fc2:	0843      	lsrs	r3, r0, #1
90027fc4:	07c0      	lsls	r0, r0, #31
90027fc6:	5cfb      	ldrb	r3, [r7, r3]
90027fc8:	bf54      	ite	pl
90027fca:	f003 030f 	andpl.w	r3, r3, #15
90027fce:	111b      	asrmi	r3, r3, #4
90027fd0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027fd4:	b2db      	uxtb	r3, r3
90027fd6:	930a      	str	r3, [sp, #40]	@ 0x28
90027fd8:	e74c      	b.n	90027e74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027fda:	2b00      	cmp	r3, #0
90027fdc:	f43f af77 	beq.w	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027fe0:	4a73      	ldr	r2, [pc, #460]	@ (900281b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027fe2:	fa1f fe83 	uxth.w	lr, r3
90027fe6:	f8b8 c000 	ldrh.w	ip, [r8]
90027fea:	43db      	mvns	r3, r3
90027fec:	6810      	ldr	r0, [r2, #0]
90027fee:	ea4f 212c 	mov.w	r1, ip, asr #8
90027ff2:	f3c0 4207 	ubfx	r2, r0, #16, #8
90027ff6:	b2db      	uxtb	r3, r3
90027ff8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027ffc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028000:	fb12 f20e 	smulbb	r2, r2, lr
90028004:	b2c0      	uxtb	r0, r0
90028006:	fb1b fb0e 	smulbb	fp, fp, lr
9002800a:	fb01 2103 	mla	r1, r1, r3, r2
9002800e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028012:	fb10 fe0e 	smulbb	lr, r0, lr
90028016:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002801a:	b289      	uxth	r1, r1
9002801c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028020:	fa5f fc8c 	uxtb.w	ip, ip
90028024:	fb02 b203 	mla	r2, r2, r3, fp
90028028:	1c48      	adds	r0, r1, #1
9002802a:	fb0c e303 	mla	r3, ip, r3, lr
9002802e:	b292      	uxth	r2, r2
90028030:	b29b      	uxth	r3, r3
90028032:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90028036:	f102 0b01 	add.w	fp, r2, #1
9002803a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002803e:	1c59      	adds	r1, r3, #1
90028040:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028044:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90028048:	0952      	lsrs	r2, r2, #5
9002804a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002804e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028052:	4301      	orrs	r1, r0
90028054:	4311      	orrs	r1, r2
90028056:	f8a8 1000 	strh.w	r1, [r8]
9002805a:	e738      	b.n	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002805c:	f113 0b01 	adds.w	fp, r3, #1
90028060:	f53f af35 	bmi.w	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028064:	45dc      	cmp	ip, fp
90028066:	f6ff af32 	blt.w	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002806a:	f110 0b01 	adds.w	fp, r0, #1
9002806e:	f53f af2e 	bmi.w	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028072:	45de      	cmp	lr, fp
90028074:	f6ff af2b 	blt.w	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028078:	9302      	str	r3, [sp, #8]
9002807a:	fa0f f38e 	sxth.w	r3, lr
9002807e:	9a08      	ldr	r2, [sp, #32]
90028080:	9301      	str	r3, [sp, #4]
90028082:	fa0f f38c 	sxth.w	r3, ip
90028086:	9105      	str	r1, [sp, #20]
90028088:	4641      	mov	r1, r8
9002808a:	9300      	str	r3, [sp, #0]
9002808c:	4653      	mov	r3, sl
9002808e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028092:	463a      	mov	r2, r7
90028094:	9811      	ldr	r0, [sp, #68]	@ 0x44
90028096:	f7ff fd73 	bl	90027b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002809a:	e718      	b.n	90027ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002809c:	1422      	asrs	r2, r4, #16
9002809e:	9906      	ldr	r1, [sp, #24]
900280a0:	1433      	asrs	r3, r6, #16
900280a2:	f3c4 3003 	ubfx	r0, r4, #12, #4
900280a6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900280aa:	fb01 2303 	mla	r3, r1, r3, r2
900280ae:	085a      	lsrs	r2, r3, #1
900280b0:	07d9      	lsls	r1, r3, #31
900280b2:	5cba      	ldrb	r2, [r7, r2]
900280b4:	bf54      	ite	pl
900280b6:	f002 020f 	andpl.w	r2, r2, #15
900280ba:	1112      	asrmi	r2, r2, #4
900280bc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900280c0:	b2d2      	uxtb	r2, r2
900280c2:	2800      	cmp	r0, #0
900280c4:	d063      	beq.n	9002818e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900280c6:	f103 0a01 	add.w	sl, r3, #1
900280ca:	ea4f 015a 	mov.w	r1, sl, lsr #1
900280ce:	f01a 0f01 	tst.w	sl, #1
900280d2:	5c79      	ldrb	r1, [r7, r1]
900280d4:	bf0c      	ite	eq
900280d6:	f001 010f 	andeq.w	r1, r1, #15
900280da:	1109      	asrne	r1, r1, #4
900280dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900280e0:	b2c9      	uxtb	r1, r1
900280e2:	910f      	str	r1, [sp, #60]	@ 0x3c
900280e4:	f1bc 0f00 	cmp.w	ip, #0
900280e8:	d01a      	beq.n	90028120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900280ea:	9908      	ldr	r1, [sp, #32]
900280ec:	440b      	add	r3, r1
900280ee:	0859      	lsrs	r1, r3, #1
900280f0:	f013 0f01 	tst.w	r3, #1
900280f4:	f103 0301 	add.w	r3, r3, #1
900280f8:	5c79      	ldrb	r1, [r7, r1]
900280fa:	bf0c      	ite	eq
900280fc:	f001 010f 	andeq.w	r1, r1, #15
90028100:	1109      	asrne	r1, r1, #4
90028102:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028106:	b2c9      	uxtb	r1, r1
90028108:	910b      	str	r1, [sp, #44]	@ 0x2c
9002810a:	0859      	lsrs	r1, r3, #1
9002810c:	07db      	lsls	r3, r3, #31
9002810e:	5c79      	ldrb	r1, [r7, r1]
90028110:	bf54      	ite	pl
90028112:	f001 010f 	andpl.w	r1, r1, #15
90028116:	1109      	asrmi	r1, r1, #4
90028118:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002811c:	b2c9      	uxtb	r1, r1
9002811e:	9110      	str	r1, [sp, #64]	@ 0x40
90028120:	b280      	uxth	r0, r0
90028122:	fa1f fc8c 	uxth.w	ip, ip
90028126:	fb00 f30c 	mul.w	r3, r0, ip
9002812a:	0100      	lsls	r0, r0, #4
9002812c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90028130:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90028134:	1ac0      	subs	r0, r0, r3
90028136:	fa1f fc8c 	uxth.w	ip, ip
9002813a:	b280      	uxth	r0, r0
9002813c:	eba1 010c 	sub.w	r1, r1, ip
90028140:	fa1f fa81 	uxth.w	sl, r1
90028144:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028146:	4348      	muls	r0, r1
90028148:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002814a:	fb02 020a 	mla	r2, r2, sl, r0
9002814e:	fb0c 2c01 	mla	ip, ip, r1, r2
90028152:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028154:	fb03 c302 	mla	r3, r3, r2, ip
90028158:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002815c:	2bff      	cmp	r3, #255	@ 0xff
9002815e:	d12b      	bne.n	900281b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028160:	4b13      	ldr	r3, [pc, #76]	@ (900281b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028162:	681a      	ldr	r2, [r3, #0]
90028164:	4b13      	ldr	r3, [pc, #76]	@ (900281b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028166:	0951      	lsrs	r1, r2, #5
90028168:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002816c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028170:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028174:	430b      	orrs	r3, r1
90028176:	4313      	orrs	r3, r2
90028178:	f8ae 3000 	strh.w	r3, [lr]
9002817c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002817e:	f10e 0e02 	add.w	lr, lr, #2
90028182:	f108 38ff 	add.w	r8, r8, #4294967295
90028186:	441c      	add	r4, r3
90028188:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002818a:	441e      	add	r6, r3
9002818c:	e6cc      	b.n	90027f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002818e:	f1bc 0f00 	cmp.w	ip, #0
90028192:	d0c5      	beq.n	90028120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028194:	9908      	ldr	r1, [sp, #32]
90028196:	440b      	add	r3, r1
90028198:	0859      	lsrs	r1, r3, #1
9002819a:	07db      	lsls	r3, r3, #31
9002819c:	5c79      	ldrb	r1, [r7, r1]
9002819e:	bf54      	ite	pl
900281a0:	f001 010f 	andpl.w	r1, r1, #15
900281a4:	1109      	asrmi	r1, r1, #4
900281a6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900281aa:	b2c9      	uxtb	r1, r1
900281ac:	910b      	str	r1, [sp, #44]	@ 0x2c
900281ae:	e7b7      	b.n	90028120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900281b0:	24021854 	.word	0x24021854
900281b4:	fffff800 	.word	0xfffff800
900281b8:	2b00      	cmp	r3, #0
900281ba:	d0df      	beq.n	9002817c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900281bc:	4a21      	ldr	r2, [pc, #132]	@ (90028244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900281be:	fa1f fa83 	uxth.w	sl, r3
900281c2:	f8be c000 	ldrh.w	ip, [lr]
900281c6:	43db      	mvns	r3, r3
900281c8:	6810      	ldr	r0, [r2, #0]
900281ca:	ea4f 212c 	mov.w	r1, ip, asr #8
900281ce:	f3c0 4207 	ubfx	r2, r0, #16, #8
900281d2:	b2db      	uxtb	r3, r3
900281d4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900281d8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900281dc:	fb12 f20a 	smulbb	r2, r2, sl
900281e0:	b2c0      	uxtb	r0, r0
900281e2:	fb1b fb0a 	smulbb	fp, fp, sl
900281e6:	fb01 2103 	mla	r1, r1, r3, r2
900281ea:	ea4f 02ec 	mov.w	r2, ip, asr #3
900281ee:	fb10 f00a 	smulbb	r0, r0, sl
900281f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900281f6:	b289      	uxth	r1, r1
900281f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900281fc:	fa5f fc8c 	uxtb.w	ip, ip
90028200:	fb02 b203 	mla	r2, r2, r3, fp
90028204:	fb0c 0003 	mla	r0, ip, r3, r0
90028208:	1c4b      	adds	r3, r1, #1
9002820a:	b292      	uxth	r2, r2
9002820c:	b280      	uxth	r0, r0
9002820e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028212:	f100 0b01 	add.w	fp, r0, #1
90028216:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002821a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002821e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90028222:	ea4b 0101 	orr.w	r1, fp, r1
90028226:	f102 0b01 	add.w	fp, r2, #1
9002822a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002822e:	0952      	lsrs	r2, r2, #5
90028230:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028234:	4311      	orrs	r1, r2
90028236:	f8ae 1000 	strh.w	r1, [lr]
9002823a:	e79f      	b.n	9002817c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002823c:	b013      	add	sp, #76	@ 0x4c
9002823e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028242:	bf00      	nop
90028244:	24021854 	.word	0x24021854

90028248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90028248:	b570      	push	{r4, r5, r6, lr}
9002824a:	1208      	asrs	r0, r1, #8
9002824c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028250:	b29e      	uxth	r6, r3
90028252:	1213      	asrs	r3, r2, #8
90028254:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028258:	10cc      	asrs	r4, r1, #3
9002825a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002825e:	00c9      	lsls	r1, r1, #3
90028260:	fb10 f006 	smulbb	r0, r0, r6
90028264:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90028268:	fb13 f305 	smulbb	r3, r3, r5
9002826c:	fb14 f406 	smulbb	r4, r4, r6
90028270:	4418      	add	r0, r3
90028272:	10d3      	asrs	r3, r2, #3
90028274:	00d2      	lsls	r2, r2, #3
90028276:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002827a:	b280      	uxth	r0, r0
9002827c:	b2d2      	uxtb	r2, r2
9002827e:	fb13 f305 	smulbb	r3, r3, r5
90028282:	fb12 f205 	smulbb	r2, r2, r5
90028286:	441c      	add	r4, r3
90028288:	b2cb      	uxtb	r3, r1
9002828a:	fb13 f306 	smulbb	r3, r3, r6
9002828e:	b2a4      	uxth	r4, r4
90028290:	4413      	add	r3, r2
90028292:	1c42      	adds	r2, r0, #1
90028294:	b29b      	uxth	r3, r3
90028296:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002829a:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002829e:	1c58      	adds	r0, r3, #1
900282a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900282a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900282a8:	4310      	orrs	r0, r2
900282aa:	1c62      	adds	r2, r4, #1
900282ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900282b0:	0964      	lsrs	r4, r4, #5
900282b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900282b6:	4320      	orrs	r0, r4
900282b8:	bd70      	pop	{r4, r5, r6, pc}
	...

900282bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900282bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900282c0:	b08f      	sub	sp, #60	@ 0x3c
900282c2:	461c      	mov	r4, r3
900282c4:	460d      	mov	r5, r1
900282c6:	4616      	mov	r6, r2
900282c8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
900282cc:	9004      	str	r0, [sp, #16]
900282ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900282d0:	2f00      	cmp	r7, #0
900282d2:	f000 80f6 	beq.w	900284c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
900282d6:	6820      	ldr	r0, [r4, #0]
900282d8:	aa0a      	add	r2, sp, #40	@ 0x28
900282da:	6861      	ldr	r1, [r4, #4]
900282dc:	f04f 0802 	mov.w	r8, #2
900282e0:	3604      	adds	r6, #4
900282e2:	c203      	stmia	r2!, {r0, r1}
900282e4:	6818      	ldr	r0, [r3, #0]
900282e6:	aa0c      	add	r2, sp, #48	@ 0x30
900282e8:	6859      	ldr	r1, [r3, #4]
900282ea:	c203      	stmia	r2!, {r0, r1}
900282ec:	a80a      	add	r0, sp, #40	@ 0x28
900282ee:	f7ee fd9b 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900282f2:	4621      	mov	r1, r4
900282f4:	a80c      	add	r0, sp, #48	@ 0x30
900282f6:	f7ee fddb 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900282fa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900282fe:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90028302:	f002 0301 	and.w	r3, r2, #1
90028306:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002830a:	9306      	str	r3, [sp, #24]
9002830c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028310:	f003 0101 	and.w	r1, r3, #1
90028314:	9105      	str	r1, [sp, #20]
90028316:	9805      	ldr	r0, [sp, #20]
90028318:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002831c:	4403      	add	r3, r0
9002831e:	fb01 2303 	mla	r3, r1, r3, r2
90028322:	fb93 f3f8 	sdiv	r3, r3, r8
90028326:	441d      	add	r5, r3
90028328:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002832c:	441a      	add	r2, r3
9002832e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90028332:	4419      	add	r1, r3
90028334:	4b64      	ldr	r3, [pc, #400]	@ (900284c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028336:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002833a:	6818      	ldr	r0, [r3, #0]
9002833c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028340:	6803      	ldr	r3, [r0, #0]
90028342:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028344:	4798      	blx	r3
90028346:	4a61      	ldr	r2, [pc, #388]	@ (900284cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028348:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002834c:	2fff      	cmp	r7, #255	@ 0xff
9002834e:	8813      	ldrh	r3, [r2, #0]
90028350:	4611      	mov	r1, r2
90028352:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028356:	fb03 fb0b 	mul.w	fp, r3, fp
9002835a:	fb03 a404 	mla	r4, r3, r4, sl
9002835e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028362:	d06b      	beq.n	9002843c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028364:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90028368:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002836c:	9303      	str	r3, [sp, #12]
9002836e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028372:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028376:	9b07      	ldr	r3, [sp, #28]
90028378:	42a3      	cmp	r3, r4
9002837a:	f240 809d 	bls.w	900284b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002837e:	9b06      	ldr	r3, [sp, #24]
90028380:	2b00      	cmp	r3, #0
90028382:	d039      	beq.n	900283f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028384:	782b      	ldrb	r3, [r5, #0]
90028386:	f105 0801 	add.w	r8, r5, #1
9002838a:	f109 3bff 	add.w	fp, r9, #4294967295
9002838e:	8822      	ldrh	r2, [r4, #0]
90028390:	f003 030f 	and.w	r3, r3, #15
90028394:	9804      	ldr	r0, [sp, #16]
90028396:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002839a:	9b03      	ldr	r3, [sp, #12]
9002839c:	9300      	str	r3, [sp, #0]
9002839e:	463b      	mov	r3, r7
900283a0:	f7ff ff52 	bl	90028248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900283a4:	f824 0b02 	strh.w	r0, [r4], #2
900283a8:	f1bb 0f01 	cmp.w	fp, #1
900283ac:	46a2      	mov	sl, r4
900283ae:	f104 0404 	add.w	r4, r4, #4
900283b2:	dd24      	ble.n	900283fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900283b4:	f898 3000 	ldrb.w	r3, [r8]
900283b8:	f1ab 0b02 	sub.w	fp, fp, #2
900283bc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900283c0:	091b      	lsrs	r3, r3, #4
900283c2:	9804      	ldr	r0, [sp, #16]
900283c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900283c8:	9b03      	ldr	r3, [sp, #12]
900283ca:	9300      	str	r3, [sp, #0]
900283cc:	463b      	mov	r3, r7
900283ce:	f7ff ff3b 	bl	90028248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900283d2:	f824 0c04 	strh.w	r0, [r4, #-4]
900283d6:	f818 3b01 	ldrb.w	r3, [r8], #1
900283da:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900283de:	f003 030f 	and.w	r3, r3, #15
900283e2:	9804      	ldr	r0, [sp, #16]
900283e4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900283e8:	9b03      	ldr	r3, [sp, #12]
900283ea:	9300      	str	r3, [sp, #0]
900283ec:	463b      	mov	r3, r7
900283ee:	f7ff ff2b 	bl	90028248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900283f2:	f824 0c02 	strh.w	r0, [r4, #-2]
900283f6:	e7d7      	b.n	900283a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900283f8:	46a8      	mov	r8, r5
900283fa:	46cb      	mov	fp, r9
900283fc:	e7d4      	b.n	900283a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900283fe:	d10e      	bne.n	9002841e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90028400:	f898 3000 	ldrb.w	r3, [r8]
90028404:	f8ba 2000 	ldrh.w	r2, [sl]
90028408:	091b      	lsrs	r3, r3, #4
9002840a:	9804      	ldr	r0, [sp, #16]
9002840c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028410:	9b03      	ldr	r3, [sp, #12]
90028412:	9300      	str	r3, [sp, #0]
90028414:	463b      	mov	r3, r7
90028416:	f7ff ff17 	bl	90028248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002841a:	f82a 0b02 	strh.w	r0, [sl], #2
9002841e:	9b08      	ldr	r3, [sp, #32]
90028420:	9a05      	ldr	r2, [sp, #20]
90028422:	881c      	ldrh	r4, [r3, #0]
90028424:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028428:	eba4 0409 	sub.w	r4, r4, r9
9002842c:	4413      	add	r3, r2
9002842e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028430:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028434:	fb93 f3f2 	sdiv	r3, r3, r2
90028438:	441d      	add	r5, r3
9002843a:	e79c      	b.n	90028376 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002843c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90028440:	45a3      	cmp	fp, r4
90028442:	d939      	bls.n	900284b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028444:	9b06      	ldr	r3, [sp, #24]
90028446:	b1fb      	cbz	r3, 90028488 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028448:	782b      	ldrb	r3, [r5, #0]
9002844a:	1c6a      	adds	r2, r5, #1
9002844c:	f109 30ff 	add.w	r0, r9, #4294967295
90028450:	3402      	adds	r4, #2
90028452:	f003 030f 	and.w	r3, r3, #15
90028456:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002845a:	f824 3c02 	strh.w	r3, [r4, #-2]
9002845e:	2801      	cmp	r0, #1
90028460:	4623      	mov	r3, r4
90028462:	f104 0404 	add.w	r4, r4, #4
90028466:	dd12      	ble.n	9002848e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90028468:	7813      	ldrb	r3, [r2, #0]
9002846a:	3802      	subs	r0, #2
9002846c:	091b      	lsrs	r3, r3, #4
9002846e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028472:	f824 3c04 	strh.w	r3, [r4, #-4]
90028476:	f812 3b01 	ldrb.w	r3, [r2], #1
9002847a:	f003 030f 	and.w	r3, r3, #15
9002847e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028482:	f824 3c02 	strh.w	r3, [r4, #-2]
90028486:	e7ea      	b.n	9002845e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028488:	462a      	mov	r2, r5
9002848a:	4648      	mov	r0, r9
9002848c:	e7e7      	b.n	9002845e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002848e:	d106      	bne.n	9002849e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028490:	7812      	ldrb	r2, [r2, #0]
90028492:	3302      	adds	r3, #2
90028494:	0912      	lsrs	r2, r2, #4
90028496:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002849a:	f823 2c02 	strh.w	r2, [r3, #-2]
9002849e:	880c      	ldrh	r4, [r1, #0]
900284a0:	9a05      	ldr	r2, [sp, #20]
900284a2:	eba4 0409 	sub.w	r4, r4, r9
900284a6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900284aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900284ae:	4413      	add	r3, r2
900284b0:	fb93 f3f8 	sdiv	r3, r3, r8
900284b4:	441d      	add	r5, r3
900284b6:	e7c3      	b.n	90028440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900284b8:	4b03      	ldr	r3, [pc, #12]	@ (900284c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900284ba:	6818      	ldr	r0, [r3, #0]
900284bc:	6803      	ldr	r3, [r0, #0]
900284be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900284c0:	4798      	blx	r3
900284c2:	b00f      	add	sp, #60	@ 0x3c
900284c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900284c8:	24021844 	.word	0x24021844
900284cc:	2402183e 	.word	0x2402183e

900284d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
900284d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900284d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
900284d6:	0a0f      	lsrs	r7, r1, #8
900284d8:	2dff      	cmp	r5, #255	@ 0xff
900284da:	d10c      	bne.n	900284f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900284dc:	2bff      	cmp	r3, #255	@ 0xff
900284de:	d10a      	bne.n	900284f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900284e0:	0948      	lsrs	r0, r1, #5
900284e2:	4b25      	ldr	r3, [pc, #148]	@ (90028578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900284e4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900284e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900284ec:	403b      	ands	r3, r7
900284ee:	4318      	orrs	r0, r3
900284f0:	4308      	orrs	r0, r1
900284f2:	b280      	uxth	r0, r0
900284f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900284f6:	fb15 f503 	smulbb	r5, r5, r3
900284fa:	1214      	asrs	r4, r2, #8
900284fc:	10d6      	asrs	r6, r2, #3
900284fe:	b2ab      	uxth	r3, r5
90028500:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028504:	00d0      	lsls	r0, r2, #3
90028506:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002850a:	1c5d      	adds	r5, r3, #1
9002850c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028510:	b2c0      	uxtb	r0, r0
90028512:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90028516:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002851a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002851e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028522:	fa1f fc85 	uxth.w	ip, r5
90028526:	43ed      	mvns	r5, r5
90028528:	fb12 f20c 	smulbb	r2, r2, ip
9002852c:	b2eb      	uxtb	r3, r5
9002852e:	b2fd      	uxtb	r5, r7
90028530:	fb04 2403 	mla	r4, r4, r3, r2
90028534:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028538:	fb15 f50c 	smulbb	r5, r5, ip
9002853c:	b2c8      	uxtb	r0, r1
9002853e:	b2a4      	uxth	r4, r4
90028540:	fb10 f00c 	smulbb	r0, r0, ip
90028544:	fb06 5503 	mla	r5, r6, r3, r5
90028548:	fb02 0003 	mla	r0, r2, r3, r0
9002854c:	b2ad      	uxth	r5, r5
9002854e:	b283      	uxth	r3, r0
90028550:	1c60      	adds	r0, r4, #1
90028552:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028556:	1c58      	adds	r0, r3, #1
90028558:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002855c:	1c6b      	adds	r3, r5, #1
9002855e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028562:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028566:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002856a:	096d      	lsrs	r5, r5, #5
9002856c:	4320      	orrs	r0, r4
9002856e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90028572:	4328      	orrs	r0, r5
90028574:	e7be      	b.n	900284f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028576:	bf00      	nop
90028578:	00fff800 	.word	0x00fff800

9002857c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002857c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028580:	461c      	mov	r4, r3
90028582:	b08d      	sub	sp, #52	@ 0x34
90028584:	460d      	mov	r5, r1
90028586:	4616      	mov	r6, r2
90028588:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002858a:	4680      	mov	r8, r0
9002858c:	6861      	ldr	r1, [r4, #4]
9002858e:	aa08      	add	r2, sp, #32
90028590:	6820      	ldr	r0, [r4, #0]
90028592:	f04f 0a02 	mov.w	sl, #2
90028596:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
9002859a:	3604      	adds	r6, #4
9002859c:	c203      	stmia	r2!, {r0, r1}
9002859e:	6818      	ldr	r0, [r3, #0]
900285a0:	aa0a      	add	r2, sp, #40	@ 0x28
900285a2:	6859      	ldr	r1, [r3, #4]
900285a4:	c203      	stmia	r2!, {r0, r1}
900285a6:	a808      	add	r0, sp, #32
900285a8:	f7ee fc3e 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900285ac:	4621      	mov	r1, r4
900285ae:	a80a      	add	r0, sp, #40	@ 0x28
900285b0:	f7ee fc7e 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900285b4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
900285b8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
900285bc:	f002 0301 	and.w	r3, r2, #1
900285c0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
900285c4:	9303      	str	r3, [sp, #12]
900285c6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900285ca:	f003 0101 	and.w	r1, r3, #1
900285ce:	9102      	str	r1, [sp, #8]
900285d0:	9802      	ldr	r0, [sp, #8]
900285d2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900285d6:	4403      	add	r3, r0
900285d8:	fb01 2303 	mla	r3, r1, r3, r2
900285dc:	fb93 f3fa 	sdiv	r3, r3, sl
900285e0:	441d      	add	r5, r3
900285e2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900285e6:	441a      	add	r2, r3
900285e8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
900285ec:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900285f0:	4419      	add	r1, r3
900285f2:	4a3e      	ldr	r2, [pc, #248]	@ (900286ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900285f4:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
900285f8:	6810      	ldr	r0, [r2, #0]
900285fa:	9205      	str	r2, [sp, #20]
900285fc:	6803      	ldr	r3, [r0, #0]
900285fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028600:	4798      	blx	r3
90028602:	4b3b      	ldr	r3, [pc, #236]	@ (900286f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028604:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90028608:	8819      	ldrh	r1, [r3, #0]
9002860a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
9002860e:	434f      	muls	r7, r1
90028610:	fb01 c404 	mla	r4, r1, r4, ip
90028614:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028618:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002861c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028620:	9204      	str	r2, [sp, #16]
90028622:	9b04      	ldr	r3, [sp, #16]
90028624:	429c      	cmp	r4, r3
90028626:	d258      	bcs.n	900286da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028628:	9b03      	ldr	r3, [sp, #12]
9002862a:	2b00      	cmp	r3, #0
9002862c:	d034      	beq.n	90028698 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002862e:	782b      	ldrb	r3, [r5, #0]
90028630:	1c6f      	adds	r7, r5, #1
90028632:	f003 030f 	and.w	r3, r3, #15
90028636:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002863a:	0e0b      	lsrs	r3, r1, #24
9002863c:	d006      	beq.n	9002864c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002863e:	8822      	ldrh	r2, [r4, #0]
90028640:	4640      	mov	r0, r8
90028642:	9300      	str	r3, [sp, #0]
90028644:	464b      	mov	r3, r9
90028646:	f7ff ff43 	bl	900284d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002864a:	8020      	strh	r0, [r4, #0]
9002864c:	3402      	adds	r4, #2
9002864e:	f10b 3aff 	add.w	sl, fp, #4294967295
90028652:	f1ba 0f01 	cmp.w	sl, #1
90028656:	dd22      	ble.n	9002869e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028658:	783b      	ldrb	r3, [r7, #0]
9002865a:	091b      	lsrs	r3, r3, #4
9002865c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028660:	0e0b      	lsrs	r3, r1, #24
90028662:	d006      	beq.n	90028672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028664:	8822      	ldrh	r2, [r4, #0]
90028666:	4640      	mov	r0, r8
90028668:	9300      	str	r3, [sp, #0]
9002866a:	464b      	mov	r3, r9
9002866c:	f7ff ff30 	bl	900284d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028670:	8020      	strh	r0, [r4, #0]
90028672:	f817 3b01 	ldrb.w	r3, [r7], #1
90028676:	f003 030f 	and.w	r3, r3, #15
9002867a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002867e:	0e0b      	lsrs	r3, r1, #24
90028680:	d006      	beq.n	90028690 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028682:	8862      	ldrh	r2, [r4, #2]
90028684:	4640      	mov	r0, r8
90028686:	9300      	str	r3, [sp, #0]
90028688:	464b      	mov	r3, r9
9002868a:	f7ff ff21 	bl	900284d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002868e:	8060      	strh	r0, [r4, #2]
90028690:	3404      	adds	r4, #4
90028692:	f1aa 0a02 	sub.w	sl, sl, #2
90028696:	e7dc      	b.n	90028652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028698:	462f      	mov	r7, r5
9002869a:	46da      	mov	sl, fp
9002869c:	e7d9      	b.n	90028652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002869e:	d10d      	bne.n	900286bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900286a0:	783b      	ldrb	r3, [r7, #0]
900286a2:	091b      	lsrs	r3, r3, #4
900286a4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900286a8:	0e0b      	lsrs	r3, r1, #24
900286aa:	d006      	beq.n	900286ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900286ac:	8822      	ldrh	r2, [r4, #0]
900286ae:	4640      	mov	r0, r8
900286b0:	9300      	str	r3, [sp, #0]
900286b2:	464b      	mov	r3, r9
900286b4:	f7ff ff0c 	bl	900284d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900286b8:	8020      	strh	r0, [r4, #0]
900286ba:	3402      	adds	r4, #2
900286bc:	9b06      	ldr	r3, [sp, #24]
900286be:	9a02      	ldr	r2, [sp, #8]
900286c0:	881b      	ldrh	r3, [r3, #0]
900286c2:	eba3 030b 	sub.w	r3, r3, fp
900286c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900286ca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900286ce:	4413      	add	r3, r2
900286d0:	9a07      	ldr	r2, [sp, #28]
900286d2:	fb93 f3f2 	sdiv	r3, r3, r2
900286d6:	441d      	add	r5, r3
900286d8:	e7a3      	b.n	90028622 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
900286da:	9b05      	ldr	r3, [sp, #20]
900286dc:	6818      	ldr	r0, [r3, #0]
900286de:	6803      	ldr	r3, [r0, #0]
900286e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900286e2:	4798      	blx	r3
900286e4:	b00d      	add	sp, #52	@ 0x34
900286e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900286ea:	bf00      	nop
900286ec:	24021844 	.word	0x24021844
900286f0:	2402183e 	.word	0x2402183e

900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
900286f4:	b570      	push	{r4, r5, r6, lr}
900286f6:	1214      	asrs	r4, r2, #8
900286f8:	788d      	ldrb	r5, [r1, #2]
900286fa:	f89d 6010 	ldrb.w	r6, [sp, #16]
900286fe:	10d0      	asrs	r0, r2, #3
90028700:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028704:	00d2      	lsls	r2, r2, #3
90028706:	fb15 f503 	smulbb	r5, r5, r3
9002870a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002870e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028712:	b2d2      	uxtb	r2, r2
90028714:	fb04 5506 	mla	r5, r4, r6, r5
90028718:	784c      	ldrb	r4, [r1, #1]
9002871a:	7809      	ldrb	r1, [r1, #0]
9002871c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90028720:	fb14 f403 	smulbb	r4, r4, r3
90028724:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028728:	fb11 f303 	smulbb	r3, r1, r3
9002872c:	b2ad      	uxth	r5, r5
9002872e:	fb00 4406 	mla	r4, r0, r6, r4
90028732:	fb02 3306 	mla	r3, r2, r6, r3
90028736:	1c68      	adds	r0, r5, #1
90028738:	b2a4      	uxth	r4, r4
9002873a:	b29b      	uxth	r3, r3
9002873c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90028740:	1c62      	adds	r2, r4, #1
90028742:	1c58      	adds	r0, r3, #1
90028744:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028748:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002874c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028750:	0964      	lsrs	r4, r4, #5
90028752:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028756:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002875a:	4328      	orrs	r0, r5
9002875c:	4320      	orrs	r0, r4
9002875e:	bd70      	pop	{r4, r5, r6, pc}

90028760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028764:	b08f      	sub	sp, #60	@ 0x3c
90028766:	461c      	mov	r4, r3
90028768:	4682      	mov	sl, r0
9002876a:	460e      	mov	r6, r1
9002876c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028770:	4615      	mov	r5, r2
90028772:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028774:	2f00      	cmp	r7, #0
90028776:	f000 8141 	beq.w	900289fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002877a:	6820      	ldr	r0, [r4, #0]
9002877c:	aa0a      	add	r2, sp, #40	@ 0x28
9002877e:	6861      	ldr	r1, [r4, #4]
90028780:	f04f 0802 	mov.w	r8, #2
90028784:	3504      	adds	r5, #4
90028786:	c203      	stmia	r2!, {r0, r1}
90028788:	6818      	ldr	r0, [r3, #0]
9002878a:	aa0c      	add	r2, sp, #48	@ 0x30
9002878c:	6859      	ldr	r1, [r3, #4]
9002878e:	c203      	stmia	r2!, {r0, r1}
90028790:	a80a      	add	r0, sp, #40	@ 0x28
90028792:	f7ee fb49 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028796:	4621      	mov	r1, r4
90028798:	a80c      	add	r0, sp, #48	@ 0x30
9002879a:	f7ee fb89 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002879e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900287a2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900287a6:	f002 0301 	and.w	r3, r2, #1
900287aa:	9306      	str	r3, [sp, #24]
900287ac:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900287b0:	f003 0101 	and.w	r1, r3, #1
900287b4:	9105      	str	r1, [sp, #20]
900287b6:	9805      	ldr	r0, [sp, #20]
900287b8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900287bc:	4403      	add	r3, r0
900287be:	fb01 2303 	mla	r3, r1, r3, r2
900287c2:	fb93 f3f8 	sdiv	r3, r3, r8
900287c6:	441e      	add	r6, r3
900287c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900287cc:	441a      	add	r2, r3
900287ce:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900287d2:	4419      	add	r1, r3
900287d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900287d8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900287dc:	9303      	str	r3, [sp, #12]
900287de:	4b89      	ldr	r3, [pc, #548]	@ (90028a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900287e0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900287e4:	6818      	ldr	r0, [r3, #0]
900287e6:	6803      	ldr	r3, [r0, #0]
900287e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900287ea:	4798      	blx	r3
900287ec:	4a86      	ldr	r2, [pc, #536]	@ (90028a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900287ee:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
900287f2:	2fff      	cmp	r7, #255	@ 0xff
900287f4:	8813      	ldrh	r3, [r2, #0]
900287f6:	4694      	mov	ip, r2
900287f8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
900287fc:	fb03 9404 	mla	r4, r3, r4, r9
90028800:	fb03 f30b 	mul.w	r3, r3, fp
90028804:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028808:	d071      	beq.n	900288ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002880a:	43f9      	mvns	r1, r7
9002880c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028810:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028814:	b2c9      	uxtb	r1, r1
90028816:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002881a:	9104      	str	r1, [sp, #16]
9002881c:	9b07      	ldr	r3, [sp, #28]
9002881e:	42a3      	cmp	r3, r4
90028820:	f240 80e7 	bls.w	900289f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028824:	9b06      	ldr	r3, [sp, #24]
90028826:	2b00      	cmp	r3, #0
90028828:	d03d      	beq.n	900288a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002882a:	7831      	ldrb	r1, [r6, #0]
9002882c:	4650      	mov	r0, sl
9002882e:	9b04      	ldr	r3, [sp, #16]
90028830:	f106 0801 	add.w	r8, r6, #1
90028834:	f001 010f 	and.w	r1, r1, #15
90028838:	8822      	ldrh	r2, [r4, #0]
9002883a:	9300      	str	r3, [sp, #0]
9002883c:	463b      	mov	r3, r7
9002883e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028842:	4429      	add	r1, r5
90028844:	f7ff ff56 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028848:	9b03      	ldr	r3, [sp, #12]
9002884a:	f824 0b02 	strh.w	r0, [r4], #2
9002884e:	f103 3bff 	add.w	fp, r3, #4294967295
90028852:	f1bb 0f01 	cmp.w	fp, #1
90028856:	46a1      	mov	r9, r4
90028858:	f104 0404 	add.w	r4, r4, #4
9002885c:	dd27      	ble.n	900288ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002885e:	f898 1000 	ldrb.w	r1, [r8]
90028862:	4650      	mov	r0, sl
90028864:	9b04      	ldr	r3, [sp, #16]
90028866:	f1ab 0b02 	sub.w	fp, fp, #2
9002886a:	0909      	lsrs	r1, r1, #4
9002886c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028870:	9300      	str	r3, [sp, #0]
90028872:	463b      	mov	r3, r7
90028874:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028878:	4429      	add	r1, r5
9002887a:	f7ff ff3b 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002887e:	f824 0c04 	strh.w	r0, [r4, #-4]
90028882:	f818 1b01 	ldrb.w	r1, [r8], #1
90028886:	4650      	mov	r0, sl
90028888:	9b04      	ldr	r3, [sp, #16]
9002888a:	f001 010f 	and.w	r1, r1, #15
9002888e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028892:	9300      	str	r3, [sp, #0]
90028894:	463b      	mov	r3, r7
90028896:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002889a:	4429      	add	r1, r5
9002889c:	f7ff ff2a 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900288a0:	f824 0c02 	strh.w	r0, [r4, #-2]
900288a4:	e7d5      	b.n	90028852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900288a6:	46b0      	mov	r8, r6
900288a8:	f8dd b00c 	ldr.w	fp, [sp, #12]
900288ac:	e7d1      	b.n	90028852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900288ae:	d10f      	bne.n	900288d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900288b0:	f898 1000 	ldrb.w	r1, [r8]
900288b4:	4650      	mov	r0, sl
900288b6:	9b04      	ldr	r3, [sp, #16]
900288b8:	0909      	lsrs	r1, r1, #4
900288ba:	f8b9 2000 	ldrh.w	r2, [r9]
900288be:	9300      	str	r3, [sp, #0]
900288c0:	463b      	mov	r3, r7
900288c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900288c6:	4429      	add	r1, r5
900288c8:	f7ff ff14 	bl	900286f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900288cc:	f829 0b02 	strh.w	r0, [r9], #2
900288d0:	9b08      	ldr	r3, [sp, #32]
900288d2:	9a05      	ldr	r2, [sp, #20]
900288d4:	881c      	ldrh	r4, [r3, #0]
900288d6:	9b03      	ldr	r3, [sp, #12]
900288d8:	1ae4      	subs	r4, r4, r3
900288da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900288de:	4413      	add	r3, r2
900288e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900288e2:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900288e6:	fb93 f3f2 	sdiv	r3, r3, r2
900288ea:	441e      	add	r6, r3
900288ec:	e796      	b.n	9002881c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
900288ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900288f2:	4f46      	ldr	r7, [pc, #280]	@ (90028a0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
900288f4:	42a3      	cmp	r3, r4
900288f6:	d97c      	bls.n	900289f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900288f8:	9a06      	ldr	r2, [sp, #24]
900288fa:	2a00      	cmp	r2, #0
900288fc:	d054      	beq.n	900289a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900288fe:	7830      	ldrb	r0, [r6, #0]
90028900:	1c71      	adds	r1, r6, #1
90028902:	f000 000f 	and.w	r0, r0, #15
90028906:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002890a:	eb05 0e00 	add.w	lr, r5, r0
9002890e:	5c28      	ldrb	r0, [r5, r0]
90028910:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028914:	f89e e001 	ldrb.w	lr, [lr, #1]
90028918:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002891c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028920:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028924:	ea42 020e 	orr.w	r2, r2, lr
90028928:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002892c:	f824 2b02 	strh.w	r2, [r4], #2
90028930:	9a03      	ldr	r2, [sp, #12]
90028932:	f102 3eff 	add.w	lr, r2, #4294967295
90028936:	f1be 0f01 	cmp.w	lr, #1
9002893a:	4620      	mov	r0, r4
9002893c:	f104 0404 	add.w	r4, r4, #4
90028940:	dd36      	ble.n	900289b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90028942:	7808      	ldrb	r0, [r1, #0]
90028944:	f1ae 0e02 	sub.w	lr, lr, #2
90028948:	0900      	lsrs	r0, r0, #4
9002894a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002894e:	eb05 0a00 	add.w	sl, r5, r0
90028952:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028956:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002895a:	00d2      	lsls	r2, r2, #3
9002895c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028960:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028964:	ea49 0202 	orr.w	r2, r9, r2
90028968:	f815 9000 	ldrb.w	r9, [r5, r0]
9002896c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028970:	f824 2c04 	strh.w	r2, [r4, #-4]
90028974:	f811 0b01 	ldrb.w	r0, [r1], #1
90028978:	f000 000f 	and.w	r0, r0, #15
9002897c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028980:	eb05 0a00 	add.w	sl, r5, r0
90028984:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028988:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002898c:	00d2      	lsls	r2, r2, #3
9002898e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028992:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028996:	ea49 0202 	orr.w	r2, r9, r2
9002899a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002899e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900289a2:	f824 2c02 	strh.w	r2, [r4, #-2]
900289a6:	e7c6      	b.n	90028936 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900289a8:	4631      	mov	r1, r6
900289aa:	f8dd e00c 	ldr.w	lr, [sp, #12]
900289ae:	e7c2      	b.n	90028936 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900289b0:	d111      	bne.n	900289d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900289b2:	7809      	ldrb	r1, [r1, #0]
900289b4:	0909      	lsrs	r1, r1, #4
900289b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900289ba:	186c      	adds	r4, r5, r1
900289bc:	5c69      	ldrb	r1, [r5, r1]
900289be:	78a2      	ldrb	r2, [r4, #2]
900289c0:	7864      	ldrb	r4, [r4, #1]
900289c2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900289c6:	00e4      	lsls	r4, r4, #3
900289c8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900289cc:	4322      	orrs	r2, r4
900289ce:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900289d2:	f820 2b02 	strh.w	r2, [r0], #2
900289d6:	9a03      	ldr	r2, [sp, #12]
900289d8:	f8bc 4000 	ldrh.w	r4, [ip]
900289dc:	9905      	ldr	r1, [sp, #20]
900289de:	1aa4      	subs	r4, r4, r2
900289e0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900289e4:	440a      	add	r2, r1
900289e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900289ea:	fb92 f2f8 	sdiv	r2, r2, r8
900289ee:	4416      	add	r6, r2
900289f0:	e780      	b.n	900288f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
900289f2:	4b04      	ldr	r3, [pc, #16]	@ (90028a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900289f4:	6818      	ldr	r0, [r3, #0]
900289f6:	6803      	ldr	r3, [r0, #0]
900289f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900289fa:	4798      	blx	r3
900289fc:	b00f      	add	sp, #60	@ 0x3c
900289fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028a02:	bf00      	nop
90028a04:	24021844 	.word	0x24021844
90028a08:	2402183e 	.word	0x2402183e
90028a0c:	fffff800 	.word	0xfffff800

90028a10 <CRC_Lock>:
90028a10:	4a2d      	ldr	r2, [pc, #180]	@ (90028ac8 <CRC_Lock+0xb8>)
90028a12:	b530      	push	{r4, r5, lr}
90028a14:	6813      	ldr	r3, [r2, #0]
90028a16:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028a1a:	f023 0301 	bic.w	r3, r3, #1
90028a1e:	6013      	str	r3, [r2, #0]
90028a20:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028a24:	4b29      	ldr	r3, [pc, #164]	@ (90028acc <CRC_Lock+0xbc>)
90028a26:	681c      	ldr	r4, [r3, #0]
90028a28:	4014      	ands	r4, r2
90028a2a:	42ac      	cmp	r4, r5
90028a2c:	d005      	beq.n	90028a3a <CRC_Lock+0x2a>
90028a2e:	681c      	ldr	r4, [r3, #0]
90028a30:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028a34:	4014      	ands	r4, r2
90028a36:	42ac      	cmp	r4, r5
90028a38:	d125      	bne.n	90028a86 <CRC_Lock+0x76>
90028a3a:	4b25      	ldr	r3, [pc, #148]	@ (90028ad0 <CRC_Lock+0xc0>)
90028a3c:	681b      	ldr	r3, [r3, #0]
90028a3e:	2b00      	cmp	r3, #0
90028a40:	d139      	bne.n	90028ab6 <CRC_Lock+0xa6>
90028a42:	4b24      	ldr	r3, [pc, #144]	@ (90028ad4 <CRC_Lock+0xc4>)
90028a44:	681a      	ldr	r2, [r3, #0]
90028a46:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028a4a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90028a4e:	d00d      	beq.n	90028a6c <CRC_Lock+0x5c>
90028a50:	681a      	ldr	r2, [r3, #0]
90028a52:	f240 4483 	movw	r4, #1155	@ 0x483
90028a56:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028a5a:	42a2      	cmp	r2, r4
90028a5c:	d006      	beq.n	90028a6c <CRC_Lock+0x5c>
90028a5e:	681b      	ldr	r3, [r3, #0]
90028a60:	f240 4285 	movw	r2, #1157	@ 0x485
90028a64:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028a68:	4293      	cmp	r3, r2
90028a6a:	d124      	bne.n	90028ab6 <CRC_Lock+0xa6>
90028a6c:	4b1a      	ldr	r3, [pc, #104]	@ (90028ad8 <CRC_Lock+0xc8>)
90028a6e:	2201      	movs	r2, #1
90028a70:	601a      	str	r2, [r3, #0]
90028a72:	681a      	ldr	r2, [r3, #0]
90028a74:	2a00      	cmp	r2, #0
90028a76:	d1fc      	bne.n	90028a72 <CRC_Lock+0x62>
90028a78:	4b18      	ldr	r3, [pc, #96]	@ (90028adc <CRC_Lock+0xcc>)
90028a7a:	6018      	str	r0, [r3, #0]
90028a7c:	6818      	ldr	r0, [r3, #0]
90028a7e:	1a43      	subs	r3, r0, r1
90028a80:	4258      	negs	r0, r3
90028a82:	4158      	adcs	r0, r3
90028a84:	e00e      	b.n	90028aa4 <CRC_Lock+0x94>
90028a86:	681b      	ldr	r3, [r3, #0]
90028a88:	4013      	ands	r3, r2
90028a8a:	f24d 2220 	movw	r2, #53792	@ 0xd220
90028a8e:	4293      	cmp	r3, r2
90028a90:	d111      	bne.n	90028ab6 <CRC_Lock+0xa6>
90028a92:	4b13      	ldr	r3, [pc, #76]	@ (90028ae0 <CRC_Lock+0xd0>)
90028a94:	f240 4286 	movw	r2, #1158	@ 0x486
90028a98:	681b      	ldr	r3, [r3, #0]
90028a9a:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028a9e:	4293      	cmp	r3, r2
90028aa0:	d001      	beq.n	90028aa6 <CRC_Lock+0x96>
90028aa2:	2000      	movs	r0, #0
90028aa4:	bd30      	pop	{r4, r5, pc}
90028aa6:	4b0f      	ldr	r3, [pc, #60]	@ (90028ae4 <CRC_Lock+0xd4>)
90028aa8:	2201      	movs	r2, #1
90028aaa:	601a      	str	r2, [r3, #0]
90028aac:	681a      	ldr	r2, [r3, #0]
90028aae:	2a00      	cmp	r2, #0
90028ab0:	d1fc      	bne.n	90028aac <CRC_Lock+0x9c>
90028ab2:	4b0d      	ldr	r3, [pc, #52]	@ (90028ae8 <CRC_Lock+0xd8>)
90028ab4:	e7e1      	b.n	90028a7a <CRC_Lock+0x6a>
90028ab6:	4b0d      	ldr	r3, [pc, #52]	@ (90028aec <CRC_Lock+0xdc>)
90028ab8:	2201      	movs	r2, #1
90028aba:	601a      	str	r2, [r3, #0]
90028abc:	681a      	ldr	r2, [r3, #0]
90028abe:	2a00      	cmp	r2, #0
90028ac0:	d1fc      	bne.n	90028abc <CRC_Lock+0xac>
90028ac2:	4b0b      	ldr	r3, [pc, #44]	@ (90028af0 <CRC_Lock+0xe0>)
90028ac4:	e7d9      	b.n	90028a7a <CRC_Lock+0x6a>
90028ac6:	bf00      	nop
90028ac8:	e0002000 	.word	0xe0002000
90028acc:	e000ed00 	.word	0xe000ed00
90028ad0:	e0042000 	.word	0xe0042000
90028ad4:	5c001000 	.word	0x5c001000
90028ad8:	58024c08 	.word	0x58024c08
90028adc:	58024c00 	.word	0x58024c00
90028ae0:	46008ff0 	.word	0x46008ff0
90028ae4:	46024c08 	.word	0x46024c08
90028ae8:	46024c00 	.word	0x46024c00
90028aec:	40023008 	.word	0x40023008
90028af0:	40023000 	.word	0x40023000

90028af4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028af4:	6101      	str	r1, [r0, #16]
90028af6:	4770      	bx	lr

90028af8 <_ZN8touchgfx8Gestures4tickEv>:
90028af8:	7b83      	ldrb	r3, [r0, #14]
90028afa:	b14b      	cbz	r3, 90028b10 <_ZN8touchgfx8Gestures4tickEv+0x18>
90028afc:	8903      	ldrh	r3, [r0, #8]
90028afe:	3301      	adds	r3, #1
90028b00:	b29b      	uxth	r3, r3
90028b02:	2b07      	cmp	r3, #7
90028b04:	8103      	strh	r3, [r0, #8]
90028b06:	bf81      	itttt	hi
90028b08:	2300      	movhi	r3, #0
90028b0a:	8143      	strhhi	r3, [r0, #10]
90028b0c:	8183      	strhhi	r3, [r0, #12]
90028b0e:	7383      	strbhi	r3, [r0, #14]
90028b10:	4770      	bx	lr
	...

90028b14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028b14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028b18:	4698      	mov	r8, r3
90028b1a:	8883      	ldrh	r3, [r0, #4]
90028b1c:	4604      	mov	r4, r0
90028b1e:	4617      	mov	r7, r2
90028b20:	f8ad 3006 	strh.w	r3, [sp, #6]
90028b24:	eba8 0303 	sub.w	r3, r8, r3
90028b28:	4a19      	ldr	r2, [pc, #100]	@ (90028b90 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028b2a:	460e      	mov	r6, r1
90028b2c:	b21b      	sxth	r3, r3
90028b2e:	88c1      	ldrh	r1, [r0, #6]
90028b30:	9200      	str	r2, [sp, #0]
90028b32:	2000      	movs	r0, #0
90028b34:	2b00      	cmp	r3, #0
90028b36:	8aa2      	ldrh	r2, [r4, #20]
90028b38:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90028b3c:	bfb8      	it	lt
90028b3e:	425b      	neglt	r3, r3
90028b40:	f88d 0004 	strb.w	r0, [sp, #4]
90028b44:	f8ad 1008 	strh.w	r1, [sp, #8]
90028b48:	b21b      	sxth	r3, r3
90028b4a:	f8ad 800a 	strh.w	r8, [sp, #10]
90028b4e:	f8ad 500c 	strh.w	r5, [sp, #12]
90028b52:	4293      	cmp	r3, r2
90028b54:	dc07      	bgt.n	90028b66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028b56:	1a69      	subs	r1, r5, r1
90028b58:	b209      	sxth	r1, r1
90028b5a:	2900      	cmp	r1, #0
90028b5c:	bfb8      	it	lt
90028b5e:	4249      	neglt	r1, r1
90028b60:	b209      	sxth	r1, r1
90028b62:	428a      	cmp	r2, r1
90028b64:	da10      	bge.n	90028b88 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90028b66:	6920      	ldr	r0, [r4, #16]
90028b68:	4669      	mov	r1, sp
90028b6a:	eba8 0606 	sub.w	r6, r8, r6
90028b6e:	1bef      	subs	r7, r5, r7
90028b70:	6803      	ldr	r3, [r0, #0]
90028b72:	685b      	ldr	r3, [r3, #4]
90028b74:	4798      	blx	r3
90028b76:	2300      	movs	r3, #0
90028b78:	2001      	movs	r0, #1
90028b7a:	8166      	strh	r6, [r4, #10]
90028b7c:	8123      	strh	r3, [r4, #8]
90028b7e:	81a7      	strh	r7, [r4, #12]
90028b80:	f8a4 8004 	strh.w	r8, [r4, #4]
90028b84:	80e5      	strh	r5, [r4, #6]
90028b86:	73a0      	strb	r0, [r4, #14]
90028b88:	b004      	add	sp, #16
90028b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028b8e:	bf00      	nop
90028b90:	9002d934 	.word	0x9002d934

90028b94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90028b94:	b5f0      	push	{r4, r5, r6, r7, lr}
90028b96:	461e      	mov	r6, r3
90028b98:	1e4b      	subs	r3, r1, #1
90028b9a:	b085      	sub	sp, #20
90028b9c:	4604      	mov	r4, r0
90028b9e:	2b01      	cmp	r3, #1
90028ba0:	460d      	mov	r5, r1
90028ba2:	4617      	mov	r7, r2
90028ba4:	d84b      	bhi.n	90028c3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90028ba6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90028baa:	1cd3      	adds	r3, r2, #3
90028bac:	b29b      	uxth	r3, r3
90028bae:	2b06      	cmp	r3, #6
90028bb0:	d916      	bls.n	90028be0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90028bb2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90028c54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028bb6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028bba:	f8cd c004 	str.w	ip, [sp, #4]
90028bbe:	f04f 0c00 	mov.w	ip, #0
90028bc2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028bc6:	6900      	ldr	r0, [r0, #16]
90028bc8:	f8ad 100c 	strh.w	r1, [sp, #12]
90028bcc:	a901      	add	r1, sp, #4
90028bce:	f88d c008 	strb.w	ip, [sp, #8]
90028bd2:	f8ad 200a 	strh.w	r2, [sp, #10]
90028bd6:	f8ad 300e 	strh.w	r3, [sp, #14]
90028bda:	6803      	ldr	r3, [r0, #0]
90028bdc:	689b      	ldr	r3, [r3, #8]
90028bde:	4798      	blx	r3
90028be0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028be4:	1cd3      	adds	r3, r2, #3
90028be6:	b29b      	uxth	r3, r3
90028be8:	2b06      	cmp	r3, #6
90028bea:	d916      	bls.n	90028c1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028bec:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90028c54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028bf0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028bf4:	f8cd c004 	str.w	ip, [sp, #4]
90028bf8:	f04f 0c01 	mov.w	ip, #1
90028bfc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028c00:	6920      	ldr	r0, [r4, #16]
90028c02:	f8ad 100c 	strh.w	r1, [sp, #12]
90028c06:	a901      	add	r1, sp, #4
90028c08:	f88d c008 	strb.w	ip, [sp, #8]
90028c0c:	f8ad 200a 	strh.w	r2, [sp, #10]
90028c10:	f8ad 300e 	strh.w	r3, [sp, #14]
90028c14:	6803      	ldr	r3, [r0, #0]
90028c16:	689b      	ldr	r3, [r3, #8]
90028c18:	4798      	blx	r3
90028c1a:	4b0d      	ldr	r3, [pc, #52]	@ (90028c50 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028c1c:	a901      	add	r1, sp, #4
90028c1e:	6920      	ldr	r0, [r4, #16]
90028c20:	9301      	str	r3, [sp, #4]
90028c22:	2300      	movs	r3, #0
90028c24:	f88d 5008 	strb.w	r5, [sp, #8]
90028c28:	f8ad 700a 	strh.w	r7, [sp, #10]
90028c2c:	f8ad 600c 	strh.w	r6, [sp, #12]
90028c30:	f8ad 300e 	strh.w	r3, [sp, #14]
90028c34:	6803      	ldr	r3, [r0, #0]
90028c36:	681b      	ldr	r3, [r3, #0]
90028c38:	4798      	blx	r3
90028c3a:	b005      	add	sp, #20
90028c3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028c3e:	2900      	cmp	r1, #0
90028c40:	d1eb      	bne.n	90028c1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028c42:	80a2      	strh	r2, [r4, #4]
90028c44:	80c6      	strh	r6, [r0, #6]
90028c46:	60a1      	str	r1, [r4, #8]
90028c48:	81a1      	strh	r1, [r4, #12]
90028c4a:	73a1      	strb	r1, [r4, #14]
90028c4c:	e7e5      	b.n	90028c1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028c4e:	bf00      	nop
90028c50:	9002d920 	.word	0x9002d920
90028c54:	9002d948 	.word	0x9002d948

90028c58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90028c58:	10c9      	asrs	r1, r1, #3
90028c5a:	2900      	cmp	r1, #0
90028c5c:	bfb8      	it	lt
90028c5e:	4249      	neglt	r1, r1
90028c60:	2801      	cmp	r0, #1
90028c62:	d108      	bne.n	90028c76 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90028c64:	f3c1 0008 	ubfx	r0, r1, #0, #9
90028c68:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90028c6c:	4601      	mov	r1, r0
90028c6e:	dd02      	ble.n	90028c76 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90028c70:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90028c74:	4770      	bx	lr
90028c76:	29ff      	cmp	r1, #255	@ 0xff
90028c78:	bfa8      	it	ge
90028c7a:	21ff      	movge	r1, #255	@ 0xff
90028c7c:	4608      	mov	r0, r1
90028c7e:	4770      	bx	lr

90028c80 <_ZN8touchgfx10Rasterizer6lineToEii>:
90028c80:	b410      	push	{r4}
90028c82:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90028c86:	429c      	cmp	r4, r3
90028c88:	d803      	bhi.n	90028c92 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90028c8a:	f85d 4b04 	ldr.w	r4, [sp], #4
90028c8e:	f7ec bbd5 	b.w	9001543c <_ZN8touchgfx7Outline6lineToEii>
90028c92:	f85d 4b04 	ldr.w	r4, [sp], #4
90028c96:	4770      	bx	lr

90028c98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90028c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028c9c:	b08b      	sub	sp, #44	@ 0x2c
90028c9e:	4606      	mov	r6, r0
90028ca0:	468a      	mov	sl, r1
90028ca2:	e9cd 2306 	strd	r2, r3, [sp, #24]
90028ca6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90028caa:	9308      	str	r3, [sp, #32]
90028cac:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90028cb0:	9309      	str	r3, [sp, #36]	@ 0x24
90028cb2:	f7ec fd2e 	bl	90015712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90028cb6:	68b5      	ldr	r5, [r6, #8]
90028cb8:	4604      	mov	r4, r0
90028cba:	2d00      	cmp	r5, #0
90028cbc:	d044      	beq.n	90028d48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028cbe:	6873      	ldr	r3, [r6, #4]
90028cc0:	42ab      	cmp	r3, r5
90028cc2:	d33d      	bcc.n	90028d40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028cc4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028cc8:	f04f 0800 	mov.w	r8, #0
90028ccc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
90028cd0:	eb02 0b03 	add.w	fp, r2, r3
90028cd4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028cd8:	fb02 1203 	mla	r2, r2, r3, r1
90028cdc:	9205      	str	r2, [sp, #20]
90028cde:	1e6a      	subs	r2, r5, #1
90028ce0:	9204      	str	r2, [sp, #16]
90028ce2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028ce6:	f9b4 7000 	ldrsh.w	r7, [r4]
90028cea:	454b      	cmp	r3, r9
90028cec:	463a      	mov	r2, r7
90028cee:	d008      	beq.n	90028d02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90028cf0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90028cf4:	eb03 0b09 	add.w	fp, r3, r9
90028cf8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028cfc:	fb03 1309 	mla	r3, r3, r9, r1
90028d00:	9305      	str	r3, [sp, #20]
90028d02:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028d06:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028d0a:	4498      	add	r8, r3
90028d0c:	9b04      	ldr	r3, [sp, #16]
90028d0e:	3b01      	subs	r3, #1
90028d10:	9304      	str	r3, [sp, #16]
90028d12:	9b04      	ldr	r3, [sp, #16]
90028d14:	3301      	adds	r3, #1
90028d16:	d015      	beq.n	90028d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028d18:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028d1c:	42bb      	cmp	r3, r7
90028d1e:	d117      	bne.n	90028d50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90028d20:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028d24:	9b04      	ldr	r3, [sp, #16]
90028d26:	4548      	cmp	r0, r9
90028d28:	f103 33ff 	add.w	r3, r3, #4294967295
90028d2c:	d17d      	bne.n	90028e2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90028d2e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90028d32:	4401      	add	r1, r0
90028d34:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028d38:	4480      	add	r8, r0
90028d3a:	e7e9      	b.n	90028d10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028d3c:	461f      	mov	r7, r3
90028d3e:	e042      	b.n	90028dc6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90028d40:	2000      	movs	r0, #0
90028d42:	e002      	b.n	90028d4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028d44:	2900      	cmp	r1, #0
90028d46:	d16d      	bne.n	90028e24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028d48:	2001      	movs	r0, #1
90028d4a:	b00b      	add	sp, #44	@ 0x2c
90028d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028d50:	b379      	cbz	r1, 90028db2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90028d52:	2f00      	cmp	r7, #0
90028d54:	db29      	blt.n	90028daa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028d56:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028d5a:	42bb      	cmp	r3, r7
90028d5c:	dd25      	ble.n	90028daa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028d5e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90028d62:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90028d66:	f7ff ff77 	bl	90028c58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90028d6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028d6c:	fb10 f003 	smulbb	r0, r0, r3
90028d70:	b280      	uxth	r0, r0
90028d72:	1c41      	adds	r1, r0, #1
90028d74:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028d78:	1209      	asrs	r1, r1, #8
90028d7a:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028d7e:	d014      	beq.n	90028daa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028d80:	b2c9      	uxtb	r1, r1
90028d82:	9808      	ldr	r0, [sp, #32]
90028d84:	b2ba      	uxth	r2, r7
90028d86:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90028d88:	9102      	str	r1, [sp, #8]
90028d8a:	2101      	movs	r1, #1
90028d8c:	4413      	add	r3, r2
90028d8e:	4402      	add	r2, r0
90028d90:	9101      	str	r1, [sp, #4]
90028d92:	fa0f f18b 	sxth.w	r1, fp
90028d96:	f8da 0000 	ldr.w	r0, [sl]
90028d9a:	b21b      	sxth	r3, r3
90028d9c:	9100      	str	r1, [sp, #0]
90028d9e:	b212      	sxth	r2, r2
90028da0:	6941      	ldr	r1, [r0, #20]
90028da2:	4650      	mov	r0, sl
90028da4:	460d      	mov	r5, r1
90028da6:	9905      	ldr	r1, [sp, #20]
90028da8:	47a8      	blx	r5
90028daa:	9b04      	ldr	r3, [sp, #16]
90028dac:	1c7a      	adds	r2, r7, #1
90028dae:	3301      	adds	r3, #1
90028db0:	d0ca      	beq.n	90028d48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028db2:	f9b4 7000 	ldrsh.w	r7, [r4]
90028db6:	1abb      	subs	r3, r7, r2
90028db8:	2b00      	cmp	r3, #0
90028dba:	dd31      	ble.n	90028e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028dbc:	2a00      	cmp	r2, #0
90028dbe:	dabd      	bge.n	90028d3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90028dc0:	2f00      	cmp	r7, #0
90028dc2:	dd2d      	ble.n	90028e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028dc4:	2200      	movs	r2, #0
90028dc6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028dca:	19d1      	adds	r1, r2, r7
90028dcc:	4299      	cmp	r1, r3
90028dce:	db02      	blt.n	90028dd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90028dd0:	1a9f      	subs	r7, r3, r2
90028dd2:	2f00      	cmp	r7, #0
90028dd4:	dd24      	ble.n	90028e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028dd6:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028dda:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90028dde:	f7ff ff3b 	bl	90028c58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90028de2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028de4:	fb10 f003 	smulbb	r0, r0, r3
90028de8:	b280      	uxth	r0, r0
90028dea:	1c41      	adds	r1, r0, #1
90028dec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028df0:	1209      	asrs	r1, r1, #8
90028df2:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028df6:	d013      	beq.n	90028e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028df8:	b292      	uxth	r2, r2
90028dfa:	9808      	ldr	r0, [sp, #32]
90028dfc:	b2c9      	uxtb	r1, r1
90028dfe:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90028e00:	b23f      	sxth	r7, r7
90028e02:	4413      	add	r3, r2
90028e04:	9102      	str	r1, [sp, #8]
90028e06:	4402      	add	r2, r0
90028e08:	fa0f f18b 	sxth.w	r1, fp
90028e0c:	f8da 0000 	ldr.w	r0, [sl]
90028e10:	b21b      	sxth	r3, r3
90028e12:	9100      	str	r1, [sp, #0]
90028e14:	b212      	sxth	r2, r2
90028e16:	9701      	str	r7, [sp, #4]
90028e18:	9905      	ldr	r1, [sp, #20]
90028e1a:	6947      	ldr	r7, [r0, #20]
90028e1c:	4650      	mov	r0, sl
90028e1e:	47b8      	blx	r7
90028e20:	464b      	mov	r3, r9
90028e22:	e75e      	b.n	90028ce2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028e24:	2f00      	cmp	r7, #0
90028e26:	da96      	bge.n	90028d56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028e28:	e78e      	b.n	90028d48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028e2a:	2900      	cmp	r1, #0
90028e2c:	d0f8      	beq.n	90028e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028e2e:	e790      	b.n	90028d52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90028e30 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90028e30:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028e34:	461e      	mov	r6, r3
90028e36:	4b36      	ldr	r3, [pc, #216]	@ (90028f10 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90028e38:	2500      	movs	r5, #0
90028e3a:	f100 0814 	add.w	r8, r0, #20
90028e3e:	4604      	mov	r4, r0
90028e40:	4617      	mov	r7, r2
90028e42:	e9c0 3100 	strd	r3, r1, [r0]
90028e46:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90028e4a:	8185      	strh	r5, [r0, #12]
90028e4c:	8103      	strh	r3, [r0, #8]
90028e4e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90028e52:	81c5      	strh	r5, [r0, #14]
90028e54:	7283      	strb	r3, [r0, #10]
90028e56:	8205      	strh	r5, [r0, #16]
90028e58:	8245      	strh	r5, [r0, #18]
90028e5a:	4640      	mov	r0, r8
90028e5c:	f7eb fe34 	bl	90014ac8 <_ZN8touchgfx7OutlineC1Ev>
90028e60:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90028e64:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90028e68:	466b      	mov	r3, sp
90028e6a:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
90028e6e:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90028e72:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90028e76:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90028e7a:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
90028e7e:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90028e82:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90028e86:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90028e8a:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
90028e8e:	6830      	ldr	r0, [r6, #0]
90028e90:	6871      	ldr	r1, [r6, #4]
90028e92:	8872      	ldrh	r2, [r6, #2]
90028e94:	8835      	ldrh	r5, [r6, #0]
90028e96:	c303      	stmia	r3!, {r0, r1}
90028e98:	887b      	ldrh	r3, [r7, #2]
90028e9a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90028e9e:	4413      	add	r3, r2
90028ea0:	883a      	ldrh	r2, [r7, #0]
90028ea2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90028ea6:	442a      	add	r2, r5
90028ea8:	81e3      	strh	r3, [r4, #14]
90028eaa:	8220      	strh	r0, [r4, #16]
90028eac:	4668      	mov	r0, sp
90028eae:	81a2      	strh	r2, [r4, #12]
90028eb0:	8261      	strh	r1, [r4, #18]
90028eb2:	4639      	mov	r1, r7
90028eb4:	f7ed fffc 	bl	90016eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028eb8:	f104 000c 	add.w	r0, r4, #12
90028ebc:	f7ed ffb4 	bl	90016e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028ec0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028ec4:	f8bd 2000 	ldrh.w	r2, [sp]
90028ec8:	4640      	mov	r0, r8
90028eca:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
90028ece:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
90028ed2:	f7eb fddd 	bl	90014a90 <_ZN8touchgfx7Outline5resetEv>
90028ed6:	f9bd 3000 	ldrsh.w	r3, [sp]
90028eda:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90028ede:	4620      	mov	r0, r4
90028ee0:	015b      	lsls	r3, r3, #5
90028ee2:	64e3      	str	r3, [r4, #76]	@ 0x4c
90028ee4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028ee8:	015b      	lsls	r3, r3, #5
90028eea:	6523      	str	r3, [r4, #80]	@ 0x50
90028eec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90028ef0:	015b      	lsls	r3, r3, #5
90028ef2:	6563      	str	r3, [r4, #84]	@ 0x54
90028ef4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90028ef8:	015b      	lsls	r3, r3, #5
90028efa:	65a3      	str	r3, [r4, #88]	@ 0x58
90028efc:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90028f00:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90028f04:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90028f08:	b002      	add	sp, #8
90028f0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028f0e:	bf00      	nop
90028f10:	9002dc84 	.word	0x9002dc84

90028f14 <_ZN8touchgfx6Canvas5closeEv>:
90028f14:	b538      	push	{r3, r4, r5, lr}
90028f16:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90028f1a:	4604      	mov	r4, r0
90028f1c:	b193      	cbz	r3, 90028f44 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028f1e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90028f22:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90028f26:	4213      	tst	r3, r2
90028f28:	d10c      	bne.n	90028f44 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028f2a:	f100 0514 	add.w	r5, r0, #20
90028f2e:	b123      	cbz	r3, 90028f3a <_ZN8touchgfx6Canvas5closeEv+0x26>
90028f30:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90028f34:	4628      	mov	r0, r5
90028f36:	f7ff fea3 	bl	90028c80 <_ZN8touchgfx10Rasterizer6lineToEii>
90028f3a:	4628      	mov	r0, r5
90028f3c:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90028f40:	f7ff fe9e 	bl	90028c80 <_ZN8touchgfx10Rasterizer6lineToEii>
90028f44:	2300      	movs	r3, #0
90028f46:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028f4a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90028f4e:	4298      	cmp	r0, r3
90028f50:	bf34      	ite	cc
90028f52:	2000      	movcc	r0, #0
90028f54:	2001      	movcs	r0, #1
90028f56:	bd38      	pop	{r3, r4, r5, pc}

90028f58 <_ZN8touchgfx6Canvas6renderEh>:
90028f58:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028f5c:	7a85      	ldrb	r5, [r0, #10]
90028f5e:	4604      	mov	r4, r0
90028f60:	4369      	muls	r1, r5
90028f62:	1c4d      	adds	r5, r1, #1
90028f64:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90028f68:	122d      	asrs	r5, r5, #8
90028f6a:	f000 8098 	beq.w	9002909e <_ZN8touchgfx6Canvas6renderEh+0x146>
90028f6e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90028f72:	2b00      	cmp	r3, #0
90028f74:	f000 8093 	beq.w	9002909e <_ZN8touchgfx6Canvas6renderEh+0x146>
90028f78:	f7ff ffcc 	bl	90028f14 <_ZN8touchgfx6Canvas5closeEv>
90028f7c:	4607      	mov	r7, r0
90028f7e:	2800      	cmp	r0, #0
90028f80:	d045      	beq.n	9002900e <_ZN8touchgfx6Canvas6renderEh+0xb6>
90028f82:	6860      	ldr	r0, [r4, #4]
90028f84:	4e47      	ldr	r6, [pc, #284]	@ (900290a4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90028f86:	6803      	ldr	r3, [r0, #0]
90028f88:	6837      	ldr	r7, [r6, #0]
90028f8a:	689b      	ldr	r3, [r3, #8]
90028f8c:	4798      	blx	r3
90028f8e:	4601      	mov	r1, r0
90028f90:	4638      	mov	r0, r7
90028f92:	f7e8 ff23 	bl	90011ddc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90028f96:	4607      	mov	r7, r0
90028f98:	f7e8 fab6 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90028f9c:	6803      	ldr	r3, [r0, #0]
90028f9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028fa0:	4798      	blx	r3
90028fa2:	4680      	mov	r8, r0
90028fa4:	f7e8 fab0 	bl	90011508 <_ZN8touchgfx3HAL3lcdEv>
90028fa8:	6803      	ldr	r3, [r0, #0]
90028faa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028fac:	4798      	blx	r3
90028fae:	280b      	cmp	r0, #11
90028fb0:	d85a      	bhi.n	90029068 <_ZN8touchgfx6Canvas6renderEh+0x110>
90028fb2:	e8df f000 	tbb	[pc, r0]
90028fb6:	5b50      	.short	0x5b50
90028fb8:	3059066b 	.word	0x3059066b
90028fbc:	64646440 	.word	0x64646440
90028fc0:	6464      	.short	0x6464
90028fc2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028fc6:	2208      	movs	r2, #8
90028fc8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028fcc:	fb91 f2f2 	sdiv	r2, r1, r2
90028fd0:	fb08 2303 	mla	r3, r8, r3, r2
90028fd4:	441f      	add	r7, r3
90028fd6:	424b      	negs	r3, r1
90028fd8:	f001 0107 	and.w	r1, r1, #7
90028fdc:	f003 0307 	and.w	r3, r3, #7
90028fe0:	bf58      	it	pl
90028fe2:	4259      	negpl	r1, r3
90028fe4:	b2c9      	uxtb	r1, r1
90028fe6:	b2ed      	uxtb	r5, r5
90028fe8:	463a      	mov	r2, r7
90028fea:	fa0f f388 	sxth.w	r3, r8
90028fee:	f104 0014 	add.w	r0, r4, #20
90028ff2:	e9cd 1500 	strd	r1, r5, [sp]
90028ff6:	6861      	ldr	r1, [r4, #4]
90028ff8:	f7ff fe4e 	bl	90028c98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90028ffc:	4607      	mov	r7, r0
90028ffe:	6860      	ldr	r0, [r4, #4]
90029000:	6803      	ldr	r3, [r0, #0]
90029002:	691b      	ldr	r3, [r3, #16]
90029004:	4798      	blx	r3
90029006:	6830      	ldr	r0, [r6, #0]
90029008:	6803      	ldr	r3, [r0, #0]
9002900a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002900c:	4798      	blx	r3
9002900e:	4638      	mov	r0, r7
90029010:	b002      	add	sp, #8
90029012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029016:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002901a:	2204      	movs	r2, #4
9002901c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029020:	fb91 f2f2 	sdiv	r2, r1, r2
90029024:	fb08 2303 	mla	r3, r8, r3, r2
90029028:	441f      	add	r7, r3
9002902a:	424b      	negs	r3, r1
9002902c:	f001 0103 	and.w	r1, r1, #3
90029030:	f003 0303 	and.w	r3, r3, #3
90029034:	e7d4      	b.n	90028fe0 <_ZN8touchgfx6Canvas6renderEh+0x88>
90029036:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002903a:	2202      	movs	r2, #2
9002903c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029040:	2900      	cmp	r1, #0
90029042:	fb91 f2f2 	sdiv	r2, r1, r2
90029046:	f001 0101 	and.w	r1, r1, #1
9002904a:	fb08 2303 	mla	r3, r8, r3, r2
9002904e:	bfb8      	it	lt
90029050:	4249      	neglt	r1, r1
90029052:	441f      	add	r7, r3
90029054:	e7c6      	b.n	90028fe4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029056:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002905a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002905e:	fb08 f303 	mul.w	r3, r8, r3
90029062:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90029066:	441f      	add	r7, r3
90029068:	2100      	movs	r1, #0
9002906a:	e7bc      	b.n	90028fe6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002906c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029070:	2103      	movs	r1, #3
90029072:	fb08 f203 	mul.w	r2, r8, r3
90029076:	89a3      	ldrh	r3, [r4, #12]
90029078:	fb13 2301 	smlabb	r3, r3, r1, r2
9002907c:	e7f3      	b.n	90029066 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002907e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029082:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029086:	fb08 2303 	mla	r3, r8, r3, r2
9002908a:	e7ec      	b.n	90029066 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002908c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029090:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029094:	fb08 f303 	mul.w	r3, r8, r3
90029098:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002909c:	e7e3      	b.n	90029066 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002909e:	2701      	movs	r7, #1
900290a0:	e7b5      	b.n	9002900e <_ZN8touchgfx6Canvas6renderEh+0xb6>
900290a2:	bf00      	nop
900290a4:	24021844 	.word	0x24021844

900290a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900290a8:	4b06      	ldr	r3, [pc, #24]	@ (900290c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900290aa:	b510      	push	{r4, lr}
900290ac:	781b      	ldrb	r3, [r3, #0]
900290ae:	2b01      	cmp	r3, #1
900290b0:	d107      	bne.n	900290c2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900290b2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900290b6:	680b      	ldr	r3, [r1, #0]
900290b8:	6814      	ldr	r4, [r2, #0]
900290ba:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900290be:	6013      	str	r3, [r2, #0]
900290c0:	600c      	str	r4, [r1, #0]
900290c2:	bd10      	pop	{r4, pc}
900290c4:	2402183c 	.word	0x2402183c

900290c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900290c8:	b513      	push	{r0, r1, r4, lr}
900290ca:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900290ce:	4604      	mov	r4, r0
900290d0:	e9cd 2100 	strd	r2, r1, [sp]
900290d4:	b9a3      	cbnz	r3, 90029100 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900290d6:	466a      	mov	r2, sp
900290d8:	a901      	add	r1, sp, #4
900290da:	4620      	mov	r0, r4
900290dc:	f7ff ffe4 	bl	900290a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900290e0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900290e2:	9901      	ldr	r1, [sp, #4]
900290e4:	9a00      	ldr	r2, [sp, #0]
900290e6:	1ac9      	subs	r1, r1, r3
900290e8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900290ea:	1ad2      	subs	r2, r2, r3
900290ec:	9101      	str	r1, [sp, #4]
900290ee:	2a00      	cmp	r2, #0
900290f0:	9200      	str	r2, [sp, #0]
900290f2:	da0b      	bge.n	9002910c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900290f4:	2301      	movs	r3, #1
900290f6:	2900      	cmp	r1, #0
900290f8:	da0e      	bge.n	90029118 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900290fa:	f043 0304 	orr.w	r3, r3, #4
900290fe:	e013      	b.n	90029128 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90029100:	f7ff ff08 	bl	90028f14 <_ZN8touchgfx6Canvas5closeEv>
90029104:	2800      	cmp	r0, #0
90029106:	d1e6      	bne.n	900290d6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029108:	b002      	add	sp, #8
9002910a:	bd10      	pop	{r4, pc}
9002910c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002910e:	429a      	cmp	r2, r3
90029110:	bfac      	ite	ge
90029112:	2302      	movge	r3, #2
90029114:	2300      	movlt	r3, #0
90029116:	e7ee      	b.n	900290f6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029118:	6d60      	ldr	r0, [r4, #84]	@ 0x54
9002911a:	4281      	cmp	r1, r0
9002911c:	bfac      	ite	ge
9002911e:	2008      	movge	r0, #8
90029120:	2000      	movlt	r0, #0
90029122:	4318      	orrs	r0, r3
90029124:	b2c3      	uxtb	r3, r0
90029126:	b158      	cbz	r0, 90029140 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029128:	2200      	movs	r2, #0
9002912a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002912e:	9901      	ldr	r1, [sp, #4]
90029130:	9a00      	ldr	r2, [sp, #0]
90029132:	66e1      	str	r1, [r4, #108]	@ 0x6c
90029134:	6722      	str	r2, [r4, #112]	@ 0x70
90029136:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
9002913a:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002913e:	e7e3      	b.n	90029108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90029140:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029144:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029148:	4298      	cmp	r0, r3
9002914a:	d803      	bhi.n	90029154 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002914c:	f104 0014 	add.w	r0, r4, #20
90029150:	f7ec f98e 	bl	90015470 <_ZN8touchgfx7Outline6moveToEii>
90029154:	2301      	movs	r3, #1
90029156:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002915a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002915e:	2300      	movs	r3, #0
90029160:	e7e5      	b.n	9002912e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90029162 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90029162:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029164:	ab02      	add	r3, sp, #8
90029166:	4604      	mov	r4, r0
90029168:	9101      	str	r1, [sp, #4]
9002916a:	a901      	add	r1, sp, #4
9002916c:	f843 2d08 	str.w	r2, [r3, #-8]!
90029170:	461a      	mov	r2, r3
90029172:	f7ff ff99 	bl	900290a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029176:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90029178:	9901      	ldr	r1, [sp, #4]
9002917a:	9a00      	ldr	r2, [sp, #0]
9002917c:	1ac9      	subs	r1, r1, r3
9002917e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029180:	1ad2      	subs	r2, r2, r3
90029182:	9101      	str	r1, [sp, #4]
90029184:	2a00      	cmp	r2, #0
90029186:	9200      	str	r2, [sp, #0]
90029188:	db1c      	blt.n	900291c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002918a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002918c:	429a      	cmp	r2, r3
9002918e:	bfac      	ite	ge
90029190:	2002      	movge	r0, #2
90029192:	2000      	movlt	r0, #0
90029194:	2900      	cmp	r1, #0
90029196:	db17      	blt.n	900291c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029198:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9002919a:	4299      	cmp	r1, r3
9002919c:	bfac      	ite	ge
9002919e:	2308      	movge	r3, #8
900291a0:	2300      	movlt	r3, #0
900291a2:	4303      	orrs	r3, r0
900291a4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
900291a8:	b2dd      	uxtb	r5, r3
900291aa:	b978      	cbnz	r0, 900291cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900291ac:	f104 0014 	add.w	r0, r4, #20
900291b0:	f7ff fd66 	bl	90028c80 <_ZN8touchgfx10Rasterizer6lineToEii>
900291b4:	9b01      	ldr	r3, [sp, #4]
900291b6:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
900291ba:	6623      	str	r3, [r4, #96]	@ 0x60
900291bc:	9b00      	ldr	r3, [sp, #0]
900291be:	6663      	str	r3, [r4, #100]	@ 0x64
900291c0:	b002      	add	sp, #8
900291c2:	bd70      	pop	{r4, r5, r6, pc}
900291c4:	2001      	movs	r0, #1
900291c6:	e7e5      	b.n	90029194 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900291c8:	2304      	movs	r3, #4
900291ca:	e7ea      	b.n	900291a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900291cc:	b113      	cbz	r3, 900291d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900291ce:	ea10 0305 	ands.w	r3, r0, r5
900291d2:	d11c      	bne.n	9002920e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
900291d4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
900291d8:	f104 0614 	add.w	r6, r4, #20
900291dc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
900291e0:	b98b      	cbnz	r3, 90029206 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
900291e2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
900291e6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
900291ea:	4298      	cmp	r0, r3
900291ec:	d802      	bhi.n	900291f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
900291ee:	4630      	mov	r0, r6
900291f0:	f7ec f93e 	bl	90015470 <_ZN8touchgfx7Outline6moveToEii>
900291f4:	2301      	movs	r3, #1
900291f6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900291fa:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
900291fe:	4630      	mov	r0, r6
90029200:	e9dd 2100 	ldrd	r2, r1, [sp]
90029204:	e7d4      	b.n	900291b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029206:	4630      	mov	r0, r6
90029208:	f7ff fd3a 	bl	90028c80 <_ZN8touchgfx10Rasterizer6lineToEii>
9002920c:	e7f7      	b.n	900291fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002920e:	461d      	mov	r5, r3
90029210:	e7d0      	b.n	900291b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029214 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90029214:	b538      	push	{r3, r4, r5, lr}
90029216:	ed2d 8b10 	vpush	{d8-d15}
9002921a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002921e:	4605      	mov	r5, r0
90029220:	eeb0 ca40 	vmov.f32	s24, s0
90029224:	460c      	mov	r4, r1
90029226:	eef0 ca60 	vmov.f32	s25, s1
9002922a:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90029388 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002922e:	eeb0 da41 	vmov.f32	s26, s2
90029232:	eef0 da61 	vmov.f32	s27, s3
90029236:	eeb0 ea42 	vmov.f32	s28, s4
9002923a:	eef0 ea62 	vmov.f32	s29, s5
9002923e:	eef0 aa6b 	vmov.f32	s21, s23
90029242:	2c08      	cmp	r4, #8
90029244:	d86e      	bhi.n	90029324 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90029246:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002924a:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002924e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90029252:	ee3e 7aec 	vsub.f32	s14, s29, s25
90029256:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002925a:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002925e:	ee7c faad 	vadd.f32	s31, s25, s27
90029262:	eee6 7a07 	vfma.f32	s15, s12, s14
90029266:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002926a:	ee3d aaae 	vadd.f32	s20, s27, s29
9002926e:	ee2f fa2b 	vmul.f32	s30, s30, s23
90029272:	ee6f faab 	vmul.f32	s31, s31, s23
90029276:	ee69 9aab 	vmul.f32	s19, s19, s23
9002927a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002927e:	ee2a aa2b 	vmul.f32	s20, s20, s23
90029282:	ee7f 8a29 	vadd.f32	s17, s30, s19
90029286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002928a:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002928e:	ee68 8aab 	vmul.f32	s17, s17, s23
90029292:	bf48      	it	mi
90029294:	eef1 7a67 	vnegmi.f32	s15, s15
90029298:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002929c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
900292a0:	eef4 7acb 	vcmpe.f32	s15, s22
900292a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292a8:	dd3f      	ble.n	9002932a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
900292aa:	ee27 7a07 	vmul.f32	s14, s14, s14
900292ae:	ee67 7aa7 	vmul.f32	s15, s15, s15
900292b2:	eea6 7aa6 	vfma.f32	s14, s13, s13
900292b6:	ee27 7a06 	vmul.f32	s14, s14, s12
900292ba:	eef4 7ac7 	vcmpe.f32	s15, s14
900292be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292c2:	d847      	bhi.n	90029354 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
900292c4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
900292c8:	ee3e 0aed 	vsub.f32	s0, s29, s27
900292cc:	f000 fa57 	bl	9002977e <atan2f>
900292d0:	eeb0 8a40 	vmov.f32	s16, s0
900292d4:	ee7d 0a4c 	vsub.f32	s1, s26, s24
900292d8:	ee3d 0aec 	vsub.f32	s0, s27, s25
900292dc:	f000 fa4f 	bl	9002977e <atan2f>
900292e0:	ee38 0a40 	vsub.f32	s0, s16, s0
900292e4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002938c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
900292e8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900292ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292f0:	bf48      	it	mi
900292f2:	eeb1 0a40 	vnegmi.f32	s0, s0
900292f6:	eeb4 0ae7 	vcmpe.f32	s0, s15
900292fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292fe:	bfa4      	itt	ge
90029300:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90029390 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90029304:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029308:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90029394 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
9002930c:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029314:	d51e      	bpl.n	90029354 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029316:	eef0 0a49 	vmov.f32	s1, s18
9002931a:	4628      	mov	r0, r5
9002931c:	eeb0 0a68 	vmov.f32	s0, s17
90029320:	f7e9 ff56 	bl	900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029324:	ecbd 8b10 	vpop	{d8-d15}
90029328:	bd38      	pop	{r3, r4, r5, pc}
9002932a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002932e:	eeb0 7a68 	vmov.f32	s14, s17
90029332:	eef0 6a49 	vmov.f32	s13, s18
90029336:	eea7 7aea 	vfms.f32	s14, s15, s21
9002933a:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002933e:	eee7 6aea 	vfms.f32	s13, s15, s21
90029342:	ee66 7aa6 	vmul.f32	s15, s13, s13
90029346:	eee7 7a07 	vfma.f32	s15, s14, s14
9002934a:	eef4 7ac6 	vcmpe.f32	s15, s12
9002934e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029352:	d9e0      	bls.n	90029316 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029354:	3401      	adds	r4, #1
90029356:	eef0 0a6c 	vmov.f32	s1, s25
9002935a:	eeb0 0a4c 	vmov.f32	s0, s24
9002935e:	4628      	mov	r0, r5
90029360:	4621      	mov	r1, r4
90029362:	eef0 2a49 	vmov.f32	s5, s18
90029366:	eeb0 2a68 	vmov.f32	s4, s17
9002936a:	eef0 1a6f 	vmov.f32	s3, s31
9002936e:	eeb0 1a4f 	vmov.f32	s2, s30
90029372:	f7ff ff4f 	bl	90029214 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90029376:	eef0 da4a 	vmov.f32	s27, s20
9002937a:	eeb0 da69 	vmov.f32	s26, s19
9002937e:	eef0 ca49 	vmov.f32	s25, s18
90029382:	eeb0 ca68 	vmov.f32	s24, s17
90029386:	e75c      	b.n	90029242 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90029388:	2edbe6ff 	.word	0x2edbe6ff
9002938c:	40490fdb 	.word	0x40490fdb
90029390:	40c90fdb 	.word	0x40c90fdb
90029394:	3dcccccd 	.word	0x3dcccccd

90029398 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90029398:	b530      	push	{r4, r5, lr}
9002939a:	ed2d 8b10 	vpush	{d8-d15}
9002939e:	eef0 8a40 	vmov.f32	s17, s0
900293a2:	b085      	sub	sp, #20
900293a4:	eef0 9a60 	vmov.f32	s19, s1
900293a8:	4604      	mov	r4, r0
900293aa:	eef0 fa41 	vmov.f32	s31, s2
900293ae:	460d      	mov	r5, r1
900293b0:	eeb0 fa61 	vmov.f32	s30, s3
900293b4:	eef0 ba42 	vmov.f32	s23, s4
900293b8:	eeb0 ca62 	vmov.f32	s24, s5
900293bc:	eef0 aa43 	vmov.f32	s21, s6
900293c0:	eeb0 ba63 	vmov.f32	s22, s7
900293c4:	2d08      	cmp	r5, #8
900293c6:	f200 8113 	bhi.w	900295f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
900293ca:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900293ce:	ee3b 6aaa 	vadd.f32	s12, s23, s21
900293d2:	ee7f 6aab 	vadd.f32	s13, s31, s23
900293d6:	ee38 daaf 	vadd.f32	s26, s17, s31
900293da:	ee26 6a27 	vmul.f32	s12, s12, s15
900293de:	ee7c ca0b 	vadd.f32	s25, s24, s22
900293e2:	ee2d da27 	vmul.f32	s26, s26, s15
900293e6:	ed8d 6a01 	vstr	s12, [sp, #4]
900293ea:	eea6 6aa7 	vfma.f32	s12, s13, s15
900293ee:	ee6c caa7 	vmul.f32	s25, s25, s15
900293f2:	eeb0 ea4d 	vmov.f32	s28, s26
900293f6:	ee79 da8f 	vadd.f32	s27, s19, s30
900293fa:	ee3f 7a0c 	vadd.f32	s14, s30, s24
900293fe:	eea6 eaa7 	vfma.f32	s28, s13, s15
90029402:	ee66 6a27 	vmul.f32	s13, s12, s15
90029406:	ee6d daa7 	vmul.f32	s27, s27, s15
9002940a:	edcd 6a03 	vstr	s13, [sp, #12]
9002940e:	eef0 6a6c 	vmov.f32	s13, s25
90029412:	eef0 ea6d 	vmov.f32	s29, s27
90029416:	ee2e ea27 	vmul.f32	s28, s28, s15
9002941a:	eee7 6a27 	vfma.f32	s13, s14, s15
9002941e:	eee7 ea27 	vfma.f32	s29, s14, s15
90029422:	ee26 7aa7 	vmul.f32	s14, s13, s15
90029426:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002942a:	eef0 6a67 	vmov.f32	s13, s15
9002942e:	ed8d 7a02 	vstr	s14, [sp, #8]
90029432:	ed9d 7a03 	vldr	s14, [sp, #12]
90029436:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002943a:	ed9d 7a02 	vldr	s14, [sp, #8]
9002943e:	ee3e aa87 	vadd.f32	s20, s29, s14
90029442:	ee29 9a27 	vmul.f32	s18, s18, s15
90029446:	ee2a aa27 	vmul.f32	s20, s20, s15
9002944a:	2d00      	cmp	r5, #0
9002944c:	f000 810b 	beq.w	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029450:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029454:	eddf 4a95 	vldr	s9, [pc, #596]	@ 900296ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029458:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002945c:	ee7b 7a69 	vsub.f32	s15, s22, s19
90029460:	ee3f 6aea 	vsub.f32	s12, s31, s21
90029464:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90029468:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002946c:	eea6 7a27 	vfma.f32	s14, s12, s15
90029470:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90029474:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90029478:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002947c:	eea5 6a27 	vfma.f32	s12, s10, s15
90029480:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90029484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029488:	bf48      	it	mi
9002948a:	eeb1 7a47 	vnegmi.f32	s14, s14
9002948e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90029492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029496:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002949a:	bf48      	it	mi
9002949c:	eeb1 6a46 	vnegmi.f32	s12, s12
900294a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294a4:	f340 80a8 	ble.w	900295f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
900294a8:	eeb4 6ae4 	vcmpe.f32	s12, s9
900294ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294b0:	dd5a      	ble.n	90029568 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
900294b2:	ee65 5aa5 	vmul.f32	s11, s11, s11
900294b6:	ee37 7a06 	vadd.f32	s14, s14, s12
900294ba:	eee7 5aa7 	vfma.f32	s11, s15, s15
900294be:	ee27 7a07 	vmul.f32	s14, s14, s14
900294c2:	ee65 7a85 	vmul.f32	s15, s11, s10
900294c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
900294ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294ce:	f200 80ca 	bhi.w	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900294d2:	ee7b 0aef 	vsub.f32	s1, s23, s31
900294d6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
900294da:	f000 f950 	bl	9002977e <atan2f>
900294de:	eeb0 8a40 	vmov.f32	s16, s0
900294e2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
900294e6:	ee3f 0a69 	vsub.f32	s0, s30, s19
900294ea:	f000 f948 	bl	9002977e <atan2f>
900294ee:	ee38 fa40 	vsub.f32	s30, s16, s0
900294f2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
900294f6:	ee3b 0a4c 	vsub.f32	s0, s22, s24
900294fa:	eeb5 fac0 	vcmpe.f32	s30, #0.0
900294fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029502:	bf48      	it	mi
90029504:	eeb1 fa4f 	vnegmi.f32	s30, s30
90029508:	f000 f939 	bl	9002977e <atan2f>
9002950c:	ee30 0a48 	vsub.f32	s0, s0, s16
90029510:	eddf 7a67 	vldr	s15, [pc, #412]	@ 900296b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029514:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002951c:	eeb4 fae7 	vcmpe.f32	s30, s15
90029520:	eddf 7a63 	vldr	s15, [pc, #396]	@ 900296b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029524:	bf48      	it	mi
90029526:	eeb1 0a40 	vnegmi.f32	s0, s0
9002952a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002952e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029532:	eddf 7a60 	vldr	s15, [pc, #384]	@ 900296b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029536:	bfa4      	itt	ge
90029538:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 900296b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002953c:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90029540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029544:	bfa4      	itt	ge
90029546:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 900296b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002954a:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002954e:	ee3f 0a00 	vadd.f32	s0, s30, s0
90029552:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002955a:	f140 8084 	bpl.w	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002955e:	eef0 0a4a 	vmov.f32	s1, s20
90029562:	eeb0 0a49 	vmov.f32	s0, s18
90029566:	e040      	b.n	900295ea <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90029568:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002956c:	ee27 7a07 	vmul.f32	s14, s14, s14
90029570:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029574:	ee67 7a85 	vmul.f32	s15, s15, s10
90029578:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002957c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029580:	d871      	bhi.n	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029582:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029586:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002958a:	f000 f8f8 	bl	9002977e <atan2f>
9002958e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029592:	eeb0 8a40 	vmov.f32	s16, s0
90029596:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002959a:	f000 f8f0 	bl	9002977e <atan2f>
9002959e:	ee38 0a40 	vsub.f32	s0, s16, s0
900295a2:	eddf 7a43 	vldr	s15, [pc, #268]	@ 900296b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900295a6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900295aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900295ae:	bf48      	it	mi
900295b0:	eeb1 0a40 	vnegmi.f32	s0, s0
900295b4:	eeb4 0ae7 	vcmpe.f32	s0, s15
900295b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900295bc:	bfa4      	itt	ge
900295be:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 900296b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
900295c2:	ee37 0ac0 	vsubge.f32	s0, s15, s0
900295c6:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 900296b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
900295ca:	eeb4 0ae7 	vcmpe.f32	s0, s15
900295ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900295d2:	d548      	bpl.n	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900295d4:	eef0 0a4f 	vmov.f32	s1, s30
900295d8:	4620      	mov	r0, r4
900295da:	eeb0 0a6f 	vmov.f32	s0, s31
900295de:	f7e9 fdf7 	bl	900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900295e2:	eef0 0a4c 	vmov.f32	s1, s24
900295e6:	eeb0 0a6b 	vmov.f32	s0, s23
900295ea:	4620      	mov	r0, r4
900295ec:	f7e9 fdf0 	bl	900131d0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900295f0:	b005      	add	sp, #20
900295f2:	ecbd 8b10 	vpop	{d8-d15}
900295f6:	bd30      	pop	{r4, r5, pc}
900295f8:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 900296ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
900295fc:	eeb4 6ac7 	vcmpe.f32	s12, s14
90029600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029604:	dd19      	ble.n	9002963a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90029606:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002960a:	ee26 7a06 	vmul.f32	s14, s12, s12
9002960e:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029612:	ee67 7a85 	vmul.f32	s15, s15, s10
90029616:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002961a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002961e:	d822      	bhi.n	90029666 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029620:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029624:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029628:	f000 f8a9 	bl	9002977e <atan2f>
9002962c:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029630:	eeb0 8a40 	vmov.f32	s16, s0
90029634:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029638:	e7af      	b.n	9002959a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002963a:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002963e:	eeb0 7a49 	vmov.f32	s14, s18
90029642:	eeb0 6a4a 	vmov.f32	s12, s20
90029646:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002964a:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002964e:	eea7 6ae6 	vfms.f32	s12, s15, s13
90029652:	ee66 7a06 	vmul.f32	s15, s12, s12
90029656:	eee7 7a07 	vfma.f32	s15, s14, s14
9002965a:	eef4 7ac5 	vcmpe.f32	s15, s10
9002965e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029662:	f67f af7c 	bls.w	9002955e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90029666:	3501      	adds	r5, #1
90029668:	eef0 0a69 	vmov.f32	s1, s19
9002966c:	eeb0 0a68 	vmov.f32	s0, s17
90029670:	4620      	mov	r0, r4
90029672:	4629      	mov	r1, r5
90029674:	eef0 3a4a 	vmov.f32	s7, s20
90029678:	eeb0 3a49 	vmov.f32	s6, s18
9002967c:	eef0 2a6e 	vmov.f32	s5, s29
90029680:	eeb0 2a4e 	vmov.f32	s4, s28
90029684:	eef0 1a6d 	vmov.f32	s3, s27
90029688:	eeb0 1a4d 	vmov.f32	s2, s26
9002968c:	f7ff fe84 	bl	90029398 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90029690:	eeb0 ca6c 	vmov.f32	s24, s25
90029694:	eddd ba01 	vldr	s23, [sp, #4]
90029698:	eef0 9a4a 	vmov.f32	s19, s20
9002969c:	ed9d fa02 	vldr	s30, [sp, #8]
900296a0:	eef0 8a49 	vmov.f32	s17, s18
900296a4:	eddd fa03 	vldr	s31, [sp, #12]
900296a8:	e68c      	b.n	900293c4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
900296aa:	bf00      	nop
900296ac:	2edbe6ff 	.word	0x2edbe6ff
900296b0:	40490fdb 	.word	0x40490fdb
900296b4:	3dcccccd 	.word	0x3dcccccd
900296b8:	40c90fdb 	.word	0x40c90fdb

900296bc <_ZN8touchgfx6CanvasD1Ev>:
900296bc:	4b04      	ldr	r3, [pc, #16]	@ (900296d0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
900296be:	b510      	push	{r4, lr}
900296c0:	4604      	mov	r4, r0
900296c2:	f840 3b14 	str.w	r3, [r0], #20
900296c6:	f7eb f9db 	bl	90014a80 <_ZN8touchgfx7OutlineD1Ev>
900296ca:	4620      	mov	r0, r4
900296cc:	bd10      	pop	{r4, pc}
900296ce:	bf00      	nop
900296d0:	9002dc84 	.word	0x9002dc84

900296d4 <_ZN8touchgfx6CanvasD0Ev>:
900296d4:	b510      	push	{r4, lr}
900296d6:	4604      	mov	r4, r0
900296d8:	f7ff fff0 	bl	900296bc <_ZN8touchgfx6CanvasD1Ev>
900296dc:	2174      	movs	r1, #116	@ 0x74
900296de:	4620      	mov	r0, r4
900296e0:	f000 f826 	bl	90029730 <_ZdlPvj>
900296e4:	4620      	mov	r0, r4
900296e6:	bd10      	pop	{r4, pc}

900296e8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
900296e8:	790b      	ldrb	r3, [r1, #4]
900296ea:	2b00      	cmp	r3, #0
900296ec:	bf0c      	ite	eq
900296ee:	2301      	moveq	r3, #1
900296f0:	2300      	movne	r3, #0
900296f2:	b570      	push	{r4, r5, r6, lr}
900296f4:	4604      	mov	r4, r0
900296f6:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
900296fa:	460e      	mov	r6, r1
900296fc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90029700:	d109      	bne.n	90029716 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029702:	b14d      	cbz	r5, 90029718 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029704:	7933      	ldrb	r3, [r6, #4]
90029706:	2b01      	cmp	r3, #1
90029708:	d10c      	bne.n	90029724 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002970a:	6823      	ldr	r3, [r4, #0]
9002970c:	4620      	mov	r0, r4
9002970e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90029710:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029714:	4718      	bx	r3
90029716:	b12d      	cbz	r5, 90029724 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029718:	6823      	ldr	r3, [r4, #0]
9002971a:	4620      	mov	r0, r4
9002971c:	695b      	ldr	r3, [r3, #20]
9002971e:	4798      	blx	r3
90029720:	2d00      	cmp	r5, #0
90029722:	d1ef      	bne.n	90029704 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029724:	bd70      	pop	{r4, r5, r6, pc}

90029726 <__aeabi_atexit>:
90029726:	460b      	mov	r3, r1
90029728:	4601      	mov	r1, r0
9002972a:	4618      	mov	r0, r3
9002972c:	f000 bc5a 	b.w	90029fe4 <__cxa_atexit>

90029730 <_ZdlPvj>:
90029730:	f000 b812 	b.w	90029758 <_ZdlPv>

90029734 <__cxa_guard_acquire>:
90029734:	6802      	ldr	r2, [r0, #0]
90029736:	07d2      	lsls	r2, r2, #31
90029738:	4603      	mov	r3, r0
9002973a:	d405      	bmi.n	90029748 <__cxa_guard_acquire+0x14>
9002973c:	7842      	ldrb	r2, [r0, #1]
9002973e:	b102      	cbz	r2, 90029742 <__cxa_guard_acquire+0xe>
90029740:	deff      	udf	#255	@ 0xff
90029742:	2001      	movs	r0, #1
90029744:	7058      	strb	r0, [r3, #1]
90029746:	4770      	bx	lr
90029748:	2000      	movs	r0, #0
9002974a:	4770      	bx	lr

9002974c <__cxa_guard_release>:
9002974c:	2301      	movs	r3, #1
9002974e:	6003      	str	r3, [r0, #0]
90029750:	4770      	bx	lr

90029752 <__cxa_pure_virtual>:
90029752:	b508      	push	{r3, lr}
90029754:	f000 f80e 	bl	90029774 <_ZSt9terminatev>

90029758 <_ZdlPv>:
90029758:	f000 bb8e 	b.w	90029e78 <free>

9002975c <_ZN10__cxxabiv111__terminateEPFvvE>:
9002975c:	b508      	push	{r3, lr}
9002975e:	4780      	blx	r0
90029760:	f000 fb57 	bl	90029e12 <abort>

90029764 <_ZSt13get_terminatev>:
90029764:	4b02      	ldr	r3, [pc, #8]	@ (90029770 <_ZSt13get_terminatev+0xc>)
90029766:	6818      	ldr	r0, [r3, #0]
90029768:	f3bf 8f5b 	dmb	ish
9002976c:	4770      	bx	lr
9002976e:	bf00      	nop
90029770:	24000104 	.word	0x24000104

90029774 <_ZSt9terminatev>:
90029774:	b508      	push	{r3, lr}
90029776:	f7ff fff5 	bl	90029764 <_ZSt13get_terminatev>
9002977a:	f7ff ffef 	bl	9002975c <_ZN10__cxxabiv111__terminateEPFvvE>

9002977e <atan2f>:
9002977e:	f000 b9cf 	b.w	90029b20 <__ieee754_atan2f>
	...

90029784 <sqrtf>:
90029784:	b508      	push	{r3, lr}
90029786:	ed2d 8b02 	vpush	{d8}
9002978a:	eeb0 8a40 	vmov.f32	s16, s0
9002978e:	f000 f9c4 	bl	90029b1a <__ieee754_sqrtf>
90029792:	eeb4 8a48 	vcmp.f32	s16, s16
90029796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002979a:	d60c      	bvs.n	900297b6 <sqrtf+0x32>
9002979c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 900297bc <sqrtf+0x38>
900297a0:	eeb4 8ae8 	vcmpe.f32	s16, s17
900297a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297a8:	d505      	bpl.n	900297b6 <sqrtf+0x32>
900297aa:	f000 fee7 	bl	9002a57c <__errno>
900297ae:	ee88 0aa8 	vdiv.f32	s0, s17, s17
900297b2:	2321      	movs	r3, #33	@ 0x21
900297b4:	6003      	str	r3, [r0, #0]
900297b6:	ecbd 8b02 	vpop	{d8}
900297ba:	bd08      	pop	{r3, pc}
900297bc:	00000000 	.word	0x00000000

900297c0 <sinf_poly>:
900297c0:	07cb      	lsls	r3, r1, #31
900297c2:	d412      	bmi.n	900297ea <sinf_poly+0x2a>
900297c4:	ee21 5b00 	vmul.f64	d5, d1, d0
900297c8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
900297cc:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
900297d0:	eea6 7b01 	vfma.f64	d7, d6, d1
900297d4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
900297d8:	ee21 1b05 	vmul.f64	d1, d1, d5
900297dc:	eea6 0b05 	vfma.f64	d0, d6, d5
900297e0:	eea7 0b01 	vfma.f64	d0, d7, d1
900297e4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900297e8:	4770      	bx	lr
900297ea:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
900297ee:	ee21 5b01 	vmul.f64	d5, d1, d1
900297f2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900297f6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900297fa:	eea1 7b06 	vfma.f64	d7, d1, d6
900297fe:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90029802:	eea1 0b06 	vfma.f64	d0, d1, d6
90029806:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002980a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002980e:	eea5 0b06 	vfma.f64	d0, d5, d6
90029812:	e7e5      	b.n	900297e0 <sinf_poly+0x20>
90029814:	0000      	movs	r0, r0
	...

90029818 <sinf>:
90029818:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002981a:	ee10 4a10 	vmov	r4, s0
9002981e:	f3c4 530a 	ubfx	r3, r4, #20, #11
90029822:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90029826:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002982a:	eef0 7a40 	vmov.f32	s15, s0
9002982e:	d218      	bcs.n	90029862 <sinf+0x4a>
90029830:	ee26 1b06 	vmul.f64	d1, d6, d6
90029834:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029838:	d20a      	bcs.n	90029850 <sinf+0x38>
9002983a:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
9002983e:	d103      	bne.n	90029848 <sinf+0x30>
90029840:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90029844:	ed8d 1a01 	vstr	s2, [sp, #4]
90029848:	eeb0 0a67 	vmov.f32	s0, s15
9002984c:	b003      	add	sp, #12
9002984e:	bd30      	pop	{r4, r5, pc}
90029850:	483b      	ldr	r0, [pc, #236]	@ (90029940 <sinf+0x128>)
90029852:	eeb0 0b46 	vmov.f64	d0, d6
90029856:	2100      	movs	r1, #0
90029858:	b003      	add	sp, #12
9002985a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002985e:	f7ff bfaf 	b.w	900297c0 <sinf_poly>
90029862:	f240 422e 	movw	r2, #1070	@ 0x42e
90029866:	4293      	cmp	r3, r2
90029868:	d824      	bhi.n	900298b4 <sinf+0x9c>
9002986a:	4b35      	ldr	r3, [pc, #212]	@ (90029940 <sinf+0x128>)
9002986c:	ed93 7b08 	vldr	d7, [r3, #32]
90029870:	ee26 7b07 	vmul.f64	d7, d6, d7
90029874:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90029878:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002987c:	ee17 1a90 	vmov	r1, s15
90029880:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029884:	1609      	asrs	r1, r1, #24
90029886:	ee07 1a90 	vmov	s15, r1
9002988a:	f001 0203 	and.w	r2, r1, #3
9002988e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029892:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90029896:	ed92 0b00 	vldr	d0, [r2]
9002989a:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002989e:	f011 0f02 	tst.w	r1, #2
900298a2:	eea5 6b47 	vfms.f64	d6, d5, d7
900298a6:	bf08      	it	eq
900298a8:	4618      	moveq	r0, r3
900298aa:	ee26 1b06 	vmul.f64	d1, d6, d6
900298ae:	ee20 0b06 	vmul.f64	d0, d0, d6
900298b2:	e7d1      	b.n	90029858 <sinf+0x40>
900298b4:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
900298b8:	d237      	bcs.n	9002992a <sinf+0x112>
900298ba:	4922      	ldr	r1, [pc, #136]	@ (90029944 <sinf+0x12c>)
900298bc:	f3c4 6083 	ubfx	r0, r4, #26, #4
900298c0:	eb01 0280 	add.w	r2, r1, r0, lsl #2
900298c4:	f3c4 0316 	ubfx	r3, r4, #0, #23
900298c8:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900298cc:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900298d0:	6a10      	ldr	r0, [r2, #32]
900298d2:	6912      	ldr	r2, [r2, #16]
900298d4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
900298d8:	40ab      	lsls	r3, r5
900298da:	fba0 5003 	umull	r5, r0, r0, r3
900298de:	4359      	muls	r1, r3
900298e0:	fbe3 0102 	umlal	r0, r1, r3, r2
900298e4:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900298e8:	0f9d      	lsrs	r5, r3, #30
900298ea:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900298ee:	1ac9      	subs	r1, r1, r3
900298f0:	f7d6 fed4 	bl	9000069c <__aeabi_l2d>
900298f4:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900298f8:	4b11      	ldr	r3, [pc, #68]	@ (90029940 <sinf+0x128>)
900298fa:	f004 0203 	and.w	r2, r4, #3
900298fe:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029902:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 90029938 <sinf+0x120>
90029906:	ed92 0b00 	vldr	d0, [r2]
9002990a:	ec41 0b17 	vmov	d7, r0, r1
9002990e:	f014 0f02 	tst.w	r4, #2
90029912:	ee27 7b06 	vmul.f64	d7, d7, d6
90029916:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002991a:	4629      	mov	r1, r5
9002991c:	bf08      	it	eq
9002991e:	4618      	moveq	r0, r3
90029920:	ee27 1b07 	vmul.f64	d1, d7, d7
90029924:	ee20 0b07 	vmul.f64	d0, d0, d7
90029928:	e796      	b.n	90029858 <sinf+0x40>
9002992a:	b003      	add	sp, #12
9002992c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029930:	f000 b8e4 	b.w	90029afc <__math_invalidf>
90029934:	f3af 8000 	nop.w
90029938:	54442d18 	.word	0x54442d18
9002993c:	3c1921fb 	.word	0x3c1921fb
90029940:	9002dcf0 	.word	0x9002dcf0
90029944:	9002dc90 	.word	0x9002dc90

90029948 <sinf_poly>:
90029948:	07cb      	lsls	r3, r1, #31
9002994a:	d412      	bmi.n	90029972 <sinf_poly+0x2a>
9002994c:	ee21 5b00 	vmul.f64	d5, d1, d0
90029950:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029954:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029958:	eea6 7b01 	vfma.f64	d7, d6, d1
9002995c:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029960:	ee21 1b05 	vmul.f64	d1, d1, d5
90029964:	eea6 0b05 	vfma.f64	d0, d6, d5
90029968:	eea7 0b01 	vfma.f64	d0, d7, d1
9002996c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029970:	4770      	bx	lr
90029972:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90029976:	ee21 5b01 	vmul.f64	d5, d1, d1
9002997a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002997e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029982:	eea1 7b06 	vfma.f64	d7, d1, d6
90029986:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002998a:	eea1 0b06 	vfma.f64	d0, d1, d6
9002998e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029992:	ee21 1b05 	vmul.f64	d1, d1, d5
90029996:	eea5 0b06 	vfma.f64	d0, d5, d6
9002999a:	e7e5      	b.n	90029968 <sinf_poly+0x20>
9002999c:	0000      	movs	r0, r0
	...

900299a0 <cosf>:
900299a0:	b538      	push	{r3, r4, r5, lr}
900299a2:	ee10 4a10 	vmov	r4, s0
900299a6:	f3c4 530a 	ubfx	r3, r4, #20, #11
900299aa:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900299ae:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
900299b2:	d21f      	bcs.n	900299f4 <cosf+0x54>
900299b4:	ee27 7b07 	vmul.f64	d7, d7, d7
900299b8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
900299bc:	f0c0 8082 	bcc.w	90029ac4 <cosf+0x124>
900299c0:	ee27 4b07 	vmul.f64	d4, d7, d7
900299c4:	4b44      	ldr	r3, [pc, #272]	@ (90029ad8 <cosf+0x138>)
900299c6:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
900299ca:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
900299ce:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
900299d2:	eea7 6b05 	vfma.f64	d6, d7, d5
900299d6:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
900299da:	eea7 0b05 	vfma.f64	d0, d7, d5
900299de:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
900299e2:	ee27 7b04 	vmul.f64	d7, d7, d4
900299e6:	eea4 0b05 	vfma.f64	d0, d4, d5
900299ea:	eea6 0b07 	vfma.f64	d0, d6, d7
900299ee:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900299f2:	bd38      	pop	{r3, r4, r5, pc}
900299f4:	f240 422e 	movw	r2, #1070	@ 0x42e
900299f8:	4293      	cmp	r3, r2
900299fa:	d829      	bhi.n	90029a50 <cosf+0xb0>
900299fc:	4b36      	ldr	r3, [pc, #216]	@ (90029ad8 <cosf+0x138>)
900299fe:	ed93 6b08 	vldr	d6, [r3, #32]
90029a02:	ee27 6b06 	vmul.f64	d6, d7, d6
90029a06:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029a0a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029a0e:	ee16 1a90 	vmov	r1, s13
90029a12:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029a16:	1609      	asrs	r1, r1, #24
90029a18:	ee06 1a90 	vmov	s13, r1
90029a1c:	f001 0203 	and.w	r2, r1, #3
90029a20:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029a24:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029a28:	ed92 0b00 	vldr	d0, [r2]
90029a2c:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029a30:	f011 0f02 	tst.w	r1, #2
90029a34:	f081 0101 	eor.w	r1, r1, #1
90029a38:	eea5 7b46 	vfms.f64	d7, d5, d6
90029a3c:	bf08      	it	eq
90029a3e:	4618      	moveq	r0, r3
90029a40:	ee27 1b07 	vmul.f64	d1, d7, d7
90029a44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029a48:	ee20 0b07 	vmul.f64	d0, d0, d7
90029a4c:	f7ff bf7c 	b.w	90029948 <sinf_poly>
90029a50:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029a54:	d232      	bcs.n	90029abc <cosf+0x11c>
90029a56:	4921      	ldr	r1, [pc, #132]	@ (90029adc <cosf+0x13c>)
90029a58:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029a5c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029a60:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029a64:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029a68:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029a6c:	6a10      	ldr	r0, [r2, #32]
90029a6e:	6912      	ldr	r2, [r2, #16]
90029a70:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029a74:	40ab      	lsls	r3, r5
90029a76:	fba0 5003 	umull	r5, r0, r0, r3
90029a7a:	4359      	muls	r1, r3
90029a7c:	fbe3 0102 	umlal	r0, r1, r3, r2
90029a80:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029a84:	0f9d      	lsrs	r5, r3, #30
90029a86:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029a8a:	1ac9      	subs	r1, r1, r3
90029a8c:	f7d6 fe06 	bl	9000069c <__aeabi_l2d>
90029a90:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029a94:	4b10      	ldr	r3, [pc, #64]	@ (90029ad8 <cosf+0x138>)
90029a96:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90029ad0 <cosf+0x130>
90029a9a:	ec41 0b17 	vmov	d7, r0, r1
90029a9e:	f004 0203 	and.w	r2, r4, #3
90029aa2:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029aa6:	ed92 0b00 	vldr	d0, [r2]
90029aaa:	ee27 7b06 	vmul.f64	d7, d7, d6
90029aae:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029ab2:	f014 0f02 	tst.w	r4, #2
90029ab6:	f085 0101 	eor.w	r1, r5, #1
90029aba:	e7bf      	b.n	90029a3c <cosf+0x9c>
90029abc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029ac0:	f000 b81c 	b.w	90029afc <__math_invalidf>
90029ac4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90029ac8:	e793      	b.n	900299f2 <cosf+0x52>
90029aca:	bf00      	nop
90029acc:	f3af 8000 	nop.w
90029ad0:	54442d18 	.word	0x54442d18
90029ad4:	3c1921fb 	.word	0x3c1921fb
90029ad8:	9002dcf0 	.word	0x9002dcf0
90029adc:	9002dc90 	.word	0x9002dc90

90029ae0 <with_errnof>:
90029ae0:	b510      	push	{r4, lr}
90029ae2:	ed2d 8b02 	vpush	{d8}
90029ae6:	eeb0 8a40 	vmov.f32	s16, s0
90029aea:	4604      	mov	r4, r0
90029aec:	f000 fd46 	bl	9002a57c <__errno>
90029af0:	eeb0 0a48 	vmov.f32	s0, s16
90029af4:	ecbd 8b02 	vpop	{d8}
90029af8:	6004      	str	r4, [r0, #0]
90029afa:	bd10      	pop	{r4, pc}

90029afc <__math_invalidf>:
90029afc:	eef0 7a40 	vmov.f32	s15, s0
90029b00:	ee30 7a40 	vsub.f32	s14, s0, s0
90029b04:	eef4 7a67 	vcmp.f32	s15, s15
90029b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b0c:	ee87 0a07 	vdiv.f32	s0, s14, s14
90029b10:	d602      	bvs.n	90029b18 <__math_invalidf+0x1c>
90029b12:	2021      	movs	r0, #33	@ 0x21
90029b14:	f7ff bfe4 	b.w	90029ae0 <with_errnof>
90029b18:	4770      	bx	lr

90029b1a <__ieee754_sqrtf>:
90029b1a:	eeb1 0ac0 	vsqrt.f32	s0, s0
90029b1e:	4770      	bx	lr

90029b20 <__ieee754_atan2f>:
90029b20:	ee10 2a90 	vmov	r2, s1
90029b24:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90029b28:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029b2c:	b510      	push	{r4, lr}
90029b2e:	eef0 7a40 	vmov.f32	s15, s0
90029b32:	d806      	bhi.n	90029b42 <__ieee754_atan2f+0x22>
90029b34:	ee10 0a10 	vmov	r0, s0
90029b38:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90029b3c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029b40:	d904      	bls.n	90029b4c <__ieee754_atan2f+0x2c>
90029b42:	ee77 7aa0 	vadd.f32	s15, s15, s1
90029b46:	eeb0 0a67 	vmov.f32	s0, s15
90029b4a:	bd10      	pop	{r4, pc}
90029b4c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90029b50:	d103      	bne.n	90029b5a <__ieee754_atan2f+0x3a>
90029b52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029b56:	f000 b881 	b.w	90029c5c <atanf>
90029b5a:	1794      	asrs	r4, r2, #30
90029b5c:	f004 0402 	and.w	r4, r4, #2
90029b60:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
90029b64:	b93b      	cbnz	r3, 90029b76 <__ieee754_atan2f+0x56>
90029b66:	2c02      	cmp	r4, #2
90029b68:	d05c      	beq.n	90029c24 <__ieee754_atan2f+0x104>
90029b6a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029c38 <__ieee754_atan2f+0x118>
90029b6e:	2c03      	cmp	r4, #3
90029b70:	fe47 7a00 	vseleq.f32	s15, s14, s0
90029b74:	e7e7      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029b76:	b939      	cbnz	r1, 90029b88 <__ieee754_atan2f+0x68>
90029b78:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90029c3c <__ieee754_atan2f+0x11c>
90029b7c:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029c40 <__ieee754_atan2f+0x120>
90029b80:	2800      	cmp	r0, #0
90029b82:	fe67 7a27 	vselge.f32	s15, s14, s15
90029b86:	e7de      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029b88:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029b8c:	d110      	bne.n	90029bb0 <__ieee754_atan2f+0x90>
90029b8e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029b92:	f104 34ff 	add.w	r4, r4, #4294967295
90029b96:	d107      	bne.n	90029ba8 <__ieee754_atan2f+0x88>
90029b98:	2c02      	cmp	r4, #2
90029b9a:	d846      	bhi.n	90029c2a <__ieee754_atan2f+0x10a>
90029b9c:	4b29      	ldr	r3, [pc, #164]	@ (90029c44 <__ieee754_atan2f+0x124>)
90029b9e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
90029ba2:	edd3 7a00 	vldr	s15, [r3]
90029ba6:	e7ce      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029ba8:	2c02      	cmp	r4, #2
90029baa:	d841      	bhi.n	90029c30 <__ieee754_atan2f+0x110>
90029bac:	4b26      	ldr	r3, [pc, #152]	@ (90029c48 <__ieee754_atan2f+0x128>)
90029bae:	e7f6      	b.n	90029b9e <__ieee754_atan2f+0x7e>
90029bb0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029bb4:	d0e0      	beq.n	90029b78 <__ieee754_atan2f+0x58>
90029bb6:	1a5b      	subs	r3, r3, r1
90029bb8:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
90029bbc:	ea4f 51e3 	mov.w	r1, r3, asr #23
90029bc0:	da1a      	bge.n	90029bf8 <__ieee754_atan2f+0xd8>
90029bc2:	2a00      	cmp	r2, #0
90029bc4:	da01      	bge.n	90029bca <__ieee754_atan2f+0xaa>
90029bc6:	313c      	adds	r1, #60	@ 0x3c
90029bc8:	db19      	blt.n	90029bfe <__ieee754_atan2f+0xde>
90029bca:	ee87 0aa0 	vdiv.f32	s0, s15, s1
90029bce:	f000 f919 	bl	90029e04 <fabsf>
90029bd2:	f000 f843 	bl	90029c5c <atanf>
90029bd6:	eef0 7a40 	vmov.f32	s15, s0
90029bda:	2c01      	cmp	r4, #1
90029bdc:	d012      	beq.n	90029c04 <__ieee754_atan2f+0xe4>
90029bde:	2c02      	cmp	r4, #2
90029be0:	d017      	beq.n	90029c12 <__ieee754_atan2f+0xf2>
90029be2:	2c00      	cmp	r4, #0
90029be4:	d0af      	beq.n	90029b46 <__ieee754_atan2f+0x26>
90029be6:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90029c4c <__ieee754_atan2f+0x12c>
90029bea:	ee77 7a87 	vadd.f32	s15, s15, s14
90029bee:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90029c50 <__ieee754_atan2f+0x130>
90029bf2:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029bf6:	e7a6      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029bf8:	eddf 7a11 	vldr	s15, [pc, #68]	@ 90029c40 <__ieee754_atan2f+0x120>
90029bfc:	e7ed      	b.n	90029bda <__ieee754_atan2f+0xba>
90029bfe:	eddf 7a15 	vldr	s15, [pc, #84]	@ 90029c54 <__ieee754_atan2f+0x134>
90029c02:	e7ea      	b.n	90029bda <__ieee754_atan2f+0xba>
90029c04:	ee17 3a90 	vmov	r3, s15
90029c08:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90029c0c:	ee07 3a90 	vmov	s15, r3
90029c10:	e799      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029c12:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 90029c4c <__ieee754_atan2f+0x12c>
90029c16:	ee77 7a87 	vadd.f32	s15, s15, s14
90029c1a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90029c50 <__ieee754_atan2f+0x130>
90029c1e:	ee77 7a67 	vsub.f32	s15, s14, s15
90029c22:	e790      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029c24:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90029c50 <__ieee754_atan2f+0x130>
90029c28:	e78d      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029c2a:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90029c58 <__ieee754_atan2f+0x138>
90029c2e:	e78a      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029c30:	eddf 7a08 	vldr	s15, [pc, #32]	@ 90029c54 <__ieee754_atan2f+0x134>
90029c34:	e787      	b.n	90029b46 <__ieee754_atan2f+0x26>
90029c36:	bf00      	nop
90029c38:	c0490fdb 	.word	0xc0490fdb
90029c3c:	bfc90fdb 	.word	0xbfc90fdb
90029c40:	3fc90fdb 	.word	0x3fc90fdb
90029c44:	9002dddc 	.word	0x9002dddc
90029c48:	9002ddd0 	.word	0x9002ddd0
90029c4c:	33bbbd2e 	.word	0x33bbbd2e
90029c50:	40490fdb 	.word	0x40490fdb
90029c54:	00000000 	.word	0x00000000
90029c58:	3f490fdb 	.word	0x3f490fdb

90029c5c <atanf>:
90029c5c:	b538      	push	{r3, r4, r5, lr}
90029c5e:	ee10 5a10 	vmov	r5, s0
90029c62:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
90029c66:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
90029c6a:	eef0 7a40 	vmov.f32	s15, s0
90029c6e:	d30f      	bcc.n	90029c90 <atanf+0x34>
90029c70:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
90029c74:	d904      	bls.n	90029c80 <atanf+0x24>
90029c76:	ee70 7a00 	vadd.f32	s15, s0, s0
90029c7a:	eeb0 0a67 	vmov.f32	s0, s15
90029c7e:	bd38      	pop	{r3, r4, r5, pc}
90029c80:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90029db8 <atanf+0x15c>
90029c84:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90029dbc <atanf+0x160>
90029c88:	2d00      	cmp	r5, #0
90029c8a:	fe77 7a27 	vselgt.f32	s15, s14, s15
90029c8e:	e7f4      	b.n	90029c7a <atanf+0x1e>
90029c90:	4b4b      	ldr	r3, [pc, #300]	@ (90029dc0 <atanf+0x164>)
90029c92:	429c      	cmp	r4, r3
90029c94:	d810      	bhi.n	90029cb8 <atanf+0x5c>
90029c96:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
90029c9a:	d20a      	bcs.n	90029cb2 <atanf+0x56>
90029c9c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90029dc4 <atanf+0x168>
90029ca0:	ee30 7a07 	vadd.f32	s14, s0, s14
90029ca4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90029ca8:	eeb4 7ae6 	vcmpe.f32	s14, s13
90029cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029cb0:	dce3      	bgt.n	90029c7a <atanf+0x1e>
90029cb2:	f04f 33ff 	mov.w	r3, #4294967295
90029cb6:	e013      	b.n	90029ce0 <atanf+0x84>
90029cb8:	f000 f8a4 	bl	90029e04 <fabsf>
90029cbc:	4b42      	ldr	r3, [pc, #264]	@ (90029dc8 <atanf+0x16c>)
90029cbe:	429c      	cmp	r4, r3
90029cc0:	d84f      	bhi.n	90029d62 <atanf+0x106>
90029cc2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
90029cc6:	429c      	cmp	r4, r3
90029cc8:	d841      	bhi.n	90029d4e <atanf+0xf2>
90029cca:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90029cce:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90029cd2:	eea0 7a27 	vfma.f32	s14, s0, s15
90029cd6:	2300      	movs	r3, #0
90029cd8:	ee30 0a27 	vadd.f32	s0, s0, s15
90029cdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029ce0:	1c5a      	adds	r2, r3, #1
90029ce2:	ee27 6aa7 	vmul.f32	s12, s15, s15
90029ce6:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 90029dcc <atanf+0x170>
90029cea:	eddf 5a39 	vldr	s11, [pc, #228]	@ 90029dd0 <atanf+0x174>
90029cee:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 90029dd4 <atanf+0x178>
90029cf2:	ee66 6a06 	vmul.f32	s13, s12, s12
90029cf6:	eee6 5a87 	vfma.f32	s11, s13, s14
90029cfa:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90029dd8 <atanf+0x17c>
90029cfe:	eea5 7aa6 	vfma.f32	s14, s11, s13
90029d02:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90029ddc <atanf+0x180>
90029d06:	eee7 5a26 	vfma.f32	s11, s14, s13
90029d0a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90029de0 <atanf+0x184>
90029d0e:	eea5 7aa6 	vfma.f32	s14, s11, s13
90029d12:	eddf 5a34 	vldr	s11, [pc, #208]	@ 90029de4 <atanf+0x188>
90029d16:	eee7 5a26 	vfma.f32	s11, s14, s13
90029d1a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029de8 <atanf+0x18c>
90029d1e:	eea6 5a87 	vfma.f32	s10, s13, s14
90029d22:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90029dec <atanf+0x190>
90029d26:	eea5 7a26 	vfma.f32	s14, s10, s13
90029d2a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90029df0 <atanf+0x194>
90029d2e:	eea7 5a26 	vfma.f32	s10, s14, s13
90029d32:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029df4 <atanf+0x198>
90029d36:	eea5 7a26 	vfma.f32	s14, s10, s13
90029d3a:	ee27 7a26 	vmul.f32	s14, s14, s13
90029d3e:	eea5 7a86 	vfma.f32	s14, s11, s12
90029d42:	ee27 7a87 	vmul.f32	s14, s15, s14
90029d46:	d121      	bne.n	90029d8c <atanf+0x130>
90029d48:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029d4c:	e795      	b.n	90029c7a <atanf+0x1e>
90029d4e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90029d52:	ee30 7a67 	vsub.f32	s14, s0, s15
90029d56:	ee30 0a27 	vadd.f32	s0, s0, s15
90029d5a:	2301      	movs	r3, #1
90029d5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029d60:	e7be      	b.n	90029ce0 <atanf+0x84>
90029d62:	4b25      	ldr	r3, [pc, #148]	@ (90029df8 <atanf+0x19c>)
90029d64:	429c      	cmp	r4, r3
90029d66:	d80b      	bhi.n	90029d80 <atanf+0x124>
90029d68:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
90029d6c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029d70:	eea0 7a27 	vfma.f32	s14, s0, s15
90029d74:	2302      	movs	r3, #2
90029d76:	ee70 6a67 	vsub.f32	s13, s0, s15
90029d7a:	eec6 7a87 	vdiv.f32	s15, s13, s14
90029d7e:	e7af      	b.n	90029ce0 <atanf+0x84>
90029d80:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90029d84:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029d88:	2303      	movs	r3, #3
90029d8a:	e7a9      	b.n	90029ce0 <atanf+0x84>
90029d8c:	4a1b      	ldr	r2, [pc, #108]	@ (90029dfc <atanf+0x1a0>)
90029d8e:	491c      	ldr	r1, [pc, #112]	@ (90029e00 <atanf+0x1a4>)
90029d90:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90029d94:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90029d98:	edd3 6a00 	vldr	s13, [r3]
90029d9c:	ee37 7a66 	vsub.f32	s14, s14, s13
90029da0:	2d00      	cmp	r5, #0
90029da2:	ee37 7a67 	vsub.f32	s14, s14, s15
90029da6:	edd2 7a00 	vldr	s15, [r2]
90029daa:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029dae:	bfb8      	it	lt
90029db0:	eef1 7a67 	vneglt.f32	s15, s15
90029db4:	e761      	b.n	90029c7a <atanf+0x1e>
90029db6:	bf00      	nop
90029db8:	bfc90fdb 	.word	0xbfc90fdb
90029dbc:	3fc90fdb 	.word	0x3fc90fdb
90029dc0:	3edfffff 	.word	0x3edfffff
90029dc4:	7149f2ca 	.word	0x7149f2ca
90029dc8:	3f97ffff 	.word	0x3f97ffff
90029dcc:	3c8569d7 	.word	0x3c8569d7
90029dd0:	3d4bda59 	.word	0x3d4bda59
90029dd4:	bd6ef16b 	.word	0xbd6ef16b
90029dd8:	3d886b35 	.word	0x3d886b35
90029ddc:	3dba2e6e 	.word	0x3dba2e6e
90029de0:	3e124925 	.word	0x3e124925
90029de4:	3eaaaaab 	.word	0x3eaaaaab
90029de8:	bd15a221 	.word	0xbd15a221
90029dec:	bd9d8795 	.word	0xbd9d8795
90029df0:	bde38e38 	.word	0xbde38e38
90029df4:	be4ccccd 	.word	0xbe4ccccd
90029df8:	401bffff 	.word	0x401bffff
90029dfc:	9002ddf8 	.word	0x9002ddf8
90029e00:	9002dde8 	.word	0x9002dde8

90029e04 <fabsf>:
90029e04:	ee10 3a10 	vmov	r3, s0
90029e08:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90029e0c:	ee00 3a10 	vmov	s0, r3
90029e10:	4770      	bx	lr

90029e12 <abort>:
90029e12:	b508      	push	{r3, lr}
90029e14:	2006      	movs	r0, #6
90029e16:	f000 fae1 	bl	9002a3dc <raise>
90029e1a:	2001      	movs	r0, #1
90029e1c:	f7da fc70 	bl	90004700 <_exit>

90029e20 <__assert_func>:
90029e20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90029e22:	4614      	mov	r4, r2
90029e24:	461a      	mov	r2, r3
90029e26:	4b09      	ldr	r3, [pc, #36]	@ (90029e4c <__assert_func+0x2c>)
90029e28:	681b      	ldr	r3, [r3, #0]
90029e2a:	4605      	mov	r5, r0
90029e2c:	68d8      	ldr	r0, [r3, #12]
90029e2e:	b14c      	cbz	r4, 90029e44 <__assert_func+0x24>
90029e30:	4b07      	ldr	r3, [pc, #28]	@ (90029e50 <__assert_func+0x30>)
90029e32:	9100      	str	r1, [sp, #0]
90029e34:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029e38:	4906      	ldr	r1, [pc, #24]	@ (90029e54 <__assert_func+0x34>)
90029e3a:	462b      	mov	r3, r5
90029e3c:	f000 f984 	bl	9002a148 <fiprintf>
90029e40:	f7ff ffe7 	bl	90029e12 <abort>
90029e44:	4b04      	ldr	r3, [pc, #16]	@ (90029e58 <__assert_func+0x38>)
90029e46:	461c      	mov	r4, r3
90029e48:	e7f3      	b.n	90029e32 <__assert_func+0x12>
90029e4a:	bf00      	nop
90029e4c:	24000114 	.word	0x24000114
90029e50:	9002de08 	.word	0x9002de08
90029e54:	9002de15 	.word	0x9002de15
90029e58:	9002de43 	.word	0x9002de43

90029e5c <atexit>:
90029e5c:	2300      	movs	r3, #0
90029e5e:	4601      	mov	r1, r0
90029e60:	461a      	mov	r2, r3
90029e62:	4618      	mov	r0, r3
90029e64:	f000 bbc6 	b.w	9002a5f4 <__register_exitproc>

90029e68 <malloc>:
90029e68:	4b02      	ldr	r3, [pc, #8]	@ (90029e74 <malloc+0xc>)
90029e6a:	4601      	mov	r1, r0
90029e6c:	6818      	ldr	r0, [r3, #0]
90029e6e:	f000 b82d 	b.w	90029ecc <_malloc_r>
90029e72:	bf00      	nop
90029e74:	24000114 	.word	0x24000114

90029e78 <free>:
90029e78:	4b02      	ldr	r3, [pc, #8]	@ (90029e84 <free+0xc>)
90029e7a:	4601      	mov	r1, r0
90029e7c:	6818      	ldr	r0, [r3, #0]
90029e7e:	f000 bc15 	b.w	9002a6ac <_free_r>
90029e82:	bf00      	nop
90029e84:	24000114 	.word	0x24000114

90029e88 <sbrk_aligned>:
90029e88:	b570      	push	{r4, r5, r6, lr}
90029e8a:	4e0f      	ldr	r6, [pc, #60]	@ (90029ec8 <sbrk_aligned+0x40>)
90029e8c:	460c      	mov	r4, r1
90029e8e:	6831      	ldr	r1, [r6, #0]
90029e90:	4605      	mov	r5, r0
90029e92:	b911      	cbnz	r1, 90029e9a <sbrk_aligned+0x12>
90029e94:	f000 fb50 	bl	9002a538 <_sbrk_r>
90029e98:	6030      	str	r0, [r6, #0]
90029e9a:	4621      	mov	r1, r4
90029e9c:	4628      	mov	r0, r5
90029e9e:	f000 fb4b 	bl	9002a538 <_sbrk_r>
90029ea2:	1c43      	adds	r3, r0, #1
90029ea4:	d103      	bne.n	90029eae <sbrk_aligned+0x26>
90029ea6:	f04f 34ff 	mov.w	r4, #4294967295
90029eaa:	4620      	mov	r0, r4
90029eac:	bd70      	pop	{r4, r5, r6, pc}
90029eae:	1cc4      	adds	r4, r0, #3
90029eb0:	f024 0403 	bic.w	r4, r4, #3
90029eb4:	42a0      	cmp	r0, r4
90029eb6:	d0f8      	beq.n	90029eaa <sbrk_aligned+0x22>
90029eb8:	1a21      	subs	r1, r4, r0
90029eba:	4628      	mov	r0, r5
90029ebc:	f000 fb3c 	bl	9002a538 <_sbrk_r>
90029ec0:	3001      	adds	r0, #1
90029ec2:	d1f2      	bne.n	90029eaa <sbrk_aligned+0x22>
90029ec4:	e7ef      	b.n	90029ea6 <sbrk_aligned+0x1e>
90029ec6:	bf00      	nop
90029ec8:	240222a0 	.word	0x240222a0

90029ecc <_malloc_r>:
90029ecc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029ed0:	1ccd      	adds	r5, r1, #3
90029ed2:	f025 0503 	bic.w	r5, r5, #3
90029ed6:	3508      	adds	r5, #8
90029ed8:	2d0c      	cmp	r5, #12
90029eda:	bf38      	it	cc
90029edc:	250c      	movcc	r5, #12
90029ede:	2d00      	cmp	r5, #0
90029ee0:	4606      	mov	r6, r0
90029ee2:	db01      	blt.n	90029ee8 <_malloc_r+0x1c>
90029ee4:	42a9      	cmp	r1, r5
90029ee6:	d904      	bls.n	90029ef2 <_malloc_r+0x26>
90029ee8:	230c      	movs	r3, #12
90029eea:	6033      	str	r3, [r6, #0]
90029eec:	2000      	movs	r0, #0
90029eee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029ef2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90029fc8 <_malloc_r+0xfc>
90029ef6:	f000 f869 	bl	90029fcc <__malloc_lock>
90029efa:	f8d8 3000 	ldr.w	r3, [r8]
90029efe:	461c      	mov	r4, r3
90029f00:	bb44      	cbnz	r4, 90029f54 <_malloc_r+0x88>
90029f02:	4629      	mov	r1, r5
90029f04:	4630      	mov	r0, r6
90029f06:	f7ff ffbf 	bl	90029e88 <sbrk_aligned>
90029f0a:	1c43      	adds	r3, r0, #1
90029f0c:	4604      	mov	r4, r0
90029f0e:	d158      	bne.n	90029fc2 <_malloc_r+0xf6>
90029f10:	f8d8 4000 	ldr.w	r4, [r8]
90029f14:	4627      	mov	r7, r4
90029f16:	2f00      	cmp	r7, #0
90029f18:	d143      	bne.n	90029fa2 <_malloc_r+0xd6>
90029f1a:	2c00      	cmp	r4, #0
90029f1c:	d04b      	beq.n	90029fb6 <_malloc_r+0xea>
90029f1e:	6823      	ldr	r3, [r4, #0]
90029f20:	4639      	mov	r1, r7
90029f22:	4630      	mov	r0, r6
90029f24:	eb04 0903 	add.w	r9, r4, r3
90029f28:	f000 fb06 	bl	9002a538 <_sbrk_r>
90029f2c:	4581      	cmp	r9, r0
90029f2e:	d142      	bne.n	90029fb6 <_malloc_r+0xea>
90029f30:	6821      	ldr	r1, [r4, #0]
90029f32:	1a6d      	subs	r5, r5, r1
90029f34:	4629      	mov	r1, r5
90029f36:	4630      	mov	r0, r6
90029f38:	f7ff ffa6 	bl	90029e88 <sbrk_aligned>
90029f3c:	3001      	adds	r0, #1
90029f3e:	d03a      	beq.n	90029fb6 <_malloc_r+0xea>
90029f40:	6823      	ldr	r3, [r4, #0]
90029f42:	442b      	add	r3, r5
90029f44:	6023      	str	r3, [r4, #0]
90029f46:	f8d8 3000 	ldr.w	r3, [r8]
90029f4a:	685a      	ldr	r2, [r3, #4]
90029f4c:	bb62      	cbnz	r2, 90029fa8 <_malloc_r+0xdc>
90029f4e:	f8c8 7000 	str.w	r7, [r8]
90029f52:	e00f      	b.n	90029f74 <_malloc_r+0xa8>
90029f54:	6822      	ldr	r2, [r4, #0]
90029f56:	1b52      	subs	r2, r2, r5
90029f58:	d420      	bmi.n	90029f9c <_malloc_r+0xd0>
90029f5a:	2a0b      	cmp	r2, #11
90029f5c:	d917      	bls.n	90029f8e <_malloc_r+0xc2>
90029f5e:	1961      	adds	r1, r4, r5
90029f60:	42a3      	cmp	r3, r4
90029f62:	6025      	str	r5, [r4, #0]
90029f64:	bf18      	it	ne
90029f66:	6059      	strne	r1, [r3, #4]
90029f68:	6863      	ldr	r3, [r4, #4]
90029f6a:	bf08      	it	eq
90029f6c:	f8c8 1000 	streq.w	r1, [r8]
90029f70:	5162      	str	r2, [r4, r5]
90029f72:	604b      	str	r3, [r1, #4]
90029f74:	4630      	mov	r0, r6
90029f76:	f000 f82f 	bl	90029fd8 <__malloc_unlock>
90029f7a:	f104 000b 	add.w	r0, r4, #11
90029f7e:	1d23      	adds	r3, r4, #4
90029f80:	f020 0007 	bic.w	r0, r0, #7
90029f84:	1ac2      	subs	r2, r0, r3
90029f86:	bf1c      	itt	ne
90029f88:	1a1b      	subne	r3, r3, r0
90029f8a:	50a3      	strne	r3, [r4, r2]
90029f8c:	e7af      	b.n	90029eee <_malloc_r+0x22>
90029f8e:	6862      	ldr	r2, [r4, #4]
90029f90:	42a3      	cmp	r3, r4
90029f92:	bf0c      	ite	eq
90029f94:	f8c8 2000 	streq.w	r2, [r8]
90029f98:	605a      	strne	r2, [r3, #4]
90029f9a:	e7eb      	b.n	90029f74 <_malloc_r+0xa8>
90029f9c:	4623      	mov	r3, r4
90029f9e:	6864      	ldr	r4, [r4, #4]
90029fa0:	e7ae      	b.n	90029f00 <_malloc_r+0x34>
90029fa2:	463c      	mov	r4, r7
90029fa4:	687f      	ldr	r7, [r7, #4]
90029fa6:	e7b6      	b.n	90029f16 <_malloc_r+0x4a>
90029fa8:	461a      	mov	r2, r3
90029faa:	685b      	ldr	r3, [r3, #4]
90029fac:	42a3      	cmp	r3, r4
90029fae:	d1fb      	bne.n	90029fa8 <_malloc_r+0xdc>
90029fb0:	2300      	movs	r3, #0
90029fb2:	6053      	str	r3, [r2, #4]
90029fb4:	e7de      	b.n	90029f74 <_malloc_r+0xa8>
90029fb6:	230c      	movs	r3, #12
90029fb8:	6033      	str	r3, [r6, #0]
90029fba:	4630      	mov	r0, r6
90029fbc:	f000 f80c 	bl	90029fd8 <__malloc_unlock>
90029fc0:	e794      	b.n	90029eec <_malloc_r+0x20>
90029fc2:	6005      	str	r5, [r0, #0]
90029fc4:	e7d6      	b.n	90029f74 <_malloc_r+0xa8>
90029fc6:	bf00      	nop
90029fc8:	240222a4 	.word	0x240222a4

90029fcc <__malloc_lock>:
90029fcc:	4801      	ldr	r0, [pc, #4]	@ (90029fd4 <__malloc_lock+0x8>)
90029fce:	f000 bb00 	b.w	9002a5d2 <__retarget_lock_acquire_recursive>
90029fd2:	bf00      	nop
90029fd4:	240223e8 	.word	0x240223e8

90029fd8 <__malloc_unlock>:
90029fd8:	4801      	ldr	r0, [pc, #4]	@ (90029fe0 <__malloc_unlock+0x8>)
90029fda:	f000 bafb 	b.w	9002a5d4 <__retarget_lock_release_recursive>
90029fde:	bf00      	nop
90029fe0:	240223e8 	.word	0x240223e8

90029fe4 <__cxa_atexit>:
90029fe4:	b510      	push	{r4, lr}
90029fe6:	4604      	mov	r4, r0
90029fe8:	4804      	ldr	r0, [pc, #16]	@ (90029ffc <__cxa_atexit+0x18>)
90029fea:	4613      	mov	r3, r2
90029fec:	b120      	cbz	r0, 90029ff8 <__cxa_atexit+0x14>
90029fee:	460a      	mov	r2, r1
90029ff0:	2002      	movs	r0, #2
90029ff2:	4621      	mov	r1, r4
90029ff4:	f000 fafe 	bl	9002a5f4 <__register_exitproc>
90029ff8:	bd10      	pop	{r4, pc}
90029ffa:	bf00      	nop
90029ffc:	9002a5f5 	.word	0x9002a5f5

9002a000 <std>:
9002a000:	2300      	movs	r3, #0
9002a002:	b510      	push	{r4, lr}
9002a004:	4604      	mov	r4, r0
9002a006:	e9c0 3300 	strd	r3, r3, [r0]
9002a00a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002a00e:	6083      	str	r3, [r0, #8]
9002a010:	8181      	strh	r1, [r0, #12]
9002a012:	6643      	str	r3, [r0, #100]	@ 0x64
9002a014:	81c2      	strh	r2, [r0, #14]
9002a016:	6183      	str	r3, [r0, #24]
9002a018:	4619      	mov	r1, r3
9002a01a:	2208      	movs	r2, #8
9002a01c:	305c      	adds	r0, #92	@ 0x5c
9002a01e:	f000 f99b 	bl	9002a358 <memset>
9002a022:	4b0d      	ldr	r3, [pc, #52]	@ (9002a058 <std+0x58>)
9002a024:	6263      	str	r3, [r4, #36]	@ 0x24
9002a026:	4b0d      	ldr	r3, [pc, #52]	@ (9002a05c <std+0x5c>)
9002a028:	62a3      	str	r3, [r4, #40]	@ 0x28
9002a02a:	4b0d      	ldr	r3, [pc, #52]	@ (9002a060 <std+0x60>)
9002a02c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002a02e:	4b0d      	ldr	r3, [pc, #52]	@ (9002a064 <std+0x64>)
9002a030:	6323      	str	r3, [r4, #48]	@ 0x30
9002a032:	4b0d      	ldr	r3, [pc, #52]	@ (9002a068 <std+0x68>)
9002a034:	6224      	str	r4, [r4, #32]
9002a036:	429c      	cmp	r4, r3
9002a038:	d006      	beq.n	9002a048 <std+0x48>
9002a03a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002a03e:	4294      	cmp	r4, r2
9002a040:	d002      	beq.n	9002a048 <std+0x48>
9002a042:	33d0      	adds	r3, #208	@ 0xd0
9002a044:	429c      	cmp	r4, r3
9002a046:	d105      	bne.n	9002a054 <std+0x54>
9002a048:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002a04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a050:	f000 babe 	b.w	9002a5d0 <__retarget_lock_init_recursive>
9002a054:	bd10      	pop	{r4, pc}
9002a056:	bf00      	nop
9002a058:	9002a1a9 	.word	0x9002a1a9
9002a05c:	9002a1cb 	.word	0x9002a1cb
9002a060:	9002a203 	.word	0x9002a203
9002a064:	9002a227 	.word	0x9002a227
9002a068:	240222a8 	.word	0x240222a8

9002a06c <stdio_exit_handler>:
9002a06c:	4a02      	ldr	r2, [pc, #8]	@ (9002a078 <stdio_exit_handler+0xc>)
9002a06e:	4903      	ldr	r1, [pc, #12]	@ (9002a07c <stdio_exit_handler+0x10>)
9002a070:	4803      	ldr	r0, [pc, #12]	@ (9002a080 <stdio_exit_handler+0x14>)
9002a072:	f000 b87b 	b.w	9002a16c <_fwalk_sglue>
9002a076:	bf00      	nop
9002a078:	24000108 	.word	0x24000108
9002a07c:	9002ade5 	.word	0x9002ade5
9002a080:	24000118 	.word	0x24000118

9002a084 <cleanup_stdio>:
9002a084:	6841      	ldr	r1, [r0, #4]
9002a086:	4b0c      	ldr	r3, [pc, #48]	@ (9002a0b8 <cleanup_stdio+0x34>)
9002a088:	4299      	cmp	r1, r3
9002a08a:	b510      	push	{r4, lr}
9002a08c:	4604      	mov	r4, r0
9002a08e:	d001      	beq.n	9002a094 <cleanup_stdio+0x10>
9002a090:	f000 fea8 	bl	9002ade4 <_fflush_r>
9002a094:	68a1      	ldr	r1, [r4, #8]
9002a096:	4b09      	ldr	r3, [pc, #36]	@ (9002a0bc <cleanup_stdio+0x38>)
9002a098:	4299      	cmp	r1, r3
9002a09a:	d002      	beq.n	9002a0a2 <cleanup_stdio+0x1e>
9002a09c:	4620      	mov	r0, r4
9002a09e:	f000 fea1 	bl	9002ade4 <_fflush_r>
9002a0a2:	68e1      	ldr	r1, [r4, #12]
9002a0a4:	4b06      	ldr	r3, [pc, #24]	@ (9002a0c0 <cleanup_stdio+0x3c>)
9002a0a6:	4299      	cmp	r1, r3
9002a0a8:	d004      	beq.n	9002a0b4 <cleanup_stdio+0x30>
9002a0aa:	4620      	mov	r0, r4
9002a0ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a0b0:	f000 be98 	b.w	9002ade4 <_fflush_r>
9002a0b4:	bd10      	pop	{r4, pc}
9002a0b6:	bf00      	nop
9002a0b8:	240222a8 	.word	0x240222a8
9002a0bc:	24022310 	.word	0x24022310
9002a0c0:	24022378 	.word	0x24022378

9002a0c4 <global_stdio_init.part.0>:
9002a0c4:	b510      	push	{r4, lr}
9002a0c6:	4b0b      	ldr	r3, [pc, #44]	@ (9002a0f4 <global_stdio_init.part.0+0x30>)
9002a0c8:	4c0b      	ldr	r4, [pc, #44]	@ (9002a0f8 <global_stdio_init.part.0+0x34>)
9002a0ca:	4a0c      	ldr	r2, [pc, #48]	@ (9002a0fc <global_stdio_init.part.0+0x38>)
9002a0cc:	601a      	str	r2, [r3, #0]
9002a0ce:	4620      	mov	r0, r4
9002a0d0:	2200      	movs	r2, #0
9002a0d2:	2104      	movs	r1, #4
9002a0d4:	f7ff ff94 	bl	9002a000 <std>
9002a0d8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002a0dc:	2201      	movs	r2, #1
9002a0de:	2109      	movs	r1, #9
9002a0e0:	f7ff ff8e 	bl	9002a000 <std>
9002a0e4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002a0e8:	2202      	movs	r2, #2
9002a0ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a0ee:	2112      	movs	r1, #18
9002a0f0:	f7ff bf86 	b.w	9002a000 <std>
9002a0f4:	240223e0 	.word	0x240223e0
9002a0f8:	240222a8 	.word	0x240222a8
9002a0fc:	9002a06d 	.word	0x9002a06d

9002a100 <__sfp_lock_acquire>:
9002a100:	4801      	ldr	r0, [pc, #4]	@ (9002a108 <__sfp_lock_acquire+0x8>)
9002a102:	f000 ba66 	b.w	9002a5d2 <__retarget_lock_acquire_recursive>
9002a106:	bf00      	nop
9002a108:	240223ea 	.word	0x240223ea

9002a10c <__sfp_lock_release>:
9002a10c:	4801      	ldr	r0, [pc, #4]	@ (9002a114 <__sfp_lock_release+0x8>)
9002a10e:	f000 ba61 	b.w	9002a5d4 <__retarget_lock_release_recursive>
9002a112:	bf00      	nop
9002a114:	240223ea 	.word	0x240223ea

9002a118 <__sinit>:
9002a118:	b510      	push	{r4, lr}
9002a11a:	4604      	mov	r4, r0
9002a11c:	f7ff fff0 	bl	9002a100 <__sfp_lock_acquire>
9002a120:	6a23      	ldr	r3, [r4, #32]
9002a122:	b11b      	cbz	r3, 9002a12c <__sinit+0x14>
9002a124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a128:	f7ff bff0 	b.w	9002a10c <__sfp_lock_release>
9002a12c:	4b04      	ldr	r3, [pc, #16]	@ (9002a140 <__sinit+0x28>)
9002a12e:	6223      	str	r3, [r4, #32]
9002a130:	4b04      	ldr	r3, [pc, #16]	@ (9002a144 <__sinit+0x2c>)
9002a132:	681b      	ldr	r3, [r3, #0]
9002a134:	2b00      	cmp	r3, #0
9002a136:	d1f5      	bne.n	9002a124 <__sinit+0xc>
9002a138:	f7ff ffc4 	bl	9002a0c4 <global_stdio_init.part.0>
9002a13c:	e7f2      	b.n	9002a124 <__sinit+0xc>
9002a13e:	bf00      	nop
9002a140:	9002a085 	.word	0x9002a085
9002a144:	240223e0 	.word	0x240223e0

9002a148 <fiprintf>:
9002a148:	b40e      	push	{r1, r2, r3}
9002a14a:	b503      	push	{r0, r1, lr}
9002a14c:	4601      	mov	r1, r0
9002a14e:	ab03      	add	r3, sp, #12
9002a150:	4805      	ldr	r0, [pc, #20]	@ (9002a168 <fiprintf+0x20>)
9002a152:	f853 2b04 	ldr.w	r2, [r3], #4
9002a156:	6800      	ldr	r0, [r0, #0]
9002a158:	9301      	str	r3, [sp, #4]
9002a15a:	f000 fb1b 	bl	9002a794 <_vfiprintf_r>
9002a15e:	b002      	add	sp, #8
9002a160:	f85d eb04 	ldr.w	lr, [sp], #4
9002a164:	b003      	add	sp, #12
9002a166:	4770      	bx	lr
9002a168:	24000114 	.word	0x24000114

9002a16c <_fwalk_sglue>:
9002a16c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a170:	4607      	mov	r7, r0
9002a172:	4688      	mov	r8, r1
9002a174:	4614      	mov	r4, r2
9002a176:	2600      	movs	r6, #0
9002a178:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002a17c:	f1b9 0901 	subs.w	r9, r9, #1
9002a180:	d505      	bpl.n	9002a18e <_fwalk_sglue+0x22>
9002a182:	6824      	ldr	r4, [r4, #0]
9002a184:	2c00      	cmp	r4, #0
9002a186:	d1f7      	bne.n	9002a178 <_fwalk_sglue+0xc>
9002a188:	4630      	mov	r0, r6
9002a18a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a18e:	89ab      	ldrh	r3, [r5, #12]
9002a190:	2b01      	cmp	r3, #1
9002a192:	d907      	bls.n	9002a1a4 <_fwalk_sglue+0x38>
9002a194:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002a198:	3301      	adds	r3, #1
9002a19a:	d003      	beq.n	9002a1a4 <_fwalk_sglue+0x38>
9002a19c:	4629      	mov	r1, r5
9002a19e:	4638      	mov	r0, r7
9002a1a0:	47c0      	blx	r8
9002a1a2:	4306      	orrs	r6, r0
9002a1a4:	3568      	adds	r5, #104	@ 0x68
9002a1a6:	e7e9      	b.n	9002a17c <_fwalk_sglue+0x10>

9002a1a8 <__sread>:
9002a1a8:	b510      	push	{r4, lr}
9002a1aa:	460c      	mov	r4, r1
9002a1ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a1b0:	f000 f99c 	bl	9002a4ec <_read_r>
9002a1b4:	2800      	cmp	r0, #0
9002a1b6:	bfab      	itete	ge
9002a1b8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002a1ba:	89a3      	ldrhlt	r3, [r4, #12]
9002a1bc:	181b      	addge	r3, r3, r0
9002a1be:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002a1c2:	bfac      	ite	ge
9002a1c4:	6563      	strge	r3, [r4, #84]	@ 0x54
9002a1c6:	81a3      	strhlt	r3, [r4, #12]
9002a1c8:	bd10      	pop	{r4, pc}

9002a1ca <__swrite>:
9002a1ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a1ce:	461f      	mov	r7, r3
9002a1d0:	898b      	ldrh	r3, [r1, #12]
9002a1d2:	05db      	lsls	r3, r3, #23
9002a1d4:	4605      	mov	r5, r0
9002a1d6:	460c      	mov	r4, r1
9002a1d8:	4616      	mov	r6, r2
9002a1da:	d505      	bpl.n	9002a1e8 <__swrite+0x1e>
9002a1dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a1e0:	2302      	movs	r3, #2
9002a1e2:	2200      	movs	r2, #0
9002a1e4:	f000 f970 	bl	9002a4c8 <_lseek_r>
9002a1e8:	89a3      	ldrh	r3, [r4, #12]
9002a1ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a1ee:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002a1f2:	81a3      	strh	r3, [r4, #12]
9002a1f4:	4632      	mov	r2, r6
9002a1f6:	463b      	mov	r3, r7
9002a1f8:	4628      	mov	r0, r5
9002a1fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002a1fe:	f000 b9ab 	b.w	9002a558 <_write_r>

9002a202 <__sseek>:
9002a202:	b510      	push	{r4, lr}
9002a204:	460c      	mov	r4, r1
9002a206:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a20a:	f000 f95d 	bl	9002a4c8 <_lseek_r>
9002a20e:	1c43      	adds	r3, r0, #1
9002a210:	89a3      	ldrh	r3, [r4, #12]
9002a212:	bf15      	itete	ne
9002a214:	6560      	strne	r0, [r4, #84]	@ 0x54
9002a216:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002a21a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002a21e:	81a3      	strheq	r3, [r4, #12]
9002a220:	bf18      	it	ne
9002a222:	81a3      	strhne	r3, [r4, #12]
9002a224:	bd10      	pop	{r4, pc}

9002a226 <__sclose>:
9002a226:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a22a:	f000 b8df 	b.w	9002a3ec <_close_r>

9002a22e <__swbuf_r>:
9002a22e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a230:	460e      	mov	r6, r1
9002a232:	4614      	mov	r4, r2
9002a234:	4605      	mov	r5, r0
9002a236:	b118      	cbz	r0, 9002a240 <__swbuf_r+0x12>
9002a238:	6a03      	ldr	r3, [r0, #32]
9002a23a:	b90b      	cbnz	r3, 9002a240 <__swbuf_r+0x12>
9002a23c:	f7ff ff6c 	bl	9002a118 <__sinit>
9002a240:	69a3      	ldr	r3, [r4, #24]
9002a242:	60a3      	str	r3, [r4, #8]
9002a244:	89a3      	ldrh	r3, [r4, #12]
9002a246:	071a      	lsls	r2, r3, #28
9002a248:	d501      	bpl.n	9002a24e <__swbuf_r+0x20>
9002a24a:	6923      	ldr	r3, [r4, #16]
9002a24c:	b943      	cbnz	r3, 9002a260 <__swbuf_r+0x32>
9002a24e:	4621      	mov	r1, r4
9002a250:	4628      	mov	r0, r5
9002a252:	f000 f82b 	bl	9002a2ac <__swsetup_r>
9002a256:	b118      	cbz	r0, 9002a260 <__swbuf_r+0x32>
9002a258:	f04f 37ff 	mov.w	r7, #4294967295
9002a25c:	4638      	mov	r0, r7
9002a25e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002a260:	6823      	ldr	r3, [r4, #0]
9002a262:	6922      	ldr	r2, [r4, #16]
9002a264:	1a98      	subs	r0, r3, r2
9002a266:	6963      	ldr	r3, [r4, #20]
9002a268:	b2f6      	uxtb	r6, r6
9002a26a:	4283      	cmp	r3, r0
9002a26c:	4637      	mov	r7, r6
9002a26e:	dc05      	bgt.n	9002a27c <__swbuf_r+0x4e>
9002a270:	4621      	mov	r1, r4
9002a272:	4628      	mov	r0, r5
9002a274:	f000 fdb6 	bl	9002ade4 <_fflush_r>
9002a278:	2800      	cmp	r0, #0
9002a27a:	d1ed      	bne.n	9002a258 <__swbuf_r+0x2a>
9002a27c:	68a3      	ldr	r3, [r4, #8]
9002a27e:	3b01      	subs	r3, #1
9002a280:	60a3      	str	r3, [r4, #8]
9002a282:	6823      	ldr	r3, [r4, #0]
9002a284:	1c5a      	adds	r2, r3, #1
9002a286:	6022      	str	r2, [r4, #0]
9002a288:	701e      	strb	r6, [r3, #0]
9002a28a:	6962      	ldr	r2, [r4, #20]
9002a28c:	1c43      	adds	r3, r0, #1
9002a28e:	429a      	cmp	r2, r3
9002a290:	d004      	beq.n	9002a29c <__swbuf_r+0x6e>
9002a292:	89a3      	ldrh	r3, [r4, #12]
9002a294:	07db      	lsls	r3, r3, #31
9002a296:	d5e1      	bpl.n	9002a25c <__swbuf_r+0x2e>
9002a298:	2e0a      	cmp	r6, #10
9002a29a:	d1df      	bne.n	9002a25c <__swbuf_r+0x2e>
9002a29c:	4621      	mov	r1, r4
9002a29e:	4628      	mov	r0, r5
9002a2a0:	f000 fda0 	bl	9002ade4 <_fflush_r>
9002a2a4:	2800      	cmp	r0, #0
9002a2a6:	d0d9      	beq.n	9002a25c <__swbuf_r+0x2e>
9002a2a8:	e7d6      	b.n	9002a258 <__swbuf_r+0x2a>
	...

9002a2ac <__swsetup_r>:
9002a2ac:	b538      	push	{r3, r4, r5, lr}
9002a2ae:	4b29      	ldr	r3, [pc, #164]	@ (9002a354 <__swsetup_r+0xa8>)
9002a2b0:	4605      	mov	r5, r0
9002a2b2:	6818      	ldr	r0, [r3, #0]
9002a2b4:	460c      	mov	r4, r1
9002a2b6:	b118      	cbz	r0, 9002a2c0 <__swsetup_r+0x14>
9002a2b8:	6a03      	ldr	r3, [r0, #32]
9002a2ba:	b90b      	cbnz	r3, 9002a2c0 <__swsetup_r+0x14>
9002a2bc:	f7ff ff2c 	bl	9002a118 <__sinit>
9002a2c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a2c4:	0719      	lsls	r1, r3, #28
9002a2c6:	d422      	bmi.n	9002a30e <__swsetup_r+0x62>
9002a2c8:	06da      	lsls	r2, r3, #27
9002a2ca:	d407      	bmi.n	9002a2dc <__swsetup_r+0x30>
9002a2cc:	2209      	movs	r2, #9
9002a2ce:	602a      	str	r2, [r5, #0]
9002a2d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a2d4:	81a3      	strh	r3, [r4, #12]
9002a2d6:	f04f 30ff 	mov.w	r0, #4294967295
9002a2da:	e033      	b.n	9002a344 <__swsetup_r+0x98>
9002a2dc:	0758      	lsls	r0, r3, #29
9002a2de:	d512      	bpl.n	9002a306 <__swsetup_r+0x5a>
9002a2e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a2e2:	b141      	cbz	r1, 9002a2f6 <__swsetup_r+0x4a>
9002a2e4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a2e8:	4299      	cmp	r1, r3
9002a2ea:	d002      	beq.n	9002a2f2 <__swsetup_r+0x46>
9002a2ec:	4628      	mov	r0, r5
9002a2ee:	f000 f9dd 	bl	9002a6ac <_free_r>
9002a2f2:	2300      	movs	r3, #0
9002a2f4:	6363      	str	r3, [r4, #52]	@ 0x34
9002a2f6:	89a3      	ldrh	r3, [r4, #12]
9002a2f8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002a2fc:	81a3      	strh	r3, [r4, #12]
9002a2fe:	2300      	movs	r3, #0
9002a300:	6063      	str	r3, [r4, #4]
9002a302:	6923      	ldr	r3, [r4, #16]
9002a304:	6023      	str	r3, [r4, #0]
9002a306:	89a3      	ldrh	r3, [r4, #12]
9002a308:	f043 0308 	orr.w	r3, r3, #8
9002a30c:	81a3      	strh	r3, [r4, #12]
9002a30e:	6923      	ldr	r3, [r4, #16]
9002a310:	b94b      	cbnz	r3, 9002a326 <__swsetup_r+0x7a>
9002a312:	89a3      	ldrh	r3, [r4, #12]
9002a314:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002a318:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002a31c:	d003      	beq.n	9002a326 <__swsetup_r+0x7a>
9002a31e:	4621      	mov	r1, r4
9002a320:	4628      	mov	r0, r5
9002a322:	f000 fdad 	bl	9002ae80 <__smakebuf_r>
9002a326:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a32a:	f013 0201 	ands.w	r2, r3, #1
9002a32e:	d00a      	beq.n	9002a346 <__swsetup_r+0x9a>
9002a330:	2200      	movs	r2, #0
9002a332:	60a2      	str	r2, [r4, #8]
9002a334:	6962      	ldr	r2, [r4, #20]
9002a336:	4252      	negs	r2, r2
9002a338:	61a2      	str	r2, [r4, #24]
9002a33a:	6922      	ldr	r2, [r4, #16]
9002a33c:	b942      	cbnz	r2, 9002a350 <__swsetup_r+0xa4>
9002a33e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002a342:	d1c5      	bne.n	9002a2d0 <__swsetup_r+0x24>
9002a344:	bd38      	pop	{r3, r4, r5, pc}
9002a346:	0799      	lsls	r1, r3, #30
9002a348:	bf58      	it	pl
9002a34a:	6962      	ldrpl	r2, [r4, #20]
9002a34c:	60a2      	str	r2, [r4, #8]
9002a34e:	e7f4      	b.n	9002a33a <__swsetup_r+0x8e>
9002a350:	2000      	movs	r0, #0
9002a352:	e7f7      	b.n	9002a344 <__swsetup_r+0x98>
9002a354:	24000114 	.word	0x24000114

9002a358 <memset>:
9002a358:	4402      	add	r2, r0
9002a35a:	4603      	mov	r3, r0
9002a35c:	4293      	cmp	r3, r2
9002a35e:	d100      	bne.n	9002a362 <memset+0xa>
9002a360:	4770      	bx	lr
9002a362:	f803 1b01 	strb.w	r1, [r3], #1
9002a366:	e7f9      	b.n	9002a35c <memset+0x4>

9002a368 <strncmp>:
9002a368:	b510      	push	{r4, lr}
9002a36a:	b16a      	cbz	r2, 9002a388 <strncmp+0x20>
9002a36c:	3901      	subs	r1, #1
9002a36e:	1884      	adds	r4, r0, r2
9002a370:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a374:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002a378:	429a      	cmp	r2, r3
9002a37a:	d103      	bne.n	9002a384 <strncmp+0x1c>
9002a37c:	42a0      	cmp	r0, r4
9002a37e:	d001      	beq.n	9002a384 <strncmp+0x1c>
9002a380:	2a00      	cmp	r2, #0
9002a382:	d1f5      	bne.n	9002a370 <strncmp+0x8>
9002a384:	1ad0      	subs	r0, r2, r3
9002a386:	bd10      	pop	{r4, pc}
9002a388:	4610      	mov	r0, r2
9002a38a:	e7fc      	b.n	9002a386 <strncmp+0x1e>

9002a38c <_raise_r>:
9002a38c:	291f      	cmp	r1, #31
9002a38e:	b538      	push	{r3, r4, r5, lr}
9002a390:	4605      	mov	r5, r0
9002a392:	460c      	mov	r4, r1
9002a394:	d904      	bls.n	9002a3a0 <_raise_r+0x14>
9002a396:	2316      	movs	r3, #22
9002a398:	6003      	str	r3, [r0, #0]
9002a39a:	f04f 30ff 	mov.w	r0, #4294967295
9002a39e:	bd38      	pop	{r3, r4, r5, pc}
9002a3a0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002a3a2:	b112      	cbz	r2, 9002a3aa <_raise_r+0x1e>
9002a3a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002a3a8:	b94b      	cbnz	r3, 9002a3be <_raise_r+0x32>
9002a3aa:	4628      	mov	r0, r5
9002a3ac:	f000 f8c2 	bl	9002a534 <_getpid_r>
9002a3b0:	4622      	mov	r2, r4
9002a3b2:	4601      	mov	r1, r0
9002a3b4:	4628      	mov	r0, r5
9002a3b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a3ba:	f000 b8a9 	b.w	9002a510 <_kill_r>
9002a3be:	2b01      	cmp	r3, #1
9002a3c0:	d00a      	beq.n	9002a3d8 <_raise_r+0x4c>
9002a3c2:	1c59      	adds	r1, r3, #1
9002a3c4:	d103      	bne.n	9002a3ce <_raise_r+0x42>
9002a3c6:	2316      	movs	r3, #22
9002a3c8:	6003      	str	r3, [r0, #0]
9002a3ca:	2001      	movs	r0, #1
9002a3cc:	e7e7      	b.n	9002a39e <_raise_r+0x12>
9002a3ce:	2100      	movs	r1, #0
9002a3d0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002a3d4:	4620      	mov	r0, r4
9002a3d6:	4798      	blx	r3
9002a3d8:	2000      	movs	r0, #0
9002a3da:	e7e0      	b.n	9002a39e <_raise_r+0x12>

9002a3dc <raise>:
9002a3dc:	4b02      	ldr	r3, [pc, #8]	@ (9002a3e8 <raise+0xc>)
9002a3de:	4601      	mov	r1, r0
9002a3e0:	6818      	ldr	r0, [r3, #0]
9002a3e2:	f7ff bfd3 	b.w	9002a38c <_raise_r>
9002a3e6:	bf00      	nop
9002a3e8:	24000114 	.word	0x24000114

9002a3ec <_close_r>:
9002a3ec:	b538      	push	{r3, r4, r5, lr}
9002a3ee:	4d06      	ldr	r5, [pc, #24]	@ (9002a408 <_close_r+0x1c>)
9002a3f0:	2300      	movs	r3, #0
9002a3f2:	4604      	mov	r4, r0
9002a3f4:	4608      	mov	r0, r1
9002a3f6:	602b      	str	r3, [r5, #0]
9002a3f8:	f7da f9a4 	bl	90004744 <_close>
9002a3fc:	1c43      	adds	r3, r0, #1
9002a3fe:	d102      	bne.n	9002a406 <_close_r+0x1a>
9002a400:	682b      	ldr	r3, [r5, #0]
9002a402:	b103      	cbz	r3, 9002a406 <_close_r+0x1a>
9002a404:	6023      	str	r3, [r4, #0]
9002a406:	bd38      	pop	{r3, r4, r5, pc}
9002a408:	240223e4 	.word	0x240223e4

9002a40c <_reclaim_reent>:
9002a40c:	4b2d      	ldr	r3, [pc, #180]	@ (9002a4c4 <_reclaim_reent+0xb8>)
9002a40e:	681b      	ldr	r3, [r3, #0]
9002a410:	4283      	cmp	r3, r0
9002a412:	b570      	push	{r4, r5, r6, lr}
9002a414:	4604      	mov	r4, r0
9002a416:	d053      	beq.n	9002a4c0 <_reclaim_reent+0xb4>
9002a418:	69c3      	ldr	r3, [r0, #28]
9002a41a:	b31b      	cbz	r3, 9002a464 <_reclaim_reent+0x58>
9002a41c:	68db      	ldr	r3, [r3, #12]
9002a41e:	b163      	cbz	r3, 9002a43a <_reclaim_reent+0x2e>
9002a420:	2500      	movs	r5, #0
9002a422:	69e3      	ldr	r3, [r4, #28]
9002a424:	68db      	ldr	r3, [r3, #12]
9002a426:	5959      	ldr	r1, [r3, r5]
9002a428:	b9b1      	cbnz	r1, 9002a458 <_reclaim_reent+0x4c>
9002a42a:	3504      	adds	r5, #4
9002a42c:	2d80      	cmp	r5, #128	@ 0x80
9002a42e:	d1f8      	bne.n	9002a422 <_reclaim_reent+0x16>
9002a430:	69e3      	ldr	r3, [r4, #28]
9002a432:	4620      	mov	r0, r4
9002a434:	68d9      	ldr	r1, [r3, #12]
9002a436:	f000 f939 	bl	9002a6ac <_free_r>
9002a43a:	69e3      	ldr	r3, [r4, #28]
9002a43c:	6819      	ldr	r1, [r3, #0]
9002a43e:	b111      	cbz	r1, 9002a446 <_reclaim_reent+0x3a>
9002a440:	4620      	mov	r0, r4
9002a442:	f000 f933 	bl	9002a6ac <_free_r>
9002a446:	69e3      	ldr	r3, [r4, #28]
9002a448:	689d      	ldr	r5, [r3, #8]
9002a44a:	b15d      	cbz	r5, 9002a464 <_reclaim_reent+0x58>
9002a44c:	4629      	mov	r1, r5
9002a44e:	4620      	mov	r0, r4
9002a450:	682d      	ldr	r5, [r5, #0]
9002a452:	f000 f92b 	bl	9002a6ac <_free_r>
9002a456:	e7f8      	b.n	9002a44a <_reclaim_reent+0x3e>
9002a458:	680e      	ldr	r6, [r1, #0]
9002a45a:	4620      	mov	r0, r4
9002a45c:	f000 f926 	bl	9002a6ac <_free_r>
9002a460:	4631      	mov	r1, r6
9002a462:	e7e1      	b.n	9002a428 <_reclaim_reent+0x1c>
9002a464:	6961      	ldr	r1, [r4, #20]
9002a466:	b111      	cbz	r1, 9002a46e <_reclaim_reent+0x62>
9002a468:	4620      	mov	r0, r4
9002a46a:	f000 f91f 	bl	9002a6ac <_free_r>
9002a46e:	69e1      	ldr	r1, [r4, #28]
9002a470:	b111      	cbz	r1, 9002a478 <_reclaim_reent+0x6c>
9002a472:	4620      	mov	r0, r4
9002a474:	f000 f91a 	bl	9002a6ac <_free_r>
9002a478:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9002a47a:	b111      	cbz	r1, 9002a482 <_reclaim_reent+0x76>
9002a47c:	4620      	mov	r0, r4
9002a47e:	f000 f915 	bl	9002a6ac <_free_r>
9002a482:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a484:	b111      	cbz	r1, 9002a48c <_reclaim_reent+0x80>
9002a486:	4620      	mov	r0, r4
9002a488:	f000 f910 	bl	9002a6ac <_free_r>
9002a48c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
9002a48e:	b111      	cbz	r1, 9002a496 <_reclaim_reent+0x8a>
9002a490:	4620      	mov	r0, r4
9002a492:	f000 f90b 	bl	9002a6ac <_free_r>
9002a496:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9002a498:	b111      	cbz	r1, 9002a4a0 <_reclaim_reent+0x94>
9002a49a:	4620      	mov	r0, r4
9002a49c:	f000 f906 	bl	9002a6ac <_free_r>
9002a4a0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9002a4a2:	b111      	cbz	r1, 9002a4aa <_reclaim_reent+0x9e>
9002a4a4:	4620      	mov	r0, r4
9002a4a6:	f000 f901 	bl	9002a6ac <_free_r>
9002a4aa:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9002a4ac:	b111      	cbz	r1, 9002a4b4 <_reclaim_reent+0xa8>
9002a4ae:	4620      	mov	r0, r4
9002a4b0:	f000 f8fc 	bl	9002a6ac <_free_r>
9002a4b4:	6a23      	ldr	r3, [r4, #32]
9002a4b6:	b11b      	cbz	r3, 9002a4c0 <_reclaim_reent+0xb4>
9002a4b8:	4620      	mov	r0, r4
9002a4ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002a4be:	4718      	bx	r3
9002a4c0:	bd70      	pop	{r4, r5, r6, pc}
9002a4c2:	bf00      	nop
9002a4c4:	24000114 	.word	0x24000114

9002a4c8 <_lseek_r>:
9002a4c8:	b538      	push	{r3, r4, r5, lr}
9002a4ca:	4d07      	ldr	r5, [pc, #28]	@ (9002a4e8 <_lseek_r+0x20>)
9002a4cc:	4604      	mov	r4, r0
9002a4ce:	4608      	mov	r0, r1
9002a4d0:	4611      	mov	r1, r2
9002a4d2:	2200      	movs	r2, #0
9002a4d4:	602a      	str	r2, [r5, #0]
9002a4d6:	461a      	mov	r2, r3
9002a4d8:	f7da f940 	bl	9000475c <_lseek>
9002a4dc:	1c43      	adds	r3, r0, #1
9002a4de:	d102      	bne.n	9002a4e6 <_lseek_r+0x1e>
9002a4e0:	682b      	ldr	r3, [r5, #0]
9002a4e2:	b103      	cbz	r3, 9002a4e6 <_lseek_r+0x1e>
9002a4e4:	6023      	str	r3, [r4, #0]
9002a4e6:	bd38      	pop	{r3, r4, r5, pc}
9002a4e8:	240223e4 	.word	0x240223e4

9002a4ec <_read_r>:
9002a4ec:	b538      	push	{r3, r4, r5, lr}
9002a4ee:	4d07      	ldr	r5, [pc, #28]	@ (9002a50c <_read_r+0x20>)
9002a4f0:	4604      	mov	r4, r0
9002a4f2:	4608      	mov	r0, r1
9002a4f4:	4611      	mov	r1, r2
9002a4f6:	2200      	movs	r2, #0
9002a4f8:	602a      	str	r2, [r5, #0]
9002a4fa:	461a      	mov	r2, r3
9002a4fc:	f7da f906 	bl	9000470c <_read>
9002a500:	1c43      	adds	r3, r0, #1
9002a502:	d102      	bne.n	9002a50a <_read_r+0x1e>
9002a504:	682b      	ldr	r3, [r5, #0]
9002a506:	b103      	cbz	r3, 9002a50a <_read_r+0x1e>
9002a508:	6023      	str	r3, [r4, #0]
9002a50a:	bd38      	pop	{r3, r4, r5, pc}
9002a50c:	240223e4 	.word	0x240223e4

9002a510 <_kill_r>:
9002a510:	b538      	push	{r3, r4, r5, lr}
9002a512:	4d07      	ldr	r5, [pc, #28]	@ (9002a530 <_kill_r+0x20>)
9002a514:	2300      	movs	r3, #0
9002a516:	4604      	mov	r4, r0
9002a518:	4608      	mov	r0, r1
9002a51a:	4611      	mov	r1, r2
9002a51c:	602b      	str	r3, [r5, #0]
9002a51e:	f7da f8e5 	bl	900046ec <_kill>
9002a522:	1c43      	adds	r3, r0, #1
9002a524:	d102      	bne.n	9002a52c <_kill_r+0x1c>
9002a526:	682b      	ldr	r3, [r5, #0]
9002a528:	b103      	cbz	r3, 9002a52c <_kill_r+0x1c>
9002a52a:	6023      	str	r3, [r4, #0]
9002a52c:	bd38      	pop	{r3, r4, r5, pc}
9002a52e:	bf00      	nop
9002a530:	240223e4 	.word	0x240223e4

9002a534 <_getpid_r>:
9002a534:	f7da b8d8 	b.w	900046e8 <_getpid>

9002a538 <_sbrk_r>:
9002a538:	b538      	push	{r3, r4, r5, lr}
9002a53a:	4d06      	ldr	r5, [pc, #24]	@ (9002a554 <_sbrk_r+0x1c>)
9002a53c:	2300      	movs	r3, #0
9002a53e:	4604      	mov	r4, r0
9002a540:	4608      	mov	r0, r1
9002a542:	602b      	str	r3, [r5, #0]
9002a544:	f7da f90c 	bl	90004760 <_sbrk>
9002a548:	1c43      	adds	r3, r0, #1
9002a54a:	d102      	bne.n	9002a552 <_sbrk_r+0x1a>
9002a54c:	682b      	ldr	r3, [r5, #0]
9002a54e:	b103      	cbz	r3, 9002a552 <_sbrk_r+0x1a>
9002a550:	6023      	str	r3, [r4, #0]
9002a552:	bd38      	pop	{r3, r4, r5, pc}
9002a554:	240223e4 	.word	0x240223e4

9002a558 <_write_r>:
9002a558:	b538      	push	{r3, r4, r5, lr}
9002a55a:	4d07      	ldr	r5, [pc, #28]	@ (9002a578 <_write_r+0x20>)
9002a55c:	4604      	mov	r4, r0
9002a55e:	4608      	mov	r0, r1
9002a560:	4611      	mov	r1, r2
9002a562:	2200      	movs	r2, #0
9002a564:	602a      	str	r2, [r5, #0]
9002a566:	461a      	mov	r2, r3
9002a568:	f7da f8de 	bl	90004728 <_write>
9002a56c:	1c43      	adds	r3, r0, #1
9002a56e:	d102      	bne.n	9002a576 <_write_r+0x1e>
9002a570:	682b      	ldr	r3, [r5, #0]
9002a572:	b103      	cbz	r3, 9002a576 <_write_r+0x1e>
9002a574:	6023      	str	r3, [r4, #0]
9002a576:	bd38      	pop	{r3, r4, r5, pc}
9002a578:	240223e4 	.word	0x240223e4

9002a57c <__errno>:
9002a57c:	4b01      	ldr	r3, [pc, #4]	@ (9002a584 <__errno+0x8>)
9002a57e:	6818      	ldr	r0, [r3, #0]
9002a580:	4770      	bx	lr
9002a582:	bf00      	nop
9002a584:	24000114 	.word	0x24000114

9002a588 <__libc_init_array>:
9002a588:	b570      	push	{r4, r5, r6, lr}
9002a58a:	4d0d      	ldr	r5, [pc, #52]	@ (9002a5c0 <__libc_init_array+0x38>)
9002a58c:	4c0d      	ldr	r4, [pc, #52]	@ (9002a5c4 <__libc_init_array+0x3c>)
9002a58e:	1b64      	subs	r4, r4, r5
9002a590:	10a4      	asrs	r4, r4, #2
9002a592:	2600      	movs	r6, #0
9002a594:	42a6      	cmp	r6, r4
9002a596:	d109      	bne.n	9002a5ac <__libc_init_array+0x24>
9002a598:	4d0b      	ldr	r5, [pc, #44]	@ (9002a5c8 <__libc_init_array+0x40>)
9002a59a:	4c0c      	ldr	r4, [pc, #48]	@ (9002a5cc <__libc_init_array+0x44>)
9002a59c:	f000 fcce 	bl	9002af3c <_init>
9002a5a0:	1b64      	subs	r4, r4, r5
9002a5a2:	10a4      	asrs	r4, r4, #2
9002a5a4:	2600      	movs	r6, #0
9002a5a6:	42a6      	cmp	r6, r4
9002a5a8:	d105      	bne.n	9002a5b6 <__libc_init_array+0x2e>
9002a5aa:	bd70      	pop	{r4, r5, r6, pc}
9002a5ac:	f855 3b04 	ldr.w	r3, [r5], #4
9002a5b0:	4798      	blx	r3
9002a5b2:	3601      	adds	r6, #1
9002a5b4:	e7ee      	b.n	9002a594 <__libc_init_array+0xc>
9002a5b6:	f855 3b04 	ldr.w	r3, [r5], #4
9002a5ba:	4798      	blx	r3
9002a5bc:	3601      	adds	r6, #1
9002a5be:	e7f2      	b.n	9002a5a6 <__libc_init_array+0x1e>
9002a5c0:	9002deb0 	.word	0x9002deb0
9002a5c4:	9002deb0 	.word	0x9002deb0
9002a5c8:	9002deb0 	.word	0x9002deb0
9002a5cc:	9002dec8 	.word	0x9002dec8

9002a5d0 <__retarget_lock_init_recursive>:
9002a5d0:	4770      	bx	lr

9002a5d2 <__retarget_lock_acquire_recursive>:
9002a5d2:	4770      	bx	lr

9002a5d4 <__retarget_lock_release_recursive>:
9002a5d4:	4770      	bx	lr

9002a5d6 <memcpy>:
9002a5d6:	440a      	add	r2, r1
9002a5d8:	4291      	cmp	r1, r2
9002a5da:	f100 33ff 	add.w	r3, r0, #4294967295
9002a5de:	d100      	bne.n	9002a5e2 <memcpy+0xc>
9002a5e0:	4770      	bx	lr
9002a5e2:	b510      	push	{r4, lr}
9002a5e4:	f811 4b01 	ldrb.w	r4, [r1], #1
9002a5e8:	f803 4f01 	strb.w	r4, [r3, #1]!
9002a5ec:	4291      	cmp	r1, r2
9002a5ee:	d1f9      	bne.n	9002a5e4 <memcpy+0xe>
9002a5f0:	bd10      	pop	{r4, pc}
	...

9002a5f4 <__register_exitproc>:
9002a5f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a5f8:	4d27      	ldr	r5, [pc, #156]	@ (9002a698 <__register_exitproc+0xa4>)
9002a5fa:	4607      	mov	r7, r0
9002a5fc:	6828      	ldr	r0, [r5, #0]
9002a5fe:	4691      	mov	r9, r2
9002a600:	460e      	mov	r6, r1
9002a602:	4698      	mov	r8, r3
9002a604:	f7ff ffe5 	bl	9002a5d2 <__retarget_lock_acquire_recursive>
9002a608:	4a24      	ldr	r2, [pc, #144]	@ (9002a69c <__register_exitproc+0xa8>)
9002a60a:	6814      	ldr	r4, [r2, #0]
9002a60c:	b93c      	cbnz	r4, 9002a61e <__register_exitproc+0x2a>
9002a60e:	4b24      	ldr	r3, [pc, #144]	@ (9002a6a0 <__register_exitproc+0xac>)
9002a610:	6013      	str	r3, [r2, #0]
9002a612:	4a24      	ldr	r2, [pc, #144]	@ (9002a6a4 <__register_exitproc+0xb0>)
9002a614:	b112      	cbz	r2, 9002a61c <__register_exitproc+0x28>
9002a616:	6812      	ldr	r2, [r2, #0]
9002a618:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002a61c:	4c20      	ldr	r4, [pc, #128]	@ (9002a6a0 <__register_exitproc+0xac>)
9002a61e:	6863      	ldr	r3, [r4, #4]
9002a620:	2b1f      	cmp	r3, #31
9002a622:	dd06      	ble.n	9002a632 <__register_exitproc+0x3e>
9002a624:	6828      	ldr	r0, [r5, #0]
9002a626:	f7ff ffd5 	bl	9002a5d4 <__retarget_lock_release_recursive>
9002a62a:	f04f 30ff 	mov.w	r0, #4294967295
9002a62e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a632:	b32f      	cbz	r7, 9002a680 <__register_exitproc+0x8c>
9002a634:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002a638:	b968      	cbnz	r0, 9002a656 <__register_exitproc+0x62>
9002a63a:	4b1b      	ldr	r3, [pc, #108]	@ (9002a6a8 <__register_exitproc+0xb4>)
9002a63c:	2b00      	cmp	r3, #0
9002a63e:	d0f1      	beq.n	9002a624 <__register_exitproc+0x30>
9002a640:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002a644:	f7ff fc10 	bl	90029e68 <malloc>
9002a648:	2800      	cmp	r0, #0
9002a64a:	d0eb      	beq.n	9002a624 <__register_exitproc+0x30>
9002a64c:	2300      	movs	r3, #0
9002a64e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002a652:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002a656:	6863      	ldr	r3, [r4, #4]
9002a658:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002a65c:	2201      	movs	r2, #1
9002a65e:	409a      	lsls	r2, r3
9002a660:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002a664:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002a668:	4313      	orrs	r3, r2
9002a66a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002a66e:	2f02      	cmp	r7, #2
9002a670:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002a674:	bf02      	ittt	eq
9002a676:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002a67a:	4313      	orreq	r3, r2
9002a67c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002a680:	6863      	ldr	r3, [r4, #4]
9002a682:	6828      	ldr	r0, [r5, #0]
9002a684:	1c5a      	adds	r2, r3, #1
9002a686:	3302      	adds	r3, #2
9002a688:	6062      	str	r2, [r4, #4]
9002a68a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002a68e:	f7ff ffa1 	bl	9002a5d4 <__retarget_lock_release_recursive>
9002a692:	2000      	movs	r0, #0
9002a694:	e7cb      	b.n	9002a62e <__register_exitproc+0x3a>
9002a696:	bf00      	nop
9002a698:	24000164 	.word	0x24000164
9002a69c:	24022478 	.word	0x24022478
9002a6a0:	240223ec 	.word	0x240223ec
9002a6a4:	9002de78 	.word	0x9002de78
9002a6a8:	90029e69 	.word	0x90029e69

9002a6ac <_free_r>:
9002a6ac:	b538      	push	{r3, r4, r5, lr}
9002a6ae:	4605      	mov	r5, r0
9002a6b0:	2900      	cmp	r1, #0
9002a6b2:	d041      	beq.n	9002a738 <_free_r+0x8c>
9002a6b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002a6b8:	1f0c      	subs	r4, r1, #4
9002a6ba:	2b00      	cmp	r3, #0
9002a6bc:	bfb8      	it	lt
9002a6be:	18e4      	addlt	r4, r4, r3
9002a6c0:	f7ff fc84 	bl	90029fcc <__malloc_lock>
9002a6c4:	4a1d      	ldr	r2, [pc, #116]	@ (9002a73c <_free_r+0x90>)
9002a6c6:	6813      	ldr	r3, [r2, #0]
9002a6c8:	b933      	cbnz	r3, 9002a6d8 <_free_r+0x2c>
9002a6ca:	6063      	str	r3, [r4, #4]
9002a6cc:	6014      	str	r4, [r2, #0]
9002a6ce:	4628      	mov	r0, r5
9002a6d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a6d4:	f7ff bc80 	b.w	90029fd8 <__malloc_unlock>
9002a6d8:	42a3      	cmp	r3, r4
9002a6da:	d908      	bls.n	9002a6ee <_free_r+0x42>
9002a6dc:	6820      	ldr	r0, [r4, #0]
9002a6de:	1821      	adds	r1, r4, r0
9002a6e0:	428b      	cmp	r3, r1
9002a6e2:	bf01      	itttt	eq
9002a6e4:	6819      	ldreq	r1, [r3, #0]
9002a6e6:	685b      	ldreq	r3, [r3, #4]
9002a6e8:	1809      	addeq	r1, r1, r0
9002a6ea:	6021      	streq	r1, [r4, #0]
9002a6ec:	e7ed      	b.n	9002a6ca <_free_r+0x1e>
9002a6ee:	461a      	mov	r2, r3
9002a6f0:	685b      	ldr	r3, [r3, #4]
9002a6f2:	b10b      	cbz	r3, 9002a6f8 <_free_r+0x4c>
9002a6f4:	42a3      	cmp	r3, r4
9002a6f6:	d9fa      	bls.n	9002a6ee <_free_r+0x42>
9002a6f8:	6811      	ldr	r1, [r2, #0]
9002a6fa:	1850      	adds	r0, r2, r1
9002a6fc:	42a0      	cmp	r0, r4
9002a6fe:	d10b      	bne.n	9002a718 <_free_r+0x6c>
9002a700:	6820      	ldr	r0, [r4, #0]
9002a702:	4401      	add	r1, r0
9002a704:	1850      	adds	r0, r2, r1
9002a706:	4283      	cmp	r3, r0
9002a708:	6011      	str	r1, [r2, #0]
9002a70a:	d1e0      	bne.n	9002a6ce <_free_r+0x22>
9002a70c:	6818      	ldr	r0, [r3, #0]
9002a70e:	685b      	ldr	r3, [r3, #4]
9002a710:	6053      	str	r3, [r2, #4]
9002a712:	4408      	add	r0, r1
9002a714:	6010      	str	r0, [r2, #0]
9002a716:	e7da      	b.n	9002a6ce <_free_r+0x22>
9002a718:	d902      	bls.n	9002a720 <_free_r+0x74>
9002a71a:	230c      	movs	r3, #12
9002a71c:	602b      	str	r3, [r5, #0]
9002a71e:	e7d6      	b.n	9002a6ce <_free_r+0x22>
9002a720:	6820      	ldr	r0, [r4, #0]
9002a722:	1821      	adds	r1, r4, r0
9002a724:	428b      	cmp	r3, r1
9002a726:	bf04      	itt	eq
9002a728:	6819      	ldreq	r1, [r3, #0]
9002a72a:	685b      	ldreq	r3, [r3, #4]
9002a72c:	6063      	str	r3, [r4, #4]
9002a72e:	bf04      	itt	eq
9002a730:	1809      	addeq	r1, r1, r0
9002a732:	6021      	streq	r1, [r4, #0]
9002a734:	6054      	str	r4, [r2, #4]
9002a736:	e7ca      	b.n	9002a6ce <_free_r+0x22>
9002a738:	bd38      	pop	{r3, r4, r5, pc}
9002a73a:	bf00      	nop
9002a73c:	240222a4 	.word	0x240222a4

9002a740 <__sfputc_r>:
9002a740:	6893      	ldr	r3, [r2, #8]
9002a742:	3b01      	subs	r3, #1
9002a744:	2b00      	cmp	r3, #0
9002a746:	b410      	push	{r4}
9002a748:	6093      	str	r3, [r2, #8]
9002a74a:	da08      	bge.n	9002a75e <__sfputc_r+0x1e>
9002a74c:	6994      	ldr	r4, [r2, #24]
9002a74e:	42a3      	cmp	r3, r4
9002a750:	db01      	blt.n	9002a756 <__sfputc_r+0x16>
9002a752:	290a      	cmp	r1, #10
9002a754:	d103      	bne.n	9002a75e <__sfputc_r+0x1e>
9002a756:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a75a:	f7ff bd68 	b.w	9002a22e <__swbuf_r>
9002a75e:	6813      	ldr	r3, [r2, #0]
9002a760:	1c58      	adds	r0, r3, #1
9002a762:	6010      	str	r0, [r2, #0]
9002a764:	7019      	strb	r1, [r3, #0]
9002a766:	4608      	mov	r0, r1
9002a768:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a76c:	4770      	bx	lr

9002a76e <__sfputs_r>:
9002a76e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a770:	4606      	mov	r6, r0
9002a772:	460f      	mov	r7, r1
9002a774:	4614      	mov	r4, r2
9002a776:	18d5      	adds	r5, r2, r3
9002a778:	42ac      	cmp	r4, r5
9002a77a:	d101      	bne.n	9002a780 <__sfputs_r+0x12>
9002a77c:	2000      	movs	r0, #0
9002a77e:	e007      	b.n	9002a790 <__sfputs_r+0x22>
9002a780:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a784:	463a      	mov	r2, r7
9002a786:	4630      	mov	r0, r6
9002a788:	f7ff ffda 	bl	9002a740 <__sfputc_r>
9002a78c:	1c43      	adds	r3, r0, #1
9002a78e:	d1f3      	bne.n	9002a778 <__sfputs_r+0xa>
9002a790:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002a794 <_vfiprintf_r>:
9002a794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a798:	460d      	mov	r5, r1
9002a79a:	b09d      	sub	sp, #116	@ 0x74
9002a79c:	4614      	mov	r4, r2
9002a79e:	4698      	mov	r8, r3
9002a7a0:	4606      	mov	r6, r0
9002a7a2:	b118      	cbz	r0, 9002a7ac <_vfiprintf_r+0x18>
9002a7a4:	6a03      	ldr	r3, [r0, #32]
9002a7a6:	b90b      	cbnz	r3, 9002a7ac <_vfiprintf_r+0x18>
9002a7a8:	f7ff fcb6 	bl	9002a118 <__sinit>
9002a7ac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a7ae:	07d9      	lsls	r1, r3, #31
9002a7b0:	d405      	bmi.n	9002a7be <_vfiprintf_r+0x2a>
9002a7b2:	89ab      	ldrh	r3, [r5, #12]
9002a7b4:	059a      	lsls	r2, r3, #22
9002a7b6:	d402      	bmi.n	9002a7be <_vfiprintf_r+0x2a>
9002a7b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a7ba:	f7ff ff0a 	bl	9002a5d2 <__retarget_lock_acquire_recursive>
9002a7be:	89ab      	ldrh	r3, [r5, #12]
9002a7c0:	071b      	lsls	r3, r3, #28
9002a7c2:	d501      	bpl.n	9002a7c8 <_vfiprintf_r+0x34>
9002a7c4:	692b      	ldr	r3, [r5, #16]
9002a7c6:	b99b      	cbnz	r3, 9002a7f0 <_vfiprintf_r+0x5c>
9002a7c8:	4629      	mov	r1, r5
9002a7ca:	4630      	mov	r0, r6
9002a7cc:	f7ff fd6e 	bl	9002a2ac <__swsetup_r>
9002a7d0:	b170      	cbz	r0, 9002a7f0 <_vfiprintf_r+0x5c>
9002a7d2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a7d4:	07dc      	lsls	r4, r3, #31
9002a7d6:	d504      	bpl.n	9002a7e2 <_vfiprintf_r+0x4e>
9002a7d8:	f04f 30ff 	mov.w	r0, #4294967295
9002a7dc:	b01d      	add	sp, #116	@ 0x74
9002a7de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a7e2:	89ab      	ldrh	r3, [r5, #12]
9002a7e4:	0598      	lsls	r0, r3, #22
9002a7e6:	d4f7      	bmi.n	9002a7d8 <_vfiprintf_r+0x44>
9002a7e8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a7ea:	f7ff fef3 	bl	9002a5d4 <__retarget_lock_release_recursive>
9002a7ee:	e7f3      	b.n	9002a7d8 <_vfiprintf_r+0x44>
9002a7f0:	2300      	movs	r3, #0
9002a7f2:	9309      	str	r3, [sp, #36]	@ 0x24
9002a7f4:	2320      	movs	r3, #32
9002a7f6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002a7fa:	f8cd 800c 	str.w	r8, [sp, #12]
9002a7fe:	2330      	movs	r3, #48	@ 0x30
9002a800:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002a9b0 <_vfiprintf_r+0x21c>
9002a804:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002a808:	f04f 0901 	mov.w	r9, #1
9002a80c:	4623      	mov	r3, r4
9002a80e:	469a      	mov	sl, r3
9002a810:	f813 2b01 	ldrb.w	r2, [r3], #1
9002a814:	b10a      	cbz	r2, 9002a81a <_vfiprintf_r+0x86>
9002a816:	2a25      	cmp	r2, #37	@ 0x25
9002a818:	d1f9      	bne.n	9002a80e <_vfiprintf_r+0x7a>
9002a81a:	ebba 0b04 	subs.w	fp, sl, r4
9002a81e:	d00b      	beq.n	9002a838 <_vfiprintf_r+0xa4>
9002a820:	465b      	mov	r3, fp
9002a822:	4622      	mov	r2, r4
9002a824:	4629      	mov	r1, r5
9002a826:	4630      	mov	r0, r6
9002a828:	f7ff ffa1 	bl	9002a76e <__sfputs_r>
9002a82c:	3001      	adds	r0, #1
9002a82e:	f000 80a7 	beq.w	9002a980 <_vfiprintf_r+0x1ec>
9002a832:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002a834:	445a      	add	r2, fp
9002a836:	9209      	str	r2, [sp, #36]	@ 0x24
9002a838:	f89a 3000 	ldrb.w	r3, [sl]
9002a83c:	2b00      	cmp	r3, #0
9002a83e:	f000 809f 	beq.w	9002a980 <_vfiprintf_r+0x1ec>
9002a842:	2300      	movs	r3, #0
9002a844:	f04f 32ff 	mov.w	r2, #4294967295
9002a848:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002a84c:	f10a 0a01 	add.w	sl, sl, #1
9002a850:	9304      	str	r3, [sp, #16]
9002a852:	9307      	str	r3, [sp, #28]
9002a854:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002a858:	931a      	str	r3, [sp, #104]	@ 0x68
9002a85a:	4654      	mov	r4, sl
9002a85c:	2205      	movs	r2, #5
9002a85e:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a862:	4853      	ldr	r0, [pc, #332]	@ (9002a9b0 <_vfiprintf_r+0x21c>)
9002a864:	f7d5 fd3c 	bl	900002e0 <memchr>
9002a868:	9a04      	ldr	r2, [sp, #16]
9002a86a:	b9d8      	cbnz	r0, 9002a8a4 <_vfiprintf_r+0x110>
9002a86c:	06d1      	lsls	r1, r2, #27
9002a86e:	bf44      	itt	mi
9002a870:	2320      	movmi	r3, #32
9002a872:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002a876:	0713      	lsls	r3, r2, #28
9002a878:	bf44      	itt	mi
9002a87a:	232b      	movmi	r3, #43	@ 0x2b
9002a87c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002a880:	f89a 3000 	ldrb.w	r3, [sl]
9002a884:	2b2a      	cmp	r3, #42	@ 0x2a
9002a886:	d015      	beq.n	9002a8b4 <_vfiprintf_r+0x120>
9002a888:	9a07      	ldr	r2, [sp, #28]
9002a88a:	4654      	mov	r4, sl
9002a88c:	2000      	movs	r0, #0
9002a88e:	f04f 0c0a 	mov.w	ip, #10
9002a892:	4621      	mov	r1, r4
9002a894:	f811 3b01 	ldrb.w	r3, [r1], #1
9002a898:	3b30      	subs	r3, #48	@ 0x30
9002a89a:	2b09      	cmp	r3, #9
9002a89c:	d94b      	bls.n	9002a936 <_vfiprintf_r+0x1a2>
9002a89e:	b1b0      	cbz	r0, 9002a8ce <_vfiprintf_r+0x13a>
9002a8a0:	9207      	str	r2, [sp, #28]
9002a8a2:	e014      	b.n	9002a8ce <_vfiprintf_r+0x13a>
9002a8a4:	eba0 0308 	sub.w	r3, r0, r8
9002a8a8:	fa09 f303 	lsl.w	r3, r9, r3
9002a8ac:	4313      	orrs	r3, r2
9002a8ae:	9304      	str	r3, [sp, #16]
9002a8b0:	46a2      	mov	sl, r4
9002a8b2:	e7d2      	b.n	9002a85a <_vfiprintf_r+0xc6>
9002a8b4:	9b03      	ldr	r3, [sp, #12]
9002a8b6:	1d19      	adds	r1, r3, #4
9002a8b8:	681b      	ldr	r3, [r3, #0]
9002a8ba:	9103      	str	r1, [sp, #12]
9002a8bc:	2b00      	cmp	r3, #0
9002a8be:	bfbb      	ittet	lt
9002a8c0:	425b      	neglt	r3, r3
9002a8c2:	f042 0202 	orrlt.w	r2, r2, #2
9002a8c6:	9307      	strge	r3, [sp, #28]
9002a8c8:	9307      	strlt	r3, [sp, #28]
9002a8ca:	bfb8      	it	lt
9002a8cc:	9204      	strlt	r2, [sp, #16]
9002a8ce:	7823      	ldrb	r3, [r4, #0]
9002a8d0:	2b2e      	cmp	r3, #46	@ 0x2e
9002a8d2:	d10a      	bne.n	9002a8ea <_vfiprintf_r+0x156>
9002a8d4:	7863      	ldrb	r3, [r4, #1]
9002a8d6:	2b2a      	cmp	r3, #42	@ 0x2a
9002a8d8:	d132      	bne.n	9002a940 <_vfiprintf_r+0x1ac>
9002a8da:	9b03      	ldr	r3, [sp, #12]
9002a8dc:	1d1a      	adds	r2, r3, #4
9002a8de:	681b      	ldr	r3, [r3, #0]
9002a8e0:	9203      	str	r2, [sp, #12]
9002a8e2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002a8e6:	3402      	adds	r4, #2
9002a8e8:	9305      	str	r3, [sp, #20]
9002a8ea:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002a9c0 <_vfiprintf_r+0x22c>
9002a8ee:	7821      	ldrb	r1, [r4, #0]
9002a8f0:	2203      	movs	r2, #3
9002a8f2:	4650      	mov	r0, sl
9002a8f4:	f7d5 fcf4 	bl	900002e0 <memchr>
9002a8f8:	b138      	cbz	r0, 9002a90a <_vfiprintf_r+0x176>
9002a8fa:	9b04      	ldr	r3, [sp, #16]
9002a8fc:	eba0 000a 	sub.w	r0, r0, sl
9002a900:	2240      	movs	r2, #64	@ 0x40
9002a902:	4082      	lsls	r2, r0
9002a904:	4313      	orrs	r3, r2
9002a906:	3401      	adds	r4, #1
9002a908:	9304      	str	r3, [sp, #16]
9002a90a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a90e:	4829      	ldr	r0, [pc, #164]	@ (9002a9b4 <_vfiprintf_r+0x220>)
9002a910:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002a914:	2206      	movs	r2, #6
9002a916:	f7d5 fce3 	bl	900002e0 <memchr>
9002a91a:	2800      	cmp	r0, #0
9002a91c:	d03f      	beq.n	9002a99e <_vfiprintf_r+0x20a>
9002a91e:	4b26      	ldr	r3, [pc, #152]	@ (9002a9b8 <_vfiprintf_r+0x224>)
9002a920:	bb1b      	cbnz	r3, 9002a96a <_vfiprintf_r+0x1d6>
9002a922:	9b03      	ldr	r3, [sp, #12]
9002a924:	3307      	adds	r3, #7
9002a926:	f023 0307 	bic.w	r3, r3, #7
9002a92a:	3308      	adds	r3, #8
9002a92c:	9303      	str	r3, [sp, #12]
9002a92e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a930:	443b      	add	r3, r7
9002a932:	9309      	str	r3, [sp, #36]	@ 0x24
9002a934:	e76a      	b.n	9002a80c <_vfiprintf_r+0x78>
9002a936:	fb0c 3202 	mla	r2, ip, r2, r3
9002a93a:	460c      	mov	r4, r1
9002a93c:	2001      	movs	r0, #1
9002a93e:	e7a8      	b.n	9002a892 <_vfiprintf_r+0xfe>
9002a940:	2300      	movs	r3, #0
9002a942:	3401      	adds	r4, #1
9002a944:	9305      	str	r3, [sp, #20]
9002a946:	4619      	mov	r1, r3
9002a948:	f04f 0c0a 	mov.w	ip, #10
9002a94c:	4620      	mov	r0, r4
9002a94e:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a952:	3a30      	subs	r2, #48	@ 0x30
9002a954:	2a09      	cmp	r2, #9
9002a956:	d903      	bls.n	9002a960 <_vfiprintf_r+0x1cc>
9002a958:	2b00      	cmp	r3, #0
9002a95a:	d0c6      	beq.n	9002a8ea <_vfiprintf_r+0x156>
9002a95c:	9105      	str	r1, [sp, #20]
9002a95e:	e7c4      	b.n	9002a8ea <_vfiprintf_r+0x156>
9002a960:	fb0c 2101 	mla	r1, ip, r1, r2
9002a964:	4604      	mov	r4, r0
9002a966:	2301      	movs	r3, #1
9002a968:	e7f0      	b.n	9002a94c <_vfiprintf_r+0x1b8>
9002a96a:	ab03      	add	r3, sp, #12
9002a96c:	9300      	str	r3, [sp, #0]
9002a96e:	462a      	mov	r2, r5
9002a970:	4b12      	ldr	r3, [pc, #72]	@ (9002a9bc <_vfiprintf_r+0x228>)
9002a972:	a904      	add	r1, sp, #16
9002a974:	4630      	mov	r0, r6
9002a976:	f3af 8000 	nop.w
9002a97a:	4607      	mov	r7, r0
9002a97c:	1c78      	adds	r0, r7, #1
9002a97e:	d1d6      	bne.n	9002a92e <_vfiprintf_r+0x19a>
9002a980:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a982:	07d9      	lsls	r1, r3, #31
9002a984:	d405      	bmi.n	9002a992 <_vfiprintf_r+0x1fe>
9002a986:	89ab      	ldrh	r3, [r5, #12]
9002a988:	059a      	lsls	r2, r3, #22
9002a98a:	d402      	bmi.n	9002a992 <_vfiprintf_r+0x1fe>
9002a98c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a98e:	f7ff fe21 	bl	9002a5d4 <__retarget_lock_release_recursive>
9002a992:	89ab      	ldrh	r3, [r5, #12]
9002a994:	065b      	lsls	r3, r3, #25
9002a996:	f53f af1f 	bmi.w	9002a7d8 <_vfiprintf_r+0x44>
9002a99a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002a99c:	e71e      	b.n	9002a7dc <_vfiprintf_r+0x48>
9002a99e:	ab03      	add	r3, sp, #12
9002a9a0:	9300      	str	r3, [sp, #0]
9002a9a2:	462a      	mov	r2, r5
9002a9a4:	4b05      	ldr	r3, [pc, #20]	@ (9002a9bc <_vfiprintf_r+0x228>)
9002a9a6:	a904      	add	r1, sp, #16
9002a9a8:	4630      	mov	r0, r6
9002a9aa:	f000 f879 	bl	9002aaa0 <_printf_i>
9002a9ae:	e7e4      	b.n	9002a97a <_vfiprintf_r+0x1e6>
9002a9b0:	9002de44 	.word	0x9002de44
9002a9b4:	9002de4e 	.word	0x9002de4e
9002a9b8:	00000000 	.word	0x00000000
9002a9bc:	9002a76f 	.word	0x9002a76f
9002a9c0:	9002de4a 	.word	0x9002de4a

9002a9c4 <_printf_common>:
9002a9c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a9c8:	4616      	mov	r6, r2
9002a9ca:	4698      	mov	r8, r3
9002a9cc:	688a      	ldr	r2, [r1, #8]
9002a9ce:	690b      	ldr	r3, [r1, #16]
9002a9d0:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002a9d4:	4293      	cmp	r3, r2
9002a9d6:	bfb8      	it	lt
9002a9d8:	4613      	movlt	r3, r2
9002a9da:	6033      	str	r3, [r6, #0]
9002a9dc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002a9e0:	4607      	mov	r7, r0
9002a9e2:	460c      	mov	r4, r1
9002a9e4:	b10a      	cbz	r2, 9002a9ea <_printf_common+0x26>
9002a9e6:	3301      	adds	r3, #1
9002a9e8:	6033      	str	r3, [r6, #0]
9002a9ea:	6823      	ldr	r3, [r4, #0]
9002a9ec:	0699      	lsls	r1, r3, #26
9002a9ee:	bf42      	ittt	mi
9002a9f0:	6833      	ldrmi	r3, [r6, #0]
9002a9f2:	3302      	addmi	r3, #2
9002a9f4:	6033      	strmi	r3, [r6, #0]
9002a9f6:	6825      	ldr	r5, [r4, #0]
9002a9f8:	f015 0506 	ands.w	r5, r5, #6
9002a9fc:	d106      	bne.n	9002aa0c <_printf_common+0x48>
9002a9fe:	f104 0a19 	add.w	sl, r4, #25
9002aa02:	68e3      	ldr	r3, [r4, #12]
9002aa04:	6832      	ldr	r2, [r6, #0]
9002aa06:	1a9b      	subs	r3, r3, r2
9002aa08:	42ab      	cmp	r3, r5
9002aa0a:	dc26      	bgt.n	9002aa5a <_printf_common+0x96>
9002aa0c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002aa10:	6822      	ldr	r2, [r4, #0]
9002aa12:	3b00      	subs	r3, #0
9002aa14:	bf18      	it	ne
9002aa16:	2301      	movne	r3, #1
9002aa18:	0692      	lsls	r2, r2, #26
9002aa1a:	d42b      	bmi.n	9002aa74 <_printf_common+0xb0>
9002aa1c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002aa20:	4641      	mov	r1, r8
9002aa22:	4638      	mov	r0, r7
9002aa24:	47c8      	blx	r9
9002aa26:	3001      	adds	r0, #1
9002aa28:	d01e      	beq.n	9002aa68 <_printf_common+0xa4>
9002aa2a:	6823      	ldr	r3, [r4, #0]
9002aa2c:	6922      	ldr	r2, [r4, #16]
9002aa2e:	f003 0306 	and.w	r3, r3, #6
9002aa32:	2b04      	cmp	r3, #4
9002aa34:	bf02      	ittt	eq
9002aa36:	68e5      	ldreq	r5, [r4, #12]
9002aa38:	6833      	ldreq	r3, [r6, #0]
9002aa3a:	1aed      	subeq	r5, r5, r3
9002aa3c:	68a3      	ldr	r3, [r4, #8]
9002aa3e:	bf0c      	ite	eq
9002aa40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002aa44:	2500      	movne	r5, #0
9002aa46:	4293      	cmp	r3, r2
9002aa48:	bfc4      	itt	gt
9002aa4a:	1a9b      	subgt	r3, r3, r2
9002aa4c:	18ed      	addgt	r5, r5, r3
9002aa4e:	2600      	movs	r6, #0
9002aa50:	341a      	adds	r4, #26
9002aa52:	42b5      	cmp	r5, r6
9002aa54:	d11a      	bne.n	9002aa8c <_printf_common+0xc8>
9002aa56:	2000      	movs	r0, #0
9002aa58:	e008      	b.n	9002aa6c <_printf_common+0xa8>
9002aa5a:	2301      	movs	r3, #1
9002aa5c:	4652      	mov	r2, sl
9002aa5e:	4641      	mov	r1, r8
9002aa60:	4638      	mov	r0, r7
9002aa62:	47c8      	blx	r9
9002aa64:	3001      	adds	r0, #1
9002aa66:	d103      	bne.n	9002aa70 <_printf_common+0xac>
9002aa68:	f04f 30ff 	mov.w	r0, #4294967295
9002aa6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002aa70:	3501      	adds	r5, #1
9002aa72:	e7c6      	b.n	9002aa02 <_printf_common+0x3e>
9002aa74:	18e1      	adds	r1, r4, r3
9002aa76:	1c5a      	adds	r2, r3, #1
9002aa78:	2030      	movs	r0, #48	@ 0x30
9002aa7a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002aa7e:	4422      	add	r2, r4
9002aa80:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002aa84:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002aa88:	3302      	adds	r3, #2
9002aa8a:	e7c7      	b.n	9002aa1c <_printf_common+0x58>
9002aa8c:	2301      	movs	r3, #1
9002aa8e:	4622      	mov	r2, r4
9002aa90:	4641      	mov	r1, r8
9002aa92:	4638      	mov	r0, r7
9002aa94:	47c8      	blx	r9
9002aa96:	3001      	adds	r0, #1
9002aa98:	d0e6      	beq.n	9002aa68 <_printf_common+0xa4>
9002aa9a:	3601      	adds	r6, #1
9002aa9c:	e7d9      	b.n	9002aa52 <_printf_common+0x8e>
	...

9002aaa0 <_printf_i>:
9002aaa0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002aaa4:	7e0f      	ldrb	r7, [r1, #24]
9002aaa6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002aaa8:	2f78      	cmp	r7, #120	@ 0x78
9002aaaa:	4691      	mov	r9, r2
9002aaac:	4680      	mov	r8, r0
9002aaae:	460c      	mov	r4, r1
9002aab0:	469a      	mov	sl, r3
9002aab2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002aab6:	d807      	bhi.n	9002aac8 <_printf_i+0x28>
9002aab8:	2f62      	cmp	r7, #98	@ 0x62
9002aaba:	d80a      	bhi.n	9002aad2 <_printf_i+0x32>
9002aabc:	2f00      	cmp	r7, #0
9002aabe:	f000 80d1 	beq.w	9002ac64 <_printf_i+0x1c4>
9002aac2:	2f58      	cmp	r7, #88	@ 0x58
9002aac4:	f000 80b8 	beq.w	9002ac38 <_printf_i+0x198>
9002aac8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002aacc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002aad0:	e03a      	b.n	9002ab48 <_printf_i+0xa8>
9002aad2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002aad6:	2b15      	cmp	r3, #21
9002aad8:	d8f6      	bhi.n	9002aac8 <_printf_i+0x28>
9002aada:	a101      	add	r1, pc, #4	@ (adr r1, 9002aae0 <_printf_i+0x40>)
9002aadc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002aae0:	9002ab39 	.word	0x9002ab39
9002aae4:	9002ab4d 	.word	0x9002ab4d
9002aae8:	9002aac9 	.word	0x9002aac9
9002aaec:	9002aac9 	.word	0x9002aac9
9002aaf0:	9002aac9 	.word	0x9002aac9
9002aaf4:	9002aac9 	.word	0x9002aac9
9002aaf8:	9002ab4d 	.word	0x9002ab4d
9002aafc:	9002aac9 	.word	0x9002aac9
9002ab00:	9002aac9 	.word	0x9002aac9
9002ab04:	9002aac9 	.word	0x9002aac9
9002ab08:	9002aac9 	.word	0x9002aac9
9002ab0c:	9002ac4b 	.word	0x9002ac4b
9002ab10:	9002ab77 	.word	0x9002ab77
9002ab14:	9002ac05 	.word	0x9002ac05
9002ab18:	9002aac9 	.word	0x9002aac9
9002ab1c:	9002aac9 	.word	0x9002aac9
9002ab20:	9002ac6d 	.word	0x9002ac6d
9002ab24:	9002aac9 	.word	0x9002aac9
9002ab28:	9002ab77 	.word	0x9002ab77
9002ab2c:	9002aac9 	.word	0x9002aac9
9002ab30:	9002aac9 	.word	0x9002aac9
9002ab34:	9002ac0d 	.word	0x9002ac0d
9002ab38:	6833      	ldr	r3, [r6, #0]
9002ab3a:	1d1a      	adds	r2, r3, #4
9002ab3c:	681b      	ldr	r3, [r3, #0]
9002ab3e:	6032      	str	r2, [r6, #0]
9002ab40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002ab44:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002ab48:	2301      	movs	r3, #1
9002ab4a:	e09c      	b.n	9002ac86 <_printf_i+0x1e6>
9002ab4c:	6833      	ldr	r3, [r6, #0]
9002ab4e:	6820      	ldr	r0, [r4, #0]
9002ab50:	1d19      	adds	r1, r3, #4
9002ab52:	6031      	str	r1, [r6, #0]
9002ab54:	0606      	lsls	r6, r0, #24
9002ab56:	d501      	bpl.n	9002ab5c <_printf_i+0xbc>
9002ab58:	681d      	ldr	r5, [r3, #0]
9002ab5a:	e003      	b.n	9002ab64 <_printf_i+0xc4>
9002ab5c:	0645      	lsls	r5, r0, #25
9002ab5e:	d5fb      	bpl.n	9002ab58 <_printf_i+0xb8>
9002ab60:	f9b3 5000 	ldrsh.w	r5, [r3]
9002ab64:	2d00      	cmp	r5, #0
9002ab66:	da03      	bge.n	9002ab70 <_printf_i+0xd0>
9002ab68:	232d      	movs	r3, #45	@ 0x2d
9002ab6a:	426d      	negs	r5, r5
9002ab6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002ab70:	4858      	ldr	r0, [pc, #352]	@ (9002acd4 <_printf_i+0x234>)
9002ab72:	230a      	movs	r3, #10
9002ab74:	e011      	b.n	9002ab9a <_printf_i+0xfa>
9002ab76:	6821      	ldr	r1, [r4, #0]
9002ab78:	6833      	ldr	r3, [r6, #0]
9002ab7a:	0608      	lsls	r0, r1, #24
9002ab7c:	f853 5b04 	ldr.w	r5, [r3], #4
9002ab80:	d402      	bmi.n	9002ab88 <_printf_i+0xe8>
9002ab82:	0649      	lsls	r1, r1, #25
9002ab84:	bf48      	it	mi
9002ab86:	b2ad      	uxthmi	r5, r5
9002ab88:	2f6f      	cmp	r7, #111	@ 0x6f
9002ab8a:	4852      	ldr	r0, [pc, #328]	@ (9002acd4 <_printf_i+0x234>)
9002ab8c:	6033      	str	r3, [r6, #0]
9002ab8e:	bf14      	ite	ne
9002ab90:	230a      	movne	r3, #10
9002ab92:	2308      	moveq	r3, #8
9002ab94:	2100      	movs	r1, #0
9002ab96:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002ab9a:	6866      	ldr	r6, [r4, #4]
9002ab9c:	60a6      	str	r6, [r4, #8]
9002ab9e:	2e00      	cmp	r6, #0
9002aba0:	db05      	blt.n	9002abae <_printf_i+0x10e>
9002aba2:	6821      	ldr	r1, [r4, #0]
9002aba4:	432e      	orrs	r6, r5
9002aba6:	f021 0104 	bic.w	r1, r1, #4
9002abaa:	6021      	str	r1, [r4, #0]
9002abac:	d04b      	beq.n	9002ac46 <_printf_i+0x1a6>
9002abae:	4616      	mov	r6, r2
9002abb0:	fbb5 f1f3 	udiv	r1, r5, r3
9002abb4:	fb03 5711 	mls	r7, r3, r1, r5
9002abb8:	5dc7      	ldrb	r7, [r0, r7]
9002abba:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002abbe:	462f      	mov	r7, r5
9002abc0:	42bb      	cmp	r3, r7
9002abc2:	460d      	mov	r5, r1
9002abc4:	d9f4      	bls.n	9002abb0 <_printf_i+0x110>
9002abc6:	2b08      	cmp	r3, #8
9002abc8:	d10b      	bne.n	9002abe2 <_printf_i+0x142>
9002abca:	6823      	ldr	r3, [r4, #0]
9002abcc:	07df      	lsls	r7, r3, #31
9002abce:	d508      	bpl.n	9002abe2 <_printf_i+0x142>
9002abd0:	6923      	ldr	r3, [r4, #16]
9002abd2:	6861      	ldr	r1, [r4, #4]
9002abd4:	4299      	cmp	r1, r3
9002abd6:	bfde      	ittt	le
9002abd8:	2330      	movle	r3, #48	@ 0x30
9002abda:	f806 3c01 	strble.w	r3, [r6, #-1]
9002abde:	f106 36ff 	addle.w	r6, r6, #4294967295
9002abe2:	1b92      	subs	r2, r2, r6
9002abe4:	6122      	str	r2, [r4, #16]
9002abe6:	f8cd a000 	str.w	sl, [sp]
9002abea:	464b      	mov	r3, r9
9002abec:	aa03      	add	r2, sp, #12
9002abee:	4621      	mov	r1, r4
9002abf0:	4640      	mov	r0, r8
9002abf2:	f7ff fee7 	bl	9002a9c4 <_printf_common>
9002abf6:	3001      	adds	r0, #1
9002abf8:	d14a      	bne.n	9002ac90 <_printf_i+0x1f0>
9002abfa:	f04f 30ff 	mov.w	r0, #4294967295
9002abfe:	b004      	add	sp, #16
9002ac00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002ac04:	6823      	ldr	r3, [r4, #0]
9002ac06:	f043 0320 	orr.w	r3, r3, #32
9002ac0a:	6023      	str	r3, [r4, #0]
9002ac0c:	4832      	ldr	r0, [pc, #200]	@ (9002acd8 <_printf_i+0x238>)
9002ac0e:	2778      	movs	r7, #120	@ 0x78
9002ac10:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002ac14:	6823      	ldr	r3, [r4, #0]
9002ac16:	6831      	ldr	r1, [r6, #0]
9002ac18:	061f      	lsls	r7, r3, #24
9002ac1a:	f851 5b04 	ldr.w	r5, [r1], #4
9002ac1e:	d402      	bmi.n	9002ac26 <_printf_i+0x186>
9002ac20:	065f      	lsls	r7, r3, #25
9002ac22:	bf48      	it	mi
9002ac24:	b2ad      	uxthmi	r5, r5
9002ac26:	6031      	str	r1, [r6, #0]
9002ac28:	07d9      	lsls	r1, r3, #31
9002ac2a:	bf44      	itt	mi
9002ac2c:	f043 0320 	orrmi.w	r3, r3, #32
9002ac30:	6023      	strmi	r3, [r4, #0]
9002ac32:	b11d      	cbz	r5, 9002ac3c <_printf_i+0x19c>
9002ac34:	2310      	movs	r3, #16
9002ac36:	e7ad      	b.n	9002ab94 <_printf_i+0xf4>
9002ac38:	4826      	ldr	r0, [pc, #152]	@ (9002acd4 <_printf_i+0x234>)
9002ac3a:	e7e9      	b.n	9002ac10 <_printf_i+0x170>
9002ac3c:	6823      	ldr	r3, [r4, #0]
9002ac3e:	f023 0320 	bic.w	r3, r3, #32
9002ac42:	6023      	str	r3, [r4, #0]
9002ac44:	e7f6      	b.n	9002ac34 <_printf_i+0x194>
9002ac46:	4616      	mov	r6, r2
9002ac48:	e7bd      	b.n	9002abc6 <_printf_i+0x126>
9002ac4a:	6833      	ldr	r3, [r6, #0]
9002ac4c:	6825      	ldr	r5, [r4, #0]
9002ac4e:	6961      	ldr	r1, [r4, #20]
9002ac50:	1d18      	adds	r0, r3, #4
9002ac52:	6030      	str	r0, [r6, #0]
9002ac54:	062e      	lsls	r6, r5, #24
9002ac56:	681b      	ldr	r3, [r3, #0]
9002ac58:	d501      	bpl.n	9002ac5e <_printf_i+0x1be>
9002ac5a:	6019      	str	r1, [r3, #0]
9002ac5c:	e002      	b.n	9002ac64 <_printf_i+0x1c4>
9002ac5e:	0668      	lsls	r0, r5, #25
9002ac60:	d5fb      	bpl.n	9002ac5a <_printf_i+0x1ba>
9002ac62:	8019      	strh	r1, [r3, #0]
9002ac64:	2300      	movs	r3, #0
9002ac66:	6123      	str	r3, [r4, #16]
9002ac68:	4616      	mov	r6, r2
9002ac6a:	e7bc      	b.n	9002abe6 <_printf_i+0x146>
9002ac6c:	6833      	ldr	r3, [r6, #0]
9002ac6e:	1d1a      	adds	r2, r3, #4
9002ac70:	6032      	str	r2, [r6, #0]
9002ac72:	681e      	ldr	r6, [r3, #0]
9002ac74:	6862      	ldr	r2, [r4, #4]
9002ac76:	2100      	movs	r1, #0
9002ac78:	4630      	mov	r0, r6
9002ac7a:	f7d5 fb31 	bl	900002e0 <memchr>
9002ac7e:	b108      	cbz	r0, 9002ac84 <_printf_i+0x1e4>
9002ac80:	1b80      	subs	r0, r0, r6
9002ac82:	6060      	str	r0, [r4, #4]
9002ac84:	6863      	ldr	r3, [r4, #4]
9002ac86:	6123      	str	r3, [r4, #16]
9002ac88:	2300      	movs	r3, #0
9002ac8a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002ac8e:	e7aa      	b.n	9002abe6 <_printf_i+0x146>
9002ac90:	6923      	ldr	r3, [r4, #16]
9002ac92:	4632      	mov	r2, r6
9002ac94:	4649      	mov	r1, r9
9002ac96:	4640      	mov	r0, r8
9002ac98:	47d0      	blx	sl
9002ac9a:	3001      	adds	r0, #1
9002ac9c:	d0ad      	beq.n	9002abfa <_printf_i+0x15a>
9002ac9e:	6823      	ldr	r3, [r4, #0]
9002aca0:	079b      	lsls	r3, r3, #30
9002aca2:	d413      	bmi.n	9002accc <_printf_i+0x22c>
9002aca4:	68e0      	ldr	r0, [r4, #12]
9002aca6:	9b03      	ldr	r3, [sp, #12]
9002aca8:	4298      	cmp	r0, r3
9002acaa:	bfb8      	it	lt
9002acac:	4618      	movlt	r0, r3
9002acae:	e7a6      	b.n	9002abfe <_printf_i+0x15e>
9002acb0:	2301      	movs	r3, #1
9002acb2:	4632      	mov	r2, r6
9002acb4:	4649      	mov	r1, r9
9002acb6:	4640      	mov	r0, r8
9002acb8:	47d0      	blx	sl
9002acba:	3001      	adds	r0, #1
9002acbc:	d09d      	beq.n	9002abfa <_printf_i+0x15a>
9002acbe:	3501      	adds	r5, #1
9002acc0:	68e3      	ldr	r3, [r4, #12]
9002acc2:	9903      	ldr	r1, [sp, #12]
9002acc4:	1a5b      	subs	r3, r3, r1
9002acc6:	42ab      	cmp	r3, r5
9002acc8:	dcf2      	bgt.n	9002acb0 <_printf_i+0x210>
9002acca:	e7eb      	b.n	9002aca4 <_printf_i+0x204>
9002accc:	2500      	movs	r5, #0
9002acce:	f104 0619 	add.w	r6, r4, #25
9002acd2:	e7f5      	b.n	9002acc0 <_printf_i+0x220>
9002acd4:	9002de55 	.word	0x9002de55
9002acd8:	9002de66 	.word	0x9002de66

9002acdc <__sflush_r>:
9002acdc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002ace0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002ace4:	0716      	lsls	r6, r2, #28
9002ace6:	4605      	mov	r5, r0
9002ace8:	460c      	mov	r4, r1
9002acea:	d454      	bmi.n	9002ad96 <__sflush_r+0xba>
9002acec:	684b      	ldr	r3, [r1, #4]
9002acee:	2b00      	cmp	r3, #0
9002acf0:	dc02      	bgt.n	9002acf8 <__sflush_r+0x1c>
9002acf2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002acf4:	2b00      	cmp	r3, #0
9002acf6:	dd48      	ble.n	9002ad8a <__sflush_r+0xae>
9002acf8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002acfa:	2e00      	cmp	r6, #0
9002acfc:	d045      	beq.n	9002ad8a <__sflush_r+0xae>
9002acfe:	2300      	movs	r3, #0
9002ad00:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002ad04:	682f      	ldr	r7, [r5, #0]
9002ad06:	6a21      	ldr	r1, [r4, #32]
9002ad08:	602b      	str	r3, [r5, #0]
9002ad0a:	d030      	beq.n	9002ad6e <__sflush_r+0x92>
9002ad0c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002ad0e:	89a3      	ldrh	r3, [r4, #12]
9002ad10:	0759      	lsls	r1, r3, #29
9002ad12:	d505      	bpl.n	9002ad20 <__sflush_r+0x44>
9002ad14:	6863      	ldr	r3, [r4, #4]
9002ad16:	1ad2      	subs	r2, r2, r3
9002ad18:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002ad1a:	b10b      	cbz	r3, 9002ad20 <__sflush_r+0x44>
9002ad1c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002ad1e:	1ad2      	subs	r2, r2, r3
9002ad20:	2300      	movs	r3, #0
9002ad22:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002ad24:	6a21      	ldr	r1, [r4, #32]
9002ad26:	4628      	mov	r0, r5
9002ad28:	47b0      	blx	r6
9002ad2a:	1c43      	adds	r3, r0, #1
9002ad2c:	89a3      	ldrh	r3, [r4, #12]
9002ad2e:	d106      	bne.n	9002ad3e <__sflush_r+0x62>
9002ad30:	6829      	ldr	r1, [r5, #0]
9002ad32:	291d      	cmp	r1, #29
9002ad34:	d82b      	bhi.n	9002ad8e <__sflush_r+0xb2>
9002ad36:	4a2a      	ldr	r2, [pc, #168]	@ (9002ade0 <__sflush_r+0x104>)
9002ad38:	40ca      	lsrs	r2, r1
9002ad3a:	07d6      	lsls	r6, r2, #31
9002ad3c:	d527      	bpl.n	9002ad8e <__sflush_r+0xb2>
9002ad3e:	2200      	movs	r2, #0
9002ad40:	6062      	str	r2, [r4, #4]
9002ad42:	04d9      	lsls	r1, r3, #19
9002ad44:	6922      	ldr	r2, [r4, #16]
9002ad46:	6022      	str	r2, [r4, #0]
9002ad48:	d504      	bpl.n	9002ad54 <__sflush_r+0x78>
9002ad4a:	1c42      	adds	r2, r0, #1
9002ad4c:	d101      	bne.n	9002ad52 <__sflush_r+0x76>
9002ad4e:	682b      	ldr	r3, [r5, #0]
9002ad50:	b903      	cbnz	r3, 9002ad54 <__sflush_r+0x78>
9002ad52:	6560      	str	r0, [r4, #84]	@ 0x54
9002ad54:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002ad56:	602f      	str	r7, [r5, #0]
9002ad58:	b1b9      	cbz	r1, 9002ad8a <__sflush_r+0xae>
9002ad5a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002ad5e:	4299      	cmp	r1, r3
9002ad60:	d002      	beq.n	9002ad68 <__sflush_r+0x8c>
9002ad62:	4628      	mov	r0, r5
9002ad64:	f7ff fca2 	bl	9002a6ac <_free_r>
9002ad68:	2300      	movs	r3, #0
9002ad6a:	6363      	str	r3, [r4, #52]	@ 0x34
9002ad6c:	e00d      	b.n	9002ad8a <__sflush_r+0xae>
9002ad6e:	2301      	movs	r3, #1
9002ad70:	4628      	mov	r0, r5
9002ad72:	47b0      	blx	r6
9002ad74:	4602      	mov	r2, r0
9002ad76:	1c50      	adds	r0, r2, #1
9002ad78:	d1c9      	bne.n	9002ad0e <__sflush_r+0x32>
9002ad7a:	682b      	ldr	r3, [r5, #0]
9002ad7c:	2b00      	cmp	r3, #0
9002ad7e:	d0c6      	beq.n	9002ad0e <__sflush_r+0x32>
9002ad80:	2b1d      	cmp	r3, #29
9002ad82:	d001      	beq.n	9002ad88 <__sflush_r+0xac>
9002ad84:	2b16      	cmp	r3, #22
9002ad86:	d11e      	bne.n	9002adc6 <__sflush_r+0xea>
9002ad88:	602f      	str	r7, [r5, #0]
9002ad8a:	2000      	movs	r0, #0
9002ad8c:	e022      	b.n	9002add4 <__sflush_r+0xf8>
9002ad8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002ad92:	b21b      	sxth	r3, r3
9002ad94:	e01b      	b.n	9002adce <__sflush_r+0xf2>
9002ad96:	690f      	ldr	r7, [r1, #16]
9002ad98:	2f00      	cmp	r7, #0
9002ad9a:	d0f6      	beq.n	9002ad8a <__sflush_r+0xae>
9002ad9c:	0793      	lsls	r3, r2, #30
9002ad9e:	680e      	ldr	r6, [r1, #0]
9002ada0:	bf08      	it	eq
9002ada2:	694b      	ldreq	r3, [r1, #20]
9002ada4:	600f      	str	r7, [r1, #0]
9002ada6:	bf18      	it	ne
9002ada8:	2300      	movne	r3, #0
9002adaa:	eba6 0807 	sub.w	r8, r6, r7
9002adae:	608b      	str	r3, [r1, #8]
9002adb0:	f1b8 0f00 	cmp.w	r8, #0
9002adb4:	dde9      	ble.n	9002ad8a <__sflush_r+0xae>
9002adb6:	6a21      	ldr	r1, [r4, #32]
9002adb8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002adba:	4643      	mov	r3, r8
9002adbc:	463a      	mov	r2, r7
9002adbe:	4628      	mov	r0, r5
9002adc0:	47b0      	blx	r6
9002adc2:	2800      	cmp	r0, #0
9002adc4:	dc08      	bgt.n	9002add8 <__sflush_r+0xfc>
9002adc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002adca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002adce:	81a3      	strh	r3, [r4, #12]
9002add0:	f04f 30ff 	mov.w	r0, #4294967295
9002add4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002add8:	4407      	add	r7, r0
9002adda:	eba8 0800 	sub.w	r8, r8, r0
9002adde:	e7e7      	b.n	9002adb0 <__sflush_r+0xd4>
9002ade0:	20400001 	.word	0x20400001

9002ade4 <_fflush_r>:
9002ade4:	b538      	push	{r3, r4, r5, lr}
9002ade6:	690b      	ldr	r3, [r1, #16]
9002ade8:	4605      	mov	r5, r0
9002adea:	460c      	mov	r4, r1
9002adec:	b913      	cbnz	r3, 9002adf4 <_fflush_r+0x10>
9002adee:	2500      	movs	r5, #0
9002adf0:	4628      	mov	r0, r5
9002adf2:	bd38      	pop	{r3, r4, r5, pc}
9002adf4:	b118      	cbz	r0, 9002adfe <_fflush_r+0x1a>
9002adf6:	6a03      	ldr	r3, [r0, #32]
9002adf8:	b90b      	cbnz	r3, 9002adfe <_fflush_r+0x1a>
9002adfa:	f7ff f98d 	bl	9002a118 <__sinit>
9002adfe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ae02:	2b00      	cmp	r3, #0
9002ae04:	d0f3      	beq.n	9002adee <_fflush_r+0xa>
9002ae06:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002ae08:	07d0      	lsls	r0, r2, #31
9002ae0a:	d404      	bmi.n	9002ae16 <_fflush_r+0x32>
9002ae0c:	0599      	lsls	r1, r3, #22
9002ae0e:	d402      	bmi.n	9002ae16 <_fflush_r+0x32>
9002ae10:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002ae12:	f7ff fbde 	bl	9002a5d2 <__retarget_lock_acquire_recursive>
9002ae16:	4628      	mov	r0, r5
9002ae18:	4621      	mov	r1, r4
9002ae1a:	f7ff ff5f 	bl	9002acdc <__sflush_r>
9002ae1e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002ae20:	07da      	lsls	r2, r3, #31
9002ae22:	4605      	mov	r5, r0
9002ae24:	d4e4      	bmi.n	9002adf0 <_fflush_r+0xc>
9002ae26:	89a3      	ldrh	r3, [r4, #12]
9002ae28:	059b      	lsls	r3, r3, #22
9002ae2a:	d4e1      	bmi.n	9002adf0 <_fflush_r+0xc>
9002ae2c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002ae2e:	f7ff fbd1 	bl	9002a5d4 <__retarget_lock_release_recursive>
9002ae32:	e7dd      	b.n	9002adf0 <_fflush_r+0xc>

9002ae34 <__swhatbuf_r>:
9002ae34:	b570      	push	{r4, r5, r6, lr}
9002ae36:	460c      	mov	r4, r1
9002ae38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ae3c:	2900      	cmp	r1, #0
9002ae3e:	b096      	sub	sp, #88	@ 0x58
9002ae40:	4615      	mov	r5, r2
9002ae42:	461e      	mov	r6, r3
9002ae44:	da0d      	bge.n	9002ae62 <__swhatbuf_r+0x2e>
9002ae46:	89a3      	ldrh	r3, [r4, #12]
9002ae48:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002ae4c:	f04f 0100 	mov.w	r1, #0
9002ae50:	bf14      	ite	ne
9002ae52:	2340      	movne	r3, #64	@ 0x40
9002ae54:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002ae58:	2000      	movs	r0, #0
9002ae5a:	6031      	str	r1, [r6, #0]
9002ae5c:	602b      	str	r3, [r5, #0]
9002ae5e:	b016      	add	sp, #88	@ 0x58
9002ae60:	bd70      	pop	{r4, r5, r6, pc}
9002ae62:	466a      	mov	r2, sp
9002ae64:	f000 f848 	bl	9002aef8 <_fstat_r>
9002ae68:	2800      	cmp	r0, #0
9002ae6a:	dbec      	blt.n	9002ae46 <__swhatbuf_r+0x12>
9002ae6c:	9901      	ldr	r1, [sp, #4]
9002ae6e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002ae72:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002ae76:	4259      	negs	r1, r3
9002ae78:	4159      	adcs	r1, r3
9002ae7a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002ae7e:	e7eb      	b.n	9002ae58 <__swhatbuf_r+0x24>

9002ae80 <__smakebuf_r>:
9002ae80:	898b      	ldrh	r3, [r1, #12]
9002ae82:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002ae84:	079d      	lsls	r5, r3, #30
9002ae86:	4606      	mov	r6, r0
9002ae88:	460c      	mov	r4, r1
9002ae8a:	d507      	bpl.n	9002ae9c <__smakebuf_r+0x1c>
9002ae8c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002ae90:	6023      	str	r3, [r4, #0]
9002ae92:	6123      	str	r3, [r4, #16]
9002ae94:	2301      	movs	r3, #1
9002ae96:	6163      	str	r3, [r4, #20]
9002ae98:	b003      	add	sp, #12
9002ae9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002ae9c:	ab01      	add	r3, sp, #4
9002ae9e:	466a      	mov	r2, sp
9002aea0:	f7ff ffc8 	bl	9002ae34 <__swhatbuf_r>
9002aea4:	9f00      	ldr	r7, [sp, #0]
9002aea6:	4605      	mov	r5, r0
9002aea8:	4639      	mov	r1, r7
9002aeaa:	4630      	mov	r0, r6
9002aeac:	f7ff f80e 	bl	90029ecc <_malloc_r>
9002aeb0:	b948      	cbnz	r0, 9002aec6 <__smakebuf_r+0x46>
9002aeb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002aeb6:	059a      	lsls	r2, r3, #22
9002aeb8:	d4ee      	bmi.n	9002ae98 <__smakebuf_r+0x18>
9002aeba:	f023 0303 	bic.w	r3, r3, #3
9002aebe:	f043 0302 	orr.w	r3, r3, #2
9002aec2:	81a3      	strh	r3, [r4, #12]
9002aec4:	e7e2      	b.n	9002ae8c <__smakebuf_r+0xc>
9002aec6:	89a3      	ldrh	r3, [r4, #12]
9002aec8:	6020      	str	r0, [r4, #0]
9002aeca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002aece:	81a3      	strh	r3, [r4, #12]
9002aed0:	9b01      	ldr	r3, [sp, #4]
9002aed2:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002aed6:	b15b      	cbz	r3, 9002aef0 <__smakebuf_r+0x70>
9002aed8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002aedc:	4630      	mov	r0, r6
9002aede:	f000 f81d 	bl	9002af1c <_isatty_r>
9002aee2:	b128      	cbz	r0, 9002aef0 <__smakebuf_r+0x70>
9002aee4:	89a3      	ldrh	r3, [r4, #12]
9002aee6:	f023 0303 	bic.w	r3, r3, #3
9002aeea:	f043 0301 	orr.w	r3, r3, #1
9002aeee:	81a3      	strh	r3, [r4, #12]
9002aef0:	89a3      	ldrh	r3, [r4, #12]
9002aef2:	431d      	orrs	r5, r3
9002aef4:	81a5      	strh	r5, [r4, #12]
9002aef6:	e7cf      	b.n	9002ae98 <__smakebuf_r+0x18>

9002aef8 <_fstat_r>:
9002aef8:	b538      	push	{r3, r4, r5, lr}
9002aefa:	4d07      	ldr	r5, [pc, #28]	@ (9002af18 <_fstat_r+0x20>)
9002aefc:	2300      	movs	r3, #0
9002aefe:	4604      	mov	r4, r0
9002af00:	4608      	mov	r0, r1
9002af02:	4611      	mov	r1, r2
9002af04:	602b      	str	r3, [r5, #0]
9002af06:	f7d9 fc21 	bl	9000474c <_fstat>
9002af0a:	1c43      	adds	r3, r0, #1
9002af0c:	d102      	bne.n	9002af14 <_fstat_r+0x1c>
9002af0e:	682b      	ldr	r3, [r5, #0]
9002af10:	b103      	cbz	r3, 9002af14 <_fstat_r+0x1c>
9002af12:	6023      	str	r3, [r4, #0]
9002af14:	bd38      	pop	{r3, r4, r5, pc}
9002af16:	bf00      	nop
9002af18:	240223e4 	.word	0x240223e4

9002af1c <_isatty_r>:
9002af1c:	b538      	push	{r3, r4, r5, lr}
9002af1e:	4d06      	ldr	r5, [pc, #24]	@ (9002af38 <_isatty_r+0x1c>)
9002af20:	2300      	movs	r3, #0
9002af22:	4604      	mov	r4, r0
9002af24:	4608      	mov	r0, r1
9002af26:	602b      	str	r3, [r5, #0]
9002af28:	f7d9 fc16 	bl	90004758 <_isatty>
9002af2c:	1c43      	adds	r3, r0, #1
9002af2e:	d102      	bne.n	9002af36 <_isatty_r+0x1a>
9002af30:	682b      	ldr	r3, [r5, #0]
9002af32:	b103      	cbz	r3, 9002af36 <_isatty_r+0x1a>
9002af34:	6023      	str	r3, [r4, #0]
9002af36:	bd38      	pop	{r3, r4, r5, pc}
9002af38:	240223e4 	.word	0x240223e4

9002af3c <_init>:
9002af3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002af3e:	bf00      	nop
9002af40:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002af42:	bc08      	pop	{r3}
9002af44:	469e      	mov	lr, r3
9002af46:	4770      	bx	lr

9002af48 <_fini>:
9002af48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002af4a:	bf00      	nop
9002af4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002af4e:	bc08      	pop	{r3}
9002af50:	469e      	mov	lr, r3
9002af52:	4770      	bx	lr
