
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002c434  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000038c4  9002c6d8  9002c6d8  000306d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000050  9002ff9c  9002ff9c  00033f9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002ffec  9002ffec  000629d8  2**0
                  CONTENTS
  6 .ARM          00000008  9002ffec  9002ffec  00033fec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002fff4  9002fff4  000629d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002fff4  9002fff4  00033ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9003000c  9003000c  0003400c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  90030014  00035000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9003017c  00035180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90032e7c  00037e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90035b7c  0003ab80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90035c7c  0003ac80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001c88c  24005d80  90035d7c  0003ad80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  2402260c  90035d7c  0003b60c  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  000629d8  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00001250  90200000  90200000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 000000d8  90201250  90201250  0003c250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 000266b0  90201328  90201328  0003c328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00063000  2**2
                  ALLOC
 22 .debug_line   0007c05a  00000000  00000000  00062a06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000065  00000000  00000000  000dea60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000ebeb2  00000000  00000000  000deac5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 00018bfb  00000000  00000000  001ca977  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 000039b8  00000000  00000000  001e3578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a908d  00000000  00000000  001e6f30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 00006f14  00000000  00000000  0038ffbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004b5ec  00000000  00000000  00396ed1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003e24bd  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000b2f4  00000000  00000000  003e2580  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 0003b0bd  00000000  00000000  003ed874  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002c6bc 	.word	0x9002c6bc

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002c6bc 	.word	0x9002c6bc

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f006 fcdd 	bl	900074ac <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f02b f909 	bl	9002bd08 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f003 f861 	bl	90003bbc <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	90030014 	.word	0x90030014
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	2402260c 	.word	0x2402260c

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_Z16setModelInstanceP5Model>:

static Model* modelInstance = nullptr;

void setModelInstance(Model* model)
{
    modelInstance = model;
90000b1c:	4b01      	ldr	r3, [pc, #4]	@ (90000b24 <_Z16setModelInstanceP5Model+0x8>)
90000b1e:	6018      	str	r0, [r3, #0]
}
90000b20:	4770      	bx	lr
90000b22:	bf00      	nop
90000b24:	24005d9c 	.word	0x24005d9c

90000b28 <TC_Received>:

void TC_Received(const char* data)
{
    if (modelInstance)
90000b28:	4b03      	ldr	r3, [pc, #12]	@ (90000b38 <TC_Received+0x10>)
{
90000b2a:	4601      	mov	r1, r0
    if (modelInstance)
90000b2c:	681b      	ldr	r3, [r3, #0]
90000b2e:	b113      	cbz	r3, 90000b36 <TC_Received+0xe>
    {
        modelInstance->TC_Set(data);  // call into the GUI logic
90000b30:	4618      	mov	r0, r3
90000b32:	f005 badb 	b.w	900060ec <_ZN5Model6TC_SetEPKc>
    }
}
90000b36:	4770      	bx	lr
90000b38:	24005d9c 	.word	0x24005d9c

90000b3c <to_logic_reset_TC>:

void to_logic_reset_TC(){
	UART_REST_TC();
90000b3c:	f002 bed6 	b.w	900038ec <UART_REST_TC>

90000b40 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b40:	4770      	bx	lr
90000b42:	bf00      	nop

90000b44 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b44:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b46:	f002 f8c7 	bl	90002cd8 <touchgfx_components_init>
    touchgfx_init();
}
90000b4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b4e:	f002 b845 	b.w	90002bdc <touchgfx_init>
90000b52:	bf00      	nop

90000b54 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b54:	f002 b8c2 	b.w	90002cdc <touchgfx_taskEntry>

90000b58 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b58:	6840      	ldr	r0, [r0, #4]
    }
90000b5a:	4770      	bx	lr

90000b5c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b5c:	6041      	str	r1, [r0, #4]
    }
90000b5e:	4770      	bx	lr

90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b60:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b64:	4b08      	ldr	r3, [pc, #32]	@ (90000b88 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b66:	4a09      	ldr	r2, [pc, #36]	@ (90000b8c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b68:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b6c:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b70:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b74:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b78:	430a      	orrs	r2, r1
90000b7a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b7e:	681a      	ldr	r2, [r3, #0]
90000b80:	f042 0201 	orr.w	r2, r2, #1
90000b84:	601a      	str	r2, [r3, #0]
}
90000b86:	4770      	bx	lr
90000b88:	e0001000 	.word	0xe0001000
90000b8c:	c5acce55 	.word	0xc5acce55

90000b90 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b90:	1a52      	subs	r2, r2, r1
90000b92:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b96:	fbb2 f0f3 	udiv	r0, r2, r3
90000b9a:	4770      	bx	lr

90000b9c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b9c:	4b01      	ldr	r3, [pc, #4]	@ (90000ba4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b9e:	6858      	ldr	r0, [r3, #4]
}
90000ba0:	4770      	bx	lr
90000ba2:	bf00      	nop
90000ba4:	e0001000 	.word	0xe0001000

90000ba8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000ba8:	4770      	bx	lr
90000baa:	bf00      	nop

90000bac <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000bac:	b510      	push	{r4, lr}
90000bae:	4604      	mov	r4, r0
90000bb0:	210c      	movs	r1, #12
90000bb2:	f02a f97d 	bl	9002aeb0 <_ZdlPvj>
90000bb6:	4620      	mov	r0, r4
90000bb8:	bd10      	pop	{r4, pc}
90000bba:	bf00      	nop

90000bbc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bbc:	6803      	ldr	r3, [r0, #0]
90000bbe:	4a0c      	ldr	r2, [pc, #48]	@ (90000bf0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000bc0:	691b      	ldr	r3, [r3, #16]
{
90000bc2:	b510      	push	{r4, lr}
90000bc4:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000bc6:	b149      	cbz	r1, 90000bdc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc8:	4293      	cmp	r3, r2
90000bca:	d10d      	bne.n	90000be8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000bcc:	4b09      	ldr	r3, [pc, #36]	@ (90000bf4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bce:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bd0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bd2:	6863      	ldr	r3, [r4, #4]
90000bd4:	1a9b      	subs	r3, r3, r2
90000bd6:	4403      	add	r3, r0
90000bd8:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bda:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bdc:	4293      	cmp	r3, r2
90000bde:	d105      	bne.n	90000bec <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000be0:	4b04      	ldr	r3, [pc, #16]	@ (90000bf4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000be2:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000be4:	60a0      	str	r0, [r4, #8]
}
90000be6:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000be8:	4798      	blx	r3
90000bea:	e7f1      	b.n	90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bec:	4798      	blx	r3
90000bee:	e7f9      	b.n	90000be4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bf0:	90000b9d 	.word	0x90000b9d
90000bf4:	e0001000 	.word	0xe0001000

90000bf8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bf8:	4770      	bx	lr
90000bfa:	bf00      	nop
90000bfc:	0000      	movs	r0, r0
	...

90000c00 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000c00:	b500      	push	{lr}
90000c02:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000c04:	2208      	movs	r2, #8
90000c06:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000c08:	2000      	movs	r0, #0
90000c0a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000c0c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c28 <_ZN20STM32TouchController4initEv+0x28>
90000c10:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000c14:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000c18:	f006 fb5a 	bl	900072d0 <BSP_TS_Init>
}
90000c1c:	b005      	add	sp, #20
90000c1e:	f85d fb04 	ldr.w	pc, [sp], #4
90000c22:	bf00      	nop
90000c24:	f3af 8000 	nop.w
90000c28:	000001e0 	.word	0x000001e0
90000c2c:	00000110 	.word	0x00000110

90000c30 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c30:	b530      	push	{r4, r5, lr}
90000c32:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c34:	2000      	movs	r0, #0
{
90000c36:	460d      	mov	r5, r1
90000c38:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c3a:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c3c:	9001      	str	r0, [sp, #4]
90000c3e:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c42:	f006 fbd3 	bl	900073ec <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c46:	9801      	ldr	r0, [sp, #4]
90000c48:	b120      	cbz	r0, 90000c54 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c4a:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c4c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c50:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c52:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c54:	b005      	add	sp, #20
90000c56:	bd30      	pop	{r4, r5, pc}

90000c58 <_ZN20STM32TouchControllerD0Ev>:
90000c58:	b510      	push	{r4, lr}
90000c5a:	4604      	mov	r4, r0
90000c5c:	2104      	movs	r1, #4
90000c5e:	f02a f927 	bl	9002aeb0 <_ZdlPvj>
90000c62:	4620      	mov	r0, r4
90000c64:	bd10      	pop	{r4, pc}
90000c66:	bf00      	nop

90000c68 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c68:	2108      	movs	r1, #8
90000c6a:	4808      	ldr	r0, [pc, #32]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x24>)
{
90000c6c:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c6e:	f007 fccd 	bl	9000860c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c72:	2801      	cmp	r0, #1
90000c74:	d101      	bne.n	90000c7a <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c76:	4b06      	ldr	r3, [pc, #24]	@ (90000c90 <_ZN8touchgfx4GPIO4initEv+0x28>)
90000c78:	6018      	str	r0, [r3, #0]
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c7a:	2140      	movs	r1, #64	@ 0x40
90000c7c:	4805      	ldr	r0, [pc, #20]	@ (90000c94 <_ZN8touchgfx4GPIO4initEv+0x2c>)
90000c7e:	f007 fcc5 	bl	9000860c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c82:	2801      	cmp	r0, #1
90000c84:	d101      	bne.n	90000c8a <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c86:	4b02      	ldr	r3, [pc, #8]	@ (90000c90 <_ZN8touchgfx4GPIO4initEv+0x28>)
90000c88:	60d8      	str	r0, [r3, #12]
}
90000c8a:	bd08      	pop	{r3, pc}
90000c8c:	58021800 	.word	0x58021800
90000c90:	24005da0 	.word	0x24005da0
90000c94:	58020000 	.word	0x58020000

90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c98:	b158      	cbz	r0, 90000cb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
90000c9a:	2803      	cmp	r0, #3
90000c9c:	d000      	beq.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
90000c9e:	4770      	bx	lr
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000ca0:	4b08      	ldr	r3, [pc, #32]	@ (90000cc4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
90000ca2:	2140      	movs	r1, #64	@ 0x40
90000ca4:	4808      	ldr	r0, [pc, #32]	@ (90000cc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
90000ca6:	68da      	ldr	r2, [r3, #12]
90000ca8:	fab2 f282 	clz	r2, r2
90000cac:	0952      	lsrs	r2, r2, #5
90000cae:	f007 bcb3 	b.w	90008618 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cb2:	4b04      	ldr	r3, [pc, #16]	@ (90000cc4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
90000cb4:	2108      	movs	r1, #8
90000cb6:	4805      	ldr	r0, [pc, #20]	@ (90000ccc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
90000cb8:	681a      	ldr	r2, [r3, #0]
90000cba:	fab2 f282 	clz	r2, r2
90000cbe:	0952      	lsrs	r2, r2, #5
90000cc0:	f007 bcaa 	b.w	90008618 <HAL_GPIO_WritePin>
90000cc4:	24005da0 	.word	0x24005da0
90000cc8:	58020000 	.word	0x58020000
90000ccc:	58021800 	.word	0x58021800

90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cd0:	b158      	cbz	r0, 90000cea <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
90000cd2:	2803      	cmp	r0, #3
90000cd4:	d000      	beq.n	90000cd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
90000cd6:	4770      	bx	lr
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cd8:	4b08      	ldr	r3, [pc, #32]	@ (90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
90000cda:	2140      	movs	r1, #64	@ 0x40
90000cdc:	4808      	ldr	r0, [pc, #32]	@ (90000d00 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
90000cde:	68da      	ldr	r2, [r3, #12]
90000ce0:	3a00      	subs	r2, #0
90000ce2:	bf18      	it	ne
90000ce4:	2201      	movne	r2, #1
90000ce6:	f007 bc97 	b.w	90008618 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cea:	4b04      	ldr	r3, [pc, #16]	@ (90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
90000cec:	2108      	movs	r1, #8
90000cee:	4805      	ldr	r0, [pc, #20]	@ (90000d04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
90000cf0:	681a      	ldr	r2, [r3, #0]
90000cf2:	3a00      	subs	r2, #0
90000cf4:	bf18      	it	ne
90000cf6:	2201      	movne	r2, #1
90000cf8:	f007 bc8e 	b.w	90008618 <HAL_GPIO_WritePin>
90000cfc:	24005da0 	.word	0x24005da0
90000d00:	58020000 	.word	0x58020000
90000d04:	58021800 	.word	0x58021800

90000d08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d08:	b130      	cbz	r0, 90000d18 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
90000d0a:	2803      	cmp	r0, #3
90000d0c:	d000      	beq.n	90000d10 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
90000d0e:	4770      	bx	lr
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d10:	2140      	movs	r1, #64	@ 0x40
90000d12:	4803      	ldr	r0, [pc, #12]	@ (90000d20 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
90000d14:	f007 bc84 	b.w	90008620 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d18:	2108      	movs	r1, #8
90000d1a:	4802      	ldr	r0, [pc, #8]	@ (90000d24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
90000d1c:	f007 bc80 	b.w	90008620 <HAL_GPIO_TogglePin>
90000d20:	58020000 	.word	0x58020000
90000d24:	58021800 	.word	0x58021800

90000d28 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d28:	2000      	movs	r0, #0
90000d2a:	4770      	bx	lr

90000d2c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d2c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d2e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d32:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d36:	4770      	bx	lr

90000d38 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000d38:	4770      	bx	lr
90000d3a:	bf00      	nop

90000d3c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d3c:	2000      	movs	r0, #0
90000d3e:	4770      	bx	lr

90000d40 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d40:	1e0a      	subs	r2, r1, #0
90000d42:	4b03      	ldr	r3, [pc, #12]	@ (90000d50 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d44:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d46:	bf18      	it	ne
90000d48:	2201      	movne	r2, #1
90000d4a:	701a      	strb	r2, [r3, #0]
    }
90000d4c:	4770      	bx	lr
90000d4e:	bf00      	nop
90000d50:	240218cb 	.word	0x240218cb

90000d54 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000d54:	4770      	bx	lr
90000d56:	bf00      	nop

90000d58 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d5c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d5e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d60:	b103      	cbz	r3, 90000d64 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d62:	4718      	bx	r3
        }
    }
90000d64:	4770      	bx	lr
90000d66:	bf00      	nop

90000d68 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d68:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d6c:	4770      	bx	lr
90000d6e:	bf00      	nop

90000d70 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000d70:	4770      	bx	lr
90000d72:	bf00      	nop

90000d74 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000d74:	4770      	bx	lr
90000d76:	bf00      	nop

90000d78 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop

90000d7c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d7c:	b510      	push	{r4, lr}
90000d7e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000d80:	f011 ffa4 	bl	90012ccc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000d84:	6823      	ldr	r3, [r4, #0]
90000d86:	4620      	mov	r0, r4
90000d88:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000d8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000d90:	4718      	bx	r3
90000d92:	bf00      	nop

90000d94 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000d94:	f002 b8c6 	b.w	90002f24 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000d98 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000d98:	f002 b8ca 	b.w	90002f30 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000d9c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000d9c:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000d9e:	f002 f961 	bl	90003064 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000da2:	4812      	ldr	r0, [pc, #72]	@ (90000dec <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000da4:	2300      	movs	r3, #0
90000da6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000daa:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dae:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000db2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000db6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dba:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dbe:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dc2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dc6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dc8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dcc:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dce:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000dd2:	1c5a      	adds	r2, r3, #1
90000dd4:	d1f8      	bne.n	90000dc8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000dd6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dda:	f11c 0f20 	cmn.w	ip, #32
90000dde:	d1f0      	bne.n	90000dc2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000de0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000de4:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000de8:	bd10      	pop	{r4, pc}
90000dea:	bf00      	nop
90000dec:	e000ed00 	.word	0xe000ed00

90000df0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000df0:	f002 b874 	b.w	90002edc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000df4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000df4:	f002 b9ba 	b.w	9000316c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000df8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000df8:	f002 b9a4 	b.w	90003144 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000dfc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000dfc:	f002 b878 	b.w	90002ef0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e00:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e02:	4b09      	ldr	r3, [pc, #36]	@ (90000e28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e04:	881b      	ldrh	r3, [r3, #0]
90000e06:	428b      	cmp	r3, r1
90000e08:	d808      	bhi.n	90000e1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e0a:	4b08      	ldr	r3, [pc, #32]	@ (90000e2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e0c:	881b      	ldrh	r3, [r3, #0]
90000e0e:	4293      	cmp	r3, r2
90000e10:	d804      	bhi.n	90000e1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e12:	4807      	ldr	r0, [pc, #28]	@ (90000e30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e14:	4b07      	ldr	r3, [pc, #28]	@ (90000e34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e16:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e18:	801a      	strh	r2, [r3, #0]
    }
90000e1a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e1c:	4b06      	ldr	r3, [pc, #24]	@ (90000e38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e1e:	21a3      	movs	r1, #163	@ 0xa3
90000e20:	4a06      	ldr	r2, [pc, #24]	@ (90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e22:	4807      	ldr	r0, [pc, #28]	@ (90000e40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e24:	f02a fbbc 	bl	9002b5a0 <__assert_func>
90000e28:	240218c0 	.word	0x240218c0
90000e2c:	240218c2 	.word	0x240218c2
90000e30:	240218c6 	.word	0x240218c6
90000e34:	240218c8 	.word	0x240218c8
90000e38:	9002c758 	.word	0x9002c758
90000e3c:	9002c7c0 	.word	0x9002c7c0
90000e40:	9002c804 	.word	0x9002c804

90000e44 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e44:	f011 ba8e 	b.w	90012364 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e48 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e48:	f011 b954 	b.w	900120f4 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e4c <_ZN11TouchGFXHALD0Ev>:
90000e4c:	b510      	push	{r4, lr}
90000e4e:	4604      	mov	r4, r0
90000e50:	2190      	movs	r1, #144	@ 0x90
90000e52:	f02a f82d 	bl	9002aeb0 <_ZdlPvj>
90000e56:	4620      	mov	r0, r4
90000e58:	bd10      	pop	{r4, pc}
90000e5a:	bf00      	nop

90000e5c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000e5c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e60:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000e64:	4b0b      	ldr	r3, [pc, #44]	@ (90000e94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e66:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e68:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e6a:	d00b      	beq.n	90000e84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e6c:	b94a      	cbnz	r2, 90000e82 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e6e:	4a0a      	ldr	r2, [pc, #40]	@ (90000e98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000e70:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e74:	4909      	ldr	r1, [pc, #36]	@ (90000e9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e76:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000e78:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e7c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e7e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e80:	8013      	strh	r3, [r2, #0]
    }
90000e82:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000e84:	2a00      	cmp	r2, #0
90000e86:	d0fc      	beq.n	90000e82 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e88:	4a03      	ldr	r2, [pc, #12]	@ (90000e98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000e8a:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e8e:	4903      	ldr	r1, [pc, #12]	@ (90000e9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000e90:	e7f1      	b.n	90000e76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000e92:	bf00      	nop
90000e94:	240218c4 	.word	0x240218c4
90000e98:	240218c2 	.word	0x240218c2
90000e9c:	240218c0 	.word	0x240218c0

90000ea0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ea0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ea2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ea6:	b118      	cbz	r0, 90000eb0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ea8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eaa:	6803      	ldr	r3, [r0, #0]
90000eac:	681b      	ldr	r3, [r3, #0]
90000eae:	4718      	bx	r3
    }
90000eb0:	4770      	bx	lr
90000eb2:	bf00      	nop

90000eb4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000eb4:	6840      	ldr	r0, [r0, #4]
90000eb6:	4a04      	ldr	r2, [pc, #16]	@ (90000ec8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000eb8:	6803      	ldr	r3, [r0, #0]
90000eba:	699b      	ldr	r3, [r3, #24]
90000ebc:	4293      	cmp	r3, r2
90000ebe:	d101      	bne.n	90000ec4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ec0:	2000      	movs	r0, #0
90000ec2:	4770      	bx	lr
        return dma.getDMAType();
90000ec4:	4718      	bx	r3
90000ec6:	bf00      	nop
90000ec8:	90000d29 	.word	0x90000d29

90000ecc <_ZN11TouchGFXHAL10initializeEv>:
{
90000ecc:	b538      	push	{r3, r4, r5, lr}
90000ece:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ed0:	f002 face 	bl	90003470 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ed4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f04 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ed6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ed8:	490b      	ldr	r1, [pc, #44]	@ (90000f08 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000eda:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000ede:	4293      	cmp	r3, r2
90000ee0:	d10d      	bne.n	90000efe <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000ee2:	4b0a      	ldr	r3, [pc, #40]	@ (90000f0c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000ee4:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ee6:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000ee8:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000eea:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000eee:	4628      	mov	r0, r5
90000ef0:	f7ff fe36 	bl	90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000ef4:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000ef6:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000ef8:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000efc:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000efe:	4620      	mov	r0, r4
90000f00:	4798      	blx	r3
90000f02:	e7f2      	b.n	90000eea <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f04:	90000d41 	.word	0x90000d41
90000f08:	d0000000 	.word	0xd0000000
90000f0c:	240218cb 	.word	0x240218cb

90000f10 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f10:	b1a9      	cbz	r1, 90000f3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f12:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f14:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f16:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f18:	bf18      	it	ne
90000f1a:	2201      	movne	r2, #1
90000f1c:	490c      	ldr	r1, [pc, #48]	@ (90000f50 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f1e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f20:	6802      	ldr	r2, [r0, #0]
90000f22:	490c      	ldr	r1, [pc, #48]	@ (90000f54 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f24:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000f28:	428a      	cmp	r2, r1
90000f2a:	d106      	bne.n	90000f3a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f2c:	1e19      	subs	r1, r3, #0
90000f2e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f30:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f32:	bf18      	it	ne
90000f34:	2101      	movne	r1, #1
90000f36:	7011      	strb	r1, [r2, #0]
90000f38:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f3a:	4619      	mov	r1, r3
90000f3c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f3e:	4b07      	ldr	r3, [pc, #28]	@ (90000f5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f40:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000f44:	4a06      	ldr	r2, [pc, #24]	@ (90000f60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f46:	4807      	ldr	r0, [pc, #28]	@ (90000f64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f48:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f4a:	f02a fb29 	bl	9002b5a0 <__assert_func>
90000f4e:	bf00      	nop
90000f50:	240218ca 	.word	0x240218ca
90000f54:	90000d41 	.word	0x90000d41
90000f58:	240218cb 	.word	0x240218cb
90000f5c:	9002c84c 	.word	0x9002c84c
90000f60:	9002c884 	.word	0x9002c884
90000f64:	9002c804 	.word	0x9002c804

90000f68 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f68:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f6a:	6803      	ldr	r3, [r0, #0]
{
90000f6c:	4604      	mov	r4, r0
90000f6e:	4d14      	ldr	r5, [pc, #80]	@ (90000fc0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000f70:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000f74:	4798      	blx	r3
    enableInterrupts();
90000f76:	6823      	ldr	r3, [r4, #0]
90000f78:	4620      	mov	r0, r4
90000f7a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000f7c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f7e:	f001 f9f1 	bl	90002364 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000f82:	6823      	ldr	r3, [r4, #0]
90000f84:	4620      	mov	r0, r4
90000f86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000f88:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000f8a:	2201      	movs	r2, #1
90000f8c:	2180      	movs	r1, #128	@ 0x80
90000f8e:	480d      	ldr	r0, [pc, #52]	@ (90000fc4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000f90:	f007 fb42 	bl	90008618 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000f94:	2201      	movs	r2, #1
90000f96:	480c      	ldr	r0, [pc, #48]	@ (90000fc8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000f98:	4611      	mov	r1, r2
90000f9a:	f007 fb3d 	bl	90008618 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000f9e:	f001 f9e1 	bl	90002364 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000fa8:	42ab      	cmp	r3, r5
90000faa:	d107      	bne.n	90000fbc <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fac:	f011 fe8e 	bl	90012ccc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fb0:	6823      	ldr	r3, [r4, #0]
90000fb2:	4620      	mov	r0, r4
90000fb4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90000fb8:	4798      	blx	r3
    }
90000fba:	e7f0      	b.n	90000f9e <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fbc:	4798      	blx	r3
90000fbe:	e7ee      	b.n	90000f9e <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fc0:	90000d7d 	.word	0x90000d7d
90000fc4:	58020c00 	.word	0x58020c00
90000fc8:	58022800 	.word	0x58022800

90000fcc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000fcc:	4601      	mov	r1, r0
    {
90000fce:	b508      	push	{r3, lr}
        return instance;
90000fd0:	4b05      	ldr	r3, [pc, #20]	@ (90000fe8 <IdleTaskHook+0x1c>)
90000fd2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000fd4:	b121      	cbz	r1, 90000fe0 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000fd6:	2101      	movs	r1, #1
90000fd8:	f011 fe92 	bl	90012d00 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000fdc:	2001      	movs	r0, #1
90000fde:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90000fe0:	f011 fe8e 	bl	90012d00 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000fe4:	2001      	movs	r0, #1
90000fe6:	bd08      	pop	{r3, pc}
90000fe8:	240218cc 	.word	0x240218cc

90000fec <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90000fec:	6940      	ldr	r0, [r0, #20]
90000fee:	4770      	bx	lr

90000ff0 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000ff0:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90000ff4:	4770      	bx	lr
90000ff6:	bf00      	nop

90000ff8 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000ff8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90000ffa:	b10b      	cbz	r3, 90001000 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90000ffc:	2001      	movs	r0, #1
}
90000ffe:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001000:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001002:	3800      	subs	r0, #0
90001004:	bf18      	it	ne
90001006:	2001      	movne	r0, #1
90001008:	4770      	bx	lr
9000100a:	bf00      	nop

9000100c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000100c:	6880      	ldr	r0, [r0, #8]
9000100e:	4770      	bx	lr

90001010 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001010:	4770      	bx	lr
90001012:	bf00      	nop

90001014 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001014:	3004      	adds	r0, #4
{
90001016:	468c      	mov	ip, r1
    *data = videoInfo;
90001018:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000101a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001020:	4770      	bx	lr
90001022:	bf00      	nop

90001024 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001024:	b508      	push	{r3, lr}
    assert(0);
90001026:	4a03      	ldr	r2, [pc, #12]	@ (90001034 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001028:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
9000102c:	4b02      	ldr	r3, [pc, #8]	@ (90001038 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000102e:	4803      	ldr	r0, [pc, #12]	@ (9000103c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001030:	f02a fab6 	bl	9002b5a0 <__assert_func>
90001034:	9002c8d8 	.word	0x9002c8d8
90001038:	9002c8d4 	.word	0x9002c8d4
9000103c:	9002c934 	.word	0x9002c934

90001040 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001040:	b510      	push	{r4, lr}
90001042:	4604      	mov	r4, r0
90001044:	2148      	movs	r1, #72	@ 0x48
90001046:	f029 ff33 	bl	9002aeb0 <_ZdlPvj>
9000104a:	4620      	mov	r0, r4
9000104c:	bd10      	pop	{r4, pc}
9000104e:	bf00      	nop

90001050 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001052:	6803      	ldr	r3, [r0, #0]
90001054:	2901      	cmp	r1, #1
90001056:	4d30      	ldr	r5, [pc, #192]	@ (90001118 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001058:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000105a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000105c:	bf38      	it	cc
9000105e:	2101      	movcc	r1, #1
90001060:	42ab      	cmp	r3, r5
90001062:	460e      	mov	r6, r1
90001064:	d13f      	bne.n	900010e6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001066:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001068:	42a9      	cmp	r1, r5
9000106a:	d947      	bls.n	900010fc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000106c:	1e6b      	subs	r3, r5, #1
9000106e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001070:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001072:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90001076:	b338      	cbz	r0, 900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90001078:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000107a:	2b0f      	cmp	r3, #15
9000107c:	d940      	bls.n	90001100 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
9000107e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001080:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90001084:	68db      	ldr	r3, [r3, #12]
90001086:	4631      	mov	r1, r6
90001088:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000108a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000108c:	2210      	movs	r2, #16
9000108e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001090:	6803      	ldr	r3, [r0, #0]
90001092:	691b      	ldr	r3, [r3, #16]
90001094:	4798      	blx	r3
90001096:	b198      	cbz	r0, 900010c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
90001098:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000109a:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
9000109c:	b1a3      	cbz	r3, 900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000109e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010a0:	7a93      	ldrb	r3, [r2, #10]
900010a2:	7a51      	ldrb	r1, [r2, #9]
900010a4:	041b      	lsls	r3, r3, #16
900010a6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010aa:	7a11      	ldrb	r1, [r2, #8]
900010ac:	7ad2      	ldrb	r2, [r2, #11]
900010ae:	430b      	orrs	r3, r1
900010b0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010b4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010b6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010b8:	3a04      	subs	r2, #4
900010ba:	441a      	add	r2, r3
900010bc:	61a2      	str	r2, [r4, #24]
}
900010be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010c0:	230d      	movs	r3, #13
900010c2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010c6:	e7e7      	b.n	90001098 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010c8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010cc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010ce:	18ca      	adds	r2, r1, r3
        val |= d[0];
900010d0:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
900010d2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
900010d4:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900010d6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900010d8:	041b      	lsls	r3, r3, #16
900010da:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900010de:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900010e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
900010e4:	e7e6      	b.n	900010b4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
900010e6:	4798      	blx	r3
900010e8:	4286      	cmp	r6, r0
900010ea:	d907      	bls.n	900010fc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
900010ec:	6823      	ldr	r3, [r4, #0]
900010ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010f0:	42ab      	cmp	r3, r5
900010f2:	d00e      	beq.n	90001112 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
900010f4:	4620      	mov	r0, r4
900010f6:	4798      	blx	r3
900010f8:	4605      	mov	r5, r0
900010fa:	e7b7      	b.n	9000106c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
900010fc:	4635      	mov	r5, r6
900010fe:	e7b5      	b.n	9000106c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001100:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001102:	4b06      	ldr	r3, [pc, #24]	@ (9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001104:	4a06      	ldr	r2, [pc, #24]	@ (90001120 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001106:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001108:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000110c:	4805      	ldr	r0, [pc, #20]	@ (90001124 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000110e:	f02a fa47 	bl	9002b5a0 <__assert_func>
    return videoInfo.number_of_frames;
90001112:	68a5      	ldr	r5, [r4, #8]
90001114:	e7aa      	b.n	9000106c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001116:	bf00      	nop
90001118:	9000100d 	.word	0x9000100d
9000111c:	9002c98c 	.word	0x9002c98c
90001120:	9002c9a0 	.word	0x9002c9a0
90001124:	9002c934 	.word	0x9002c934

90001128 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001128:	6943      	ldr	r3, [r0, #20]
{
9000112a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000112e:	2b00      	cmp	r3, #0
90001130:	f000 80c1 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001134:	4605      	mov	r5, r0
    if (reader != 0)
90001136:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001138:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000113a:	2800      	cmp	r0, #0
9000113c:	f000 80a1 	beq.w	90001282 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001140:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001142:	2b07      	cmp	r3, #7
90001144:	f240 80ac 	bls.w	900012a0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001148:	6803      	ldr	r3, [r0, #0]
9000114a:	4621      	mov	r1, r4
9000114c:	68db      	ldr	r3, [r3, #12]
9000114e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001150:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001152:	2208      	movs	r2, #8
90001154:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001156:	6803      	ldr	r3, [r0, #0]
90001158:	691b      	ldr	r3, [r3, #16]
9000115a:	4798      	blx	r3
9000115c:	2800      	cmp	r0, #0
9000115e:	f000 808c 	beq.w	9000127a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001162:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001164:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001166:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001168:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000116a:	2800      	cmp	r0, #0
9000116c:	f000 808b 	beq.w	90001286 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
90001170:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001172:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
90001174:	18a1      	adds	r1, r4, r2
90001176:	5ca2      	ldrb	r2, [r4, r2]
90001178:	788c      	ldrb	r4, [r1, #2]
9000117a:	784e      	ldrb	r6, [r1, #1]
9000117c:	0424      	lsls	r4, r4, #16
9000117e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001182:	4314      	orrs	r4, r2
90001184:	78ca      	ldrb	r2, [r1, #3]
90001186:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
9000118a:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
9000118c:	f243 0630 	movw	r6, #12336	@ 0x3030
90001190:	e03a      	b.n	90001208 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90001192:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001194:	2b07      	cmp	r3, #7
90001196:	f240 8083 	bls.w	900012a0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
9000119a:	6803      	ldr	r3, [r0, #0]
9000119c:	4621      	mov	r1, r4
9000119e:	68db      	ldr	r3, [r3, #12]
900011a0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011a2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011a4:	2208      	movs	r2, #8
900011a6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011a8:	6803      	ldr	r3, [r0, #0]
900011aa:	691b      	ldr	r3, [r3, #16]
900011ac:	4798      	blx	r3
900011ae:	b908      	cbnz	r0, 900011b4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011b0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011b4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011b6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011b8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ba:	2800      	cmp	r0, #0
900011bc:	d079      	beq.n	900012b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011be:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011c0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011c2:	18ca      	adds	r2, r1, r3
900011c4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011c6:	7994      	ldrb	r4, [r2, #6]
900011c8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011cc:	0424      	lsls	r4, r4, #16
900011ce:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011d2:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011d6:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900011da:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011dc:	f892 8003 	ldrb.w	r8, [r2, #3]
900011e0:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900011e4:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011e8:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011ec:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f0:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011f4:	f246 3164 	movw	r1, #25444	@ 0x6364
900011f8:	42b3      	cmp	r3, r6
900011fa:	bf08      	it	eq
900011fc:	428a      	cmpeq	r2, r1
900011fe:	bf0c      	ite	eq
90001200:	2301      	moveq	r3, #1
90001202:	2300      	movne	r3, #0
90001204:	d036      	beq.n	90001274 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001206:	69ab      	ldr	r3, [r5, #24]
90001208:	441c      	add	r4, r3
9000120a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000120c:	f104 0208 	add.w	r2, r4, #8
90001210:	429a      	cmp	r2, r3
90001212:	d22a      	bcs.n	9000126a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001214:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001216:	3409      	adds	r4, #9
        frameNumber++;
90001218:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000121a:	f024 0401 	bic.w	r4, r4, #1
9000121e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001222:	2800      	cmp	r0, #0
90001224:	d1b5      	bne.n	90001192 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001226:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001228:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000122a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000122e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001232:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001234:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001238:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000123c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001240:	188c      	adds	r4, r1, r2
        val |= d[0];
90001242:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001244:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001246:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000124a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000124e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001252:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001256:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000125a:	0424      	lsls	r4, r4, #16
9000125c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001260:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001264:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001268:	e7c4      	b.n	900011f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000126a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000126c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000126e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90001270:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001274:	4618      	mov	r0, r3
90001276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000127a:	230d      	movs	r3, #13
9000127c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001280:	e76f      	b.n	90001162 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001282:	1d22      	adds	r2, r4, #4
90001284:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90001286:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
90001288:	18a1      	adds	r1, r4, r2
        val |= d[0];
9000128a:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
9000128c:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
9000128e:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90001290:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
90001292:	0424      	lsls	r4, r4, #16
90001294:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
90001298:	4334      	orrs	r4, r6
        val |= d[3] << 24;
9000129a:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
9000129e:	e774      	b.n	9000118a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012a0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012a2:	4b08      	ldr	r3, [pc, #32]	@ (900012c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012a4:	4a08      	ldr	r2, [pc, #32]	@ (900012c8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012a6:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012a8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012ac:	4807      	ldr	r0, [pc, #28]	@ (900012cc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ae:	f02a f977 	bl	9002b5a0 <__assert_func>
900012b2:	461c      	mov	r4, r3
900012b4:	e7b7      	b.n	90001226 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012b6:	4b06      	ldr	r3, [pc, #24]	@ (900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012b8:	21f7      	movs	r1, #247	@ 0xf7
900012ba:	4a06      	ldr	r2, [pc, #24]	@ (900012d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012bc:	4803      	ldr	r0, [pc, #12]	@ (900012cc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012be:	f02a f96f 	bl	9002b5a0 <__assert_func>
900012c2:	bf00      	nop
900012c4:	9002c98c 	.word	0x9002c98c
900012c8:	9002c9a0 	.word	0x9002c9a0
900012cc:	9002c934 	.word	0x9002c934
900012d0:	9002c9e4 	.word	0x9002c9e4
900012d4:	9002ca30 	.word	0x9002ca30

900012d8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012d8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012da:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012dc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012de:	4b0e      	ldr	r3, [pc, #56]	@ (90001318 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900012e0:	2001      	movs	r0, #1
900012e2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012e4:	63e2      	str	r2, [r4, #60]	@ 0x3c
900012e6:	6023      	str	r3, [r4, #0]
900012e8:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012ec:	e9c4 2205 	strd	r2, r2, [r4, #20]
900012f0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900012f4:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
900012f8:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012fc:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001300:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001304:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001308:	f00d fda2 	bl	9000ee50 <osSemaphoreNew>
9000130c:	4b03      	ldr	r3, [pc, #12]	@ (9000131c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000130e:	4602      	mov	r2, r0
}
90001310:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001312:	601a      	str	r2, [r3, #0]
}
90001314:	bd10      	pop	{r4, pc}
90001316:	bf00      	nop
90001318:	9002e594 	.word	0x9002e594
9000131c:	24005df8 	.word	0x24005df8

90001320 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001320:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001324:	2100      	movs	r1, #0
    if (reader != 0)
90001326:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001328:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000132a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000132c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001330:	2e00      	cmp	r6, #0
90001332:	f000 81b3 	beq.w	9000169c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001336:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001338:	2b47      	cmp	r3, #71	@ 0x47
9000133a:	f240 8270 	bls.w	9000181e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000133e:	6833      	ldr	r3, [r6, #0]
90001340:	4630      	mov	r0, r6
90001342:	68db      	ldr	r3, [r3, #12]
90001344:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001346:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001348:	2248      	movs	r2, #72	@ 0x48
9000134a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000134c:	6803      	ldr	r3, [r0, #0]
9000134e:	691b      	ldr	r3, [r3, #16]
90001350:	4798      	blx	r3
90001352:	2800      	cmp	r0, #0
90001354:	f000 80b7 	beq.w	900014c6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001358:	2300      	movs	r3, #0
    if (reader != 0)
9000135a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000135c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000135e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001360:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001362:	2e00      	cmp	r6, #0
90001364:	f000 819b 	beq.w	9000169e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001368:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000136c:	2204      	movs	r2, #4
9000136e:	49c3      	ldr	r1, [pc, #780]	@ (9000167c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001370:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90001374:	4620      	mov	r0, r4
90001376:	f02a fbb7 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000137a:	2800      	cmp	r0, #0
9000137c:	f040 825f 	bne.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
90001380:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001384:	2204      	movs	r2, #4
90001386:	49be      	ldr	r1, [pc, #760]	@ (90001680 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
90001388:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000138a:	4448      	add	r0, r9
9000138c:	f02a fbac 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001390:	2800      	cmp	r0, #0
90001392:	f040 8268 	bne.w	90001866 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
90001396:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
9000139a:	2204      	movs	r2, #4
9000139c:	49b9      	ldr	r1, [pc, #740]	@ (90001684 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
9000139e:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013a2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013a6:	f02a fb9f 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013aa:	4680      	mov	r8, r0
900013ac:	2800      	cmp	r0, #0
900013ae:	f040 8250 	bne.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013b2:	7ca3      	ldrb	r3, [r4, #18]
900013b4:	7c62      	ldrb	r2, [r4, #17]
900013b6:	041b      	lsls	r3, r3, #16
900013b8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013bc:	7c22      	ldrb	r2, [r4, #16]
900013be:	4313      	orrs	r3, r2
900013c0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013c2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013c6:	f000 8233 	beq.w	90001830 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013ca:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013ce:	2204      	movs	r2, #4
900013d0:	49ad      	ldr	r1, [pc, #692]	@ (90001688 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
900013d2:	4448      	add	r0, r9
900013d4:	f02a fb88 	bl	9002bae8 <strncmp>
    if (compare(offset, "hdrl", 4))
900013d8:	2800      	cmp	r0, #0
900013da:	d078      	beq.n	900014ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013dc:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013e2:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e6:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900013e8:	445c      	add	r4, fp
    return strncmp(src, str, num);
900013ea:	2204      	movs	r2, #4
900013ec:	49a7      	ldr	r1, [pc, #668]	@ (9000168c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900013ee:	3408      	adds	r4, #8
    return strncmp(src, str, num);
900013f0:	f02a fb7a 	bl	9002bae8 <strncmp>
    if (compare(offset, "avih", 4))
900013f4:	2800      	cmp	r0, #0
900013f6:	f000 80e6 	beq.w	900015c6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900013fa:	2307      	movs	r3, #7
900013fc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001400:	f1ba 0f00 	cmp.w	sl, #0
90001404:	f000 8190 	beq.w	90001728 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001408:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000140a:	2b0b      	cmp	r3, #11
9000140c:	f240 8207 	bls.w	9000181e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001410:	f8da 3000 	ldr.w	r3, [sl]
90001414:	4621      	mov	r1, r4
90001416:	4650      	mov	r0, sl
90001418:	68db      	ldr	r3, [r3, #12]
9000141a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000141c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000141e:	220c      	movs	r2, #12
90001420:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001422:	6803      	ldr	r3, [r0, #0]
90001424:	691b      	ldr	r3, [r3, #16]
90001426:	4798      	blx	r3
90001428:	2800      	cmp	r0, #0
9000142a:	f000 8121 	beq.w	90001670 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000142e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001432:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001434:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001436:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 90001694 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000143a:	f04f 090d 	mov.w	r9, #13
9000143e:	e003      	b.n	90001448 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001440:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001444:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001446:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001448:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000144c:	2e00      	cmp	r6, #0
9000144e:	d052      	beq.n	900014f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001450:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001452:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001454:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001456:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001458:	1afb      	subs	r3, r7, r3
9000145a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000145c:	f02a fb44 	bl	9002bae8 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001460:	2800      	cmp	r0, #0
90001462:	d051      	beq.n	90001508 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001464:	f1ba 0f00 	cmp.w	sl, #0
90001468:	f040 80a8 	bne.w	900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000146c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000146e:	42a3      	cmp	r3, r4
90001470:	d94d      	bls.n	9000150e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001472:	3404      	adds	r4, #4
    if (reader != 0)
90001474:	b386      	cbz	r6, 900014d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
90001476:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
90001478:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000147c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000147e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001480:	eb01 0204 	add.w	r2, r1, r4
90001484:	5d09      	ldrb	r1, [r1, r4]
90001486:	7894      	ldrb	r4, [r2, #2]
90001488:	7850      	ldrb	r0, [r2, #1]
9000148a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000148e:	78d2      	ldrb	r2, [r2, #3]
90001490:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001494:	ea44 0401 	orr.w	r4, r4, r1
90001498:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
9000149c:	443c      	add	r4, r7
        if (length > aviBufferLength)
9000149e:	f240 81be 	bls.w	9000181e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014a2:	6833      	ldr	r3, [r6, #0]
900014a4:	4621      	mov	r1, r4
900014a6:	4630      	mov	r0, r6
900014a8:	68db      	ldr	r3, [r3, #12]
900014aa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014ac:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014ae:	220c      	movs	r2, #12
900014b0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014b2:	6803      	ldr	r3, [r0, #0]
900014b4:	691b      	ldr	r3, [r3, #16]
900014b6:	4798      	blx	r3
900014b8:	2800      	cmp	r0, #0
900014ba:	d1c1      	bne.n	90001440 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014bc:	f04f 0a0d 	mov.w	sl, #13
900014c0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014c4:	e7be      	b.n	90001444 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014c6:	230d      	movs	r3, #13
900014c8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014cc:	e744      	b.n	90001358 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014ce:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014d2:	f04f 0801 	mov.w	r8, #1
900014d6:	e786      	b.n	900013e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
900014d8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
900014da:	1913      	adds	r3, r2, r4
        val |= d[0];
900014dc:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
900014de:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
900014e0:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
900014e2:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
900014e4:	0424      	lsls	r4, r4, #16
900014e6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900014ea:	4314      	orrs	r4, r2
        val |= d[3] << 24;
900014ec:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
900014f0:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014f2:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
900014f6:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900014f8:	2204      	movs	r2, #4
900014fa:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
900014fc:	2600      	movs	r6, #0
900014fe:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001500:	f02a faf2 	bl	9002bae8 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001504:	2800      	cmp	r0, #0
90001506:	d1ad      	bne.n	90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001508:	f1ba 0f00 	cmp.w	sl, #0
9000150c:	d156      	bne.n	900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000150e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001512:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001514:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001516:	2e00      	cmp	r6, #0
90001518:	f000 8118 	beq.w	9000174c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000151c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000151e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001520:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001524:	f104 0e02 	add.w	lr, r4, #2
90001528:	f104 0c01 	add.w	ip, r4, #1
9000152c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001530:	1ce0      	adds	r0, r4, #3
90001532:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001536:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001538:	f811 900c 	ldrb.w	r9, [r1, ip]
9000153c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001540:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001544:	ea43 0308 	orr.w	r3, r3, r8
90001548:	f811 8000 	ldrb.w	r8, [r1, r0]
9000154c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001550:	443b      	add	r3, r7
90001552:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001554:	f811 300e 	ldrb.w	r3, [r1, lr]
90001558:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000155c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001560:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001564:	5c09      	ldrb	r1, [r1, r0]
90001566:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000156a:	ea44 040c 	orr.w	r4, r4, ip
9000156e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001572:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001574:	f240 8153 	bls.w	9000181e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001578:	6833      	ldr	r3, [r6, #0]
9000157a:	4621      	mov	r1, r4
9000157c:	4630      	mov	r0, r6
9000157e:	68db      	ldr	r3, [r3, #12]
90001580:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001582:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001584:	2204      	movs	r2, #4
90001586:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001588:	6803      	ldr	r3, [r0, #0]
9000158a:	691b      	ldr	r3, [r3, #16]
9000158c:	4798      	blx	r3
9000158e:	2800      	cmp	r0, #0
90001590:	f000 80cd 	beq.w	9000172e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
90001594:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001596:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001598:	2b00      	cmp	r3, #0
9000159a:	f000 816e 	beq.w	9000187a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000159e:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015a0:	2204      	movs	r2, #4
900015a2:	493b      	ldr	r1, [pc, #236]	@ (90001690 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015a4:	f02a faa0 	bl	9002bae8 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015a8:	2800      	cmp	r0, #0
900015aa:	f040 80ca 	bne.w	90001742 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015ae:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015b0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015b2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015b4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015b6:	622b      	str	r3, [r5, #32]
}
900015b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015bc:	230a      	movs	r3, #10
900015be:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015c6:	f1b8 0f00 	cmp.w	r8, #0
900015ca:	f43f af19 	beq.w	90001400 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015ce:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
900015d2:	f1ba 0f00 	cmp.w	sl, #0
900015d6:	f000 80d4 	beq.w	90001782 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900015da:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900015dc:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 90001698 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
900015e0:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015e2:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900015e4:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015e8:	f812 8001 	ldrb.w	r8, [r2, r1]
900015ec:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
900015f0:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
900015f4:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
900015f8:	4438      	add	r0, r7
900015fa:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015fc:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001600:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001602:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001606:	041b      	lsls	r3, r3, #16
90001608:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000160c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001610:	ea43 0308 	orr.w	r3, r3, r8
90001614:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001618:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000161a:	fbac c303 	umull	ip, r3, ip, r3
9000161e:	099b      	lsrs	r3, r3, #6
90001620:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001622:	78bb      	ldrb	r3, [r7, #2]
90001624:	f897 e001 	ldrb.w	lr, [r7, #1]
90001628:	041b      	lsls	r3, r3, #16
9000162a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000162e:	78ff      	ldrb	r7, [r7, #3]
90001630:	1850      	adds	r0, r2, r1
90001632:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001636:	ea43 030c 	orr.w	r3, r3, ip
9000163a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000163e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001640:	7883      	ldrb	r3, [r0, #2]
90001642:	7847      	ldrb	r7, [r0, #1]
90001644:	041b      	lsls	r3, r3, #16
90001646:	5c51      	ldrb	r1, [r2, r1]
90001648:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000164c:	430b      	orrs	r3, r1
9000164e:	78c1      	ldrb	r1, [r0, #3]
90001650:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001654:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001656:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001658:	788b      	ldrb	r3, [r1, #2]
9000165a:	7848      	ldrb	r0, [r1, #1]
9000165c:	041b      	lsls	r3, r3, #16
9000165e:	5d92      	ldrb	r2, [r2, r6]
90001660:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001664:	4313      	orrs	r3, r2
90001666:	78ca      	ldrb	r2, [r1, #3]
90001668:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000166c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000166e:	e6cb      	b.n	90001408 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90001670:	230d      	movs	r3, #13
90001672:	469a      	mov	sl, r3
90001674:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001678:	e6db      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
9000167a:	bf00      	nop
9000167c:	9002ca64 	.word	0x9002ca64
90001680:	9002cb1c 	.word	0x9002cb1c
90001684:	9002cb14 	.word	0x9002cb14
90001688:	9002cae8 	.word	0x9002cae8
9000168c:	9002cafc 	.word	0x9002cafc
90001690:	9002cb0c 	.word	0x9002cb0c
90001694:	9002cb04 	.word	0x9002cb04
90001698:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000169c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000169e:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016a2:	2204      	movs	r2, #4
900016a4:	4976      	ldr	r1, [pc, #472]	@ (90001880 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016a6:	eb09 0007 	add.w	r0, r9, r7
900016aa:	f02a fa1d 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016ae:	2800      	cmp	r0, #0
900016b0:	f040 80c5 	bne.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016b4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016b8:	2204      	movs	r2, #4
900016ba:	4972      	ldr	r1, [pc, #456]	@ (90001884 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016bc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016be:	4448      	add	r0, r9
900016c0:	f02a fa12 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016c4:	2800      	cmp	r0, #0
900016c6:	f040 80ce 	bne.w	90001866 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016ca:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016ce:	2204      	movs	r2, #4
900016d0:	496d      	ldr	r1, [pc, #436]	@ (90001888 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016d2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900016d6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900016da:	f02a fa05 	bl	9002bae8 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900016de:	4680      	mov	r8, r0
900016e0:	2800      	cmp	r0, #0
900016e2:	f040 80b6 	bne.w	90001852 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
900016e6:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900016ea:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
900016ee:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
900016f2:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
900016f4:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
900016f6:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
900016f8:	0424      	lsls	r4, r4, #16
900016fa:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900016fe:	4314      	orrs	r4, r2
    assert(aviListSize);
90001700:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001704:	f000 8094 	beq.w	90001830 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001708:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000170c:	2204      	movs	r2, #4
9000170e:	495f      	ldr	r1, [pc, #380]	@ (9000188c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001710:	4448      	add	r0, r9
90001712:	f02a f9e9 	bl	9002bae8 <strncmp>
    if (compare(offset, "hdrl", 4))
90001716:	b970      	cbnz	r0, 90001736 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001718:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000171c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001720:	4448      	add	r0, r9
90001722:	f04f 0a00 	mov.w	sl, #0
90001726:	e65f      	b.n	900013e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001728:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000172c:	e683      	b.n	90001436 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000172e:	230d      	movs	r3, #13
90001730:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001734:	e72e      	b.n	90001594 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001736:	2306      	movs	r3, #6
    offset += 4;
90001738:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000173c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001740:	e7ee      	b.n	90001720 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001742:	230b      	movs	r3, #11
90001744:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001748:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000174c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000174e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001750:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001752:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001754:	7893      	ldrb	r3, [r2, #2]
90001756:	041b      	lsls	r3, r3, #16
90001758:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000175c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000175e:	78d1      	ldrb	r1, [r2, #3]
90001760:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001764:	443b      	add	r3, r7
90001766:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001768:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000176a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000176c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000176e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001770:	0424      	lsls	r4, r4, #16
90001772:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001776:	430c      	orrs	r4, r1
        val |= d[3] << 24;
90001778:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
9000177c:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
9000177e:	4420      	add	r0, r4
90001780:	e70e      	b.n	900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
90001782:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001784:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001788:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
9000178c:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
90001790:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
90001794:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
90001798:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
9000179c:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
9000179e:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017a2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017a6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017aa:	041b      	lsls	r3, r3, #16
900017ac:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017b0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017b4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017b8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017bc:	fbae e303 	umull	lr, r3, lr, r3
900017c0:	099b      	lsrs	r3, r3, #6
900017c2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017c4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017c8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017cc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017ce:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900017d0:	041b      	lsls	r3, r3, #16
900017d2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900017d6:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
900017da:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
900017de:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
900017e2:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
900017e4:	60ab      	str	r3, [r5, #8]
        val |= d[0];
900017e6:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
900017ea:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900017ee:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
900017f2:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
900017f6:	041b      	lsls	r3, r3, #16
900017f8:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
900017fc:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001800:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001804:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001806:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001808:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000180a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000180c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000180e:	041b      	lsls	r3, r3, #16
90001810:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001814:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001816:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000181a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000181c:	e60b      	b.n	90001436 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000181e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001820:	4b1b      	ldr	r3, [pc, #108]	@ (90001890 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001822:	4a1c      	ldr	r2, [pc, #112]	@ (90001894 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001824:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001826:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000182a:	481b      	ldr	r0, [pc, #108]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000182c:	f029 feb8 	bl	9002b5a0 <__assert_func>
    assert(aviListSize);
90001830:	4b1a      	ldr	r3, [pc, #104]	@ (9000189c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001832:	f44f 71aa 	mov.w	r1, #340	@ 0x154
90001836:	4a1a      	ldr	r2, [pc, #104]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001838:	4817      	ldr	r0, [pc, #92]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000183a:	f029 feb1 	bl	9002b5a0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000183e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001840:	4b18      	ldr	r3, [pc, #96]	@ (900018a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001842:	4a17      	ldr	r2, [pc, #92]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001844:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
90001848:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000184c:	4812      	ldr	r0, [pc, #72]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000184e:	f029 fea7 	bl	9002b5a0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001852:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001854:	4b14      	ldr	r3, [pc, #80]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001856:	4a12      	ldr	r2, [pc, #72]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001858:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000185c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001860:	480d      	ldr	r0, [pc, #52]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001862:	f029 fe9d 	bl	9002b5a0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001866:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001868:	4b10      	ldr	r3, [pc, #64]	@ (900018ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000186a:	4a0d      	ldr	r2, [pc, #52]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000186c:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001870:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90001874:	4808      	ldr	r0, [pc, #32]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001876:	f029 fe93 	bl	9002b5a0 <__assert_func>
        src = (const char*)movieData + offset;
9000187a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000187c:	4420      	add	r0, r4
9000187e:	e68f      	b.n	900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
90001880:	9002ca64 	.word	0x9002ca64
90001884:	9002cb1c 	.word	0x9002cb1c
90001888:	9002cb14 	.word	0x9002cb14
9000188c:	9002cae8 	.word	0x9002cae8
90001890:	9002c98c 	.word	0x9002c98c
90001894:	9002c9a0 	.word	0x9002c9a0
90001898:	9002c934 	.word	0x9002c934
9000189c:	9002caf0 	.word	0x9002caf0
900018a0:	9002ca88 	.word	0x9002ca88
900018a4:	9002ca6c 	.word	0x9002ca6c
900018a8:	9002cad0 	.word	0x9002cad0
900018ac:	9002cab8 	.word	0x9002cab8
900018b0:	10624dd3 	.word	0x10624dd3

900018b4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018b4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018b6:	2400      	movs	r4, #0
    movieLength = length;
900018b8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018bc:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018be:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018c2:	f7ff bd2d 	b.w	90001320 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018c6:	bf00      	nop

900018c8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018c8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018ca:	680b      	ldr	r3, [r1, #0]
{
900018cc:	4604      	mov	r4, r0
    movieData = 0;
900018ce:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900018d0:	4608      	mov	r0, r1
900018d2:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900018d4:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
900018d8:	4798      	blx	r3
900018da:	4603      	mov	r3, r0
    readVideoHeader();
900018dc:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900018de:	62a3      	str	r3, [r4, #40]	@ 0x28
}
900018e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900018e4:	f7ff bd1c 	b.w	90001320 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

900018e8 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
900018e8:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
900018ea:	4b1f      	ldr	r3, [pc, #124]	@ (90001968 <JPEG_Decode_DMA+0x80>)
900018ec:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
900018ee:	4d1f      	ldr	r5, [pc, #124]	@ (9000196c <JPEG_Decode_DMA+0x84>)
    {
900018f0:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
900018f2:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
900018f4:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
900018f6:	4b1e      	ldr	r3, [pc, #120]	@ (90001970 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
900018f8:	4d1e      	ldr	r5, [pc, #120]	@ (90001974 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
900018fa:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
900018fc:	4e1e      	ldr	r6, [pc, #120]	@ (90001978 <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
900018fe:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001900:	4d1e      	ldr	r5, [pc, #120]	@ (9000197c <JPEG_Decode_DMA+0x94>)
90001902:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001904:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001906:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001908:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000190c:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000190e:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
90001912:	4e1b      	ldr	r6, [pc, #108]	@ (90001980 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001914:	ea4f 15c5 	mov.w	r5, r5, lsl #7
90001918:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000191c:	bf18      	it	ne
9000191e:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001922:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
90001924:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90001926:	4e17      	ldr	r6, [pc, #92]	@ (90001984 <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001928:	4d17      	ldr	r5, [pc, #92]	@ (90001988 <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
9000192a:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000192c:	4e17      	ldr	r6, [pc, #92]	@ (9000198c <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000192e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001932:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90001936:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001938:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193a:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
9000193c:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193e:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001942:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001944:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001946:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001948:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000194a:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
9000194c:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000194e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001952:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
90001956:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000195a:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195e:	f008 f855 	bl	90009a0c <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001962:	4620      	mov	r0, r4
90001964:	b002      	add	sp, #8
90001966:	bd70      	pop	{r4, r5, r6, pc}
90001968:	24006014 	.word	0x24006014
9000196c:	24005df4 	.word	0x24005df4
90001970:	24006008 	.word	0x24006008
90001974:	24005dfc 	.word	0x24005dfc
90001978:	24005db0 	.word	0x24005db0
9000197c:	24006004 	.word	0x24006004
90001980:	24006024 	.word	0x24006024
90001984:	2400601c 	.word	0x2400601c
90001988:	24000004 	.word	0x24000004
9000198c:	24006020 	.word	0x24006020

90001990 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001994:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001996:	2402      	movs	r4, #2
90001998:	483e      	ldr	r0, [pc, #248]	@ (90001a94 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
9000199a:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
9000199c:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
9000199e:	0725      	lsls	r5, r4, #28
900019a0:	d002      	beq.n	900019a8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019a2:	f024 040f 	bic.w	r4, r4, #15
900019a6:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019a8:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019aa:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019ac:	4d3a      	ldr	r5, [pc, #232]	@ (90001a98 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ae:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019b0:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019b4:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001ab8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
900019b8:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ba:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019bc:	4f37      	ldr	r7, [pc, #220]	@ (90001a9c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019be:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019c2:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001abc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
900019c6:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001ac0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ca:	bf18      	it	ne
900019cc:	f1c4 0410 	rsbne	r4, r4, #16
900019d0:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
900019d2:	4833      	ldr	r0, [pc, #204]	@ (90001aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
900019d4:	4c33      	ldr	r4, [pc, #204]	@ (90001aa4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
900019d6:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
900019d8:	4833      	ldr	r0, [pc, #204]	@ (90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
900019da:	f7ff ff85 	bl	900018e8 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
900019de:	6c73      	ldr	r3, [r6, #68]	@ 0x44
900019e0:	4e32      	ldr	r6, [pc, #200]	@ (90001aac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
900019e2:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
900019e4:	f8da 3000 	ldr.w	r3, [sl]
900019e8:	b10b      	cbz	r3, 900019ee <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
900019ea:	6833      	ldr	r3, [r6, #0]
900019ec:	bb6b      	cbnz	r3, 90001a4a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
900019ee:	6828      	ldr	r0, [r5, #0]
900019f0:	7a03      	ldrb	r3, [r0, #8]
900019f2:	b93b      	cbnz	r3, 90001a04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
900019f4:	4b2e      	ldr	r3, [pc, #184]	@ (90001ab0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
900019f6:	681b      	ldr	r3, [r3, #0]
900019f8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900019fc:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a00:	2b01      	cmp	r3, #1
90001a02:	d03b      	beq.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a04:	683b      	ldr	r3, [r7, #0]
90001a06:	2b01      	cmp	r3, #1
90001a08:	d00d      	beq.n	90001a26 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a0a:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a0c:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a0e:	6823      	ldr	r3, [r4, #0]
90001a10:	2b02      	cmp	r3, #2
90001a12:	d024      	beq.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a14:	6823      	ldr	r3, [r4, #0]
90001a16:	2b01      	cmp	r3, #1
90001a18:	d1e4      	bne.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a1a:	2300      	movs	r3, #0
90001a1c:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a20:	6033      	str	r3, [r6, #0]
}
90001a22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a26:	f8d9 3000 	ldr.w	r3, [r9]
90001a2a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a2e:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a32:	2b00      	cmp	r3, #0
90001a34:	d1e9      	bne.n	90001a0a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001a36:	f8da 3000 	ldr.w	r3, [sl]
90001a3a:	2b00      	cmp	r3, #0
90001a3c:	d1e5      	bne.n	90001a0a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a3e:	2102      	movs	r1, #2
90001a40:	4819      	ldr	r0, [pc, #100]	@ (90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001a42:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a44:	f008 f992 	bl	90009d6c <HAL_JPEG_Resume>
90001a48:	e7df      	b.n	90001a0a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a4a:	4817      	ldr	r0, [pc, #92]	@ (90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a4c:	f008 ff58 	bl	9000a900 <HAL_JPEG_GetState>
90001a50:	2804      	cmp	r0, #4
90001a52:	d01a      	beq.n	90001a8a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001a54:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a56:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a58:	6823      	ldr	r3, [r4, #0]
90001a5a:	2b02      	cmp	r3, #2
90001a5c:	d1da      	bne.n	90001a14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001a5e:	4b15      	ldr	r3, [pc, #84]	@ (90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001a60:	f04f 31ff 	mov.w	r1, #4294967295
90001a64:	6818      	ldr	r0, [r3, #0]
90001a66:	f00d fa49 	bl	9000eefc <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a6a:	6823      	ldr	r3, [r4, #0]
90001a6c:	2b01      	cmp	r3, #1
90001a6e:	d1b9      	bne.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a70:	2300      	movs	r3, #0
90001a72:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a76:	6033      	str	r3, [r6, #0]
}
90001a78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a7c:	6833      	ldr	r3, [r6, #0]
90001a7e:	2b00      	cmp	r3, #0
90001a80:	d1c0      	bne.n	90001a04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001a82:	6803      	ldr	r3, [r0, #0]
90001a84:	691b      	ldr	r3, [r3, #16]
90001a86:	4798      	blx	r3
90001a88:	e7bc      	b.n	90001a04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001a8a:	4807      	ldr	r0, [pc, #28]	@ (90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a8c:	f008 f83c 	bl	90009b08 <HAL_JPEG_Abort>
90001a90:	e7e0      	b.n	90001a54 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001a92:	bf00      	nop
90001a94:	24005db0 	.word	0x24005db0
90001a98:	2400600c 	.word	0x2400600c
90001a9c:	24006014 	.word	0x24006014
90001aa0:	24006028 	.word	0x24006028
90001aa4:	24006010 	.word	0x24006010
90001aa8:	24007640 	.word	0x24007640
90001aac:	24005df0 	.word	0x24005df0
90001ab0:	24005df4 	.word	0x24005df4
90001ab4:	24005df8 	.word	0x24005df8
90001ab8:	24006018 	.word	0x24006018
90001abc:	24006008 	.word	0x24006008
90001ac0:	24000004 	.word	0x24000004

90001ac4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ac4:	6943      	ldr	r3, [r0, #20]
{
90001ac6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001aca:	2b00      	cmp	r3, #0
90001acc:	f000 80ad 	beq.w	90001c2a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001ad0:	4604      	mov	r4, r0
    if (reader != 0)
90001ad2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001ad4:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001ad6:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001ad8:	2800      	cmp	r0, #0
90001ada:	d05f      	beq.n	90001b9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001adc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001ade:	2b07      	cmp	r3, #7
90001ae0:	f240 80a9 	bls.w	90001c36 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001ae4:	6803      	ldr	r3, [r0, #0]
90001ae6:	4629      	mov	r1, r5
90001ae8:	68db      	ldr	r3, [r3, #12]
90001aea:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001aec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001aee:	2208      	movs	r2, #8
90001af0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001af2:	6803      	ldr	r3, [r0, #0]
90001af4:	691b      	ldr	r3, [r3, #16]
90001af6:	4798      	blx	r3
90001af8:	2800      	cmp	r0, #0
90001afa:	d04a      	beq.n	90001b92 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001afc:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001afe:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b00:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b04:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b06:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b08:	2800      	cmp	r0, #0
90001b0a:	d046      	beq.n	90001b9a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b0c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b0e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b12:	1b52      	subs	r2, r2, r5
90001b14:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b16:	eb03 070c 	add.w	r7, r3, ip
90001b1a:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b1e:	eb03 0805 	add.w	r8, r3, r5
90001b22:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b26:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b2a:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b2e:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b32:	78bd      	ldrb	r5, [r7, #2]
90001b34:	78ff      	ldrb	r7, [r7, #3]
90001b36:	042d      	lsls	r5, r5, #16
90001b38:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b3c:	ea45 050e 	orr.w	r5, r5, lr
90001b40:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b44:	189f      	adds	r7, r3, r2
90001b46:	5c9b      	ldrb	r3, [r3, r2]
90001b48:	787a      	ldrb	r2, [r7, #1]
90001b4a:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b4e:	eb01 0e05 	add.w	lr, r1, r5
90001b52:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b54:	f10e 0208 	add.w	r2, lr, #8
90001b58:	429a      	cmp	r2, r3
90001b5a:	d213      	bcs.n	90001b84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b5c:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b60:	459c      	cmp	ip, r3
90001b62:	d138      	bne.n	90001bd6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b64:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b68:	429f      	cmp	r7, r3
90001b6a:	d134      	bne.n	90001bd6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b6c:	2d00      	cmp	r5, #0
90001b6e:	d136      	bne.n	90001bde <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b70:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b74:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b78:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b7a:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001b7c:	d002      	beq.n	90001b84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001b7e:	2001      	movs	r0, #1
}
90001b80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001b84:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001b86:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001b88:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001b8a:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001b8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001b92:	230d      	movs	r3, #13
90001b94:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001b98:	e7b0      	b.n	90001afc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001b9a:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001b9c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b9e:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001ba0:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001ba2:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001ba4:	195a      	adds	r2, r3, r5
        val |= d[0];
90001ba6:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001baa:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001bac:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001bae:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001bb0:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001bb4:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bb6:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bb8:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bba:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bbe:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bc2:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bc4:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bc6:	042d      	lsls	r5, r5, #16
90001bc8:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001bcc:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001bce:	2000      	movs	r0, #0
90001bd0:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001bd4:	e7bb      	b.n	90001b4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001bd6:	2d00      	cmp	r5, #0
90001bd8:	bf18      	it	ne
90001bda:	4672      	movne	r2, lr
90001bdc:	e7c8      	b.n	90001b70 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001bde:	f101 0708 	add.w	r7, r1, #8
90001be2:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001be4:	b1f0      	cbz	r0, 90001c24 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001be6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001be8:	429d      	cmp	r5, r3
90001bea:	d824      	bhi.n	90001c36 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001bec:	6803      	ldr	r3, [r0, #0]
90001bee:	4639      	mov	r1, r7
90001bf0:	68db      	ldr	r3, [r3, #12]
90001bf2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001bf4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001bf6:	462a      	mov	r2, r5
90001bf8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001bfa:	6803      	ldr	r3, [r0, #0]
90001bfc:	691b      	ldr	r3, [r3, #16]
90001bfe:	4798      	blx	r3
90001c00:	b910      	cbnz	r0, 90001c08 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c02:	230d      	movs	r3, #13
90001c04:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c08:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c0a:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c0c:	b126      	cbz	r6, 90001c18 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c0e:	4633      	mov	r3, r6
90001c10:	462a      	mov	r2, r5
90001c12:	4620      	mov	r0, r4
90001c14:	f7ff febc 	bl	90001990 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c18:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c1c:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c1e:	442a      	add	r2, r5
            frameNumber++;
90001c20:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c22:	e7a5      	b.n	90001b70 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c24:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c26:	4439      	add	r1, r7
90001c28:	e7f0      	b.n	90001c0c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c2a:	4b07      	ldr	r3, [pc, #28]	@ (90001c48 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c2c:	21c3      	movs	r1, #195	@ 0xc3
90001c2e:	4a07      	ldr	r2, [pc, #28]	@ (90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c30:	4807      	ldr	r0, [pc, #28]	@ (90001c50 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c32:	f029 fcb5 	bl	9002b5a0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c36:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c38:	4b06      	ldr	r3, [pc, #24]	@ (90001c54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c3a:	4a07      	ldr	r2, [pc, #28]	@ (90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c3c:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c3e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c42:	4803      	ldr	r0, [pc, #12]	@ (90001c50 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c44:	f029 fcac 	bl	9002b5a0 <__assert_func>
90001c48:	9002c9e4 	.word	0x9002c9e4
90001c4c:	9002cb24 	.word	0x9002cb24
90001c50:	9002c934 	.word	0x9002c934
90001c54:	9002c98c 	.word	0x9002c98c
90001c58:	9002c9a0 	.word	0x9002c9a0

90001c5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c60:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c62:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c66:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c68:	460e      	mov	r6, r1
90001c6a:	4690      	mov	r8, r2
90001c6c:	461f      	mov	r7, r3
    if (reader != 0)
90001c6e:	2800      	cmp	r0, #0
90001c70:	f000 80f9 	beq.w	90001e66 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001c74:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c76:	2b07      	cmp	r3, #7
90001c78:	f240 810a 	bls.w	90001e90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001c7c:	6803      	ldr	r3, [r0, #0]
90001c7e:	4649      	mov	r1, r9
90001c80:	68db      	ldr	r3, [r3, #12]
90001c82:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c84:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c86:	2208      	movs	r2, #8
90001c88:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c8a:	6803      	ldr	r3, [r0, #0]
90001c8c:	691b      	ldr	r3, [r3, #16]
90001c8e:	4798      	blx	r3
90001c90:	2800      	cmp	r0, #0
90001c92:	f000 80b3 	beq.w	90001dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001c96:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001c98:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001c9a:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001c9c:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001ca0:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001ca4:	2800      	cmp	r0, #0
90001ca6:	f000 80fc 	beq.w	90001ea2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001caa:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001cb0:	1899      	adds	r1, r3, r2
90001cb2:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001cb4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cb6:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cba:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cbe:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cc2:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cc6:	ea49 0902 	orr.w	r9, r9, r2
90001cca:	78ca      	ldrb	r2, [r1, #3]
90001ccc:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001cd0:	454b      	cmp	r3, r9
90001cd2:	f0c0 80dd 	bcc.w	90001e90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cd6:	6803      	ldr	r3, [r0, #0]
90001cd8:	4629      	mov	r1, r5
90001cda:	68db      	ldr	r3, [r3, #12]
90001cdc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cde:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001ce0:	464a      	mov	r2, r9
90001ce2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001ce4:	6803      	ldr	r3, [r0, #0]
90001ce6:	691b      	ldr	r3, [r3, #16]
90001ce8:	4798      	blx	r3
90001cea:	2800      	cmp	r0, #0
90001cec:	f000 8082 	beq.w	90001df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001cf0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001cf2:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001cf4:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001cf8:	2302      	movs	r3, #2
90001cfa:	486b      	ldr	r0, [pc, #428]	@ (90001ea8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001cfc:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d00:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d02:	d172      	bne.n	90001dea <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d04:	4662      	mov	r2, ip
90001d06:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d08:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d0a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d0c:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d0e:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d12:	60c3      	str	r3, [r0, #12]
90001d14:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d16:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d1a:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d1c:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d1e:	6143      	str	r3, [r0, #20]
90001d20:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d22:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d26:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d28:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d2a:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d2c:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d2e:	bf28      	it	cs
90001d30:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d32:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d36:	f002 020f 	and.w	r2, r2, #15
90001d3a:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d3e:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d42:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d44:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d46:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d48:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d4a:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d4e:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d52:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d54:	eba3 030c 	sub.w	r3, r3, ip
90001d58:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d5a:	6923      	ldr	r3, [r4, #16]
90001d5c:	429e      	cmp	r6, r3
90001d5e:	bf28      	it	cs
90001d60:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d62:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d66:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d6a:	bf18      	it	ne
90001d6c:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d70:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d72:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d74:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001d78:	4b4c      	ldr	r3, [pc, #304]	@ (90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d7a:	bf18      	it	ne
90001d7c:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d80:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001d82:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001d84:	4b4a      	ldr	r3, [pc, #296]	@ (90001eb0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d86:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001d88:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d8c:	4643      	mov	r3, r8
90001d8e:	4849      	ldr	r0, [pc, #292]	@ (90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001d90:	f7ff fdaa 	bl	900018e8 <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001d94:	4d48      	ldr	r5, [pc, #288]	@ (90001eb8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001d96:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001d98:	4e48      	ldr	r6, [pc, #288]	@ (90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001d9a:	4c49      	ldr	r4, [pc, #292]	@ (90001ec0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d9c:	4f49      	ldr	r7, [pc, #292]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001d9e:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001da2:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001da4:	f8da 3000 	ldr.w	r3, [sl]
90001da8:	b113      	cbz	r3, 90001db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001daa:	6833      	ldr	r3, [r6, #0]
90001dac:	2b00      	cmp	r3, #0
90001dae:	d13b      	bne.n	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001db0:	6828      	ldr	r0, [r5, #0]
90001db2:	7a03      	ldrb	r3, [r0, #8]
90001db4:	b93b      	cbnz	r3, 90001dc6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001db6:	4b44      	ldr	r3, [pc, #272]	@ (90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001db8:	681b      	ldr	r3, [r3, #0]
90001dba:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dbe:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dc2:	2b01      	cmp	r3, #1
90001dc4:	d044      	beq.n	90001e50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dc6:	683b      	ldr	r3, [r7, #0]
90001dc8:	2b01      	cmp	r3, #1
90001dca:	d01b      	beq.n	90001e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001dcc:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dce:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dd0:	6823      	ldr	r3, [r4, #0]
90001dd2:	2b02      	cmp	r3, #2
90001dd4:	d032      	beq.n	90001e3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001dd6:	6823      	ldr	r3, [r4, #0]
90001dd8:	2b01      	cmp	r3, #1
90001dda:	d1e3      	bne.n	90001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001ddc:	2300      	movs	r3, #0
}
90001dde:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001de0:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001de4:	6033      	str	r3, [r6, #0]
}
90001de6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001dea:	f02c 030f 	bic.w	r3, ip, #15
90001dee:	3310      	adds	r3, #16
90001df0:	461a      	mov	r2, r3
90001df2:	e789      	b.n	90001d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001df4:	230d      	movs	r3, #13
90001df6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001dfa:	e779      	b.n	90001cf0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001dfc:	230d      	movs	r3, #13
90001dfe:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e02:	e748      	b.n	90001c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e04:	f8d9 3000 	ldr.w	r3, [r9]
90001e08:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e0c:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e10:	2b00      	cmp	r3, #0
90001e12:	d1db      	bne.n	90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e14:	f8da 3000 	ldr.w	r3, [sl]
90001e18:	2b00      	cmp	r3, #0
90001e1a:	d1d7      	bne.n	90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e1c:	2102      	movs	r1, #2
90001e1e:	4825      	ldr	r0, [pc, #148]	@ (90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e20:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e22:	f007 ffa3 	bl	90009d6c <HAL_JPEG_Resume>
90001e26:	e7d1      	b.n	90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e28:	4822      	ldr	r0, [pc, #136]	@ (90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e2a:	f008 fd69 	bl	9000a900 <HAL_JPEG_GetState>
90001e2e:	2804      	cmp	r0, #4
90001e30:	d015      	beq.n	90001e5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001e32:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e34:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e36:	6823      	ldr	r3, [r4, #0]
90001e38:	2b02      	cmp	r3, #2
90001e3a:	d1cc      	bne.n	90001dd6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001e3c:	4b23      	ldr	r3, [pc, #140]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001e3e:	f04f 31ff 	mov.w	r1, #4294967295
90001e42:	6818      	ldr	r0, [r3, #0]
90001e44:	f00d f85a 	bl	9000eefc <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e48:	6823      	ldr	r3, [r4, #0]
90001e4a:	2b01      	cmp	r3, #1
90001e4c:	d1aa      	bne.n	90001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001e4e:	e7c5      	b.n	90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e50:	6833      	ldr	r3, [r6, #0]
90001e52:	2b00      	cmp	r3, #0
90001e54:	d1b7      	bne.n	90001dc6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001e56:	6803      	ldr	r3, [r0, #0]
90001e58:	691b      	ldr	r3, [r3, #16]
90001e5a:	4798      	blx	r3
90001e5c:	e7b3      	b.n	90001dc6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001e5e:	4815      	ldr	r0, [pc, #84]	@ (90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e60:	f007 fe52 	bl	90009b08 <HAL_JPEG_Abort>
90001e64:	e7e5      	b.n	90001e32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e66:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e6a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e6c:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e70:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e72:	4401      	add	r1, r0
        val |= d[0];
90001e74:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001e76:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001e78:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001e7c:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001e7e:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001e82:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001e86:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001e8a:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001e8e:	e731      	b.n	90001cf4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001e90:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001e92:	4b0f      	ldr	r3, [pc, #60]	@ (90001ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001e94:	4a0f      	ldr	r2, [pc, #60]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001e96:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001e98:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001e9c:	480e      	ldr	r0, [pc, #56]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001e9e:	f029 fb7f 	bl	9002b5a0 <__assert_func>
90001ea2:	4691      	mov	r9, r2
90001ea4:	e7e1      	b.n	90001e6a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001ea6:	bf00      	nop
90001ea8:	24005db0 	.word	0x24005db0
90001eac:	24006000 	.word	0x24006000
90001eb0:	24006028 	.word	0x24006028
90001eb4:	24007640 	.word	0x24007640
90001eb8:	2400600c 	.word	0x2400600c
90001ebc:	24005df0 	.word	0x24005df0
90001ec0:	24006010 	.word	0x24006010
90001ec4:	24006014 	.word	0x24006014
90001ec8:	24005df4 	.word	0x24005df4
90001ecc:	24005df8 	.word	0x24005df8
90001ed0:	9002c98c 	.word	0x9002c98c
90001ed4:	9002c9a0 	.word	0x9002c9a0
90001ed8:	9002c934 	.word	0x9002c934
90001edc:	24006018 	.word	0x24006018
90001ee0:	24006008 	.word	0x24006008
90001ee4:	24000004 	.word	0x24000004

90001ee8 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001ee8:	684b      	ldr	r3, [r1, #4]
90001eea:	2b01      	cmp	r3, #1
90001eec:	d015      	beq.n	90001f1a <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001eee:	2b02      	cmp	r3, #2
90001ef0:	d00b      	beq.n	90001f0a <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001ef2:	b94b      	cbnz	r3, 90001f08 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001ef4:	68cb      	ldr	r3, [r1, #12]
90001ef6:	0758      	lsls	r0, r3, #29
90001ef8:	d11e      	bne.n	90001f38 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001efa:	688b      	ldr	r3, [r1, #8]
90001efc:	075a      	lsls	r2, r3, #29
90001efe:	d003      	beq.n	90001f08 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f00:	f023 0307 	bic.w	r3, r3, #7
90001f04:	3308      	adds	r3, #8
90001f06:	608b      	str	r3, [r1, #8]
    }
90001f08:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f0a:	68cb      	ldr	r3, [r1, #12]
90001f0c:	071a      	lsls	r2, r3, #28
90001f0e:	d0f4      	beq.n	90001efa <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f10:	f023 030f 	bic.w	r3, r3, #15
90001f14:	3310      	adds	r3, #16
90001f16:	60cb      	str	r3, [r1, #12]
90001f18:	e7ef      	b.n	90001efa <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f1a:	68cb      	ldr	r3, [r1, #12]
90001f1c:	071a      	lsls	r2, r3, #28
90001f1e:	d003      	beq.n	90001f28 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f20:	f023 030f 	bic.w	r3, r3, #15
90001f24:	3310      	adds	r3, #16
90001f26:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f28:	688b      	ldr	r3, [r1, #8]
90001f2a:	0718      	lsls	r0, r3, #28
90001f2c:	d0ec      	beq.n	90001f08 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f2e:	f023 030f 	bic.w	r3, r3, #15
90001f32:	3310      	adds	r3, #16
90001f34:	608b      	str	r3, [r1, #8]
90001f36:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f38:	f023 0307 	bic.w	r3, r3, #7
90001f3c:	3308      	adds	r3, #8
90001f3e:	60cb      	str	r3, [r1, #12]
90001f40:	e7db      	b.n	90001efa <HAL_JPEG_InfoReadyCallback+0x12>
90001f42:	bf00      	nop

90001f44 <HAL_JPEG_GetDataCallback>:
    {
90001f44:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f46:	4c0c      	ldr	r4, [pc, #48]	@ (90001f78 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f48:	4a0c      	ldr	r2, [pc, #48]	@ (90001f7c <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f4a:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f4c:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f4e:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f50:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f52:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f54:	d302      	bcc.n	90001f5c <HAL_JPEG_GetDataCallback+0x18>
    }
90001f56:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f5a:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f5c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f5e:	4b08      	ldr	r3, [pc, #32]	@ (90001f80 <HAL_JPEG_GetDataCallback+0x3c>)
90001f60:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f62:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f66:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f68:	bf28      	it	cs
90001f6a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f72:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f74:	f007 bdc0 	b.w	90009af8 <HAL_JPEG_ConfigInputBuffer>
90001f78:	24006024 	.word	0x24006024
90001f7c:	24006020 	.word	0x24006020
90001f80:	2400601c 	.word	0x2400601c

90001f84 <HAL_JPEG_DataReadyCallback>:
    {
90001f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001f88:	4e4a      	ldr	r6, [pc, #296]	@ (900020b4 <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001f8a:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001f8c:	4f4a      	ldr	r7, [pc, #296]	@ (900020b8 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001f8e:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001f90:	4d4a      	ldr	r5, [pc, #296]	@ (900020bc <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001f92:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001f94:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001f96:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001f9a:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001f9c:	4b48      	ldr	r3, [pc, #288]	@ (900020c0 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001f9e:	4c49      	ldr	r4, [pc, #292]	@ (900020c4 <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa0:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa2:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa4:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fac:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fb0:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb2:	4d45      	ldr	r5, [pc, #276]	@ (900020c8 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fb4:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fba:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fbe:	697b      	ldr	r3, [r7, #20]
90001fc0:	428b      	cmp	r3, r1
90001fc2:	d260      	bcs.n	90002086 <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fc4:	6821      	ldr	r1, [r4, #0]
90001fc6:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fc8:	6823      	ldr	r3, [r4, #0]
90001fca:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fcc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fd0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fd4:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001fd8:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fda:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fde:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001fe2:	6823      	ldr	r3, [r4, #0]
90001fe4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001fe8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fec:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90001fee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90001ff0:	b12b      	cbz	r3, 90001ffe <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
90001ff2:	6823      	ldr	r3, [r4, #0]
90001ff4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001ff8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001ffc:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90001ffe:	6832      	ldr	r2, [r6, #0]
90002000:	69bb      	ldr	r3, [r7, #24]
90002002:	4293      	cmp	r3, r2
90002004:	d922      	bls.n	9000204c <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002006:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002008:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000200a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
9000200e:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
90002014:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002016:	2200      	movs	r2, #0
90002018:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000201a:	6823      	ldr	r3, [r4, #0]
9000201c:	2b01      	cmp	r3, #1
9000201e:	d900      	bls.n	90002022 <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002020:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90002022:	6823      	ldr	r3, [r4, #0]
90002024:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002028:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
9000202c:	2b00      	cmp	r3, #0
9000202e:	d138      	bne.n	900020a2 <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002030:	6823      	ldr	r3, [r4, #0]
90002032:	4640      	mov	r0, r8
90002034:	68fa      	ldr	r2, [r7, #12]
90002036:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000203a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000203e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002042:	01d2      	lsls	r2, r2, #7
90002044:	6859      	ldr	r1, [r3, #4]
90002046:	f007 fd5b 	bl	90009b00 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
9000204a:	69bb      	ldr	r3, [r7, #24]
9000204c:	6832      	ldr	r2, [r6, #0]
9000204e:	429a      	cmp	r2, r3
90002050:	d20b      	bcs.n	9000206a <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
90002052:	4b1e      	ldr	r3, [pc, #120]	@ (900020cc <HAL_JPEG_DataReadyCallback+0x148>)
90002054:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
90002056:	7a1b      	ldrb	r3, [r3, #8]
90002058:	b10b      	cbz	r3, 9000205e <HAL_JPEG_DataReadyCallback+0xda>
    }
9000205a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
9000205e:	4b1c      	ldr	r3, [pc, #112]	@ (900020d0 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002060:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
90002064:	6818      	ldr	r0, [r3, #0]
90002066:	f00c bf7b 	b.w	9000ef60 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000206a:	6823      	ldr	r3, [r4, #0]
9000206c:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
9000206e:	4919      	ldr	r1, [pc, #100]	@ (900020d4 <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002070:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002072:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
90002076:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002078:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000207a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
9000207e:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002080:	f007 fd02 	bl	90009a88 <HAL_JPEG_Pause>
90002084:	e7e5      	b.n	90002052 <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002086:	6823      	ldr	r3, [r4, #0]
90002088:	68fa      	ldr	r2, [r7, #12]
9000208a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000208e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002092:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002096:	01d2      	lsls	r2, r2, #7
90002098:	6859      	ldr	r1, [r3, #4]
    }
9000209a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000209e:	f007 bd2f 	b.w	90009b00 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a2:	2102      	movs	r1, #2
900020a4:	4640      	mov	r0, r8
900020a6:	f007 fcef 	bl	90009a88 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020aa:	4b0b      	ldr	r3, [pc, #44]	@ (900020d8 <HAL_JPEG_DataReadyCallback+0x154>)
900020ac:	2201      	movs	r2, #1
900020ae:	601a      	str	r2, [r3, #0]
900020b0:	e7be      	b.n	90002030 <HAL_JPEG_DataReadyCallback+0xac>
900020b2:	bf00      	nop
900020b4:	24006004 	.word	0x24006004
900020b8:	24005db0 	.word	0x24005db0
900020bc:	24006028 	.word	0x24006028
900020c0:	24006000 	.word	0x24006000
900020c4:	24006008 	.word	0x24006008
900020c8:	24000004 	.word	0x24000004
900020cc:	2400600c 	.word	0x2400600c
900020d0:	24005df8 	.word	0x24005df8
900020d4:	24006018 	.word	0x24006018
900020d8:	24006014 	.word	0x24006014

900020dc <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900020dc:	b672      	cpsid	i
        while (1)
900020de:	e7fe      	b.n	900020de <HAL_JPEG_ErrorCallback+0x2>

900020e0 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900020e0:	4b01      	ldr	r3, [pc, #4]	@ (900020e8 <HAL_JPEG_DecodeCpltCallback+0x8>)
900020e2:	2201      	movs	r2, #1
900020e4:	601a      	str	r2, [r3, #0]
    }
900020e6:	4770      	bx	lr
900020e8:	24006018 	.word	0x24006018

900020ec <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900020ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
900020ee:	4f1e      	ldr	r7, [pc, #120]	@ (90002168 <DMA2D_CopyBuffer+0x7c>)
900020f0:	6903      	ldr	r3, [r0, #16]
900020f2:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
900020f4:	6bba      	ldr	r2, [r7, #56]	@ 0x38
900020f6:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
900020fa:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900020fc:	4e1b      	ldr	r6, [pc, #108]	@ (9000216c <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
900020fe:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
90002102:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002106:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
9000210a:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000210e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002110:	bf18      	it	ne
90002112:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002116:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002118:	6939      	ldr	r1, [r7, #16]
9000211a:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000211e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002122:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002126:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002128:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000212a:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
9000212c:	7e81      	ldrb	r1, [r0, #26]
9000212e:	b1b9      	cbz	r1, 90002160 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002130:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
90002132:	f1c1 0110 	rsb	r1, r1, #16
90002136:	4321      	orrs	r1, r4
90002138:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000213a:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
9000213c:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002140:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002144:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
90002146:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000214a:	4809      	ldr	r0, [pc, #36]	@ (90002170 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000214c:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000214e:	4b07      	ldr	r3, [pc, #28]	@ (9000216c <DMA2D_CopyBuffer+0x80>)
90002150:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
90002152:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002154:	4a07      	ldr	r2, [pc, #28]	@ (90002174 <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
90002156:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002158:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000215a:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000215c:	6018      	str	r0, [r3, #0]
}
9000215e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002160:	f044 0410 	orr.w	r4, r4, #16
90002164:	6474      	str	r4, [r6, #68]	@ 0x44
90002166:	e7e8      	b.n	9000213a <DMA2D_CopyBuffer+0x4e>
90002168:	24005db0 	.word	0x24005db0
9000216c:	52001000 	.word	0x52001000
90002170:	00012301 	.word	0x00012301
90002174:	ff09000b 	.word	0xff09000b

90002178 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002178:	6902      	ldr	r2, [r0, #16]
{
9000217a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000217e:	4605      	mov	r5, r0
90002180:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002182:	2a00      	cmp	r2, #0
90002184:	d165      	bne.n	90002252 <DMA2D_CropBuffer+0xda>
90002186:	4b35      	ldr	r3, [pc, #212]	@ (9000225c <DMA2D_CropBuffer+0xe4>)
90002188:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
9000218c:	f1cc 0010 	rsb	r0, ip, #16
90002190:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
90002192:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90002194:	3901      	subs	r1, #1
90002196:	428a      	cmp	r2, r1
90002198:	d102      	bne.n	900021a0 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000219a:	6b99      	ldr	r1, [r3, #56]	@ 0x38
9000219c:	1a41      	subs	r1, r0, r1
9000219e:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021a0:	7e6e      	ldrb	r6, [r5, #25]
900021a2:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021a4:	2e00      	cmp	r6, #0
900021a6:	d051      	beq.n	9000224c <DMA2D_CropBuffer+0xd4>
900021a8:	f1c7 0110 	rsb	r1, r7, #16
900021ac:	46b8      	mov	r8, r7
900021ae:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021b0:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021b4:	f1be 0f00 	cmp.w	lr, #0
900021b8:	d002      	beq.n	900021c0 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021ba:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021bc:	1b09      	subs	r1, r1, r4
900021be:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021c0:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021c6:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ca:	4413      	add	r3, r2
    job.MCU_drawn++;
900021cc:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021ce:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021d2:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021d4:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
900021d8:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021dc:	0052      	lsls	r2, r2, #1
900021de:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021e2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021e6:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ea:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
900021ec:	b107      	cbz	r7, 900021f0 <DMA2D_CropBuffer+0x78>
900021ee:	b90e      	cbnz	r6, 900021f4 <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
900021f0:	2300      	movs	r3, #0
900021f2:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
900021f4:	4b1a      	ldr	r3, [pc, #104]	@ (90002260 <DMA2D_CropBuffer+0xe8>)
        : color(0)
900021f6:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
900021f8:	4f1a      	ldr	r7, [pc, #104]	@ (90002264 <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
900021fa:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
900021fc:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
900021fe:	4a1a      	ldr	r2, [pc, #104]	@ (90002268 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002200:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002202:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
90002206:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002208:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000220a:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
9000220e:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002212:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002214:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002216:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
9000221a:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
9000221c:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
9000221e:	6803      	ldr	r3, [r0, #0]
90002220:	9604      	str	r6, [sp, #16]
90002222:	685b      	ldr	r3, [r3, #4]
90002224:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002226:	4b11      	ldr	r3, [pc, #68]	@ (9000226c <DMA2D_CropBuffer+0xf4>)
90002228:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000222a:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000222c:	4810      	ldr	r0, [pc, #64]	@ (90002270 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000222e:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002230:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002234:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002236:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002238:	490e      	ldr	r1, [pc, #56]	@ (90002274 <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
9000223a:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
9000223c:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
9000223e:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002240:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002242:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002244:	6019      	str	r1, [r3, #0]
}
90002246:	b00a      	add	sp, #40	@ 0x28
90002248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000224c:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
9000224e:	46b0      	mov	r8, r6
90002250:	e7ae      	b.n	900021b0 <DMA2D_CropBuffer+0x38>
90002252:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002254:	f04f 0c00 	mov.w	ip, #0
90002258:	4b00      	ldr	r3, [pc, #0]	@ (9000225c <DMA2D_CropBuffer+0xe4>)
9000225a:	e79a      	b.n	90002192 <DMA2D_CropBuffer+0x1a>
9000225c:	24005db0 	.word	0x24005db0
90002260:	01e00010 	.word	0x01e00010
90002264:	24005e00 	.word	0x24005e00
90002268:	2400600c 	.word	0x2400600c
9000226c:	52001000 	.word	0x52001000
90002270:	ff09000b 	.word	0xff09000b
90002274:	00012301 	.word	0x00012301

90002278 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
90002278:	4b0d      	ldr	r3, [pc, #52]	@ (900022b0 <DMA2D_ExternalJobCompleted+0x38>)
9000227a:	6902      	ldr	r2, [r0, #16]
9000227c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000227e:	429a      	cmp	r2, r3
90002280:	d000      	beq.n	90002284 <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
90002282:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
90002284:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
90002286:	4b0b      	ldr	r3, [pc, #44]	@ (900022b4 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
90002288:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
9000228a:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
9000228c:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
9000228e:	3101      	adds	r1, #1
        job.DoCropping = false;
90002290:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
90002292:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002294:	6819      	ldr	r1, [r3, #0]
90002296:	2901      	cmp	r1, #1
90002298:	d900      	bls.n	9000229c <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
9000229a:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
9000229c:	7e83      	ldrb	r3, [r0, #26]
9000229e:	b113      	cbz	r3, 900022a6 <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022a0:	4b05      	ldr	r3, [pc, #20]	@ (900022b8 <DMA2D_ExternalJobCompleted+0x40>)
900022a2:	2201      	movs	r2, #1
900022a4:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022a6:	4b05      	ldr	r3, [pc, #20]	@ (900022bc <DMA2D_ExternalJobCompleted+0x44>)
900022a8:	6818      	ldr	r0, [r3, #0]
900022aa:	f00c be59 	b.w	9000ef60 <osSemaphoreRelease>
900022ae:	bf00      	nop
900022b0:	24005db0 	.word	0x24005db0
900022b4:	24005df4 	.word	0x24005df4
900022b8:	24005df0 	.word	0x24005df0
900022bc:	24005df8 	.word	0x24005df8

900022c0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022c0:	2101      	movs	r1, #1
900022c2:	2200      	movs	r2, #0
{
900022c4:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022c6:	4608      	mov	r0, r1
900022c8:	f00c fdc2 	bl	9000ee50 <osSemaphoreNew>
900022cc:	4b0b      	ldr	r3, [pc, #44]	@ (900022fc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022ce:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022d0:	b140      	cbz	r0, 900022e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022d2:	2200      	movs	r2, #0
900022d4:	2104      	movs	r1, #4
900022d6:	2001      	movs	r0, #1
900022d8:	f00c fe80 	bl	9000efdc <osMessageQueueNew>
900022dc:	4b08      	ldr	r3, [pc, #32]	@ (90002300 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900022de:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022e0:	b130      	cbz	r0, 900022f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900022e2:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022e4:	4b07      	ldr	r3, [pc, #28]	@ (90002304 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900022e6:	2128      	movs	r1, #40	@ 0x28
900022e8:	4a07      	ldr	r2, [pc, #28]	@ (90002308 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900022ea:	4808      	ldr	r0, [pc, #32]	@ (9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900022ec:	f029 f958 	bl	9002b5a0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022f0:	4b07      	ldr	r3, [pc, #28]	@ (90002310 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
900022f2:	212c      	movs	r1, #44	@ 0x2c
900022f4:	4a04      	ldr	r2, [pc, #16]	@ (90002308 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900022f6:	4805      	ldr	r0, [pc, #20]	@ (9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900022f8:	f029 f952 	bl	9002b5a0 <__assert_func>
900022fc:	24006030 	.word	0x24006030
90002300:	2400602c 	.word	0x2400602c
90002304:	9002cb80 	.word	0x9002cb80
90002308:	9002cbcc 	.word	0x9002cbcc
9000230c:	9002cbfc 	.word	0x9002cbfc
90002310:	9002cc48 	.word	0x9002cc48

90002314 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002314:	4b02      	ldr	r3, [pc, #8]	@ (90002320 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
90002316:	f04f 31ff 	mov.w	r1, #4294967295
9000231a:	6818      	ldr	r0, [r3, #0]
9000231c:	f00c bdee 	b.w	9000eefc <osSemaphoreAcquire>
90002320:	24006030 	.word	0x24006030

90002324 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002324:	4b01      	ldr	r3, [pc, #4]	@ (9000232c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
90002326:	6818      	ldr	r0, [r3, #0]
90002328:	f00c be1a 	b.w	9000ef60 <osSemaphoreRelease>
9000232c:	24006030 	.word	0x24006030

90002330 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002330:	4b02      	ldr	r3, [pc, #8]	@ (9000233c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002332:	2100      	movs	r1, #0
90002334:	6818      	ldr	r0, [r3, #0]
90002336:	f00c bde1 	b.w	9000eefc <osSemaphoreAcquire>
9000233a:	bf00      	nop
9000233c:	24006030 	.word	0x24006030

90002340 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002340:	4b01      	ldr	r3, [pc, #4]	@ (90002348 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002342:	6818      	ldr	r0, [r3, #0]
90002344:	f00c be0c 	b.w	9000ef60 <osSemaphoreRelease>
90002348:	24006030 	.word	0x24006030

9000234c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
9000234c:	4803      	ldr	r0, [pc, #12]	@ (9000235c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
9000234e:	2300      	movs	r3, #0
90002350:	4903      	ldr	r1, [pc, #12]	@ (90002360 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90002352:	461a      	mov	r2, r3
90002354:	6800      	ldr	r0, [r0, #0]
90002356:	f00c be7d 	b.w	9000f054 <osMessageQueuePut>
9000235a:	bf00      	nop
9000235c:	2400602c 	.word	0x2400602c
90002360:	2400003c 	.word	0x2400003c

90002364 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90002364:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002366:	2300      	movs	r3, #0
{
90002368:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000236a:	4c07      	ldr	r4, [pc, #28]	@ (90002388 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
9000236c:	a901      	add	r1, sp, #4
9000236e:	461a      	mov	r2, r3
90002370:	6820      	ldr	r0, [r4, #0]
90002372:	f00c feab 	bl	9000f0cc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90002376:	f04f 33ff 	mov.w	r3, #4294967295
9000237a:	2200      	movs	r2, #0
9000237c:	a901      	add	r1, sp, #4
9000237e:	6820      	ldr	r0, [r4, #0]
90002380:	f00c fea4 	bl	9000f0cc <osMessageQueueGet>
}
90002384:	b002      	add	sp, #8
90002386:	bd10      	pop	{r4, pc}
90002388:	2400602c 	.word	0x2400602c

9000238c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
9000238c:	6803      	ldr	r3, [r0, #0]
9000238e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002390:	4718      	bx	r3
90002392:	bf00      	nop

90002394 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90002394:	2001      	movs	r0, #1
90002396:	4770      	bx	lr

90002398 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
90002398:	e7fe      	b.n	90002398 <DMA2D_XferErrorCallback>
9000239a:	bf00      	nop

9000239c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
9000239c:	4905      	ldr	r1, [pc, #20]	@ (900023b4 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000239e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023a2:	4b05      	ldr	r3, [pc, #20]	@ (900023b8 <_ZN8STM32DMAD1Ev+0x1c>)
900023a4:	6001      	str	r1, [r0, #0]
900023a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023ae:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023b2:	4770      	bx	lr
900023b4:	9002e5d8 	.word	0x9002e5d8
900023b8:	e000e100 	.word	0xe000e100

900023bc <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023bc:	4b11      	ldr	r3, [pc, #68]	@ (90002404 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023be:	4912      	ldr	r1, [pc, #72]	@ (90002408 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023c0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023c4:	4811      	ldr	r0, [pc, #68]	@ (9000240c <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023c6:	f042 0210 	orr.w	r2, r2, #16
{
900023ca:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023cc:	4c10      	ldr	r4, [pc, #64]	@ (90002410 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023ce:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023d0:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023dc:	f002 0210 	and.w	r2, r2, #16
900023e0:	9201      	str	r2, [sp, #4]
900023e2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900023e4:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023e6:	f042 0210 	orr.w	r2, r2, #16
900023ea:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
900023ec:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023ee:	f022 0210 	bic.w	r2, r2, #16
900023f2:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023f4:	4b07      	ldr	r3, [pc, #28]	@ (90002414 <_ZN8STM32DMA10initializeEv+0x58>)
900023f6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023fa:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
900023fc:	b003      	add	sp, #12
900023fe:	f85d 4b04 	ldr.w	r4, [sp], #4
90002402:	4770      	bx	lr
90002404:	58024400 	.word	0x58024400
90002408:	24007698 	.word	0x24007698
9000240c:	90002399 	.word	0x90002399
90002410:	900027e1 	.word	0x900027e1
90002414:	e000e100 	.word	0xe000e100

90002418 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002418:	f240 30ef 	movw	r0, #1007	@ 0x3ef
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop

90002420 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002420:	4909      	ldr	r1, [pc, #36]	@ (90002448 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002422:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002426:	4b09      	ldr	r3, [pc, #36]	@ (9000244c <_ZN8STM32DMAD0Ev+0x2c>)
90002428:	b510      	push	{r4, lr}
9000242a:	6001      	str	r1, [r0, #0]
9000242c:	4604      	mov	r4, r0
9000242e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002432:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002436:	f3bf 8f6f 	isb	sy
}
9000243a:	f640 51a4 	movw	r1, #3492	@ 0xda4
9000243e:	f028 fd37 	bl	9002aeb0 <_ZdlPvj>
90002442:	4620      	mov	r0, r4
90002444:	bd10      	pop	{r4, pc}
90002446:	bf00      	nop
90002448:	9002e5d8 	.word	0x9002e5d8
9000244c:	e000e100 	.word	0xe000e100

90002450 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002450:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
90002454:	b510      	push	{r4, lr}
90002456:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002458:	b963      	cbnz	r3, 90002474 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
9000245a:	6803      	ldr	r3, [r0, #0]
9000245c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000245e:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002460:	4924      	ldr	r1, [pc, #144]	@ (900024f4 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
90002462:	4a25      	ldr	r2, [pc, #148]	@ (900024f8 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002464:	680b      	ldr	r3, [r1, #0]
90002466:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000246a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000246e:	2b01      	cmp	r3, #1
90002470:	d015      	beq.n	9000249e <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
90002472:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
90002474:	7a03      	ldrb	r3, [r0, #8]
90002476:	2b00      	cmp	r3, #0
90002478:	d12b      	bne.n	900024d2 <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
9000247a:	6860      	ldr	r0, [r4, #4]
9000247c:	6803      	ldr	r3, [r0, #0]
9000247e:	681b      	ldr	r3, [r3, #0]
90002480:	4798      	blx	r3
90002482:	4603      	mov	r3, r0
90002484:	2800      	cmp	r0, #0
90002486:	d1f4      	bne.n	90002472 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
90002488:	7a62      	ldrb	r2, [r4, #9]
9000248a:	2a00      	cmp	r2, #0
9000248c:	d0f1      	beq.n	90002472 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
9000248e:	6822      	ldr	r2, [r4, #0]
90002490:	4620      	mov	r0, r4
                started_by_external_job = false;
90002492:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002496:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002498:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
9000249c:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
9000249e:	4817      	ldr	r0, [pc, #92]	@ (900024fc <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024a0:	6800      	ldr	r0, [r0, #0]
900024a2:	2800      	cmp	r0, #0
900024a4:	d1e5      	bne.n	90002472 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a6:	7a20      	ldrb	r0, [r4, #8]
900024a8:	2800      	cmp	r0, #0
900024aa:	d1e2      	bne.n	90002472 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ac:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024ae:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024b2:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024b6:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024b8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024bc:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024be:	6808      	ldr	r0, [r1, #0]
900024c0:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024c4:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c8:	b17b      	cbz	r3, 900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ce:	f7ff be53 	b.w	90002178 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d2:	4b08      	ldr	r3, [pc, #32]	@ (900024f4 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024d4:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	4808      	ldr	r0, [pc, #32]	@ (900024f8 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024d8:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024da:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024dc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024e0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024e4:	f7ff fec8 	bl	90002278 <DMA2D_ExternalJobCompleted>
900024e8:	e7c7      	b.n	9000247a <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
900024ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	f7ff bdfd 	b.w	900020ec <DMA2D_CopyBuffer>
900024f2:	bf00      	nop
900024f4:	24005df4 	.word	0x24005df4
900024f8:	24000004 	.word	0x24000004
900024fc:	24005df0 	.word	0x24005df0

90002500 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002500:	b570      	push	{r4, r5, r6, lr}
    switch (format)
90002502:	7f8b      	ldrb	r3, [r1, #30]
90002504:	2b0a      	cmp	r3, #10
90002506:	d83d      	bhi.n	90002584 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002508:	e8df f003 	tbb	[pc, r3]
9000250c:	3c2a063a 	.word	0x3c2a063a
90002510:	063c3c3c 	.word	0x063c3c3c
90002514:	0606      	.short	0x0606
90002516:	06          	.byte	0x06
90002517:	00          	.byte	0x00
90002518:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000251a:	f8b1 c014 	ldrh.w	ip, [r1, #20]
9000251e:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002520:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002522:	4b1b      	ldr	r3, [pc, #108]	@ (90002590 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002524:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002528:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000252a:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000252e:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002530:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002532:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002534:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90002536:	680e      	ldr	r6, [r1, #0]
        return color;
90002538:	68c8      	ldr	r0, [r1, #12]
9000253a:	2e08      	cmp	r6, #8
9000253c:	d012      	beq.n	90002564 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000253e:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002540:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002542:	0941      	lsrs	r1, r0, #5
90002544:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002548:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000254c:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000254e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
90002552:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002554:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002556:	490f      	ldr	r1, [pc, #60]	@ (90002594 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002558:	4302      	orrs	r2, r0
9000255a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000255c:	6019      	str	r1, [r3, #0]
    }
}
9000255e:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002560:	2400      	movs	r4, #0
90002562:	e7da      	b.n	9000251a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002564:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002566:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002568:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000256a:	4a0b      	ldr	r2, [pc, #44]	@ (90002598 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
9000256c:	7f09      	ldrb	r1, [r1, #28]
9000256e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90002572:	490a      	ldr	r1, [pc, #40]	@ (9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002574:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002576:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002578:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000257a:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000257c:	6019      	str	r1, [r3, #0]
}
9000257e:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002580:	2402      	movs	r4, #2
90002582:	e7ca      	b.n	9000251a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90002584:	4b06      	ldr	r3, [pc, #24]	@ (900025a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
90002586:	2191      	movs	r1, #145	@ 0x91
90002588:	4a06      	ldr	r2, [pc, #24]	@ (900025a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
9000258a:	4807      	ldr	r0, [pc, #28]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
9000258c:	f029 f808 	bl	9002b5a0 <__assert_func>
90002590:	52001000 	.word	0x52001000
90002594:	00032301 	.word	0x00032301
90002598:	00010009 	.word	0x00010009
9000259c:	00022301 	.word	0x00022301
900025a0:	9002cc8c 	.word	0x9002cc8c
900025a4:	9002cca8 	.word	0x9002cca8
900025a8:	9002ccf4 	.word	0x9002ccf4

900025ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025ae:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025b2:	f1be 0f0b 	cmp.w	lr, #11
900025b6:	f200 80aa 	bhi.w	9000270e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
900025ba:	e8df f00e 	tbb	[pc, lr]
900025be:	585d      	.short	0x585d
900025c0:	a8a8a846 	.word	0xa8a8a846
900025c4:	060606a8 	.word	0x060606a8
900025c8:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025ca:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025cc:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025d0:	f1bc 0f0b 	cmp.w	ip, #11
900025d4:	f200 809b 	bhi.w	9000270e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
900025d8:	e8df f00c 	tbb	[pc, ip]
900025dc:	990d4b50 	.word	0x990d4b50
900025e0:	06999999 	.word	0x06999999
900025e4:	06060606 	.word	0x06060606
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f000 8095 	beq.w	9000271a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
900025f0:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
900025f2:	2701      	movs	r7, #1
900025f4:	e001      	b.n	900025fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
900025f6:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025f8:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025fa:	8a8b      	ldrh	r3, [r1, #20]
900025fc:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
900025fe:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002600:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002602:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002604:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002606:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000260a:	4b4a      	ldr	r3, [pc, #296]	@ (90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000260c:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000260e:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002610:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002612:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002614:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002616:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002618:	6908      	ldr	r0, [r1, #16]
9000261a:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000261c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
9000261e:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002620:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
90002622:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002624:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
90002628:	d03c      	beq.n	900026a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
9000262a:	d810      	bhi.n	9000264e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
9000262c:	2d20      	cmp	r5, #32
9000262e:	d036      	beq.n	9000269e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002630:	2d40      	cmp	r5, #64	@ 0x40
90002632:	d034      	beq.n	9000269e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002634:	2d04      	cmp	r5, #4
90002636:	d124      	bne.n	90002682 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000263a:	493f      	ldr	r1, [pc, #252]	@ (90002738 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
90002640:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002642:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002644:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002646:	6019      	str	r1, [r3, #0]
}
90002648:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000264a:	2600      	movs	r6, #0
9000264c:	e7be      	b.n	900025cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
9000264e:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90002652:	d022      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
90002654:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
90002658:	d113      	bne.n	90002682 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000265a:	4d38      	ldr	r5, [pc, #224]	@ (9000273c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000265c:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000265e:	4a36      	ldr	r2, [pc, #216]	@ (90002738 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002660:	61dd      	str	r5, [r3, #28]
90002662:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002664:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002666:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002668:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000266a:	601a      	str	r2, [r3, #0]
}
9000266c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
9000266e:	2601      	movs	r6, #1
90002670:	e7ac      	b.n	900025cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002672:	2401      	movs	r4, #1
90002674:	4627      	mov	r7, r4
90002676:	e7c0      	b.n	900025fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90002678:	2602      	movs	r6, #2
9000267a:	e7a7      	b.n	900025cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
9000267c:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
9000267e:	4627      	mov	r7, r4
90002680:	e7bb      	b.n	900025fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002682:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
90002684:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002686:	4b2b      	ldr	r3, [pc, #172]	@ (90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002688:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000268c:	bf14      	ite	ne
9000268e:	4a2c      	ldrne	r2, [pc, #176]	@ (90002740 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002690:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002694:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002696:	601a      	str	r2, [r3, #0]
}
90002698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4d2a      	ldr	r5, [pc, #168]	@ (90002744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
9000269c:	e7de      	b.n	9000265c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269e:	4332      	orrs	r2, r6
900026a0:	4b24      	ldr	r3, [pc, #144]	@ (90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026a2:	e7ca      	b.n	9000263a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a4:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a8:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026aa:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026ae:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
900026b2:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b4:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b8:	b1e2      	cbz	r2, 900026f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
900026ba:	2a01      	cmp	r2, #1
900026bc:	d133      	bne.n	90002726 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026be:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
900026c0:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026c2:	8849      	ldrh	r1, [r1, #2]
900026c4:	4a20      	ldr	r2, [pc, #128]	@ (90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
900026c6:	bf18      	it	ne
900026c8:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ca:	3901      	subs	r1, #1
900026cc:	4002      	ands	r2, r0
900026ce:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026d2:	f042 0210 	orr.w	r2, r2, #16
900026d6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026d8:	4a16      	ldr	r2, [pc, #88]	@ (90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026da:	69d3      	ldr	r3, [r2, #28]
900026dc:	f043 0320 	orr.w	r3, r3, #32
900026e0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026e2:	69d3      	ldr	r3, [r2, #28]
900026e4:	069b      	lsls	r3, r3, #26
900026e6:	d4fc      	bmi.n	900026e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026e8:	2310      	movs	r3, #16
900026ea:	6093      	str	r3, [r2, #8]
            if (blend)
900026ec:	b167      	cbz	r7, 90002708 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026ee:	4b12      	ldr	r3, [pc, #72]	@ (90002738 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026f0:	6013      	str	r3, [r2, #0]
}
900026f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f4:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
900026f6:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	8849      	ldrh	r1, [r1, #2]
900026fa:	4a13      	ldr	r2, [pc, #76]	@ (90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
900026fc:	3901      	subs	r1, #1
900026fe:	4002      	ands	r2, r0
90002700:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002704:	61da      	str	r2, [r3, #28]
                break;
90002706:	e7e7      	b.n	900026d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002708:	4b0d      	ldr	r3, [pc, #52]	@ (90002740 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
9000270a:	6013      	str	r3, [r2, #0]
}
9000270c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000270e:	4b0f      	ldr	r3, [pc, #60]	@ (9000274c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002710:	2170      	movs	r1, #112	@ 0x70
90002712:	4a0f      	ldr	r2, [pc, #60]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002714:	480f      	ldr	r0, [pc, #60]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002716:	f028 ff43 	bl	9002b5a0 <__assert_func>
        assert(0 && "Unsupported Format!");
9000271a:	4b0c      	ldr	r3, [pc, #48]	@ (9000274c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
9000271c:	2191      	movs	r1, #145	@ 0x91
9000271e:	4a0e      	ldr	r2, [pc, #56]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002720:	480c      	ldr	r0, [pc, #48]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002722:	f028 ff3d 	bl	9002b5a0 <__assert_func>
                assert(0 && "Unsupported format");
90002726:	4b0d      	ldr	r3, [pc, #52]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
90002728:	f240 111b 	movw	r1, #283	@ 0x11b
9000272c:	4a0c      	ldr	r2, [pc, #48]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
9000272e:	4809      	ldr	r0, [pc, #36]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	f028 ff36 	bl	9002b5a0 <__assert_func>
90002734:	52001000 	.word	0x52001000
90002738:	00022301 	.word	0x00022301
9000273c:	00020009 	.word	0x00020009
90002740:	00012301 	.word	0x00012301
90002744:	0002000a 	.word	0x0002000a
90002748:	ffff00ef 	.word	0xffff00ef
9000274c:	9002cc8c 	.word	0x9002cc8c
90002750:	9002cd40 	.word	0x9002cd40
90002754:	9002ccf4 	.word	0x9002ccf4
90002758:	9002cca8 	.word	0x9002cca8
9000275c:	9002cd8c 	.word	0x9002cd8c
90002760:	9002cda8 	.word	0x9002cda8

90002764 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002764:	b510      	push	{r4, lr}
90002766:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002768:	6840      	ldr	r0, [r0, #4]
9000276a:	6803      	ldr	r3, [r0, #0]
9000276c:	681b      	ldr	r3, [r3, #0]
9000276e:	4798      	blx	r3
90002770:	b958      	cbnz	r0, 9000278a <_ZN8STM32DMA5startEv+0x26>
90002772:	7a63      	ldrb	r3, [r4, #9]
90002774:	b14b      	cbz	r3, 9000278a <_ZN8STM32DMA5startEv+0x26>
90002776:	7a23      	ldrb	r3, [r4, #8]
90002778:	bb3b      	cbnz	r3, 900027ca <_ZN8STM32DMA5startEv+0x66>
            execute();
9000277a:	6822      	ldr	r2, [r4, #0]
9000277c:	4620      	mov	r0, r4
            started_by_external_job = false;
9000277e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
90002782:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
90002788:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
9000278a:	4913      	ldr	r1, [pc, #76]	@ (900027d8 <_ZN8STM32DMA5startEv+0x74>)
9000278c:	4a13      	ldr	r2, [pc, #76]	@ (900027dc <_ZN8STM32DMA5startEv+0x78>)
9000278e:	680b      	ldr	r3, [r1, #0]
90002790:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002794:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002798:	2b01      	cmp	r3, #1
9000279a:	d000      	beq.n	9000279e <_ZN8STM32DMA5startEv+0x3a>
    }
9000279c:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
9000279e:	7a20      	ldrb	r0, [r4, #8]
900027a0:	2800      	cmp	r0, #0
900027a2:	d1fb      	bne.n	9000279c <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027a4:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027a6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027aa:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ae:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027b0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027b4:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027b6:	6808      	ldr	r0, [r1, #0]
900027b8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027bc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	b133      	cbz	r3, 900027d0 <_ZN8STM32DMA5startEv+0x6c>
    }
900027c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027c6:	f7ff bcd7 	b.w	90002178 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ca:	4b03      	ldr	r3, [pc, #12]	@ (900027d8 <_ZN8STM32DMA5startEv+0x74>)
900027cc:	681b      	ldr	r3, [r3, #0]
    }
900027ce:	bd10      	pop	{r4, pc}
900027d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d4:	f7ff bc8a 	b.w	900020ec <DMA2D_CopyBuffer>
900027d8:	24005df4 	.word	0x24005df4
900027dc:	24000004 	.word	0x24000004

900027e0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027e0:	4b2c      	ldr	r3, [pc, #176]	@ (90002894 <DMA2D_XferCpltCallback+0xb4>)
900027e2:	492d      	ldr	r1, [pc, #180]	@ (90002898 <DMA2D_XferCpltCallback+0xb8>)
900027e4:	681b      	ldr	r3, [r3, #0]
    {
900027e6:	b510      	push	{r4, lr}
900027e8:	685c      	ldr	r4, [r3, #4]
900027ea:	6823      	ldr	r3, [r4, #0]
900027ec:	695a      	ldr	r2, [r3, #20]
900027ee:	428a      	cmp	r2, r1
900027f0:	d122      	bne.n	90002838 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
900027f2:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
900027f6:	b192      	cbz	r2, 9000281e <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
900027f8:	7a23      	ldrb	r3, [r4, #8]
900027fa:	2b00      	cmp	r3, #0
900027fc:	d13a      	bne.n	90002874 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
900027fe:	6860      	ldr	r0, [r4, #4]
90002800:	6803      	ldr	r3, [r0, #0]
90002802:	681b      	ldr	r3, [r3, #0]
90002804:	4798      	blx	r3
90002806:	4603      	mov	r3, r0
90002808:	b9a8      	cbnz	r0, 90002836 <DMA2D_XferCpltCallback+0x56>
9000280a:	7a62      	ldrb	r2, [r4, #9]
9000280c:	b19a      	cbz	r2, 90002836 <DMA2D_XferCpltCallback+0x56>
                execute();
9000280e:	6822      	ldr	r2, [r4, #0]
90002810:	4620      	mov	r0, r4
                started_by_external_job = false;
90002812:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002816:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000281c:	4718      	bx	r3
            executeCompleted();
9000281e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002820:	4620      	mov	r0, r4
90002822:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002824:	491d      	ldr	r1, [pc, #116]	@ (9000289c <DMA2D_XferCpltCallback+0xbc>)
90002826:	4a1e      	ldr	r2, [pc, #120]	@ (900028a0 <DMA2D_XferCpltCallback+0xc0>)
90002828:	680b      	ldr	r3, [r1, #0]
9000282a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000282e:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002832:	2b01      	cmp	r3, #1
90002834:	d004      	beq.n	90002840 <DMA2D_XferCpltCallback+0x60>
90002836:	bd10      	pop	{r4, pc}
90002838:	4620      	mov	r0, r4
9000283a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000283e:	4710      	bx	r2
90002840:	4818      	ldr	r0, [pc, #96]	@ (900028a4 <DMA2D_XferCpltCallback+0xc4>)
90002842:	6800      	ldr	r0, [r0, #0]
90002844:	2800      	cmp	r0, #0
90002846:	d1f6      	bne.n	90002836 <DMA2D_XferCpltCallback+0x56>
90002848:	7a20      	ldrb	r0, [r4, #8]
9000284a:	2800      	cmp	r0, #0
9000284c:	d1f3      	bne.n	90002836 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000284e:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002850:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002854:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002858:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000285a:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000285e:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002860:	6808      	ldr	r0, [r1, #0]
90002862:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002866:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	b17b      	cbz	r3, 9000288c <DMA2D_XferCpltCallback+0xac>
9000286c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002870:	f7ff bc82 	b.w	90002178 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002874:	4b09      	ldr	r3, [pc, #36]	@ (9000289c <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002876:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002878:	4809      	ldr	r0, [pc, #36]	@ (900028a0 <DMA2D_XferCpltCallback+0xc0>)
9000287a:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
9000287c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002882:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90002886:	f7ff fcf7 	bl	90002278 <DMA2D_ExternalJobCompleted>
9000288a:	e7b8      	b.n	900027fe <DMA2D_XferCpltCallback+0x1e>
9000288c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	f7ff bc2c 	b.w	900020ec <DMA2D_CopyBuffer>
90002894:	240218cc 	.word	0x240218cc
90002898:	90002451 	.word	0x90002451
9000289c:	24005df4 	.word	0x24005df4
900028a0:	24000004 	.word	0x24000004
900028a4:	24005df0 	.word	0x24005df0

900028a8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028a8:	b570      	push	{r4, r5, r6, lr}
900028aa:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ac:	4b0b      	ldr	r3, [pc, #44]	@ (900028dc <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028ae:	2500      	movs	r5, #0
900028b0:	300c      	adds	r0, #12
900028b2:	4634      	mov	r4, r6
900028b4:	2260      	movs	r2, #96	@ 0x60
900028b6:	7235      	strb	r5, [r6, #8]
900028b8:	7275      	strb	r5, [r6, #9]
900028ba:	6070      	str	r0, [r6, #4]
900028bc:	f844 3b20 	str.w	r3, [r4], #32
900028c0:	4621      	mov	r1, r4
900028c2:	f010 fb5f 	bl	90012f84 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028c6:	4621      	mov	r1, r4
900028c8:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028cc:	60cd      	str	r5, [r1, #12]
900028ce:	3124      	adds	r1, #36	@ 0x24
900028d0:	4299      	cmp	r1, r3
900028d2:	d1fb      	bne.n	900028cc <_ZN8STM32DMAC1Ev+0x24>
}
900028d4:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028d6:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028da:	bd70      	pop	{r4, r5, r6, pc}
900028dc:	9002e5d8 	.word	0x9002e5d8

900028e0 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028e0:	4a03      	ldr	r2, [pc, #12]	@ (900028f0 <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028e2:	6813      	ldr	r3, [r2, #0]
900028e4:	07db      	lsls	r3, r3, #31
900028e6:	d4fc      	bmi.n	900028e2 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900028e8:	2323      	movs	r3, #35	@ 0x23
900028ea:	6093      	str	r3, [r2, #8]
}
900028ec:	4770      	bx	lr
900028ee:	bf00      	nop
900028f0:	52001000 	.word	0x52001000

900028f4 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900028f4:	4a0b      	ldr	r2, [pc, #44]	@ (90002924 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
900028f6:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
900028f8:	03db      	lsls	r3, r3, #15
900028fa:	d501      	bpl.n	90002900 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
900028fc:	2900      	cmp	r1, #0
900028fe:	dc00      	bgt.n	90002902 <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002900:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90002902:	f000 031f 	and.w	r3, r0, #31
90002906:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002908:	f3bf 8f4f 	dsb	sy
9000290c:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000290e:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90002912:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002914:	1a0b      	subs	r3, r1, r0
90002916:	2b00      	cmp	r3, #0
90002918:	dcf9      	bgt.n	9000290e <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
9000291a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000291e:	f3bf 8f6f 	isb	sy
90002922:	4770      	bx	lr
90002924:	e000ed00 	.word	0xe000ed00

90002928 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002928:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000292a:	4c11      	ldr	r4, [pc, #68]	@ (90002970 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
9000292c:	6825      	ldr	r5, [r4, #0]
9000292e:	07ed      	lsls	r5, r5, #31
90002930:	d4fc      	bmi.n	9000292c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002932:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002934:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002936:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002938:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000293a:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000293e:	f04f 0502 	mov.w	r5, #2
90002942:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002944:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002946:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002948:	d00b      	beq.n	90002962 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000294a:	490a      	ldr	r1, [pc, #40]	@ (90002974 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000294c:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000294e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002952:	4909      	ldr	r1, [pc, #36]	@ (90002978 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002954:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002956:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002958:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
9000295a:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000295c:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000295e:	bc30      	pop	{r4, r5}
90002960:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002962:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002964:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002966:	4b05      	ldr	r3, [pc, #20]	@ (9000297c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002968:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000296a:	6023      	str	r3, [r4, #0]
}
9000296c:	bc30      	pop	{r4, r5}
9000296e:	4770      	bx	lr
90002970:	52001000 	.word	0x52001000
90002974:	00010009 	.word	0x00010009
90002978:	00020001 	.word	0x00020001
9000297c:	00030001 	.word	0x00030001

90002980 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
90002980:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002982:	4c10      	ldr	r4, [pc, #64]	@ (900029c4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
90002984:	6825      	ldr	r5, [r4, #0]
90002986:	07ed      	lsls	r5, r5, #31
90002988:	d4fc      	bmi.n	90002984 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000298a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000298c:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
9000298e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002990:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002992:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002996:	f04f 0502 	mov.w	r5, #2
9000299a:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000299c:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000299e:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029a0:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029a2:	d009      	beq.n	900029b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029a4:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029a6:	4a08      	ldr	r2, [pc, #32]	@ (900029c8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029a8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029ac:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029ae:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029b0:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029b2:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029b4:	bc30      	pop	{r4, r5}
900029b6:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029b8:	4a04      	ldr	r2, [pc, #16]	@ (900029cc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ba:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029bc:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029be:	6023      	str	r3, [r4, #0]
}
900029c0:	bc30      	pop	{r4, r5}
900029c2:	4770      	bx	lr
900029c4:	52001000 	.word	0x52001000
900029c8:	00020001 	.word	0x00020001
900029cc:	ff020002 	.word	0xff020002

900029d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029d0:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029d2:	4c0c      	ldr	r4, [pc, #48]	@ (90002a04 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900029d4:	6825      	ldr	r5, [r4, #0]
900029d6:	07ed      	lsls	r5, r5, #31
900029d8:	d4fc      	bmi.n	900029d4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029da:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029dc:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029de:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029e0:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029e2:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029e6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029ea:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029ec:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ee:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029f0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029f2:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f4:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029f6:	4b04      	ldr	r3, [pc, #16]	@ (90002a08 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029f8:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029fa:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029fc:	6023      	str	r3, [r4, #0]
}
900029fe:	bc70      	pop	{r4, r5, r6}
90002a00:	4770      	bx	lr
90002a02:	bf00      	nop
90002a04:	52001000 	.word	0x52001000
90002a08:	00020001 	.word	0x00020001

90002a0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a0c:	2001      	movs	r0, #1
90002a0e:	4770      	bx	lr

90002a10 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a10:	2014      	movs	r0, #20
90002a12:	4770      	bx	lr

90002a14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a14:	eb01 0181 	add.w	r1, r1, r1, lsl #2
90002a18:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a1c:	3008      	adds	r0, #8
90002a1e:	4770      	bx	lr

90002a20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a20:	eb01 0181 	add.w	r1, r1, r1, lsl #2
90002a24:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a28:	3008      	adds	r0, #8
90002a2a:	4770      	bx	lr

90002a2c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a2c:	2001      	movs	r0, #1
90002a2e:	4770      	bx	lr

90002a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a30:	f44f 70d6 	mov.w	r0, #428	@ 0x1ac
90002a34:	4770      	bx	lr
90002a36:	bf00      	nop

90002a38 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a38:	f44f 73d6 	mov.w	r3, #428	@ 0x1ac
90002a3c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a40:	3008      	adds	r0, #8
90002a42:	4770      	bx	lr

90002a44 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a44:	f44f 73d6 	mov.w	r3, #428	@ 0x1ac
90002a48:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a4c:	3008      	adds	r0, #8
90002a4e:	4770      	bx	lr

90002a50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a50:	2001      	movs	r0, #1
90002a52:	4770      	bx	lr

90002a54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a54:	2010      	movs	r0, #16
90002a56:	4770      	bx	lr

90002a58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a58:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a5c:	3008      	adds	r0, #8
90002a5e:	4770      	bx	lr

90002a60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a60:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a64:	3008      	adds	r0, #8
90002a66:	4770      	bx	lr

90002a68 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHome_ScreenScreenNoTransition();
90002a68:	4608      	mov	r0, r1
90002a6a:	f002 bb15 	b.w	90005098 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>
90002a6e:	bf00      	nop

90002a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002a70:	4b03      	ldr	r3, [pc, #12]	@ (90002a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002a72:	b510      	push	{r4, lr}
90002a74:	4604      	mov	r4, r0
90002a76:	6003      	str	r3, [r0, #0]
90002a78:	f00f f893 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a7c:	4620      	mov	r0, r4
90002a7e:	bd10      	pop	{r4, pc}
90002a80:	9002e690 	.word	0x9002e690

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002a84:	4b05      	ldr	r3, [pc, #20]	@ (90002a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90002a86:	b510      	push	{r4, lr}
90002a88:	4604      	mov	r4, r0
90002a8a:	6003      	str	r3, [r0, #0]
90002a8c:	f00f f889 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a90:	211c      	movs	r1, #28
90002a92:	4620      	mov	r0, r4
90002a94:	f028 fa0c 	bl	9002aeb0 <_ZdlPvj>
90002a98:	4620      	mov	r0, r4
90002a9a:	bd10      	pop	{r4, pc}
90002a9c:	9002e690 	.word	0x9002e690

90002aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002aa0:	4b03      	ldr	r3, [pc, #12]	@ (90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aa2:	b510      	push	{r4, lr}
90002aa4:	4604      	mov	r4, r0
90002aa6:	6003      	str	r3, [r0, #0]
90002aa8:	f00f f87b 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aac:	4620      	mov	r0, r4
90002aae:	bd10      	pop	{r4, pc}
90002ab0:	9002e65c 	.word	0x9002e65c

90002ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ab4:	4b06      	ldr	r3, [pc, #24]	@ (90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13TC_ScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002ab6:	b510      	push	{r4, lr}
90002ab8:	4604      	mov	r4, r0
90002aba:	6003      	str	r3, [r0, #0]
90002abc:	f00f f871 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac0:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
90002ac4:	4620      	mov	r0, r4
90002ac6:	f028 f9f3 	bl	9002aeb0 <_ZdlPvj>
90002aca:	4620      	mov	r0, r4
90002acc:	bd10      	pop	{r4, pc}
90002ace:	bf00      	nop
90002ad0:	9002e65c 	.word	0x9002e65c

90002ad4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ad4:	4b03      	ldr	r3, [pc, #12]	@ (90002ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ad6:	b510      	push	{r4, lr}
90002ad8:	4604      	mov	r4, r0
90002ada:	6003      	str	r3, [r0, #0]
90002adc:	f00f f861 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ae0:	4620      	mov	r0, r4
90002ae2:	bd10      	pop	{r4, pc}
90002ae4:	9002e628 	.word	0x9002e628

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ae8:	4b05      	ldr	r3, [pc, #20]	@ (90002b00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00f f857 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	2118      	movs	r1, #24
90002af6:	4620      	mov	r0, r4
90002af8:	f028 f9da 	bl	9002aeb0 <_ZdlPvj>
90002afc:	4620      	mov	r0, r4
90002afe:	bd10      	pop	{r4, pc}
90002b00:	9002e628 	.word	0x9002e628

90002b04 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b04:	b510      	push	{r4, lr}
90002b06:	4a0c      	ldr	r2, [pc, #48]	@ (90002b38 <_ZN12FrontendHeapD1Ev+0x34>)
90002b08:	4604      	mov	r4, r0
90002b0a:	4b0c      	ldr	r3, [pc, #48]	@ (90002b3c <_ZN12FrontendHeapD1Ev+0x38>)
90002b0c:	f500 70f0 	add.w	r0, r0, #480	@ 0x1e0
90002b10:	6022      	str	r2, [r4, #0]
90002b12:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90002b16:	f00f f844 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b1a:	4b09      	ldr	r3, [pc, #36]	@ (90002b40 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b1c:	4620      	mov	r0, r4
90002b1e:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b22:	f00f f83e 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b26:	4b07      	ldr	r3, [pc, #28]	@ (90002b44 <_ZN12FrontendHeapD1Ev+0x40>)
90002b28:	4620      	mov	r0, r4
90002b2a:	f840 3f14 	str.w	r3, [r0, #20]!
90002b2e:	f00f f838 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b32:	4620      	mov	r0, r4
90002b34:	bd10      	pop	{r4, pc}
90002b36:	bf00      	nop
90002b38:	9002e6c4 	.word	0x9002e6c4
90002b3c:	9002e690 	.word	0x9002e690
90002b40:	9002e65c 	.word	0x9002e65c
90002b44:	9002e628 	.word	0x9002e628

90002b48 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b48:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b4a:	4c0c      	ldr	r4, [pc, #48]	@ (90002b7c <__tcf_0+0x34>)
90002b4c:	4a0c      	ldr	r2, [pc, #48]	@ (90002b80 <__tcf_0+0x38>)
90002b4e:	4b0d      	ldr	r3, [pc, #52]	@ (90002b84 <__tcf_0+0x3c>)
90002b50:	f504 70f0 	add.w	r0, r4, #480	@ 0x1e0
90002b54:	6022      	str	r2, [r4, #0]
90002b56:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90002b5a:	f00f f822 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b5e:	4b0a      	ldr	r3, [pc, #40]	@ (90002b88 <__tcf_0+0x40>)
90002b60:	4620      	mov	r0, r4
90002b62:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b66:	f00f f81c 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6a:	4620      	mov	r0, r4
90002b6c:	4b07      	ldr	r3, [pc, #28]	@ (90002b8c <__tcf_0+0x44>)
        static FrontendHeap instance;
90002b6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002b72:	f840 3f14 	str.w	r3, [r0, #20]!
90002b76:	f00f b814 	b.w	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b7a:	bf00      	nop
90002b7c:	24006f1c 	.word	0x24006f1c
90002b80:	9002e6c4 	.word	0x9002e6c4
90002b84:	9002e690 	.word	0x9002e690
90002b88:	9002e65c 	.word	0x9002e65c
90002b8c:	9002e628 	.word	0x9002e628

90002b90 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002b90:	b510      	push	{r4, lr}
90002b92:	4a0e      	ldr	r2, [pc, #56]	@ (90002bcc <_ZN12FrontendHeapD0Ev+0x3c>)
90002b94:	4604      	mov	r4, r0
90002b96:	4b0e      	ldr	r3, [pc, #56]	@ (90002bd0 <_ZN12FrontendHeapD0Ev+0x40>)
90002b98:	f500 70f0 	add.w	r0, r0, #480	@ 0x1e0
90002b9c:	6022      	str	r2, [r4, #0]
90002b9e:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90002ba2:	f00e fffe 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ba6:	4b0b      	ldr	r3, [pc, #44]	@ (90002bd4 <_ZN12FrontendHeapD0Ev+0x44>)
90002ba8:	4620      	mov	r0, r4
90002baa:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bae:	f00e fff8 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb2:	4b09      	ldr	r3, [pc, #36]	@ (90002bd8 <_ZN12FrontendHeapD0Ev+0x48>)
90002bb4:	4620      	mov	r0, r4
90002bb6:	f840 3f14 	str.w	r3, [r0, #20]!
90002bba:	f00e fff2 	bl	90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bbe:	4620      	mov	r0, r4
90002bc0:	f44f 7159 	mov.w	r1, #868	@ 0x364
90002bc4:	f028 f974 	bl	9002aeb0 <_ZdlPvj>
90002bc8:	4620      	mov	r0, r4
90002bca:	bd10      	pop	{r4, pc}
90002bcc:	9002e6c4 	.word	0x9002e6c4
90002bd0:	9002e690 	.word	0x9002e690
90002bd4:	9002e65c 	.word	0x9002e65c
90002bd8:	9002e628 	.word	0x9002e628

90002bdc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002be0:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002be2:	2400      	movs	r4, #0
90002be4:	f001 fe34 	bl	90004850 <_ZN14BitmapDatabase11getInstanceEv>
90002be8:	4605      	mov	r5, r0
90002bea:	f001 fe35 	bl	90004858 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002bee:	4623      	mov	r3, r4
90002bf0:	4601      	mov	r1, r0
90002bf2:	4622      	mov	r2, r4
90002bf4:	4628      	mov	r0, r5
90002bf6:	9400      	str	r4, [sp, #0]
90002bf8:	f019 f898 	bl	9001bd2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002bfc:	4b29      	ldr	r3, [pc, #164]	@ (90002ca4 <touchgfx_init+0xc8>)
90002bfe:	4a2a      	ldr	r2, [pc, #168]	@ (90002ca8 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c00:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c02:	4c2a      	ldr	r4, [pc, #168]	@ (90002cac <touchgfx_init+0xd0>)
90002c04:	601a      	str	r2, [r3, #0]
90002c06:	f003 f90b 	bl	90005e20 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c0a:	4b29      	ldr	r3, [pc, #164]	@ (90002cb0 <touchgfx_init+0xd4>)
90002c0c:	4a29      	ldr	r2, [pc, #164]	@ (90002cb4 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c0e:	482a      	ldr	r0, [pc, #168]	@ (90002cb8 <touchgfx_init+0xdc>)
90002c10:	609a      	str	r2, [r3, #8]
90002c12:	f018 fff3 	bl	9001bbfc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c16:	6823      	ldr	r3, [r4, #0]
90002c18:	f3bf 8f5b 	dmb	ish
90002c1c:	07db      	lsls	r3, r3, #31
90002c1e:	d505      	bpl.n	90002c2c <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c20:	4826      	ldr	r0, [pc, #152]	@ (90002cbc <touchgfx_init+0xe0>)
}
90002c22:	b002      	add	sp, #8
90002c24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c28:	f7fe b950 	b.w	90000ecc <_ZN11TouchGFXHAL10initializeEv>
90002c2c:	4620      	mov	r0, r4
90002c2e:	f028 f941 	bl	9002aeb4 <__cxa_guard_acquire>
90002c32:	2800      	cmp	r0, #0
90002c34:	d0f4      	beq.n	90002c20 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c36:	4d22      	ldr	r5, [pc, #136]	@ (90002cc0 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c38:	4b22      	ldr	r3, [pc, #136]	@ (90002cc4 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c3a:	f505 7602 	add.w	r6, r5, #520	@ 0x208
        : presenterStorage(pres),
90002c3e:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c42:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c46:	f505 77f0 	add.w	r7, r5, #480	@ 0x1e0
90002c4a:	602b      	str	r3, [r5, #0]
90002c4c:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002c4e:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c50:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002c54:	f00e ffa6 	bl	90011ba4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c58:	4b1b      	ldr	r3, [pc, #108]	@ (90002cc8 <touchgfx_init+0xec>)
90002c5a:	4640      	mov	r0, r8
90002c5c:	616b      	str	r3, [r5, #20]
90002c5e:	f00e ffa1 	bl	90011ba4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c62:	4b1a      	ldr	r3, [pc, #104]	@ (90002ccc <touchgfx_init+0xf0>)
90002c64:	4638      	mov	r0, r7
90002c66:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c68:	f00e ff9c 	bl	90011ba4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c6c:	4b18      	ldr	r3, [pc, #96]	@ (90002cd0 <touchgfx_init+0xf4>)
90002c6e:	f505 70fe 	add.w	r0, r5, #508	@ 0x1fc
90002c72:	f8c5 31e0 	str.w	r3, [r5, #480]	@ 0x1e0
90002c76:	f003 fa2d 	bl	900060d4 <_ZN5ModelC1Ev>
90002c7a:	462a      	mov	r2, r5
90002c7c:	f505 71fe 	add.w	r1, r5, #508	@ 0x1fc
90002c80:	4630      	mov	r0, r6
90002c82:	f003 f94d 	bl	90005f20 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002c86:	4630      	mov	r0, r6
90002c88:	f002 fa06 	bl	90005098 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002c8c:	4811      	ldr	r0, [pc, #68]	@ (90002cd4 <touchgfx_init+0xf8>)
90002c8e:	f028 fca5 	bl	9002b5dc <atexit>
90002c92:	4620      	mov	r0, r4
90002c94:	f028 f91a 	bl	9002aecc <__cxa_guard_release>
90002c98:	4808      	ldr	r0, [pc, #32]	@ (90002cbc <touchgfx_init+0xe0>)
}
90002c9a:	b002      	add	sp, #8
90002c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002ca0:	f7fe b914 	b.w	90000ecc <_ZN11TouchGFXHAL10initializeEv>
90002ca4:	24021930 	.word	0x24021930
90002ca8:	240060c4 	.word	0x240060c4
90002cac:	24006f18 	.word	0x24006f18
90002cb0:	240060e4 	.word	0x240060e4
90002cb4:	240060c8 	.word	0x240060c8
90002cb8:	24000040 	.word	0x24000040
90002cbc:	24006034 	.word	0x24006034
90002cc0:	24006f1c 	.word	0x24006f1c
90002cc4:	9002e6c4 	.word	0x9002e6c4
90002cc8:	9002e628 	.word	0x9002e628
90002ccc:	9002e65c 	.word	0x9002e65c
90002cd0:	9002e690 	.word	0x9002e690
90002cd4:	90002b49 	.word	0x90002b49

90002cd8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002cd8:	4770      	bx	lr
90002cda:	bf00      	nop

90002cdc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002cdc:	4801      	ldr	r0, [pc, #4]	@ (90002ce4 <touchgfx_taskEntry+0x8>)
90002cde:	f7fe b943 	b.w	90000f68 <_ZN11TouchGFXHAL9taskEntryEv>
90002ce2:	bf00      	nop
90002ce4:	24006034 	.word	0x24006034

90002ce8 <_GLOBAL__sub_I_touchgfx_init>:
}
90002ce8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002cea:	4e2a      	ldr	r6, [pc, #168]	@ (90002d94 <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002cec:	4b2a      	ldr	r3, [pc, #168]	@ (90002d98 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002cee:	4c2b      	ldr	r4, [pc, #172]	@ (90002d9c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002cf0:	4630      	mov	r0, r6
static LCD16bpp display;
90002cf2:	4d2b      	ldr	r5, [pc, #172]	@ (90002da0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002cf4:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002cf6:	f7ff fdd7 	bl	900028a8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002cfa:	4628      	mov	r0, r5
90002cfc:	f01e f926 	bl	90020f4c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d00:	4828      	ldr	r0, [pc, #160]	@ (90002da4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d02:	f016 fcc7 	bl	90019694 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d06:	4b28      	ldr	r3, [pc, #160]	@ (90002da8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d08:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d0a:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d0e:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d12:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d14:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d16:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d18:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d1c:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d1e:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d20:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d24:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d28:	4c20      	ldr	r4, [pc, #128]	@ (90002dac <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d2a:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d2c:	4c20      	ldr	r4, [pc, #128]	@ (90002db0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d2e:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d30:	4c20      	ldr	r4, [pc, #128]	@ (90002db4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d32:	8020      	strh	r0, [r4, #0]
90002d34:	4c20      	ldr	r4, [pc, #128]	@ (90002db8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002d36:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d38:	4c20      	ldr	r4, [pc, #128]	@ (90002dbc <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002d3a:	4821      	ldr	r0, [pc, #132]	@ (90002dc0 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002d3c:	8021      	strh	r1, [r4, #0]
90002d3e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d40:	4820      	ldr	r0, [pc, #128]	@ (90002dc4 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d42:	4921      	ldr	r1, [pc, #132]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d44:	4c21      	ldr	r4, [pc, #132]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002d46:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d4a:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d4e:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d52:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d54:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d58:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d5c:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d60:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d64:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d68:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002d6c:	7002      	strb	r2, [r0, #0]
90002d6e:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002d70:	4917      	ldr	r1, [pc, #92]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002d72:	4818      	ldr	r0, [pc, #96]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002d74:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002d76:	4918      	ldr	r1, [pc, #96]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002d78:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002d7c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002d80:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002d84:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002d88:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d8c:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002d90:	bd70      	pop	{r4, r5, r6, pc}
90002d92:	bf00      	nop
90002d94:	24006170 	.word	0x24006170
90002d98:	9002c748 	.word	0x9002c748
90002d9c:	24006f14 	.word	0x24006f14
90002da0:	240060e4 	.word	0x240060e4
90002da4:	240060c8 	.word	0x240060c8
90002da8:	24006034 	.word	0x24006034
90002dac:	01000001 	.word	0x01000001
90002db0:	240218cc 	.word	0x240218cc
90002db4:	240218c0 	.word	0x240218c0
90002db8:	240218c6 	.word	0x240218c6
90002dbc:	240218c2 	.word	0x240218c2
90002dc0:	240218c8 	.word	0x240218c8
90002dc4:	240218c4 	.word	0x240218c4
90002dc8:	9002e4a8 	.word	0x9002e4a8
90002dcc:	01010000 	.word	0x01010000
90002dd0:	00440400 	.word	0x00440400
90002dd4:	00140016 	.word	0x00140016
90002dd8:	9002c720 	.word	0x9002c720

90002ddc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002ddc:	4801      	ldr	r0, [pc, #4]	@ (90002de4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002dde:	f7ff badd 	b.w	9000239c <_ZN8STM32DMAD1Ev>
90002de2:	bf00      	nop
90002de4:	24006170 	.word	0x24006170

90002de8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002de8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002dec:	b112      	cbz	r2, 90002df4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002dee:	6803      	ldr	r3, [r0, #0]
90002df0:	695b      	ldr	r3, [r3, #20]
90002df2:	4718      	bx	r3
        }
    }
90002df4:	4770      	bx	lr
90002df6:	bf00      	nop

90002df8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002df8:	2000      	movs	r0, #0
90002dfa:	4770      	bx	lr

90002dfc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002dfc:	8081      	strh	r1, [r0, #4]
    }
90002dfe:	4770      	bx	lr

90002e00 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e00:	80c1      	strh	r1, [r0, #6]
    }
90002e02:	4770      	bx	lr

90002e04 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e04:	8101      	strh	r1, [r0, #8]
    }
90002e06:	4770      	bx	lr

90002e08 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e08:	8141      	strh	r1, [r0, #10]
    }
90002e0a:	4770      	bx	lr

90002e0c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e0c:	4770      	bx	lr
90002e0e:	bf00      	nop

90002e10 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e10:	4770      	bx	lr
90002e12:	bf00      	nop

90002e14 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e14:	4770      	bx	lr
90002e16:	bf00      	nop

90002e18 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e18:	4770      	bx	lr
90002e1a:	bf00      	nop

90002e1c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e1c:	4770      	bx	lr
90002e1e:	bf00      	nop

90002e20 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e20:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e24:	6803      	ldr	r3, [r0, #0]
90002e26:	eba2 020c 	sub.w	r2, r2, ip
90002e2a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e2e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e30:	eba1 010c 	sub.w	r1, r1, ip
90002e34:	b212      	sxth	r2, r2
90002e36:	b209      	sxth	r1, r1
90002e38:	4718      	bx	r3
90002e3a:	bf00      	nop

90002e3c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e3c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e3e:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e42:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e46:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e4a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e4e:	6010      	str	r0, [r2, #0]
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e54:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e58:	b11a      	cbz	r2, 90002e62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e5a:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e5e:	b102      	cbz	r2, 90002e62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e60:	6018      	str	r0, [r3, #0]
        }
    }
90002e62:	4770      	bx	lr

90002e64 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e64:	2000      	movs	r0, #0
90002e66:	4770      	bx	lr

90002e68 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e68:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e6a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002e6c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002e6e:	809a      	strh	r2, [r3, #4]
    }
90002e70:	4770      	bx	lr
90002e72:	bf00      	nop

90002e74 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002e74:	4770      	bx	lr
90002e76:	bf00      	nop

90002e78 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002e78:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002e7c:	4770      	bx	lr
90002e7e:	bf00      	nop

90002e80 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002e80:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002e88:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002e8c:	688a      	ldr	r2, [r1, #8]
90002e8e:	f8c0 c000 	str.w	ip, [r0]
90002e92:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002e98:	2200      	movs	r2, #0
90002e9a:	6002      	str	r2, [r0, #0]
90002e9c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002e9e:	4770      	bx	lr

90002ea0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ea0:	2000      	movs	r0, #0
90002ea2:	4770      	bx	lr

90002ea4 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ea4:	7701      	strb	r1, [r0, #28]
    }
90002ea6:	4770      	bx	lr

90002ea8 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002ea8:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002eac:	4770      	bx	lr
90002eae:	bf00      	nop

90002eb0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002eb0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002eb8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ebc:	4770      	bx	lr
90002ebe:	bf00      	nop

90002ec0 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ec0:	2001      	movs	r0, #1
90002ec2:	4770      	bx	lr

90002ec4 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002ec4:	3098      	adds	r0, #152	@ 0x98
90002ec6:	4770      	bx	lr

90002ec8 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002ec8:	308c      	adds	r0, #140	@ 0x8c
90002eca:	4770      	bx	lr

90002ecc <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002ecc:	3084      	adds	r0, #132	@ 0x84
90002ece:	4770      	bx	lr

90002ed0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002ed0:	4770      	bx	lr
90002ed2:	bf00      	nop

90002ed4 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ed4:	4770      	bx	lr
90002ed6:	bf00      	nop

90002ed8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002ed8:	4770      	bx	lr
90002eda:	bf00      	nop

90002edc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002edc:	4b03      	ldr	r3, [pc, #12]	@ (90002eec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002ede:	2290      	movs	r2, #144	@ 0x90
90002ee0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002ee4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop
90002eec:	e000e100 	.word	0xe000e100

90002ef0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002ef0:	4a09      	ldr	r2, [pc, #36]	@ (90002f18 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002ef2:	490a      	ldr	r1, [pc, #40]	@ (90002f1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002ef4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002ef6:	480a      	ldr	r0, [pc, #40]	@ (90002f20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002ef8:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002efc:	3b01      	subs	r3, #1
90002efe:	b29b      	uxth	r3, r3
90002f00:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f02:	6911      	ldr	r1, [r2, #16]
90002f04:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f08:	3901      	subs	r1, #1
90002f0a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f0c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f0e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f10:	f043 0301 	orr.w	r3, r3, #1
90002f14:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f16:	4770      	bx	lr
90002f18:	50001000 	.word	0x50001000
90002f1c:	24007282 	.word	0x24007282
90002f20:	24007280 	.word	0x24007280

90002f24 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f24:	4b01      	ldr	r3, [pc, #4]	@ (90002f2c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f26:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f2a:	4770      	bx	lr
90002f2c:	50001000 	.word	0x50001000

90002f30 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f30:	4b02      	ldr	r3, [pc, #8]	@ (90002f3c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f32:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f34:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f38:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f3a:	4770      	bx	lr
90002f3c:	50001000 	.word	0x50001000

90002f40 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f40:	4770      	bx	lr
90002f42:	bf00      	nop

90002f44 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f44:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f48:	2300      	movs	r3, #0
90002f4a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f4e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f52:	4770      	bx	lr

90002f54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f54:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f58:	4770      	bx	lr
90002f5a:	bf00      	nop

90002f5c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f5c:	b510      	push	{r4, lr}
90002f5e:	4604      	mov	r4, r0
90002f60:	2130      	movs	r1, #48	@ 0x30
90002f62:	f027 ffa5 	bl	9002aeb0 <_ZdlPvj>
90002f66:	4620      	mov	r0, r4
90002f68:	bd10      	pop	{r4, pc}
90002f6a:	bf00      	nop

90002f6c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f6c:	b510      	push	{r4, lr}
90002f6e:	4604      	mov	r4, r0
90002f70:	212c      	movs	r1, #44	@ 0x2c
90002f72:	f027 ff9d 	bl	9002aeb0 <_ZdlPvj>
90002f76:	4620      	mov	r0, r4
90002f78:	bd10      	pop	{r4, pc}
90002f7a:	bf00      	nop

90002f7c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f7c:	b510      	push	{r4, lr}
90002f7e:	4604      	mov	r4, r0
90002f80:	21bc      	movs	r1, #188	@ 0xbc
90002f82:	f027 ff95 	bl	9002aeb0 <_ZdlPvj>
90002f86:	4620      	mov	r0, r4
90002f88:	bd10      	pop	{r4, pc}
90002f8a:	bf00      	nop

90002f8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002f8c:	b911      	cbnz	r1, 90002f94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002f8e:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002f92:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002f94:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f96:	4a03      	ldr	r2, [pc, #12]	@ (90002fa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002f98:	f44f 7192 	mov.w	r1, #292	@ 0x124
90002f9c:	4b02      	ldr	r3, [pc, #8]	@ (90002fa8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002f9e:	4803      	ldr	r0, [pc, #12]	@ (90002fac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fa0:	f028 fafe 	bl	9002b5a0 <__assert_func>
90002fa4:	9002cdfc 	.word	0x9002cdfc
90002fa8:	9002cde8 	.word	0x9002cde8
90002fac:	9002cf18 	.word	0x9002cf18

90002fb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fb0:	b921      	cbnz	r1, 90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fb2:	6840      	ldr	r0, [r0, #4]
90002fb4:	4611      	mov	r1, r2
90002fb6:	6803      	ldr	r3, [r0, #0]
90002fb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fba:	4718      	bx	r3
        assert(handle < no_streams);
90002fbc:	4b03      	ldr	r3, [pc, #12]	@ (90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002fbe:	f44f 718f 	mov.w	r1, #286	@ 0x11e
90002fc2:	4a03      	ldr	r2, [pc, #12]	@ (90002fd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002fc4:	4803      	ldr	r0, [pc, #12]	@ (90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002fc6:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002fc8:	f028 faea 	bl	9002b5a0 <__assert_func>
90002fcc:	9002cde8 	.word	0x9002cde8
90002fd0:	9002cf60 	.word	0x9002cf60
90002fd4:	9002cf18 	.word	0x9002cf18

90002fd8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002fd8:	b909      	cbnz	r1, 90002fde <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002fda:	68c0      	ldr	r0, [r0, #12]
90002fdc:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002fde:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fe0:	4a03      	ldr	r2, [pc, #12]	@ (90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002fe2:	f44f 718b 	mov.w	r1, #278	@ 0x116
90002fe6:	4b03      	ldr	r3, [pc, #12]	@ (90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002fe8:	4803      	ldr	r0, [pc, #12]	@ (90002ff8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90002fea:	f028 fad9 	bl	9002b5a0 <__assert_func>
90002fee:	bf00      	nop
90002ff0:	9002d0a0 	.word	0x9002d0a0
90002ff4:	9002cde8 	.word	0x9002cde8
90002ff8:	9002cf18 	.word	0x9002cf18

90002ffc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002ffc:	b921      	cbnz	r1, 90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90002ffe:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003000:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003002:	e9c0 3205 	strd	r3, r2, [r0, #20]
90003006:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003008:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000300a:	4a03      	ldr	r2, [pc, #12]	@ (90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000300c:	2141      	movs	r1, #65	@ 0x41
9000300e:	4b03      	ldr	r3, [pc, #12]	@ (9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003010:	4803      	ldr	r0, [pc, #12]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003012:	f028 fac5 	bl	9002b5a0 <__assert_func>
90003016:	bf00      	nop
90003018:	9002d1e8 	.word	0x9002d1e8
9000301c:	9002cde8 	.word	0x9002cde8
90003020:	9002cf18 	.word	0x9002cf18

90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003024:	b508      	push	{r3, lr}
90003026:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003028:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
9000302c:	b940      	cbnz	r0, 90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
9000302e:	2201      	movs	r2, #1
90003030:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003034:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003038:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
9000303c:	6308      	str	r0, [r1, #48]	@ 0x30
    }
9000303e:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003040:	4b03      	ldr	r3, [pc, #12]	@ (90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003042:	f240 116d 	movw	r1, #365	@ 0x16d
90003046:	4a03      	ldr	r2, [pc, #12]	@ (90003054 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003048:	4803      	ldr	r0, [pc, #12]	@ (90003058 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000304a:	f028 faa9 	bl	9002b5a0 <__assert_func>
9000304e:	bf00      	nop
90003050:	9002d334 	.word	0x9002d334
90003054:	9002d364 	.word	0x9002d364
90003058:	9002cf18 	.word	0x9002cf18

9000305c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000305c:	f00f b886 	b.w	9001216c <_ZN8touchgfx3HAL10beginFrameEv>

90003060 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003060:	f00f b890 	b.w	90012184 <_ZN8touchgfx3HAL8endFrameEv>

90003064 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003064:	f00f b84c 	b.w	90012100 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003068 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003068:	f00f b9bb 	b.w	900123e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

9000306c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000306c:	4814      	ldr	r0, [pc, #80]	@ (900030c0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000306e:	6943      	ldr	r3, [r0, #20]
90003070:	03d9      	lsls	r1, r3, #15
90003072:	d523      	bpl.n	900030bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003074:	2300      	movs	r3, #0
{
90003076:	b510      	push	{r4, lr}
90003078:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000307c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003080:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003084:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003088:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000308c:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003090:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003094:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003098:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000309a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000309e:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030a0:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030a4:	1c5a      	adds	r2, r3, #1
900030a6:	d1f8      	bne.n	9000309a <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030a8:	f1ac 0c20 	sub.w	ip, ip, #32
900030ac:	f11c 0f20 	cmn.w	ip, #32
900030b0:	d1f0      	bne.n	90003094 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030b6:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030ba:	bd10      	pop	{r4, pc}
900030bc:	4770      	bx	lr
900030be:	bf00      	nop
900030c0:	e000ed00 	.word	0xe000ed00

900030c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030c4:	b5f0      	push	{r4, r5, r6, r7, lr}
900030c6:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030c8:	bb59      	cbnz	r1, 90003122 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
900030ca:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
900030cc:	6840      	ldr	r0, [r0, #4]
900030ce:	461d      	mov	r5, r3
900030d0:	4616      	mov	r6, r2
900030d2:	6803      	ldr	r3, [r0, #0]
900030d4:	691b      	ldr	r3, [r3, #16]
900030d6:	4798      	blx	r3
900030d8:	b908      	cbnz	r0, 900030de <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
900030da:	b003      	add	sp, #12
900030dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
900030de:	4f14      	ldr	r7, [pc, #80]	@ (90003130 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030e0:	2101      	movs	r1, #1
900030e2:	6838      	ldr	r0, [r7, #0]
900030e4:	f00f fe52 	bl	90012d8c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
900030e8:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030ea:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
900030ec:	4668      	mov	r0, sp
900030ee:	f016 fab7 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
900030f2:	4668      	mov	r0, sp
900030f4:	f014 fe82 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
900030f8:	4b0e      	ldr	r3, [pc, #56]	@ (90003134 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
900030fa:	6860      	ldr	r0, [r4, #4]
900030fc:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
900030fe:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003102:	881b      	ldrh	r3, [r3, #0]
90003104:	f9bd 2000 	ldrsh.w	r2, [sp]
90003108:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000310c:	6804      	ldr	r4, [r0, #0]
9000310e:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003112:	69e4      	ldr	r4, [r4, #28]
90003114:	47a0      	blx	r4
90003116:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003118:	6803      	ldr	r3, [r0, #0]
9000311a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000311c:	4798      	blx	r3
    }
9000311e:	b003      	add	sp, #12
90003120:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
90003122:	4b05      	ldr	r3, [pc, #20]	@ (90003138 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003124:	21ea      	movs	r1, #234	@ 0xea
90003126:	4a05      	ldr	r2, [pc, #20]	@ (9000313c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
90003128:	4805      	ldr	r0, [pc, #20]	@ (90003140 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
9000312a:	f028 fa39 	bl	9002b5a0 <__assert_func>
9000312e:	bf00      	nop
90003130:	240218cc 	.word	0x240218cc
90003134:	240218c6 	.word	0x240218c6
90003138:	9002cde8 	.word	0x9002cde8
9000313c:	9002d47c 	.word	0x9002d47c
90003140:	9002cf18 	.word	0x9002cf18

90003144 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003144:	4b08      	ldr	r3, [pc, #32]	@ (90003168 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003146:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000314a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000314e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003152:	f3bf 8f6f 	isb	sy
90003156:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000315a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000315e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003162:	f3bf 8f6f 	isb	sy
}
90003166:	4770      	bx	lr
90003168:	e000e100 	.word	0xe000e100

9000316c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000316c:	4b03      	ldr	r3, [pc, #12]	@ (9000317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000316e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003172:	609a      	str	r2, [r3, #8]
90003174:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003178:	609a      	str	r2, [r3, #8]
}
9000317a:	4770      	bx	lr
9000317c:	e000e100 	.word	0xe000e100

90003180 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90003180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
90003184:	2900      	cmp	r1, #0
90003186:	f040 8096 	bne.w	900032b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
9000318a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000318e:	4604      	mov	r4, r0
90003190:	b933      	cbnz	r3, 900031a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
90003192:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
90003196:	b91b      	cbnz	r3, 900031a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
90003198:	2501      	movs	r5, #1
    }
9000319a:	4628      	mov	r0, r5
9000319c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031a0:	4b48      	ldr	r3, [pc, #288]	@ (900032c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031a2:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031a4:	6921      	ldr	r1, [r4, #16]
900031a6:	681b      	ldr	r3, [r3, #0]
900031a8:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031ac:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031b0:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031b2:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031b6:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031b8:	b979      	cbnz	r1, 900031da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ba:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031bc:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031be:	6961      	ldr	r1, [r4, #20]
900031c0:	fb01 f303 	mul.w	r3, r1, r3
900031c4:	69a1      	ldr	r1, [r4, #24]
900031c6:	fb01 f202 	mul.w	r2, r1, r2
900031ca:	4293      	cmp	r3, r2
900031cc:	d824      	bhi.n	90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
900031ce:	2300      	movs	r3, #0
    }
900031d0:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
900031d2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
900031d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
900031da:	6813      	ldr	r3, [r2, #0]
900031dc:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
900031de:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
900031e0:	695b      	ldr	r3, [r3, #20]
900031e2:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
900031e4:	69e1      	ldr	r1, [r4, #28]
900031e6:	bb21      	cbnz	r1, 90003232 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
900031e8:	6a23      	ldr	r3, [r4, #32]
900031ea:	2b00      	cmp	r3, #0
900031ec:	d142      	bne.n	90003274 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
900031ee:	4f36      	ldr	r7, [pc, #216]	@ (900032c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
900031f0:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
900031f4:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
900031f6:	2d00      	cmp	r5, #0
900031f8:	d02c      	beq.n	90003254 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
900031fa:	699b      	ldr	r3, [r3, #24]
900031fc:	4630      	mov	r0, r6
900031fe:	4798      	blx	r3
90003200:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003202:	6833      	ldr	r3, [r6, #0]
90003204:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003206:	42bb      	cmp	r3, r7
90003208:	d145      	bne.n	90003296 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000320a:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
9000320c:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000320e:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003210:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003212:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003214:	60a2      	str	r2, [r4, #8]
90003216:	e7d2      	b.n	900031be <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003218:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
9000321c:	b138      	cbz	r0, 9000322e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000321e:	1a9b      	subs	r3, r3, r2
90003220:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003224:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003226:	bf98      	it	ls
90003228:	f102 32ff 	addls.w	r2, r2, #4294967295
9000322c:	6222      	str	r2, [r4, #32]
            return true;
9000322e:	2301      	movs	r3, #1
90003230:	e7ce      	b.n	900031d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003232:	6833      	ldr	r3, [r6, #0]
90003234:	4630      	mov	r0, r6
90003236:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003238:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000323a:	6833      	ldr	r3, [r6, #0]
9000323c:	69e5      	ldr	r5, [r4, #28]
9000323e:	4630      	mov	r0, r6
90003240:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003242:	4798      	blx	r3
90003244:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003246:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003248:	bf28      	it	cs
9000324a:	2500      	movcs	r5, #0
9000324c:	4f1e      	ldr	r7, [pc, #120]	@ (900032c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000324e:	bf38      	it	cc
90003250:	2501      	movcc	r5, #1
90003252:	e7d6      	b.n	90003202 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003254:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003256:	42ba      	cmp	r2, r7
90003258:	d124      	bne.n	900032a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000325a:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000325e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003260:	4630      	mov	r0, r6
90003262:	4798      	blx	r3
90003264:	4580      	cmp	r8, r0
90003266:	d219      	bcs.n	9000329c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
90003268:	6833      	ldr	r3, [r6, #0]
9000326a:	4630      	mov	r0, r6
9000326c:	699b      	ldr	r3, [r3, #24]
9000326e:	4798      	blx	r3
90003270:	4605      	mov	r5, r0
90003272:	e7c6      	b.n	90003202 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
90003274:	6832      	ldr	r2, [r6, #0]
90003276:	4f14      	ldr	r7, [pc, #80]	@ (900032c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003278:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
9000327c:	42ba      	cmp	r2, r7
9000327e:	d116      	bne.n	900032ae <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
90003280:	6970      	ldr	r0, [r6, #20]
90003282:	18c1      	adds	r1, r0, r3
90003284:	4630      	mov	r0, r6
90003286:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003288:	6a22      	ldr	r2, [r4, #32]
9000328a:	68a3      	ldr	r3, [r4, #8]
9000328c:	4413      	add	r3, r2
                        stream.skip_frames = 0;
9000328e:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
90003290:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
90003292:	6222      	str	r2, [r4, #32]
90003294:	e7ac      	b.n	900031f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003296:	4630      	mov	r0, r6
90003298:	4798      	blx	r3
9000329a:	e7b7      	b.n	9000320c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
9000329c:	2300      	movs	r3, #0
9000329e:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032a2:	e7ae      	b.n	90003202 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032a4:	4630      	mov	r0, r6
900032a6:	4790      	blx	r2
900032a8:	6833      	ldr	r3, [r6, #0]
900032aa:	4680      	mov	r8, r0
900032ac:	e7d7      	b.n	9000325e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ae:	4630      	mov	r0, r6
900032b0:	4790      	blx	r2
900032b2:	6a23      	ldr	r3, [r4, #32]
900032b4:	e7e5      	b.n	90003282 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032b6:	4b05      	ldr	r3, [pc, #20]	@ (900032cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032b8:	21aa      	movs	r1, #170	@ 0xaa
900032ba:	4a05      	ldr	r2, [pc, #20]	@ (900032d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032bc:	4805      	ldr	r0, [pc, #20]	@ (900032d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032be:	f028 f96f 	bl	9002b5a0 <__assert_func>
900032c2:	bf00      	nop
900032c4:	240218cc 	.word	0x240218cc
900032c8:	90000fed 	.word	0x90000fed
900032cc:	9002cde8 	.word	0x9002cde8
900032d0:	9002d5c4 	.word	0x9002d5c4
900032d4:	9002cf18 	.word	0x9002cf18

900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900032d8:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032da:	bb11      	cbnz	r1, 90003322 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
900032dc:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
900032de:	6840      	ldr	r0, [r0, #4]
900032e0:	4611      	mov	r1, r2
900032e2:	461a      	mov	r2, r3
900032e4:	6803      	ldr	r3, [r0, #0]
900032e6:	689b      	ldr	r3, [r3, #8]
900032e8:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032ea:	6860      	ldr	r0, [r4, #4]
900032ec:	4a10      	ldr	r2, [pc, #64]	@ (90003330 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
900032ee:	6803      	ldr	r3, [r0, #0]
900032f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900032f2:	4293      	cmp	r3, r2
900032f4:	d10c      	bne.n	90003310 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
900032f6:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900032f8:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900032fa:	2300      	movs	r3, #0
900032fc:	4a0d      	ldr	r2, [pc, #52]	@ (90003334 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
900032fe:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003300:	60e0      	str	r0, [r4, #12]
90003302:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003304:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003308:	d104      	bne.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000330a:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000330e:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003310:	4798      	blx	r3
90003312:	e7f1      	b.n	900032f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003314:	4620      	mov	r0, r4
90003316:	46ac      	mov	ip, r5
90003318:	2201      	movs	r2, #1
9000331a:	4619      	mov	r1, r3
    }
9000331c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003320:	4760      	bx	ip
        assert(handle < no_streams);
90003322:	4b05      	ldr	r3, [pc, #20]	@ (90003338 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003324:	214f      	movs	r1, #79	@ 0x4f
90003326:	4a05      	ldr	r2, [pc, #20]	@ (9000333c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003328:	4805      	ldr	r0, [pc, #20]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000332a:	f028 f939 	bl	9002b5a0 <__assert_func>
9000332e:	bf00      	nop
90003330:	90000fed 	.word	0x90000fed
90003334:	900033ad 	.word	0x900033ad
90003338:	9002cde8 	.word	0x9002cde8
9000333c:	9002d6f8 	.word	0x9002d6f8
90003340:	9002cf18 	.word	0x9002cf18

90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003344:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003346:	bb09      	cbnz	r1, 9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003348:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000334a:	6840      	ldr	r0, [r0, #4]
9000334c:	4611      	mov	r1, r2
9000334e:	6803      	ldr	r3, [r0, #0]
90003350:	68db      	ldr	r3, [r3, #12]
90003352:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003354:	6860      	ldr	r0, [r4, #4]
90003356:	4a10      	ldr	r2, [pc, #64]	@ (90003398 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003358:	6803      	ldr	r3, [r0, #0]
9000335a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000335c:	4293      	cmp	r3, r2
9000335e:	d10c      	bne.n	9000337a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
90003360:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003362:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003364:	2300      	movs	r3, #0
90003366:	4a0d      	ldr	r2, [pc, #52]	@ (9000339c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
90003368:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000336a:	60e0      	str	r0, [r4, #12]
9000336c:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000336e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003372:	d104      	bne.n	9000337e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
90003374:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003378:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000337a:	4798      	blx	r3
9000337c:	e7f1      	b.n	90003362 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
9000337e:	4620      	mov	r0, r4
90003380:	46ac      	mov	ip, r5
90003382:	2201      	movs	r2, #1
90003384:	4619      	mov	r1, r3
    }
90003386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
9000338a:	4760      	bx	ip
        assert(handle < no_streams);
9000338c:	4b04      	ldr	r3, [pc, #16]	@ (900033a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
9000338e:	215f      	movs	r1, #95	@ 0x5f
90003390:	4a04      	ldr	r2, [pc, #16]	@ (900033a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
90003392:	4805      	ldr	r0, [pc, #20]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
90003394:	f028 f904 	bl	9002b5a0 <__assert_func>
90003398:	90000fed 	.word	0x90000fed
9000339c:	900033ad 	.word	0x900033ad
900033a0:	9002cde8 	.word	0x9002cde8
900033a4:	9002d864 	.word	0x9002d864
900033a8:	9002cf18 	.word	0x9002cf18

900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033ac:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033ae:	2900      	cmp	r1, #0
900033b0:	d14f      	bne.n	90003452 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033b2:	4604      	mov	r4, r0
        switch (cmd)
900033b4:	2a05      	cmp	r2, #5
900033b6:	d80b      	bhi.n	900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033b8:	e8df f002 	tbb	[pc, r2]
900033bc:	3c373311 	.word	0x3c373311
900033c0:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033c2:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033c4:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033c6:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033ca:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
900033cc:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
900033ce:	6103      	str	r3, [r0, #16]
    }
900033d0:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
900033d2:	3b00      	subs	r3, #0
900033d4:	bf18      	it	ne
900033d6:	2301      	movne	r3, #1
900033d8:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
900033dc:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
900033de:	6840      	ldr	r0, [r0, #4]
900033e0:	6803      	ldr	r3, [r0, #0]
900033e2:	691b      	ldr	r3, [r3, #16]
900033e4:	4798      	blx	r3
900033e6:	2800      	cmp	r0, #0
900033e8:	d0f2      	beq.n	900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
900033ea:	2300      	movs	r3, #0
                stream.isPlaying = true;
900033ec:	2101      	movs	r1, #1
                if (!stream.repeat)
900033ee:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
900033f2:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
900033f6:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
900033f8:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
900033fa:	2a00      	cmp	r2, #0
900033fc:	d1e8      	bne.n	900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033fe:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003400:	4917      	ldr	r1, [pc, #92]	@ (90003460 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003402:	6823      	ldr	r3, [r4, #0]
90003404:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003406:	428a      	cmp	r2, r1
90003408:	d11e      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000340a:	6965      	ldr	r5, [r4, #20]
9000340c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000340e:	4620      	mov	r0, r4
90003410:	4798      	blx	r3
90003412:	4285      	cmp	r5, r0
90003414:	d1dc      	bne.n	900033d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003416:	6823      	ldr	r3, [r4, #0]
90003418:	4620      	mov	r0, r4
9000341a:	699b      	ldr	r3, [r3, #24]
    }
9000341c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003420:	4718      	bx	r3
            stream.isPlaying = false;
90003422:	2300      	movs	r3, #0
90003424:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003428:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000342a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000342c:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000342e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003430:	6102      	str	r2, [r0, #16]
    }
90003432:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003434:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003436:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003438:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000343a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000343e:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003442:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003444:	6102      	str	r2, [r0, #16]
    }
90003446:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003448:	4620      	mov	r0, r4
9000344a:	4790      	blx	r2
9000344c:	6823      	ldr	r3, [r4, #0]
9000344e:	4605      	mov	r5, r0
90003450:	e7dc      	b.n	9000340c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003452:	4b04      	ldr	r3, [pc, #16]	@ (90003464 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003454:	216f      	movs	r1, #111	@ 0x6f
90003456:	4a04      	ldr	r2, [pc, #16]	@ (90003468 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003458:	4804      	ldr	r0, [pc, #16]	@ (9000346c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000345a:	f028 f8a1 	bl	9002b5a0 <__assert_func>
9000345e:	bf00      	nop
90003460:	90000fed 	.word	0x90000fed
90003464:	9002cde8 	.word	0x9002cde8
90003468:	9002d99c 	.word	0x9002d99c
9000346c:	9002cf18 	.word	0x9002cf18

90003470 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90003470:	b538      	push	{r3, r4, r5, lr}
90003472:	4604      	mov	r4, r0
    HAL::initialize();
90003474:	f00e fe93 	bl	9001219e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90003478:	6823      	ldr	r3, [r4, #0]
9000347a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
9000347c:	f014 fe74 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90003480:	4601      	mov	r1, r0
90003482:	4620      	mov	r0, r4
90003484:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003486:	6823      	ldr	r3, [r4, #0]
90003488:	4a13      	ldr	r2, [pc, #76]	@ (900034d8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
9000348a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
9000348e:	4295      	cmp	r5, r2
90003490:	d116      	bne.n	900034c0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003492:	4a12      	ldr	r2, [pc, #72]	@ (900034dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003494:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90003496:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000349a:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000349e:	4810      	ldr	r0, [pc, #64]	@ (900034e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034a0:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034a4:	4a0f      	ldr	r2, [pc, #60]	@ (900034e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034a6:	7005      	strb	r5, [r0, #0]
900034a8:	4293      	cmp	r3, r2
900034aa:	d110      	bne.n	900034ce <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034ac:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ae:	4a0e      	ldr	r2, [pc, #56]	@ (900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034b0:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034b2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034b4:	4b0d      	ldr	r3, [pc, #52]	@ (900034ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034b6:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034b8:	4a0d      	ldr	r2, [pc, #52]	@ (900034f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034ba:	6459      	str	r1, [r3, #68]	@ 0x44
900034bc:	6053      	str	r3, [r2, #4]
}
900034be:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034c0:	4a0c      	ldr	r2, [pc, #48]	@ (900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034c2:	2300      	movs	r3, #0
900034c4:	4620      	mov	r0, r4
900034c6:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034ca:	47a8      	blx	r5
900034cc:	e7f2      	b.n	900034b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900034ce:	2100      	movs	r1, #0
900034d0:	4620      	mov	r0, r4
900034d2:	4798      	blx	r3
900034d4:	e7ee      	b.n	900034b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900034d6:	bf00      	nop
900034d8:	90000f11 	.word	0x90000f11
900034dc:	d003fc00 	.word	0xd003fc00
900034e0:	240218ca 	.word	0x240218ca
900034e4:	90000d41 	.word	0x90000d41
900034e8:	240218cb 	.word	0x240218cb
900034ec:	24007374 	.word	0x24007374
900034f0:	24007344 	.word	0x24007344
900034f4:	d007f800 	.word	0xd007f800

900034f8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
900034f8:	4843      	ldr	r0, [pc, #268]	@ (90003608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
900034fa:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
900034fc:	6804      	ldr	r4, [r0, #0]
900034fe:	f3bf 8f5b 	dmb	ish
90003502:	f014 0401 	ands.w	r4, r4, #1
90003506:	d001      	beq.n	9000350c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003508:	4840      	ldr	r0, [pc, #256]	@ (9000360c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000350a:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
9000350c:	f027 fcd2 	bl	9002aeb4 <__cxa_guard_acquire>
90003510:	2800      	cmp	r0, #0
90003512:	d0f9      	beq.n	90003508 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003514:	4d3d      	ldr	r5, [pc, #244]	@ (9000360c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003516:	4b3e      	ldr	r3, [pc, #248]	@ (90003610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003518:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000351c:	612c      	str	r4, [r5, #16]
9000351e:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003522:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003526:	4e3b      	ldr	r6, [pc, #236]	@ (90003614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
90003528:	e9c5 3400 	strd	r3, r4, [r5]
9000352c:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003530:	f016 fb95 	bl	90019c5e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003534:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003538:	f011 f9de 	bl	900148f8 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000353c:	4b36      	ldr	r3, [pc, #216]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000353e:	4a37      	ldr	r2, [pc, #220]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003540:	602b      	str	r3, [r5, #0]
90003542:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
90003544:	4936      	ldr	r1, [pc, #216]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
90003546:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
9000354a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000354e:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003552:	65a9      	str	r1, [r5, #88]	@ 0x58
90003554:	b192      	cbz	r2, 9000357c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003556:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003558:	2800      	cmp	r0, #0
9000355a:	d040      	beq.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
9000355c:	6803      	ldr	r3, [r0, #0]
9000355e:	4c31      	ldr	r4, [pc, #196]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
90003560:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003562:	42a2      	cmp	r2, r4
90003564:	d017      	beq.n	90003596 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003566:	4790      	blx	r2
        return auxiliaryLCD;
90003568:	6833      	ldr	r3, [r6, #0]
9000356a:	fab0 f680 	clz	r6, r0
9000356e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003570:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90003572:	2800      	cmp	r0, #0
90003574:	d03f      	beq.n	900035f6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003576:	6803      	ldr	r3, [r0, #0]
90003578:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000357a:	e00a      	b.n	90003592 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
9000357c:	6898      	ldr	r0, [r3, #8]
9000357e:	4c29      	ldr	r4, [pc, #164]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003580:	6802      	ldr	r2, [r0, #0]
90003582:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90003584:	42a2      	cmp	r2, r4
90003586:	d1ee      	bne.n	90003566 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003588:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000358a:	b120      	cbz	r0, 90003596 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000358c:	6803      	ldr	r3, [r0, #0]
9000358e:	2601      	movs	r6, #1
90003590:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003592:	42a3      	cmp	r3, r4
90003594:	d12a      	bne.n	900035ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90003596:	4924      	ldr	r1, [pc, #144]	@ (90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90003598:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
9000359a:	2300      	movs	r3, #0
9000359c:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
900035a0:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
900035a4:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035a8:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ac:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035b0:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035b4:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035b8:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
900035bc:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035c0:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
900035c4:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035c8:	4a18      	ldr	r2, [pc, #96]	@ (9000362c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035ca:	4819      	ldr	r0, [pc, #100]	@ (90003630 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
900035cc:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
900035d0:	f028 f804 	bl	9002b5dc <atexit>
900035d4:	480c      	ldr	r0, [pc, #48]	@ (90003608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
900035d6:	f027 fc79 	bl	9002aecc <__cxa_guard_release>
}
900035da:	480c      	ldr	r0, [pc, #48]	@ (9000360c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
900035dc:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900035de:	6898      	ldr	r0, [r3, #8]
900035e0:	4c10      	ldr	r4, [pc, #64]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035e2:	6803      	ldr	r3, [r0, #0]
900035e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035e6:	42a2      	cmp	r2, r4
900035e8:	d0d5      	beq.n	90003596 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035ea:	e7bc      	b.n	90003566 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ec:	4798      	blx	r3
900035ee:	2800      	cmp	r0, #0
900035f0:	bf08      	it	eq
900035f2:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900035f6:	2e00      	cmp	r6, #0
900035f8:	d1cd      	bne.n	90003596 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035fa:	4b0e      	ldr	r3, [pc, #56]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
900035fc:	212c      	movs	r1, #44	@ 0x2c
900035fe:	4a0e      	ldr	r2, [pc, #56]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003600:	480e      	ldr	r0, [pc, #56]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
90003602:	f027 ffcd 	bl	9002b5a0 <__assert_func>
90003606:	bf00      	nop
90003608:	24007284 	.word	0x24007284
9000360c:	24007288 	.word	0x24007288
90003610:	9002f54c 	.word	0x9002f54c
90003614:	240218cc 	.word	0x240218cc
90003618:	9002e770 	.word	0x9002e770
9000361c:	9002e6d8 	.word	0x9002e6d8
90003620:	9002e6f8 	.word	0x9002e6f8
90003624:	90002ea1 	.word	0x90002ea1
90003628:	9002f500 	.word	0x9002f500
9000362c:	9002f4e0 	.word	0x9002f4e0
90003630:	90002ed9 	.word	0x90002ed9
90003634:	9002db00 	.word	0x9002db00
90003638:	9002db60 	.word	0x9002db60
9000363c:	9002db9c 	.word	0x9002db9c

90003640 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003640:	b538      	push	{r3, r4, r5, lr}
        return instance;
90003642:	4c18      	ldr	r4, [pc, #96]	@ (900036a4 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
90003644:	6823      	ldr	r3, [r4, #0]
90003646:	b35b      	cbz	r3, 900036a0 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003648:	4b17      	ldr	r3, [pc, #92]	@ (900036a8 <HAL_LTDC_LineEventCallback+0x68>)
9000364a:	4a18      	ldr	r2, [pc, #96]	@ (900036ac <HAL_LTDC_LineEventCallback+0x6c>)
9000364c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000364e:	8811      	ldrh	r1, [r2, #0]
90003650:	428b      	cmp	r3, r1
90003652:	d00e      	beq.n	90003672 <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003654:	f007 fad8 	bl	9000ac08 <HAL_LTDC_ProgramLineEvent>
90003658:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
9000365a:	6823      	ldr	r3, [r4, #0]
9000365c:	4620      	mov	r0, r4
9000365e:	6a1b      	ldr	r3, [r3, #32]
90003660:	4798      	blx	r3
        isFrontPorchEntered = true;
90003662:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003664:	2000      	movs	r0, #0
90003666:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
9000366a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000366e:	f7fd bb2f 	b.w	90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90003672:	4b0f      	ldr	r3, [pc, #60]	@ (900036b0 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
90003674:	2500      	movs	r5, #0
90003676:	8819      	ldrh	r1, [r3, #0]
90003678:	f007 fac6 	bl	9000ac08 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000367c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
9000367e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
90003682:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
90003686:	3201      	adds	r2, #1
90003688:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
9000368c:	f7fe fe5e 	bl	9000234c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003690:	6820      	ldr	r0, [r4, #0]
90003692:	f00f fb1b 	bl	90012ccc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90003696:	4628      	mov	r0, r5
    }
90003698:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000369c:	f7fd bafc 	b.w	90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036a0:	bd38      	pop	{r3, r4, r5, pc}
900036a2:	bf00      	nop
900036a4:	240218cc 	.word	0x240218cc
900036a8:	50001000 	.word	0x50001000
900036ac:	24007282 	.word	0x24007282
900036b0:	24007280 	.word	0x24007280

900036b4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036b4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036b6:	480b      	ldr	r0, [pc, #44]	@ (900036e4 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036b8:	f7fd fe0e 	bl	900012d8 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036bc:	4c0a      	ldr	r4, [pc, #40]	@ (900036e8 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036be:	4b0b      	ldr	r3, [pc, #44]	@ (900036ec <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036c0:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036c2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036c6:	2101      	movs	r1, #1
900036c8:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ca:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036cc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036d0:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036d4:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036d6:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036da:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036de:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
900036e2:	bd10      	pop	{r4, pc}
900036e4:	24007374 	.word	0x24007374
900036e8:	9002e7bc 	.word	0x9002e7bc
900036ec:	24007344 	.word	0x24007344

900036f0 <send_uart>:
		}
	}
}


void send_uart(){
900036f0:	b580      	push	{r7, lr}
900036f2:	4c19      	ldr	r4, [pc, #100]	@ (90003758 <send_uart+0x68>)
900036f4:	b082      	sub	sp, #8
		if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
			if (action == TX_SEND_START_CMD) {
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code\n",strlen("Send trouble code\n"));
				osDelay(pdMS_TO_TICKS(5000));
			}else if (action == TX_Reset_TC){
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Reset TC\n",strlen("Reset TC\n"));
900036f6:	4f19      	ldr	r7, [pc, #100]	@ (9000375c <send_uart+0x6c>)
	osDelay(50);//small delay for USART initialization
900036f8:	2032      	movs	r0, #50	@ 0x32
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Reset TC\n",strlen("Reset TC\n"));
900036fa:	4d19      	ldr	r5, [pc, #100]	@ (90003760 <send_uart+0x70>)
	osDelay(50);//small delay for USART initialization
900036fc:	f00b fb9a 	bl	9000ee34 <osDelay>
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code\n",strlen("Send trouble code\n"));
90003700:	4e18      	ldr	r6, [pc, #96]	@ (90003764 <send_uart+0x74>)
		if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
90003702:	f04f 33ff 	mov.w	r3, #4294967295
90003706:	2200      	movs	r2, #0
90003708:	f10d 0107 	add.w	r1, sp, #7
9000370c:	6820      	ldr	r0, [r4, #0]
9000370e:	f00b fcdd 	bl	9000f0cc <osMessageQueueGet>
90003712:	2800      	cmp	r0, #0
90003714:	d1f5      	bne.n	90003702 <send_uart+0x12>
			if (action == TX_SEND_START_CMD) {
90003716:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000371a:	2b01      	cmp	r3, #1
9000371c:	d008      	beq.n	90003730 <send_uart+0x40>
			}else if (action == TX_Reset_TC){
9000371e:	2b02      	cmp	r3, #2
90003720:	d010      	beq.n	90003744 <send_uart+0x54>
				osDelay(pdMS_TO_TICKS(1500));
			}else if (action == TX_TASK_EXIT){
90003722:	2b03      	cmp	r3, #3
90003724:	d1ed      	bne.n	90003702 <send_uart+0x12>
				break;
			}
		}
	}
	osMessageQueueDelete(send_task_queue);
90003726:	6820      	ldr	r0, [r4, #0]
90003728:	f00b fd0a 	bl	9000f140 <osMessageQueueDelete>
	osThreadExit();
9000372c:	f00b fb7c 	bl	9000ee28 <osThreadExit>
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code\n",strlen("Send trouble code\n"));
90003730:	2212      	movs	r2, #18
90003732:	4631      	mov	r1, r6
90003734:	4628      	mov	r0, r5
90003736:	f009 ff67 	bl	9000d608 <HAL_UART_Transmit_IT>
				osDelay(pdMS_TO_TICKS(5000));
9000373a:	f241 3088 	movw	r0, #5000	@ 0x1388
9000373e:	f00b fb79 	bl	9000ee34 <osDelay>
90003742:	e7de      	b.n	90003702 <send_uart+0x12>
				HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Reset TC\n",strlen("Reset TC\n"));
90003744:	2209      	movs	r2, #9
90003746:	4639      	mov	r1, r7
90003748:	4628      	mov	r0, r5
9000374a:	f009 ff5d 	bl	9000d608 <HAL_UART_Transmit_IT>
				osDelay(pdMS_TO_TICKS(1500));
9000374e:	f240 50dc 	movw	r0, #1500	@ 0x5dc
90003752:	f00b fb6f 	bl	9000ee34 <osDelay>
90003756:	e7d4      	b.n	90003702 <send_uart+0x12>
90003758:	240073c8 	.word	0x240073c8
9000375c:	9002dc14 	.word	0x9002dc14
90003760:	2400742c 	.word	0x2400742c
90003764:	9002dc00 	.word	0x9002dc00

90003768 <receive_uart>:
}

void receive_uart(){
90003768:	b580      	push	{r7, lr}
9000376a:	4c24      	ldr	r4, [pc, #144]	@ (900037fc <receive_uart+0x94>)
9000376c:	b082      	sub	sp, #8
				break;
			}else if (action == RX_TC_Cleared){
				Action_phase = Clean_Up_Phase;
				break;
			}else{
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size + 2);
9000376e:	4d24      	ldr	r5, [pc, #144]	@ (90003800 <receive_uart+0x98>)
	osDelay(50); //small delay for USART to initialize
90003770:	2032      	movs	r0, #50	@ 0x32
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size + 2);
90003772:	4e24      	ldr	r6, [pc, #144]	@ (90003804 <receive_uart+0x9c>)
	osDelay(50); //small delay for USART to initialize
90003774:	f00b fb5e 	bl	9000ee34 <osDelay>
				if (isalpha(data[0])&& data[tc_size] == '\n' && (data[0] == 'P' || data[0] == 'C' || data[0] == 'B' || data[0] == 'U')){
90003778:	4f23      	ldr	r7, [pc, #140]	@ (90003808 <receive_uart+0xa0>)
		if(osMessageQueueGet(receive_task_queue, &action, NULL,osWaitForever) == osOK){
9000377a:	f04f 33ff 	mov.w	r3, #4294967295
9000377e:	2200      	movs	r2, #0
90003780:	f10d 0107 	add.w	r1, sp, #7
90003784:	6820      	ldr	r0, [r4, #0]
90003786:	f00b fca1 	bl	9000f0cc <osMessageQueueGet>
9000378a:	2800      	cmp	r0, #0
9000378c:	d1f5      	bne.n	9000377a <receive_uart+0x12>
			if (action == RX_RECEIVE_DATA){
9000378e:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003792:	2b01      	cmp	r3, #1
90003794:	d009      	beq.n	900037aa <receive_uart+0x42>
			}else if (action == RX_TASK_EXIT){
90003796:	2b03      	cmp	r3, #3
90003798:	d023      	beq.n	900037e2 <receive_uart+0x7a>
			}else if (action == RX_TC_Cleared){
9000379a:	2b02      	cmp	r3, #2
9000379c:	d02a      	beq.n	900037f4 <receive_uart+0x8c>
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size + 2);
9000379e:	2207      	movs	r2, #7
900037a0:	4629      	mov	r1, r5
900037a2:	4630      	mov	r0, r6
900037a4:	f009 ff8c 	bl	9000d6c0 <HAL_UART_Receive_IT>
900037a8:	e7e7      	b.n	9000377a <receive_uart+0x12>
				if (isalpha(data[0])&& data[tc_size] == '\n' && (data[0] == 'P' || data[0] == 'C' || data[0] == 'B' || data[0] == 'U')){
900037aa:	782b      	ldrb	r3, [r5, #0]
900037ac:	5cfa      	ldrb	r2, [r7, r3]
900037ae:	0792      	lsls	r2, r2, #30
900037b0:	d0e3      	beq.n	9000377a <receive_uart+0x12>
900037b2:	796a      	ldrb	r2, [r5, #5]
900037b4:	2a0a      	cmp	r2, #10
900037b6:	d1e0      	bne.n	9000377a <receive_uart+0x12>
900037b8:	3b42      	subs	r3, #66	@ 0x42
900037ba:	b2db      	uxtb	r3, r3
900037bc:	2b13      	cmp	r3, #19
900037be:	d8dc      	bhi.n	9000377a <receive_uart+0x12>
900037c0:	4a12      	ldr	r2, [pc, #72]	@ (9000380c <receive_uart+0xa4>)
900037c2:	fa22 f303 	lsr.w	r3, r2, r3
900037c6:	07db      	lsls	r3, r3, #31
900037c8:	d5d7      	bpl.n	9000377a <receive_uart+0x12>
					osSemaphoreRelease(blink_sem);
900037ca:	4b11      	ldr	r3, [pc, #68]	@ (90003810 <receive_uart+0xa8>)
900037cc:	6818      	ldr	r0, [r3, #0]
900037ce:	f00b fbc7 	bl	9000ef60 <osSemaphoreRelease>
					memcpy(trouble_code,data,sizeof(data));
900037d2:	4b10      	ldr	r3, [pc, #64]	@ (90003814 <receive_uart+0xac>)
900037d4:	e895 0003 	ldmia.w	r5, {r0, r1}
900037d8:	6018      	str	r0, [r3, #0]
					TC_Received(trouble_code); //pass trouble code to GUI
900037da:	4618      	mov	r0, r3
					memcpy(trouble_code,data,sizeof(data));
900037dc:	8099      	strh	r1, [r3, #4]
					TC_Received(trouble_code); //pass trouble code to GUI
900037de:	f7fd f9a3 	bl	90000b28 <TC_Received>
			}
		}
	}
	//terminating thread
	osSemaphoreRelease(receive_code_sem);
900037e2:	4b0d      	ldr	r3, [pc, #52]	@ (90003818 <receive_uart+0xb0>)
900037e4:	6818      	ldr	r0, [r3, #0]
900037e6:	f00b fbbb 	bl	9000ef60 <osSemaphoreRelease>
	osMessageQueueDelete(receive_task_queue);
900037ea:	6820      	ldr	r0, [r4, #0]
900037ec:	f00b fca8 	bl	9000f140 <osMessageQueueDelete>
	osThreadExit();
900037f0:	f00b fb1a 	bl	9000ee28 <osThreadExit>
				Action_phase = Clean_Up_Phase;
900037f4:	4a09      	ldr	r2, [pc, #36]	@ (9000381c <receive_uart+0xb4>)
900037f6:	7013      	strb	r3, [r2, #0]
				break;
900037f8:	e7f3      	b.n	900037e2 <receive_uart+0x7a>
900037fa:	bf00      	nop
900037fc:	240073c4 	.word	0x240073c4
90003800:	240073d8 	.word	0x240073d8
90003804:	2400742c 	.word	0x2400742c
90003808:	9002fe98 	.word	0x9002fe98
9000380c:	00084003 	.word	0x00084003
90003810:	240073e8 	.word	0x240073e8
90003814:	240073e0 	.word	0x240073e0
90003818:	240073c0 	.word	0x240073c0
9000381c:	240073bc 	.word	0x240073bc

90003820 <HAL_UART_RxCpltCallback>:
	if(huart->Instance == USART1){
90003820:	4b13      	ldr	r3, [pc, #76]	@ (90003870 <HAL_UART_RxCpltCallback+0x50>)
90003822:	6802      	ldr	r2, [r0, #0]
90003824:	429a      	cmp	r2, r3
90003826:	d000      	beq.n	9000382a <HAL_UART_RxCpltCallback+0xa>
90003828:	4770      	bx	lr
		if (Action_phase == Get_TC_Phase){
9000382a:	4b12      	ldr	r3, [pc, #72]	@ (90003874 <HAL_UART_RxCpltCallback+0x54>)
{
9000382c:	b500      	push	{lr}
		if (Action_phase == Get_TC_Phase){
9000382e:	781b      	ldrb	r3, [r3, #0]
{
90003830:	b083      	sub	sp, #12
		if (Action_phase == Get_TC_Phase){
90003832:	b123      	cbz	r3, 9000383e <HAL_UART_RxCpltCallback+0x1e>
		}else if (Action_phase == Clean_Up_Phase){
90003834:	2b02      	cmp	r3, #2
90003836:	d00d      	beq.n	90003854 <HAL_UART_RxCpltCallback+0x34>
}
90003838:	b003      	add	sp, #12
9000383a:	f85d fb04 	ldr.w	pc, [sp], #4
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
9000383e:	2101      	movs	r1, #1
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003840:	480d      	ldr	r0, [pc, #52]	@ (90003878 <HAL_UART_RxCpltCallback+0x58>)
90003842:	461a      	mov	r2, r3
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
90003844:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003848:	f10d 0107 	add.w	r1, sp, #7
9000384c:	6800      	ldr	r0, [r0, #0]
9000384e:	f00b fc01 	bl	9000f054 <osMessageQueuePut>
90003852:	e7f1      	b.n	90003838 <HAL_UART_RxCpltCallback+0x18>
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003854:	2300      	movs	r3, #0
90003856:	4808      	ldr	r0, [pc, #32]	@ (90003878 <HAL_UART_RxCpltCallback+0x58>)
			rx_task_action_t rx_action = RX_TASK_EXIT;
90003858:	f04f 0c03 	mov.w	ip, #3
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
9000385c:	f10d 0107 	add.w	r1, sp, #7
90003860:	461a      	mov	r2, r3
90003862:	6800      	ldr	r0, [r0, #0]
			rx_task_action_t rx_action = RX_TASK_EXIT;
90003864:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003868:	f00b fbf4 	bl	9000f054 <osMessageQueuePut>
}
9000386c:	e7e4      	b.n	90003838 <HAL_UART_RxCpltCallback+0x18>
9000386e:	bf00      	nop
90003870:	40011000 	.word	0x40011000
90003874:	240073bc 	.word	0x240073bc
90003878:	240073c4 	.word	0x240073c4

9000387c <HAL_UART_TxCpltCallback>:
	if (huart->Instance == USART1){
9000387c:	4b16      	ldr	r3, [pc, #88]	@ (900038d8 <HAL_UART_TxCpltCallback+0x5c>)
9000387e:	6802      	ldr	r2, [r0, #0]
90003880:	429a      	cmp	r2, r3
90003882:	d000      	beq.n	90003886 <HAL_UART_TxCpltCallback+0xa>
90003884:	4770      	bx	lr
		if (Action_phase == Get_TC_Phase){
90003886:	4b15      	ldr	r3, [pc, #84]	@ (900038dc <HAL_UART_TxCpltCallback+0x60>)
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
90003888:	b500      	push	{lr}
		if (Action_phase == Get_TC_Phase){
9000388a:	781b      	ldrb	r3, [r3, #0]
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
9000388c:	b083      	sub	sp, #12
		if (Action_phase == Get_TC_Phase){
9000388e:	b133      	cbz	r3, 9000389e <HAL_UART_TxCpltCallback+0x22>
		}else if (Action_phase == Reset_TC_Phase){
90003890:	2b01      	cmp	r3, #1
90003892:	d00f      	beq.n	900038b4 <HAL_UART_TxCpltCallback+0x38>
		}else if (Action_phase == Clean_Up_Phase){
90003894:	2b02      	cmp	r3, #2
90003896:	d01a      	beq.n	900038ce <HAL_UART_TxCpltCallback+0x52>
}
90003898:	b003      	add	sp, #12
9000389a:	f85d fb04 	ldr.w	pc, [sp], #4
			tx_task_action_t tx_action = TX_SEND_START_CMD;
9000389e:	2101      	movs	r1, #1
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
900038a0:	480f      	ldr	r0, [pc, #60]	@ (900038e0 <HAL_UART_TxCpltCallback+0x64>)
900038a2:	461a      	mov	r2, r3
			tx_task_action_t tx_action = TX_SEND_START_CMD;
900038a4:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
900038a8:	f10d 0107 	add.w	r1, sp, #7
900038ac:	6800      	ldr	r0, [r0, #0]
900038ae:	f00b fbd1 	bl	9000f054 <osMessageQueuePut>
900038b2:	e7f1      	b.n	90003898 <HAL_UART_TxCpltCallback+0x1c>
			osMessageQueuePut(send_task_queue, &tx_action,0,0);
900038b4:	480a      	ldr	r0, [pc, #40]	@ (900038e0 <HAL_UART_TxCpltCallback+0x64>)
900038b6:	2300      	movs	r3, #0
			tx_task_action_t tx_action = TX_Reset_TC;
900038b8:	f04f 0c02 	mov.w	ip, #2
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
900038bc:	f10d 0107 	add.w	r1, sp, #7
900038c0:	461a      	mov	r2, r3
900038c2:	6800      	ldr	r0, [r0, #0]
			tx_task_action_t tx_action = TX_TASK_EXIT;
900038c4:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
900038c8:	f00b fbc4 	bl	9000f054 <osMessageQueuePut>
}
900038cc:	e7e4      	b.n	90003898 <HAL_UART_TxCpltCallback+0x1c>
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
900038ce:	4804      	ldr	r0, [pc, #16]	@ (900038e0 <HAL_UART_TxCpltCallback+0x64>)
900038d0:	2300      	movs	r3, #0
			tx_task_action_t tx_action = TX_TASK_EXIT;
900038d2:	f04f 0c03 	mov.w	ip, #3
900038d6:	e7f1      	b.n	900038bc <HAL_UART_TxCpltCallback+0x40>
900038d8:	40011000 	.word	0x40011000
900038dc:	240073bc 	.word	0x240073bc
900038e0:	240073c8 	.word	0x240073c8

900038e4 <init_error_check>:

}

void init_error_check(void *ptr){
	if (ptr == NULL){
900038e4:	b100      	cbz	r0, 900038e8 <init_error_check+0x4>
		Error_Handler();
	}
}
900038e6:	4770      	bx	lr
		Error_Handler();
900038e8:	f000 bc0e 	b.w	90004108 <Error_Handler>

900038ec <UART_REST_TC>:

void UART_REST_TC(){
900038ec:	b510      	push	{r4, lr}
900038ee:	4c15      	ldr	r4, [pc, #84]	@ (90003944 <UART_REST_TC+0x58>)
	//waiting till thread is deleted to start again
	while (osThreadGetState(send_handle) != osThreadTerminated){
900038f0:	e001      	b.n	900038f6 <UART_REST_TC+0xa>
		osDelay(10);
900038f2:	f00b fa9f 	bl	9000ee34 <osDelay>
	while (osThreadGetState(send_handle) != osThreadTerminated){
900038f6:	6820      	ldr	r0, [r4, #0]
900038f8:	f00b fa84 	bl	9000ee04 <osThreadGetState>
900038fc:	4603      	mov	r3, r0
		osDelay(10);
900038fe:	200a      	movs	r0, #10
	while (osThreadGetState(send_handle) != osThreadTerminated){
90003900:	2b04      	cmp	r3, #4
90003902:	d1f6      	bne.n	900038f2 <UART_REST_TC+0x6>
	}
	osDelay(50); //waiting extra time for setup
90003904:	2032      	movs	r0, #50	@ 0x32
90003906:	f00b fa95 	bl	9000ee34 <osDelay>

	//starting queue and thread
	send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
9000390a:	2101      	movs	r1, #1
9000390c:	2200      	movs	r2, #0
9000390e:	4608      	mov	r0, r1
90003910:	f00b fb64 	bl	9000efdc <osMessageQueueNew>
90003914:	4b0c      	ldr	r3, [pc, #48]	@ (90003948 <UART_REST_TC+0x5c>)
90003916:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003918:	b168      	cbz	r0, 90003936 <UART_REST_TC+0x4a>
	init_error_check(send_task_queue);
	send_handle = osThreadNew(send_uart, NULL, &sendTask_attributes);
9000391a:	4a0c      	ldr	r2, [pc, #48]	@ (9000394c <UART_REST_TC+0x60>)
9000391c:	2100      	movs	r1, #0
9000391e:	480c      	ldr	r0, [pc, #48]	@ (90003950 <UART_REST_TC+0x64>)
90003920:	f00b fa2c 	bl	9000ed7c <osThreadNew>
90003924:	6020      	str	r0, [r4, #0]
	if (ptr == NULL){
90003926:	b148      	cbz	r0, 9000393c <UART_REST_TC+0x50>
	init_error_check(send_handle);
	//start callback
	HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Reset TC\n",strlen("Reset TC\n"));
90003928:	2209      	movs	r2, #9
9000392a:	490a      	ldr	r1, [pc, #40]	@ (90003954 <UART_REST_TC+0x68>)
9000392c:	480a      	ldr	r0, [pc, #40]	@ (90003958 <UART_REST_TC+0x6c>)
}
9000392e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Reset TC\n",strlen("Reset TC\n"));
90003932:	f009 be69 	b.w	9000d608 <HAL_UART_Transmit_IT>
		Error_Handler();
90003936:	f000 fbe7 	bl	90004108 <Error_Handler>
9000393a:	e7ee      	b.n	9000391a <UART_REST_TC+0x2e>
9000393c:	f000 fbe4 	bl	90004108 <Error_Handler>
90003940:	e7f2      	b.n	90003928 <UART_REST_TC+0x3c>
90003942:	bf00      	nop
90003944:	240073d4 	.word	0x240073d4
90003948:	240073c8 	.word	0x240073c8
9000394c:	9002e83c 	.word	0x9002e83c
90003950:	900036f1 	.word	0x900036f1
90003954:	9002dc14 	.word	0x9002dc14
90003958:	2400742c 	.word	0x2400742c

9000395c <Get_TC_USART>:
  //setting up FreeRTOS*********************************************************************************
  /**
   * Setup and error checking. To load next trouble code call function again.
   */
  Action_phase = Get_TC_Phase;
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
9000395c:	2101      	movs	r1, #1
  Action_phase = Get_TC_Phase;
9000395e:	2200      	movs	r2, #0
90003960:	4d3a      	ldr	r5, [pc, #232]	@ (90003a4c <Get_TC_USART+0xf0>)
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
90003962:	4608      	mov	r0, r1
{
90003964:	b508      	push	{r3, lr}
  Action_phase = Get_TC_Phase;
90003966:	702a      	strb	r2, [r5, #0]
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
90003968:	f00b fb38 	bl	9000efdc <osMessageQueueNew>
9000396c:	4b38      	ldr	r3, [pc, #224]	@ (90003a50 <Get_TC_USART+0xf4>)
9000396e:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003970:	2800      	cmp	r0, #0
90003972:	d05c      	beq.n	90003a2e <Get_TC_USART+0xd2>
  init_error_check(send_task_queue);
  receive_task_queue = osMessageQueueNew(1, sizeof(rx_task_action_t),NULL);
90003974:	2101      	movs	r1, #1
90003976:	2200      	movs	r2, #0
90003978:	4608      	mov	r0, r1
9000397a:	f00b fb2f 	bl	9000efdc <osMessageQueueNew>
9000397e:	4b35      	ldr	r3, [pc, #212]	@ (90003a54 <Get_TC_USART+0xf8>)
90003980:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003982:	2800      	cmp	r0, #0
90003984:	d056      	beq.n	90003a34 <Get_TC_USART+0xd8>
  init_error_check(receive_task_queue);
  receive_code_sem = osSemaphoreNew(1,0,NULL);
90003986:	2200      	movs	r2, #0
90003988:	4c33      	ldr	r4, [pc, #204]	@ (90003a58 <Get_TC_USART+0xfc>)
9000398a:	2001      	movs	r0, #1
9000398c:	4611      	mov	r1, r2
9000398e:	f00b fa5f 	bl	9000ee50 <osSemaphoreNew>
90003992:	6020      	str	r0, [r4, #0]
	if (ptr == NULL){
90003994:	2800      	cmp	r0, #0
90003996:	d050      	beq.n	90003a3a <Get_TC_USART+0xde>
  init_error_check(receive_code_sem);
  send_handle = osThreadNew(send_uart, NULL, &sendTask_attributes);
90003998:	4a30      	ldr	r2, [pc, #192]	@ (90003a5c <Get_TC_USART+0x100>)
9000399a:	2100      	movs	r1, #0
9000399c:	4830      	ldr	r0, [pc, #192]	@ (90003a60 <Get_TC_USART+0x104>)
9000399e:	f00b f9ed 	bl	9000ed7c <osThreadNew>
900039a2:	4b30      	ldr	r3, [pc, #192]	@ (90003a64 <Get_TC_USART+0x108>)
900039a4:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900039a6:	2800      	cmp	r0, #0
900039a8:	d04a      	beq.n	90003a40 <Get_TC_USART+0xe4>
  init_error_check(send_handle);
  receive_handle = osThreadNew(receive_uart, NULL, &receiveTask_attributes);
900039aa:	4a2f      	ldr	r2, [pc, #188]	@ (90003a68 <Get_TC_USART+0x10c>)
900039ac:	2100      	movs	r1, #0
900039ae:	482f      	ldr	r0, [pc, #188]	@ (90003a6c <Get_TC_USART+0x110>)
900039b0:	f00b f9e4 	bl	9000ed7c <osThreadNew>
900039b4:	4b2e      	ldr	r3, [pc, #184]	@ (90003a70 <Get_TC_USART+0x114>)
900039b6:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900039b8:	2800      	cmp	r0, #0
900039ba:	d044      	beq.n	90003a46 <Get_TC_USART+0xea>
  init_error_check(receive_handle);
  blink_handle = osThreadNew(blk_toggle_led,NULL,&blinkTask_attributes);
900039bc:	4a2d      	ldr	r2, [pc, #180]	@ (90003a74 <Get_TC_USART+0x118>)
900039be:	2100      	movs	r1, #0
900039c0:	482d      	ldr	r0, [pc, #180]	@ (90003a78 <Get_TC_USART+0x11c>)
900039c2:	f00b f9db 	bl	9000ed7c <osThreadNew>
900039c6:	4b2d      	ldr	r3, [pc, #180]	@ (90003a7c <Get_TC_USART+0x120>)
900039c8:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900039ca:	b368      	cbz	r0, 90003a28 <Get_TC_USART+0xcc>
  init_error_check(blink_handle);

  //setting interrupts**********************************************************************************
  HAL_UART_Transmit_IT(&huart1, (uint8_t *)"Send trouble code.",strlen("Send trouble code."));
900039cc:	2212      	movs	r2, #18
900039ce:	492c      	ldr	r1, [pc, #176]	@ (90003a80 <Get_TC_USART+0x124>)
900039d0:	482c      	ldr	r0, [pc, #176]	@ (90003a84 <Get_TC_USART+0x128>)
900039d2:	f009 fe19 	bl	9000d608 <HAL_UART_Transmit_IT>
  HAL_UART_Receive_IT(&huart1,(uint8_t *)data, tc_size + 2);
900039d6:	2207      	movs	r2, #7
900039d8:	492b      	ldr	r1, [pc, #172]	@ (90003a88 <Get_TC_USART+0x12c>)
900039da:	482a      	ldr	r0, [pc, #168]	@ (90003a84 <Get_TC_USART+0x128>)
900039dc:	f009 fe70 	bl	9000d6c0 <HAL_UART_Receive_IT>

  //waiting for trouble code to be received*************************************************************
  osSemaphoreAcquire(receive_code_sem, HAL_MAX_DELAY);
900039e0:	f04f 31ff 	mov.w	r1, #4294967295
900039e4:	6820      	ldr	r0, [r4, #0]
900039e6:	f00b fa89 	bl	9000eefc <osSemaphoreAcquire>

  //clean up after code received************************************************************************
  Action_phase = Clean_Up_Phase;
  osSemaphoreRelease(blink_sem);
900039ea:	4a28      	ldr	r2, [pc, #160]	@ (90003a8c <Get_TC_USART+0x130>)
  Action_phase = Clean_Up_Phase;
900039ec:	2302      	movs	r3, #2
  osSemaphoreRelease(blink_sem);
900039ee:	6810      	ldr	r0, [r2, #0]
  Action_phase = Clean_Up_Phase;
900039f0:	702b      	strb	r3, [r5, #0]
  osSemaphoreRelease(blink_sem);
900039f2:	f00b fab5 	bl	9000ef60 <osSemaphoreRelease>
  osDelay(pdMS_TO_TICKS(1000)); //waiting for tasks to exit
900039f6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
900039fa:	f00b fa1b 	bl	9000ee34 <osDelay>
  osSemaphoreDelete(receive_code_sem);
900039fe:	6820      	ldr	r0, [r4, #0]
90003a00:	f00b fad8 	bl	9000efb4 <osSemaphoreDelete>
  HAL_UART_Abort_IT(&huart1);
90003a04:	481f      	ldr	r0, [pc, #124]	@ (90003a84 <Get_TC_USART+0x128>)
90003a06:	f009 ff2f 	bl	9000d868 <HAL_UART_Abort_IT>
  //turning off led if left on from blink_handle
  if (HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_13) == GPIO_PIN_RESET){
90003a0a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003a0e:	4820      	ldr	r0, [pc, #128]	@ (90003a90 <Get_TC_USART+0x134>)
90003a10:	f004 fdfc 	bl	9000860c <HAL_GPIO_ReadPin>
90003a14:	b108      	cbz	r0, 90003a1a <Get_TC_USART+0xbe>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
  }
  osThreadExit();
90003a16:	f00b fa07 	bl	9000ee28 <osThreadExit>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003a1a:	2201      	movs	r2, #1
90003a1c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003a20:	481b      	ldr	r0, [pc, #108]	@ (90003a90 <Get_TC_USART+0x134>)
90003a22:	f004 fdf9 	bl	90008618 <HAL_GPIO_WritePin>
90003a26:	e7f6      	b.n	90003a16 <Get_TC_USART+0xba>
		Error_Handler();
90003a28:	f000 fb6e 	bl	90004108 <Error_Handler>
90003a2c:	e7ce      	b.n	900039cc <Get_TC_USART+0x70>
90003a2e:	f000 fb6b 	bl	90004108 <Error_Handler>
90003a32:	e79f      	b.n	90003974 <Get_TC_USART+0x18>
90003a34:	f000 fb68 	bl	90004108 <Error_Handler>
90003a38:	e7a5      	b.n	90003986 <Get_TC_USART+0x2a>
90003a3a:	f000 fb65 	bl	90004108 <Error_Handler>
90003a3e:	e7ab      	b.n	90003998 <Get_TC_USART+0x3c>
90003a40:	f000 fb62 	bl	90004108 <Error_Handler>
90003a44:	e7b1      	b.n	900039aa <Get_TC_USART+0x4e>
90003a46:	f000 fb5f 	bl	90004108 <Error_Handler>
90003a4a:	e7b7      	b.n	900039bc <Get_TC_USART+0x60>
90003a4c:	240073bc 	.word	0x240073bc
90003a50:	240073c8 	.word	0x240073c8
90003a54:	240073c4 	.word	0x240073c4
90003a58:	240073c0 	.word	0x240073c0
90003a5c:	9002e83c 	.word	0x9002e83c
90003a60:	900036f1 	.word	0x900036f1
90003a64:	240073d4 	.word	0x240073d4
90003a68:	9002e818 	.word	0x9002e818
90003a6c:	90003769 	.word	0x90003769
90003a70:	240073d0 	.word	0x240073d0
90003a74:	9002e7f4 	.word	0x9002e7f4
90003a78:	90003a95 	.word	0x90003a95
90003a7c:	240073cc 	.word	0x240073cc
90003a80:	9002dc20 	.word	0x9002dc20
90003a84:	2400742c 	.word	0x2400742c
90003a88:	240073d8 	.word	0x240073d8
90003a8c:	240073e8 	.word	0x240073e8
90003a90:	58022000 	.word	0x58022000

90003a94 <blk_toggle_led>:
#include "stm32h7xx_hal.h"

osSemaphoreId_t blink_sem;

void blk_toggle_led(){
	blink_sem = osSemaphoreNew(100,0,NULL);
90003a94:	2200      	movs	r2, #0
90003a96:	2064      	movs	r0, #100	@ 0x64
90003a98:	4d13      	ldr	r5, [pc, #76]	@ (90003ae8 <blk_toggle_led+0x54>)
90003a9a:	4611      	mov	r1, r2
	init_error_check(blink_sem);
	while(1){
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && Action_phase != Clean_Up_Phase){
90003a9c:	4e13      	ldr	r6, [pc, #76]	@ (90003aec <blk_toggle_led+0x58>)
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003a9e:	4c14      	ldr	r4, [pc, #80]	@ (90003af0 <blk_toggle_led+0x5c>)
void blk_toggle_led(){
90003aa0:	b508      	push	{r3, lr}
	blink_sem = osSemaphoreNew(100,0,NULL);
90003aa2:	f00b f9d5 	bl	9000ee50 <osSemaphoreNew>
90003aa6:	6028      	str	r0, [r5, #0]
	init_error_check(blink_sem);
90003aa8:	f7ff ff1c 	bl	900038e4 <init_error_check>
90003aac:	e00f      	b.n	90003ace <blk_toggle_led+0x3a>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && Action_phase != Clean_Up_Phase){
90003aae:	7833      	ldrb	r3, [r6, #0]
90003ab0:	2b02      	cmp	r3, #2
90003ab2:	d013      	beq.n	90003adc <blk_toggle_led+0x48>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003ab4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003ab8:	4620      	mov	r0, r4
90003aba:	f004 fdb1 	bl	90008620 <HAL_GPIO_TogglePin>
			osDelay(pdMS_TO_TICKS(250));
90003abe:	20fa      	movs	r0, #250	@ 0xfa
90003ac0:	f00b f9b8 	bl	9000ee34 <osDelay>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003ac4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003ac8:	4620      	mov	r0, r4
90003aca:	f004 fda9 	bl	90008620 <HAL_GPIO_TogglePin>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && Action_phase != Clean_Up_Phase){
90003ace:	f04f 31ff 	mov.w	r1, #4294967295
90003ad2:	6828      	ldr	r0, [r5, #0]
90003ad4:	f00b fa12 	bl	9000eefc <osSemaphoreAcquire>
90003ad8:	2800      	cmp	r0, #0
90003ada:	d0e8      	beq.n	90003aae <blk_toggle_led+0x1a>
		}else{
			osSemaphoreDelete(blink_sem);
90003adc:	6828      	ldr	r0, [r5, #0]
90003ade:	f00b fa69 	bl	9000efb4 <osSemaphoreDelete>
			osThreadExit();
90003ae2:	f00b f9a1 	bl	9000ee28 <osThreadExit>
90003ae6:	bf00      	nop
90003ae8:	240073e8 	.word	0x240073e8
90003aec:	240073bc 	.word	0x240073bc
90003af0:	58022000 	.word	0x58022000

90003af4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003af4:	4901      	ldr	r1, [pc, #4]	@ (90003afc <vApplicationIdleHook+0x8>)
90003af6:	2000      	movs	r0, #0
90003af8:	f00d bbb0 	b.w	9001125c <vTaskSetApplicationTaskTag>
90003afc:	90000fcd 	.word	0x90000fcd

90003b00 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003b00:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003b02:	2064      	movs	r0, #100	@ 0x64
90003b04:	f00b f996 	bl	9000ee34 <osDelay>
  for(;;)
90003b08:	e7fb      	b.n	90003b02 <StartDefaultTask+0x2>
90003b0a:	bf00      	nop

90003b0c <SystemClock_Config>:
{
90003b0c:	b570      	push	{r4, r5, r6, lr}
90003b0e:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003b10:	224c      	movs	r2, #76	@ 0x4c
90003b12:	2100      	movs	r1, #0
90003b14:	a80a      	add	r0, sp, #40	@ 0x28
90003b16:	f027 ffdf 	bl	9002bad8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003b1a:	2220      	movs	r2, #32
90003b1c:	2100      	movs	r1, #0
90003b1e:	a802      	add	r0, sp, #8
90003b20:	f027 ffda 	bl	9002bad8 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003b24:	2002      	movs	r0, #2
90003b26:	f007 fad3 	bl	9000b0d0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003b2a:	4a22      	ldr	r2, [pc, #136]	@ (90003bb4 <SystemClock_Config+0xa8>)
90003b2c:	2100      	movs	r1, #0
90003b2e:	4b22      	ldr	r3, [pc, #136]	@ (90003bb8 <SystemClock_Config+0xac>)
90003b30:	9101      	str	r1, [sp, #4]
90003b32:	6991      	ldr	r1, [r2, #24]
90003b34:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003b38:	6191      	str	r1, [r2, #24]
90003b3a:	6991      	ldr	r1, [r2, #24]
90003b3c:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003b40:	9101      	str	r1, [sp, #4]
90003b42:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003b44:	f041 0101 	orr.w	r1, r1, #1
90003b48:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003b4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003b4c:	f003 0301 	and.w	r3, r3, #1
90003b50:	9301      	str	r3, [sp, #4]
90003b52:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003b54:	6993      	ldr	r3, [r2, #24]
90003b56:	049b      	lsls	r3, r3, #18
90003b58:	d5fc      	bpl.n	90003b54 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003b5a:	2401      	movs	r4, #1
90003b5c:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003b60:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
90003b62:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
90003b64:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003b66:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003b68:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003b6a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003b6e:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003b70:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
90003b72:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003b76:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003b7a:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003b7e:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003b82:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003b86:	f007 fb39 	bl	9000b1fc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003b8a:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003b8c:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003b8e:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003b90:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003b92:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003b94:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003b96:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003b9a:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003b9e:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90003ba0:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003ba2:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003ba6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003baa:	f007 fea3 	bl	9000b8f4 <HAL_RCC_ClockConfig>
}
90003bae:	b01e      	add	sp, #120	@ 0x78
90003bb0:	bd70      	pop	{r4, r5, r6, pc}
90003bb2:	bf00      	nop
90003bb4:	58024800 	.word	0x58024800
90003bb8:	58000400 	.word	0x58000400

90003bbc <main>:
{
90003bbc:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003bbe:	2400      	movs	r4, #0
{
90003bc0:	b098      	sub	sp, #96	@ 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003bc2:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003bc4:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003bc6:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003bc8:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003bcc:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_MPU_Disable();
90003bd0:	f003 fd62 	bl	90007698 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003bd4:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003bd8:	4bd3      	ldr	r3, [pc, #844]	@ (90003f28 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003bda:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003bdc:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003be0:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
90003be4:	4bd1      	ldr	r3, [pc, #836]	@ (90003f2c <main+0x370>)
90003be6:	930e      	str	r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003be8:	f003 fd74 	bl	900076d4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003bec:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003bf0:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003bf2:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90003bf6:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003bf8:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003bfc:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003c00:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c04:	f003 fd66 	bl	900076d4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003c08:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c0a:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003c0c:	f8ad 6037 	strh.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003c10:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003c14:	231a      	movs	r3, #26
90003c16:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003c1a:	f240 1301 	movw	r3, #257	@ 0x101
90003c1e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c22:	f003 fd57 	bl	900076d4 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003c26:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c2a:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003c2c:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003c30:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003c32:	f8ad 3037 	strh.w	r3, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003c36:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003c3a:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003c3e:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003c40:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c44:	f003 fd46 	bl	900076d4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003c48:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c4a:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003c4c:	f88d 6037 	strb.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003c50:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003c54:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003c58:	f88d 503a 	strb.w	r5, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c5c:	f003 fd3a 	bl	900076d4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003c60:	4620      	mov	r0, r4
90003c62:	f003 fd27 	bl	900076b4 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003c66:	4ab2      	ldr	r2, [pc, #712]	@ (90003f30 <main+0x374>)
90003c68:	6953      	ldr	r3, [r2, #20]
90003c6a:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003c6e:	d111      	bne.n	90003c94 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003c70:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c74:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003c78:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003c7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c80:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003c84:	6953      	ldr	r3, [r2, #20]
90003c86:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003c8a:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003c8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c90:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003c94:	48a6      	ldr	r0, [pc, #664]	@ (90003f30 <main+0x374>)
90003c96:	6943      	ldr	r3, [r0, #20]
90003c98:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003c9c:	d124      	bne.n	90003ce8 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003c9e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003ca2:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003ca6:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003caa:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003cae:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003cb2:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003cb6:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003cb8:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003cbc:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003cbe:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003cc2:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003cc4:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003cc8:	1c5a      	adds	r2, r3, #1
90003cca:	d1f8      	bne.n	90003cbe <main+0x102>
    } while(sets-- != 0U);
90003ccc:	3c20      	subs	r4, #32
90003cce:	f114 0f20 	cmn.w	r4, #32
90003cd2:	d1f1      	bne.n	90003cb8 <main+0xfc>
90003cd4:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003cd8:	6943      	ldr	r3, [r0, #20]
90003cda:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003cde:	6143      	str	r3, [r0, #20]
90003ce0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003ce4:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003ce8:	f003 fc20 	bl	9000752c <HAL_Init>
  SystemClock_Config();
90003cec:	f7ff ff0e 	bl	90003b0c <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003cf0:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003cf2:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003cf4:	4d8f      	ldr	r5, [pc, #572]	@ (90003f34 <main+0x378>)
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003cf6:	2180      	movs	r1, #128	@ 0x80
90003cf8:	488f      	ldr	r0, [pc, #572]	@ (90003f38 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003cfa:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003cfc:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003cfe:	2601      	movs	r6, #1
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003d00:	2708      	movs	r7, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003d02:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003d06:	f04f 0940 	mov.w	r9, #64	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003d0a:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d0e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003d12:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003d16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d1a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003d1e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d26:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003d2a:	9301      	str	r3, [sp, #4]
90003d2c:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003d2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d32:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003d36:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d3e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003d42:	9302      	str	r3, [sp, #8]
90003d44:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003d46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d4a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003d4e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d56:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003d5a:	9303      	str	r3, [sp, #12]
90003d5c:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003d5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d62:	f043 0310 	orr.w	r3, r3, #16
90003d66:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d6e:	f003 0310 	and.w	r3, r3, #16
90003d72:	9304      	str	r3, [sp, #16]
90003d74:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003d76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d7a:	f043 0302 	orr.w	r3, r3, #2
90003d7e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d86:	f003 0302 	and.w	r3, r3, #2
90003d8a:	9305      	str	r3, [sp, #20]
90003d8c:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003d8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d92:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003d96:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d9e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003da2:	9306      	str	r3, [sp, #24]
90003da4:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003da6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003daa:	f043 0308 	orr.w	r3, r3, #8
90003dae:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003db2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003db6:	f003 0308 	and.w	r3, r3, #8
90003dba:	9307      	str	r3, [sp, #28]
90003dbc:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003dbe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003dc2:	f043 0320 	orr.w	r3, r3, #32
90003dc6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003dca:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003dce:	f003 0320 	and.w	r3, r3, #32
90003dd2:	9308      	str	r3, [sp, #32]
90003dd4:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003dd6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003dda:	430b      	orrs	r3, r1
90003ddc:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003de0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003de4:	400b      	ands	r3, r1
90003de6:	9309      	str	r3, [sp, #36]	@ 0x24
90003de8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003dea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003dee:	f043 0301 	orr.w	r3, r3, #1
90003df2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003df6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003dfa:	f003 0301 	and.w	r3, r3, #1
90003dfe:	930a      	str	r3, [sp, #40]	@ 0x28
90003e00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003e02:	f004 fc09 	bl	90008618 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003e06:	2201      	movs	r2, #1
90003e08:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003e0c:	484b      	ldr	r0, [pc, #300]	@ (90003f3c <main+0x380>)
90003e0e:	f004 fc03 	bl	90008618 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003e12:	4622      	mov	r2, r4
90003e14:	2108      	movs	r1, #8
90003e16:	484a      	ldr	r0, [pc, #296]	@ (90003f40 <main+0x384>)
90003e18:	f004 fbfe 	bl	90008618 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003e1c:	2201      	movs	r2, #1
90003e1e:	4849      	ldr	r0, [pc, #292]	@ (90003f44 <main+0x388>)
90003e20:	4611      	mov	r1, r2
90003e22:	f004 fbf9 	bl	90008618 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003e26:	4622      	mov	r2, r4
90003e28:	2140      	movs	r1, #64	@ 0x40
90003e2a:	4847      	ldr	r0, [pc, #284]	@ (90003f48 <main+0x38c>)
90003e2c:	f004 fbf4 	bl	90008618 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003e30:	2201      	movs	r2, #1
90003e32:	2104      	movs	r1, #4
90003e34:	4845      	ldr	r0, [pc, #276]	@ (90003f4c <main+0x390>)
90003e36:	f004 fbef 	bl	90008618 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003e3a:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003e3c:	a90b      	add	r1, sp, #44	@ 0x2c
90003e3e:	483e      	ldr	r0, [pc, #248]	@ (90003f38 <main+0x37c>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003e40:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e42:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e44:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003e46:	960c      	str	r6, [sp, #48]	@ 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003e48:	f004 f8aa 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003e4c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e50:	a90b      	add	r1, sp, #44	@ 0x2c
90003e52:	483a      	ldr	r0, [pc, #232]	@ (90003f3c <main+0x380>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003e54:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e56:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e58:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e5c:	f004 f8a0 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003e60:	a90b      	add	r1, sp, #44	@ 0x2c
90003e62:	4837      	ldr	r0, [pc, #220]	@ (90003f40 <main+0x384>)
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003e64:	970b      	str	r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003e66:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e6a:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003e6e:	f004 f897 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003e72:	a90b      	add	r1, sp, #44	@ 0x2c
90003e74:	4833      	ldr	r0, [pc, #204]	@ (90003f44 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003e76:	e9cd 660b 	strd	r6, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e7a:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003e7e:	f004 f88f 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003e82:	a90b      	add	r1, sp, #44	@ 0x2c
90003e84:	4830      	ldr	r0, [pc, #192]	@ (90003f48 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003e86:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003e8a:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003e8e:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e92:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003e96:	f004 f883 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e9a:	a90b      	add	r1, sp, #44	@ 0x2c
90003e9c:	482b      	ldr	r0, [pc, #172]	@ (90003f4c <main+0x390>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e9e:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003ea0:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ea4:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003ea8:	f004 f87a 	bl	90007fa0 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003eac:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003eb0:	4622      	mov	r2, r4
90003eb2:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003eb4:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003eb6:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003eb8:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003ebc:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003ec0:	4d23      	ldr	r5, [pc, #140]	@ (90003f50 <main+0x394>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003ec2:	4033      	ands	r3, r6
90003ec4:	9300      	str	r3, [sp, #0]
90003ec6:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003ec8:	f003 fb8a 	bl	900075e0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003ecc:	207a      	movs	r0, #122	@ 0x7a
90003ece:	f003 fbc3 	bl	90007658 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003ed2:	2234      	movs	r2, #52	@ 0x34
90003ed4:	4621      	mov	r1, r4
90003ed6:	a80b      	add	r0, sp, #44	@ 0x2c
90003ed8:	f027 fdfe 	bl	9002bad8 <memset>
  hltdc.Instance = LTDC;
90003edc:	4b1d      	ldr	r3, [pc, #116]	@ (90003f54 <main+0x398>)
  hltdc.Init.AccumulatedVBP = 11;
90003ede:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003ee0:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003ee2:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003ee4:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003ee6:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003eea:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003eee:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003ef0:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003ef2:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003ef4:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003ef8:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003efc:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003f00:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003f02:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003f06:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.Alpha = 255;
90003f0a:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003f0c:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003f10:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003f14:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003f18:	f006 fcf6 	bl	9000a908 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003f1c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003f20:	4622      	mov	r2, r4
90003f22:	a90b      	add	r1, sp, #44	@ 0x2c
90003f24:	e018      	b.n	90003f58 <main+0x39c>
90003f26:	bf00      	nop
90003f28:	03000012 	.word	0x03000012
90003f2c:	01010001 	.word	0x01010001
90003f30:	e000ed00 	.word	0xe000ed00
90003f34:	58024400 	.word	0x58024400
90003f38:	58020c00 	.word	0x58020c00
90003f3c:	58022000 	.word	0x58022000
90003f40:	58021800 	.word	0x58021800
90003f44:	58022800 	.word	0x58022800
90003f48:	58020000 	.word	0x58020000
90003f4c:	58022400 	.word	0x58022400
90003f50:	240074c0 	.word	0x240074c0
90003f54:	50001000 	.word	0x50001000
  pLayerCfg.WindowX1 = 480;
90003f58:	930c      	str	r3, [sp, #48]	@ 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003f5a:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003f5c:	9315      	str	r3, [sp, #84]	@ 0x54
  pLayerCfg.WindowY1 = 272;
90003f5e:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003f62:	4d50      	ldr	r5, [pc, #320]	@ (900040a4 <main+0x4e8>)
  pLayerCfg.WindowY1 = 272;
90003f64:	930e      	str	r3, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 272;
90003f66:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Alpha = 255;
90003f68:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003f6a:	940b      	str	r4, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
90003f6c:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Alpha0 = 0;
90003f6e:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.FBStartAdress = 0;
90003f70:	9414      	str	r4, [sp, #80]	@ 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003f72:	f8ad 405c 	strh.w	r4, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003f76:	f88d 405e 	strb.w	r4, [sp, #94]	@ 0x5e
  pLayerCfg.Alpha = 255;
90003f7a:	e9cd 730f 	strd	r7, r3, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003f7e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003f82:	e9cd 3a12 	strd	r3, sl, [sp, #72]	@ 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003f86:	f006 fd7d 	bl	9000aa84 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003f8a:	4b47      	ldr	r3, [pc, #284]	@ (900040a8 <main+0x4ec>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003f8c:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003f8e:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003f90:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003f92:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003f94:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003f98:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003f9c:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003fa0:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003fa4:	f003 febc 	bl	90007d20 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003fa8:	4631      	mov	r1, r6
90003faa:	4628      	mov	r0, r5
  huart1.Instance = USART1;
90003fac:	4d3f      	ldr	r5, [pc, #252]	@ (900040ac <main+0x4f0>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003fae:	f003 ff8d 	bl	90007ecc <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003fb2:	483f      	ldr	r0, [pc, #252]	@ (900040b0 <main+0x4f4>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003fb4:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003fb8:	a90b      	add	r1, sp, #44	@ 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003fba:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003fbe:	970b      	str	r7, [sp, #44]	@ 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003fc0:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003fc4:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003fc8:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003fcc:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003fce:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003fd2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90003fd6:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003fd8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003fdc:	6243      	str	r3, [r0, #36]	@ 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003fde:	2307      	movs	r3, #7
90003fe0:	930c      	str	r3, [sp, #48]	@ 0x30
  SdramTiming.RowCycleDelay = 7;
90003fe2:	930e      	str	r3, [sp, #56]	@ 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003fe4:	4b33      	ldr	r3, [pc, #204]	@ (900040b4 <main+0x4f8>)
90003fe6:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003fe8:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003fea:	e9cd 7710 	strd	r7, r7, [sp, #64]	@ 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003fee:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003ff0:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003ff4:	f009 f80e 	bl	9000d014 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003ff8:	4a2f      	ldr	r2, [pc, #188]	@ (900040b8 <main+0x4fc>)
  BSP_SDRAM_DeInit(0);
90003ffa:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003ffc:	6813      	ldr	r3, [r2, #0]
90003ffe:	f023 0301 	bic.w	r3, r3, #1
90004002:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90004004:	f003 f830 	bl	90007068 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90004008:	4620      	mov	r0, r4
9000400a:	f003 f877 	bl	900070fc <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
9000400e:	f7fc fd83 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90004012:	4b2a      	ldr	r3, [pc, #168]	@ (900040bc <main+0x500>)
90004014:	482a      	ldr	r0, [pc, #168]	@ (900040c0 <main+0x504>)
90004016:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90004018:	f005 fbc6 	bl	900097a8 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
9000401c:	4829      	ldr	r0, [pc, #164]	@ (900040c4 <main+0x508>)
9000401e:	4b2a      	ldr	r3, [pc, #168]	@ (900040c8 <main+0x50c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90004020:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90004022:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90004024:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90004026:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
9000402a:	f003 fb83 	bl	90007734 <HAL_CRC_Init>
  huart1.Init.Mode = UART_MODE_TX_RX;
9000402e:	230c      	movs	r3, #12
  huart1.Init.BaudRate = 9600;
90004030:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
  huart1.Instance = USART1;
90004034:	4925      	ldr	r1, [pc, #148]	@ (900040cc <main+0x510>)
  if (HAL_UART_Init(&huart1) != HAL_OK)
90004036:	4628      	mov	r0, r5
  huart1.Init.BaudRate = 9600;
90004038:	e885 0016 	stmia.w	r5, {r1, r2, r4}
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
9000403c:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart1.Init.Parity = UART_PARITY_NONE;
90004040:	e9c5 4403 	strd	r4, r4, [r5, #12]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90004044:	e9c5 4407 	strd	r4, r4, [r5, #28]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90004048:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
9000404c:	f00a fcd4 	bl	9000e9f8 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90004050:	4621      	mov	r1, r4
90004052:	4628      	mov	r0, r5
90004054:	f00a fd28 	bl	9000eaa8 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90004058:	4621      	mov	r1, r4
9000405a:	4628      	mov	r0, r5
9000405c:	f00a fd66 	bl	9000eb2c <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
90004060:	4628      	mov	r0, r5
90004062:	f00a fd03 	bl	9000ea6c <HAL_UARTEx_DisableFifoMode>
  MX_TouchGFX_Init();
90004066:	f7fc fd6d 	bl	90000b44 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
9000406a:	f7fc fd69 	bl	90000b40 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
9000406e:	f00a fe59 	bl	9000ed24 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004072:	4a17      	ldr	r2, [pc, #92]	@ (900040d0 <main+0x514>)
90004074:	4621      	mov	r1, r4
90004076:	4817      	ldr	r0, [pc, #92]	@ (900040d4 <main+0x518>)
90004078:	f00a fe80 	bl	9000ed7c <osThreadNew>
9000407c:	4b16      	ldr	r3, [pc, #88]	@ (900040d8 <main+0x51c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000407e:	4a17      	ldr	r2, [pc, #92]	@ (900040dc <main+0x520>)
90004080:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004082:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004084:	4816      	ldr	r0, [pc, #88]	@ (900040e0 <main+0x524>)
90004086:	f00a fe79 	bl	9000ed7c <osThreadNew>
9000408a:	4b16      	ldr	r3, [pc, #88]	@ (900040e4 <main+0x528>)
9000408c:	4605      	mov	r5, r0
  UARTHandle = osThreadNew(Get_TC_USART, NULL, &UARTTask_attributes);
9000408e:	4a16      	ldr	r2, [pc, #88]	@ (900040e8 <main+0x52c>)
90004090:	4621      	mov	r1, r4
90004092:	4816      	ldr	r0, [pc, #88]	@ (900040ec <main+0x530>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004094:	601d      	str	r5, [r3, #0]
  UARTHandle = osThreadNew(Get_TC_USART, NULL, &UARTTask_attributes);
90004096:	f00a fe71 	bl	9000ed7c <osThreadNew>
9000409a:	4b15      	ldr	r3, [pc, #84]	@ (900040f0 <main+0x534>)
9000409c:	6018      	str	r0, [r3, #0]
  osKernelStart();
9000409e:	f00a fe53 	bl	9000ed48 <osKernelStart>
  while (1)
900040a2:	e7fe      	b.n	900040a2 <main+0x4e6>
900040a4:	24007698 	.word	0x24007698
900040a8:	52001000 	.word	0x52001000
900040ac:	2400742c 	.word	0x2400742c
900040b0:	240073f8 	.word	0x240073f8
900040b4:	52004140 	.word	0x52004140
900040b8:	52004000 	.word	0x52004000
900040bc:	52003000 	.word	0x52003000
900040c0:	24007640 	.word	0x24007640
900040c4:	24007700 	.word	0x24007700
900040c8:	58024c00 	.word	0x58024c00
900040cc:	40011000 	.word	0x40011000
900040d0:	9002e8a8 	.word	0x9002e8a8
900040d4:	90003b01 	.word	0x90003b01
900040d8:	240073f4 	.word	0x240073f4
900040dc:	9002e884 	.word	0x9002e884
900040e0:	90000b55 	.word	0x90000b55
900040e4:	240073f0 	.word	0x240073f0
900040e8:	9002e860 	.word	0x9002e860
900040ec:	9000395d 	.word	0x9000395d
900040f0:	240073ec 	.word	0x240073ec

900040f4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
900040f4:	4b03      	ldr	r3, [pc, #12]	@ (90004104 <HAL_TIM_PeriodElapsedCallback+0x10>)
900040f6:	6802      	ldr	r2, [r0, #0]
900040f8:	429a      	cmp	r2, r3
900040fa:	d000      	beq.n	900040fe <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
900040fc:	4770      	bx	lr
    HAL_IncTick();
900040fe:	f003 ba45 	b.w	9000758c <HAL_IncTick>
90004102:	bf00      	nop
90004104:	40001000 	.word	0x40001000

90004108 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004108:	4770      	bx	lr
9000410a:	bf00      	nop

9000410c <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000410c:	4b0b      	ldr	r3, [pc, #44]	@ (9000413c <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000410e:	2200      	movs	r2, #0
90004110:	210f      	movs	r1, #15
90004112:	f06f 0001 	mvn.w	r0, #1
{
90004116:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004118:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
9000411c:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000411e:	f044 0402 	orr.w	r4, r4, #2
90004122:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90004126:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
9000412a:	f003 0302 	and.w	r3, r3, #2
9000412e:	9301      	str	r3, [sp, #4]
90004130:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90004132:	b003      	add	sp, #12
90004134:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004138:	f003 ba52 	b.w	900075e0 <HAL_NVIC_SetPriority>
9000413c:	58024400 	.word	0x58024400

90004140 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90004140:	4b0a      	ldr	r3, [pc, #40]	@ (9000416c <HAL_CRC_MspInit+0x2c>)
90004142:	6802      	ldr	r2, [r0, #0]
90004144:	429a      	cmp	r2, r3
90004146:	d000      	beq.n	9000414a <HAL_CRC_MspInit+0xa>
90004148:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
9000414a:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
9000414e:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90004150:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004154:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90004158:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000415c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90004160:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90004164:	9301      	str	r3, [sp, #4]
90004166:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
90004168:	b002      	add	sp, #8
9000416a:	4770      	bx	lr
9000416c:	58024c00 	.word	0x58024c00

90004170 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90004170:	4b0f      	ldr	r3, [pc, #60]	@ (900041b0 <HAL_DMA2D_MspInit+0x40>)
90004172:	6802      	ldr	r2, [r0, #0]
90004174:	429a      	cmp	r2, r3
90004176:	d000      	beq.n	9000417a <HAL_DMA2D_MspInit+0xa>
90004178:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000417a:	4b0e      	ldr	r3, [pc, #56]	@ (900041b4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000417c:	2200      	movs	r2, #0
9000417e:	2105      	movs	r1, #5
90004180:	205a      	movs	r0, #90	@ 0x5a
{
90004182:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004184:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90004188:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000418a:	f044 0410 	orr.w	r4, r4, #16
9000418e:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90004192:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90004196:	f003 0310 	and.w	r3, r3, #16
9000419a:	9301      	str	r3, [sp, #4]
9000419c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000419e:	f003 fa1f 	bl	900075e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900041a2:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
900041a4:	b002      	add	sp, #8
900041a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900041aa:	f003 ba55 	b.w	90007658 <HAL_NVIC_EnableIRQ>
900041ae:	bf00      	nop
900041b0:	52001000 	.word	0x52001000
900041b4:	58024400 	.word	0x58024400

900041b8 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
900041b8:	4b3f      	ldr	r3, [pc, #252]	@ (900042b8 <HAL_JPEG_MspInit+0x100>)
900041ba:	6802      	ldr	r2, [r0, #0]
900041bc:	429a      	cmp	r2, r3
900041be:	d000      	beq.n	900041c2 <HAL_JPEG_MspInit+0xa>
900041c0:	4770      	bx	lr
{
900041c2:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
900041c4:	4b3d      	ldr	r3, [pc, #244]	@ (900042bc <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900041c6:	2211      	movs	r2, #17
900041c8:	4e3d      	ldr	r6, [pc, #244]	@ (900042c0 <HAL_JPEG_MspInit+0x108>)
{
900041ca:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041cc:	4d3d      	ldr	r5, [pc, #244]	@ (900042c4 <HAL_JPEG_MspInit+0x10c>)
900041ce:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900041d0:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900041d2:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900041d4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900041d8:	493b      	ldr	r1, [pc, #236]	@ (900042c8 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900041da:	f042 0220 	orr.w	r2, r2, #32
900041de:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900041e2:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900041e4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900041e8:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900041ea:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900041ee:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
900041f0:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041f2:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
900041f4:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
900041f6:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900041f8:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041fc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004200:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004202:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004204:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004208:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000420c:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000420e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90004212:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90004216:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000421a:	2313      	movs	r3, #19
9000421c:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000421e:	2302      	movs	r3, #2
90004220:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004222:	f006 fd13 	bl	9000ac4c <HAL_MDMA_Init>
90004226:	2800      	cmp	r0, #0
90004228:	d13a      	bne.n	900042a0 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000422a:	2200      	movs	r2, #0
9000422c:	4824      	ldr	r0, [pc, #144]	@ (900042c0 <HAL_JPEG_MspInit+0x108>)
9000422e:	4611      	mov	r1, r2
90004230:	f006 fdaa 	bl	9000ad88 <HAL_MDMA_ConfigPostRequestMask>
90004234:	2800      	cmp	r0, #0
90004236:	d13c      	bne.n	900042b2 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004238:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000423a:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000423c:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000423e:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004240:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90004242:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004244:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004248:	4920      	ldr	r1, [pc, #128]	@ (900042cc <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000424a:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
9000424c:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
9000424e:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004250:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004252:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004256:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000425a:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000425c:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000425e:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004262:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004264:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004268:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
9000426c:	4815      	ldr	r0, [pc, #84]	@ (900042c4 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000426e:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004270:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004272:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004274:	f006 fcea 	bl	9000ac4c <HAL_MDMA_Init>
90004278:	b9c0      	cbnz	r0, 900042ac <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
9000427a:	2200      	movs	r2, #0
9000427c:	4811      	ldr	r0, [pc, #68]	@ (900042c4 <HAL_JPEG_MspInit+0x10c>)
9000427e:	4611      	mov	r1, r2
90004280:	f006 fd82 	bl	9000ad88 <HAL_MDMA_ConfigPostRequestMask>
90004284:	b978      	cbnz	r0, 900042a6 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004286:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004288:	2200      	movs	r2, #0
9000428a:	2105      	movs	r1, #5
9000428c:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000428e:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004290:	f003 f9a6 	bl	900075e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004294:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
90004296:	b002      	add	sp, #8
90004298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
9000429c:	f003 b9dc 	b.w	90007658 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900042a0:	f7ff ff32 	bl	90004108 <Error_Handler>
900042a4:	e7c1      	b.n	9000422a <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900042a6:	f7ff ff2f 	bl	90004108 <Error_Handler>
900042aa:	e7ec      	b.n	90004286 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900042ac:	f7ff ff2c 	bl	90004108 <Error_Handler>
900042b0:	e7e3      	b.n	9000427a <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900042b2:	f7ff ff29 	bl	90004108 <Error_Handler>
900042b6:	e7bf      	b.n	90004238 <HAL_JPEG_MspInit+0x80>
900042b8:	52003000 	.word	0x52003000
900042bc:	58024400 	.word	0x58024400
900042c0:	240075d4 	.word	0x240075d4
900042c4:	24007568 	.word	0x24007568
900042c8:	52000200 	.word	0x52000200
900042cc:	520001c0 	.word	0x520001c0

900042d0 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900042d0:	b570      	push	{r4, r5, r6, lr}
900042d2:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900042d4:	2100      	movs	r1, #0
{
900042d6:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900042d8:	22c0      	movs	r2, #192	@ 0xc0
900042da:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900042dc:	9109      	str	r1, [sp, #36]	@ 0x24
900042de:	e9cd 1105 	strd	r1, r1, [sp, #20]
900042e2:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900042e6:	f027 fbf7 	bl	9002bad8 <memset>
  if(hltdc->Instance==LTDC)
900042ea:	4b4a      	ldr	r3, [pc, #296]	@ (90004414 <HAL_LTDC_MspInit+0x144>)
900042ec:	6822      	ldr	r2, [r4, #0]
900042ee:	429a      	cmp	r2, r3
900042f0:	d001      	beq.n	900042f6 <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
900042f2:	b03a      	add	sp, #232	@ 0xe8
900042f4:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900042f6:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900042f8:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900042fa:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
900042fe:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004300:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004302:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004304:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004306:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004308:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000430a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000430e:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004310:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004312:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004316:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000431a:	f007 fdf1 	bl	9000bf00 <HAL_RCCEx_PeriphCLKConfig>
9000431e:	2800      	cmp	r0, #0
90004320:	d174      	bne.n	9000440c <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90004322:	4b3d      	ldr	r3, [pc, #244]	@ (90004418 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004324:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004326:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004328:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
9000432a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000432e:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004330:	483a      	ldr	r0, [pc, #232]	@ (9000441c <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90004332:	f042 0208 	orr.w	r2, r2, #8
90004336:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
9000433a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
9000433e:	f002 0208 	and.w	r2, r2, #8
90004342:	9200      	str	r2, [sp, #0]
90004344:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90004346:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000434a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000434e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004352:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004356:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
9000435a:	9201      	str	r2, [sp, #4]
9000435c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000435e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004362:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004366:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000436a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000436e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90004372:	9202      	str	r2, [sp, #8]
90004374:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90004376:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000437a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
9000437e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004382:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004386:	f402 7200 	and.w	r2, r2, #512	@ 0x200
9000438a:	9203      	str	r2, [sp, #12]
9000438c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000438e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004392:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90004396:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000439a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000439e:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900043a0:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
900043a2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900043a6:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900043a8:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900043aa:	9304      	str	r3, [sp, #16]
900043ac:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900043ae:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900043b2:	f003 fdf5 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900043b6:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900043ba:	a905      	add	r1, sp, #20
900043bc:	4818      	ldr	r0, [pc, #96]	@ (90004420 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900043be:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900043c0:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900043c4:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900043c8:	f003 fdea 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900043cc:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900043d0:	a905      	add	r1, sp, #20
900043d2:	4814      	ldr	r0, [pc, #80]	@ (90004424 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900043d4:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900043d6:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900043da:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900043de:	f003 fddf 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900043e2:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900043e6:	a905      	add	r1, sp, #20
900043e8:	480f      	ldr	r0, [pc, #60]	@ (90004428 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900043ea:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900043ec:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900043f0:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900043f4:	f003 fdd4 	bl	90007fa0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900043f8:	462a      	mov	r2, r5
900043fa:	2105      	movs	r1, #5
900043fc:	2058      	movs	r0, #88	@ 0x58
900043fe:	f003 f8ef 	bl	900075e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90004402:	2058      	movs	r0, #88	@ 0x58
90004404:	f003 f928 	bl	90007658 <HAL_NVIC_EnableIRQ>
}
90004408:	b03a      	add	sp, #232	@ 0xe8
9000440a:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
9000440c:	f7ff fe7c 	bl	90004108 <Error_Handler>
90004410:	e787      	b.n	90004322 <HAL_LTDC_MspInit+0x52>
90004412:	bf00      	nop
90004414:	50001000 	.word	0x50001000
90004418:	58024400 	.word	0x58024400
9000441c:	58022800 	.word	0x58022800
90004420:	58022000 	.word	0x58022000
90004424:	58022400 	.word	0x58022400
90004428:	58021c00 	.word	0x58021c00
9000442c:	00000000 	.word	0x00000000

90004430 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004430:	b510      	push	{r4, lr}
90004432:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004434:	2100      	movs	r1, #0
{
90004436:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004438:	22c0      	movs	r2, #192	@ 0xc0
9000443a:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000443c:	9106      	str	r1, [sp, #24]
9000443e:	e9cd 1102 	strd	r1, r1, [sp, #8]
90004442:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004446:	f027 fb47 	bl	9002bad8 <memset>
  if(huart->Instance==USART1)
9000444a:	4b25      	ldr	r3, [pc, #148]	@ (900044e0 <HAL_UART_MspInit+0xb0>)
9000444c:	6822      	ldr	r2, [r4, #0]
9000444e:	429a      	cmp	r2, r3
90004450:	d001      	beq.n	90004456 <HAL_UART_MspInit+0x26>

    /* USER CODE END USART1_MspInit 1 */

  }

}
90004452:	b038      	add	sp, #224	@ 0xe0
90004454:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
90004456:	2201      	movs	r2, #1
90004458:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000445a:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
9000445c:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004460:	f007 fd4e 	bl	9000bf00 <HAL_RCCEx_PeriphCLKConfig>
90004464:	bb80      	cbnz	r0, 900044c8 <HAL_UART_MspInit+0x98>
    __HAL_RCC_USART1_CLK_ENABLE();
90004466:	4b1f      	ldr	r3, [pc, #124]	@ (900044e4 <HAL_UART_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90004468:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000446a:	a902      	add	r1, sp, #8
9000446c:	481e      	ldr	r0, [pc, #120]	@ (900044e8 <HAL_UART_MspInit+0xb8>)
    __HAL_RCC_USART1_CLK_ENABLE();
9000446e:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
90004472:	f042 0210 	orr.w	r2, r2, #16
90004476:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
9000447a:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
9000447e:	f002 0210 	and.w	r2, r2, #16
90004482:	9200      	str	r2, [sp, #0]
90004484:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90004486:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000448a:	f042 0202 	orr.w	r2, r2, #2
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
9000448e:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 900044d0 <HAL_UART_MspInit+0xa0>
    __HAL_RCC_GPIOB_CLK_ENABLE();
90004492:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004496:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
9000449a:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
9000449c:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
900044a0:	ed8d 7b02 	vstr	d7, [sp, #8]
900044a4:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 900044d8 <HAL_UART_MspInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
900044a8:	9301      	str	r3, [sp, #4]
900044aa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
900044ac:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
900044b0:	f003 fd76 	bl	90007fa0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
900044b4:	2200      	movs	r2, #0
900044b6:	2105      	movs	r1, #5
900044b8:	2025      	movs	r0, #37	@ 0x25
900044ba:	f003 f891 	bl	900075e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
900044be:	2025      	movs	r0, #37	@ 0x25
900044c0:	f003 f8ca 	bl	90007658 <HAL_NVIC_EnableIRQ>
}
900044c4:	b038      	add	sp, #224	@ 0xe0
900044c6:	bd10      	pop	{r4, pc}
      Error_Handler();
900044c8:	f7ff fe1e 	bl	90004108 <Error_Handler>
900044cc:	e7cb      	b.n	90004466 <HAL_UART_MspInit+0x36>
900044ce:	bf00      	nop
900044d0:	000000c0 	.word	0x000000c0
900044d4:	00000002 	.word	0x00000002
	...
900044e0:	40011000 	.word	0x40011000
900044e4:	58024400 	.word	0x58024400
900044e8:	58020400 	.word	0x58020400

900044ec <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900044ec:	4836      	ldr	r0, [pc, #216]	@ (900045c8 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900044ee:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900044f0:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900044f2:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900044f4:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900044f6:	e9cd 3302 	strd	r3, r3, [sp, #8]
900044fa:	e9cd 3304 	strd	r3, r3, [sp, #16]
900044fe:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004500:	b109      	cbz	r1, 90004506 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90004502:	b038      	add	sp, #224	@ 0xe0
90004504:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90004506:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004508:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
9000450a:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000450c:	a80a      	add	r0, sp, #40	@ 0x28
9000450e:	f027 fae3 	bl	9002bad8 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004512:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90004516:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004518:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000451a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000451e:	f007 fcef 	bl	9000bf00 <HAL_RCCEx_PeriphCLKConfig>
90004522:	2800      	cmp	r0, #0
90004524:	d14c      	bne.n	900045c0 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90004526:	4b29      	ldr	r3, [pc, #164]	@ (900045cc <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004528:	f64f 7083 	movw	r0, #65411	@ 0xff83
9000452c:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000452e:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004530:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004534:	2600      	movs	r6, #0
90004536:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004538:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000453c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004540:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004544:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90004546:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000454a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
9000454e:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004550:	a902      	add	r1, sp, #8
90004552:	481f      	ldr	r0, [pc, #124]	@ (900045d0 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90004554:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004556:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000455a:	f003 fd21 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000455e:	f248 1233 	movw	r2, #33075	@ 0x8133
90004562:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90004564:	a902      	add	r1, sp, #8
90004566:	481b      	ldr	r0, [pc, #108]	@ (900045d4 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004568:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000456a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000456e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90004572:	f003 fd15 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004576:	f24c 7203 	movw	r2, #50947	@ 0xc703
9000457a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000457c:	a902      	add	r1, sp, #8
9000457e:	4816      	ldr	r0, [pc, #88]	@ (900045d8 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004580:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004582:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004586:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000458a:	f003 fd09 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000458e:	f64f 023f 	movw	r2, #63551	@ 0xf83f
90004592:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90004594:	a902      	add	r1, sp, #8
90004596:	4811      	ldr	r0, [pc, #68]	@ (900045dc <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004598:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000459a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000459e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900045a2:	f003 fcfd 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900045a6:	22e0      	movs	r2, #224	@ 0xe0
900045a8:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900045aa:	a902      	add	r1, sp, #8
900045ac:	480c      	ldr	r0, [pc, #48]	@ (900045e0 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900045ae:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900045b0:	e9cd 6704 	strd	r6, r7, [sp, #16]
900045b4:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900045b8:	f003 fcf2 	bl	90007fa0 <HAL_GPIO_Init>
}
900045bc:	b038      	add	sp, #224	@ 0xe0
900045be:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900045c0:	f7ff fda2 	bl	90004108 <Error_Handler>
900045c4:	e7af      	b.n	90004526 <HAL_SDRAM_MspInit+0x3a>
900045c6:	bf00      	nop
900045c8:	24007728 	.word	0x24007728
900045cc:	58024400 	.word	0x58024400
900045d0:	58021000 	.word	0x58021000
900045d4:	58021800 	.word	0x58021800
900045d8:	58020c00 	.word	0x58020c00
900045dc:	58021400 	.word	0x58021400
900045e0:	58021c00 	.word	0x58021c00

900045e4 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900045e4:	4b13      	ldr	r3, [pc, #76]	@ (90004634 <HAL_SDRAM_MspDeInit+0x50>)
900045e6:	681a      	ldr	r2, [r3, #0]
900045e8:	b102      	cbz	r2, 900045ec <HAL_SDRAM_MspDeInit+0x8>
900045ea:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900045ec:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900045ee:	4a12      	ldr	r2, [pc, #72]	@ (90004638 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900045f0:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045f2:	f64f 7183 	movw	r1, #65411	@ 0xff83
900045f6:	4811      	ldr	r0, [pc, #68]	@ (9000463c <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900045f8:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900045fa:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900045fe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90004602:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004606:	f003 fed1 	bl	900083ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000460a:	f248 1133 	movw	r1, #33075	@ 0x8133
9000460e:	480c      	ldr	r0, [pc, #48]	@ (90004640 <HAL_SDRAM_MspDeInit+0x5c>)
90004610:	f003 fecc 	bl	900083ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004614:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004618:	480a      	ldr	r0, [pc, #40]	@ (90004644 <HAL_SDRAM_MspDeInit+0x60>)
9000461a:	f003 fec7 	bl	900083ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000461e:	f64f 013f 	movw	r1, #63551	@ 0xf83f
90004622:	4809      	ldr	r0, [pc, #36]	@ (90004648 <HAL_SDRAM_MspDeInit+0x64>)
90004624:	f003 fec2 	bl	900083ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004628:	21e0      	movs	r1, #224	@ 0xe0
9000462a:	4808      	ldr	r0, [pc, #32]	@ (9000464c <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
9000462c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004630:	f003 bebc 	b.w	900083ac <HAL_GPIO_DeInit>
90004634:	24007724 	.word	0x24007724
90004638:	58024400 	.word	0x58024400
9000463c:	58021000 	.word	0x58021000
90004640:	58021800 	.word	0x58021800
90004644:	58020c00 	.word	0x58020c00
90004648:	58021400 	.word	0x58021400
9000464c:	58021c00 	.word	0x58021c00

90004650 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004650:	280f      	cmp	r0, #15
90004652:	d901      	bls.n	90004658 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90004654:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90004656:	4770      	bx	lr
{
90004658:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
9000465a:	4601      	mov	r1, r0
{
9000465c:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
9000465e:	2200      	movs	r2, #0
90004660:	4604      	mov	r4, r0
90004662:	2036      	movs	r0, #54	@ 0x36
90004664:	f002 ffbc 	bl	900075e0 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004668:	2036      	movs	r0, #54	@ 0x36
9000466a:	f002 fff5 	bl	90007658 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000466e:	4b1b      	ldr	r3, [pc, #108]	@ (900046dc <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004670:	4a1b      	ldr	r2, [pc, #108]	@ (900046e0 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004672:	4669      	mov	r1, sp
90004674:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
90004676:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004678:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
9000467c:	f042 0210 	orr.w	r2, r2, #16
90004680:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004684:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004688:	f003 0310 	and.w	r3, r3, #16
9000468c:	9301      	str	r3, [sp, #4]
9000468e:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004690:	f007 fb2a 	bl	9000bce8 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90004694:	9b07      	ldr	r3, [sp, #28]
90004696:	b9c3      	cbnz	r3, 900046ca <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004698:	f007 fa96 	bl	9000bbc8 <HAL_RCC_GetPCLK1Freq>
9000469c:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000469e:	4911      	ldr	r1, [pc, #68]	@ (900046e4 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
900046a0:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900046a2:	4c11      	ldr	r4, [pc, #68]	@ (900046e8 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900046a4:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
900046a8:	4d10      	ldr	r5, [pc, #64]	@ (900046ec <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900046aa:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900046ae:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900046b0:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900046b2:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900046b4:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900046b6:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900046b8:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900046bc:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900046be:	f008 fd1b 	bl	9000d0f8 <HAL_TIM_Base_Init>
900046c2:	b130      	cbz	r0, 900046d2 <HAL_InitTick+0x82>
    return HAL_ERROR;
900046c4:	2001      	movs	r0, #1
}
900046c6:	b00b      	add	sp, #44	@ 0x2c
900046c8:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900046ca:	f007 fa7d 	bl	9000bbc8 <HAL_RCC_GetPCLK1Freq>
900046ce:	0043      	lsls	r3, r0, #1
900046d0:	e7e5      	b.n	9000469e <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
900046d2:	4620      	mov	r0, r4
900046d4:	f008 fdb6 	bl	9000d244 <HAL_TIM_Base_Start_IT>
900046d8:	e7f5      	b.n	900046c6 <HAL_InitTick+0x76>
900046da:	bf00      	nop
900046dc:	58024400 	.word	0x58024400
900046e0:	24000080 	.word	0x24000080
900046e4:	431bde83 	.word	0x431bde83
900046e8:	2400772c 	.word	0x2400772c
900046ec:	40001000 	.word	0x40001000

900046f0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900046f0:	4770      	bx	lr
900046f2:	bf00      	nop

900046f4 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900046f4:	e7fe      	b.n	900046f4 <HardFault_Handler>
900046f6:	bf00      	nop

900046f8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900046f8:	e7fe      	b.n	900046f8 <MemManage_Handler>
900046fa:	bf00      	nop

900046fc <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900046fc:	e7fe      	b.n	900046fc <BusFault_Handler>
900046fe:	bf00      	nop

90004700 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004700:	e7fe      	b.n	90004700 <UsageFault_Handler>
90004702:	bf00      	nop

90004704 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90004704:	4770      	bx	lr
90004706:	bf00      	nop

90004708 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
90004708:	4801      	ldr	r0, [pc, #4]	@ (90004710 <USART1_IRQHandler+0x8>)
9000470a:	f009 b9a7 	b.w	9000da5c <HAL_UART_IRQHandler>
9000470e:	bf00      	nop
90004710:	2400742c 	.word	0x2400742c

90004714 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90004714:	4801      	ldr	r0, [pc, #4]	@ (9000471c <TIM6_DAC_IRQHandler+0x8>)
90004716:	f008 bdef 	b.w	9000d2f8 <HAL_TIM_IRQHandler>
9000471a:	bf00      	nop
9000471c:	2400772c 	.word	0x2400772c

90004720 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004720:	4801      	ldr	r0, [pc, #4]	@ (90004728 <LTDC_IRQHandler+0x8>)
90004722:	f006 b94d 	b.w	9000a9c0 <HAL_LTDC_IRQHandler>
90004726:	bf00      	nop
90004728:	240074c0 	.word	0x240074c0

9000472c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
9000472c:	4801      	ldr	r0, [pc, #4]	@ (90004734 <DMA2D_IRQHandler+0x8>)
9000472e:	f003 bb39 	b.w	90007da4 <HAL_DMA2D_IRQHandler>
90004732:	bf00      	nop
90004734:	24007698 	.word	0x24007698

90004738 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004738:	4801      	ldr	r0, [pc, #4]	@ (90004740 <JPEG_IRQHandler+0x8>)
9000473a:	f006 b845 	b.w	9000a7c8 <HAL_JPEG_IRQHandler>
9000473e:	bf00      	nop
90004740:	24007640 	.word	0x24007640

90004744 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004744:	4804      	ldr	r0, [pc, #16]	@ (90004758 <MDMA_IRQHandler+0x14>)
{
90004746:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004748:	f006 fc04 	bl	9000af54 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000474c:	4803      	ldr	r0, [pc, #12]	@ (9000475c <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000474e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004752:	f006 bbff 	b.w	9000af54 <HAL_MDMA_IRQHandler>
90004756:	bf00      	nop
90004758:	24007568 	.word	0x24007568
9000475c:	240075d4 	.word	0x240075d4

90004760 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004760:	2001      	movs	r0, #1
90004762:	4770      	bx	lr

90004764 <_kill>:

int _kill(int pid, int sig)
{
90004764:	b508      	push	{r3, lr}
	errno = EINVAL;
90004766:	f027 fac9 	bl	9002bcfc <__errno>
9000476a:	2216      	movs	r2, #22
9000476c:	4603      	mov	r3, r0
	return -1;
}
9000476e:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90004772:	601a      	str	r2, [r3, #0]
}
90004774:	bd08      	pop	{r3, pc}
90004776:	bf00      	nop

90004778 <_exit>:

void _exit (int status)
{
90004778:	b508      	push	{r3, lr}
	errno = EINVAL;
9000477a:	f027 fabf 	bl	9002bcfc <__errno>
9000477e:	2316      	movs	r3, #22
90004780:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90004782:	e7fe      	b.n	90004782 <_exit+0xa>

90004784 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004784:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004786:	1e16      	subs	r6, r2, #0
90004788:	dd07      	ble.n	9000479a <_read+0x16>
9000478a:	460c      	mov	r4, r1
9000478c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000478e:	f3af 8000 	nop.w
90004792:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004796:	42a5      	cmp	r5, r4
90004798:	d1f9      	bne.n	9000478e <_read+0xa>
	}

return len;
}
9000479a:	4630      	mov	r0, r6
9000479c:	bd70      	pop	{r4, r5, r6, pc}
9000479e:	bf00      	nop

900047a0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900047a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900047a2:	1e16      	subs	r6, r2, #0
900047a4:	dd07      	ble.n	900047b6 <_write+0x16>
900047a6:	460c      	mov	r4, r1
900047a8:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
900047aa:	f814 0b01 	ldrb.w	r0, [r4], #1
900047ae:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900047b2:	42a5      	cmp	r5, r4
900047b4:	d1f9      	bne.n	900047aa <_write+0xa>
	}
	return len;
}
900047b6:	4630      	mov	r0, r6
900047b8:	bd70      	pop	{r4, r5, r6, pc}
900047ba:	bf00      	nop

900047bc <_close>:

int _close(int file)
{
	return -1;
}
900047bc:	f04f 30ff 	mov.w	r0, #4294967295
900047c0:	4770      	bx	lr
900047c2:	bf00      	nop

900047c4 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900047c4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
900047c8:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900047ca:	604b      	str	r3, [r1, #4]
}
900047cc:	4770      	bx	lr
900047ce:	bf00      	nop

900047d0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
900047d0:	2001      	movs	r0, #1
900047d2:	4770      	bx	lr

900047d4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900047d4:	2000      	movs	r0, #0
900047d6:	4770      	bx	lr

900047d8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
900047d8:	4a0c      	ldr	r2, [pc, #48]	@ (9000480c <_sbrk+0x34>)
{
900047da:	b508      	push	{r3, lr}
900047dc:	4603      	mov	r3, r0
	if (heap_end == 0)
900047de:	6810      	ldr	r0, [r2, #0]
900047e0:	b128      	cbz	r0, 900047ee <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
900047e2:	4403      	add	r3, r0
900047e4:	4669      	mov	r1, sp
900047e6:	428b      	cmp	r3, r1
900047e8:	d808      	bhi.n	900047fc <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900047ea:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900047ec:	bd08      	pop	{r3, pc}
		heap_end = &end;
900047ee:	4908      	ldr	r1, [pc, #32]	@ (90004810 <_sbrk+0x38>)
900047f0:	4608      	mov	r0, r1
900047f2:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900047f4:	4669      	mov	r1, sp
900047f6:	4403      	add	r3, r0
900047f8:	428b      	cmp	r3, r1
900047fa:	d9f6      	bls.n	900047ea <_sbrk+0x12>
		errno = ENOMEM;
900047fc:	f027 fa7e 	bl	9002bcfc <__errno>
90004800:	220c      	movs	r2, #12
90004802:	4603      	mov	r3, r0
		return (caddr_t) -1;
90004804:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004808:	601a      	str	r2, [r3, #0]
}
9000480a:	bd08      	pop	{r3, pc}
9000480c:	24007778 	.word	0x24007778
90004810:	24022610 	.word	0x24022610

90004814 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90004814:	4770      	bx	lr
90004816:	bf00      	nop

90004818 <_ZN23ApplicationFontProviderD0Ev>:
90004818:	b510      	push	{r4, lr}
9000481a:	4604      	mov	r4, r0
9000481c:	2104      	movs	r1, #4
9000481e:	f026 fb47 	bl	9002aeb0 <_ZdlPvj>
90004822:	4620      	mov	r0, r4
90004824:	bd10      	pop	{r4, pc}
90004826:	bf00      	nop

90004828 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90004828:	2901      	cmp	r1, #1
{
9000482a:	b508      	push	{r3, lr}
    switch (typography)
9000482c:	d00c      	beq.n	90004848 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000482e:	2902      	cmp	r1, #2
90004830:	d004      	beq.n	9000483c <_ZN23ApplicationFontProvider7getFontEt+0x14>
90004832:	b939      	cbnz	r1, 90004844 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
    {
    case Typography::DEFAULT:
        // calibri_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004834:	f001 fb42 	bl	90005ebc <_ZN17TypedTextDatabase8getFontsEv>
90004838:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000483a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
9000483c:	f001 fb3e 	bl	90005ebc <_ZN17TypedTextDatabase8getFontsEv>
90004840:	6880      	ldr	r0, [r0, #8]
}
90004842:	bd08      	pop	{r3, pc}
    switch (typography)
90004844:	2000      	movs	r0, #0
}
90004846:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004848:	f001 fb38 	bl	90005ebc <_ZN17TypedTextDatabase8getFontsEv>
9000484c:	6840      	ldr	r0, [r0, #4]
}
9000484e:	bd08      	pop	{r3, pc}

90004850 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004850:	4800      	ldr	r0, [pc, #0]	@ (90004854 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004852:	4770      	bx	lr
90004854:	9002e8e0 	.word	0x9002e8e0

90004858 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004858:	2003      	movs	r0, #3
9000485a:	4770      	bx	lr

9000485c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000485c:	b169      	cbz	r1, 9000487a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000485e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004860:	b530      	push	{r4, r5, lr}
90004862:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004864:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004866:	6895      	ldr	r5, [r2, #8]
90004868:	f10d 0303 	add.w	r3, sp, #3
9000486c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000486e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004870:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004874:	47a8      	blx	r5
        return glyph;
    }
90004876:	b003      	add	sp, #12
90004878:	bd30      	pop	{r4, r5, pc}
            return 0;
9000487a:	4608      	mov	r0, r1
    }
9000487c:	4770      	bx	lr
9000487e:	bf00      	nop

90004880 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004880:	89c0      	ldrh	r0, [r0, #14]
90004882:	4770      	bx	lr

90004884 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004884:	8a00      	ldrh	r0, [r0, #16]
90004886:	4770      	bx	lr

90004888 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004888:	88c0      	ldrh	r0, [r0, #6]
9000488a:	4770      	bx	lr

9000488c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000488c:	8880      	ldrh	r0, [r0, #4]
9000488e:	4770      	bx	lr

90004890 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004890:	7a80      	ldrb	r0, [r0, #10]
    }
90004892:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004896:	4770      	bx	lr

90004898 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004898:	7a80      	ldrb	r0, [r0, #10]
    }
9000489a:	09c0      	lsrs	r0, r0, #7
9000489c:	4770      	bx	lr
9000489e:	bf00      	nop

900048a0 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
900048a0:	2000      	movs	r0, #0
900048a2:	4770      	bx	lr

900048a4 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
900048a4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 900048ac <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
900048a8:	4770      	bx	lr
900048aa:	bf00      	nop
900048ac:	00000000 	.word	0x00000000

900048b0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900048b0:	4770      	bx	lr
900048b2:	bf00      	nop

900048b4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900048b4:	b510      	push	{r4, lr}
900048b6:	4604      	mov	r4, r0
    }
900048b8:	2108      	movs	r1, #8
900048ba:	f026 faf9 	bl	9002aeb0 <_ZdlPvj>
900048be:	4620      	mov	r0, r4
900048c0:	bd10      	pop	{r4, pc}
900048c2:	bf00      	nop

900048c4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900048c4:	4770      	bx	lr
900048c6:	bf00      	nop

900048c8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900048c8:	f500 7398 	add.w	r3, r0, #304	@ 0x130
900048cc:	6808      	ldr	r0, [r1, #0]
900048ce:	6849      	ldr	r1, [r1, #4]
900048d0:	c303      	stmia	r3!, {r0, r1}
    }
900048d2:	4770      	bx	lr

900048d4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
900048d4:	4770      	bx	lr
900048d6:	bf00      	nop

900048d8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
900048d8:	4770      	bx	lr
900048da:	bf00      	nop

900048dc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900048dc:	6041      	str	r1, [r0, #4]
    }
900048de:	4770      	bx	lr

900048e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900048e0:	4770      	bx	lr
900048e2:	bf00      	nop

900048e4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900048e4:	4770      	bx	lr
900048e6:	bf00      	nop

900048e8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
900048e8:	4905      	ldr	r1, [pc, #20]	@ (90004900 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900048ea:	2200      	movs	r2, #0
// Home_Screen

void FrontendApplicationBase::gotoHome_ScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHome_ScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900048ec:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900048f0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900048f4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900048f8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoHome_ScreenScreenNoTransition();
    }
900048fc:	4770      	bx	lr
900048fe:	bf00      	nop
90004900:	90004a4d 	.word	0x90004a4d

90004904 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004904:	2301      	movs	r3, #1
90004906:	7203      	strb	r3, [r0, #8]
    }
90004908:	4770      	bx	lr
9000490a:	bf00      	nop

9000490c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
9000490c:	4770      	bx	lr
9000490e:	bf00      	nop

90004910 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004910:	4770      	bx	lr
90004912:	bf00      	nop

90004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
    {
        Transition::init();
    }
90004914:	4770      	bx	lr
90004916:	bf00      	nop

90004918 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004918:	1d01      	adds	r1, r0, #4
9000491a:	c90e      	ldmia	r1, {r1, r2, r3}
9000491c:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004920:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004924:	07db      	lsls	r3, r3, #31
90004926:	d502      	bpl.n	9000492e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004928:	f851 300c 	ldr.w	r3, [r1, ip]
9000492c:	589a      	ldr	r2, [r3, r2]
9000492e:	4710      	bx	r2

90004930 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004930:	6843      	ldr	r3, [r0, #4]
90004932:	b13b      	cbz	r3, 90004944 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004934:	6883      	ldr	r3, [r0, #8]
90004936:	b10b      	cbz	r3, 9000493c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004938:	2001      	movs	r0, #1
    }
9000493a:	4770      	bx	lr
9000493c:	68c0      	ldr	r0, [r0, #12]
9000493e:	f000 0001 	and.w	r0, r0, #1
90004942:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004944:	4618      	mov	r0, r3
90004946:	4770      	bx	lr

90004948 <_ZN8touchgfx12NoTransitionD0Ev>:
90004948:	b510      	push	{r4, lr}
9000494a:	4604      	mov	r4, r0
9000494c:	210c      	movs	r1, #12
9000494e:	f026 faaf 	bl	9002aeb0 <_ZdlPvj>
90004952:	4620      	mov	r0, r4
90004954:	bd10      	pop	{r4, pc}
90004956:	bf00      	nop

90004958 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
90004958:	b510      	push	{r4, lr}
9000495a:	4604      	mov	r4, r0
9000495c:	2114      	movs	r1, #20
9000495e:	f026 faa7 	bl	9002aeb0 <_ZdlPvj>
90004962:	4620      	mov	r0, r4
90004964:	bd10      	pop	{r4, pc}
90004966:	bf00      	nop

90004968 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004968:	b510      	push	{r4, lr}
9000496a:	4604      	mov	r4, r0
9000496c:	2110      	movs	r1, #16
9000496e:	f026 fa9f 	bl	9002aeb0 <_ZdlPvj>
90004972:	4620      	mov	r0, r4
90004974:	bd10      	pop	{r4, pc}
90004976:	bf00      	nop

90004978 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004978:	b510      	push	{r4, lr}
9000497a:	4604      	mov	r4, r0
9000497c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004980:	f026 fa96 	bl	9002aeb0 <_ZdlPvj>
90004984:	4620      	mov	r0, r4
90004986:	bd10      	pop	{r4, pc}

90004988 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004988:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000498a:	f013 fbed 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
9000498e:	6803      	ldr	r3, [r0, #0]
    }
90004990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004994:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004996:	4718      	bx	r3

90004998 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:

    virtual void invalidate()
90004998:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the WipeTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
9000499a:	f013 fbe5 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
9000499e:	6803      	ldr	r3, [r0, #0]
    }
900049a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
900049a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900049a6:	4718      	bx	r3

900049a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900049a8:	b510      	push	{r4, lr}
900049aa:	4604      	mov	r4, r0
        animationCounter++;
900049ac:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
900049ae:	b082      	sub	sp, #8
        animationCounter++;
900049b0:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900049b2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
900049b4:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900049b6:	4298      	cmp	r0, r3
        animationCounter++;
900049b8:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
900049ba:	d905      	bls.n	900049c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
900049bc:	2201      	movs	r2, #1
            animationCounter = 0;
900049be:	2300      	movs	r3, #0
            done = true;
900049c0:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
900049c2:	72a3      	strb	r3, [r4, #10]
    }
900049c4:	b002      	add	sp, #8
900049c6:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900049c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900049cc:	2100      	movs	r1, #0
900049ce:	f015 fdd3 	bl	9001a578 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900049d2:	07c3      	lsls	r3, r0, #31
900049d4:	d429      	bmi.n	90004a2a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900049d6:	b281      	uxth	r1, r0
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
900049d8:	4b19      	ldr	r3, [pc, #100]	@ (90004a40 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
900049da:	f04f 0c00 	mov.w	ip, #0
                rect.width = calculatedValue - prevCalculatedValue;
900049de:	8a22      	ldrh	r2, [r4, #16]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
900049e0:	881b      	ldrh	r3, [r3, #0]
                rect.width = calculatedValue - prevCalculatedValue;
900049e2:	1a8a      	subs	r2, r1, r2
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900049e4:	81e0      	strh	r0, [r4, #14]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
900049e6:	1a5b      	subs	r3, r3, r1
                rect.height = HAL::DISPLAY_HEIGHT;
900049e8:	4916      	ldr	r1, [pc, #88]	@ (90004a44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
                rect.width = calculatedValue - prevCalculatedValue;
900049ea:	f8ad 2004 	strh.w	r2, [sp, #4]
                rect.height = HAL::DISPLAY_HEIGHT;
900049ee:	880a      	ldrh	r2, [r1, #0]
        prevCalculatedValue = calculatedValue;
900049f0:	8220      	strh	r0, [r4, #16]
900049f2:	f8ad c002 	strh.w	ip, [sp, #2]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
900049f6:	f8ad 3000 	strh.w	r3, [sp]
                rect.height = HAL::DISPLAY_HEIGHT;
900049fa:	f8ad 2006 	strh.w	r2, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
900049fe:	f013 fbb3 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004a02:	ab02      	add	r3, sp, #8
90004a04:	e913 0006 	ldmdb	r3, {r1, r2}
90004a08:	6803      	ldr	r3, [r0, #0]
90004a0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90004a0c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90004a0e:	7aa3      	ldrb	r3, [r4, #10]
90004a10:	2b01      	cmp	r3, #1
90004a12:	d1d7      	bne.n	900049c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
90004a14:	4b0c      	ldr	r3, [pc, #48]	@ (90004a48 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa0>)
90004a16:	781b      	ldrb	r3, [r3, #0]
90004a18:	2b00      	cmp	r3, #0
90004a1a:	d0d3      	beq.n	900049c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90004a1c:	f013 fba4 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
    }
90004a20:	b002      	add	sp, #8
90004a22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90004a26:	f013 bba5 	b.w	90018174 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004a2a:	2800      	cmp	r0, #0
90004a2c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90004a30:	bfc8      	it	gt
90004a32:	2301      	movgt	r3, #1
90004a34:	fa13 f080 	uxtah	r0, r3, r0
90004a38:	b281      	uxth	r1, r0
90004a3a:	b200      	sxth	r0, r0
90004a3c:	e7cc      	b.n	900049d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x30>
90004a3e:	bf00      	nop
90004a40:	240218c0 	.word	0x240218c0
90004a44:	240218c2 	.word	0x240218c2
90004a48:	240218ca 	.word	0x240218ca

90004a4c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoHome_ScreenScreenNoTransitionImpl()
{
90004a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Home_ScreenView, Home_ScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004a50:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004a54:	4607      	mov	r7, r0
90004a56:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004a58:	68b0      	ldr	r0, [r6, #8]
90004a5a:	6803      	ldr	r3, [r0, #0]
90004a5c:	6a1b      	ldr	r3, [r3, #32]
90004a5e:	4798      	blx	r3
90004a60:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
90004a64:	f0c0 809d 	bcc.w	90004ba2 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004a68:	6870      	ldr	r0, [r6, #4]
90004a6a:	6803      	ldr	r3, [r0, #0]
90004a6c:	6a1b      	ldr	r3, [r3, #32]
90004a6e:	4798      	blx	r3
90004a70:	280f      	cmp	r0, #15
90004a72:	f240 80a2 	bls.w	90004bba <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004a76:	68f0      	ldr	r0, [r6, #12]
90004a78:	6803      	ldr	r3, [r0, #0]
90004a7a:	6a1b      	ldr	r3, [r3, #32]
90004a7c:	4798      	blx	r3
90004a7e:	280b      	cmp	r0, #11
90004a80:	f240 8095 	bls.w	90004bae <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004a84:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004bec <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004a88:	f013 fb6e 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004a8c:	3004      	adds	r0, #4
90004a8e:	f013 fbb8 	bl	90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004a92:	f8d9 0000 	ldr.w	r0, [r9]
90004a96:	b130      	cbz	r0, 90004aa6 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004a98:	6803      	ldr	r3, [r0, #0]
90004a9a:	494b      	ldr	r1, [pc, #300]	@ (90004bc8 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x17c>)
90004a9c:	68da      	ldr	r2, [r3, #12]
90004a9e:	428a      	cmp	r2, r1
90004aa0:	d178      	bne.n	90004b94 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004aa2:	681b      	ldr	r3, [r3, #0]
90004aa4:	4798      	blx	r3
    if (*currentScreen)
90004aa6:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004bf0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x1a4>
90004aaa:	f8d8 0000 	ldr.w	r0, [r8]
90004aae:	2800      	cmp	r0, #0
90004ab0:	d062      	beq.n	90004b78 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004ab2:	6803      	ldr	r3, [r0, #0]
90004ab4:	695b      	ldr	r3, [r3, #20]
90004ab6:	4798      	blx	r3
    if (*currentPresenter)
90004ab8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004abc:	2800      	cmp	r0, #0
90004abe:	d056      	beq.n	90004b6e <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004ac0:	6803      	ldr	r3, [r0, #0]
90004ac2:	685b      	ldr	r3, [r3, #4]
90004ac4:	4798      	blx	r3
    if (*currentScreen)
90004ac6:	f8d8 0000 	ldr.w	r0, [r8]
90004aca:	b110      	cbz	r0, 90004ad2 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004acc:	6803      	ldr	r3, [r0, #0]
90004ace:	681b      	ldr	r3, [r3, #0]
90004ad0:	4798      	blx	r3
    if (*currentPresenter)
90004ad2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004ad6:	b110      	cbz	r0, 90004ade <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004ad8:	6803      	ldr	r3, [r0, #0]
90004ada:	689b      	ldr	r3, [r3, #8]
90004adc:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004ade:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004ae0:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004ae2:	f04f 0b00 	mov.w	fp, #0
90004ae6:	6803      	ldr	r3, [r0, #0]
90004ae8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004aea:	4798      	blx	r3
90004aec:	4b37      	ldr	r3, [pc, #220]	@ (90004bcc <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x180>)
90004aee:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004af0:	68b0      	ldr	r0, [r6, #8]
90004af2:	4659      	mov	r1, fp
90004af4:	6023      	str	r3, [r4, #0]
90004af6:	6803      	ldr	r3, [r0, #0]
90004af8:	f8c4 b004 	str.w	fp, [r4, #4]
90004afc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004afe:	f884 b008 	strb.w	fp, [r4, #8]
90004b02:	4798      	blx	r3
90004b04:	4605      	mov	r5, r0
90004b06:	f001 fa85 	bl	90006014 <_ZN15Home_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004b0a:	6870      	ldr	r0, [r6, #4]
90004b0c:	4659      	mov	r1, fp
90004b0e:	6803      	ldr	r3, [r0, #0]
90004b10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b12:	4798      	blx	r3
90004b14:	4606      	mov	r6, r0
90004b16:	4629      	mov	r1, r5
90004b18:	f001 fa26 	bl	90005f68 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004b1c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004b1e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004b22:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004b24:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004b28:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004b2c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004b30:	682b      	ldr	r3, [r5, #0]

    virtual void updateTextBox(const char* newText);

    void bind(Model* m)
    {
        model = m;
90004b32:	f8c6 a008 	str.w	sl, [r6, #8]
90004b36:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004b38:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004b3a:	4798      	blx	r3
    newPresenter->activate();
90004b3c:	6833      	ldr	r3, [r6, #0]
90004b3e:	4630      	mov	r0, r6
90004b40:	681b      	ldr	r3, [r3, #0]
90004b42:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004b44:	4621      	mov	r1, r4
90004b46:	4628      	mov	r0, r5
90004b48:	f015 fd10 	bl	9001a56c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004b4c:	6823      	ldr	r3, [r4, #0]
90004b4e:	4920      	ldr	r1, [pc, #128]	@ (90004bd0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x184>)
90004b50:	691a      	ldr	r2, [r3, #16]
90004b52:	428a      	cmp	r2, r1
90004b54:	d11a      	bne.n	90004b8c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004b56:	695b      	ldr	r3, [r3, #20]
90004b58:	4a1e      	ldr	r2, [pc, #120]	@ (90004bd4 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x188>)
90004b5a:	4293      	cmp	r3, r2
90004b5c:	d111      	bne.n	90004b82 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004b5e:	f013 fb03 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004b62:	6803      	ldr	r3, [r0, #0]
90004b64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004b66:	b001      	add	sp, #4
90004b68:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004b6c:	4718      	bx	r3
    if (*currentScreen)
90004b6e:	f8d8 0000 	ldr.w	r0, [r8]
90004b72:	2800      	cmp	r0, #0
90004b74:	d1aa      	bne.n	90004acc <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x80>
90004b76:	e7b2      	b.n	90004ade <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004b78:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004b7c:	2800      	cmp	r0, #0
90004b7e:	d19f      	bne.n	90004ac0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x74>
90004b80:	e7ad      	b.n	90004ade <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004b82:	4620      	mov	r0, r4
90004b84:	b001      	add	sp, #4
90004b86:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004b8a:	4718      	bx	r3
    newTransition->init();
90004b8c:	4620      	mov	r0, r4
90004b8e:	4790      	blx	r2
    newTransition->invalidate();
90004b90:	6823      	ldr	r3, [r4, #0]
90004b92:	e7e0      	b.n	90004b56 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004b94:	4790      	blx	r2
    if (*currentTrans)
90004b96:	f8d9 0000 	ldr.w	r0, [r9]
90004b9a:	2800      	cmp	r0, #0
90004b9c:	d083      	beq.n	90004aa6 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004b9e:	6803      	ldr	r3, [r0, #0]
90004ba0:	e77f      	b.n	90004aa2 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004ba2:	4b0d      	ldr	r3, [pc, #52]	@ (90004bd8 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x18c>)
90004ba4:	21a3      	movs	r1, #163	@ 0xa3
90004ba6:	4a0d      	ldr	r2, [pc, #52]	@ (90004bdc <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004ba8:	480d      	ldr	r0, [pc, #52]	@ (90004be0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004baa:	f026 fcf9 	bl	9002b5a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004bae:	4b0d      	ldr	r3, [pc, #52]	@ (90004be4 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x198>)
90004bb0:	21a5      	movs	r1, #165	@ 0xa5
90004bb2:	4a0a      	ldr	r2, [pc, #40]	@ (90004bdc <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004bb4:	480a      	ldr	r0, [pc, #40]	@ (90004be0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004bb6:	f026 fcf3 	bl	9002b5a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004bba:	4b0b      	ldr	r3, [pc, #44]	@ (90004be8 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x19c>)
90004bbc:	21a4      	movs	r1, #164	@ 0xa4
90004bbe:	4a07      	ldr	r2, [pc, #28]	@ (90004bdc <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004bc0:	4807      	ldr	r0, [pc, #28]	@ (90004be0 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004bc2:	f026 fced 	bl	9002b5a0 <__assert_func>
90004bc6:	bf00      	nop
90004bc8:	900048d5 	.word	0x900048d5
90004bcc:	9002e9a0 	.word	0x9002e9a0
90004bd0:	900048d9 	.word	0x900048d9
90004bd4:	90004989 	.word	0x90004989
90004bd8:	9002dc78 	.word	0x9002dc78
90004bdc:	9002dd08 	.word	0x9002dd08
90004be0:	9002dde4 	.word	0x9002dde4
90004be4:	9002ded0 	.word	0x9002ded0
90004be8:	9002de2c 	.word	0x9002de2c
90004bec:	24021914 	.word	0x24021914
90004bf0:	24021910 	.word	0x24021910

90004bf4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHome_ScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHome_ScreenScreenWipeTransitionEastImpl()
{
90004bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Home_ScreenView, Home_ScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004bf8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004bfc:	4607      	mov	r7, r0
90004bfe:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004c00:	68b0      	ldr	r0, [r6, #8]
90004c02:	6803      	ldr	r3, [r0, #0]
90004c04:	6a1b      	ldr	r3, [r3, #32]
90004c06:	4798      	blx	r3
90004c08:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
90004c0c:	f0c0 80a9 	bcc.w	90004d62 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x16e>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004c10:	6870      	ldr	r0, [r6, #4]
90004c12:	6803      	ldr	r3, [r0, #0]
90004c14:	6a1b      	ldr	r3, [r3, #32]
90004c16:	4798      	blx	r3
90004c18:	280f      	cmp	r0, #15
90004c1a:	f240 80ae 	bls.w	90004d7a <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x186>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004c1e:	68f0      	ldr	r0, [r6, #12]
90004c20:	6803      	ldr	r3, [r0, #0]
90004c22:	6a1b      	ldr	r3, [r3, #32]
90004c24:	4798      	blx	r3
90004c26:	2813      	cmp	r0, #19
90004c28:	f240 80a1 	bls.w	90004d6e <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x17a>
    if (*currentTrans)
90004c2c:	f8df 9180 	ldr.w	r9, [pc, #384]	@ 90004db0 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1bc>
    Application::getInstance()->clearAllTimerWidgets();
90004c30:	f013 fa9a 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004c34:	3004      	adds	r0, #4
90004c36:	f013 fae4 	bl	90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004c3a:	f8d9 0000 	ldr.w	r0, [r9]
90004c3e:	b138      	cbz	r0, 90004c50 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->tearDown();
90004c40:	6803      	ldr	r3, [r0, #0]
90004c42:	4951      	ldr	r1, [pc, #324]	@ (90004d88 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x194>)
90004c44:	68da      	ldr	r2, [r3, #12]
90004c46:	428a      	cmp	r2, r1
90004c48:	f040 8083 	bne.w	90004d52 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x15e>
        (*currentTrans)->~Transition();
90004c4c:	681b      	ldr	r3, [r3, #0]
90004c4e:	4798      	blx	r3
    if (*currentScreen)
90004c50:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 90004db4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1c0>
90004c54:	f8d8 0000 	ldr.w	r0, [r8]
90004c58:	2800      	cmp	r0, #0
90004c5a:	d06c      	beq.n	90004d36 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x142>
        (*currentScreen)->tearDownScreen();
90004c5c:	6803      	ldr	r3, [r0, #0]
90004c5e:	695b      	ldr	r3, [r3, #20]
90004c60:	4798      	blx	r3
    if (*currentPresenter)
90004c62:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004c66:	2800      	cmp	r0, #0
90004c68:	d060      	beq.n	90004d2c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x138>
        (*currentPresenter)->deactivate();
90004c6a:	6803      	ldr	r3, [r0, #0]
90004c6c:	685b      	ldr	r3, [r3, #4]
90004c6e:	4798      	blx	r3
    if (*currentScreen)
90004c70:	f8d8 0000 	ldr.w	r0, [r8]
90004c74:	b110      	cbz	r0, 90004c7c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->~Screen();
90004c76:	6803      	ldr	r3, [r0, #0]
90004c78:	681b      	ldr	r3, [r3, #0]
90004c7a:	4798      	blx	r3
    if (*currentPresenter)
90004c7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004c80:	b110      	cbz	r0, 90004c88 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004c82:	6803      	ldr	r3, [r0, #0]
90004c84:	689b      	ldr	r3, [r3, #8]
90004c86:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004c88:	68f0      	ldr	r0, [r6, #12]
90004c8a:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004c8c:	f04f 0b00 	mov.w	fp, #0
90004c90:	6803      	ldr	r3, [r0, #0]
90004c92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004c94:	4798      	blx	r3
          animationSteps(transitionSteps),
90004c96:	2314      	movs	r3, #20
90004c98:	4604      	mov	r4, r0
90004c9a:	4659      	mov	r1, fp
90004c9c:	f8a0 3009 	strh.w	r3, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
90004ca0:	4b3a      	ldr	r3, [pc, #232]	@ (90004d8c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x198>)
90004ca2:	881b      	ldrh	r3, [r3, #0]
90004ca4:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004ca6:	68b0      	ldr	r0, [r6, #8]
          prevCalculatedValue(0)
90004ca8:	4b39      	ldr	r3, [pc, #228]	@ (90004d90 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x19c>)
90004caa:	f8c4 b004 	str.w	fp, [r4, #4]
90004cae:	6023      	str	r3, [r4, #0]
90004cb0:	6803      	ldr	r3, [r0, #0]
90004cb2:	f884 b008 	strb.w	fp, [r4, #8]
90004cb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
          calculatedValue(0),
90004cb8:	f8a4 b00e 	strh.w	fp, [r4, #14]
          prevCalculatedValue(0)
90004cbc:	f8a4 b010 	strh.w	fp, [r4, #16]
90004cc0:	4798      	blx	r3
90004cc2:	4605      	mov	r5, r0
90004cc4:	f001 f9a6 	bl	90006014 <_ZN15Home_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004cc8:	6870      	ldr	r0, [r6, #4]
90004cca:	4659      	mov	r1, fp
90004ccc:	6803      	ldr	r3, [r0, #0]
90004cce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004cd0:	4798      	blx	r3
90004cd2:	4606      	mov	r6, r0
90004cd4:	4629      	mov	r1, r5
90004cd6:	f001 f947 	bl	90005f68 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>
    model->bind(newPresenter);
90004cda:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004cdc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004ce0:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004ce2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004ce6:	f8c8 5000 	str.w	r5, [r8]
90004cea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004cee:	682b      	ldr	r3, [r5, #0]
90004cf0:	f8c6 a008 	str.w	sl, [r6, #8]
90004cf4:	68db      	ldr	r3, [r3, #12]
90004cf6:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004cf8:	4798      	blx	r3
    newPresenter->activate();
90004cfa:	6833      	ldr	r3, [r6, #0]
90004cfc:	4630      	mov	r0, r6
90004cfe:	681b      	ldr	r3, [r3, #0]
90004d00:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004d02:	4621      	mov	r1, r4
90004d04:	4628      	mov	r0, r5
90004d06:	f015 fc31 	bl	9001a56c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004d0a:	6823      	ldr	r3, [r4, #0]
90004d0c:	4921      	ldr	r1, [pc, #132]	@ (90004d94 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a0>)
90004d0e:	691a      	ldr	r2, [r3, #16]
90004d10:	428a      	cmp	r2, r1
90004d12:	d11a      	bne.n	90004d4a <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x156>
    newTransition->invalidate();
90004d14:	695b      	ldr	r3, [r3, #20]
90004d16:	4a20      	ldr	r2, [pc, #128]	@ (90004d98 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a4>)
90004d18:	4293      	cmp	r3, r2
90004d1a:	d111      	bne.n	90004d40 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x14c>
        Application::getInstance()->clearCachedAreas();
90004d1c:	f013 fa24 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004d20:	6803      	ldr	r3, [r0, #0]
90004d22:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
}
90004d24:	b001      	add	sp, #4
90004d26:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d2a:	4718      	bx	r3
    if (*currentScreen)
90004d2c:	f8d8 0000 	ldr.w	r0, [r8]
90004d30:	2800      	cmp	r0, #0
90004d32:	d1a0      	bne.n	90004c76 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x82>
90004d34:	e7a8      	b.n	90004c88 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
    if (*currentPresenter)
90004d36:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004d3a:	2800      	cmp	r0, #0
90004d3c:	d195      	bne.n	90004c6a <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x76>
90004d3e:	e7a3      	b.n	90004c88 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
    newTransition->invalidate();
90004d40:	4620      	mov	r0, r4
90004d42:	b001      	add	sp, #4
90004d44:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d48:	4718      	bx	r3
    newTransition->init();
90004d4a:	4620      	mov	r0, r4
90004d4c:	4790      	blx	r2
    newTransition->invalidate();
90004d4e:	6823      	ldr	r3, [r4, #0]
90004d50:	e7e0      	b.n	90004d14 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x120>
        (*currentTrans)->tearDown();
90004d52:	4790      	blx	r2
    if (*currentTrans)
90004d54:	f8d9 0000 	ldr.w	r0, [r9]
90004d58:	2800      	cmp	r0, #0
90004d5a:	f43f af79 	beq.w	90004c50 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->~Transition();
90004d5e:	6803      	ldr	r3, [r0, #0]
90004d60:	e774      	b.n	90004c4c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d62:	4b0e      	ldr	r3, [pc, #56]	@ (90004d9c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a8>)
90004d64:	21a3      	movs	r1, #163	@ 0xa3
90004d66:	4a0e      	ldr	r2, [pc, #56]	@ (90004da0 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004d68:	480e      	ldr	r0, [pc, #56]	@ (90004da4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004d6a:	f026 fc19 	bl	9002b5a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004d6e:	4b0e      	ldr	r3, [pc, #56]	@ (90004da8 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b4>)
90004d70:	21a5      	movs	r1, #165	@ 0xa5
90004d72:	4a0b      	ldr	r2, [pc, #44]	@ (90004da0 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004d74:	480b      	ldr	r0, [pc, #44]	@ (90004da4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004d76:	f026 fc13 	bl	9002b5a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004d7a:	4b0c      	ldr	r3, [pc, #48]	@ (90004dac <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b8>)
90004d7c:	21a4      	movs	r1, #164	@ 0xa4
90004d7e:	4a08      	ldr	r2, [pc, #32]	@ (90004da0 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004d80:	4808      	ldr	r0, [pc, #32]	@ (90004da4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004d82:	f026 fc0d 	bl	9002b5a0 <__assert_func>
90004d86:	bf00      	nop
90004d88:	900048d5 	.word	0x900048d5
90004d8c:	240218c0 	.word	0x240218c0
90004d90:	9002e9c4 	.word	0x9002e9c4
90004d94:	90004915 	.word	0x90004915
90004d98:	90004999 	.word	0x90004999
90004d9c:	9002dc78 	.word	0x9002dc78
90004da0:	9002df74 	.word	0x9002df74
90004da4:	9002dde4 	.word	0x9002dde4
90004da8:	9002ded0 	.word	0x9002ded0
90004dac:	9002de2c 	.word	0x9002de2c
90004db0:	24021914 	.word	0x24021914
90004db4:	24021910 	.word	0x24021910

90004db8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTC_ScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTC_ScreenScreenWipeTransitionEastImpl()
{
90004db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<TC_ScreenView, TC_ScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004dbc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004dc0:	4607      	mov	r7, r0
90004dc2:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004dc4:	68b0      	ldr	r0, [r6, #8]
90004dc6:	6803      	ldr	r3, [r0, #0]
90004dc8:	6a1b      	ldr	r3, [r3, #32]
90004dca:	4798      	blx	r3
90004dcc:	f5b0 7fd6 	cmp.w	r0, #428	@ 0x1ac
90004dd0:	f0c0 80a9 	bcc.w	90004f26 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x16e>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004dd4:	6870      	ldr	r0, [r6, #4]
90004dd6:	6803      	ldr	r3, [r0, #0]
90004dd8:	6a1b      	ldr	r3, [r3, #32]
90004dda:	4798      	blx	r3
90004ddc:	280f      	cmp	r0, #15
90004dde:	f240 80ae 	bls.w	90004f3e <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x186>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004de2:	68f0      	ldr	r0, [r6, #12]
90004de4:	6803      	ldr	r3, [r0, #0]
90004de6:	6a1b      	ldr	r3, [r3, #32]
90004de8:	4798      	blx	r3
90004dea:	2813      	cmp	r0, #19
90004dec:	f240 80a1 	bls.w	90004f32 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x17a>
    if (*currentTrans)
90004df0:	f8df 9180 	ldr.w	r9, [pc, #384]	@ 90004f74 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1bc>
    Application::getInstance()->clearAllTimerWidgets();
90004df4:	f013 f9b8 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004df8:	3004      	adds	r0, #4
90004dfa:	f013 fa02 	bl	90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004dfe:	f8d9 0000 	ldr.w	r0, [r9]
90004e02:	b138      	cbz	r0, 90004e14 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->tearDown();
90004e04:	6803      	ldr	r3, [r0, #0]
90004e06:	4951      	ldr	r1, [pc, #324]	@ (90004f4c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x194>)
90004e08:	68da      	ldr	r2, [r3, #12]
90004e0a:	428a      	cmp	r2, r1
90004e0c:	f040 8083 	bne.w	90004f16 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x15e>
        (*currentTrans)->~Transition();
90004e10:	681b      	ldr	r3, [r3, #0]
90004e12:	4798      	blx	r3
    if (*currentScreen)
90004e14:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 90004f78 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1c0>
90004e18:	f8d8 0000 	ldr.w	r0, [r8]
90004e1c:	2800      	cmp	r0, #0
90004e1e:	d06c      	beq.n	90004efa <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x142>
        (*currentScreen)->tearDownScreen();
90004e20:	6803      	ldr	r3, [r0, #0]
90004e22:	695b      	ldr	r3, [r3, #20]
90004e24:	4798      	blx	r3
    if (*currentPresenter)
90004e26:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e2a:	2800      	cmp	r0, #0
90004e2c:	d060      	beq.n	90004ef0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x138>
        (*currentPresenter)->deactivate();
90004e2e:	6803      	ldr	r3, [r0, #0]
90004e30:	685b      	ldr	r3, [r3, #4]
90004e32:	4798      	blx	r3
    if (*currentScreen)
90004e34:	f8d8 0000 	ldr.w	r0, [r8]
90004e38:	b110      	cbz	r0, 90004e40 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->~Screen();
90004e3a:	6803      	ldr	r3, [r0, #0]
90004e3c:	681b      	ldr	r3, [r3, #0]
90004e3e:	4798      	blx	r3
    if (*currentPresenter)
90004e40:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e44:	b110      	cbz	r0, 90004e4c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004e46:	6803      	ldr	r3, [r0, #0]
90004e48:	689b      	ldr	r3, [r3, #8]
90004e4a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004e4c:	68f0      	ldr	r0, [r6, #12]
90004e4e:	2100      	movs	r1, #0
90004e50:	f04f 0b00 	mov.w	fp, #0
90004e54:	6803      	ldr	r3, [r0, #0]
90004e56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e58:	4798      	blx	r3
          animationSteps(transitionSteps),
90004e5a:	2314      	movs	r3, #20
90004e5c:	4604      	mov	r4, r0
90004e5e:	4659      	mov	r1, fp
90004e60:	f8a0 3009 	strh.w	r3, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
90004e64:	4b3a      	ldr	r3, [pc, #232]	@ (90004f50 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x198>)
90004e66:	881b      	ldrh	r3, [r3, #0]
90004e68:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004e6a:	68b0      	ldr	r0, [r6, #8]
          prevCalculatedValue(0)
90004e6c:	4b39      	ldr	r3, [pc, #228]	@ (90004f54 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x19c>)
90004e6e:	f8c4 b004 	str.w	fp, [r4, #4]
90004e72:	6023      	str	r3, [r4, #0]
90004e74:	6803      	ldr	r3, [r0, #0]
90004e76:	f884 b008 	strb.w	fp, [r4, #8]
90004e7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
          calculatedValue(0),
90004e7c:	f8a4 b00e 	strh.w	fp, [r4, #14]
          prevCalculatedValue(0)
90004e80:	f8a4 b010 	strh.w	fp, [r4, #16]
90004e84:	4798      	blx	r3
90004e86:	4605      	mov	r5, r0
90004e88:	f001 f9ba 	bl	90006200 <_ZN13TC_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004e8c:	6870      	ldr	r0, [r6, #4]
90004e8e:	4659      	mov	r1, fp
90004e90:	6803      	ldr	r3, [r0, #0]
90004e92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e94:	4798      	blx	r3
90004e96:	4606      	mov	r6, r0
90004e98:	4629      	mov	r1, r5
90004e9a:	f001 f95b 	bl	90006154 <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView>
    model->bind(newPresenter);
90004e9e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004ea0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004ea4:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004ea6:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004eaa:	f8c8 5000 	str.w	r5, [r8]
90004eae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004eb2:	682b      	ldr	r3, [r5, #0]
90004eb4:	f8c6 a008 	str.w	sl, [r6, #8]
90004eb8:	68db      	ldr	r3, [r3, #12]
90004eba:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004ebc:	4798      	blx	r3
    newPresenter->activate();
90004ebe:	6833      	ldr	r3, [r6, #0]
90004ec0:	4630      	mov	r0, r6
90004ec2:	681b      	ldr	r3, [r3, #0]
90004ec4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004ec6:	4621      	mov	r1, r4
90004ec8:	4628      	mov	r0, r5
90004eca:	f015 fb4f 	bl	9001a56c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004ece:	6823      	ldr	r3, [r4, #0]
90004ed0:	4921      	ldr	r1, [pc, #132]	@ (90004f58 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a0>)
90004ed2:	691a      	ldr	r2, [r3, #16]
90004ed4:	428a      	cmp	r2, r1
90004ed6:	d11a      	bne.n	90004f0e <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x156>
    newTransition->invalidate();
90004ed8:	695b      	ldr	r3, [r3, #20]
90004eda:	4a20      	ldr	r2, [pc, #128]	@ (90004f5c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a4>)
90004edc:	4293      	cmp	r3, r2
90004ede:	d111      	bne.n	90004f04 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x14c>
        Application::getInstance()->clearCachedAreas();
90004ee0:	f013 f942 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90004ee4:	6803      	ldr	r3, [r0, #0]
90004ee6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
}
90004ee8:	b001      	add	sp, #4
90004eea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004eee:	4718      	bx	r3
    if (*currentScreen)
90004ef0:	f8d8 0000 	ldr.w	r0, [r8]
90004ef4:	2800      	cmp	r0, #0
90004ef6:	d1a0      	bne.n	90004e3a <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x82>
90004ef8:	e7a8      	b.n	90004e4c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
    if (*currentPresenter)
90004efa:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004efe:	2800      	cmp	r0, #0
90004f00:	d195      	bne.n	90004e2e <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x76>
90004f02:	e7a3      	b.n	90004e4c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
    newTransition->invalidate();
90004f04:	4620      	mov	r0, r4
90004f06:	b001      	add	sp, #4
90004f08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f0c:	4718      	bx	r3
    newTransition->init();
90004f0e:	4620      	mov	r0, r4
90004f10:	4790      	blx	r2
    newTransition->invalidate();
90004f12:	6823      	ldr	r3, [r4, #0]
90004f14:	e7e0      	b.n	90004ed8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x120>
        (*currentTrans)->tearDown();
90004f16:	4790      	blx	r2
    if (*currentTrans)
90004f18:	f8d9 0000 	ldr.w	r0, [r9]
90004f1c:	2800      	cmp	r0, #0
90004f1e:	f43f af79 	beq.w	90004e14 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->~Transition();
90004f22:	6803      	ldr	r3, [r0, #0]
90004f24:	e774      	b.n	90004e10 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004f26:	4b0e      	ldr	r3, [pc, #56]	@ (90004f60 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a8>)
90004f28:	21a3      	movs	r1, #163	@ 0xa3
90004f2a:	4a0e      	ldr	r2, [pc, #56]	@ (90004f64 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004f2c:	480e      	ldr	r0, [pc, #56]	@ (90004f68 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004f2e:	f026 fb37 	bl	9002b5a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004f32:	4b0e      	ldr	r3, [pc, #56]	@ (90004f6c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b4>)
90004f34:	21a5      	movs	r1, #165	@ 0xa5
90004f36:	4a0b      	ldr	r2, [pc, #44]	@ (90004f64 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004f38:	480b      	ldr	r0, [pc, #44]	@ (90004f68 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004f3a:	f026 fb31 	bl	9002b5a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004f3e:	4b0c      	ldr	r3, [pc, #48]	@ (90004f70 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b8>)
90004f40:	21a4      	movs	r1, #164	@ 0xa4
90004f42:	4a08      	ldr	r2, [pc, #32]	@ (90004f64 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004f44:	4808      	ldr	r0, [pc, #32]	@ (90004f68 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004f46:	f026 fb2b 	bl	9002b5a0 <__assert_func>
90004f4a:	bf00      	nop
90004f4c:	900048d5 	.word	0x900048d5
90004f50:	240218c0 	.word	0x240218c0
90004f54:	9002e9c4 	.word	0x9002e9c4
90004f58:	90004915 	.word	0x90004915
90004f5c:	90004999 	.word	0x90004999
90004f60:	9002dc78 	.word	0x9002dc78
90004f64:	9002e060 	.word	0x9002e060
90004f68:	9002dde4 	.word	0x9002dde4
90004f6c:	9002ded0 	.word	0x9002ded0
90004f70:	9002de2c 	.word	0x9002de2c
90004f74:	24021914 	.word	0x24021914
90004f78:	24021910 	.word	0x24021910

90004f7c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90004f7c:	b570      	push	{r4, r5, r6, lr}
90004f7e:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004f80:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004f84:	b1b8      	cbz	r0, 90004fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004f86:	6802      	ldr	r2, [r0, #0]
90004f88:	4916      	ldr	r1, [pc, #88]	@ (90004fe4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004f8a:	68d3      	ldr	r3, [r2, #12]
90004f8c:	428b      	cmp	r3, r1
90004f8e:	d11f      	bne.n	90004fd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004f90:	6843      	ldr	r3, [r0, #4]
90004f92:	b183      	cbz	r3, 90004fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004f94:	6881      	ldr	r1, [r0, #8]
90004f96:	b179      	cbz	r1, 90004fb8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90004f98:	6892      	ldr	r2, [r2, #8]
90004f9a:	4b13      	ldr	r3, [pc, #76]	@ (90004fe8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004f9c:	429a      	cmp	r2, r3
90004f9e:	d11e      	bne.n	90004fde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004fa0:	68c2      	ldr	r2, [r0, #12]
90004fa2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90004fa6:	eb03 0062 	add.w	r0, r3, r2, asr #1
90004faa:	07d3      	lsls	r3, r2, #31
90004fac:	d40d      	bmi.n	90004fca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004fae:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004fb0:	2300      	movs	r3, #0
90004fb2:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004fb6:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90004fb8:	68c5      	ldr	r5, [r0, #12]
90004fba:	07ee      	lsls	r6, r5, #31
90004fbc:	d5fb      	bpl.n	90004fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004fbe:	6892      	ldr	r2, [r2, #8]
90004fc0:	4e09      	ldr	r6, [pc, #36]	@ (90004fe8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004fc2:	42b2      	cmp	r2, r6
90004fc4:	d10b      	bne.n	90004fde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004fc6:	eb03 0065 	add.w	r0, r3, r5, asr #1
90004fca:	6803      	ldr	r3, [r0, #0]
90004fcc:	5859      	ldr	r1, [r3, r1]
90004fce:	e7ee      	b.n	90004fae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004fd0:	4798      	blx	r3
90004fd2:	2800      	cmp	r0, #0
90004fd4:	d0ef      	beq.n	90004fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004fd6:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004fda:	6802      	ldr	r2, [r0, #0]
90004fdc:	e7dc      	b.n	90004f98 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004fde:	4790      	blx	r2
90004fe0:	e7e6      	b.n	90004fb0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004fe2:	bf00      	nop
90004fe4:	90004931 	.word	0x90004931
90004fe8:	90004919 	.word	0x90004919

90004fec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004fec:	b570      	push	{r4, r5, r6, lr}
90004fee:	4604      	mov	r4, r0
90004ff0:	4615      	mov	r5, r2
90004ff2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004ff4:	f013 f9a6 	bl	90018344 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004ff8:	4a22      	ldr	r2, [pc, #136]	@ (90005084 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004ffa:	2300      	movs	r3, #0
      frontendHeap(heap),
90004ffc:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90005000:	6014      	str	r4, [r2, #0]
        return instance;
90005002:	4d21      	ldr	r5, [pc, #132]	@ (90005088 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005004:	4a21      	ldr	r2, [pc, #132]	@ (9000508c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005006:	6828      	ldr	r0, [r5, #0]
90005008:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000500a:	4a21      	ldr	r2, [pc, #132]	@ (90005090 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
9000500c:	4921      	ldr	r1, [pc, #132]	@ (90005094 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
9000500e:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90005012:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90005016:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
9000501a:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
9000501e:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90005022:	6802      	ldr	r2, [r0, #0]
90005024:	6892      	ldr	r2, [r2, #8]
90005026:	428a      	cmp	r2, r1
90005028:	d129      	bne.n	9000507e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
9000502a:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000502e:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90005032:	2000      	movs	r0, #0
90005034:	f000 fef4 	bl	90005e20 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005038:	682b      	ldr	r3, [r5, #0]
9000503a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000503e:	b1e2      	cbz	r2, 9000507a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90005040:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90005042:	b1d0      	cbz	r0, 9000507a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90005044:	f01d fe2d 	bl	90022ca2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90005048:	682b      	ldr	r3, [r5, #0]
9000504a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000504e:	b192      	cbz	r2, 90005076 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90005050:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90005052:	b180      	cbz	r0, 90005076 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90005054:	f01d fea0 	bl	90022d98 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90005058:	682b      	ldr	r3, [r5, #0]
9000505a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000505e:	b12a      	cbz	r2, 9000506c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90005060:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90005062:	b118      	cbz	r0, 9000506c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90005064:	f01d fea4 	bl	90022db0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90005068:	4620      	mov	r0, r4
9000506a:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
9000506c:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
9000506e:	f01d fe9f 	bl	90022db0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90005072:	4620      	mov	r0, r4
90005074:	bd70      	pop	{r4, r5, r6, pc}
90005076:	6898      	ldr	r0, [r3, #8]
90005078:	e7ec      	b.n	90005054 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
9000507a:	6898      	ldr	r0, [r3, #8]
9000507c:	e7e2      	b.n	90005044 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000507e:	4619      	mov	r1, r3
90005080:	4790      	blx	r2
90005082:	e7d6      	b.n	90005032 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90005084:	24021920 	.word	0x24021920
90005088:	240218cc 	.word	0x240218cc
9000508c:	9002e94c 	.word	0x9002e94c
90005090:	9002e934 	.word	0x9002e934
90005094:	90000d2d 	.word	0x90000d2d

90005098 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005098:	4905      	ldr	r1, [pc, #20]	@ (900050b0 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv+0x18>)
9000509a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000509c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900050a0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900050a4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900050a8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900050ac:	4770      	bx	lr
900050ae:	bf00      	nop
900050b0:	90004a4d 	.word	0x90004a4d

900050b4 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>:
900050b4:	4905      	ldr	r1, [pc, #20]	@ (900050cc <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv+0x18>)
900050b6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900050b8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900050bc:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900050c0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900050c4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900050c8:	4770      	bx	lr
900050ca:	bf00      	nop
900050cc:	90004bf5 	.word	0x90004bf5

900050d0 <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>:
900050d0:	4905      	ldr	r1, [pc, #20]	@ (900050e8 <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv+0x18>)
900050d2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900050d4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900050d8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900050dc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900050e0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900050e4:	4770      	bx	lr
900050e6:	bf00      	nop
900050e8:	90004db9 	.word	0x90004db9

900050ec <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900050ec:	6a40      	ldr	r0, [r0, #36]	@ 0x24
900050ee:	4770      	bx	lr

900050f0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900050f0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900050f2:	4770      	bx	lr

900050f4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900050f4:	4770      	bx	lr
900050f6:	bf00      	nop

900050f8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
900050f8:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
900050fa:	888a      	ldrh	r2, [r1, #4]
900050fc:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
900050fe:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
90005100:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90005102:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90005104:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90005108:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
9000510c:	4418      	add	r0, r3
9000510e:	4770      	bx	lr

90005110 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005110:	b1fa      	cbz	r2, 90005152 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90005112:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005114:	7b14      	ldrb	r4, [r2, #12]
90005116:	b1d4      	cbz	r4, 9000514e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005118:	f892 c00d 	ldrb.w	ip, [r2, #13]
9000511c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90005120:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90005124:	6a03      	ldr	r3, [r0, #32]
90005126:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000512a:	ea4e 0202 	orr.w	r2, lr, r2
9000512e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90005132:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90005136:	e004      	b.n	90005142 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90005138:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
9000513c:	d807      	bhi.n	9000514e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000513e:	4283      	cmp	r3, r0
90005140:	d005      	beq.n	9000514e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90005142:	881a      	ldrh	r2, [r3, #0]
90005144:	428a      	cmp	r2, r1
90005146:	d1f7      	bne.n	90005138 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90005148:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
9000514c:	bd10      	pop	{r4, pc}
        return 0;
9000514e:	2000      	movs	r0, #0
}
90005150:	bd10      	pop	{r4, pc}
        return 0;
90005152:	4610      	mov	r0, r2
}
90005154:	4770      	bx	lr
90005156:	bf00      	nop

90005158 <_ZN8touchgfx13GeneratedFontD0Ev>:
90005158:	b510      	push	{r4, lr}
9000515a:	4604      	mov	r4, r0
9000515c:	212c      	movs	r1, #44	@ 0x2c
9000515e:	f025 fea7 	bl	9002aeb0 <_ZdlPvj>
90005162:	4620      	mov	r0, r4
90005164:	bd10      	pop	{r4, pc}
90005166:	bf00      	nop

90005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005168:	b530      	push	{r4, r5, lr}
9000516a:	b08b      	sub	sp, #44	@ 0x2c
9000516c:	4604      	mov	r4, r0
9000516e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90005172:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005174:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90005178:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000517a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
9000517e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005180:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90005184:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005186:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
9000518a:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000518c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90005190:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005192:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90005196:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005198:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
9000519c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000519e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
900051a2:	9508      	str	r5, [sp, #32]
900051a4:	f014 fe18 	bl	90019dd8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900051a8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
900051aa:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900051ac:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900051ae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900051b0:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900051b2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900051b4:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
900051b6:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900051b8:	62a3      	str	r3, [r4, #40]	@ 0x28
900051ba:	4b02      	ldr	r3, [pc, #8]	@ (900051c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900051bc:	6023      	str	r3, [r4, #0]
}
900051be:	b00b      	add	sp, #44	@ 0x2c
900051c0:	bd30      	pop	{r4, r5, pc}
900051c2:	bf00      	nop
900051c4:	9002e9e8 	.word	0x9002e9e8

900051c8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
900051c8:	4770      	bx	lr
900051ca:	bf00      	nop

900051cc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
900051cc:	4770      	bx	lr
900051ce:	bf00      	nop

900051d0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
900051d0:	4770      	bx	lr
900051d2:	bf00      	nop

900051d4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
900051d4:	4770      	bx	lr
900051d6:	bf00      	nop

900051d8 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900051d8:	4770      	bx	lr
900051da:	bf00      	nop

900051dc <_ZN19Home_ScreenViewBaseD1Ev>:
}

Home_ScreenViewBase::~Home_ScreenViewBase()
{

}
900051dc:	4770      	bx	lr
900051de:	bf00      	nop

900051e0 <_ZN19Home_ScreenViewBase11setupScreenEv>:

void Home_ScreenViewBase::setupScreen()
{

}
900051e0:	4770      	bx	lr
900051e2:	bf00      	nop

900051e4 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900051e4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900051e6:	68c3      	ldr	r3, [r0, #12]
900051e8:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900051ec:	f013 0f01 	tst.w	r3, #1
900051f0:	eb04 0063 	add.w	r0, r4, r3, asr #1
900051f4:	d004      	beq.n	90005200 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
900051f6:	ea4f 0c63 	mov.w	ip, r3, asr #1
900051fa:	f854 300c 	ldr.w	r3, [r4, ip]
900051fe:	589a      	ldr	r2, [r3, r2]
    }
90005200:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005204:	4710      	bx	r2
90005206:	bf00      	nop

90005208 <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005208:	6843      	ldr	r3, [r0, #4]
9000520a:	b13b      	cbz	r3, 9000521c <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000520c:	6883      	ldr	r3, [r0, #8]
9000520e:	b10b      	cbz	r3, 90005214 <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005210:	2001      	movs	r0, #1
    }
90005212:	4770      	bx	lr
90005214:	68c0      	ldr	r0, [r0, #12]
90005216:	f000 0001 	and.w	r0, r0, #1
9000521a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000521c:	4618      	mov	r0, r3
9000521e:	4770      	bx	lr

90005220 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005220:	b510      	push	{r4, lr}
90005222:	4604      	mov	r4, r0
90005224:	2110      	movs	r1, #16
90005226:	f025 fe43 	bl	9002aeb0 <_ZdlPvj>
9000522a:	4620      	mov	r0, r4
9000522c:	bd10      	pop	{r4, pc}
9000522e:	bf00      	nop

90005230 <_ZN19Home_ScreenViewBaseD0Ev>:
Home_ScreenViewBase::~Home_ScreenViewBase()
90005230:	b510      	push	{r4, lr}
90005232:	4604      	mov	r4, r0
}
90005234:	f44f 71c0 	mov.w	r1, #384	@ 0x180
90005238:	f025 fe3a 	bl	9002aeb0 <_ZdlPvj>
9000523c:	4620      	mov	r0, r4
9000523e:	bd10      	pop	{r4, pc}

90005240 <_ZN19Home_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Home_ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Read_TC_Start_button)
90005240:	3098      	adds	r0, #152	@ 0x98
90005242:	4288      	cmp	r0, r1
90005244:	d000      	beq.n	90005248 <_ZN19Home_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90005246:	4770      	bx	lr
{
90005248:	b508      	push	{r3, lr}
    virtual ~Home_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000524a:	f012 ff8d 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
        //TC_Read_Screen_Switch
        //When Read_TC_Start_button clicked change screen to TC_Screen
        //Go to TC_Screen with screen transition towards East
        application().gotoTC_ScreenScreenWipeTransitionEast();
    }
}
9000524e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoTC_ScreenScreenWipeTransitionEast();
90005252:	f7ff bf3d 	b.w	900050d0 <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>
90005256:	bf00      	nop

90005258 <_ZN19Home_ScreenViewBaseC1Ev>:
Home_ScreenViewBase::Home_ScreenViewBase() :
90005258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000525c:	4604      	mov	r4, r0
9000525e:	b08b      	sub	sp, #44	@ 0x2c
        : presenter(0)
90005260:	2500      	movs	r5, #0
90005262:	f014 ffd7 	bl	9001a214 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Home_ScreenViewBase::buttonCallbackHandler)
90005266:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
9000526a:	4a9d      	ldr	r2, [pc, #628]	@ (900054e0 <_ZN19Home_ScreenViewBaseC1Ev+0x288>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
9000526c:	4b9d      	ldr	r3, [pc, #628]	@ (900054e4 <_ZN19Home_ScreenViewBaseC1Ev+0x28c>)
          touchable(false),
9000526e:	f44f 7b80 	mov.w	fp, #256	@ 0x100
90005272:	26ff      	movs	r6, #255	@ 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90005274:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90005278:	f104 0798 	add.w	r7, r4, #152	@ 0x98
9000527c:	6022      	str	r2, [r4, #0]
9000527e:	a908      	add	r1, sp, #32
90005280:	6423      	str	r3, [r4, #64]	@ 0x40
90005282:	4650      	mov	r0, sl
90005284:	f8a4 b064 	strh.w	fp, [r4, #100]	@ 0x64
90005288:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
9000528c:	f104 08e0 	add.w	r8, r4, #224	@ 0xe0
90005290:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90005292:	66a5      	str	r5, [r4, #104]	@ 0x68
90005294:	f8ad 9020 	strh.w	r9, [sp, #32]
        : x(0), y(0), width(0), height(0)
90005298:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
9000529c:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900052a0:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900052a4:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900052a8:	f00f fb8e 	bl	900149c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900052ac:	4638      	mov	r0, r7
900052ae:	f010 fba3 	bl	900159f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900052b2:	4640      	mov	r0, r8
900052b4:	f010 fba0 	bl	900159f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900052b8:	4b8b      	ldr	r3, [pc, #556]	@ (900054e8 <_ZN19Home_ScreenViewBaseC1Ev+0x290>)
          touchable(false),
900052ba:	f8a4 b14c 	strh.w	fp, [r4, #332]	@ 0x14c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900052be:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900052c2:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900052c6:	f04f 33ff 	mov.w	r3, #4294967295
        rect.x = x;
900052ca:	f8df b250 	ldr.w	fp, [pc, #592]	@ 9000551c <_ZN19Home_ScreenViewBaseC1Ev+0x2c4>
900052ce:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
        : pobject(pObject), pmemfun(pmemfun_1)
900052d2:	4b86      	ldr	r3, [pc, #536]	@ (900054ec <_ZN19Home_ScreenViewBaseC1Ev+0x294>)
        : typedTextId(id)
900052d4:	f8a4 9154 	strh.w	r9, [r4, #340]	@ 0x154
900052d8:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
900052dc:	4b84      	ldr	r3, [pc, #528]	@ (900054f0 <_ZN19Home_ScreenViewBaseC1Ev+0x298>)
900052de:	f8c4 615e 	str.w	r6, [r4, #350]	@ 0x15e
900052e2:	1d26      	adds	r6, r4, #4
900052e4:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900052e8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900052ec:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90005520 <_ZN19Home_ScreenViewBaseC1Ev+0x2c8>
900052f0:	4630      	mov	r0, r6
900052f2:	66a3      	str	r3, [r4, #104]	@ 0x68
        : color(col)
900052f4:	f8c4 5158 	str.w	r5, [r4, #344]	@ 0x158
900052f8:	f8a4 515c 	strh.w	r5, [r4, #348]	@ 0x15c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900052fc:	f8c4 5164 	str.w	r5, [r4, #356]	@ 0x164
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90005300:	f8c4 516c 	str.w	r5, [r4, #364]	@ 0x16c
90005304:	f8c4 4174 	str.w	r4, [r4, #372]	@ 0x174
90005308:	f8c4 517c 	str.w	r5, [r4, #380]	@ 0x17c
9000530c:	6465      	str	r5, [r4, #68]	@ 0x44
9000530e:	f8c4 9150 	str.w	r9, [r4, #336]	@ 0x150
90005312:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
        : x(0), y(0), width(0), height(0)
90005316:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
9000531a:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
          nextSibling(0),
9000531e:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
          cachedAbsX(0),
90005322:	e9c4 5551 	strd	r5, r5, [r4, #324]	@ 0x144
90005326:	f00c fc51 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000532a:	2302      	movs	r3, #2
    ATECH_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
9000532c:	4650      	mov	r0, sl
9000532e:	a908      	add	r1, sp, #32
90005330:	f8ad 3020 	strh.w	r3, [sp, #32]
90005334:	f010 fa29 	bl	9001578a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ATECH_LOGO.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005338:	4650      	mov	r0, sl
9000533a:	4629      	mov	r1, r5
        rect.x = x;
9000533c:	e9c4 5b1c 	strd	r5, fp, [r4, #112]	@ 0x70
90005340:	f00f fafd 	bl	9001493e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005344:	4651      	mov	r1, sl
90005346:	4630      	mov	r0, r6
        return typedTextId < numberOfTypedTexts;
90005348:	f8df a1d8 	ldr.w	sl, [pc, #472]	@ 90005524 <_ZN19Home_ScreenViewBaseC1Ev+0x2cc>
9000534c:	f00c fc3e 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005350:	4b68      	ldr	r3, [pc, #416]	@ (900054f4 <_ZN19Home_ScreenViewBaseC1Ev+0x29c>)
    Read_TC_Start_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID));
90005352:	a907      	add	r1, sp, #28
90005354:	aa08      	add	r2, sp, #32
90005356:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
9000535a:	2301      	movs	r3, #1
9000535c:	4638      	mov	r0, r7
9000535e:	f8ad 301c 	strh.w	r3, [sp, #28]
90005362:	f8ad 3020 	strh.w	r3, [sp, #32]
90005366:	f010 f8de 	bl	90015526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
9000536a:	2103      	movs	r1, #3
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
9000536c:	f8ba 3000 	ldrh.w	r3, [sl]
90005370:	428b      	cmp	r3, r1
90005372:	f8a4 10d0 	strh.w	r1, [r4, #208]	@ 0xd0
90005376:	d926      	bls.n	900053c6 <_ZN19Home_ScreenViewBaseC1Ev+0x16e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005378:	4b5f      	ldr	r3, [pc, #380]	@ (900054f8 <_ZN19Home_ScreenViewBaseC1Ev+0x2a0>)
9000537a:	681b      	ldr	r3, [r3, #0]
9000537c:	2b00      	cmp	r3, #0
9000537e:	f000 80a8 	beq.w	900054d2 <_ZN19Home_ScreenViewBaseC1Ev+0x27a>
        return fonts[typedTexts[typedTextId].fontIdx];
90005382:	799a      	ldrb	r2, [r3, #6]
90005384:	4b5d      	ldr	r3, [pc, #372]	@ (900054fc <_ZN19Home_ScreenViewBaseC1Ev+0x2a4>)
90005386:	681b      	ldr	r3, [r3, #0]
90005388:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
9000538c:	4b5c      	ldr	r3, [pc, #368]	@ (90005500 <_ZN19Home_ScreenViewBaseC1Ev+0x2a8>)
9000538e:	6818      	ldr	r0, [r3, #0]
90005390:	f000 fd84 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005394:	f8db 3000 	ldr.w	r3, [fp]
90005398:	4601      	mov	r1, r0
9000539a:	485a      	ldr	r0, [pc, #360]	@ (90005504 <_ZN19Home_ScreenViewBaseC1Ev+0x2ac>)
9000539c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000539e:	4282      	cmp	r2, r0
900053a0:	f040 808a 	bne.w	900054b8 <_ZN19Home_ScreenViewBaseC1Ev+0x260>
        return fontHeight;
900053a4:	f8bb 5004 	ldrh.w	r5, [fp, #4]
900053a8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900053aa:	4658      	mov	r0, fp
900053ac:	9101      	str	r1, [sp, #4]
900053ae:	4798      	blx	r3
900053b0:	fb15 f500 	smulbb	r5, r5, r0
900053b4:	f8db 3000 	ldr.w	r3, [fp]
900053b8:	4658      	mov	r0, fp
900053ba:	b2ad      	uxth	r5, r5
900053bc:	9901      	ldr	r1, [sp, #4]
900053be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900053c0:	4798      	blx	r3
900053c2:	4405      	add	r5, r0
900053c4:	b22d      	sxth	r5, r5
        color = col;
900053c6:	f04f 33ff 	mov.w	r3, #4294967295
900053ca:	4639      	mov	r1, r7
900053cc:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900053ce:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
        colorPressed = col;
900053d2:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
    Read_TC_Start_button.setAction(buttonCallback);
900053d6:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900053da:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
900053de:	f00c fbf5 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053e2:	f44f 035e 	mov.w	r3, #14548992	@ 0xde0000
    Read_live_data_Start_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUNDED_DISABLED_ID));
900053e6:	a907      	add	r1, sp, #28
900053e8:	aa08      	add	r2, sp, #32
900053ea:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
900053ee:	2301      	movs	r3, #1
900053f0:	4640      	mov	r0, r8
900053f2:	f8ad 301c 	strh.w	r3, [sp, #28]
900053f6:	f8ad 3020 	strh.w	r3, [sp, #32]
900053fa:	f010 f894 	bl	90015526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900053fe:	2102      	movs	r1, #2
        if (typedText.hasValidId())
90005400:	f8ba 3000 	ldrh.w	r3, [sl]
90005404:	428b      	cmp	r3, r1
90005406:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
9000540a:	d922      	bls.n	90005452 <_ZN19Home_ScreenViewBaseC1Ev+0x1fa>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000540c:	4b3a      	ldr	r3, [pc, #232]	@ (900054f8 <_ZN19Home_ScreenViewBaseC1Ev+0x2a0>)
9000540e:	681b      	ldr	r3, [r3, #0]
90005410:	2b00      	cmp	r3, #0
90005412:	d05e      	beq.n	900054d2 <_ZN19Home_ScreenViewBaseC1Ev+0x27a>
        return fonts[typedTexts[typedTextId].fontIdx];
90005414:	791a      	ldrb	r2, [r3, #4]
90005416:	4b39      	ldr	r3, [pc, #228]	@ (900054fc <_ZN19Home_ScreenViewBaseC1Ev+0x2a4>)
90005418:	681b      	ldr	r3, [r3, #0]
9000541a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
9000541e:	4b38      	ldr	r3, [pc, #224]	@ (90005500 <_ZN19Home_ScreenViewBaseC1Ev+0x2a8>)
90005420:	6818      	ldr	r0, [r3, #0]
90005422:	f000 fd3b 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005426:	683b      	ldr	r3, [r7, #0]
90005428:	4936      	ldr	r1, [pc, #216]	@ (90005504 <_ZN19Home_ScreenViewBaseC1Ev+0x2ac>)
9000542a:	4682      	mov	sl, r0
9000542c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000542e:	428a      	cmp	r2, r1
90005430:	d14a      	bne.n	900054c8 <_ZN19Home_ScreenViewBaseC1Ev+0x270>
90005432:	88bd      	ldrh	r5, [r7, #4]
90005434:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005436:	4651      	mov	r1, sl
90005438:	4638      	mov	r0, r7
9000543a:	4798      	blx	r3
9000543c:	fb15 f500 	smulbb	r5, r5, r0
90005440:	683b      	ldr	r3, [r7, #0]
90005442:	4651      	mov	r1, sl
90005444:	b2ad      	uxth	r5, r5
90005446:	4638      	mov	r0, r7
90005448:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000544a:	4798      	blx	r3
9000544c:	4428      	add	r0, r5
9000544e:	b200      	sxth	r0, r0
90005450:	e000      	b.n	90005454 <_ZN19Home_ScreenViewBaseC1Ev+0x1fc>
90005452:	2000      	movs	r0, #0
        color = col;
90005454:	f04f 33ff 	mov.w	r3, #4294967295
90005458:	4641      	mov	r1, r8
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000545a:	f8a4 0126 	strh.w	r0, [r4, #294]	@ 0x126
9000545e:	4630      	mov	r0, r6
    TC_not_loaded.setXY(39, 178);
90005460:	f504 7894 	add.w	r8, r4, #296	@ 0x128
        linespace = space;
90005464:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
90005466:	ad02      	add	r5, sp, #8
        colorPressed = col;
90005468:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
9000546c:	f00c fbae 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005470:	4b25      	ldr	r3, [pc, #148]	@ (90005508 <_ZN19Home_ScreenViewBaseC1Ev+0x2b0>)
90005472:	4641      	mov	r1, r8
90005474:	4628      	mov	r0, r5
90005476:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        color = newColor;
9000547a:	4b24      	ldr	r3, [pc, #144]	@ (9000550c <_ZN19Home_ScreenViewBaseC1Ev+0x2b4>)
        linespace = space;
9000547c:	f8a4 715c 	strh.w	r7, [r4, #348]	@ 0x15c
        color = newColor;
90005480:	f8c4 3158 	str.w	r3, [r4, #344]	@ 0x158
        boundingArea = calculateBoundingArea();
90005484:	f00f fd4a 	bl	90014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005488:	f504 73b2 	add.w	r3, r4, #356	@ 0x164
        : typedTextId(id)
9000548c:	f8ad 7024 	strh.w	r7, [sp, #36]	@ 0x24
90005490:	f8cd 9020 	str.w	r9, [sp, #32]
90005494:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005498:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    TC_not_loaded.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KXSK));
9000549c:	a908      	add	r1, sp, #32
9000549e:	4640      	mov	r0, r8
900054a0:	f00f ffe4 	bl	9001546c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900054a4:	4630      	mov	r0, r6
900054a6:	4641      	mov	r1, r8
        visible = vis;
900054a8:	f884 714d 	strb.w	r7, [r4, #333]	@ 0x14d
900054ac:	f00c fb8e 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900054b0:	4620      	mov	r0, r4
900054b2:	b00b      	add	sp, #44	@ 0x2c
900054b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900054b8:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900054ba:	4658      	mov	r0, fp
900054bc:	4790      	blx	r2
900054be:	f8db 3000 	ldr.w	r3, [fp]
900054c2:	4605      	mov	r5, r0
900054c4:	9901      	ldr	r1, [sp, #4]
900054c6:	e76f      	b.n	900053a8 <_ZN19Home_ScreenViewBaseC1Ev+0x150>
900054c8:	4638      	mov	r0, r7
900054ca:	4790      	blx	r2
900054cc:	683b      	ldr	r3, [r7, #0]
900054ce:	4605      	mov	r5, r0
900054d0:	e7b0      	b.n	90005434 <_ZN19Home_ScreenViewBaseC1Ev+0x1dc>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900054d2:	4b0f      	ldr	r3, [pc, #60]	@ (90005510 <_ZN19Home_ScreenViewBaseC1Ev+0x2b8>)
900054d4:	216c      	movs	r1, #108	@ 0x6c
900054d6:	4a0f      	ldr	r2, [pc, #60]	@ (90005514 <_ZN19Home_ScreenViewBaseC1Ev+0x2bc>)
900054d8:	480f      	ldr	r0, [pc, #60]	@ (90005518 <_ZN19Home_ScreenViewBaseC1Ev+0x2c0>)
900054da:	f026 f861 	bl	9002b5a0 <__assert_func>
900054de:	bf00      	nop
900054e0:	9002ea68 	.word	0x9002ea68
900054e4:	9002f714 	.word	0x9002f714
900054e8:	9002f684 	.word	0x9002f684
900054ec:	9002ea50 	.word	0x9002ea50
900054f0:	90005241 	.word	0x90005241
900054f4:	00de006e 	.word	0x00de006e
900054f8:	24021924 	.word	0x24021924
900054fc:	2402192c 	.word	0x2402192c
90005500:	24021930 	.word	0x24021930
90005504:	9000488d 	.word	0x9000488d
90005508:	00b20027 	.word	0x00b20027
9000550c:	ffff0000 	.word	0xffff0000
90005510:	9002e148 	.word	0x9002e148
90005514:	9002e18c 	.word	0x9002e18c
90005518:	9002e1c8 	.word	0x9002e1c8
9000551c:	011001e0 	.word	0x011001e0
90005520:	9002e924 	.word	0x9002e924
90005524:	24021928 	.word	0x24021928

90005528 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
90005528:	b530      	push	{r4, r5, lr}
9000552a:	b085      	sub	sp, #20
9000552c:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
9000552e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90005530:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005532:	466d      	mov	r5, sp
90005534:	4601      	mov	r1, r0
        rect.width = width;
90005536:	8102      	strh	r2, [r0, #8]
90005538:	343c      	adds	r4, #60	@ 0x3c
9000553a:	4628      	mov	r0, r5
9000553c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005540:	4798      	blx	r3
90005542:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005546:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000554a:	b005      	add	sp, #20
9000554c:	bd30      	pop	{r4, r5, pc}
9000554e:	bf00      	nop

90005550 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
90005550:	b530      	push	{r4, r5, lr}
90005552:	b085      	sub	sp, #20
90005554:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
90005556:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005558:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000555a:	466d      	mov	r5, sp
9000555c:	4601      	mov	r1, r0
        rect.height = height;
9000555e:	8142      	strh	r2, [r0, #10]
90005560:	343c      	adds	r4, #60	@ 0x3c
90005562:	4628      	mov	r0, r5
90005564:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005568:	4798      	blx	r3
9000556a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000556e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005572:	b005      	add	sp, #20
90005574:	bd30      	pop	{r4, r5, pc}
90005576:	bf00      	nop

90005578 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90005578:	2200      	movs	r2, #0
9000557a:	6002      	str	r2, [r0, #0]
9000557c:	6042      	str	r2, [r0, #4]
    }
9000557e:	4770      	bx	lr

90005580 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
90005580:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90005584:	4770      	bx	lr
90005586:	bf00      	nop

90005588 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
90005588:	2000      	movs	r0, #0
9000558a:	4770      	bx	lr

9000558c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
9000558c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90005590:	b112      	cbz	r2, 90005598 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90005592:	6803      	ldr	r3, [r0, #0]
90005594:	695b      	ldr	r3, [r3, #20]
90005596:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90005598:	4770      	bx	lr
9000559a:	bf00      	nop

9000559c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000559c:	2200      	movs	r2, #0
9000559e:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
900055a2:	6082      	str	r2, [r0, #8]
900055a4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900055a8:	4770      	bx	lr
900055aa:	bf00      	nop

900055ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900055ac:	6c80      	ldr	r0, [r0, #72]	@ 0x48
900055ae:	4770      	bx	lr

900055b0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900055b0:	4770      	bx	lr
900055b2:	bf00      	nop

900055b4 <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900055b4:	4770      	bx	lr
900055b6:	bf00      	nop

900055b8 <_ZN17TC_ScreenViewBaseD1Ev>:
}

TC_ScreenViewBase::~TC_ScreenViewBase()
{

}
900055b8:	4770      	bx	lr
900055ba:	bf00      	nop

900055bc <_ZN17TC_ScreenViewBase11setupScreenEv>:

void TC_ScreenViewBase::setupScreen()
{

}
900055bc:	4770      	bx	lr
900055be:	bf00      	nop

900055c0 <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900055c0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900055c2:	68c3      	ldr	r3, [r0, #12]
900055c4:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900055c8:	f013 0f01 	tst.w	r3, #1
900055cc:	eb04 0063 	add.w	r0, r4, r3, asr #1
900055d0:	d004      	beq.n	900055dc <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
900055d2:	ea4f 0c63 	mov.w	ip, r3, asr #1
900055d6:	f854 300c 	ldr.w	r3, [r4, ip]
900055da:	589a      	ldr	r2, [r3, r2]
    }
900055dc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900055e0:	4710      	bx	r2
900055e2:	bf00      	nop

900055e4 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900055e4:	6843      	ldr	r3, [r0, #4]
900055e6:	b13b      	cbz	r3, 900055f8 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900055e8:	6883      	ldr	r3, [r0, #8]
900055ea:	b10b      	cbz	r3, 900055f0 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900055ec:	2001      	movs	r0, #1
    }
900055ee:	4770      	bx	lr
900055f0:	68c0      	ldr	r0, [r0, #12]
900055f2:	f000 0001 	and.w	r0, r0, #1
900055f6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900055f8:	4618      	mov	r0, r3
900055fa:	4770      	bx	lr

900055fc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
900055fc:	b510      	push	{r4, lr}
900055fe:	4604      	mov	r4, r0
90005600:	214c      	movs	r1, #76	@ 0x4c
90005602:	f025 fc55 	bl	9002aeb0 <_ZdlPvj>
90005606:	4620      	mov	r0, r4
90005608:	bd10      	pop	{r4, pc}
9000560a:	bf00      	nop

9000560c <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000560c:	b510      	push	{r4, lr}
9000560e:	4604      	mov	r4, r0
90005610:	2110      	movs	r1, #16
90005612:	f025 fc4d 	bl	9002aeb0 <_ZdlPvj>
90005616:	4620      	mov	r0, r4
90005618:	bd10      	pop	{r4, pc}
9000561a:	bf00      	nop

9000561c <_ZN17TC_ScreenViewBaseD0Ev>:
TC_ScreenViewBase::~TC_ScreenViewBase()
9000561c:	b510      	push	{r4, lr}
9000561e:	4604      	mov	r4, r0
}
90005620:	f44f 71cc 	mov.w	r1, #408	@ 0x198
90005624:	f025 fc44 	bl	9002aeb0 <_ZdlPvj>
90005628:	4620      	mov	r0, r4
9000562a:	bd10      	pop	{r4, pc}

9000562c <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TC_ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
9000562c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (&src == &TC_Button)
9000562e:	f100 0398 	add.w	r3, r0, #152	@ 0x98
{
90005632:	4604      	mov	r4, r0
90005634:	460d      	mov	r5, r1
    if (&src == &TC_Button)
90005636:	4299      	cmp	r1, r3
90005638:	d004      	beq.n	90005644 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
9000563a:	f500 7696 	add.w	r6, r0, #300	@ 0x12c
        //When Show_TC completed show Erase_TC_Button
        //Show Erase_TC_Button
        Erase_TC_Button.setVisible(true);
        Erase_TC_Button.invalidate();
    }
    if (&src == &Erase_TC_Button)
9000563e:	42b5      	cmp	r5, r6
90005640:	d00f      	beq.n	90005662 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
        //Erase_Change_Screen
        //When Erase_TC_Button clicked change screen to Home_Screen
        //Go to Home_Screen with screen transition towards East
        application().gotoHome_ScreenScreenWipeTransitionEast();
    }
}
90005642:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        visible = vis;
90005644:	2701      	movs	r7, #1
        Erase_TC_Button.invalidate();
90005646:	f504 7696 	add.w	r6, r4, #300	@ 0x12c
        TC_TextBox.invalidate();
9000564a:	30e0      	adds	r0, #224	@ 0xe0
9000564c:	f884 7105 	strb.w	r7, [r4, #261]	@ 0x105
90005650:	f013 ff6b 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
        Erase_TC_Button.invalidate();
90005654:	4630      	mov	r0, r6
90005656:	f884 7151 	strb.w	r7, [r4, #337]	@ 0x151
9000565a:	f013 ff66 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
    if (&src == &Erase_TC_Button)
9000565e:	42b5      	cmp	r5, r6
90005660:	d1ef      	bne.n	90005642 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~TC_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005662:	f012 fd81 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
}
90005666:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        application().gotoHome_ScreenScreenWipeTransitionEast();
9000566a:	f7ff bd23 	b.w	900050b4 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>
9000566e:	bf00      	nop

90005670 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90005670:	4b1b      	ldr	r3, [pc, #108]	@ (900056e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005672:	6802      	ldr	r2, [r0, #0]
90005674:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90005676:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005678:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000567a:	b323      	cbz	r3, 900056c6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
9000567c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000567e:	4919      	ldr	r1, [pc, #100]	@ (900056e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90005680:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90005682:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005684:	8809      	ldrh	r1, [r1, #0]
90005686:	4291      	cmp	r1, r2
90005688:	d923      	bls.n	900056d2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000568a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000568e:	4b16      	ldr	r3, [pc, #88]	@ (900056e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90005690:	681b      	ldr	r3, [r3, #0]
90005692:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005696:	4a15      	ldr	r2, [pc, #84]	@ (900056ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90005698:	6803      	ldr	r3, [r0, #0]
9000569a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000569c:	4293      	cmp	r3, r2
9000569e:	d107      	bne.n	900056b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
900056a0:	88c0      	ldrh	r0, [r0, #6]
900056a2:	4b13      	ldr	r3, [pc, #76]	@ (900056f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900056a4:	1a31      	subs	r1, r6, r0
900056a6:	429d      	cmp	r5, r3
900056a8:	b209      	sxth	r1, r1
900056aa:	d107      	bne.n	900056bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
900056ac:	80e1      	strh	r1, [r4, #6]
    }
900056ae:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900056b0:	4798      	blx	r3
900056b2:	4b0f      	ldr	r3, [pc, #60]	@ (900056f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900056b4:	1a31      	subs	r1, r6, r0
900056b6:	429d      	cmp	r5, r3
900056b8:	b209      	sxth	r1, r1
900056ba:	d0f7      	beq.n	900056ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900056bc:	4620      	mov	r0, r4
900056be:	462b      	mov	r3, r5
    }
900056c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900056c4:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900056c6:	4b0b      	ldr	r3, [pc, #44]	@ (900056f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900056c8:	216c      	movs	r1, #108	@ 0x6c
900056ca:	4a0b      	ldr	r2, [pc, #44]	@ (900056f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900056cc:	480b      	ldr	r0, [pc, #44]	@ (900056fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900056ce:	f025 ff67 	bl	9002b5a0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900056d2:	4b0b      	ldr	r3, [pc, #44]	@ (90005700 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900056d4:	216d      	movs	r1, #109	@ 0x6d
900056d6:	4a08      	ldr	r2, [pc, #32]	@ (900056f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900056d8:	4808      	ldr	r0, [pc, #32]	@ (900056fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900056da:	f025 ff61 	bl	9002b5a0 <__assert_func>
900056de:	bf00      	nop
900056e0:	24021924 	.word	0x24021924
900056e4:	24021928 	.word	0x24021928
900056e8:	2402192c 	.word	0x2402192c
900056ec:	90004889 	.word	0x90004889
900056f0:	90002e01 	.word	0x90002e01
900056f4:	9002e148 	.word	0x9002e148
900056f8:	9002e18c 	.word	0x9002e18c
900056fc:	9002e1c8 	.word	0x9002e1c8
90005700:	9002e210 	.word	0x9002e210

90005704 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90005704:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005706:	b570      	push	{r4, r5, r6, lr}
90005708:	4614      	mov	r4, r2
9000570a:	4e23      	ldr	r6, [pc, #140]	@ (90005798 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
9000570c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000570e:	4605      	mov	r5, r0
90005710:	42b2      	cmp	r2, r6
90005712:	d122      	bne.n	9000575a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90005714:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90005716:	80a9      	strh	r1, [r5, #4]
90005718:	4920      	ldr	r1, [pc, #128]	@ (9000579c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
9000571a:	428a      	cmp	r2, r1
9000571c:	d123      	bne.n	90005766 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000571e:	4a20      	ldr	r2, [pc, #128]	@ (900057a0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005720:	b2a4      	uxth	r4, r4
90005722:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90005724:	6813      	ldr	r3, [r2, #0]
90005726:	2b00      	cmp	r3, #0
90005728:	d02f      	beq.n	9000578a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
9000572a:	491e      	ldr	r1, [pc, #120]	@ (900057a4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000572c:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000572e:	8809      	ldrh	r1, [r1, #0]
90005730:	4291      	cmp	r1, r2
90005732:	d924      	bls.n	9000577e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90005734:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90005738:	4b1b      	ldr	r3, [pc, #108]	@ (900057a8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
9000573a:	681b      	ldr	r3, [r3, #0]
9000573c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005740:	4a1a      	ldr	r2, [pc, #104]	@ (900057ac <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90005742:	6803      	ldr	r3, [r0, #0]
90005744:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005746:	4293      	cmp	r3, r2
90005748:	d117      	bne.n	9000577a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
9000574a:	88c0      	ldrh	r0, [r0, #6]
9000574c:	4b18      	ldr	r3, [pc, #96]	@ (900057b0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
9000574e:	1a24      	subs	r4, r4, r0
90005750:	429e      	cmp	r6, r3
90005752:	b221      	sxth	r1, r4
90005754:	d10c      	bne.n	90005770 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90005756:	80e9      	strh	r1, [r5, #6]
    }
90005758:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
9000575a:	4790      	blx	r2
        setBaselineY(baselineY);
9000575c:	682b      	ldr	r3, [r5, #0]
9000575e:	490f      	ldr	r1, [pc, #60]	@ (9000579c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005760:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90005762:	428a      	cmp	r2, r1
90005764:	d0db      	beq.n	9000571e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90005766:	4621      	mov	r1, r4
90005768:	4628      	mov	r0, r5
    }
9000576a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
9000576e:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005770:	4628      	mov	r0, r5
90005772:	4633      	mov	r3, r6
    }
90005774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005778:	4718      	bx	r3
9000577a:	4798      	blx	r3
9000577c:	e7e6      	b.n	9000574c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000577e:	4b0d      	ldr	r3, [pc, #52]	@ (900057b4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005780:	216d      	movs	r1, #109	@ 0x6d
90005782:	4a0d      	ldr	r2, [pc, #52]	@ (900057b8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005784:	480d      	ldr	r0, [pc, #52]	@ (900057bc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005786:	f025 ff0b 	bl	9002b5a0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000578a:	4b0d      	ldr	r3, [pc, #52]	@ (900057c0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000578c:	216c      	movs	r1, #108	@ 0x6c
9000578e:	4a0a      	ldr	r2, [pc, #40]	@ (900057b8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005790:	480a      	ldr	r0, [pc, #40]	@ (900057bc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005792:	f025 ff05 	bl	9002b5a0 <__assert_func>
90005796:	bf00      	nop
90005798:	90002dfd 	.word	0x90002dfd
9000579c:	90005671 	.word	0x90005671
900057a0:	24021924 	.word	0x24021924
900057a4:	24021928 	.word	0x24021928
900057a8:	2402192c 	.word	0x2402192c
900057ac:	90004889 	.word	0x90004889
900057b0:	90002e01 	.word	0x90002e01
900057b4:	9002e210 	.word	0x9002e210
900057b8:	9002e18c 	.word	0x9002e18c
900057bc:	9002e1c8 	.word	0x9002e1c8
900057c0:	9002e148 	.word	0x9002e148

900057c4 <_ZN17TC_ScreenViewBaseC1Ev>:
TC_ScreenViewBase::TC_ScreenViewBase() :
900057c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900057c8:	4604      	mov	r4, r0
900057ca:	b08b      	sub	sp, #44	@ 0x2c
900057cc:	2500      	movs	r5, #0
900057ce:	f014 fd21 	bl	9001a214 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &TC_ScreenViewBase::buttonCallbackHandler)
900057d2:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
900057d6:	4acc      	ldr	r2, [pc, #816]	@ (90005b08 <_ZN17TC_ScreenViewBaseC1Ev+0x344>)
        : Widget(), alpha(255), color(0)
900057d8:	4bcc      	ldr	r3, [pc, #816]	@ (90005b0c <_ZN17TC_ScreenViewBaseC1Ev+0x348>)
          touchable(false),
900057da:	f44f 7980 	mov.w	r9, #256	@ 0x100
900057de:	26ff      	movs	r6, #255	@ 0xff
900057e0:	f64f 78ff 	movw	r8, #65535	@ 0xffff
900057e4:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
900057e8:	6022      	str	r2, [r4, #0]
900057ea:	a908      	add	r1, sp, #32
900057ec:	6423      	str	r3, [r4, #64]	@ 0x40
900057ee:	4638      	mov	r0, r7
900057f0:	f8a4 9064 	strh.w	r9, [r4, #100]	@ 0x64
900057f4:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
900057f8:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900057fa:	66a5      	str	r5, [r4, #104]	@ 0x68
900057fc:	f8ad 8020 	strh.w	r8, [sp, #32]
        : x(0), y(0), width(0), height(0)
90005800:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90005804:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90005808:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
9000580c:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90005810:	f00f f8da 	bl	900149c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005814:	4650      	mov	r0, sl
90005816:	f010 f8ef 	bl	900159f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
9000581a:	4bbd      	ldr	r3, [pc, #756]	@ (90005b10 <_ZN17TC_ScreenViewBaseC1Ev+0x34c>)
9000581c:	f8a4 810c 	strh.w	r8, [r4, #268]	@ 0x10c
90005820:	f504 7896 	add.w	r8, r4, #300	@ 0x12c
90005824:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005828:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
9000582c:	f8a4 9104 	strh.w	r9, [r4, #260]	@ 0x104
90005830:	4640      	mov	r0, r8
90005832:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        : TextAreaWithWildcardBase(), wc1(0)
90005836:	4bb7      	ldr	r3, [pc, #732]	@ (90005b14 <_ZN17TC_ScreenViewBaseC1Ev+0x350>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005838:	f8c4 6116 	str.w	r6, [r4, #278]	@ 0x116
9000583c:	1d26      	adds	r6, r4, #4
9000583e:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
        : color(col)
90005842:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
90005846:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000584a:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
        rect.x = x;
9000584e:	f8df 92fc 	ldr.w	r9, [pc, #764]	@ 90005b4c <_ZN17TC_ScreenViewBaseC1Ev+0x388>
        : x(0), y(0), width(0), height(0)
90005852:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
90005856:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
9000585a:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
9000585e:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
90005862:	e9c4 5549 	strd	r5, r5, [r4, #292]	@ 0x124
90005866:	f010 f8c7 	bl	900159f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
9000586a:	4bab      	ldr	r3, [pc, #684]	@ (90005b18 <_ZN17TC_ScreenViewBaseC1Ev+0x354>)
9000586c:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005870:	4630      	mov	r0, r6
90005872:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
90005876:	4ba9      	ldr	r3, [pc, #676]	@ (90005b1c <_ZN17TC_ScreenViewBaseC1Ev+0x358>)
        rect.x = x;
90005878:	f8c4 9048 	str.w	r9, [r4, #72]	@ 0x48
9000587c:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
        color = newColor;
90005880:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005884:	f8c4 418c 	str.w	r4, [r4, #396]	@ 0x18c
90005888:	66a3      	str	r3, [r4, #104]	@ 0x68
9000588a:	f8c4 5194 	str.w	r5, [r4, #404]	@ 0x194
9000588e:	6465      	str	r5, [r4, #68]	@ 0x44
90005890:	f00c f99c 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005894:	2302      	movs	r3, #2
    ATECH_LOGO.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
90005896:	4638      	mov	r0, r7
90005898:	a908      	add	r1, sp, #32
9000589a:	f8ad 3020 	strh.w	r3, [sp, #32]
9000589e:	f00f ff74 	bl	9001578a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ATECH_LOGO.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900058a2:	4638      	mov	r0, r7
900058a4:	4629      	mov	r1, r5
900058a6:	e9c4 591c 	strd	r5, r9, [r4, #112]	@ 0x70
900058aa:	f00f f848 	bl	9001493e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900058ae:	4639      	mov	r1, r7
900058b0:	4630      	mov	r0, r6
        return typedTextId < numberOfTypedTexts;
900058b2:	4f9b      	ldr	r7, [pc, #620]	@ (90005b20 <_ZN17TC_ScreenViewBaseC1Ev+0x35c>)
900058b4:	f00c f98a 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058b8:	f44f 035e 	mov.w	r3, #14548992	@ 0xde0000
    TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
900058bc:	a907      	add	r1, sp, #28
900058be:	aa08      	add	r2, sp, #32
900058c0:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
900058c4:	4650      	mov	r0, sl
900058c6:	f8ad 501c 	strh.w	r5, [sp, #28]
900058ca:	f8ad 5020 	strh.w	r5, [sp, #32]
900058ce:	f00f fe2a 	bl	90015526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900058d2:	2104      	movs	r1, #4
        if (typedText.hasValidId())
900058d4:	883b      	ldrh	r3, [r7, #0]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900058d6:	f8df 9278 	ldr.w	r9, [pc, #632]	@ 90005b50 <_ZN17TC_ScreenViewBaseC1Ev+0x38c>
900058da:	428b      	cmp	r3, r1
class TypedText
900058dc:	f8a4 10d0 	strh.w	r1, [r4, #208]	@ 0xd0
900058e0:	d926      	bls.n	90005930 <_ZN17TC_ScreenViewBaseC1Ev+0x16c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900058e2:	f8d9 3000 	ldr.w	r3, [r9]
900058e6:	2b00      	cmp	r3, #0
900058e8:	f000 8134 	beq.w	90005b54 <_ZN17TC_ScreenViewBaseC1Ev+0x390>
        return fonts[typedTexts[typedTextId].fontIdx];
900058ec:	7a1a      	ldrb	r2, [r3, #8]
900058ee:	4b8d      	ldr	r3, [pc, #564]	@ (90005b24 <_ZN17TC_ScreenViewBaseC1Ev+0x360>)
900058f0:	681b      	ldr	r3, [r3, #0]
900058f2:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900058f6:	4b8c      	ldr	r3, [pc, #560]	@ (90005b28 <_ZN17TC_ScreenViewBaseC1Ev+0x364>)
900058f8:	6818      	ldr	r0, [r3, #0]
900058fa:	f000 facf 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900058fe:	f8db 3000 	ldr.w	r3, [fp]
90005902:	4601      	mov	r1, r0
90005904:	4889      	ldr	r0, [pc, #548]	@ (90005b2c <_ZN17TC_ScreenViewBaseC1Ev+0x368>)
90005906:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005908:	4282      	cmp	r2, r0
9000590a:	f040 80ef 	bne.w	90005aec <_ZN17TC_ScreenViewBaseC1Ev+0x328>
        return fontHeight;
9000590e:	f8bb 5004 	ldrh.w	r5, [fp, #4]
90005912:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005914:	4658      	mov	r0, fp
90005916:	9101      	str	r1, [sp, #4]
90005918:	4798      	blx	r3
9000591a:	fb15 f500 	smulbb	r5, r5, r0
9000591e:	f8db 3000 	ldr.w	r3, [fp]
90005922:	4658      	mov	r0, fp
90005924:	b2ad      	uxth	r5, r5
90005926:	9901      	ldr	r1, [sp, #4]
90005928:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000592a:	4798      	blx	r3
9000592c:	4405      	add	r5, r0
9000592e:	b22d      	sxth	r5, r5
        color = col;
90005930:	f04f 33ff 	mov.w	r3, #4294967295
    TC_Button.setAction(buttonCallback);
90005934:	f504 7bc4 	add.w	fp, r4, #392	@ 0x188
90005938:	4651      	mov	r1, sl
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000593a:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
9000593e:	4630      	mov	r0, r6
90005940:	f8c4 b0c0 	str.w	fp, [r4, #192]	@ 0xc0
    TC_TextBox.setPosition(0, 178, 240, 44);
90005944:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
        colorPressed = col;
90005948:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
9000594c:	f00c f93e 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005950:	f44f 0232 	mov.w	r2, #11665408	@ 0xb20000
        setX(x);
90005954:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90005958:	4975      	ldr	r1, [pc, #468]	@ (90005b30 <_ZN17TC_ScreenViewBaseC1Ev+0x36c>)
        rect.x = x;
9000595a:	f8c4 20e4 	str.w	r2, [r4, #228]	@ 0xe4
        setWidth(width);
9000595e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005960:	428a      	cmp	r2, r1
90005962:	f040 80bf 	bne.w	90005ae4 <_ZN17TC_ScreenViewBaseC1Ev+0x320>
        rect.width = width;
90005966:	22f0      	movs	r2, #240	@ 0xf0
        boundingArea = calculateBoundingArea();
90005968:	f10d 0a08 	add.w	sl, sp, #8
9000596c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005970:	4629      	mov	r1, r5
90005972:	4650      	mov	r0, sl
90005974:	f8a4 20e8 	strh.w	r2, [r4, #232]	@ 0xe8
90005978:	4798      	blx	r3
9000597a:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
9000597e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
90005982:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005986:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
9000598a:	496a      	ldr	r1, [pc, #424]	@ (90005b34 <_ZN17TC_ScreenViewBaseC1Ev+0x370>)
9000598c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000598e:	428a      	cmp	r2, r1
90005990:	f040 8098 	bne.w	90005ac4 <_ZN17TC_ScreenViewBaseC1Ev+0x300>
        rect.height = height;
90005994:	222c      	movs	r2, #44	@ 0x2c
        boundingArea = calculateBoundingArea();
90005996:	f10d 0a08 	add.w	sl, sp, #8
9000599a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000599e:	4629      	mov	r1, r5
900059a0:	4650      	mov	r0, sl
900059a2:	f8a4 20ea 	strh.w	r2, [r4, #234]	@ 0xea
900059a6:	4798      	blx	r3
900059a8:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
900059ac:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
900059b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900059b4:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
900059b8:	495f      	ldr	r1, [pc, #380]	@ (90005b38 <_ZN17TC_ScreenViewBaseC1Ev+0x374>)
900059ba:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        color = newColor;
900059be:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900059c2:	428a      	cmp	r2, r1
900059c4:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
        linespace = space;
900059c8:	f04f 0300 	mov.w	r3, #0
900059cc:	f8a4 3114 	strh.w	r3, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
900059d0:	d17c      	bne.n	90005acc <_ZN17TC_ScreenViewBaseC1Ev+0x308>
900059d2:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
900059d6:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
900059da:	f04f 33ff 	mov.w	r3, #4294967295
900059de:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900059e2:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s", touchgfx::TypedText(T_TC_TEXTBOX_BUFFER).getText());
900059e6:	f504 7aba 	add.w	sl, r4, #372	@ 0x174
900059ea:	2b00      	cmp	r3, #0
900059ec:	f000 80be 	beq.w	90005b6c <_ZN17TC_ScreenViewBaseC1Ev+0x3a8>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900059f0:	883b      	ldrh	r3, [r7, #0]
900059f2:	2b06      	cmp	r3, #6
900059f4:	f240 80b4 	bls.w	90005b60 <_ZN17TC_ScreenViewBaseC1Ev+0x39c>
        return texts->getText(typedTextId);
900059f8:	4b4b      	ldr	r3, [pc, #300]	@ (90005b28 <_ZN17TC_ScreenViewBaseC1Ev+0x364>)
900059fa:	2106      	movs	r1, #6
900059fc:	6818      	ldr	r0, [r3, #0]
900059fe:	f000 fa4d 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90005a02:	4a4e      	ldr	r2, [pc, #312]	@ (90005b3c <_ZN17TC_ScreenViewBaseC1Ev+0x378>)
90005a04:	4603      	mov	r3, r0
90005a06:	210a      	movs	r1, #10
90005a08:	4650      	mov	r0, sl
90005a0a:	f016 f8e9 	bl	9001bbe0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90005a0e:	4a40      	ldr	r2, [pc, #256]	@ (90005b10 <_ZN17TC_ScreenViewBaseC1Ev+0x34c>)
90005a10:	2305      	movs	r3, #5
    TC_TextBox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VCK));
90005a12:	4628      	mov	r0, r5
90005a14:	a908      	add	r1, sp, #32
        wc1 = value;
90005a16:	f8c4 a128 	str.w	sl, [r4, #296]	@ 0x128
90005a1a:	9208      	str	r2, [sp, #32]
90005a1c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90005a20:	f00f fd24 	bl	9001546c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005a24:	4629      	mov	r1, r5
        visible = vis;
90005a26:	2500      	movs	r5, #0
90005a28:	4630      	mov	r0, r6
90005a2a:	f884 5105 	strb.w	r5, [r4, #261]	@ 0x105
90005a2e:	f00c f8cd 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005a32:	4b43      	ldr	r3, [pc, #268]	@ (90005b40 <_ZN17TC_ScreenViewBaseC1Ev+0x37c>)
    Erase_TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
90005a34:	a907      	add	r1, sp, #28
90005a36:	aa08      	add	r2, sp, #32
90005a38:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
90005a3c:	4640      	mov	r0, r8
90005a3e:	f8ad 501c 	strh.w	r5, [sp, #28]
90005a42:	f8ad 5020 	strh.w	r5, [sp, #32]
90005a46:	f00f fd6e 	bl	90015526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005a4a:	2101      	movs	r1, #1
        if (typedText.hasValidId())
90005a4c:	883b      	ldrh	r3, [r7, #0]
90005a4e:	428b      	cmp	r3, r1
90005a50:	f8a4 1164 	strh.w	r1, [r4, #356]	@ 0x164
90005a54:	d921      	bls.n	90005a9a <_ZN17TC_ScreenViewBaseC1Ev+0x2d6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005a56:	f8d9 3000 	ldr.w	r3, [r9]
90005a5a:	2b00      	cmp	r3, #0
90005a5c:	d07a      	beq.n	90005b54 <_ZN17TC_ScreenViewBaseC1Ev+0x390>
        return fonts[typedTexts[typedTextId].fontIdx];
90005a5e:	789a      	ldrb	r2, [r3, #2]
        return texts->getText(typedTextId);
90005a60:	4b31      	ldr	r3, [pc, #196]	@ (90005b28 <_ZN17TC_ScreenViewBaseC1Ev+0x364>)
90005a62:	6818      	ldr	r0, [r3, #0]
        return fonts[typedTexts[typedTextId].fontIdx];
90005a64:	4b2f      	ldr	r3, [pc, #188]	@ (90005b24 <_ZN17TC_ScreenViewBaseC1Ev+0x360>)
90005a66:	681b      	ldr	r3, [r3, #0]
90005a68:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005a6c:	f000 fa16 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90005a70:	492e      	ldr	r1, [pc, #184]	@ (90005b2c <_ZN17TC_ScreenViewBaseC1Ev+0x368>)
90005a72:	4681      	mov	r9, r0
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005a74:	683b      	ldr	r3, [r7, #0]
90005a76:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005a78:	428a      	cmp	r2, r1
90005a7a:	d13f      	bne.n	90005afc <_ZN17TC_ScreenViewBaseC1Ev+0x338>
90005a7c:	88bd      	ldrh	r5, [r7, #4]
90005a7e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005a80:	4649      	mov	r1, r9
90005a82:	4638      	mov	r0, r7
90005a84:	4798      	blx	r3
90005a86:	fb15 f500 	smulbb	r5, r5, r0
90005a8a:	683b      	ldr	r3, [r7, #0]
90005a8c:	4649      	mov	r1, r9
90005a8e:	b2ad      	uxth	r5, r5
90005a90:	4638      	mov	r0, r7
90005a92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005a94:	4798      	blx	r3
90005a96:	4405      	add	r5, r0
90005a98:	b22d      	sxth	r5, r5
        color = col;
90005a9a:	4b2a      	ldr	r3, [pc, #168]	@ (90005b44 <_ZN17TC_ScreenViewBaseC1Ev+0x380>)
90005a9c:	4630      	mov	r0, r6
        colorPressed = col;
90005a9e:	4a2a      	ldr	r2, [pc, #168]	@ (90005b48 <_ZN17TC_ScreenViewBaseC1Ev+0x384>)
90005aa0:	4641      	mov	r1, r8
        color = col;
90005aa2:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
        visible = vis;
90005aa6:	2300      	movs	r3, #0
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005aa8:	f8a4 5172 	strh.w	r5, [r4, #370]	@ 0x172
90005aac:	f8c4 b154 	str.w	fp, [r4, #340]	@ 0x154
        colorPressed = col;
90005ab0:	f8c4 216c 	str.w	r2, [r4, #364]	@ 0x16c
90005ab4:	f884 3151 	strb.w	r3, [r4, #337]	@ 0x151
90005ab8:	f00c f888 	bl	90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005abc:	4620      	mov	r0, r4
90005abe:	b00b      	add	sp, #44	@ 0x2c
90005ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90005ac4:	212c      	movs	r1, #44	@ 0x2c
90005ac6:	4628      	mov	r0, r5
90005ac8:	4790      	blx	r2
90005aca:	e773      	b.n	900059b4 <_ZN17TC_ScreenViewBaseC1Ev+0x1f0>
90005acc:	f10d 0a08 	add.w	sl, sp, #8
90005ad0:	4629      	mov	r1, r5
90005ad2:	4650      	mov	r0, sl
90005ad4:	4790      	blx	r2
90005ad6:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
90005ada:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
90005ade:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005ae2:	e77e      	b.n	900059e2 <_ZN17TC_ScreenViewBaseC1Ev+0x21e>
        setWidth(width);
90005ae4:	21f0      	movs	r1, #240	@ 0xf0
90005ae6:	4628      	mov	r0, r5
90005ae8:	4790      	blx	r2
90005aea:	e74c      	b.n	90005986 <_ZN17TC_ScreenViewBaseC1Ev+0x1c2>
90005aec:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005aee:	4658      	mov	r0, fp
90005af0:	4790      	blx	r2
90005af2:	f8db 3000 	ldr.w	r3, [fp]
90005af6:	4605      	mov	r5, r0
90005af8:	9901      	ldr	r1, [sp, #4]
90005afa:	e70a      	b.n	90005912 <_ZN17TC_ScreenViewBaseC1Ev+0x14e>
90005afc:	4638      	mov	r0, r7
90005afe:	4790      	blx	r2
90005b00:	683b      	ldr	r3, [r7, #0]
90005b02:	4605      	mov	r5, r0
90005b04:	e7bb      	b.n	90005a7e <_ZN17TC_ScreenViewBaseC1Ev+0x2ba>
90005b06:	bf00      	nop
90005b08:	9002eb44 	.word	0x9002eb44
90005b0c:	9002f714 	.word	0x9002f714
90005b10:	9002e924 	.word	0x9002e924
90005b14:	9002ea9c 	.word	0x9002ea9c
90005b18:	9002eb2c 	.word	0x9002eb2c
90005b1c:	9000562d 	.word	0x9000562d
90005b20:	24021928 	.word	0x24021928
90005b24:	2402192c 	.word	0x2402192c
90005b28:	24021930 	.word	0x24021930
90005b2c:	9000488d 	.word	0x9000488d
90005b30:	90005529 	.word	0x90005529
90005b34:	90005551 	.word	0x90005551
90005b38:	9000559d 	.word	0x9000559d
90005b3c:	9002e29c 	.word	0x9002e29c
90005b40:	00de0131 	.word	0x00de0131
90005b44:	fff70000 	.word	0xfff70000
90005b48:	ffff0000 	.word	0xffff0000
90005b4c:	011001e0 	.word	0x011001e0
90005b50:	24021924 	.word	0x24021924
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b54:	4b08      	ldr	r3, [pc, #32]	@ (90005b78 <_ZN17TC_ScreenViewBaseC1Ev+0x3b4>)
90005b56:	216c      	movs	r1, #108	@ 0x6c
90005b58:	4a08      	ldr	r2, [pc, #32]	@ (90005b7c <_ZN17TC_ScreenViewBaseC1Ev+0x3b8>)
90005b5a:	4809      	ldr	r0, [pc, #36]	@ (90005b80 <_ZN17TC_ScreenViewBaseC1Ev+0x3bc>)
90005b5c:	f025 fd20 	bl	9002b5a0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005b60:	4b08      	ldr	r3, [pc, #32]	@ (90005b84 <_ZN17TC_ScreenViewBaseC1Ev+0x3c0>)
90005b62:	2161      	movs	r1, #97	@ 0x61
90005b64:	4a08      	ldr	r2, [pc, #32]	@ (90005b88 <_ZN17TC_ScreenViewBaseC1Ev+0x3c4>)
90005b66:	4806      	ldr	r0, [pc, #24]	@ (90005b80 <_ZN17TC_ScreenViewBaseC1Ev+0x3bc>)
90005b68:	f025 fd1a 	bl	9002b5a0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b6c:	4b02      	ldr	r3, [pc, #8]	@ (90005b78 <_ZN17TC_ScreenViewBaseC1Ev+0x3b4>)
90005b6e:	2160      	movs	r1, #96	@ 0x60
90005b70:	4a05      	ldr	r2, [pc, #20]	@ (90005b88 <_ZN17TC_ScreenViewBaseC1Ev+0x3c4>)
90005b72:	4803      	ldr	r0, [pc, #12]	@ (90005b80 <_ZN17TC_ScreenViewBaseC1Ev+0x3bc>)
90005b74:	f025 fd14 	bl	9002b5a0 <__assert_func>
90005b78:	9002e148 	.word	0x9002e148
90005b7c:	9002e18c 	.word	0x9002e18c
90005b80:	9002e1c8 	.word	0x9002e1c8
90005b84:	9002e210 	.word	0x9002e210
90005b88:	9002e250 	.word	0x9002e250

90005b8c <__tcf_0>:

touchgfx::GeneratedFont& getFont_calibri_20_4bpp();

touchgfx::GeneratedFont& getFont_calibri_20_4bpp()
{
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 52, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
90005b8c:	4770      	bx	lr
90005b8e:	bf00      	nop

90005b90 <_Z23getFont_calibri_20_4bppv>:
{
90005b90:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 52, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
90005b92:	4d19      	ldr	r5, [pc, #100]	@ (90005bf8 <_Z23getFont_calibri_20_4bppv+0x68>)
{
90005b94:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 52, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
90005b96:	682c      	ldr	r4, [r5, #0]
90005b98:	f3bf 8f5b 	dmb	ish
90005b9c:	f014 0401 	ands.w	r4, r4, #1
90005ba0:	d002      	beq.n	90005ba8 <_Z23getFont_calibri_20_4bppv+0x18>
    return calibri_20_4bpp;
}
90005ba2:	4816      	ldr	r0, [pc, #88]	@ (90005bfc <_Z23getFont_calibri_20_4bppv+0x6c>)
90005ba4:	b00f      	add	sp, #60	@ 0x3c
90005ba6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 52, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
90005ba8:	4628      	mov	r0, r5
90005baa:	f025 f983 	bl	9002aeb4 <__cxa_guard_acquire>
90005bae:	2800      	cmp	r0, #0
90005bb0:	d0f7      	beq.n	90005ba2 <_Z23getFont_calibri_20_4bppv+0x12>
90005bb2:	4913      	ldr	r1, [pc, #76]	@ (90005c00 <_Z23getFont_calibri_20_4bppv+0x70>)
90005bb4:	223f      	movs	r2, #63	@ 0x3f
90005bb6:	2301      	movs	r3, #1
90005bb8:	9405      	str	r4, [sp, #20]
90005bba:	4810      	ldr	r0, [pc, #64]	@ (90005bfc <_Z23getFont_calibri_20_4bppv+0x6c>)
90005bbc:	9306      	str	r3, [sp, #24]
90005bbe:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
90005bc2:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
90005bc6:	490f      	ldr	r1, [pc, #60]	@ (90005c04 <_Z23getFont_calibri_20_4bppv+0x74>)
90005bc8:	4a0f      	ldr	r2, [pc, #60]	@ (90005c08 <_Z23getFont_calibri_20_4bppv+0x78>)
90005bca:	9108      	str	r1, [sp, #32]
90005bcc:	2114      	movs	r1, #20
90005bce:	9207      	str	r2, [sp, #28]
90005bd0:	2204      	movs	r2, #4
90005bd2:	9100      	str	r1, [sp, #0]
90005bd4:	490d      	ldr	r1, [pc, #52]	@ (90005c0c <_Z23getFont_calibri_20_4bppv+0x7c>)
90005bd6:	e9cd 2303 	strd	r2, r3, [sp, #12]
90005bda:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005bde:	2316      	movs	r3, #22
90005be0:	2234      	movs	r2, #52	@ 0x34
90005be2:	f7ff fac1 	bl	90005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005be6:	480a      	ldr	r0, [pc, #40]	@ (90005c10 <_Z23getFont_calibri_20_4bppv+0x80>)
90005be8:	f025 fcf8 	bl	9002b5dc <atexit>
90005bec:	4628      	mov	r0, r5
90005bee:	f025 f96d 	bl	9002aecc <__cxa_guard_release>
}
90005bf2:	4802      	ldr	r0, [pc, #8]	@ (90005bfc <_Z23getFont_calibri_20_4bppv+0x6c>)
90005bf4:	b00f      	add	sp, #60	@ 0x3c
90005bf6:	bd30      	pop	{r4, r5, pc}
90005bf8:	2400777c 	.word	0x2400777c
90005bfc:	24007780 	.word	0x24007780
90005c00:	9002eb70 	.word	0x9002eb70
90005c04:	9002ff9c 	.word	0x9002ff9c
90005c08:	9002ffe0 	.word	0x9002ffe0
90005c0c:	90200e6c 	.word	0x90200e6c
90005c10:	90005b8d 	.word	0x90005b8d

90005c14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 18, 10, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005c14:	4770      	bx	lr
90005c16:	bf00      	nop

90005c18 <_Z23getFont_verdana_10_4bppv>:
{
90005c18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 18, 10, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005c1a:	4d18      	ldr	r5, [pc, #96]	@ (90005c7c <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005c1c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 18, 10, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005c1e:	682c      	ldr	r4, [r5, #0]
90005c20:	f3bf 8f5b 	dmb	ish
90005c24:	f014 0401 	ands.w	r4, r4, #1
90005c28:	d002      	beq.n	90005c30 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005c2a:	4815      	ldr	r0, [pc, #84]	@ (90005c80 <_Z23getFont_verdana_10_4bppv+0x68>)
90005c2c:	b00f      	add	sp, #60	@ 0x3c
90005c2e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 18, 10, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005c30:	4628      	mov	r0, r5
90005c32:	f025 f93f 	bl	9002aeb4 <__cxa_guard_acquire>
90005c36:	2800      	cmp	r0, #0
90005c38:	d0f7      	beq.n	90005c2a <_Z23getFont_verdana_10_4bppv+0x12>
90005c3a:	213f      	movs	r1, #63	@ 0x3f
90005c3c:	2201      	movs	r2, #1
90005c3e:	230a      	movs	r3, #10
90005c40:	480f      	ldr	r0, [pc, #60]	@ (90005c80 <_Z23getFont_verdana_10_4bppv+0x68>)
90005c42:	9204      	str	r2, [sp, #16]
90005c44:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005c48:	490e      	ldr	r1, [pc, #56]	@ (90005c84 <_Z23getFont_verdana_10_4bppv+0x6c>)
90005c4a:	e9cd 4205 	strd	r4, r2, [sp, #20]
90005c4e:	9108      	str	r1, [sp, #32]
90005c50:	2204      	movs	r2, #4
90005c52:	490d      	ldr	r1, [pc, #52]	@ (90005c88 <_Z23getFont_verdana_10_4bppv+0x70>)
90005c54:	e9cd 3400 	strd	r3, r4, [sp]
90005c58:	9107      	str	r1, [sp, #28]
90005c5a:	490c      	ldr	r1, [pc, #48]	@ (90005c8c <_Z23getFont_verdana_10_4bppv+0x74>)
90005c5c:	e9cd 4202 	strd	r4, r2, [sp, #8]
90005c60:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005c64:	2212      	movs	r2, #18
90005c66:	f7ff fa7f 	bl	90005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005c6a:	4809      	ldr	r0, [pc, #36]	@ (90005c90 <_Z23getFont_verdana_10_4bppv+0x78>)
90005c6c:	f025 fcb6 	bl	9002b5dc <atexit>
90005c70:	4628      	mov	r0, r5
90005c72:	f025 f92b 	bl	9002aecc <__cxa_guard_release>
}
90005c76:	4802      	ldr	r0, [pc, #8]	@ (90005c80 <_Z23getFont_verdana_10_4bppv+0x68>)
90005c78:	b00f      	add	sp, #60	@ 0x3c
90005c7a:	bd30      	pop	{r4, r5, pc}
90005c7c:	240077ac 	.word	0x240077ac
90005c80:	240077b0 	.word	0x240077b0
90005c84:	9002ffd8 	.word	0x9002ffd8
90005c88:	9002ffe4 	.word	0x9002ffe4
90005c8c:	90201144 	.word	0x90201144
90005c90:	90005c15 	.word	0x90005c15

90005c94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005c94:	4770      	bx	lr
90005c96:	bf00      	nop

90005c98 <_Z23getFont_verdana_40_4bppv>:
{
90005c98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005c9a:	4d18      	ldr	r5, [pc, #96]	@ (90005cfc <_Z23getFont_verdana_40_4bppv+0x64>)
{
90005c9c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005c9e:	682c      	ldr	r4, [r5, #0]
90005ca0:	f3bf 8f5b 	dmb	ish
90005ca4:	f014 0401 	ands.w	r4, r4, #1
90005ca8:	d002      	beq.n	90005cb0 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90005caa:	4815      	ldr	r0, [pc, #84]	@ (90005d00 <_Z23getFont_verdana_40_4bppv+0x68>)
90005cac:	b00f      	add	sp, #60	@ 0x3c
90005cae:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005cb0:	4628      	mov	r0, r5
90005cb2:	f025 f8ff 	bl	9002aeb4 <__cxa_guard_acquire>
90005cb6:	2800      	cmp	r0, #0
90005cb8:	d0f7      	beq.n	90005caa <_Z23getFont_verdana_40_4bppv+0x12>
90005cba:	213f      	movs	r1, #63	@ 0x3f
90005cbc:	2201      	movs	r2, #1
90005cbe:	2328      	movs	r3, #40	@ 0x28
90005cc0:	2004      	movs	r0, #4
90005cc2:	9204      	str	r2, [sp, #16]
90005cc4:	9300      	str	r3, [sp, #0]
90005cc6:	9003      	str	r0, [sp, #12]
90005cc8:	480d      	ldr	r0, [pc, #52]	@ (90005d00 <_Z23getFont_verdana_40_4bppv+0x68>)
90005cca:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005cce:	490d      	ldr	r1, [pc, #52]	@ (90005d04 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005cd0:	9108      	str	r1, [sp, #32]
90005cd2:	490d      	ldr	r1, [pc, #52]	@ (90005d08 <_Z23getFont_verdana_40_4bppv+0x70>)
90005cd4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005cd8:	9107      	str	r1, [sp, #28]
90005cda:	490c      	ldr	r1, [pc, #48]	@ (90005d0c <_Z23getFont_verdana_40_4bppv+0x74>)
90005cdc:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005ce0:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005ce4:	f7ff fa40 	bl	90005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005ce8:	4809      	ldr	r0, [pc, #36]	@ (90005d10 <_Z23getFont_verdana_40_4bppv+0x78>)
90005cea:	f025 fc77 	bl	9002b5dc <atexit>
90005cee:	4628      	mov	r0, r5
90005cf0:	f025 f8ec 	bl	9002aecc <__cxa_guard_release>
}
90005cf4:	4802      	ldr	r0, [pc, #8]	@ (90005d00 <_Z23getFont_verdana_40_4bppv+0x68>)
90005cf6:	b00f      	add	sp, #60	@ 0x3c
90005cf8:	bd30      	pop	{r4, r5, pc}
90005cfa:	bf00      	nop
90005cfc:	240077dc 	.word	0x240077dc
90005d00:	240077e0 	.word	0x240077e0
90005d04:	9002ffdc 	.word	0x9002ffdc
90005d08:	9002ffe8 	.word	0x9002ffe8
90005d0c:	90201240 	.word	0x90201240
90005d10:	90005c95 	.word	0x90005c95

90005d14 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90005d14:	2000      	movs	r0, #0
90005d16:	4770      	bx	lr

90005d18 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005d18:	2000      	movs	r0, #0
90005d1a:	4770      	bx	lr

90005d1c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005d1c:	b40e      	push	{r1, r2, r3}
90005d1e:	b500      	push	{lr}
90005d20:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005d22:	2100      	movs	r1, #0
{
90005d24:	ab03      	add	r3, sp, #12
90005d26:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005d2a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005d2c:	f013 fad2 	bl	900192d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005d30:	b002      	add	sp, #8
90005d32:	f85d eb04 	ldr.w	lr, [sp], #4
90005d36:	b003      	add	sp, #12
90005d38:	4770      	bx	lr
90005d3a:	bf00      	nop

90005d3c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005d3c:	b40c      	push	{r2, r3}
90005d3e:	b500      	push	{lr}
90005d40:	b083      	sub	sp, #12
90005d42:	ab04      	add	r3, sp, #16
90005d44:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005d48:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005d4a:	f013 fac3 	bl	900192d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005d4e:	b003      	add	sp, #12
90005d50:	f85d eb04 	ldr.w	lr, [sp], #4
90005d54:	b002      	add	sp, #8
90005d56:	4770      	bx	lr

90005d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005d58:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005d5a:	b510      	push	{r4, lr}
90005d5c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90005d5e:	b133      	cbz	r3, 90005d6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005d60:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90005d62:	b39b      	cbz	r3, 90005dcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005d64:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005d66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005d6a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005d6c:	b923      	cbnz	r3, 90005d78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90005d6e:	4620      	mov	r0, r4
}
90005d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005d74:	f015 b88e 	b.w	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005d78:	f015 f98a 	bl	9001b090 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005d7c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90005d7e:	2b01      	cmp	r3, #1
90005d80:	d92a      	bls.n	90005dd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90005d82:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005d84:	1c53      	adds	r3, r2, #1
90005d86:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005d88:	2b09      	cmp	r3, #9
90005d8a:	d812      	bhi.n	90005db2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005d8c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005d90:	f640 103f 	movw	r0, #2367	@ 0x93f
90005d94:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005d96:	4281      	cmp	r1, r0
90005d98:	d1e9      	bne.n	90005d6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005d9a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005d9e:	0052      	lsls	r2, r2, #1
90005da0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90005da2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005da6:	4422      	add	r2, r4
90005da8:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005dac:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90005dae:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005db0:	e7dd      	b.n	90005d6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90005db2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005db6:	f640 113f 	movw	r1, #2367	@ 0x93f
90005dba:	89db      	ldrh	r3, [r3, #14]
90005dbc:	428b      	cmp	r3, r1
90005dbe:	d1d6      	bne.n	90005d6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005dc0:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005dc4:	2300      	movs	r3, #0
90005dc6:	0052      	lsls	r2, r2, #1
90005dc8:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90005dca:	e7ea      	b.n	90005da2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90005dcc:	4b05      	ldr	r3, [pc, #20]	@ (90005de4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90005dce:	21c5      	movs	r1, #197	@ 0xc5
90005dd0:	4a05      	ldr	r2, [pc, #20]	@ (90005de8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90005dd2:	4806      	ldr	r0, [pc, #24]	@ (90005dec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005dd4:	f025 fbe4 	bl	9002b5a0 <__assert_func>
            assert(offset < used);
90005dd8:	4b05      	ldr	r3, [pc, #20]	@ (90005df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90005dda:	21cb      	movs	r1, #203	@ 0xcb
90005ddc:	4a05      	ldr	r2, [pc, #20]	@ (90005df4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90005dde:	4803      	ldr	r0, [pc, #12]	@ (90005dec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005de0:	f025 fbde 	bl	9002b5a0 <__assert_func>
90005de4:	9002e2a0 	.word	0x9002e2a0
90005de8:	9002e2ac 	.word	0x9002e2ac
90005dec:	9002e358 	.word	0x9002e358
90005df0:	9002e3a4 	.word	0x9002e3a4
90005df4:	9002e3b4 	.word	0x9002e3b4

90005df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90005df8:	f015 b815 	b.w	9001ae26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90005dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90005dfc:	b510      	push	{r4, lr}
90005dfe:	b086      	sub	sp, #24
90005e00:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90005e04:	ac0a      	add	r4, sp, #40	@ 0x28
{
90005e06:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005e0a:	461a      	mov	r2, r3
90005e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005e0e:	4661      	mov	r1, ip
90005e10:	9401      	str	r4, [sp, #4]
90005e12:	9300      	str	r3, [sp, #0]
90005e14:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90005e16:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005e18:	f011 fd26 	bl	90017868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005e1c:	b006      	add	sp, #24
90005e1e:	bd10      	pop	{r4, pc}

90005e20 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005e20:	b9e0      	cbnz	r0, 90005e5c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90005e22:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005e24:	4b13      	ldr	r3, [pc, #76]	@ (90005e74 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005e26:	681b      	ldr	r3, [r3, #0]
90005e28:	b1cb      	cbz	r3, 90005e5e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005e2a:	4c13      	ldr	r4, [pc, #76]	@ (90005e78 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005e2c:	4813      	ldr	r0, [pc, #76]	@ (90005e7c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005e2e:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005e32:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005e34:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005e36:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005e38:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005e3a:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005e3c:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005e3e:	4b10      	ldr	r3, [pc, #64]	@ (90005e80 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005e40:	2200      	movs	r2, #0
90005e42:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005e44:	f000 f83a 	bl	90005ebc <_ZN17TypedTextDatabase8getFontsEv>
90005e48:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005e4a:	f000 f835 	bl	90005eb8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005e4e:	4b0d      	ldr	r3, [pc, #52]	@ (90005e84 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005e50:	4a0d      	ldr	r2, [pc, #52]	@ (90005e88 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005e52:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005e54:	4b0d      	ldr	r3, [pc, #52]	@ (90005e8c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005e56:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005e58:	8018      	strh	r0, [r3, #0]
    }
}
90005e5a:	bd38      	pop	{r3, r4, r5, pc}
90005e5c:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005e5e:	4c0c      	ldr	r4, [pc, #48]	@ (90005e90 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005e60:	4905      	ldr	r1, [pc, #20]	@ (90005e78 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005e62:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005e64:	480b      	ldr	r0, [pc, #44]	@ (90005e94 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005e66:	4b05      	ldr	r3, [pc, #20]	@ (90005e7c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005e68:	4a0b      	ldr	r2, [pc, #44]	@ (90005e98 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005e6a:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005e6c:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005e6e:	2c00      	cmp	r4, #0
90005e70:	d1e5      	bne.n	90005e3e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005e72:	bd38      	pop	{r3, r4, r5, pc}
90005e74:	24007818 	.word	0x24007818
90005e78:	24007810 	.word	0x24007810
90005e7c:	2400780c 	.word	0x2400780c
90005e80:	24007814 	.word	0x24007814
90005e84:	24021924 	.word	0x24021924
90005e88:	2402192c 	.word	0x2402192c
90005e8c:	24021928 	.word	0x24021928
90005e90:	90201314 	.word	0x90201314
90005e94:	9020126c 	.word	0x9020126c
90005e98:	90201250 	.word	0x90201250

90005e9c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005e9c:	4a04      	ldr	r2, [pc, #16]	@ (90005eb0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005e9e:	4b05      	ldr	r3, [pc, #20]	@ (90005eb4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005ea0:	6812      	ldr	r2, [r2, #0]
90005ea2:	681b      	ldr	r3, [r3, #0]
90005ea4:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005ea8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005eac:	4770      	bx	lr
90005eae:	bf00      	nop
90005eb0:	2400780c 	.word	0x2400780c
90005eb4:	24007810 	.word	0x24007810

90005eb8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90005eb8:	2007      	movs	r0, #7
90005eba:	4770      	bx	lr

90005ebc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90005ebc:	4800      	ldr	r0, [pc, #0]	@ (90005ec0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90005ebe:	4770      	bx	lr
90005ec0:	2400781c 	.word	0x2400781c

90005ec4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90005ec4:	b510      	push	{r4, lr}
};
90005ec6:	4c05      	ldr	r4, [pc, #20]	@ (90005edc <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_calibri_20_4bpp()),
90005ec8:	f7ff fe62 	bl	90005b90 <_Z23getFont_calibri_20_4bppv>
};
90005ecc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90005ece:	f7ff fee3 	bl	90005c98 <_Z23getFont_verdana_40_4bppv>
};
90005ed2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90005ed4:	f7ff fea0 	bl	90005c18 <_Z23getFont_verdana_10_4bppv>
};
90005ed8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90005eda:	bd10      	pop	{r4, pc}
90005edc:	2400781c 	.word	0x2400781c

90005ee0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90005ee0:	b410      	push	{r4}
    pointArray = 0;
90005ee2:	2400      	movs	r4, #0
90005ee4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90005ee6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90005ee8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90005eea:	601c      	str	r4, [r3, #0]
}
90005eec:	f85d 4b04 	ldr.w	r4, [sp], #4
90005ef0:	4770      	bx	lr
90005ef2:	bf00      	nop

90005ef4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005ef4:	4770      	bx	lr
90005ef6:	bf00      	nop

90005ef8 <_ZN19FrontendApplicationD0Ev>:
90005ef8:	b510      	push	{r4, lr}
90005efa:	4604      	mov	r4, r0
90005efc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90005f00:	f024 ffd6 	bl	9002aeb0 <_ZdlPvj>
90005f04:	4620      	mov	r0, r4
90005f06:	bd10      	pop	{r4, pc}

90005f08 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005f08:	b510      	push	{r4, lr}
90005f0a:	4604      	mov	r4, r0
    {
        model.tick();
90005f0c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90005f10:	f000 f8ea 	bl	900060e8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005f14:	4620      	mov	r0, r4
    }
90005f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005f1a:	f012 b9cf 	b.w	900182bc <_ZN8touchgfx11Application15handleTickEventEv>
90005f1e:	bf00      	nop

90005f20 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005f20:	b510      	push	{r4, lr}
90005f22:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005f24:	f7ff f862 	bl	90004fec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005f28:	4b01      	ldr	r3, [pc, #4]	@ (90005f30 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005f2a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005f2c:	6023      	str	r3, [r4, #0]
}
90005f2e:	bd10      	pop	{r4, pc}
90005f30:	9002efd4 	.word	0x9002efd4

90005f34 <_ZN20Home_ScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Home_ScreenPresenter() {}
90005f34:	4770      	bx	lr
90005f36:	bf00      	nop

90005f38 <_ZThn4_N20Home_ScreenPresenterD1Ev>:
90005f38:	3804      	subs	r0, #4
90005f3a:	4770      	bx	lr

90005f3c <_ZN20Home_ScreenPresenter10deactivateEv>:
}

void Home_ScreenPresenter::activate()
{

}
90005f3c:	4770      	bx	lr
90005f3e:	bf00      	nop

90005f40 <_ZN20Home_ScreenPresenter13updateTextBoxEPKc>:
}

void Home_ScreenPresenter::updateTextBox(const char * newText){
	//does nothing no tc textbox in this screen
	//funciton is usless because there is no text box that needs updated on this screen
}
90005f40:	4770      	bx	lr
90005f42:	bf00      	nop

90005f44 <_ZN20Home_ScreenPresenterD0Ev>:
90005f44:	b510      	push	{r4, lr}
90005f46:	4604      	mov	r4, r0
90005f48:	2110      	movs	r1, #16
90005f4a:	f024 ffb1 	bl	9002aeb0 <_ZdlPvj>
90005f4e:	4620      	mov	r0, r4
90005f50:	bd10      	pop	{r4, pc}
90005f52:	bf00      	nop

90005f54 <_ZThn4_N20Home_ScreenPresenterD0Ev>:
90005f54:	b510      	push	{r4, lr}
90005f56:	1f04      	subs	r4, r0, #4
90005f58:	2110      	movs	r1, #16
90005f5a:	4620      	mov	r0, r4
90005f5c:	f024 ffa8 	bl	9002aeb0 <_ZdlPvj>
90005f60:	4620      	mov	r0, r4
90005f62:	bd10      	pop	{r4, pc}

90005f64 <_ZThn4_N20Home_ScreenPresenter13updateTextBoxEPKc>:

    void updateTextBox(const char * newText);
90005f64:	4770      	bx	lr
90005f66:	bf00      	nop

90005f68 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>:
Home_ScreenPresenter::Home_ScreenPresenter(Home_ScreenView& v)
90005f68:	b410      	push	{r4}
    : view(v)
90005f6a:	4a05      	ldr	r2, [pc, #20]	@ (90005f80 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView+0x18>)
    ModelListener() : model(0) {}
90005f6c:	2400      	movs	r4, #0
90005f6e:	60c1      	str	r1, [r0, #12]
90005f70:	6084      	str	r4, [r0, #8]
90005f72:	f102 041c 	add.w	r4, r2, #28
90005f76:	6002      	str	r2, [r0, #0]
90005f78:	6044      	str	r4, [r0, #4]
}
90005f7a:	f85d 4b04 	ldr.w	r4, [sp], #4
90005f7e:	4770      	bx	lr
90005f80:	9002f028 	.word	0x9002f028

90005f84 <_ZN20Home_ScreenPresenter8TC_ReadyEv>:
	return model->TC_Status();
90005f84:	6880      	ldr	r0, [r0, #8]
90005f86:	f000 b8b7 	b.w	900060f8 <_ZN5Model9TC_StatusEv>
90005f8a:	bf00      	nop

90005f8c <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005f8c:	4770      	bx	lr
90005f8e:	bf00      	nop

90005f90 <_ZN15Home_ScreenView14tearDownScreenEv>:
}

void Home_ScreenView::tearDownScreen()
{
    Home_ScreenViewBase::tearDownScreen();
}
90005f90:	4770      	bx	lr
90005f92:	bf00      	nop

90005f94 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005f94:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f96:	68c3      	ldr	r3, [r0, #12]
90005f98:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005f9c:	f013 0f01 	tst.w	r3, #1
90005fa0:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005fa4:	d004      	beq.n	90005fb0 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005fa6:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005faa:	f854 300c 	ldr.w	r3, [r4, ip]
90005fae:	589a      	ldr	r2, [r3, r2]
    }
90005fb0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005fb4:	4710      	bx	r2
90005fb6:	bf00      	nop

90005fb8 <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005fb8:	6843      	ldr	r3, [r0, #4]
90005fba:	b13b      	cbz	r3, 90005fcc <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005fbc:	6883      	ldr	r3, [r0, #8]
90005fbe:	b10b      	cbz	r3, 90005fc4 <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005fc0:	2001      	movs	r0, #1
    }
90005fc2:	4770      	bx	lr
90005fc4:	68c0      	ldr	r0, [r0, #12]
90005fc6:	f000 0001 	and.w	r0, r0, #1
90005fca:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005fcc:	4618      	mov	r0, r3
90005fce:	4770      	bx	lr

90005fd0 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005fd0:	b510      	push	{r4, lr}
90005fd2:	4604      	mov	r4, r0
90005fd4:	2110      	movs	r1, #16
90005fd6:	f024 ff6b 	bl	9002aeb0 <_ZdlPvj>
90005fda:	4620      	mov	r0, r4
90005fdc:	bd10      	pop	{r4, pc}
90005fde:	bf00      	nop

90005fe0 <_ZN15Home_ScreenViewD1Ev>:

class Home_ScreenView : public Home_ScreenViewBase
{
public:
    Home_ScreenView();
    virtual ~Home_ScreenView() {}
90005fe0:	4b03      	ldr	r3, [pc, #12]	@ (90005ff0 <_ZN15Home_ScreenViewD1Ev+0x10>)
90005fe2:	b510      	push	{r4, lr}
90005fe4:	4604      	mov	r4, r0
90005fe6:	6003      	str	r3, [r0, #0]
90005fe8:	f7ff f8f8 	bl	900051dc <_ZN19Home_ScreenViewBaseD1Ev>
90005fec:	4620      	mov	r0, r4
90005fee:	bd10      	pop	{r4, pc}
90005ff0:	9002f070 	.word	0x9002f070

90005ff4 <_ZN15Home_ScreenViewD0Ev>:
90005ff4:	4b06      	ldr	r3, [pc, #24]	@ (90006010 <_ZN15Home_ScreenViewD0Ev+0x1c>)
90005ff6:	b510      	push	{r4, lr}
90005ff8:	4604      	mov	r4, r0
90005ffa:	6003      	str	r3, [r0, #0]
90005ffc:	f7ff f8ee 	bl	900051dc <_ZN19Home_ScreenViewBaseD1Ev>
90006000:	f44f 71cc 	mov.w	r1, #408	@ 0x198
90006004:	4620      	mov	r0, r4
90006006:	f024 ff53 	bl	9002aeb0 <_ZdlPvj>
9000600a:	4620      	mov	r0, r4
9000600c:	bd10      	pop	{r4, pc}
9000600e:	bf00      	nop
90006010:	9002f070 	.word	0x9002f070

90006014 <_ZN15Home_ScreenViewC1Ev>:
Home_ScreenView::Home_ScreenView()
90006014:	b510      	push	{r4, lr}
90006016:	4604      	mov	r4, r0
    : wr_TC_Button_Pressed(this, &Home_ScreenView::read_tc_button_pressed)
90006018:	f7ff f91e 	bl	90005258 <_ZN19Home_ScreenViewBaseC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
9000601c:	4a07      	ldr	r2, [pc, #28]	@ (9000603c <_ZN15Home_ScreenViewC1Ev+0x28>)
9000601e:	2300      	movs	r3, #0
90006020:	4807      	ldr	r0, [pc, #28]	@ (90006040 <_ZN15Home_ScreenViewC1Ev+0x2c>)
90006022:	4908      	ldr	r1, [pc, #32]	@ (90006044 <_ZN15Home_ScreenViewC1Ev+0x30>)
90006024:	6020      	str	r0, [r4, #0]
{}
90006026:	4620      	mov	r0, r4
    : wr_TC_Button_Pressed(this, &Home_ScreenView::read_tc_button_pressed)
90006028:	f884 3190 	strb.w	r3, [r4, #400]	@ 0x190
9000602c:	e9c4 2460 	strd	r2, r4, [r4, #384]	@ 0x180
90006030:	2296      	movs	r2, #150	@ 0x96
90006032:	e9c4 1362 	strd	r1, r3, [r4, #392]	@ 0x188
90006036:	f8c4 2194 	str.w	r2, [r4, #404]	@ 0x194
{}
9000603a:	bd10      	pop	{r4, pc}
9000603c:	9002f058 	.word	0x9002f058
90006040:	9002f070 	.word	0x9002f070
90006044:	90006091 	.word	0x90006091

90006048 <_ZN15Home_ScreenView11setupScreenEv>:
{
90006048:	b510      	push	{r4, lr}
9000604a:	4604      	mov	r4, r0
    Home_ScreenViewBase::setupScreen();
9000604c:	f7ff f8c8 	bl	900051e0 <_ZN19Home_ScreenViewBase11setupScreenEv>
    Read_TC_Start_button.setAction(wr_TC_Button_Pressed);
90006050:	f504 73c0 	add.w	r3, r4, #384	@ 0x180
90006054:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
}
90006058:	bd10      	pop	{r4, pc}
9000605a:	bf00      	nop

9000605c <_ZN15Home_ScreenView15handleTickEventEv>:

void Home_ScreenView::handleTickEvent(){
	if (tick_count > 0 && error_msg_show){
9000605c:	f8d0 3194 	ldr.w	r3, [r0, #404]	@ 0x194
90006060:	2b00      	cmp	r3, #0
90006062:	dd09      	ble.n	90006078 <_ZN15Home_ScreenView15handleTickEventEv+0x1c>
90006064:	f890 2190 	ldrb.w	r2, [r0, #400]	@ 0x190
void Home_ScreenView::handleTickEvent(){
90006068:	b510      	push	{r4, lr}
9000606a:	4604      	mov	r4, r0
	if (tick_count > 0 && error_msg_show){
9000606c:	b11a      	cbz	r2, 90006076 <_ZN15Home_ScreenView15handleTickEventEv+0x1a>
		tick_count --;
9000606e:	3b01      	subs	r3, #1
90006070:	f8c0 3194 	str.w	r3, [r0, #404]	@ 0x194
		if (tick_count == 0){
90006074:	b10b      	cbz	r3, 9000607a <_ZN15Home_ScreenView15handleTickEventEv+0x1e>
			TC_not_loaded.setVisible(false);
			TC_not_loaded.invalidate();
			tick_count = 150;
		}
	}
}
90006076:	bd10      	pop	{r4, pc}
90006078:	4770      	bx	lr
        visible = vis;
9000607a:	f884 314d 	strb.w	r3, [r4, #333]	@ 0x14d
			TC_not_loaded.invalidate();
9000607e:	f500 7094 	add.w	r0, r0, #296	@ 0x128
90006082:	f013 fa52 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
			tick_count = 150;
90006086:	2396      	movs	r3, #150	@ 0x96
90006088:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
}
9000608c:	bd10      	pop	{r4, pc}
9000608e:	bf00      	nop

90006090 <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx14AbstractButtonE>:

void Home_ScreenView::read_tc_button_pressed(const touchgfx::AbstractButton& source){
90006090:	b538      	push	{r3, r4, r5, lr}
	if (&source == &Read_TC_Start_button){
90006092:	f100 0398 	add.w	r3, r0, #152	@ 0x98
90006096:	428b      	cmp	r3, r1
90006098:	d000      	beq.n	9000609c <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx14AbstractButtonE+0xc>
			TC_not_loaded.setVisible(true);
			TC_not_loaded.invalidate();
			error_msg_show = true;
		}
	}
}
9000609a:	bd38      	pop	{r3, r4, r5, pc}
		if (presenter->TC_Ready()){
9000609c:	4604      	mov	r4, r0
9000609e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
900060a0:	f7ff ff70 	bl	90005f84 <_ZN20Home_ScreenPresenter8TC_ReadyEv>
900060a4:	b158      	cbz	r0, 900060be <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx14AbstractButtonE+0x2e>
			tick_count = 150;
900060a6:	2396      	movs	r3, #150	@ 0x96
			error_msg_show = false;
900060a8:	2200      	movs	r2, #0
			tick_count = 150;
900060aa:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
			error_msg_show = false;
900060ae:	f884 2190 	strb.w	r2, [r4, #400]	@ 0x190
900060b2:	f012 f859 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
}
900060b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
			application().gotoTC_ScreenScreenWipeTransitionEast();
900060ba:	f7ff b809 	b.w	900050d0 <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>
900060be:	2501      	movs	r5, #1
			TC_not_loaded.invalidate();
900060c0:	f504 7094 	add.w	r0, r4, #296	@ 0x128
900060c4:	f884 514d 	strb.w	r5, [r4, #333]	@ 0x14d
900060c8:	f013 fa2f 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
			error_msg_show = true;
900060cc:	f884 5190 	strb.w	r5, [r4, #400]	@ 0x190
}
900060d0:	bd38      	pop	{r3, r4, r5, pc}
900060d2:	bf00      	nop

900060d4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "../../STM32CubeIDE/Application/User/TouchGFX/App/TC_Bridge.hpp"

Model::Model() : modelListener(0)
900060d4:	2300      	movs	r3, #0
900060d6:	b510      	push	{r4, lr}
900060d8:	4604      	mov	r4, r0
900060da:	6003      	str	r3, [r0, #0]
900060dc:	7203      	strb	r3, [r0, #8]
{
	setModelInstance(this);
900060de:	f7fa fd1d 	bl	90000b1c <_Z16setModelInstanceP5Model>
}
900060e2:	4620      	mov	r0, r4
900060e4:	bd10      	pop	{r4, pc}
900060e6:	bf00      	nop

900060e8 <_ZN5Model4tickEv>:

void Model::tick()
{

}
900060e8:	4770      	bx	lr
900060ea:	bf00      	nop

900060ec <_ZN5Model6TC_SetEPKc>:

void Model::TC_Set(const char* str)
{
	this->data = str;
	TC_Ready = true;
900060ec:	2301      	movs	r3, #1
	this->data = str;
900060ee:	6041      	str	r1, [r0, #4]
	TC_Ready = true;
900060f0:	7203      	strb	r3, [r0, #8]
    //modelListener->updateTextBox(data);
}
900060f2:	4770      	bx	lr

900060f4 <_ZN5Model8reset_TCEv>:

void Model::reset_TC(){
	to_logic_reset_TC();
900060f4:	f7fa bd22 	b.w	90000b3c <to_logic_reset_TC>

900060f8 <_ZN5Model9TC_StatusEv>:
}

bool Model::TC_Status(){
	return TC_Ready;
}
900060f8:	7a00      	ldrb	r0, [r0, #8]
900060fa:	4770      	bx	lr

900060fc <_ZN5Model7TC_GiveEv>:
//*************************************Need to add error message if no trouble code
//*************************************given when read tc button pressed.
//Give function will update tc_textBox with correct trouble code.
void Model::TC_Give(){
900060fc:	4603      	mov	r3, r0
	if (modelListener != nullptr && data != nullptr){
900060fe:	6800      	ldr	r0, [r0, #0]
90006100:	b120      	cbz	r0, 9000610c <_ZN5Model7TC_GiveEv+0x10>
90006102:	6859      	ldr	r1, [r3, #4]
90006104:	b111      	cbz	r1, 9000610c <_ZN5Model7TC_GiveEv+0x10>
		modelListener->updateTextBox(data);
90006106:	6803      	ldr	r3, [r0, #0]
90006108:	689b      	ldr	r3, [r3, #8]
9000610a:	4718      	bx	r3
	}
}
9000610c:	4770      	bx	lr
9000610e:	bf00      	nop

90006110 <_ZN18TC_ScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TC_ScreenPresenter() {}
90006110:	4770      	bx	lr
90006112:	bf00      	nop

90006114 <_ZThn4_N18TC_ScreenPresenterD1Ev>:
90006114:	3804      	subs	r0, #4
90006116:	4770      	bx	lr

90006118 <_ZN18TC_ScreenPresenter10deactivateEv>:
}

void TC_ScreenPresenter::deactivate()
{

}
90006118:	4770      	bx	lr
9000611a:	bf00      	nop

9000611c <_ZN18TC_ScreenPresenterD0Ev>:
9000611c:	b510      	push	{r4, lr}
9000611e:	4604      	mov	r4, r0
90006120:	2110      	movs	r1, #16
90006122:	f024 fec5 	bl	9002aeb0 <_ZdlPvj>
90006126:	4620      	mov	r0, r4
90006128:	bd10      	pop	{r4, pc}
9000612a:	bf00      	nop

9000612c <_ZThn4_N18TC_ScreenPresenterD0Ev>:
9000612c:	b510      	push	{r4, lr}
9000612e:	1f04      	subs	r4, r0, #4
90006130:	2110      	movs	r1, #16
90006132:	4620      	mov	r0, r4
90006134:	f024 febc 	bl	9002aeb0 <_ZdlPvj>
90006138:	4620      	mov	r0, r4
9000613a:	bd10      	pop	{r4, pc}

9000613c <_ZN18TC_ScreenPresenter8activateEv>:
	model->TC_Give();
9000613c:	6880      	ldr	r0, [r0, #8]
9000613e:	f7ff bfdd 	b.w	900060fc <_ZN5Model7TC_GiveEv>
90006142:	bf00      	nop

90006144 <_ZN18TC_ScreenPresenter13updateTextBoxEPKc>:
void TC_ScreenPresenter::reset_TC(){
	model->reset_TC();
}

void TC_ScreenPresenter::updateTextBox(const char * newText) {
	view.bufferUpdateTCTextBox(newText);
90006144:	68c0      	ldr	r0, [r0, #12]
90006146:	f000 b881 	b.w	9000624c <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>
9000614a:	bf00      	nop

9000614c <_ZThn4_N18TC_ScreenPresenter13updateTextBoxEPKc>:

    void reset_TC();
    void updateTextBox(const char * newText) override;
9000614c:	6880      	ldr	r0, [r0, #8]
9000614e:	f000 b87d 	b.w	9000624c <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>
90006152:	bf00      	nop

90006154 <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView>:
TC_ScreenPresenter::TC_ScreenPresenter(TC_ScreenView& v)
90006154:	b410      	push	{r4}
    : view(v)
90006156:	4a05      	ldr	r2, [pc, #20]	@ (9000616c <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView+0x18>)
90006158:	2400      	movs	r4, #0
9000615a:	60c1      	str	r1, [r0, #12]
9000615c:	6084      	str	r4, [r0, #8]
9000615e:	f102 041c 	add.w	r4, r2, #28
90006162:	6002      	str	r2, [r0, #0]
90006164:	6044      	str	r4, [r0, #4]
}
90006166:	f85d 4b04 	ldr.w	r4, [sp], #4
9000616a:	4770      	bx	lr
9000616c:	9002f0a4 	.word	0x9002f0a4

90006170 <_ZN18TC_ScreenPresenter8reset_TCEv>:
	model->reset_TC();
90006170:	6880      	ldr	r0, [r0, #8]
90006172:	f7ff bfbf 	b.w	900060f4 <_ZN5Model8reset_TCEv>
90006176:	bf00      	nop

90006178 <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006178:	4770      	bx	lr
9000617a:	bf00      	nop

9000617c <_ZN13TC_ScreenView14tearDownScreenEv>:
}

void TC_ScreenView::tearDownScreen()
{
    TC_ScreenViewBase::tearDownScreen();
}
9000617c:	4770      	bx	lr
9000617e:	bf00      	nop

90006180 <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006180:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006182:	68c3      	ldr	r3, [r0, #12]
90006184:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006188:	f013 0f01 	tst.w	r3, #1
9000618c:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006190:	d004      	beq.n	9000619c <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90006192:	ea4f 0c63 	mov.w	ip, r3, asr #1
90006196:	f854 300c 	ldr.w	r3, [r4, ip]
9000619a:	589a      	ldr	r2, [r3, r2]
    }
9000619c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900061a0:	4710      	bx	r2
900061a2:	bf00      	nop

900061a4 <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900061a4:	6843      	ldr	r3, [r0, #4]
900061a6:	b13b      	cbz	r3, 900061b8 <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900061a8:	6883      	ldr	r3, [r0, #8]
900061aa:	b10b      	cbz	r3, 900061b0 <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900061ac:	2001      	movs	r0, #1
    }
900061ae:	4770      	bx	lr
900061b0:	68c0      	ldr	r0, [r0, #12]
900061b2:	f000 0001 	and.w	r0, r0, #1
900061b6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900061b8:	4618      	mov	r0, r3
900061ba:	4770      	bx	lr

900061bc <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900061bc:	b510      	push	{r4, lr}
900061be:	4604      	mov	r4, r0
900061c0:	2110      	movs	r1, #16
900061c2:	f024 fe75 	bl	9002aeb0 <_ZdlPvj>
900061c6:	4620      	mov	r0, r4
900061c8:	bd10      	pop	{r4, pc}
900061ca:	bf00      	nop

900061cc <_ZN13TC_ScreenViewD1Ev>:

class TC_ScreenView : public TC_ScreenViewBase
{
public:
    TC_ScreenView();
    virtual ~TC_ScreenView() {}
900061cc:	4b03      	ldr	r3, [pc, #12]	@ (900061dc <_ZN13TC_ScreenViewD1Ev+0x10>)
900061ce:	b510      	push	{r4, lr}
900061d0:	4604      	mov	r4, r0
900061d2:	6003      	str	r3, [r0, #0]
900061d4:	f7ff f9f0 	bl	900055b8 <_ZN17TC_ScreenViewBaseD1Ev>
900061d8:	4620      	mov	r0, r4
900061da:	bd10      	pop	{r4, pc}
900061dc:	9002f0ec 	.word	0x9002f0ec

900061e0 <_ZN13TC_ScreenViewD0Ev>:
900061e0:	4b06      	ldr	r3, [pc, #24]	@ (900061fc <_ZN13TC_ScreenViewD0Ev+0x1c>)
900061e2:	b510      	push	{r4, lr}
900061e4:	4604      	mov	r4, r0
900061e6:	6003      	str	r3, [r0, #0]
900061e8:	f7ff f9e6 	bl	900055b8 <_ZN17TC_ScreenViewBaseD1Ev>
900061ec:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
900061f0:	4620      	mov	r0, r4
900061f2:	f024 fe5d 	bl	9002aeb0 <_ZdlPvj>
900061f6:	4620      	mov	r0, r4
900061f8:	bd10      	pop	{r4, pc}
900061fa:	bf00      	nop
900061fc:	9002f0ec 	.word	0x9002f0ec

90006200 <_ZN13TC_ScreenViewC1Ev>:
TC_ScreenView::TC_ScreenView()
90006200:	b510      	push	{r4, lr}
90006202:	4604      	mov	r4, r0
    : myButtonCallback(this, &TC_ScreenView::onMyButtonPressed)  // 👈 Wrap your function
90006204:	f7ff fade 	bl	900057c4 <_ZN17TC_ScreenViewBaseC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90006208:	4b07      	ldr	r3, [pc, #28]	@ (90006228 <_ZN13TC_ScreenViewC1Ev+0x28>)
9000620a:	2200      	movs	r2, #0
9000620c:	4807      	ldr	r0, [pc, #28]	@ (9000622c <_ZN13TC_ScreenViewC1Ev+0x2c>)
9000620e:	4908      	ldr	r1, [pc, #32]	@ (90006230 <_ZN13TC_ScreenViewC1Ev+0x30>)
90006210:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
90006214:	2301      	movs	r3, #1
90006216:	6020      	str	r0, [r4, #0]
{}
90006218:	4620      	mov	r0, r4
9000621a:	f8c4 21a4 	str.w	r2, [r4, #420]	@ 0x1a4
    : myButtonCallback(this, &TC_ScreenView::onMyButtonPressed)  // 👈 Wrap your function
9000621e:	f884 31a8 	strb.w	r3, [r4, #424]	@ 0x1a8
90006222:	e9c4 4167 	strd	r4, r1, [r4, #412]	@ 0x19c
{}
90006226:	bd10      	pop	{r4, pc}
90006228:	9002f0d4 	.word	0x9002f0d4
9000622c:	9002f0ec 	.word	0x9002f0ec
90006230:	90006269 	.word	0x90006269

90006234 <_ZN13TC_ScreenView11setupScreenEv>:
{
90006234:	b510      	push	{r4, lr}
90006236:	4604      	mov	r4, r0
    TC_ScreenViewBase::setupScreen();
90006238:	f7ff f9c0 	bl	900055bc <_ZN17TC_ScreenViewBase11setupScreenEv>
    TC_Button.setAction(myButtonCallback);
9000623c:	f504 73cc 	add.w	r3, r4, #408	@ 0x198
90006240:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
90006244:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
}
90006248:	bd10      	pop	{r4, pc}
9000624a:	bf00      	nop

9000624c <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>:

void TC_ScreenView::bufferUpdateTCTextBox(const char* newText)
{
9000624c:	b510      	push	{r4, lr}
9000624e:	4604      	mov	r4, r0
	//Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s",newText);
	Unicode::strncpy(TC_TextBoxBuffer, newText, TC_TEXTBOX_SIZE);
90006250:	220a      	movs	r2, #10
90006252:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
90006256:	f015 f964 	bl	9001b522 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    TC_TextBox.invalidate();
9000625a:	f104 00e0 	add.w	r0, r4, #224	@ 0xe0
}
9000625e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    TC_TextBox.invalidate();
90006262:	f013 b962 	b.w	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
90006266:	bf00      	nop

90006268 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE>:


void TC_ScreenView::onMyButtonPressed(const touchgfx::AbstractButton& source)
{
90006268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (&source == &TC_Button)
9000626a:	f100 0398 	add.w	r3, r0, #152	@ 0x98
{
9000626e:	4604      	mov	r4, r0
90006270:	460d      	mov	r5, r1
    if (&source == &TC_Button)
90006272:	4299      	cmp	r1, r3
90006274:	d004      	beq.n	90006280 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x18>
90006276:	f504 7696 	add.w	r6, r4, #300	@ 0x12c
			TC_Button_First_Press = false;
    	}else{
    		TC_TextBox.invalidate();
    	}
    }
    if (&source == &Erase_TC_Button){
9000627a:	42b5      	cmp	r5, r6
9000627c:	d015      	beq.n	900062aa <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x42>
		//When Erase_TC_Button clicked change screen to Home_Screen
		//Go to Home_Screen with screen transition towards East
    	presenter->reset_TC();
		application().gotoHome_ScreenScreenWipeTransitionEast();
     }
}
9000627e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    	if (TC_Button_First_Press){
90006280:	f890 31a8 	ldrb.w	r3, [r0, #424]	@ 0x1a8
90006284:	b1d3      	cbz	r3, 900062bc <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x54>
90006286:	2701      	movs	r7, #1
			Erase_TC_Button.invalidate();
90006288:	f504 7696 	add.w	r6, r4, #300	@ 0x12c
			TC_TextBox.invalidate();
9000628c:	30e0      	adds	r0, #224	@ 0xe0
9000628e:	f884 7105 	strb.w	r7, [r4, #261]	@ 0x105
90006292:	f013 f94a 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
			Erase_TC_Button.invalidate();
90006296:	4630      	mov	r0, r6
90006298:	f884 7151 	strb.w	r7, [r4, #337]	@ 0x151
9000629c:	f013 f945 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
			TC_Button_First_Press = false;
900062a0:	2300      	movs	r3, #0
    if (&source == &Erase_TC_Button){
900062a2:	42b5      	cmp	r5, r6
			TC_Button_First_Press = false;
900062a4:	f884 31a8 	strb.w	r3, [r4, #424]	@ 0x1a8
    if (&source == &Erase_TC_Button){
900062a8:	d1e9      	bne.n	9000627e <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x16>
    	presenter->reset_TC();
900062aa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900062ac:	f7ff ff60 	bl	90006170 <_ZN18TC_ScreenPresenter8reset_TCEv>
900062b0:	f011 ff5a 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
}
900062b4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		application().gotoHome_ScreenScreenWipeTransitionEast();
900062b8:	f7fe befc 	b.w	900050b4 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>
    		TC_TextBox.invalidate();
900062bc:	30e0      	adds	r0, #224	@ 0xe0
900062be:	f013 f934 	bl	9001952a <_ZNK8touchgfx8Drawable10invalidateEv>
900062c2:	e7d8      	b.n	90006276 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0xe>

900062c4 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900062c4:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900062c8:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900062ca:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900062ce:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900062d2:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900062d4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900062d6:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900062da:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900062de:	4770      	bx	lr

900062e0 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900062e0:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
900062e4:	2b01      	cmp	r3, #1
900062e6:	d102      	bne.n	900062ee <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900062e8:	2300      	movs	r3, #0
900062ea:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
900062ee:	2000      	movs	r0, #0
900062f0:	4770      	bx	lr
900062f2:	bf00      	nop

900062f4 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900062f4:	2000      	movs	r0, #0
900062f6:	4770      	bx	lr

900062f8 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900062f8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900062fa:	6904      	ldr	r4, [r0, #16]
900062fc:	8900      	ldrh	r0, [r0, #8]
900062fe:	46a4      	mov	ip, r4
}
90006300:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006304:	4760      	bx	ip
90006306:	bf00      	nop

90006308 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006308:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000630a:	68c4      	ldr	r4, [r0, #12]
9000630c:	8900      	ldrh	r0, [r0, #8]
9000630e:	46a4      	mov	ip, r4
}
90006310:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006314:	4760      	bx	ip
90006316:	bf00      	nop

90006318 <FT5336_GestureConfig>:
{
90006318:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000631a:	f100 0518 	add.w	r5, r0, #24
{
9000631e:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006320:	7809      	ldrb	r1, [r1, #0]
90006322:	4628      	mov	r0, r5
90006324:	f000 f96c 	bl	90006600 <ft5336_radian_value>
90006328:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000632a:	7931      	ldrb	r1, [r6, #4]
9000632c:	4628      	mov	r0, r5
9000632e:	f000 f975 	bl	9000661c <ft5336_offset_left_right>
90006332:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006334:	7a31      	ldrb	r1, [r6, #8]
90006336:	4628      	mov	r0, r5
90006338:	f000 f97e 	bl	90006638 <ft5336_offset_up_down>
9000633c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000633e:	7b31      	ldrb	r1, [r6, #12]
90006340:	4628      	mov	r0, r5
90006342:	f000 f987 	bl	90006654 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006346:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006348:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000634a:	4628      	mov	r0, r5
9000634c:	f000 f990 	bl	90006670 <ft5336_distance_up_down>
90006350:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006352:	7d31      	ldrb	r1, [r6, #20]
90006354:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006356:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006358:	f000 f998 	bl	9000668c <ft5336_distance_zoom>
  if(ret != FT5336_OK)
9000635c:	42c4      	cmn	r4, r0
}
9000635e:	bf14      	ite	ne
90006360:	f04f 30ff 	movne.w	r0, #4294967295
90006364:	2000      	moveq	r0, #0
90006366:	bd70      	pop	{r4, r5, r6, pc}

90006368 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006368:	3018      	adds	r0, #24
9000636a:	f000 b9ab 	b.w	900066c4 <ft5336_chip_id>
9000636e:	bf00      	nop

90006370 <FT5336_GetState>:
{
90006370:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006372:	f100 0518 	add.w	r5, r0, #24
{
90006376:	b083      	sub	sp, #12
90006378:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000637a:	4628      	mov	r0, r5
9000637c:	a901      	add	r1, sp, #4
9000637e:	f000 f931 	bl	900065e4 <ft5336_td_status>
90006382:	bb10      	cbnz	r0, 900063ca <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006384:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006388:	2b05      	cmp	r3, #5
9000638a:	bf94      	ite	ls
9000638c:	4619      	movls	r1, r3
9000638e:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006390:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006392:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006394:	4628      	mov	r0, r5
90006396:	2103      	movs	r1, #3
90006398:	eb0d 0203 	add.w	r2, sp, r3
9000639c:	f000 f910 	bl	900065c0 <ft5336_read_reg>
900063a0:	b9b0      	cbnz	r0, 900063d0 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900063a2:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900063a6:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900063aa:	0212      	lsls	r2, r2, #8
900063ac:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900063b0:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900063b2:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900063b6:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900063ba:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900063bc:	f89d 1007 	ldrb.w	r1, [sp, #7]
900063c0:	430b      	orrs	r3, r1
900063c2:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900063c6:	b003      	add	sp, #12
900063c8:	bd30      	pop	{r4, r5, pc}
900063ca:	f04f 31ff 	mov.w	r1, #4294967295
900063ce:	e7df      	b.n	90006390 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900063d0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900063d4:	e7f7      	b.n	900063c6 <FT5336_GetState+0x56>
900063d6:	bf00      	nop

900063d8 <FT5336_GetMultiTouchState>:
{
900063d8:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900063da:	f100 0518 	add.w	r5, r0, #24
{
900063de:	b088      	sub	sp, #32
900063e0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900063e2:	4628      	mov	r0, r5
900063e4:	4669      	mov	r1, sp
900063e6:	f000 f8fd 	bl	900065e4 <ft5336_td_status>
900063ea:	2800      	cmp	r0, #0
900063ec:	f040 809a 	bne.w	90006524 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900063f0:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900063f4:	2b05      	cmp	r3, #5
900063f6:	bf94      	ite	ls
900063f8:	4619      	movls	r1, r3
900063fa:	2100      	movhi	r1, #0
900063fc:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900063fe:	231e      	movs	r3, #30
90006400:	466a      	mov	r2, sp
90006402:	4628      	mov	r0, r5
90006404:	2103      	movs	r1, #3
90006406:	f000 f8db 	bl	900065c0 <ft5336_read_reg>
9000640a:	2800      	cmp	r0, #0
9000640c:	f040 808d 	bne.w	9000652a <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006410:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006414:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006418:	020a      	lsls	r2, r1, #8
9000641a:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000641e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006420:	f89d c007 	ldrb.w	ip, [sp, #7]
90006424:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006428:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000642a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000642e:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006432:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006434:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006438:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000643a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000643c:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000643e:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006440:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006444:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006446:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000644a:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000644e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006450:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006452:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006456:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006458:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000645a:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000645c:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006460:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006462:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006464:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006468:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000646c:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000646e:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006470:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006472:	ea45 050c 	orr.w	r5, r5, ip
90006476:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000647a:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000647e:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006480:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006482:	0212      	lsls	r2, r2, #8
90006484:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006488:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000648a:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000648e:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006492:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006494:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006496:	f89d 300e 	ldrb.w	r3, [sp, #14]
9000649a:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000649c:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064a0:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064a2:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064a4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064a8:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064aa:	f89d 200f 	ldrb.w	r2, [sp, #15]
900064ae:	4313      	orrs	r3, r2
900064b0:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064b2:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064b4:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064bc:	020a      	lsls	r2, r1, #8
900064be:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064c2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064c4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900064c8:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064ca:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064ce:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064d0:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900064d4:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064d6:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064d8:	f89d 1018 	ldrb.w	r1, [sp, #24]
900064dc:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900064de:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064e0:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064e2:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900064e6:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064e8:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064ec:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900064ee:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064f2:	f89d 301d 	ldrb.w	r3, [sp, #29]
900064f6:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900064f8:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900064fa:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900064fc:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006500:	6625      	str	r5, [r4, #96]	@ 0x60
90006502:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006504:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006508:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000650a:	021b      	lsls	r3, r3, #8
9000650c:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006510:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006514:	430b      	orrs	r3, r1
90006516:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006518:	f89d 3019 	ldrb.w	r3, [sp, #25]
9000651c:	4313      	orrs	r3, r2
9000651e:	6163      	str	r3, [r4, #20]
}
90006520:	b008      	add	sp, #32
90006522:	bd70      	pop	{r4, r5, r6, pc}
90006524:	f04f 31ff 	mov.w	r1, #4294967295
90006528:	e768      	b.n	900063fc <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000652a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000652e:	e7f7      	b.n	90006520 <FT5336_GetMultiTouchState+0x148>

90006530 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006530:	3018      	adds	r0, #24
90006532:	f000 b84d 	b.w	900065d0 <ft5336_gest_id>
90006536:	bf00      	nop

90006538 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006538:	2101      	movs	r1, #1
9000653a:	3018      	adds	r0, #24
9000653c:	f000 b8b4 	b.w	900066a8 <ft5336_g_mode>

90006540 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006540:	2100      	movs	r1, #0
90006542:	3018      	adds	r0, #24
90006544:	f000 b8b0 	b.w	900066a8 <ft5336_g_mode>

90006548 <FT5336_Init>:
{
90006548:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000654a:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
9000654e:	b98d      	cbnz	r5, 90006574 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006550:	4606      	mov	r6, r0
90006552:	4604      	mov	r4, r0
90006554:	f856 3b18 	ldr.w	r3, [r6], #24
90006558:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000655a:	4629      	mov	r1, r5
9000655c:	4630      	mov	r0, r6
9000655e:	f000 f8a3 	bl	900066a8 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006562:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006564:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006568:	bf18      	it	ne
9000656a:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
9000656c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006570:	4240      	negs	r0, r0
}
90006572:	bd70      	pop	{r4, r5, r6, pc}
90006574:	2000      	movs	r0, #0
90006576:	bd70      	pop	{r4, r5, r6, pc}

90006578 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006578:	2000      	movs	r0, #0
9000657a:	4770      	bx	lr

9000657c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
9000657c:	b1c0      	cbz	r0, 900065b0 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
9000657e:	890a      	ldrh	r2, [r1, #8]
{
90006580:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006582:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006586:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006588:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
9000658c:	694a      	ldr	r2, [r1, #20]
9000658e:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006592:	4909      	ldr	r1, [pc, #36]	@ (900065b8 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006594:	60c5      	str	r5, [r0, #12]
90006596:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000659a:	4a08      	ldr	r2, [pc, #32]	@ (900065bc <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
9000659c:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900065a0:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900065a2:	b10b      	cbz	r3, 900065a8 <FT5336_RegisterBusIO+0x2c>
}
900065a4:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900065a6:	4718      	bx	r3
}
900065a8:	f04f 30ff 	mov.w	r0, #4294967295
900065ac:	bc30      	pop	{r4, r5}
900065ae:	4770      	bx	lr
900065b0:	f04f 30ff 	mov.w	r0, #4294967295
900065b4:	4770      	bx	lr
900065b6:	bf00      	nop
900065b8:	900062f9 	.word	0x900062f9
900065bc:	90006309 	.word	0x90006309

900065c0 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900065c0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065c2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900065c6:	46a4      	mov	ip, r4
}
900065c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065cc:	4760      	bx	ip
900065ce:	bf00      	nop

900065d0 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900065d0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065d2:	2301      	movs	r3, #1
{
900065d4:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065d6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900065da:	4619      	mov	r1, r3
900065dc:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900065de:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065e2:	4760      	bx	ip

900065e4 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900065e4:	b538      	push	{r3, r4, r5, lr}
900065e6:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900065e8:	2301      	movs	r3, #1
900065ea:	2102      	movs	r1, #2
900065ec:	4622      	mov	r2, r4
900065ee:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900065f2:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900065f4:	b918      	cbnz	r0, 900065fe <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900065f6:	7823      	ldrb	r3, [r4, #0]
900065f8:	f003 030f 	and.w	r3, r3, #15
900065fc:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900065fe:	bd38      	pop	{r3, r4, r5, pc}

90006600 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006600:	b510      	push	{r4, lr}
90006602:	460c      	mov	r4, r1
90006604:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006606:	2301      	movs	r3, #1
90006608:	2191      	movs	r1, #145	@ 0x91
{
9000660a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000660e:	f10d 0207 	add.w	r2, sp, #7
90006612:	6804      	ldr	r4, [r0, #0]
90006614:	6880      	ldr	r0, [r0, #8]
90006616:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006618:	b002      	add	sp, #8
9000661a:	bd10      	pop	{r4, pc}

9000661c <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
9000661c:	b510      	push	{r4, lr}
9000661e:	460c      	mov	r4, r1
90006620:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006622:	2301      	movs	r3, #1
90006624:	2192      	movs	r1, #146	@ 0x92
{
90006626:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000662a:	f10d 0207 	add.w	r2, sp, #7
9000662e:	6804      	ldr	r4, [r0, #0]
90006630:	6880      	ldr	r0, [r0, #8]
90006632:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006634:	b002      	add	sp, #8
90006636:	bd10      	pop	{r4, pc}

90006638 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006638:	b510      	push	{r4, lr}
9000663a:	460c      	mov	r4, r1
9000663c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000663e:	2301      	movs	r3, #1
90006640:	2193      	movs	r1, #147	@ 0x93
{
90006642:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006646:	f10d 0207 	add.w	r2, sp, #7
9000664a:	6804      	ldr	r4, [r0, #0]
9000664c:	6880      	ldr	r0, [r0, #8]
9000664e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006650:	b002      	add	sp, #8
90006652:	bd10      	pop	{r4, pc}

90006654 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006654:	b510      	push	{r4, lr}
90006656:	460c      	mov	r4, r1
90006658:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000665a:	2301      	movs	r3, #1
9000665c:	2194      	movs	r1, #148	@ 0x94
{
9000665e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006662:	f10d 0207 	add.w	r2, sp, #7
90006666:	6804      	ldr	r4, [r0, #0]
90006668:	6880      	ldr	r0, [r0, #8]
9000666a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
9000666c:	b002      	add	sp, #8
9000666e:	bd10      	pop	{r4, pc}

90006670 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006670:	b510      	push	{r4, lr}
90006672:	460c      	mov	r4, r1
90006674:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006676:	2301      	movs	r3, #1
90006678:	2195      	movs	r1, #149	@ 0x95
{
9000667a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000667e:	f10d 0207 	add.w	r2, sp, #7
90006682:	6804      	ldr	r4, [r0, #0]
90006684:	6880      	ldr	r0, [r0, #8]
90006686:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006688:	b002      	add	sp, #8
9000668a:	bd10      	pop	{r4, pc}

9000668c <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
9000668c:	b510      	push	{r4, lr}
9000668e:	460c      	mov	r4, r1
90006690:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006692:	2301      	movs	r3, #1
90006694:	2196      	movs	r1, #150	@ 0x96
{
90006696:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000669a:	f10d 0207 	add.w	r2, sp, #7
9000669e:	6804      	ldr	r4, [r0, #0]
900066a0:	6880      	ldr	r0, [r0, #8]
900066a2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900066a4:	b002      	add	sp, #8
900066a6:	bd10      	pop	{r4, pc}

900066a8 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900066a8:	b510      	push	{r4, lr}
900066aa:	460c      	mov	r4, r1
900066ac:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900066ae:	2301      	movs	r3, #1
900066b0:	21a4      	movs	r1, #164	@ 0xa4
{
900066b2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900066b6:	f10d 0207 	add.w	r2, sp, #7
900066ba:	6804      	ldr	r4, [r0, #0]
900066bc:	6880      	ldr	r0, [r0, #8]
900066be:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900066c0:	b002      	add	sp, #8
900066c2:	bd10      	pop	{r4, pc}

900066c4 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900066c4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900066c6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900066ca:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900066cc:	2301      	movs	r3, #1
900066ce:	46a4      	mov	ip, r4
900066d0:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900066d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900066d6:	4760      	bx	ip

900066d8 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900066d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900066da:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900066dc:	4c2a      	ldr	r4, [pc, #168]	@ (90006788 <MT48LC4M32B2_Init+0xb0>)
900066de:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
900066e0:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900066e2:	682a      	ldr	r2, [r5, #0]
{
900066e4:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
900066e6:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066e8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
900066ea:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900066ec:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900066f0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900066f4:	f006 fcc6 	bl	9000d084 <HAL_SDRAM_SendCommand>
900066f8:	2800      	cmp	r0, #0
900066fa:	d142      	bne.n	90006782 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900066fc:	f000 ff52 	bl	900075a4 <HAL_GetTick>
90006700:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006702:	f000 ff4f 	bl	900075a4 <HAL_GetTick>
90006706:	4286      	cmp	r6, r0
90006708:	d0fb      	beq.n	90006702 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000670a:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
9000670c:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000670e:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006710:	491d      	ldr	r1, [pc, #116]	@ (90006788 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006712:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006714:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006716:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006718:	4638      	mov	r0, r7
9000671a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
9000671e:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006720:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006722:	f006 fcaf 	bl	9000d084 <HAL_SDRAM_SendCommand>
90006726:	bb60      	cbnz	r0, 90006782 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006728:	4917      	ldr	r1, [pc, #92]	@ (90006788 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000672a:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000672e:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006730:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006732:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006736:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006738:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
9000673c:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000673e:	f006 fca1 	bl	9000d084 <HAL_SDRAM_SendCommand>
90006742:	b9f0      	cbnz	r0, 90006782 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006744:	4910      	ldr	r1, [pc, #64]	@ (90006788 <MT48LC4M32B2_Init+0xb0>)
90006746:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006748:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
9000674c:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000674e:	696a      	ldr	r2, [r5, #20]
90006750:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006752:	69aa      	ldr	r2, [r5, #24]
90006754:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006756:	69ea      	ldr	r2, [r5, #28]
90006758:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000675a:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
9000675c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000675e:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006760:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006764:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006768:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000676a:	f006 fc8b 	bl	9000d084 <HAL_SDRAM_SendCommand>
9000676e:	b940      	cbnz	r0, 90006782 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006770:	68a9      	ldr	r1, [r5, #8]
90006772:	4638      	mov	r0, r7
90006774:	f006 fca6 	bl	9000d0c4 <HAL_SDRAM_ProgramRefreshRate>
90006778:	3800      	subs	r0, #0
9000677a:	bf18      	it	ne
9000677c:	2001      	movne	r0, #1
9000677e:	4240      	negs	r0, r0
}
90006780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006782:	f04f 30ff 	mov.w	r0, #4294967295
}
90006786:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006788:	24007828 	.word	0x24007828

9000678c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
9000678c:	4a10      	ldr	r2, [pc, #64]	@ (900067d0 <BSP_I2C4_DeInit+0x44>)
{
9000678e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006790:	6813      	ldr	r3, [r2, #0]
90006792:	3b01      	subs	r3, #1
90006794:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006796:	b10b      	cbz	r3, 9000679c <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006798:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000679a:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
9000679c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
900067a0:	480c      	ldr	r0, [pc, #48]	@ (900067d4 <BSP_I2C4_DeInit+0x48>)
900067a2:	f001 fe03 	bl	900083ac <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900067a6:	480b      	ldr	r0, [pc, #44]	@ (900067d4 <BSP_I2C4_DeInit+0x48>)
900067a8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
900067ac:	f001 fdfe 	bl	900083ac <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900067b0:	4a09      	ldr	r2, [pc, #36]	@ (900067d8 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900067b2:	480a      	ldr	r0, [pc, #40]	@ (900067dc <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900067b4:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
900067b8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900067bc:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900067c0:	f002 fa6e 	bl	90008ca0 <HAL_I2C_DeInit>
900067c4:	2800      	cmp	r0, #0
900067c6:	d0e7      	beq.n	90006798 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900067c8:	f06f 0007 	mvn.w	r0, #7
}
900067cc:	bd08      	pop	{r3, pc}
900067ce:	bf00      	nop
900067d0:	24008290 	.word	0x24008290
900067d4:	58020c00 	.word	0x58020c00
900067d8:	58024400 	.word	0x58024400
900067dc:	24007838 	.word	0x24007838

900067e0 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900067e0:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900067e2:	2201      	movs	r2, #1
{
900067e4:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900067e6:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900067ea:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900067ee:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900067f2:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900067f6:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900067f8:	f002 f9f6 	bl	90008be8 <HAL_I2C_Init>
900067fc:	b108      	cbz	r0, 90006802 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900067fe:	2001      	movs	r0, #1
}
90006800:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006802:	4601      	mov	r1, r0
90006804:	4620      	mov	r0, r4
90006806:	f002 fc69 	bl	900090dc <HAL_I2CEx_ConfigAnalogFilter>
9000680a:	2800      	cmp	r0, #0
9000680c:	d1f7      	bne.n	900067fe <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000680e:	4601      	mov	r1, r0
90006810:	4620      	mov	r0, r4
90006812:	f002 fc8d 	bl	90009130 <HAL_I2CEx_ConfigDigitalFilter>
90006816:	3800      	subs	r0, #0
90006818:	bf18      	it	ne
9000681a:	2001      	movne	r0, #1
}
9000681c:	bd10      	pop	{r4, pc}
9000681e:	bf00      	nop

90006820 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006820:	4b9b      	ldr	r3, [pc, #620]	@ (90006a90 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
90006822:	489c      	ldr	r0, [pc, #624]	@ (90006a94 <BSP_I2C4_Init+0x274>)
90006824:	4a9c      	ldr	r2, [pc, #624]	@ (90006a98 <BSP_I2C4_Init+0x278>)
{
90006826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
9000682a:	681c      	ldr	r4, [r3, #0]
{
9000682c:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000682e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006830:	b11c      	cbz	r4, 9000683a <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90006832:	2000      	movs	r0, #0
}
90006834:	b01f      	add	sp, #124	@ 0x7c
90006836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
9000683a:	2201      	movs	r2, #1
9000683c:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000683e:	f002 fc47 	bl	900090d0 <HAL_I2C_GetState>
90006842:	2800      	cmp	r0, #0
90006844:	d1f5      	bne.n	90006832 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006846:	4d95      	ldr	r5, [pc, #596]	@ (90006a9c <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006848:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
9000684c:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000684e:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006850:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006854:	f04f 0800 	mov.w	r8, #0
90006858:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000685c:	f043 0308 	orr.w	r3, r3, #8
90006860:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006864:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006868:	f003 0308 	and.w	r3, r3, #8
9000686c:	9315      	str	r3, [sp, #84]	@ 0x54
9000686e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006870:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006874:	f043 0308 	orr.w	r3, r3, #8
90006878:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000687c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006880:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006882:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006886:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000688a:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000688c:	a918      	add	r1, sp, #96	@ 0x60
9000688e:	4884      	ldr	r0, [pc, #528]	@ (90006aa0 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006890:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006892:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006896:	f001 fb83 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000689a:	2312      	movs	r3, #18
9000689c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900068a0:	a918      	add	r1, sp, #96	@ 0x60
900068a2:	487f      	ldr	r0, [pc, #508]	@ (90006aa0 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900068a4:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900068a6:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
900068aa:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900068ae:	f001 fb77 	bl	90007fa0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900068b2:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900068b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900068ba:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
900068be:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900068c2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900068c6:	9317      	str	r3, [sp, #92]	@ 0x5c
900068c8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
900068ca:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900068ce:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900068d2:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
900068d6:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900068da:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900068de:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900068e2:	f005 f9b9 	bl	9000bc58 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900068e6:	2800      	cmp	r0, #0
900068e8:	f000 8196 	beq.w	90006c18 <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900068ec:	4b6d      	ldr	r3, [pc, #436]	@ (90006aa4 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
900068ee:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900068f0:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068f4:	4e6c      	ldr	r6, [pc, #432]	@ (90006aa8 <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900068f6:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900068fa:	9402      	str	r4, [sp, #8]
900068fc:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90006900:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
90006902:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006904:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006908:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000690a:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
9000690e:	4b67      	ldr	r3, [pc, #412]	@ (90006aac <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006910:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006914:	0041      	lsls	r1, r0, #1
90006916:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
90006918:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
9000691c:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006920:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
90006922:	46a9      	mov	r9, r5
90006924:	9513      	str	r5, [sp, #76]	@ 0x4c
90006926:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006928:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
9000692c:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
90006930:	bf2c      	ite	cs
90006932:	2001      	movcs	r0, #1
90006934:	2000      	movcc	r0, #0
90006936:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
9000693a:	f000 0001 	and.w	r0, r0, #1
9000693e:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
90006942:	bf88      	it	hi
90006944:	2000      	movhi	r0, #0
90006946:	4590      	cmp	r8, r2
90006948:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
9000694c:	9004      	str	r0, [sp, #16]
9000694e:	bf8c      	ite	hi
90006950:	2000      	movhi	r0, #0
90006952:	2001      	movls	r0, #1
90006954:	4596      	cmp	lr, r2
90006956:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
9000695a:	bf38      	it	cc
9000695c:	2000      	movcc	r0, #0
9000695e:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90006962:	9411      	str	r4, [sp, #68]	@ 0x44
90006964:	465c      	mov	r4, fp
90006966:	9006      	str	r0, [sp, #24]
90006968:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
9000696c:	9007      	str	r0, [sp, #28]
9000696e:	bf94      	ite	ls
90006970:	2001      	movls	r0, #1
90006972:	2000      	movhi	r0, #0
90006974:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
90006978:	f000 0501 	and.w	r5, r0, #1
9000697c:	bf38      	it	cc
9000697e:	2500      	movcc	r5, #0
90006980:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006982:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006986:	9508      	str	r5, [sp, #32]
90006988:	bf8c      	ite	hi
9000698a:	2500      	movhi	r5, #0
9000698c:	2501      	movls	r5, #1
9000698e:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006990:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006992:	bf38      	it	cc
90006994:	2500      	movcc	r5, #0
90006996:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
9000699a:	bf98      	it	ls
9000699c:	2001      	movls	r0, #1
9000699e:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
900069a2:	9509      	str	r5, [sp, #36]	@ 0x24
900069a4:	4665      	mov	r5, ip
900069a6:	f000 0001 	and.w	r0, r0, #1
900069aa:	bf38      	it	cc
900069ac:	2000      	movcc	r0, #0
900069ae:	45d8      	cmp	r8, fp
900069b0:	900a      	str	r0, [sp, #40]	@ 0x28
900069b2:	4658      	mov	r0, fp
900069b4:	bf8c      	ite	hi
900069b6:	2000      	movhi	r0, #0
900069b8:	2001      	movls	r0, #1
900069ba:	45de      	cmp	lr, fp
900069bc:	bf38      	it	cc
900069be:	2000      	movcc	r0, #0
900069c0:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
900069c4:	4683      	mov	fp, r0
900069c6:	bf94      	ite	ls
900069c8:	f04f 0b01 	movls.w	fp, #1
900069cc:	f04f 0b00 	movhi.w	fp, #0
900069d0:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
900069d4:	900b      	str	r0, [sp, #44]	@ 0x2c
900069d6:	f00b 0b01 	and.w	fp, fp, #1
900069da:	bf38      	it	cc
900069dc:	f04f 0b00 	movcc.w	fp, #0
900069e0:	4658      	mov	r0, fp
900069e2:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
900069e6:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
900069ea:	45d8      	cmp	r8, fp
900069ec:	bf8c      	ite	hi
900069ee:	2000      	movhi	r0, #0
900069f0:	2001      	movls	r0, #1
900069f2:	45de      	cmp	lr, fp
900069f4:	bf38      	it	cc
900069f6:	2000      	movcc	r0, #0
900069f8:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
900069fc:	900d      	str	r0, [sp, #52]	@ 0x34
900069fe:	bf98      	it	ls
90006a00:	f04f 0b01 	movls.w	fp, #1
90006a04:	9807      	ldr	r0, [sp, #28]
90006a06:	bf88      	it	hi
90006a08:	f04f 0b00 	movhi.w	fp, #0
90006a0c:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90006a10:	f00b 0101 	and.w	r1, fp, #1
90006a14:	bf38      	it	cc
90006a16:	2100      	movcc	r1, #0
90006a18:	4580      	cmp	r8, r0
90006a1a:	910e      	str	r1, [sp, #56]	@ 0x38
90006a1c:	4601      	mov	r1, r0
90006a1e:	bf8c      	ite	hi
90006a20:	2100      	movhi	r1, #0
90006a22:	2101      	movls	r1, #1
90006a24:	4586      	cmp	lr, r0
90006a26:	4620      	mov	r0, r4
90006a28:	bf38      	it	cc
90006a2a:	2100      	movcc	r1, #0
90006a2c:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
90006a30:	910f      	str	r1, [sp, #60]	@ 0x3c
90006a32:	bf94      	ite	ls
90006a34:	2101      	movls	r1, #1
90006a36:	2100      	movhi	r1, #0
90006a38:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
90006a3c:	f001 0101 	and.w	r1, r1, #1
90006a40:	bf38      	it	cc
90006a42:	2100      	movcc	r1, #0
90006a44:	9110      	str	r1, [sp, #64]	@ 0x40
90006a46:	9911      	ldr	r1, [sp, #68]	@ 0x44
90006a48:	4588      	cmp	r8, r1
90006a4a:	460a      	mov	r2, r1
90006a4c:	bf8c      	ite	hi
90006a4e:	2200      	movhi	r2, #0
90006a50:	2201      	movls	r2, #1
90006a52:	458e      	cmp	lr, r1
90006a54:	bf38      	it	cc
90006a56:	2200      	movcc	r2, #0
90006a58:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
90006a5c:	9211      	str	r2, [sp, #68]	@ 0x44
90006a5e:	bf94      	ite	ls
90006a60:	2201      	movls	r2, #1
90006a62:	2200      	movhi	r2, #0
90006a64:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90006a68:	f04f 0400 	mov.w	r4, #0
90006a6c:	f002 0201 	and.w	r2, r2, #1
90006a70:	bf38      	it	cc
90006a72:	2200      	movcc	r2, #0
90006a74:	9212      	str	r2, [sp, #72]	@ 0x48
90006a76:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
90006a7a:	4590      	cmp	r8, r2
90006a7c:	bf8c      	ite	hi
90006a7e:	2100      	movhi	r1, #0
90006a80:	2101      	movls	r1, #1
90006a82:	4596      	cmp	lr, r2
90006a84:	bf38      	it	cc
90006a86:	2100      	movcc	r1, #0
90006a88:	460a      	mov	r2, r1
90006a8a:	9107      	str	r1, [sp, #28]
90006a8c:	e014      	b.n	90006ab8 <BSP_I2C4_Init+0x298>
90006a8e:	bf00      	nop
90006a90:	24008290 	.word	0x24008290
90006a94:	24007838 	.word	0x24007838
90006a98:	58001c00 	.word	0x58001c00
90006a9c:	58024400 	.word	0x58024400
90006aa0:	58020c00 	.word	0x58020c00
90006aa4:	3b9aca00 	.word	0x3b9aca00
90006aa8:	24007890 	.word	0x24007890
90006aac:	2400788c 	.word	0x2400788c
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006ab0:	2c10      	cmp	r4, #16
90006ab2:	4465      	add	r5, ip
90006ab4:	f000 827d 	beq.w	90006fb2 <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
90006ab8:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90006abc:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006abe:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006ac2:	d3f5      	bcc.n	90006ab0 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006ac4:	fab8 fb88 	clz	fp, r8
90006ac8:	4557      	cmp	r7, sl
90006aca:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90006ace:	bf08      	it	eq
90006ad0:	f04f 0b00 	moveq.w	fp, #0
90006ad4:	f1bb 0f00 	cmp.w	fp, #0
90006ad8:	f040 8200 	bne.w	90006edc <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006adc:	45f4      	cmp	ip, lr
90006ade:	bf8c      	ite	hi
90006ae0:	2200      	movhi	r2, #0
90006ae2:	2201      	movls	r2, #1
90006ae4:	45c4      	cmp	ip, r8
90006ae6:	bf38      	it	cc
90006ae8:	2200      	movcc	r2, #0
            if(presc != prev_presc)
90006aea:	4557      	cmp	r7, sl
90006aec:	bf0c      	ite	eq
90006aee:	2200      	moveq	r2, #0
90006af0:	f002 0201 	andne.w	r2, r2, #1
90006af4:	2a00      	cmp	r2, #0
90006af6:	f000 8099 	beq.w	90006c2c <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006afa:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006afe:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b02:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b04:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b08:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b0c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b10:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b12:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b14:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b16:	f200 80f2 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006b1a:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006b1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90006b1e:	4557      	cmp	r7, sl
90006b20:	bf0c      	ite	eq
90006b22:	2300      	moveq	r3, #0
90006b24:	f003 0301 	andne.w	r3, r3, #1
90006b28:	469b      	mov	fp, r3
90006b2a:	2b00      	cmp	r3, #0
90006b2c:	f000 8097 	beq.w	90006c5e <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b30:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006b34:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b38:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b3a:	4630      	mov	r0, r6
90006b3c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b40:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b44:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b48:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b4a:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b4c:	f200 80d7 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
90006b50:	465a      	mov	r2, fp
              prev_presc = presc;
90006b52:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006b54:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90006b56:	4557      	cmp	r7, sl
90006b58:	bf0c      	ite	eq
90006b5a:	2300      	moveq	r3, #0
90006b5c:	f003 0301 	andne.w	r3, r3, #1
90006b60:	469b      	mov	fp, r3
90006b62:	2b00      	cmp	r3, #0
90006b64:	f000 8096 	beq.w	90006c94 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b68:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006b6c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b70:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b72:	4630      	mov	r0, r6
90006b74:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b78:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b7c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006b80:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006b82:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006b84:	f200 80bb 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
90006b88:	465a      	mov	r2, fp
              prev_presc = presc;
90006b8a:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006b8c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90006b8e:	4557      	cmp	r7, sl
90006b90:	bf0c      	ite	eq
90006b92:	2300      	moveq	r3, #0
90006b94:	f003 0301 	andne.w	r3, r3, #1
90006b98:	2b00      	cmp	r3, #0
90006b9a:	f000 8096 	beq.w	90006cca <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006b9e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ba2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ba6:	4630      	mov	r0, r6
90006ba8:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006bac:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006bb0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006bb4:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006bb6:	f04f 010d 	mov.w	r1, #13
90006bba:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006bbc:	f200 809f 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006bc0:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006bc2:	e775      	b.n	90006ab0 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006bc4:	9a06      	ldr	r2, [sp, #24]
90006bc6:	4661      	mov	r1, ip
90006bc8:	f109 0914 	add.w	r9, r9, #20
90006bcc:	3201      	adds	r2, #1
90006bce:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90006bd2:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
90006bd6:	4572      	cmp	r2, lr
90006bd8:	9206      	str	r2, [sp, #24]
90006bda:	f040 80b4 	bne.w	90006d46 <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
90006bde:	9b01      	ldr	r3, [sp, #4]
90006be0:	2b7f      	cmp	r3, #127	@ 0x7f
90006be2:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90006be6:	d817      	bhi.n	90006c18 <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006be8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90006bec:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90006bf0:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006bf4:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90006bf6:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006bf8:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006bfa:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006bfe:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c02:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c06:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006c08:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c0a:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006c0c:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006c10:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006c12:	430b      	orrs	r3, r1
90006c14:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006c18:	4621      	mov	r1, r4
90006c1a:	48ad      	ldr	r0, [pc, #692]	@ (90006ed0 <BSP_I2C4_Init+0x6b0>)
90006c1c:	f7ff fde0 	bl	900067e0 <MX_I2C4_Init>
90006c20:	2800      	cmp	r0, #0
90006c22:	f43f ae06 	beq.w	90006832 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90006c26:	f06f 0007 	mvn.w	r0, #7
  return ret;
90006c2a:	e603      	b.n	90006834 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90006c2c:	9a04      	ldr	r2, [sp, #16]
90006c2e:	4557      	cmp	r7, sl
90006c30:	bf0c      	ite	eq
90006c32:	2200      	moveq	r2, #0
90006c34:	f002 0201 	andne.w	r2, r2, #1
90006c38:	2a00      	cmp	r2, #0
90006c3a:	f000 81cf 	beq.w	90006fdc <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c3e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006c42:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c46:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c48:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c4c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c50:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c54:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c56:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006c58:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c5a:	d850      	bhi.n	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006c5c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006c5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90006c60:	4557      	cmp	r7, sl
90006c62:	bf0c      	ite	eq
90006c64:	2300      	moveq	r3, #0
90006c66:	f003 0301 	andne.w	r3, r3, #1
90006c6a:	469b      	mov	fp, r3
90006c6c:	2b00      	cmp	r3, #0
90006c6e:	f000 80da 	beq.w	90006e26 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c72:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006c76:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c7a:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c7c:	4630      	mov	r0, r6
90006c7e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c82:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006c86:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006c8a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006c8c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006c8e:	d836      	bhi.n	90006cfe <BSP_I2C4_Init+0x4de>
90006c90:	465a      	mov	r2, fp
              prev_presc = presc;
90006c92:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006c94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90006c96:	4557      	cmp	r7, sl
90006c98:	bf0c      	ite	eq
90006c9a:	2300      	moveq	r3, #0
90006c9c:	f003 0301 	andne.w	r3, r3, #1
90006ca0:	469b      	mov	fp, r3
90006ca2:	2b00      	cmp	r3, #0
90006ca4:	f000 80db 	beq.w	90006e5e <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ca8:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006cac:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cb0:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cb2:	4630      	mov	r0, r6
90006cb4:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cb8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cbc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006cc0:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cc2:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cc4:	d81b      	bhi.n	90006cfe <BSP_I2C4_Init+0x4de>
90006cc6:	465a      	mov	r2, fp
              prev_presc = presc;
90006cc8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006cca:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90006ccc:	4557      	cmp	r7, sl
90006cce:	bf0c      	ite	eq
90006cd0:	2300      	moveq	r3, #0
90006cd2:	f003 0301 	andne.w	r3, r3, #1
90006cd6:	2b00      	cmp	r3, #0
90006cd8:	f000 80dd 	beq.w	90006e96 <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cdc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ce0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ce4:	4630      	mov	r0, r6
90006ce6:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006cea:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cee:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006cf2:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cf4:	f04f 010e 	mov.w	r1, #14
90006cf8:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cfa:	f67f af61 	bls.w	90006bc0 <BSP_I2C4_Init+0x3a0>
90006cfe:	4b75      	ldr	r3, [pc, #468]	@ (90006ed4 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90006d00:	464d      	mov	r5, r9
90006d02:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
90006d06:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006d0a:	f640 0234 	movw	r2, #2100	@ 0x834
90006d0e:	f101 0332 	add.w	r3, r1, #50	@ 0x32
90006d12:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d16:	2700      	movs	r7, #0
90006d18:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006d1a:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d1c:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006d1e:	461c      	mov	r4, r3
90006d20:	eba2 0c03 	sub.w	ip, r2, r3
90006d24:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d26:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006d2a:	460b      	mov	r3, r1
90006d2c:	4296      	cmp	r6, r2
90006d2e:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 90006ed8 <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d32:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006d36:	f240 4a12 	movw	sl, #1042	@ 0x412
90006d3a:	bf38      	it	cc
90006d3c:	4616      	movcc	r6, r2
90006d3e:	46ae      	mov	lr, r5
90006d40:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d42:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006d44:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006d46:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006d4a:	2500      	movs	r5, #0
90006d4c:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006d50:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006d54:	930d      	str	r3, [sp, #52]	@ 0x34
90006d56:	18c2      	adds	r2, r0, r3
90006d58:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
90006d5c:	1907      	adds	r7, r0, r4
90006d5e:	468c      	mov	ip, r1
90006d60:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
90006d64:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90006d68:	9207      	str	r2, [sp, #28]
90006d6a:	e006      	b.n	90006d7a <BSP_I2C4_Init+0x55a>
90006d6c:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90006d70:	4407      	add	r7, r0
90006d72:	eba8 0800 	sub.w	r8, r8, r0
90006d76:	f43f af25 	beq.w	90006bc4 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006d7a:	f240 5314 	movw	r3, #1300	@ 0x514
90006d7e:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d80:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006d82:	429f      	cmp	r7, r3
90006d84:	d9f2      	bls.n	90006d6c <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006d86:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006d8a:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90006d8e:	d2ed      	bcs.n	90006d6c <BSP_I2C4_Init+0x54c>
90006d90:	f640 0e34 	movw	lr, #2100	@ 0x834
90006d94:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006d96:	f8cd 8010 	str.w	r8, [sp, #16]
90006d9a:	2200      	movs	r2, #0
90006d9c:	ebae 0e03 	sub.w	lr, lr, r3
90006da0:	9b07      	ldr	r3, [sp, #28]
90006da2:	9705      	str	r7, [sp, #20]
90006da4:	443b      	add	r3, r7
90006da6:	f8dd 8018 	ldr.w	r8, [sp, #24]
90006daa:	460f      	mov	r7, r1
90006dac:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90006db0:	46b4      	mov	ip, r6
90006db2:	e005      	b.n	90006dc0 <BSP_I2C4_Init+0x5a0>
90006db4:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90006db8:	4403      	add	r3, r0
90006dba:	eba4 0400 	sub.w	r4, r4, r0
90006dbe:	d01a      	beq.n	90006df6 <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006dc0:	eb0e 0103 	add.w	r1, lr, r3
90006dc4:	4616      	mov	r6, r2
90006dc6:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90006dca:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006dcc:	4561      	cmp	r1, ip
90006dce:	d9f1      	bls.n	90006db4 <BSP_I2C4_Init+0x594>
90006dd0:	4555      	cmp	r5, sl
90006dd2:	d8ef      	bhi.n	90006db4 <BSP_I2C4_Init+0x594>
            if (error < 0)
90006dd4:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90006dd8:	bf28      	it	cs
90006dda:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90006ddc:	458b      	cmp	fp, r1
90006dde:	d9e9      	bls.n	90006db4 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006de0:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
90006de4:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006de6:	4403      	add	r3, r0
90006de8:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
90006dec:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90006df0:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006df4:	d1e4      	bne.n	90006dc0 <BSP_I2C4_Init+0x5a0>
90006df6:	4666      	mov	r6, ip
90006df8:	9d02      	ldr	r5, [sp, #8]
90006dfa:	f8dd c00c 	ldr.w	ip, [sp, #12]
90006dfe:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
90006e02:	e7b3      	b.n	90006d6c <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e04:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e08:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e0c:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e0e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e12:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e16:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e1a:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e1c:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e1e:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e20:	f63f af6d 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006e24:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006e26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90006e28:	4557      	cmp	r7, sl
90006e2a:	bf0c      	ite	eq
90006e2c:	2300      	moveq	r3, #0
90006e2e:	f003 0301 	andne.w	r3, r3, #1
90006e32:	469b      	mov	fp, r3
90006e34:	2b00      	cmp	r3, #0
90006e36:	f000 8084 	beq.w	90006f42 <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e3a:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e3e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e42:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e44:	4630      	mov	r0, r6
90006e46:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e4a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e4e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e52:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e54:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e56:	f63f af52 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
90006e5a:	465a      	mov	r2, fp
              prev_presc = presc;
90006e5c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006e5e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90006e60:	4557      	cmp	r7, sl
90006e62:	bf0c      	ite	eq
90006e64:	2300      	moveq	r3, #0
90006e66:	f003 0301 	andne.w	r3, r3, #1
90006e6a:	469b      	mov	fp, r3
90006e6c:	2b00      	cmp	r3, #0
90006e6e:	f000 8084 	beq.w	90006f7a <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e72:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e76:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e7a:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e7c:	4630      	mov	r0, r6
90006e7e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e82:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e86:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e8a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e8c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e8e:	f63f af36 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
90006e92:	465a      	mov	r2, fp
              prev_presc = presc;
90006e94:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006e96:	9b07      	ldr	r3, [sp, #28]
90006e98:	4557      	cmp	r7, sl
90006e9a:	bf0c      	ite	eq
90006e9c:	2300      	moveq	r3, #0
90006e9e:	f003 0301 	andne.w	r3, r3, #1
90006ea2:	2b00      	cmp	r3, #0
90006ea4:	f000 8098 	beq.w	90006fd8 <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ea8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90006eac:	480a      	ldr	r0, [pc, #40]	@ (90006ed8 <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90006eae:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006eb2:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
90006eb6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006eba:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006ebe:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ec0:	f04f 010f 	mov.w	r1, #15
90006ec4:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ec6:	f63f af1a 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006eca:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006ecc:	e5f0      	b.n	90006ab0 <BSP_I2C4_Init+0x290>
90006ece:	bf00      	nop
90006ed0:	24007838 	.word	0x24007838
90006ed4:	2400788c 	.word	0x2400788c
90006ed8:	24007890 	.word	0x24007890
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006edc:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ee0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ee4:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ee6:	4630      	mov	r0, r6
90006ee8:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006eec:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ef0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006ef4:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ef6:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ef8:	f63f af01 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006efc:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006efe:	9a06      	ldr	r2, [sp, #24]
90006f00:	45ba      	cmp	sl, r7
90006f02:	bf0c      	ite	eq
90006f04:	2200      	moveq	r2, #0
90006f06:	f002 0201 	andne.w	r2, r2, #1
90006f0a:	2a00      	cmp	r2, #0
90006f0c:	f47f af7a 	bne.w	90006e04 <BSP_I2C4_Init+0x5e4>
90006f10:	9a08      	ldr	r2, [sp, #32]
90006f12:	45ba      	cmp	sl, r7
90006f14:	bf0c      	ite	eq
90006f16:	2200      	moveq	r2, #0
90006f18:	f002 0201 	andne.w	r2, r2, #1
90006f1c:	2a00      	cmp	r2, #0
90006f1e:	d05f      	beq.n	90006fe0 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f20:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f24:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f28:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f2a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f2e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f32:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f36:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f38:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f3a:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f3c:	f63f aedf 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006f40:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006f42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90006f44:	4557      	cmp	r7, sl
90006f46:	bf0c      	ite	eq
90006f48:	2300      	moveq	r3, #0
90006f4a:	f003 0301 	andne.w	r3, r3, #1
90006f4e:	469b      	mov	fp, r3
90006f50:	2b00      	cmp	r3, #0
90006f52:	f43f adff 	beq.w	90006b54 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f56:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f5a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f5e:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f60:	4630      	mov	r0, r6
90006f62:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f66:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f6a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f6e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f70:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f72:	f63f aec4 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
90006f76:	465a      	mov	r2, fp
              prev_presc = presc;
90006f78:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006f7a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90006f7c:	4557      	cmp	r7, sl
90006f7e:	bf0c      	ite	eq
90006f80:	2300      	moveq	r3, #0
90006f82:	f003 0301 	andne.w	r3, r3, #1
90006f86:	2b00      	cmp	r3, #0
90006f88:	f43f ae00 	beq.w	90006b8c <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f8c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f90:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f94:	4630      	mov	r0, r6
90006f96:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006f9a:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f9e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006fa2:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006fa4:	f04f 010c 	mov.w	r1, #12
90006fa8:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006faa:	f63f aea8 	bhi.w	90006cfe <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006fae:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006fb0:	e57e      	b.n	90006ab0 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006fb2:	3701      	adds	r7, #1
90006fb4:	9a01      	ldr	r2, [sp, #4]
90006fb6:	2f10      	cmp	r7, #16
90006fb8:	4494      	add	ip, r2
90006fba:	f47f acb5 	bne.w	90006928 <BSP_I2C4_Init+0x108>
90006fbe:	9c02      	ldr	r4, [sp, #8]
90006fc0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90006fc2:	9903      	ldr	r1, [sp, #12]
90006fc4:	b11b      	cbz	r3, 90006fce <BSP_I2C4_Init+0x7ae>
90006fc6:	4b07      	ldr	r3, [pc, #28]	@ (90006fe4 <BSP_I2C4_Init+0x7c4>)
90006fc8:	464d      	mov	r5, r9
90006fca:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006fce:	2d00      	cmp	r5, #0
90006fd0:	f43f ae22 	beq.w	90006c18 <BSP_I2C4_Init+0x3f8>
90006fd4:	4804      	ldr	r0, [pc, #16]	@ (90006fe8 <BSP_I2C4_Init+0x7c8>)
90006fd6:	e698      	b.n	90006d0a <BSP_I2C4_Init+0x4ea>
90006fd8:	4613      	mov	r3, r2
90006fda:	e569      	b.n	90006ab0 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006fdc:	469b      	mov	fp, r3
90006fde:	e78e      	b.n	90006efe <BSP_I2C4_Init+0x6de>
90006fe0:	465a      	mov	r2, fp
90006fe2:	e59b      	b.n	90006b1c <BSP_I2C4_Init+0x2fc>
90006fe4:	2400788c 	.word	0x2400788c
90006fe8:	24007890 	.word	0x24007890

90006fec <BSP_I2C4_WriteReg>:
{
90006fec:	b530      	push	{r4, r5, lr}
90006fee:	4614      	mov	r4, r2
90006ff0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006ff2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90006ff6:	460a      	mov	r2, r1
90006ff8:	9301      	str	r3, [sp, #4]
90006ffa:	4601      	mov	r1, r0
90006ffc:	2301      	movs	r3, #1
90006ffe:	4809      	ldr	r0, [pc, #36]	@ (90007024 <BSP_I2C4_WriteReg+0x38>)
90007000:	9502      	str	r5, [sp, #8]
90007002:	9400      	str	r4, [sp, #0]
90007004:	f001 fe66 	bl	90008cd4 <HAL_I2C_Mem_Write>
90007008:	b908      	cbnz	r0, 9000700e <BSP_I2C4_WriteReg+0x22>
}
9000700a:	b005      	add	sp, #20
9000700c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000700e:	4805      	ldr	r0, [pc, #20]	@ (90007024 <BSP_I2C4_WriteReg+0x38>)
90007010:	f002 f862 	bl	900090d8 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007014:	2804      	cmp	r0, #4
90007016:	bf14      	ite	ne
90007018:	f06f 0003 	mvnne.w	r0, #3
9000701c:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007020:	e7f3      	b.n	9000700a <BSP_I2C4_WriteReg+0x1e>
90007022:	bf00      	nop
90007024:	24007838 	.word	0x24007838

90007028 <BSP_I2C4_ReadReg>:
{
90007028:	b530      	push	{r4, r5, lr}
9000702a:	4614      	mov	r4, r2
9000702c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000702e:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007032:	460a      	mov	r2, r1
90007034:	9301      	str	r3, [sp, #4]
90007036:	4601      	mov	r1, r0
90007038:	2301      	movs	r3, #1
9000703a:	4809      	ldr	r0, [pc, #36]	@ (90007060 <BSP_I2C4_ReadReg+0x38>)
9000703c:	9502      	str	r5, [sp, #8]
9000703e:	9400      	str	r4, [sp, #0]
90007040:	f001 ff46 	bl	90008ed0 <HAL_I2C_Mem_Read>
90007044:	b908      	cbnz	r0, 9000704a <BSP_I2C4_ReadReg+0x22>
}
90007046:	b005      	add	sp, #20
90007048:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000704a:	4805      	ldr	r0, [pc, #20]	@ (90007060 <BSP_I2C4_ReadReg+0x38>)
9000704c:	f002 f844 	bl	900090d8 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007050:	2804      	cmp	r0, #4
90007052:	bf14      	ite	ne
90007054:	f06f 0003 	mvnne.w	r0, #3
90007058:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
9000705c:	e7f3      	b.n	90007046 <BSP_I2C4_ReadReg+0x1e>
9000705e:	bf00      	nop
90007060:	24007838 	.word	0x24007838

90007064 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007064:	f000 ba9e 	b.w	900075a4 <HAL_GetTick>

90007068 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007068:	b970      	cbnz	r0, 90007088 <BSP_SDRAM_DeInit+0x20>
{
9000706a:	b510      	push	{r4, lr}
9000706c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000706e:	4808      	ldr	r0, [pc, #32]	@ (90007090 <BSP_SDRAM_DeInit+0x28>)
90007070:	f005 fffa 	bl	9000d068 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007074:	207a      	movs	r0, #122	@ 0x7a
90007076:	f000 fafd 	bl	90007674 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000707a:	4b06      	ldr	r3, [pc, #24]	@ (90007094 <BSP_SDRAM_DeInit+0x2c>)
9000707c:	4806      	ldr	r0, [pc, #24]	@ (90007098 <BSP_SDRAM_DeInit+0x30>)
9000707e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007080:	f003 fe5e 	bl	9000ad40 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007084:	4620      	mov	r0, r4
}
90007086:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007088:	f06f 0001 	mvn.w	r0, #1
}
9000708c:	4770      	bx	lr
9000708e:	bf00      	nop
90007090:	2400838c 	.word	0x2400838c
90007094:	52000040 	.word	0x52000040
90007098:	24008294 	.word	0x24008294

9000709c <MX_SDRAM_BANK2_Init>:
{
9000709c:	b530      	push	{r4, r5, lr}
9000709e:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900070a0:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900070a2:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
900070a4:	4c13      	ldr	r4, [pc, #76]	@ (900070f4 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900070a6:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900070a8:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900070aa:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
900070ac:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900070ae:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900070b0:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900070b4:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900070b6:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
900070b8:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
900070ba:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900070bc:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900070be:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900070c0:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900070c2:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900070c4:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900070c6:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900070ca:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900070cc:	f44f 6500 	mov.w	r5, #2048	@ 0x800
900070d0:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900070d4:	2204      	movs	r2, #4
900070d6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900070da:	2202      	movs	r2, #2
900070dc:	2302      	movs	r3, #2
900070de:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900070e2:	4b05      	ldr	r3, [pc, #20]	@ (900070f8 <MX_SDRAM_BANK2_Init+0x5c>)
900070e4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900070e6:	f005 ff95 	bl	9000d014 <HAL_SDRAM_Init>
}
900070ea:	3800      	subs	r0, #0
900070ec:	bf18      	it	ne
900070ee:	2001      	movne	r0, #1
900070f0:	b009      	add	sp, #36	@ 0x24
900070f2:	bd30      	pop	{r4, r5, pc}
900070f4:	2400838c 	.word	0x2400838c
900070f8:	52004140 	.word	0x52004140

900070fc <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900070fc:	2800      	cmp	r0, #0
900070fe:	f040 80cd 	bne.w	9000729c <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007102:	4b69      	ldr	r3, [pc, #420]	@ (900072a8 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007104:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007106:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000710a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
9000710e:	b5f0      	push	{r4, r5, r6, r7, lr}
90007110:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007112:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007116:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000711a:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
9000711c:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
9000711e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007120:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007124:	4c61      	ldr	r4, [pc, #388]	@ (900072ac <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007126:	4e62      	ldr	r6, [pc, #392]	@ (900072b0 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007128:	9200      	str	r2, [sp, #0]
9000712a:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
9000712c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007130:	430a      	orrs	r2, r1
90007132:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007136:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000713a:	400a      	ands	r2, r1
9000713c:	9201      	str	r2, [sp, #4]
9000713e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007140:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007144:	f042 0208 	orr.w	r2, r2, #8
90007148:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000714c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007150:	f002 0208 	and.w	r2, r2, #8
90007154:	9202      	str	r2, [sp, #8]
90007156:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007158:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000715c:	f042 0210 	orr.w	r2, r2, #16
90007160:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007164:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007168:	f002 0210 	and.w	r2, r2, #16
9000716c:	9203      	str	r2, [sp, #12]
9000716e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007170:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007174:	f042 0220 	orr.w	r2, r2, #32
90007178:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000717c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007180:	f002 0220 	and.w	r2, r2, #32
90007184:	9204      	str	r2, [sp, #16]
90007186:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007188:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000718c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007190:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007194:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007198:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000719c:	9205      	str	r2, [sp, #20]
9000719e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900071a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900071a4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900071a8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900071ac:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
900071ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900071b2:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900071b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900071b8:	483e      	ldr	r0, [pc, #248]	@ (900072b4 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
900071ba:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
900071bc:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900071be:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
900071c2:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900071c4:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900071c6:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900071c8:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900071cc:	f000 fee8 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900071d0:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900071d4:	a907      	add	r1, sp, #28
900071d6:	4838      	ldr	r0, [pc, #224]	@ (900072b8 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900071d8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900071da:	f000 fee1 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900071de:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900071e2:	a907      	add	r1, sp, #28
900071e4:	4835      	ldr	r0, [pc, #212]	@ (900072bc <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900071e6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900071e8:	f000 feda 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900071ec:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900071f0:	a907      	add	r1, sp, #28
900071f2:	4833      	ldr	r0, [pc, #204]	@ (900072c0 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900071f4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900071f6:	f000 fed3 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900071fa:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900071fc:	a907      	add	r1, sp, #28
900071fe:	4831      	ldr	r0, [pc, #196]	@ (900072c4 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007200:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007202:	f000 fecd 	bl	90007fa0 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007206:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007208:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000720c:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007210:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007212:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007214:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007216:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007218:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000721c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000721e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007220:	4a29      	ldr	r2, [pc, #164]	@ (900072c8 <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
90007222:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007224:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007226:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007228:	6334      	str	r4, [r6, #48]	@ 0x30
9000722a:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000722c:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007230:	f640 0308 	movw	r3, #2056	@ 0x808
90007234:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007236:	2320      	movs	r3, #32
90007238:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000723a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
9000723e:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007242:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90007244:	f003 fd7c 	bl	9000ad40 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007248:	4620      	mov	r0, r4
9000724a:	f003 fcff 	bl	9000ac4c <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000724e:	462a      	mov	r2, r5
90007250:	210f      	movs	r1, #15
90007252:	207a      	movs	r0, #122	@ 0x7a
90007254:	f000 f9c4 	bl	900075e0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007258:	207a      	movs	r0, #122	@ 0x7a
9000725a:	f000 f9fd 	bl	90007658 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000725e:	2210      	movs	r2, #16
90007260:	2104      	movs	r1, #4
90007262:	4630      	mov	r0, r6
90007264:	f7ff ff1a 	bl	9000709c <MX_SDRAM_BANK2_Init>
90007268:	4603      	mov	r3, r0
9000726a:	b9d0      	cbnz	r0, 900072a2 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000726c:	4917      	ldr	r1, [pc, #92]	@ (900072cc <BSP_SDRAM_Init+0x1d0>)
9000726e:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007270:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007272:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007274:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007276:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
9000727a:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
9000727c:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007280:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007284:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007288:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000728c:	f7ff fa24 	bl	900066d8 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007290:	2800      	cmp	r0, #0
90007292:	bf18      	it	ne
90007294:	f06f 0004 	mvnne.w	r0, #4
}
90007298:	b00d      	add	sp, #52	@ 0x34
9000729a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000729c:	f06f 0001 	mvn.w	r0, #1
}
900072a0:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900072a2:	f04f 30ff 	mov.w	r0, #4294967295
900072a6:	e7f7      	b.n	90007298 <BSP_SDRAM_Init+0x19c>
900072a8:	58024400 	.word	0x58024400
900072ac:	24008300 	.word	0x24008300
900072b0:	2400838c 	.word	0x2400838c
900072b4:	58020c00 	.word	0x58020c00
900072b8:	58021000 	.word	0x58021000
900072bc:	58021400 	.word	0x58021400
900072c0:	58021800 	.word	0x58021800
900072c4:	58021c00 	.word	0x58021c00
900072c8:	52000040 	.word	0x52000040
900072cc:	2400836c 	.word	0x2400836c

900072d0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900072d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900072d4:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900072d6:	2800      	cmp	r0, #0
900072d8:	d16b      	bne.n	900073b2 <BSP_TS_Init+0xe2>
900072da:	680b      	ldr	r3, [r1, #0]
900072dc:	460d      	mov	r5, r1
900072de:	1e5a      	subs	r2, r3, #1
900072e0:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
900072e4:	d265      	bcs.n	900073b2 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900072e6:	684a      	ldr	r2, [r1, #4]
900072e8:	1e51      	subs	r1, r2, #1
900072ea:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
900072ee:	d260      	bcs.n	900073b2 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900072f0:	4293      	cmp	r3, r2
900072f2:	bf28      	it	cs
900072f4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900072f6:	68ea      	ldr	r2, [r5, #12]
900072f8:	429a      	cmp	r2, r3
900072fa:	d85a      	bhi.n	900073b2 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900072fc:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900072fe:	4b31      	ldr	r3, [pc, #196]	@ (900073c4 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007300:	4c31      	ldr	r4, [pc, #196]	@ (900073c8 <BSP_TS_Init+0xf8>)
90007302:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007304:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007308:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000730a:	4a30      	ldr	r2, [pc, #192]	@ (900073cc <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000730c:	4b30      	ldr	r3, [pc, #192]	@ (900073d0 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000730e:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007310:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007312:	4a30      	ldr	r2, [pc, #192]	@ (900073d4 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007314:	4b30      	ldr	r3, [pc, #192]	@ (900073d8 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007316:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007318:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000731a:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000731c:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000731e:	f7ff f92d 	bl	9000657c <FT5336_RegisterBusIO>
90007322:	2800      	cmp	r0, #0
90007324:	d14b      	bne.n	900073be <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007326:	a901      	add	r1, sp, #4
90007328:	4620      	mov	r0, r4
9000732a:	f7ff f81d 	bl	90006368 <FT5336_ReadID>
9000732e:	2800      	cmp	r0, #0
90007330:	d145      	bne.n	900073be <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007332:	9b01      	ldr	r3, [sp, #4]
90007334:	2b51      	cmp	r3, #81	@ 0x51
90007336:	d142      	bne.n	900073be <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007338:	4b28      	ldr	r3, [pc, #160]	@ (900073dc <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000733a:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
9000733c:	4f28      	ldr	r7, [pc, #160]	@ (900073e0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000733e:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 900073e8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007342:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007344:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007348:	681b      	ldr	r3, [r3, #0]
9000734a:	4798      	blx	r3
9000734c:	4606      	mov	r6, r0
9000734e:	2800      	cmp	r0, #0
90007350:	d135      	bne.n	900073be <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007352:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007354:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007356:	4c23      	ldr	r4, [pc, #140]	@ (900073e4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007358:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000735c:	6022      	str	r2, [r4, #0]
9000735e:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007360:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007362:	6062      	str	r2, [r4, #4]
90007364:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007366:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007368:	60a2      	str	r2, [r4, #8]
9000736a:	68ea      	ldr	r2, [r5, #12]
9000736c:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000736e:	4798      	blx	r3
90007370:	2800      	cmp	r0, #0
90007372:	db18      	blt.n	900073a6 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007374:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007378:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000737c:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000737e:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007382:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007384:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007386:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007388:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000738a:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000738e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007392:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007396:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000739a:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000739c:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
9000739e:	4630      	mov	r0, r6
900073a0:	b008      	add	sp, #32
900073a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900073a6:	f06f 0604 	mvn.w	r6, #4
}
900073aa:	4630      	mov	r0, r6
900073ac:	b008      	add	sp, #32
900073ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900073b2:	f06f 0601 	mvn.w	r6, #1
}
900073b6:	4630      	mov	r0, r6
900073b8:	b008      	add	sp, #32
900073ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
900073be:	f04f 36ff 	mov.w	r6, #4294967295
900073c2:	e7ec      	b.n	9000739e <BSP_TS_Init+0xce>
900073c4:	90006821 	.word	0x90006821
900073c8:	240083c0 	.word	0x240083c0
900073cc:	9000678d 	.word	0x9000678d
900073d0:	90007029 	.word	0x90007029
900073d4:	90006fed 	.word	0x90006fed
900073d8:	90007065 	.word	0x90007065
900073dc:	24000044 	.word	0x24000044
900073e0:	24008428 	.word	0x24008428
900073e4:	240083e8 	.word	0x240083e8
900073e8:	2400842c 	.word	0x2400842c

900073ec <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900073ec:	2800      	cmp	r0, #0
900073ee:	d154      	bne.n	9000749a <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900073f0:	4b2b      	ldr	r3, [pc, #172]	@ (900074a0 <BSP_TS_GetState+0xb4>)
900073f2:	4a2c      	ldr	r2, [pc, #176]	@ (900074a4 <BSP_TS_GetState+0xb8>)
900073f4:	681b      	ldr	r3, [r3, #0]
900073f6:	6810      	ldr	r0, [r2, #0]
900073f8:	691b      	ldr	r3, [r3, #16]
{
900073fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900073fe:	b084      	sub	sp, #16
90007400:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007402:	a901      	add	r1, sp, #4
90007404:	4798      	blx	r3
90007406:	2800      	cmp	r0, #0
90007408:	db3f      	blt.n	9000748a <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000740a:	4b27      	ldr	r3, [pc, #156]	@ (900074a8 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
9000740c:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000740e:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007410:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007412:	b930      	cbnz	r0, 90007422 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007414:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007416:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
9000741a:	2000      	movs	r0, #0
}
9000741c:	b004      	add	sp, #16
9000741e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007422:	689f      	ldr	r7, [r3, #8]
90007424:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007426:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000742a:	d433      	bmi.n	90007494 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000742c:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
9000742e:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007430:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007434:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007438:	d003      	beq.n	90007442 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000743a:	f10e 32ff 	add.w	r2, lr, #4294967295
9000743e:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007442:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007446:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007448:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000744a:	bf48      	it	mi
9000744c:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007450:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007454:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007456:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007458:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000745c:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007460:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007464:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007466:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007468:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000746a:	bf8c      	ite	hi
9000746c:	1b90      	subhi	r0, r2, r6
9000746e:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007470:	42a9      	cmp	r1, r5
90007472:	bf8c      	ite	hi
90007474:	1b4f      	subhi	r7, r1, r5
90007476:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007478:	42b8      	cmp	r0, r7
9000747a:	bf38      	it	cc
9000747c:	4638      	movcc	r0, r7
9000747e:	68df      	ldr	r7, [r3, #12]
90007480:	4287      	cmp	r7, r0
90007482:	d2c8      	bcs.n	90007416 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007484:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007486:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007488:	e7c7      	b.n	9000741a <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000748a:	f06f 0004 	mvn.w	r0, #4
}
9000748e:	b004      	add	sp, #16
90007490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007494:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007496:	4642      	mov	r2, r8
90007498:	e7ca      	b.n	90007430 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
9000749a:	f06f 0001 	mvn.w	r0, #1
}
9000749e:	4770      	bx	lr
900074a0:	2400842c 	.word	0x2400842c
900074a4:	24008428 	.word	0x24008428
900074a8:	240083e8 	.word	0x240083e8

900074ac <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900074ac:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900074ae:	4c19      	ldr	r4, [pc, #100]	@ (90007514 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900074b0:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900074b2:	4b19      	ldr	r3, [pc, #100]	@ (90007518 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900074b4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
900074b8:	4918      	ldr	r1, [pc, #96]	@ (9000751c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900074ba:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
900074be:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
900074c2:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900074c4:	4c16      	ldr	r4, [pc, #88]	@ (90007520 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900074c6:	f040 0001 	orr.w	r0, r0, #1
900074ca:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
900074cc:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900074ce:	6818      	ldr	r0, [r3, #0]
900074d0:	4001      	ands	r1, r0
900074d2:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900074d4:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900074d6:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900074d8:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900074da:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
900074dc:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
900074de:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
900074e0:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
900074e2:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
900074e4:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
900074e6:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
900074e8:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
900074ea:	6819      	ldr	r1, [r3, #0]
900074ec:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
900074f0:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
900074f2:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900074f4:	6823      	ldr	r3, [r4, #0]
900074f6:	f36f 030f 	bfc	r3, #0, #16
900074fa:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
900074fe:	d203      	bcs.n	90007508 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007500:	4b08      	ldr	r3, [pc, #32]	@ (90007524 <SystemInit+0x78>)
90007502:	2201      	movs	r2, #1
90007504:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007508:	4a07      	ldr	r2, [pc, #28]	@ (90007528 <SystemInit+0x7c>)
9000750a:	4b02      	ldr	r3, [pc, #8]	@ (90007514 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000750c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007510:	609a      	str	r2, [r3, #8]
}
90007512:	4770      	bx	lr
90007514:	e000ed00 	.word	0xe000ed00
90007518:	58024400 	.word	0x58024400
9000751c:	eaf6ed7f 	.word	0xeaf6ed7f
90007520:	5c001000 	.word	0x5c001000
90007524:	51008000 	.word	0x51008000
90007528:	90000000 	.word	0x90000000

9000752c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000752c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000752e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007530:	4c12      	ldr	r4, [pc, #72]	@ (9000757c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007532:	f000 f843 	bl	900075bc <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007536:	f004 f94f 	bl	9000b7d8 <HAL_RCC_GetSysClockFreq>
9000753a:	4b11      	ldr	r3, [pc, #68]	@ (90007580 <HAL_Init+0x54>)
9000753c:	4911      	ldr	r1, [pc, #68]	@ (90007584 <HAL_Init+0x58>)
9000753e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007540:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007542:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007546:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000754a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000754c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000754e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007552:	490d      	ldr	r1, [pc, #52]	@ (90007588 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007554:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007558:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000755a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000755e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007560:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007562:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007564:	f7fd f874 	bl	90004650 <HAL_InitTick>
90007568:	b110      	cbz	r0, 90007570 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000756a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000756c:	4620      	mov	r0, r4
9000756e:	bd10      	pop	{r4, pc}
90007570:	4604      	mov	r4, r0
  HAL_MspInit();
90007572:	f7fc fdcb 	bl	9000410c <HAL_MspInit>
}
90007576:	4620      	mov	r0, r4
90007578:	bd10      	pop	{r4, pc}
9000757a:	bf00      	nop
9000757c:	24000074 	.word	0x24000074
90007580:	58024400 	.word	0x58024400
90007584:	9002f118 	.word	0x9002f118
90007588:	24000078 	.word	0x24000078

9000758c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000758c:	4a03      	ldr	r2, [pc, #12]	@ (9000759c <HAL_IncTick+0x10>)
9000758e:	4b04      	ldr	r3, [pc, #16]	@ (900075a0 <HAL_IncTick+0x14>)
90007590:	6811      	ldr	r1, [r2, #0]
90007592:	781b      	ldrb	r3, [r3, #0]
90007594:	440b      	add	r3, r1
90007596:	6013      	str	r3, [r2, #0]
}
90007598:	4770      	bx	lr
9000759a:	bf00      	nop
9000759c:	24008430 	.word	0x24008430
900075a0:	2400007c 	.word	0x2400007c

900075a4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900075a4:	4b01      	ldr	r3, [pc, #4]	@ (900075ac <HAL_GetTick+0x8>)
900075a6:	6818      	ldr	r0, [r3, #0]
}
900075a8:	4770      	bx	lr
900075aa:	bf00      	nop
900075ac:	24008430 	.word	0x24008430

900075b0 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900075b0:	4b01      	ldr	r3, [pc, #4]	@ (900075b8 <HAL_GetREVID+0x8>)
900075b2:	6818      	ldr	r0, [r3, #0]
}
900075b4:	0c00      	lsrs	r0, r0, #16
900075b6:	4770      	bx	lr
900075b8:	5c001000 	.word	0x5c001000

900075bc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900075bc:	4906      	ldr	r1, [pc, #24]	@ (900075d8 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900075be:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900075c2:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900075c4:	4b05      	ldr	r3, [pc, #20]	@ (900075dc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900075c6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900075c8:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900075cc:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900075d0:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900075d2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900075d4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900075d6:	4770      	bx	lr
900075d8:	e000ed00 	.word	0xe000ed00
900075dc:	05fa0000 	.word	0x05fa0000

900075e0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900075e0:	4b1a      	ldr	r3, [pc, #104]	@ (9000764c <HAL_NVIC_SetPriority+0x6c>)
900075e2:	68db      	ldr	r3, [r3, #12]
900075e4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900075e8:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900075ea:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900075ee:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900075f2:	f1be 0f04 	cmp.w	lr, #4
900075f6:	bf28      	it	cs
900075f8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900075fc:	f1bc 0f06 	cmp.w	ip, #6
90007600:	d91a      	bls.n	90007638 <HAL_NVIC_SetPriority+0x58>
90007602:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007606:	f04f 33ff 	mov.w	r3, #4294967295
9000760a:	fa03 f30c 	lsl.w	r3, r3, ip
9000760e:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007612:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007616:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007618:	fa03 f30e 	lsl.w	r3, r3, lr
9000761c:	ea21 0303 	bic.w	r3, r1, r3
90007620:	fa03 f30c 	lsl.w	r3, r3, ip
90007624:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007628:	ea4f 1303 	mov.w	r3, r3, lsl #4
9000762c:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
9000762e:	db06      	blt.n	9000763e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007630:	4a07      	ldr	r2, [pc, #28]	@ (90007650 <HAL_NVIC_SetPriority+0x70>)
90007632:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007634:	f85d fb04 	ldr.w	pc, [sp], #4
90007638:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000763a:	4694      	mov	ip, r2
9000763c:	e7e9      	b.n	90007612 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000763e:	f000 000f 	and.w	r0, r0, #15
90007642:	4a04      	ldr	r2, [pc, #16]	@ (90007654 <HAL_NVIC_SetPriority+0x74>)
90007644:	5413      	strb	r3, [r2, r0]
90007646:	f85d fb04 	ldr.w	pc, [sp], #4
9000764a:	bf00      	nop
9000764c:	e000ed00 	.word	0xe000ed00
90007650:	e000e400 	.word	0xe000e400
90007654:	e000ed14 	.word	0xe000ed14

90007658 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007658:	2800      	cmp	r0, #0
9000765a:	db07      	blt.n	9000766c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000765c:	2301      	movs	r3, #1
9000765e:	f000 011f 	and.w	r1, r0, #31
90007662:	4a03      	ldr	r2, [pc, #12]	@ (90007670 <HAL_NVIC_EnableIRQ+0x18>)
90007664:	0940      	lsrs	r0, r0, #5
90007666:	408b      	lsls	r3, r1
90007668:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000766c:	4770      	bx	lr
9000766e:	bf00      	nop
90007670:	e000e100 	.word	0xe000e100

90007674 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007674:	2800      	cmp	r0, #0
90007676:	db0c      	blt.n	90007692 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007678:	0943      	lsrs	r3, r0, #5
9000767a:	2201      	movs	r2, #1
9000767c:	f000 001f 	and.w	r0, r0, #31
90007680:	4904      	ldr	r1, [pc, #16]	@ (90007694 <HAL_NVIC_DisableIRQ+0x20>)
90007682:	3320      	adds	r3, #32
90007684:	4082      	lsls	r2, r0
90007686:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000768a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000768e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007692:	4770      	bx	lr
90007694:	e000e100 	.word	0xe000e100

90007698 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007698:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000769c:	4b04      	ldr	r3, [pc, #16]	@ (900076b0 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000769e:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900076a0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900076a2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
900076a6:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
900076a8:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
900076ac:	4770      	bx	lr
900076ae:	bf00      	nop
900076b0:	e000ed00 	.word	0xe000ed00

900076b4 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900076b4:	4b06      	ldr	r3, [pc, #24]	@ (900076d0 <HAL_MPU_Enable+0x1c>)
900076b6:	f040 0001 	orr.w	r0, r0, #1
900076ba:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900076be:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900076c0:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
900076c4:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900076c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900076ca:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900076ce:	4770      	bx	lr
900076d0:	e000ed00 	.word	0xe000ed00

900076d4 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900076d4:	4a16      	ldr	r2, [pc, #88]	@ (90007730 <HAL_MPU_ConfigRegion+0x5c>)
900076d6:	7843      	ldrb	r3, [r0, #1]
900076d8:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
900076dc:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
900076e0:	f023 0301 	bic.w	r3, r3, #1
900076e4:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
900076e8:	6843      	ldr	r3, [r0, #4]
900076ea:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900076ee:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900076f0:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900076f4:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
900076f6:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900076f8:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900076fc:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007700:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007702:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007704:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007708:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000770c:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007710:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007712:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007716:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000771a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000771e:	7a01      	ldrb	r1, [r0, #8]
90007720:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007724:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007728:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
9000772c:	4770      	bx	lr
9000772e:	bf00      	nop
90007730:	e000ed00 	.word	0xe000ed00

90007734 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007734:	2800      	cmp	r0, #0
90007736:	d036      	beq.n	900077a6 <HAL_CRC_Init+0x72>
{
90007738:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000773a:	7f43      	ldrb	r3, [r0, #29]
9000773c:	4604      	mov	r4, r0
9000773e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007742:	b363      	cbz	r3, 9000779e <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007744:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007746:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90007748:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000774a:	b9f3      	cbnz	r3, 9000778a <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000774c:	6823      	ldr	r3, [r4, #0]
9000774e:	4a17      	ldr	r2, [pc, #92]	@ (900077ac <HAL_CRC_Init+0x78>)
90007750:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007752:	689a      	ldr	r2, [r3, #8]
90007754:	f022 0218 	bic.w	r2, r2, #24
90007758:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000775a:	7962      	ldrb	r2, [r4, #5]
9000775c:	b18a      	cbz	r2, 90007782 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000775e:	6922      	ldr	r2, [r4, #16]
90007760:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007762:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007764:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007768:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9000776c:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000776e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007770:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007772:	689a      	ldr	r2, [r3, #8]
90007774:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007778:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000777a:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000777c:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000777e:	7761      	strb	r1, [r4, #29]
}
90007780:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007782:	f04f 32ff 	mov.w	r2, #4294967295
90007786:	611a      	str	r2, [r3, #16]
90007788:	e7eb      	b.n	90007762 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000778a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000778e:	4620      	mov	r0, r4
90007790:	f000 f80e 	bl	900077b0 <HAL_CRCEx_Polynomial_Set>
90007794:	b908      	cbnz	r0, 9000779a <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007796:	6823      	ldr	r3, [r4, #0]
90007798:	e7df      	b.n	9000775a <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000779a:	2001      	movs	r0, #1
}
9000779c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000779e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
900077a0:	f7fc fcce 	bl	90004140 <HAL_CRC_MspInit>
900077a4:	e7ce      	b.n	90007744 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900077a6:	2001      	movs	r0, #1
}
900077a8:	4770      	bx	lr
900077aa:	bf00      	nop
900077ac:	04c11db7 	.word	0x04c11db7

900077b0 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900077b0:	07cb      	lsls	r3, r1, #31
900077b2:	d51a      	bpl.n	900077ea <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
900077b4:	231f      	movs	r3, #31
{
900077b6:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900077b8:	3b01      	subs	r3, #1
900077ba:	1c5c      	adds	r4, r3, #1
900077bc:	fa21 fc03 	lsr.w	ip, r1, r3
900077c0:	d015      	beq.n	900077ee <HAL_CRCEx_Polynomial_Set+0x3e>
900077c2:	f01c 0f01 	tst.w	ip, #1
900077c6:	d0f7      	beq.n	900077b8 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
900077c8:	2a18      	cmp	r2, #24
900077ca:	d811      	bhi.n	900077f0 <HAL_CRCEx_Polynomial_Set+0x40>
900077cc:	e8df f002 	tbb	[pc, r2]
900077d0:	10101016 	.word	0x10101016
900077d4:	10101010 	.word	0x10101010
900077d8:	10101024 	.word	0x10101024
900077dc:	10101010 	.word	0x10101010
900077e0:	10101021 	.word	0x10101021
900077e4:	10101010 	.word	0x10101010
900077e8:	14          	.byte	0x14
900077e9:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
900077ea:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900077ec:	4770      	bx	lr
    switch (PolyLength)
900077ee:	b12a      	cbz	r2, 900077fc <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
900077f0:	2001      	movs	r0, #1
}
900077f2:	f85d 4b04 	ldr.w	r4, [sp], #4
900077f6:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900077f8:	2b06      	cmp	r3, #6
900077fa:	d8f9      	bhi.n	900077f0 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900077fc:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900077fe:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007800:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007802:	68a3      	ldr	r3, [r4, #8]
90007804:	f023 0318 	bic.w	r3, r3, #24
90007808:	4313      	orrs	r3, r2
9000780a:	60a3      	str	r3, [r4, #8]
}
9000780c:	f85d 4b04 	ldr.w	r4, [sp], #4
90007810:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90007812:	2b07      	cmp	r3, #7
90007814:	d9f2      	bls.n	900077fc <HAL_CRCEx_Polynomial_Set+0x4c>
90007816:	e7eb      	b.n	900077f0 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007818:	2b0f      	cmp	r3, #15
9000781a:	d9ef      	bls.n	900077fc <HAL_CRCEx_Polynomial_Set+0x4c>
9000781c:	e7e8      	b.n	900077f0 <HAL_CRCEx_Polynomial_Set+0x40>
9000781e:	bf00      	nop

90007820 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
90007820:	b570      	push	{r4, r5, r6, lr}
90007822:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
90007824:	f7ff febe 	bl	900075a4 <HAL_GetTick>

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
90007828:	2c00      	cmp	r4, #0
9000782a:	d06d      	beq.n	90007908 <HAL_DMA_Abort+0xe8>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
9000782c:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
90007830:	2b02      	cmp	r3, #2
90007832:	d164      	bne.n	900078fe <HAL_DMA_Abort+0xde>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007834:	6825      	ldr	r5, [r4, #0]
90007836:	4606      	mov	r6, r0
90007838:	4bad      	ldr	r3, [pc, #692]	@ (90007af0 <HAL_DMA_Abort+0x2d0>)
9000783a:	429d      	cmp	r5, r3
9000783c:	d066      	beq.n	9000790c <HAL_DMA_Abort+0xec>
9000783e:	3318      	adds	r3, #24
90007840:	429d      	cmp	r5, r3
90007842:	d063      	beq.n	9000790c <HAL_DMA_Abort+0xec>
90007844:	3318      	adds	r3, #24
90007846:	429d      	cmp	r5, r3
90007848:	f000 80f3 	beq.w	90007a32 <HAL_DMA_Abort+0x212>
9000784c:	3318      	adds	r3, #24
9000784e:	429d      	cmp	r5, r3
90007850:	f000 811a 	beq.w	90007a88 <HAL_DMA_Abort+0x268>
90007854:	3318      	adds	r3, #24
90007856:	429d      	cmp	r5, r3
90007858:	f000 8125 	beq.w	90007aa6 <HAL_DMA_Abort+0x286>
9000785c:	3318      	adds	r3, #24
9000785e:	429d      	cmp	r5, r3
90007860:	f000 80ff 	beq.w	90007a62 <HAL_DMA_Abort+0x242>
90007864:	3318      	adds	r3, #24
90007866:	429d      	cmp	r5, r3
90007868:	f000 812e 	beq.w	90007ac8 <HAL_DMA_Abort+0x2a8>
9000786c:	3318      	adds	r3, #24
9000786e:	429d      	cmp	r5, r3
90007870:	f000 814a 	beq.w	90007b08 <HAL_DMA_Abort+0x2e8>
90007874:	f503 7356 	add.w	r3, r3, #856	@ 0x358
90007878:	429d      	cmp	r5, r3
9000787a:	f000 8158 	beq.w	90007b2e <HAL_DMA_Abort+0x30e>
9000787e:	3318      	adds	r3, #24
90007880:	429d      	cmp	r5, r3
90007882:	f000 8163 	beq.w	90007b4c <HAL_DMA_Abort+0x32c>
90007886:	3318      	adds	r3, #24
90007888:	429d      	cmp	r5, r3
9000788a:	f000 816e 	beq.w	90007b6a <HAL_DMA_Abort+0x34a>
9000788e:	3318      	adds	r3, #24
90007890:	429d      	cmp	r5, r3
90007892:	f000 816c 	beq.w	90007b6e <HAL_DMA_Abort+0x34e>
90007896:	3318      	adds	r3, #24
90007898:	429d      	cmp	r5, r3
9000789a:	f000 816a 	beq.w	90007b72 <HAL_DMA_Abort+0x352>
9000789e:	3318      	adds	r3, #24
900078a0:	429d      	cmp	r5, r3
900078a2:	f000 8168 	beq.w	90007b76 <HAL_DMA_Abort+0x356>
900078a6:	3318      	adds	r3, #24
900078a8:	429d      	cmp	r5, r3
900078aa:	f000 8168 	beq.w	90007b7e <HAL_DMA_Abort+0x35e>
900078ae:	3318      	adds	r3, #24
900078b0:	429d      	cmp	r5, r3
900078b2:	f000 8162 	beq.w	90007b7a <HAL_DMA_Abort+0x35a>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900078b6:	682b      	ldr	r3, [r5, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900078b8:	4a8e      	ldr	r2, [pc, #568]	@ (90007af4 <HAL_DMA_Abort+0x2d4>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900078ba:	f023 030e 	bic.w	r3, r3, #14
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900078be:	4295      	cmp	r5, r2
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900078c0:	602b      	str	r3, [r5, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900078c2:	f000 80bf 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078c6:	4b8c      	ldr	r3, [pc, #560]	@ (90007af8 <HAL_DMA_Abort+0x2d8>)
900078c8:	429d      	cmp	r5, r3
900078ca:	f000 80bb 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078ce:	3314      	adds	r3, #20
900078d0:	429d      	cmp	r5, r3
900078d2:	f000 80b7 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078d6:	3314      	adds	r3, #20
900078d8:	429d      	cmp	r5, r3
900078da:	f000 80b3 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078de:	3314      	adds	r3, #20
900078e0:	429d      	cmp	r5, r3
900078e2:	f000 80af 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078e6:	3314      	adds	r3, #20
900078e8:	429d      	cmp	r5, r3
900078ea:	f000 80ab 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078ee:	3314      	adds	r3, #20
900078f0:	429d      	cmp	r5, r3
900078f2:	f000 80a7 	beq.w	90007a44 <HAL_DMA_Abort+0x224>
900078f6:	3314      	adds	r3, #20
900078f8:	429d      	cmp	r5, r3
900078fa:	d114      	bne.n	90007926 <HAL_DMA_Abort+0x106>
900078fc:	e0a2      	b.n	90007a44 <HAL_DMA_Abort+0x224>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
900078fe:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hdma);
90007900:	2300      	movs	r3, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90007902:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
90007904:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
90007908:	2001      	movs	r0, #1
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
9000790a:	bd70      	pop	{r4, r5, r6, pc}
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000790c:	682b      	ldr	r3, [r5, #0]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000790e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007910:	f023 031e 	bic.w	r3, r3, #30
90007914:	602b      	str	r3, [r5, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007916:	696b      	ldr	r3, [r5, #20]
90007918:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000791c:	616b      	str	r3, [r5, #20]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000791e:	6813      	ldr	r3, [r2, #0]
90007920:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007924:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007926:	682b      	ldr	r3, [r5, #0]
90007928:	f023 0301 	bic.w	r3, r3, #1
9000792c:	602b      	str	r3, [r5, #0]
9000792e:	e005      	b.n	9000793c <HAL_DMA_Abort+0x11c>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
90007930:	f7ff fe38 	bl	900075a4 <HAL_GetTick>
90007934:	1b83      	subs	r3, r0, r6
90007936:	2b05      	cmp	r3, #5
90007938:	f200 808a 	bhi.w	90007a50 <HAL_DMA_Abort+0x230>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
9000793c:	682b      	ldr	r3, [r5, #0]
9000793e:	07db      	lsls	r3, r3, #31
90007940:	d4f6      	bmi.n	90007930 <HAL_DMA_Abort+0x110>
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007942:	6823      	ldr	r3, [r4, #0]
90007944:	496a      	ldr	r1, [pc, #424]	@ (90007af0 <HAL_DMA_Abort+0x2d0>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007946:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007948:	428b      	cmp	r3, r1
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
9000794a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000794c:	f002 021f 	and.w	r2, r2, #31
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007950:	d05e      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007952:	3118      	adds	r1, #24
90007954:	428b      	cmp	r3, r1
90007956:	d05b      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007958:	3118      	adds	r1, #24
9000795a:	428b      	cmp	r3, r1
9000795c:	d058      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
9000795e:	3118      	adds	r1, #24
90007960:	428b      	cmp	r3, r1
90007962:	d055      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007964:	3118      	adds	r1, #24
90007966:	428b      	cmp	r3, r1
90007968:	d052      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
9000796a:	3118      	adds	r1, #24
9000796c:	428b      	cmp	r3, r1
9000796e:	d04f      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007970:	3118      	adds	r1, #24
90007972:	428b      	cmp	r3, r1
90007974:	d04c      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007976:	3118      	adds	r1, #24
90007978:	428b      	cmp	r3, r1
9000797a:	d049      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
9000797c:	f501 7156 	add.w	r1, r1, #856	@ 0x358
90007980:	428b      	cmp	r3, r1
90007982:	d045      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007984:	3118      	adds	r1, #24
90007986:	428b      	cmp	r3, r1
90007988:	d042      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
9000798a:	3118      	adds	r1, #24
9000798c:	428b      	cmp	r3, r1
9000798e:	d03f      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007990:	3118      	adds	r1, #24
90007992:	428b      	cmp	r3, r1
90007994:	d03c      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
90007996:	3118      	adds	r1, #24
90007998:	428b      	cmp	r3, r1
9000799a:	d039      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
9000799c:	3118      	adds	r1, #24
9000799e:	428b      	cmp	r3, r1
900079a0:	d036      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
900079a2:	3118      	adds	r1, #24
900079a4:	428b      	cmp	r3, r1
900079a6:	d033      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
900079a8:	3118      	adds	r1, #24
900079aa:	428b      	cmp	r3, r1
900079ac:	d030      	beq.n	90007a10 <HAL_DMA_Abort+0x1f0>
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900079ae:	2101      	movs	r1, #1
900079b0:	4091      	lsls	r1, r2
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900079b2:	4a51      	ldr	r2, [pc, #324]	@ (90007af8 <HAL_DMA_Abort+0x2d8>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900079b4:	6041      	str	r1, [r0, #4]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900079b6:	484f      	ldr	r0, [pc, #316]	@ (90007af4 <HAL_DMA_Abort+0x2d4>)
900079b8:	4950      	ldr	r1, [pc, #320]	@ (90007afc <HAL_DMA_Abort+0x2dc>)
900079ba:	4283      	cmp	r3, r0
900079bc:	bf18      	it	ne
900079be:	4293      	cmpne	r3, r2
900079c0:	f100 003c 	add.w	r0, r0, #60	@ 0x3c
900079c4:	bf0c      	ite	eq
900079c6:	2201      	moveq	r2, #1
900079c8:	2200      	movne	r2, #0
900079ca:	428b      	cmp	r3, r1
900079cc:	bf08      	it	eq
900079ce:	f042 0201 	orreq.w	r2, r2, #1
900079d2:	3128      	adds	r1, #40	@ 0x28
900079d4:	4283      	cmp	r3, r0
900079d6:	bf08      	it	eq
900079d8:	f042 0201 	orreq.w	r2, r2, #1
900079dc:	3028      	adds	r0, #40	@ 0x28
900079de:	428b      	cmp	r3, r1
900079e0:	bf08      	it	eq
900079e2:	f042 0201 	orreq.w	r2, r2, #1
900079e6:	3128      	adds	r1, #40	@ 0x28
900079e8:	4283      	cmp	r3, r0
900079ea:	bf08      	it	eq
900079ec:	f042 0201 	orreq.w	r2, r2, #1
900079f0:	428b      	cmp	r3, r1
900079f2:	bf08      	it	eq
900079f4:	f042 0201 	orreq.w	r2, r2, #1
900079f8:	b96a      	cbnz	r2, 90007a16 <HAL_DMA_Abort+0x1f6>
900079fa:	4a41      	ldr	r2, [pc, #260]	@ (90007b00 <HAL_DMA_Abort+0x2e0>)
900079fc:	4293      	cmp	r3, r2
900079fe:	d00a      	beq.n	90007a16 <HAL_DMA_Abort+0x1f6>
    __HAL_UNLOCK(hdma);
90007a00:	2300      	movs	r3, #0
    hdma->State = HAL_DMA_STATE_READY;
90007a02:	2201      	movs	r2, #1
  return HAL_OK;
90007a04:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
90007a06:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
90007a0a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
90007a0e:	bd70      	pop	{r4, r5, r6, pc}
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90007a10:	233f      	movs	r3, #63	@ 0x3f
90007a12:	4093      	lsls	r3, r2
90007a14:	6083      	str	r3, [r0, #8]
      if(hdma->DMAmuxRequestGen != 0U)
90007a16:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90007a18:	e9d4 2119 	ldrd	r2, r1, [r4, #100]	@ 0x64
90007a1c:	6051      	str	r1, [r2, #4]
      if(hdma->DMAmuxRequestGen != 0U)
90007a1e:	2b00      	cmp	r3, #0
90007a20:	d0ee      	beq.n	90007a00 <HAL_DMA_Abort+0x1e0>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007a22:	681a      	ldr	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90007a24:	e9d4 101c 	ldrd	r1, r0, [r4, #112]	@ 0x70
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007a28:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90007a2c:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90007a2e:	6048      	str	r0, [r1, #4]
90007a30:	e7e6      	b.n	90007a00 <HAL_DMA_Abort+0x1e0>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007a32:	4b34      	ldr	r3, [pc, #208]	@ (90007b04 <HAL_DMA_Abort+0x2e4>)
90007a34:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90007a36:	f022 021e 	bic.w	r2, r2, #30
90007a3a:	641a      	str	r2, [r3, #64]	@ 0x40
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007a3c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
90007a3e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007a42:	655a      	str	r2, [r3, #84]	@ 0x54
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007a44:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007a46:	6813      	ldr	r3, [r2, #0]
90007a48:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007a4c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007a4e:	e76a      	b.n	90007926 <HAL_DMA_Abort+0x106>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90007a50:	2120      	movs	r1, #32
        hdma->State = HAL_DMA_STATE_ERROR;
90007a52:	2203      	movs	r2, #3
        __HAL_UNLOCK(hdma);
90007a54:	2300      	movs	r3, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90007a56:	6561      	str	r1, [r4, #84]	@ 0x54
        __HAL_UNLOCK(hdma);
90007a58:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
90007a5c:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        return HAL_ERROR;
90007a60:	e752      	b.n	90007908 <HAL_DMA_Abort+0xe8>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007a62:	4b28      	ldr	r3, [pc, #160]	@ (90007b04 <HAL_DMA_Abort+0x2e4>)
90007a64:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
90007a68:	f022 021e 	bic.w	r2, r2, #30
90007a6c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007a70:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
90007a74:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007a78:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007a7c:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007a7e:	6813      	ldr	r3, [r2, #0]
90007a80:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007a84:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007a86:	e74e      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007a88:	4b1e      	ldr	r3, [pc, #120]	@ (90007b04 <HAL_DMA_Abort+0x2e4>)
90007a8a:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
90007a8c:	f022 021e 	bic.w	r2, r2, #30
90007a90:	659a      	str	r2, [r3, #88]	@ 0x58
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007a92:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
90007a94:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007a98:	66da      	str	r2, [r3, #108]	@ 0x6c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007a9a:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007a9c:	6813      	ldr	r3, [r2, #0]
90007a9e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007aa2:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007aa4:	e73f      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007aa6:	4b17      	ldr	r3, [pc, #92]	@ (90007b04 <HAL_DMA_Abort+0x2e4>)
90007aa8:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
90007aaa:	f022 021e 	bic.w	r2, r2, #30
90007aae:	671a      	str	r2, [r3, #112]	@ 0x70
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007ab0:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
90007ab4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007ab8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007abc:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007abe:	6813      	ldr	r3, [r2, #0]
90007ac0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007ac4:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007ac6:	e72e      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007ac8:	4b0e      	ldr	r3, [pc, #56]	@ (90007b04 <HAL_DMA_Abort+0x2e4>)
90007aca:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
90007ace:	f022 021e 	bic.w	r2, r2, #30
90007ad2:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007ad6:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
90007ada:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007ade:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007ae2:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007ae4:	6813      	ldr	r3, [r2, #0]
90007ae6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007aea:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007aec:	e71b      	b.n	90007926 <HAL_DMA_Abort+0x106>
90007aee:	bf00      	nop
90007af0:	40020010 	.word	0x40020010
90007af4:	58025408 	.word	0x58025408
90007af8:	5802541c 	.word	0x5802541c
90007afc:	58025430 	.word	0x58025430
90007b00:	58025494 	.word	0x58025494
90007b04:	40020000 	.word	0x40020000
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007b08:	4b1e      	ldr	r3, [pc, #120]	@ (90007b84 <HAL_DMA_Abort+0x364>)
90007b0a:	f8d3 20b8 	ldr.w	r2, [r3, #184]	@ 0xb8
90007b0e:	f022 021e 	bic.w	r2, r2, #30
90007b12:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007b16:	f8d3 20cc 	ldr.w	r2, [r3, #204]	@ 0xcc
90007b1a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007b1e:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007b22:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007b24:	6813      	ldr	r3, [r2, #0]
90007b26:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007b2a:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007b2c:	e6fb      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007b2e:	4b16      	ldr	r3, [pc, #88]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b30:	691a      	ldr	r2, [r3, #16]
90007b32:	f022 021e 	bic.w	r2, r2, #30
90007b36:	611a      	str	r2, [r3, #16]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007b38:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007b3a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007b3e:	625a      	str	r2, [r3, #36]	@ 0x24
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007b40:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007b42:	6813      	ldr	r3, [r2, #0]
90007b44:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007b48:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007b4a:	e6ec      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007b4c:	4b0e      	ldr	r3, [pc, #56]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b4e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90007b50:	f022 021e 	bic.w	r2, r2, #30
90007b54:	629a      	str	r2, [r3, #40]	@ 0x28
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90007b56:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90007b58:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007b5c:	63da      	str	r2, [r3, #60]	@ 0x3c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007b5e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90007b60:	6813      	ldr	r3, [r2, #0]
90007b62:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90007b66:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90007b68:	e6dd      	b.n	90007926 <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90007b6a:	4b07      	ldr	r3, [pc, #28]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b6c:	e762      	b.n	90007a34 <HAL_DMA_Abort+0x214>
90007b6e:	4b06      	ldr	r3, [pc, #24]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b70:	e78b      	b.n	90007a8a <HAL_DMA_Abort+0x26a>
90007b72:	4b05      	ldr	r3, [pc, #20]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b74:	e798      	b.n	90007aa8 <HAL_DMA_Abort+0x288>
90007b76:	4b04      	ldr	r3, [pc, #16]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b78:	e774      	b.n	90007a64 <HAL_DMA_Abort+0x244>
90007b7a:	4b03      	ldr	r3, [pc, #12]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b7c:	e7c5      	b.n	90007b0a <HAL_DMA_Abort+0x2ea>
90007b7e:	4b02      	ldr	r3, [pc, #8]	@ (90007b88 <HAL_DMA_Abort+0x368>)
90007b80:	e7a3      	b.n	90007aca <HAL_DMA_Abort+0x2aa>
90007b82:	bf00      	nop
90007b84:	40020000 	.word	0x40020000
90007b88:	40020400 	.word	0x40020400

90007b8c <HAL_DMA_Abort_IT>:
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
90007b8c:	2800      	cmp	r0, #0
90007b8e:	d062      	beq.n	90007c56 <HAL_DMA_Abort_IT+0xca>
{
90007b90:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
90007b92:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90007b96:	2b02      	cmp	r3, #2
90007b98:	d159      	bne.n	90007c4e <HAL_DMA_Abort_IT+0xc2>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90007b9a:	6802      	ldr	r2, [r0, #0]
90007b9c:	4b57      	ldr	r3, [pc, #348]	@ (90007cfc <HAL_DMA_Abort_IT+0x170>)
90007b9e:	4c58      	ldr	r4, [pc, #352]	@ (90007d00 <HAL_DMA_Abort_IT+0x174>)
90007ba0:	4958      	ldr	r1, [pc, #352]	@ (90007d04 <HAL_DMA_Abort_IT+0x178>)
90007ba2:	42a2      	cmp	r2, r4
90007ba4:	bf18      	it	ne
90007ba6:	429a      	cmpne	r2, r3
90007ba8:	f104 0430 	add.w	r4, r4, #48	@ 0x30
90007bac:	bf0c      	ite	eq
90007bae:	2301      	moveq	r3, #1
90007bb0:	2300      	movne	r3, #0
90007bb2:	428a      	cmp	r2, r1
90007bb4:	bf08      	it	eq
90007bb6:	f043 0301 	orreq.w	r3, r3, #1
90007bba:	3130      	adds	r1, #48	@ 0x30
90007bbc:	42a2      	cmp	r2, r4
90007bbe:	bf08      	it	eq
90007bc0:	f043 0301 	orreq.w	r3, r3, #1
90007bc4:	3430      	adds	r4, #48	@ 0x30
90007bc6:	428a      	cmp	r2, r1
90007bc8:	bf08      	it	eq
90007bca:	f043 0301 	orreq.w	r3, r3, #1
90007bce:	3130      	adds	r1, #48	@ 0x30
90007bd0:	42a2      	cmp	r2, r4
90007bd2:	bf08      	it	eq
90007bd4:	f043 0301 	orreq.w	r3, r3, #1
90007bd8:	3430      	adds	r4, #48	@ 0x30
90007bda:	428a      	cmp	r2, r1
90007bdc:	bf08      	it	eq
90007bde:	f043 0301 	orreq.w	r3, r3, #1
90007be2:	f501 715c 	add.w	r1, r1, #880	@ 0x370
90007be6:	42a2      	cmp	r2, r4
90007be8:	bf08      	it	eq
90007bea:	f043 0301 	orreq.w	r3, r3, #1
90007bee:	f504 745c 	add.w	r4, r4, #880	@ 0x370
90007bf2:	428a      	cmp	r2, r1
90007bf4:	bf08      	it	eq
90007bf6:	f043 0301 	orreq.w	r3, r3, #1
90007bfa:	3130      	adds	r1, #48	@ 0x30
90007bfc:	42a2      	cmp	r2, r4
90007bfe:	bf08      	it	eq
90007c00:	f043 0301 	orreq.w	r3, r3, #1
90007c04:	3430      	adds	r4, #48	@ 0x30
90007c06:	428a      	cmp	r2, r1
90007c08:	bf08      	it	eq
90007c0a:	f043 0301 	orreq.w	r3, r3, #1
90007c0e:	3130      	adds	r1, #48	@ 0x30
90007c10:	42a2      	cmp	r2, r4
90007c12:	bf08      	it	eq
90007c14:	f043 0301 	orreq.w	r3, r3, #1
90007c18:	3430      	adds	r4, #48	@ 0x30
90007c1a:	428a      	cmp	r2, r1
90007c1c:	bf08      	it	eq
90007c1e:	f043 0301 	orreq.w	r3, r3, #1
90007c22:	3130      	adds	r1, #48	@ 0x30
90007c24:	42a2      	cmp	r2, r4
90007c26:	bf08      	it	eq
90007c28:	f043 0301 	orreq.w	r3, r3, #1
90007c2c:	428a      	cmp	r2, r1
90007c2e:	bf08      	it	eq
90007c30:	f043 0301 	orreq.w	r3, r3, #1
90007c34:	b913      	cbnz	r3, 90007c3c <HAL_DMA_Abort_IT+0xb0>
90007c36:	4b34      	ldr	r3, [pc, #208]	@ (90007d08 <HAL_DMA_Abort_IT+0x17c>)
90007c38:	429a      	cmp	r2, r3
90007c3a:	d10e      	bne.n	90007c5a <HAL_DMA_Abort_IT+0xce>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
90007c3c:	2304      	movs	r3, #4
90007c3e:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
90007c42:	6813      	ldr	r3, [r2, #0]
90007c44:	f023 0301 	bic.w	r3, r3, #1
90007c48:	6013      	str	r3, [r2, #0]
        hdma->XferAbortCallback(hdma);
      }
    }
  }

  return HAL_OK;
90007c4a:	2000      	movs	r0, #0
}
90007c4c:	bd38      	pop	{r3, r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90007c4e:	2380      	movs	r3, #128	@ 0x80
90007c50:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
90007c52:	2001      	movs	r0, #1
}
90007c54:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90007c56:	2001      	movs	r0, #1
}
90007c58:	4770      	bx	lr
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c5a:	4b2c      	ldr	r3, [pc, #176]	@ (90007d0c <HAL_DMA_Abort_IT+0x180>)
90007c5c:	4d2c      	ldr	r5, [pc, #176]	@ (90007d10 <HAL_DMA_Abort_IT+0x184>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90007c5e:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c60:	42aa      	cmp	r2, r5
90007c62:	bf18      	it	ne
90007c64:	429a      	cmpne	r2, r3
90007c66:	4c2b      	ldr	r4, [pc, #172]	@ (90007d14 <HAL_DMA_Abort_IT+0x188>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90007c68:	f021 010e 	bic.w	r1, r1, #14
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c6c:	f105 053c 	add.w	r5, r5, #60	@ 0x3c
90007c70:	bf0c      	ite	eq
90007c72:	2301      	moveq	r3, #1
90007c74:	2300      	movne	r3, #0
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90007c76:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c78:	42a2      	cmp	r2, r4
90007c7a:	bf08      	it	eq
90007c7c:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90007c80:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c82:	3428      	adds	r4, #40	@ 0x28
90007c84:	42aa      	cmp	r2, r5
90007c86:	bf08      	it	eq
90007c88:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90007c8c:	f021 0101 	bic.w	r1, r1, #1
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c90:	42a2      	cmp	r2, r4
90007c92:	bf08      	it	eq
90007c94:	f043 0301 	orreq.w	r3, r3, #1
90007c98:	3414      	adds	r4, #20
      __HAL_DMA_DISABLE(hdma);
90007c9a:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90007c9c:	42a2      	cmp	r2, r4
90007c9e:	bf08      	it	eq
90007ca0:	f043 0301 	orreq.w	r3, r3, #1
90007ca4:	491c      	ldr	r1, [pc, #112]	@ (90007d18 <HAL_DMA_Abort_IT+0x18c>)
90007ca6:	428a      	cmp	r2, r1
90007ca8:	bf08      	it	eq
90007caa:	f043 0301 	orreq.w	r3, r3, #1
90007cae:	b913      	cbnz	r3, 90007cb6 <HAL_DMA_Abort_IT+0x12a>
90007cb0:	4b1a      	ldr	r3, [pc, #104]	@ (90007d1c <HAL_DMA_Abort_IT+0x190>)
90007cb2:	429a      	cmp	r2, r3
90007cb4:	d117      	bne.n	90007ce6 <HAL_DMA_Abort_IT+0x15a>
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007cb6:	2301      	movs	r3, #1
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
90007cb8:	6d85      	ldr	r5, [r0, #88]	@ 0x58
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007cba:	e9d0 1417 	ldrd	r1, r4, [r0, #92]	@ 0x5c
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007cbe:	6822      	ldr	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007cc0:	f001 011f 	and.w	r1, r1, #31
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007cc4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007cc8:	408b      	lsls	r3, r1
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007cca:	6022      	str	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007ccc:	606b      	str	r3, [r5, #4]
        if(hdma->DMAmuxRequestGen != 0U)
90007cce:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90007cd0:	e9d0 2119 	ldrd	r2, r1, [r0, #100]	@ 0x64
90007cd4:	6051      	str	r1, [r2, #4]
        if(hdma->DMAmuxRequestGen != 0U)
90007cd6:	b133      	cbz	r3, 90007ce6 <HAL_DMA_Abort_IT+0x15a>
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007cd8:	681a      	ldr	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90007cda:	e9d0 141c 	ldrd	r1, r4, [r0, #112]	@ 0x70
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007cde:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90007ce2:	601a      	str	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90007ce4:	604c      	str	r4, [r1, #4]
      hdma->State = HAL_DMA_STATE_READY;
90007ce6:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma);
90007ce8:	2200      	movs	r2, #0
      if(hdma->XferAbortCallback != NULL)
90007cea:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      hdma->State = HAL_DMA_STATE_READY;
90007cec:	f880 1035 	strb.w	r1, [r0, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
90007cf0:	f880 2034 	strb.w	r2, [r0, #52]	@ 0x34
      if(hdma->XferAbortCallback != NULL)
90007cf4:	2b00      	cmp	r3, #0
90007cf6:	d0a8      	beq.n	90007c4a <HAL_DMA_Abort_IT+0xbe>
        hdma->XferAbortCallback(hdma);
90007cf8:	4798      	blx	r3
90007cfa:	e7a6      	b.n	90007c4a <HAL_DMA_Abort_IT+0xbe>
90007cfc:	40020010 	.word	0x40020010
90007d00:	40020028 	.word	0x40020028
90007d04:	40020040 	.word	0x40020040
90007d08:	400204b8 	.word	0x400204b8
90007d0c:	5802541c 	.word	0x5802541c
90007d10:	58025408 	.word	0x58025408
90007d14:	58025430 	.word	0x58025430
90007d18:	58025480 	.word	0x58025480
90007d1c:	58025494 	.word	0x58025494

90007d20 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007d20:	2800      	cmp	r0, #0
90007d22:	d035      	beq.n	90007d90 <HAL_DMA2D_Init+0x70>
{
90007d24:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007d26:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90007d2a:	4604      	mov	r4, r0
90007d2c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007d30:	b34b      	cbz	r3, 90007d86 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d32:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d34:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d36:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d38:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d3c:	69e1      	ldr	r1, [r4, #28]
90007d3e:	681d      	ldr	r5, [r3, #0]
90007d40:	4814      	ldr	r0, [pc, #80]	@ (90007d94 <HAL_DMA2D_Init+0x74>)
90007d42:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d44:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d46:	4028      	ands	r0, r5
90007d48:	4301      	orrs	r1, r0
90007d4a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d4c:	69a1      	ldr	r1, [r4, #24]
90007d4e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90007d50:	430a      	orrs	r2, r1
90007d52:	4911      	ldr	r1, [pc, #68]	@ (90007d98 <HAL_DMA2D_Init+0x78>)
90007d54:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d56:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d58:	430a      	orrs	r2, r1
90007d5a:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d5c:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90007d5e:	f36f 010f 	bfc	r1, #0, #16
90007d62:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d64:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d68:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d6a:	0552      	lsls	r2, r2, #21
90007d6c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007d6e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
90007d72:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d76:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d78:	430a      	orrs	r2, r1
90007d7a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d7c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d7e:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d80:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90007d84:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007d86:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007d8a:	f7fc f9f1 	bl	90004170 <HAL_DMA2D_MspInit>
90007d8e:	e7d0      	b.n	90007d32 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007d90:	2001      	movs	r0, #1
}
90007d92:	4770      	bx	lr
90007d94:	fff8ffbf 	.word	0xfff8ffbf
90007d98:	fffffef8 	.word	0xfffffef8

90007d9c <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90007d9c:	4770      	bx	lr
90007d9e:	bf00      	nop

90007da0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90007da0:	4770      	bx	lr
90007da2:	bf00      	nop

90007da4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007da4:	6803      	ldr	r3, [r0, #0]
{
90007da6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007da8:	685d      	ldr	r5, [r3, #4]
{
90007daa:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007dac:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007dae:	07ea      	lsls	r2, r5, #31
90007db0:	d501      	bpl.n	90007db6 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90007db2:	05f1      	lsls	r1, r6, #23
90007db4:	d456      	bmi.n	90007e64 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007db6:	06aa      	lsls	r2, r5, #26
90007db8:	d501      	bpl.n	90007dbe <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90007dba:	04b3      	lsls	r3, r6, #18
90007dbc:	d43b      	bmi.n	90007e36 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007dbe:	0728      	lsls	r0, r5, #28
90007dc0:	d501      	bpl.n	90007dc6 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007dc2:	0531      	lsls	r1, r6, #20
90007dc4:	d421      	bmi.n	90007e0a <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007dc6:	076a      	lsls	r2, r5, #29
90007dc8:	d501      	bpl.n	90007dce <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90007dca:	0573      	lsls	r3, r6, #21
90007dcc:	d472      	bmi.n	90007eb4 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007dce:	07a8      	lsls	r0, r5, #30
90007dd0:	d501      	bpl.n	90007dd6 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90007dd2:	05b1      	lsls	r1, r6, #22
90007dd4:	d404      	bmi.n	90007de0 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007dd6:	06ea      	lsls	r2, r5, #27
90007dd8:	d501      	bpl.n	90007dde <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007dda:	04f3      	lsls	r3, r6, #19
90007ddc:	d457      	bmi.n	90007e8e <HAL_DMA2D_IRQHandler+0xea>
}
90007dde:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007de0:	6823      	ldr	r3, [r4, #0]
90007de2:	681a      	ldr	r2, [r3, #0]
90007de4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90007de8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007dea:	2202      	movs	r2, #2
90007dec:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007dee:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007df0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007df2:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007df4:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007df6:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007dfa:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007dfe:	6a23      	ldr	r3, [r4, #32]
90007e00:	2b00      	cmp	r3, #0
90007e02:	d0e8      	beq.n	90007dd6 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007e04:	4620      	mov	r0, r4
90007e06:	4798      	blx	r3
90007e08:	e7e5      	b.n	90007dd6 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007e0a:	6823      	ldr	r3, [r4, #0]
90007e0c:	681a      	ldr	r2, [r3, #0]
90007e0e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90007e12:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007e14:	2208      	movs	r2, #8
90007e16:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e18:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007e1a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007e1c:	4313      	orrs	r3, r2
90007e1e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e20:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e24:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007e28:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e2c:	2b00      	cmp	r3, #0
90007e2e:	d0ca      	beq.n	90007dc6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007e30:	4620      	mov	r0, r4
90007e32:	4798      	blx	r3
90007e34:	e7c7      	b.n	90007dc6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007e36:	6823      	ldr	r3, [r4, #0]
90007e38:	681a      	ldr	r2, [r3, #0]
90007e3a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90007e3e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007e40:	2220      	movs	r2, #32
90007e42:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e44:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007e46:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007e48:	f043 0302 	orr.w	r3, r3, #2
90007e4c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e4e:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e52:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007e56:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e5a:	2b00      	cmp	r3, #0
90007e5c:	d0af      	beq.n	90007dbe <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007e5e:	4620      	mov	r0, r4
90007e60:	4798      	blx	r3
90007e62:	e7ac      	b.n	90007dbe <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007e64:	681a      	ldr	r2, [r3, #0]
90007e66:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90007e6a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007e6c:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90007e6e:	f042 0201 	orr.w	r2, r2, #1
90007e72:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007e74:	2201      	movs	r2, #1
90007e76:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e78:	2304      	movs	r3, #4
90007e7a:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e7e:	2300      	movs	r3, #0
90007e80:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e84:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90007e86:	2b00      	cmp	r3, #0
90007e88:	d095      	beq.n	90007db6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007e8a:	4798      	blx	r3
90007e8c:	e793      	b.n	90007db6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007e8e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007e90:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007e92:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007e94:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007e96:	681a      	ldr	r2, [r3, #0]
90007e98:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90007e9c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007e9e:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007ea0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007ea2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007ea4:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007ea8:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007eaa:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007eae:	f7ff ff77 	bl	90007da0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007eb2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007eb4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007eb6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007eb8:	681a      	ldr	r2, [r3, #0]
90007eba:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007ebe:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007ec0:	2204      	movs	r2, #4
90007ec2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007ec4:	f7ff ff6a 	bl	90007d9c <HAL_DMA2D_LineEventCallback>
90007ec8:	e781      	b.n	90007dce <HAL_DMA2D_IRQHandler+0x2a>
90007eca:	bf00      	nop

90007ecc <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007ecc:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007ed0:	2a01      	cmp	r2, #1
90007ed2:	d05f      	beq.n	90007f94 <HAL_DMA2D_ConfigLayer+0xc8>
90007ed4:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ed6:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007eda:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007edc:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90007ee0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007ee4:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90007ee6:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007ee8:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007eec:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007ef0:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ef2:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90007ef4:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007ef6:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007ef8:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007efa:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007efe:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007f02:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007f04:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f06:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007f0a:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f0e:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f10:	d923      	bls.n	90007f5a <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90007f12:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f16:	b971      	cbnz	r1, 90007f36 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f18:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007f1a:	491f      	ldr	r1, [pc, #124]	@ (90007f98 <HAL_DMA2D_ConfigLayer+0xcc>)
90007f1c:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f1e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f20:	4311      	orrs	r1, r2
90007f22:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f24:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007f26:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f28:	2101      	movs	r1, #1

  return HAL_OK;
90007f2a:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f2c:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90007f30:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90007f34:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007f36:	2d0b      	cmp	r5, #11
90007f38:	d12a      	bne.n	90007f90 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007f3a:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007f3c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90007f40:	4816      	ldr	r0, [pc, #88]	@ (90007f9c <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f42:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f46:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f48:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f4c:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f4e:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f52:	430a      	orrs	r2, r1
90007f54:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f56:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f58:	e7e5      	b.n	90007f26 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007f5a:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90007f5e:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f60:	b959      	cbnz	r1, 90007f7a <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f62:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007f64:	490c      	ldr	r1, [pc, #48]	@ (90007f98 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f66:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f68:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f6a:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f6c:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f6e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f72:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f74:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f76:	62a0      	str	r0, [r4, #40]	@ 0x28
90007f78:	e7d5      	b.n	90007f26 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f7a:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f7c:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f80:	4905      	ldr	r1, [pc, #20]	@ (90007f98 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f82:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f84:	4029      	ands	r1, r5
90007f86:	4311      	orrs	r1, r2
90007f88:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f8a:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f8c:	6226      	str	r6, [r4, #32]
90007f8e:	e7ca      	b.n	90007f26 <HAL_DMA2D_ConfigLayer+0x5a>
90007f90:	4801      	ldr	r0, [pc, #4]	@ (90007f98 <HAL_DMA2D_ConfigLayer+0xcc>)
90007f92:	e7d6      	b.n	90007f42 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007f94:	2002      	movs	r0, #2
}
90007f96:	4770      	bx	lr
90007f98:	00ccfff0 	.word	0x00ccfff0
90007f9c:	00c0fff0 	.word	0x00c0fff0

90007fa0 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007fa0:	680b      	ldr	r3, [r1, #0]
90007fa2:	2b00      	cmp	r3, #0
90007fa4:	f000 81dc 	beq.w	90008360 <HAL_GPIO_Init+0x3c0>
90007fa8:	4ab4      	ldr	r2, [pc, #720]	@ (9000827c <HAL_GPIO_Init+0x2dc>)
90007faa:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
90007fac:	f04f 0200 	mov.w	r2, #0
{
90007fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007fb4:	f04f 0b01 	mov.w	fp, #1
{
90007fb8:	b085      	sub	sp, #20
90007fba:	f000 8105 	beq.w	900081c8 <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007fbe:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007fc2:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007fc4:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
90007fc8:	9b00      	ldr	r3, [sp, #0]
90007fca:	ea1c 0a03 	ands.w	sl, ip, r3
90007fce:	f000 814b 	beq.w	90008268 <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fd2:	684d      	ldr	r5, [r1, #4]
90007fd4:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fd6:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fd8:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fdc:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fe0:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fe4:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fe6:	f1b8 0f01 	cmp.w	r8, #1
90007fea:	f240 815d 	bls.w	900082a8 <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007fee:	2f03      	cmp	r7, #3
90007ff0:	f040 81cf 	bne.w	90008392 <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007ff4:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
90007ff8:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007ffa:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007ffe:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008002:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
90008006:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008008:	f000 812e 	beq.w	90008268 <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000800c:	4e9c      	ldr	r6, [pc, #624]	@ (90008280 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000800e:	f002 0703 	and.w	r7, r2, #3
90008012:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008014:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008018:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000801a:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000801e:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008022:	4b98      	ldr	r3, [pc, #608]	@ (90008284 <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008024:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
90008028:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
9000802c:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008030:	4298      	cmp	r0, r3
90008032:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008036:	f004 0402 	and.w	r4, r4, #2
9000803a:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000803e:	9403      	str	r4, [sp, #12]
90008040:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008042:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008044:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008048:	f000 8178 	beq.w	9000833c <HAL_GPIO_Init+0x39c>
9000804c:	4b8e      	ldr	r3, [pc, #568]	@ (90008288 <HAL_GPIO_Init+0x2e8>)
9000804e:	4298      	cmp	r0, r3
90008050:	f000 80de 	beq.w	90008210 <HAL_GPIO_Init+0x270>
90008054:	f8df c234 	ldr.w	ip, [pc, #564]	@ 9000828c <HAL_GPIO_Init+0x2ec>
90008058:	4560      	cmp	r0, ip
9000805a:	f000 817b 	beq.w	90008354 <HAL_GPIO_Init+0x3b4>
9000805e:	f8df c230 	ldr.w	ip, [pc, #560]	@ 90008290 <HAL_GPIO_Init+0x2f0>
90008062:	4560      	cmp	r0, ip
90008064:	f000 817d 	beq.w	90008362 <HAL_GPIO_Init+0x3c2>
90008068:	f8df c228 	ldr.w	ip, [pc, #552]	@ 90008294 <HAL_GPIO_Init+0x2f4>
9000806c:	4560      	cmp	r0, ip
9000806e:	f000 816b 	beq.w	90008348 <HAL_GPIO_Init+0x3a8>
90008072:	f8df c224 	ldr.w	ip, [pc, #548]	@ 90008298 <HAL_GPIO_Init+0x2f8>
90008076:	4560      	cmp	r0, ip
90008078:	f000 8179 	beq.w	9000836e <HAL_GPIO_Init+0x3ce>
9000807c:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 9000829c <HAL_GPIO_Init+0x2fc>
90008080:	4560      	cmp	r0, ip
90008082:	f000 817a 	beq.w	9000837a <HAL_GPIO_Init+0x3da>
90008086:	f8df c218 	ldr.w	ip, [pc, #536]	@ 900082a0 <HAL_GPIO_Init+0x300>
9000808a:	4560      	cmp	r0, ip
9000808c:	f000 817b 	beq.w	90008386 <HAL_GPIO_Init+0x3e6>
90008090:	f8df c210 	ldr.w	ip, [pc, #528]	@ 900082a4 <HAL_GPIO_Init+0x304>
90008094:	4560      	cmp	r0, ip
90008096:	bf0c      	ite	eq
90008098:	f04f 0c09 	moveq.w	ip, #9
9000809c:	f04f 0c0a 	movne.w	ip, #10
900080a0:	fa0c f707 	lsl.w	r7, ip, r7
900080a4:	433c      	orrs	r4, r7
900080a6:	e0b8      	b.n	9000821a <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
900080a8:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900080ac:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900080ae:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900080b0:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
900080b4:	fa06 f807 	lsl.w	r8, r6, r7
900080b8:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
900080bc:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900080c0:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900080c4:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900080c8:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900080cc:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900080d0:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
900080d4:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
900080d8:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900080dc:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900080de:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900080e2:	fa06 fe07 	lsl.w	lr, r6, r7
900080e6:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
900080ea:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900080ee:	d117      	bne.n	90008120 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900080f0:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900080f4:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900080f6:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900080fa:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
900080fe:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008102:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
90008106:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000810a:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000810c:	260f      	movs	r6, #15
9000810e:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008112:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008114:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008118:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
9000811c:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008120:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
90008122:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008124:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008128:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000812c:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
90008130:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008132:	d045      	beq.n	900081c0 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008134:	4f52      	ldr	r7, [pc, #328]	@ (90008280 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008136:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008138:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
9000813c:	f044 0402 	orr.w	r4, r4, #2
90008140:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
90008144:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90008148:	f022 0703 	bic.w	r7, r2, #3
9000814c:	f004 0402 	and.w	r4, r4, #2
90008150:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
90008154:	9403      	str	r4, [sp, #12]
90008156:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
9000815a:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000815c:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
90008160:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008164:	00a4      	lsls	r4, r4, #2
90008166:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000816a:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000816c:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
90008170:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
90008172:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
90008176:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
9000817a:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000817c:	f100 80d2 	bmi.w	90008324 <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
90008180:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90008182:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90008186:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
90008188:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000818a:	02ae      	lsls	r6, r5, #10
9000818c:	f100 80d3 	bmi.w	90008336 <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
90008190:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90008192:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90008196:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
90008198:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000819c:	03ae      	lsls	r6, r5, #14
9000819e:	f100 80c7 	bmi.w	90008330 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
900081a2:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900081a4:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900081a8:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900081aa:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900081ae:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900081b2:	f100 80ba 	bmi.w	9000832a <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
900081b6:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
900081b8:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
900081bc:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
900081c0:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900081c2:	fa33 f402 	lsrs.w	r4, r3, r2
900081c6:	d055      	beq.n	90008274 <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900081c8:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
900081cc:	ea13 0c0e 	ands.w	ip, r3, lr
900081d0:	d0f6      	beq.n	900081c0 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900081d2:	684d      	ldr	r5, [r1, #4]
900081d4:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900081d6:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900081d8:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900081dc:	fa06 f807 	lsl.w	r8, r6, r7
900081e0:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900081e4:	f104 38ff 	add.w	r8, r4, #4294967295
900081e8:	f1b8 0f01 	cmp.w	r8, #1
900081ec:	f67f af5c 	bls.w	900080a8 <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900081f0:	2c03      	cmp	r4, #3
900081f2:	d095      	beq.n	90008120 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
900081f4:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 9000827c <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900081f8:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
900081fa:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900081fe:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008202:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008206:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
9000820a:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000820e:	e787      	b.n	90008120 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008210:	f04f 0c02 	mov.w	ip, #2
90008214:	fa0c f707 	lsl.w	r7, ip, r7
90008218:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
9000821a:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000821c:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
9000821e:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
90008222:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
90008226:	bf4c      	ite	mi
90008228:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
9000822c:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000822e:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
90008230:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
90008234:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
90008238:	bf54      	ite	pl
9000823a:	4034      	andpl	r4, r6
          temp |= iocurrent;
9000823c:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008240:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90008242:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90008246:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
9000824a:	bf54      	ite	pl
9000824c:	4034      	andpl	r4, r6
          temp |= iocurrent;
9000824e:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008252:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90008254:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008258:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
9000825c:	bf54      	ite	pl
9000825e:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008260:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
90008264:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
90008268:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000826a:	9b00      	ldr	r3, [sp, #0]
9000826c:	fa33 f402 	lsrs.w	r4, r3, r2
90008270:	f47f aea8 	bne.w	90007fc4 <HAL_GPIO_Init+0x24>
  }
}
90008274:	b005      	add	sp, #20
90008276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000827a:	bf00      	nop
9000827c:	58020000 	.word	0x58020000
90008280:	58024400 	.word	0x58024400
90008284:	58020400 	.word	0x58020400
90008288:	58020800 	.word	0x58020800
9000828c:	58020c00 	.word	0x58020c00
90008290:	58021000 	.word	0x58021000
90008294:	58021400 	.word	0x58021400
90008298:	58021800 	.word	0x58021800
9000829c:	58021c00 	.word	0x58021c00
900082a0:	58022000 	.word	0x58022000
900082a4:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
900082a8:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900082ac:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900082ae:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900082b0:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900082b4:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900082b8:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
900082ba:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
900082be:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900082c2:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900082c6:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900082ca:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900082ce:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900082d2:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
900082d6:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900082da:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
900082de:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900082e2:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900082e6:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900082ea:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900082ee:	f47f ae81 	bne.w	90007ff4 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900082f2:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900082f6:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900082f8:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900082fc:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
90008300:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008304:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
90008308:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000830c:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000830e:	230f      	movs	r3, #15
90008310:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008314:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008316:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000831a:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
9000831e:	f8c8 c020 	str.w	ip, [r8, #32]
90008322:	e667      	b.n	90007ff4 <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
90008324:	ea44 040c 	orr.w	r4, r4, ip
90008328:	e72b      	b.n	90008182 <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
9000832a:	ea44 040c 	orr.w	r4, r4, ip
9000832e:	e743      	b.n	900081b8 <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
90008330:	ea4c 0404 	orr.w	r4, ip, r4
90008334:	e736      	b.n	900081a4 <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
90008336:	ea44 040c 	orr.w	r4, r4, ip
9000833a:	e72a      	b.n	90008192 <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000833c:	f04f 0c01 	mov.w	ip, #1
90008340:	fa0c f707 	lsl.w	r7, ip, r7
90008344:	433c      	orrs	r4, r7
90008346:	e768      	b.n	9000821a <HAL_GPIO_Init+0x27a>
90008348:	f04f 0c05 	mov.w	ip, #5
9000834c:	fa0c f707 	lsl.w	r7, ip, r7
90008350:	433c      	orrs	r4, r7
90008352:	e762      	b.n	9000821a <HAL_GPIO_Init+0x27a>
90008354:	f04f 0c03 	mov.w	ip, #3
90008358:	fa0c f707 	lsl.w	r7, ip, r7
9000835c:	433c      	orrs	r4, r7
9000835e:	e75c      	b.n	9000821a <HAL_GPIO_Init+0x27a>
90008360:	4770      	bx	lr
90008362:	f04f 0c04 	mov.w	ip, #4
90008366:	fa0c f707 	lsl.w	r7, ip, r7
9000836a:	433c      	orrs	r4, r7
9000836c:	e755      	b.n	9000821a <HAL_GPIO_Init+0x27a>
9000836e:	f04f 0c06 	mov.w	ip, #6
90008372:	fa0c f707 	lsl.w	r7, ip, r7
90008376:	433c      	orrs	r4, r7
90008378:	e74f      	b.n	9000821a <HAL_GPIO_Init+0x27a>
9000837a:	f04f 0c07 	mov.w	ip, #7
9000837e:	fa0c f707 	lsl.w	r7, ip, r7
90008382:	433c      	orrs	r4, r7
90008384:	e749      	b.n	9000821a <HAL_GPIO_Init+0x27a>
90008386:	f04f 0c08 	mov.w	ip, #8
9000838a:	fa0c f707 	lsl.w	r7, ip, r7
9000838e:	433c      	orrs	r4, r7
90008390:	e743      	b.n	9000821a <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
90008392:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008396:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008398:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000839c:	fa03 fc04 	lsl.w	ip, r3, r4
900083a0:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900083a4:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900083a8:	e624      	b.n	90007ff4 <HAL_GPIO_Init+0x54>
900083aa:	bf00      	nop

900083ac <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900083ac:	2900      	cmp	r1, #0
900083ae:	f000 810c 	beq.w	900085ca <HAL_GPIO_DeInit+0x21e>
900083b2:	4b8b      	ldr	r3, [pc, #556]	@ (900085e0 <HAL_GPIO_DeInit+0x234>)
900083b4:	4298      	cmp	r0, r3
{
900083b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900083ba:	f000 809a 	beq.w	900084f2 <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
900083be:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083c0:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900083c4:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900083c8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
900083cc:	2201      	movs	r2, #1
900083ce:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
900083d0:	ea12 0e01 	ands.w	lr, r2, r1
900083d4:	d077      	beq.n	900084c6 <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
900083d6:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083da:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900083de:	4f81      	ldr	r7, [pc, #516]	@ (900085e4 <HAL_GPIO_DeInit+0x238>)
900083e0:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083e4:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900083e6:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083e8:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
900083ec:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083f0:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
900083f4:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900083f8:	d027      	beq.n	9000844a <HAL_GPIO_DeInit+0x9e>
900083fa:	4f7b      	ldr	r7, [pc, #492]	@ (900085e8 <HAL_GPIO_DeInit+0x23c>)
900083fc:	42b8      	cmp	r0, r7
900083fe:	d06e      	beq.n	900084de <HAL_GPIO_DeInit+0x132>
90008400:	4f7a      	ldr	r7, [pc, #488]	@ (900085ec <HAL_GPIO_DeInit+0x240>)
90008402:	42b8      	cmp	r0, r7
90008404:	d070      	beq.n	900084e8 <HAL_GPIO_DeInit+0x13c>
90008406:	4f7a      	ldr	r7, [pc, #488]	@ (900085f0 <HAL_GPIO_DeInit+0x244>)
90008408:	42b8      	cmp	r0, r7
9000840a:	d063      	beq.n	900084d4 <HAL_GPIO_DeInit+0x128>
9000840c:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 900085f8 <HAL_GPIO_DeInit+0x24c>
90008410:	4558      	cmp	r0, fp
90008412:	f000 80d5 	beq.w	900085c0 <HAL_GPIO_DeInit+0x214>
90008416:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 900085fc <HAL_GPIO_DeInit+0x250>
9000841a:	4558      	cmp	r0, fp
9000841c:	f000 80d6 	beq.w	900085cc <HAL_GPIO_DeInit+0x220>
90008420:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 90008600 <HAL_GPIO_DeInit+0x254>
90008424:	4558      	cmp	r0, fp
90008426:	f000 80c6 	beq.w	900085b6 <HAL_GPIO_DeInit+0x20a>
9000842a:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90008604 <HAL_GPIO_DeInit+0x258>
9000842e:	4558      	cmp	r0, fp
90008430:	f000 80d1 	beq.w	900085d6 <HAL_GPIO_DeInit+0x22a>
90008434:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 90008608 <HAL_GPIO_DeInit+0x25c>
90008438:	4558      	cmp	r0, fp
9000843a:	bf0c      	ite	eq
9000843c:	f04f 0b09 	moveq.w	fp, #9
90008440:	f04f 0b0a 	movne.w	fp, #10
90008444:	fa0b f404 	lsl.w	r4, fp, r4
90008448:	e002      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
9000844a:	2701      	movs	r7, #1
9000844c:	fa07 f404 	lsl.w	r4, r7, r4
90008450:	45a4      	cmp	ip, r4
90008452:	d117      	bne.n	90008484 <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008454:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
90008458:	ea24 040e 	bic.w	r4, r4, lr
9000845c:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008460:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
90008464:	ea24 040e 	bic.w	r4, r4, lr
90008468:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
9000846c:	6874      	ldr	r4, [r6, #4]
9000846e:	ea24 040e 	bic.w	r4, r4, lr
90008472:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008474:	6834      	ldr	r4, [r6, #0]
90008476:	ea24 040e 	bic.w	r4, r4, lr
9000847a:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000847c:	68ac      	ldr	r4, [r5, #8]
9000847e:	ea24 0408 	bic.w	r4, r4, r8
90008482:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008484:	005d      	lsls	r5, r3, #1
90008486:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008488:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000848c:	fa0a f505 	lsl.w	r5, sl, r5
90008490:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
90008494:	432c      	orrs	r4, r5
90008496:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008498:	f003 0407 	and.w	r4, r3, #7
9000849c:	f8dc e020 	ldr.w	lr, [ip, #32]
900084a0:	00a4      	lsls	r4, r4, #2
900084a2:	fa09 f404 	lsl.w	r4, r9, r4
900084a6:	ea2e 0404 	bic.w	r4, lr, r4
900084aa:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900084ae:	68c4      	ldr	r4, [r0, #12]
900084b0:	ea24 0405 	bic.w	r4, r4, r5
900084b4:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900084b6:	6844      	ldr	r4, [r0, #4]
900084b8:	ea24 0202 	bic.w	r2, r4, r2
900084bc:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900084be:	6882      	ldr	r2, [r0, #8]
900084c0:	ea22 0205 	bic.w	r2, r2, r5
900084c4:	6082      	str	r2, [r0, #8]
    }

    position++;
900084c6:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900084c8:	fa31 f203 	lsrs.w	r2, r1, r3
900084cc:	f47f af7e 	bne.w	900083cc <HAL_GPIO_DeInit+0x20>
  }
}
900084d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900084d4:	f04f 0b04 	mov.w	fp, #4
900084d8:	fa0b f404 	lsl.w	r4, fp, r4
900084dc:	e7b8      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900084de:	f04f 0b02 	mov.w	fp, #2
900084e2:	fa0b f404 	lsl.w	r4, fp, r4
900084e6:	e7b3      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900084e8:	f04f 0b03 	mov.w	fp, #3
900084ec:	fa0b f404 	lsl.w	r4, fp, r4
900084f0:	e7ae      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
900084f2:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
900084f4:	f04f 0c01 	mov.w	ip, #1
900084f8:	4f3e      	ldr	r7, [pc, #248]	@ (900085f4 <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900084fa:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900084fc:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008500:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008504:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90008508:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
9000850c:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008510:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
90008512:	ea11 0904 	ands.w	r9, r1, r4
90008516:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008518:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
9000851c:	d045      	beq.n	900085aa <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000851e:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008522:	ea13 0f0a 	tst.w	r3, sl
90008526:	d11d      	bne.n	90008564 <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008528:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
9000852c:	ea2a 0a09 	bic.w	sl, sl, r9
90008530:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008534:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
90008538:	ea2a 0a09 	bic.w	sl, sl, r9
9000853c:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90008540:	f8d6 a004 	ldr.w	sl, [r6, #4]
90008544:	ea2a 0a09 	bic.w	sl, sl, r9
90008548:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000854c:	f8d6 a000 	ldr.w	sl, [r6]
90008550:	ea2a 0909 	bic.w	r9, sl, r9
90008554:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90008558:	f8d8 9008 	ldr.w	r9, [r8, #8]
9000855c:	ea29 0303 	bic.w	r3, r9, r3
90008560:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008564:	ea4f 0842 	mov.w	r8, r2, lsl #1
90008568:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000856a:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000856e:	fa0e f808 	lsl.w	r8, lr, r8
90008572:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90008576:	ea43 0308 	orr.w	r3, r3, r8
9000857a:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000857c:	f002 0307 	and.w	r3, r2, #7
90008580:	f8d9 a020 	ldr.w	sl, [r9, #32]
90008584:	009b      	lsls	r3, r3, #2
90008586:	fa05 f303 	lsl.w	r3, r5, r3
9000858a:	ea2a 0303 	bic.w	r3, sl, r3
9000858e:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008592:	68c3      	ldr	r3, [r0, #12]
90008594:	ea23 0308 	bic.w	r3, r3, r8
90008598:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000859a:	6843      	ldr	r3, [r0, #4]
9000859c:	ea23 0304 	bic.w	r3, r3, r4
900085a0:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900085a2:	6883      	ldr	r3, [r0, #8]
900085a4:	ea23 0308 	bic.w	r3, r3, r8
900085a8:	6083      	str	r3, [r0, #8]
    position++;
900085aa:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
900085ac:	fa31 f302 	lsrs.w	r3, r1, r2
900085b0:	d1a8      	bne.n	90008504 <HAL_GPIO_DeInit+0x158>
}
900085b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900085b6:	f04f 0b07 	mov.w	fp, #7
900085ba:	fa0b f404 	lsl.w	r4, fp, r4
900085be:	e747      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900085c0:	f04f 0b05 	mov.w	fp, #5
900085c4:	fa0b f404 	lsl.w	r4, fp, r4
900085c8:	e742      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900085ca:	4770      	bx	lr
900085cc:	f04f 0b06 	mov.w	fp, #6
900085d0:	fa0b f404 	lsl.w	r4, fp, r4
900085d4:	e73c      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900085d6:	f04f 0b08 	mov.w	fp, #8
900085da:	fa0b f404 	lsl.w	r4, fp, r4
900085de:	e737      	b.n	90008450 <HAL_GPIO_DeInit+0xa4>
900085e0:	58020000 	.word	0x58020000
900085e4:	58020400 	.word	0x58020400
900085e8:	58020800 	.word	0x58020800
900085ec:	58020c00 	.word	0x58020c00
900085f0:	58021000 	.word	0x58021000
900085f4:	58000400 	.word	0x58000400
900085f8:	58021400 	.word	0x58021400
900085fc:	58021800 	.word	0x58021800
90008600:	58021c00 	.word	0x58021c00
90008604:	58022000 	.word	0x58022000
90008608:	58022400 	.word	0x58022400

9000860c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000860c:	6903      	ldr	r3, [r0, #16]
9000860e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90008610:	bf14      	ite	ne
90008612:	2001      	movne	r0, #1
90008614:	2000      	moveq	r0, #0
90008616:	4770      	bx	lr

90008618 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008618:	b902      	cbnz	r2, 9000861c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000861a:	0409      	lsls	r1, r1, #16
9000861c:	6181      	str	r1, [r0, #24]
  }
}
9000861e:	4770      	bx	lr

90008620 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90008620:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90008622:	ea01 0203 	and.w	r2, r1, r3
90008626:	ea21 0103 	bic.w	r1, r1, r3
9000862a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000862e:	6181      	str	r1, [r0, #24]
}
90008630:	4770      	bx	lr
90008632:	bf00      	nop

90008634 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008634:	6803      	ldr	r3, [r0, #0]
90008636:	699a      	ldr	r2, [r3, #24]
90008638:	0412      	lsls	r2, r2, #16
9000863a:	f140 8097 	bpl.w	9000876c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
9000863e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008642:	4604      	mov	r4, r0
90008644:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008646:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008648:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000864a:	f012 0810 	ands.w	r8, r2, #16
9000864e:	d07f      	beq.n	90008750 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90008650:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008652:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008654:	699a      	ldr	r2, [r3, #24]
90008656:	f012 0820 	ands.w	r8, r2, #32
9000865a:	d17b      	bne.n	90008754 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000865c:	f7fe ffa2 	bl	900075a4 <HAL_GetTick>
90008660:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008662:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008664:	2819      	cmp	r0, #25
90008666:	d83d      	bhi.n	900086e4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008668:	699a      	ldr	r2, [r3, #24]
9000866a:	0690      	lsls	r0, r2, #26
9000866c:	d5f6      	bpl.n	9000865c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000866e:	2220      	movs	r2, #32
90008670:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008672:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90008676:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008678:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000867a:	05d1      	lsls	r1, r2, #23
9000867c:	d552      	bpl.n	90008724 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000867e:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008682:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008684:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008688:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000868a:	d504      	bpl.n	90008696 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000868c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008690:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008694:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008696:	0591      	lsls	r1, r2, #22
90008698:	d504      	bpl.n	900086a4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000869a:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000869e:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900086a2:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900086a4:	699a      	ldr	r2, [r3, #24]
900086a6:	0795      	lsls	r5, r2, #30
900086a8:	d501      	bpl.n	900086ae <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
900086aa:	2200      	movs	r2, #0
900086ac:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900086ae:	699a      	ldr	r2, [r3, #24]
900086b0:	07d0      	lsls	r0, r2, #31
900086b2:	d403      	bmi.n	900086bc <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900086b4:	699a      	ldr	r2, [r3, #24]
900086b6:	f042 0201 	orr.w	r2, r2, #1
900086ba:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
900086bc:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
900086be:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900086c0:	4d2b      	ldr	r5, [pc, #172]	@ (90008770 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900086c2:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900086c4:	402a      	ands	r2, r5
900086c6:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900086c8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900086ca:	ea43 0308 	orr.w	r3, r3, r8
900086ce:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900086d0:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900086d4:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
900086d8:	2300      	movs	r3, #0
      return HAL_ERROR;
900086da:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
900086dc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
900086e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900086e4:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900086e6:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900086ea:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900086ec:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900086ee:	0409      	lsls	r1, r1, #16
900086f0:	d50b      	bpl.n	9000870a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
900086f2:	0441      	lsls	r1, r0, #17
900086f4:	d409      	bmi.n	9000870a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
900086f6:	2a20      	cmp	r2, #32
900086f8:	d007      	beq.n	9000870a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900086fa:	685a      	ldr	r2, [r3, #4]
900086fc:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008700:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008702:	f7fe ff4f 	bl	900075a4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008706:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90008708:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000870a:	699a      	ldr	r2, [r3, #24]
9000870c:	0690      	lsls	r0, r2, #26
9000870e:	d4a1      	bmi.n	90008654 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008710:	f7fe ff48 	bl	900075a4 <HAL_GetTick>
90008714:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008716:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008718:	2819      	cmp	r0, #25
9000871a:	d9f6      	bls.n	9000870a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000871c:	f04f 0820 	mov.w	r8, #32
90008720:	699a      	ldr	r2, [r3, #24]
90008722:	e7a6      	b.n	90008672 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008724:	0550      	lsls	r0, r2, #21
90008726:	d4b1      	bmi.n	9000868c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008728:	0592      	lsls	r2, r2, #22
9000872a:	d4b6      	bmi.n	9000869a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
9000872c:	2d00      	cmp	r5, #0
9000872e:	d1b9      	bne.n	900086a4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008730:	f7fe ff38 	bl	900075a4 <HAL_GetTick>
90008734:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008736:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008738:	2819      	cmp	r0, #25
9000873a:	d902      	bls.n	90008742 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000873c:	699a      	ldr	r2, [r3, #24]
9000873e:	0411      	lsls	r1, r2, #16
90008740:	d40b      	bmi.n	9000875a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008742:	699a      	ldr	r2, [r3, #24]
90008744:	0412      	lsls	r2, r2, #16
90008746:	f53f af7f 	bmi.w	90008648 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
9000874a:	2000      	movs	r0, #0
}
9000874c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008750:	4645      	mov	r5, r8
90008752:	e791      	b.n	90008678 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90008754:	f04f 0800 	mov.w	r8, #0
90008758:	e789      	b.n	9000866e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000875a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000875c:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000875e:	4313      	orrs	r3, r2
90008760:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008762:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008766:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000876a:	e7b5      	b.n	900086d8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
9000876c:	2000      	movs	r0, #0
}
9000876e:	4770      	bx	lr
90008770:	fe00e800 	.word	0xfe00e800

90008774 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90008774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008778:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000877a:	2710      	movs	r7, #16
{
9000877c:	4605      	mov	r5, r0
9000877e:	460e      	mov	r6, r1
90008780:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008782:	699a      	ldr	r2, [r3, #24]
90008784:	f012 0202 	ands.w	r2, r2, #2
90008788:	d168      	bne.n	9000885c <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
9000878a:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000878c:	f011 0c10 	ands.w	ip, r1, #16
90008790:	d062      	beq.n	90008858 <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008792:	1c74      	adds	r4, r6, #1
90008794:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008796:	d166      	bne.n	90008866 <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90008798:	699c      	ldr	r4, [r3, #24]
9000879a:	f014 0420 	ands.w	r4, r4, #32
9000879e:	d160      	bne.n	90008862 <I2C_WaitOnTXISFlagUntilTimeout+0xee>
900087a0:	699a      	ldr	r2, [r3, #24]
900087a2:	0691      	lsls	r1, r2, #26
900087a4:	d5fc      	bpl.n	900087a0 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900087a6:	2220      	movs	r2, #32
900087a8:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900087aa:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900087ae:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900087b0:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900087b2:	05d0      	lsls	r0, r2, #23
900087b4:	d532      	bpl.n	9000881c <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900087b6:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900087ba:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900087bc:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900087c0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900087c2:	d504      	bpl.n	900087ce <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900087c4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900087c8:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900087cc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900087ce:	0596      	lsls	r6, r2, #22
900087d0:	d504      	bpl.n	900087dc <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900087d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900087d6:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900087da:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900087dc:	699a      	ldr	r2, [r3, #24]
900087de:	0790      	lsls	r0, r2, #30
900087e0:	d501      	bpl.n	900087e6 <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
900087e2:	2200      	movs	r2, #0
900087e4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900087e6:	699a      	ldr	r2, [r3, #24]
900087e8:	07d1      	lsls	r1, r2, #31
900087ea:	d403      	bmi.n	900087f4 <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900087ec:	699a      	ldr	r2, [r3, #24]
900087ee:	f042 0201 	orr.w	r2, r2, #1
900087f2:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900087f4:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900087f6:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900087f8:	4c38      	ldr	r4, [pc, #224]	@ (900088dc <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900087fa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900087fc:	4022      	ands	r2, r4
900087fe:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008800:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008802:	ea43 030c 	orr.w	r3, r3, ip
90008806:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008808:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000880c:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008810:	2300      	movs	r3, #0
      return HAL_ERROR;
90008812:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008814:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000881c:	0550      	lsls	r0, r2, #21
9000881e:	d4d1      	bmi.n	900087c4 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008820:	0594      	lsls	r4, r2, #22
90008822:	d4d6      	bmi.n	900087d2 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90008824:	2900      	cmp	r1, #0
90008826:	d1d9      	bne.n	900087dc <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90008828:	1c72      	adds	r2, r6, #1
9000882a:	d0aa      	beq.n	90008782 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000882c:	f7fe feba 	bl	900075a4 <HAL_GetTick>
90008830:	eba0 0308 	sub.w	r3, r0, r8
90008834:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008836:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008838:	d801      	bhi.n	9000883e <I2C_WaitOnTXISFlagUntilTimeout+0xca>
9000883a:	2e00      	cmp	r6, #0
9000883c:	d1a1      	bne.n	90008782 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000883e:	699a      	ldr	r2, [r3, #24]
90008840:	f012 0202 	ands.w	r2, r2, #2
90008844:	d19d      	bne.n	90008782 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008846:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008848:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000884a:	430b      	orrs	r3, r1
9000884c:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000884e:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008852:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90008856:	e7db      	b.n	90008810 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90008858:	4661      	mov	r1, ip
9000885a:	e7a9      	b.n	900087b0 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
9000885c:	2000      	movs	r0, #0
}
9000885e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008862:	4614      	mov	r4, r2
90008864:	e79f      	b.n	900087a6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008866:	4614      	mov	r4, r2
90008868:	46c1      	mov	r9, r8
9000886a:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000886c:	699a      	ldr	r2, [r3, #24]
9000886e:	0692      	lsls	r2, r2, #26
90008870:	d40e      	bmi.n	90008890 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90008872:	f1ba 0f00 	cmp.w	sl, #0
90008876:	d198      	bne.n	900087aa <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008878:	f7fe fe94 	bl	900075a4 <HAL_GetTick>
9000887c:	eba0 0309 	sub.w	r3, r0, r9
90008880:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008882:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008884:	d308      	bcc.n	90008898 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90008886:	b13e      	cbz	r6, 90008898 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008888:	699a      	ldr	r2, [r3, #24]
9000888a:	0690      	lsls	r0, r2, #26
9000888c:	d5f4      	bpl.n	90008878 <I2C_WaitOnTXISFlagUntilTimeout+0x104>
9000888e:	e78a      	b.n	900087a6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008890:	f1ba 0f00 	cmp.w	sl, #0
90008894:	d189      	bne.n	900087aa <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90008896:	e786      	b.n	900087a6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008898:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000889a:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000889e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900088a0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900088a2:	0409      	lsls	r1, r1, #16
900088a4:	d50b      	bpl.n	900088be <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
900088a6:	0441      	lsls	r1, r0, #17
900088a8:	d409      	bmi.n	900088be <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
900088aa:	2a20      	cmp	r2, #32
900088ac:	d007      	beq.n	900088be <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900088ae:	685a      	ldr	r2, [r3, #4]
900088b0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900088b4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900088b6:	f7fe fe75 	bl	900075a4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088ba:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900088bc:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088be:	699a      	ldr	r2, [r3, #24]
900088c0:	0690      	lsls	r0, r2, #26
900088c2:	d4d3      	bmi.n	9000886c <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900088c4:	f7fe fe6e 	bl	900075a4 <HAL_GetTick>
900088c8:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900088cc:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900088ce:	2819      	cmp	r0, #25
900088d0:	d9f5      	bls.n	900088be <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900088d2:	2420      	movs	r4, #32
              status = HAL_ERROR;
900088d4:	f04f 0a01 	mov.w	sl, #1
900088d8:	e7c8      	b.n	9000886c <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900088da:	bf00      	nop
900088dc:	fe00e800 	.word	0xfe00e800

900088e0 <I2C_WaitOnFlagUntilTimeout>:
{
900088e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900088e4:	461d      	mov	r5, r3
900088e6:	4683      	mov	fp, r0
900088e8:	460f      	mov	r7, r1
900088ea:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088ec:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900088ee:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088f2:	699a      	ldr	r2, [r3, #24]
900088f4:	ea37 0202 	bics.w	r2, r7, r2
900088f8:	bf0c      	ite	eq
900088fa:	2201      	moveq	r2, #1
900088fc:	2200      	movne	r2, #0
900088fe:	42b2      	cmp	r2, r6
90008900:	d173      	bne.n	900089ea <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90008902:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008904:	f012 0c10 	ands.w	ip, r2, #16
90008908:	d06d      	beq.n	900089e6 <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000890a:	1c6c      	adds	r4, r5, #1
9000890c:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008910:	d170      	bne.n	900089f4 <I2C_WaitOnFlagUntilTimeout+0x114>
90008912:	699c      	ldr	r4, [r3, #24]
90008914:	f014 0420 	ands.w	r4, r4, #32
90008918:	d16a      	bne.n	900089f0 <I2C_WaitOnFlagUntilTimeout+0x110>
9000891a:	699a      	ldr	r2, [r3, #24]
9000891c:	0691      	lsls	r1, r2, #26
9000891e:	d5fc      	bpl.n	9000891a <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008920:	2220      	movs	r2, #32
90008922:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008924:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008928:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000892a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000892c:	05d0      	lsls	r0, r2, #23
9000892e:	d534      	bpl.n	9000899a <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008930:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008934:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008936:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000893a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000893c:	d504      	bpl.n	90008948 <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000893e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008942:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008946:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008948:	0595      	lsls	r5, r2, #22
9000894a:	d504      	bpl.n	90008956 <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000894c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008950:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008954:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008956:	699a      	ldr	r2, [r3, #24]
90008958:	0790      	lsls	r0, r2, #30
9000895a:	d501      	bpl.n	90008960 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
9000895c:	2200      	movs	r2, #0
9000895e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008960:	699a      	ldr	r2, [r3, #24]
90008962:	07d1      	lsls	r1, r2, #31
90008964:	d403      	bmi.n	9000896e <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008966:	699a      	ldr	r2, [r3, #24]
90008968:	f042 0201 	orr.w	r2, r2, #1
9000896c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000896e:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008970:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008972:	4c40      	ldr	r4, [pc, #256]	@ (90008a74 <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008974:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008976:	4022      	ands	r2, r4
90008978:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000897a:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
9000897e:	ea43 030c 	orr.w	r3, r3, ip
90008982:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008986:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000898a:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000898e:	2300      	movs	r3, #0
      return HAL_ERROR;
90008990:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008992:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90008996:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000899a:	0550      	lsls	r0, r2, #21
9000899c:	d4cf      	bmi.n	9000893e <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000899e:	0594      	lsls	r4, r2, #22
900089a0:	d4d4      	bmi.n	9000894c <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
900089a2:	2900      	cmp	r1, #0
900089a4:	d1d7      	bne.n	90008956 <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
900089a6:	1c6a      	adds	r2, r5, #1
900089a8:	d0a3      	beq.n	900088f2 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900089aa:	f7fe fdfb 	bl	900075a4 <HAL_GetTick>
900089ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900089b0:	1ac3      	subs	r3, r0, r3
900089b2:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900089b4:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900089b8:	d801      	bhi.n	900089be <I2C_WaitOnFlagUntilTimeout+0xde>
900089ba:	2d00      	cmp	r5, #0
900089bc:	d199      	bne.n	900088f2 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900089be:	699a      	ldr	r2, [r3, #24]
900089c0:	ea37 0202 	bics.w	r2, r7, r2
900089c4:	bf0c      	ite	eq
900089c6:	2201      	moveq	r2, #1
900089c8:	2200      	movne	r2, #0
900089ca:	42b2      	cmp	r2, r6
900089cc:	d191      	bne.n	900088f2 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900089ce:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900089d2:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900089d4:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900089d6:	430b      	orrs	r3, r1
900089d8:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900089dc:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900089e0:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
900089e4:	e7d3      	b.n	9000898e <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
900089e6:	4661      	mov	r1, ip
900089e8:	e79f      	b.n	9000892a <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
900089ea:	2000      	movs	r0, #0
}
900089ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900089f0:	2400      	movs	r4, #0
900089f2:	e795      	b.n	90008920 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089f4:	2400      	movs	r4, #0
900089f6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900089fa:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900089fc:	699a      	ldr	r2, [r3, #24]
900089fe:	0692      	lsls	r2, r2, #26
90008a00:	d40f      	bmi.n	90008a22 <I2C_WaitOnFlagUntilTimeout+0x142>
90008a02:	f1ba 0f00 	cmp.w	sl, #0
90008a06:	d18d      	bne.n	90008924 <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a08:	f7fe fdcc 	bl	900075a4 <HAL_GetTick>
90008a0c:	eba0 0309 	sub.w	r3, r0, r9
90008a10:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a12:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a16:	d309      	bcc.n	90008a2c <I2C_WaitOnFlagUntilTimeout+0x14c>
90008a18:	b145      	cbz	r5, 90008a2c <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a1a:	699a      	ldr	r2, [r3, #24]
90008a1c:	0690      	lsls	r0, r2, #26
90008a1e:	d5f3      	bpl.n	90008a08 <I2C_WaitOnFlagUntilTimeout+0x128>
90008a20:	e77e      	b.n	90008920 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90008a22:	f1ba 0f00 	cmp.w	sl, #0
90008a26:	f47f af7d 	bne.w	90008924 <I2C_WaitOnFlagUntilTimeout+0x44>
90008a2a:	e779      	b.n	90008920 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a2c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008a2e:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a32:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008a34:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a36:	0409      	lsls	r1, r1, #16
90008a38:	d50c      	bpl.n	90008a54 <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90008a3a:	0441      	lsls	r1, r0, #17
90008a3c:	d40a      	bmi.n	90008a54 <I2C_WaitOnFlagUntilTimeout+0x174>
90008a3e:	2a20      	cmp	r2, #32
90008a40:	d008      	beq.n	90008a54 <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008a42:	685a      	ldr	r2, [r3, #4]
90008a44:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008a48:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008a4a:	f7fe fdab 	bl	900075a4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a4e:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90008a52:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a54:	699a      	ldr	r2, [r3, #24]
90008a56:	0690      	lsls	r0, r2, #26
90008a58:	d4d0      	bmi.n	900089fc <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008a5a:	f7fe fda3 	bl	900075a4 <HAL_GetTick>
90008a5e:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a62:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008a66:	2819      	cmp	r0, #25
90008a68:	d9f4      	bls.n	90008a54 <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008a6a:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008a6c:	f04f 0a01 	mov.w	sl, #1
90008a70:	e7c4      	b.n	900089fc <I2C_WaitOnFlagUntilTimeout+0x11c>
90008a72:	bf00      	nop
90008a74:	fe00e800 	.word	0xfe00e800

90008a78 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a78:	6803      	ldr	r3, [r0, #0]
{
90008a7a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008a7e:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a80:	699a      	ldr	r2, [r3, #24]
90008a82:	0695      	lsls	r5, r2, #26
90008a84:	d461      	bmi.n	90008b4a <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90008a86:	4605      	mov	r5, r0
90008a88:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008a8a:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008a8e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008a90:	f012 0c10 	ands.w	ip, r2, #16
90008a94:	d05c      	beq.n	90008b50 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008a96:	1c74      	adds	r4, r6, #1
90008a98:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a9c:	d165      	bne.n	90008b6a <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90008a9e:	699c      	ldr	r4, [r3, #24]
90008aa0:	f014 0420 	ands.w	r4, r4, #32
90008aa4:	d15f      	bne.n	90008b66 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008aa6:	699a      	ldr	r2, [r3, #24]
90008aa8:	0691      	lsls	r1, r2, #26
90008aaa:	d5fc      	bpl.n	90008aa6 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008aac:	2220      	movs	r2, #32
90008aae:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008ab0:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008ab4:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008ab6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008ab8:	05d0      	lsls	r0, r2, #23
90008aba:	d532      	bpl.n	90008b22 <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008abc:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008ac0:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008ac2:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008ac6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008ac8:	d504      	bpl.n	90008ad4 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008aca:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008ace:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008ad2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008ad4:	0596      	lsls	r6, r2, #22
90008ad6:	d504      	bpl.n	90008ae2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008ad8:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008adc:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008ae0:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008ae2:	699a      	ldr	r2, [r3, #24]
90008ae4:	0790      	lsls	r0, r2, #30
90008ae6:	d501      	bpl.n	90008aec <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90008ae8:	2200      	movs	r2, #0
90008aea:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008aec:	699a      	ldr	r2, [r3, #24]
90008aee:	07d1      	lsls	r1, r2, #31
90008af0:	d403      	bmi.n	90008afa <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008af2:	699a      	ldr	r2, [r3, #24]
90008af4:	f042 0201 	orr.w	r2, r2, #1
90008af8:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008afa:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008afc:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008afe:	4c38      	ldr	r4, [pc, #224]	@ (90008be0 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008b00:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008b02:	4022      	ands	r2, r4
90008b04:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008b06:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008b08:	ea43 030c 	orr.w	r3, r3, ip
90008b0c:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008b0e:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008b12:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008b16:	2300      	movs	r3, #0
      return HAL_ERROR;
90008b18:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008b1a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b22:	0550      	lsls	r0, r2, #21
90008b24:	d4d1      	bmi.n	90008aca <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008b26:	0594      	lsls	r4, r2, #22
90008b28:	d4d6      	bmi.n	90008ad8 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90008b2a:	2900      	cmp	r1, #0
90008b2c:	d1d9      	bne.n	90008ae2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b2e:	f7fe fd39 	bl	900075a4 <HAL_GetTick>
90008b32:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008b34:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b36:	42b0      	cmp	r0, r6
90008b38:	d800      	bhi.n	90008b3c <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90008b3a:	b91e      	cbnz	r6, 90008b44 <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008b3c:	699a      	ldr	r2, [r3, #24]
90008b3e:	f012 0220 	ands.w	r2, r2, #32
90008b42:	d007      	beq.n	90008b54 <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008b44:	699a      	ldr	r2, [r3, #24]
90008b46:	0692      	lsls	r2, r2, #26
90008b48:	d5a1      	bpl.n	90008a8e <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90008b4a:	2000      	movs	r0, #0
}
90008b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008b50:	4661      	mov	r1, ip
90008b52:	e7b0      	b.n	90008ab6 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b54:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008b56:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b58:	430b      	orrs	r3, r1
90008b5a:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008b5c:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008b60:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008b64:	e7d7      	b.n	90008b16 <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b66:	2400      	movs	r4, #0
90008b68:	e7a0      	b.n	90008aac <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b6a:	2400      	movs	r4, #0
90008b6c:	46b9      	mov	r9, r7
90008b6e:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b70:	699a      	ldr	r2, [r3, #24]
90008b72:	0692      	lsls	r2, r2, #26
90008b74:	d42f      	bmi.n	90008bd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
90008b76:	f1ba 0f00 	cmp.w	sl, #0
90008b7a:	d199      	bne.n	90008ab0 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008b7c:	f7fe fd12 	bl	900075a4 <HAL_GetTick>
90008b80:	eba0 0309 	sub.w	r3, r0, r9
90008b84:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008b86:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008b88:	d304      	bcc.n	90008b94 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
90008b8a:	b11e      	cbz	r6, 90008b94 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b8c:	699a      	ldr	r2, [r3, #24]
90008b8e:	0690      	lsls	r0, r2, #26
90008b90:	d5f4      	bpl.n	90008b7c <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90008b92:	e78b      	b.n	90008aac <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008b94:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008b96:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008b9a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008b9c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008b9e:	0409      	lsls	r1, r1, #16
90008ba0:	d50b      	bpl.n	90008bba <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90008ba2:	0441      	lsls	r1, r0, #17
90008ba4:	d409      	bmi.n	90008bba <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
90008ba6:	2a20      	cmp	r2, #32
90008ba8:	d007      	beq.n	90008bba <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008baa:	685a      	ldr	r2, [r3, #4]
90008bac:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008bb0:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008bb2:	f7fe fcf7 	bl	900075a4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008bb6:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008bb8:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008bba:	699a      	ldr	r2, [r3, #24]
90008bbc:	0690      	lsls	r0, r2, #26
90008bbe:	d4d7      	bmi.n	90008b70 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008bc0:	f7fe fcf0 	bl	900075a4 <HAL_GetTick>
90008bc4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008bc8:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008bca:	2819      	cmp	r0, #25
90008bcc:	d9f5      	bls.n	90008bba <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008bce:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008bd0:	f04f 0a01 	mov.w	sl, #1
90008bd4:	e7cc      	b.n	90008b70 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
90008bd6:	f1ba 0f00 	cmp.w	sl, #0
90008bda:	f47f af69 	bne.w	90008ab0 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008bde:	e765      	b.n	90008aac <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90008be0:	fe00e800 	.word	0xfe00e800

90008be4 <HAL_I2C_MspInit>:
}
90008be4:	4770      	bx	lr
90008be6:	bf00      	nop

90008be8 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008be8:	2800      	cmp	r0, #0
90008bea:	d053      	beq.n	90008c94 <HAL_I2C_Init+0xac>
{
90008bec:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008bee:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008bf2:	4604      	mov	r4, r0
90008bf4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008bf8:	2b00      	cmp	r3, #0
90008bfa:	d046      	beq.n	90008c8a <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008bfc:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008bfe:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008c00:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008c02:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90008c06:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008c08:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008c0c:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008c0e:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008c12:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008c14:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008c16:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008c18:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008c1a:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008c1c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008c20:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008c22:	d009      	beq.n	90008c38 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008c24:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008c28:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008c2a:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008c2c:	d107      	bne.n	90008c3e <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008c2e:	685a      	ldr	r2, [r3, #4]
90008c30:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008c34:	605a      	str	r2, [r3, #4]
90008c36:	e006      	b.n	90008c46 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008c38:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008c3c:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008c3e:	685a      	ldr	r2, [r3, #4]
90008c40:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008c44:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008c46:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008c48:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008c4c:	4912      	ldr	r1, [pc, #72]	@ (90008c98 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008c4e:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008c50:	4301      	orrs	r1, r0
90008c52:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008c54:	68d9      	ldr	r1, [r3, #12]
90008c56:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008c5a:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008c5c:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008c60:	4302      	orrs	r2, r0
90008c62:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008c66:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008c6a:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008c6c:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008c6e:	4301      	orrs	r1, r0
  return HAL_OK;
90008c70:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008c72:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008c74:	6819      	ldr	r1, [r3, #0]
90008c76:	f041 0101 	orr.w	r1, r1, #1
90008c7a:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008c7c:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008c7e:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008c82:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008c84:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008c88:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90008c8a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008c8e:	f7ff ffa9 	bl	90008be4 <HAL_I2C_MspInit>
90008c92:	e7b3      	b.n	90008bfc <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008c94:	2001      	movs	r0, #1
}
90008c96:	4770      	bx	lr
90008c98:	02008000 	.word	0x02008000

90008c9c <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008c9c:	4770      	bx	lr
90008c9e:	bf00      	nop

90008ca0 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008ca0:	b1b0      	cbz	r0, 90008cd0 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008ca2:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ca4:	2324      	movs	r3, #36	@ 0x24
{
90008ca6:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ca8:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008cac:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008cae:	6813      	ldr	r3, [r2, #0]
90008cb0:	f023 0301 	bic.w	r3, r3, #1
90008cb4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90008cb6:	f7ff fff1 	bl	90008c9c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008cba:	2300      	movs	r3, #0
90008cbc:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008cbe:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008cc0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008cc4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008cc8:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008cca:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008cce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008cd0:	2001      	movs	r0, #1
}
90008cd2:	4770      	bx	lr

90008cd4 <HAL_I2C_Mem_Write>:
{
90008cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008cd8:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008cda:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008cde:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90008ce0:	2820      	cmp	r0, #32
{
90008ce2:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90008ce6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90008ce8:	d11e      	bne.n	90008d28 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90008cea:	4698      	mov	r8, r3
90008cec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90008cee:	b1bb      	cbz	r3, 90008d20 <HAL_I2C_Mem_Write+0x4c>
90008cf0:	f1ba 0f00 	cmp.w	sl, #0
90008cf4:	d014      	beq.n	90008d20 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90008cf6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008cfa:	2b01      	cmp	r3, #1
90008cfc:	d014      	beq.n	90008d28 <HAL_I2C_Mem_Write+0x54>
90008cfe:	2301      	movs	r3, #1
90008d00:	460d      	mov	r5, r1
90008d02:	4691      	mov	r9, r2
90008d04:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008d08:	f7fe fc4c 	bl	900075a4 <HAL_GetTick>
90008d0c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008d0e:	4620      	mov	r0, r4
90008d10:	4631      	mov	r1, r6
90008d12:	f7ff fc8f 	bl	90008634 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90008d16:	b158      	cbz	r0, 90008d30 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90008d18:	2001      	movs	r0, #1
}
90008d1a:	b003      	add	sp, #12
90008d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008d20:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008d24:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008d26:	e7f7      	b.n	90008d18 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90008d28:	2002      	movs	r0, #2
}
90008d2a:	b003      	add	sp, #12
90008d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008d30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008d32:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008d36:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008d38:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008d3a:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008d3c:	4a5f      	ldr	r2, [pc, #380]	@ (90008ebc <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008d3e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008d42:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008d44:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008d46:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008d4a:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008d4c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008d4e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008d52:	684b      	ldr	r3, [r1, #4]
90008d54:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008d56:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008d5a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008d5e:	4a58      	ldr	r2, [pc, #352]	@ (90008ec0 <HAL_I2C_Mem_Write+0x1ec>)
90008d60:	ea43 030b 	orr.w	r3, r3, fp
90008d64:	431a      	orrs	r2, r3
90008d66:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008d68:	4632      	mov	r2, r6
90008d6a:	4639      	mov	r1, r7
90008d6c:	f7ff fd02 	bl	90008774 <I2C_WaitOnTXISFlagUntilTimeout>
90008d70:	2800      	cmp	r0, #0
90008d72:	d176      	bne.n	90008e62 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008d74:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008d78:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008d7a:	d169      	bne.n	90008e50 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008d7c:	fa5f f289 	uxtb.w	r2, r9
90008d80:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90008d82:	463b      	mov	r3, r7
90008d84:	2200      	movs	r2, #0
90008d86:	2180      	movs	r1, #128	@ 0x80
90008d88:	4620      	mov	r0, r4
90008d8a:	9600      	str	r6, [sp, #0]
90008d8c:	f7ff fda8 	bl	900088e0 <I2C_WaitOnFlagUntilTimeout>
90008d90:	2800      	cmp	r0, #0
90008d92:	d166      	bne.n	90008e62 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008d94:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008d96:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008d98:	b29b      	uxth	r3, r3
90008d9a:	2bff      	cmp	r3, #255	@ 0xff
90008d9c:	d965      	bls.n	90008e6a <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008d9e:	6853      	ldr	r3, [r2, #4]
90008da0:	4948      	ldr	r1, [pc, #288]	@ (90008ec4 <HAL_I2C_Mem_Write+0x1f0>)
90008da2:	400b      	ands	r3, r1
90008da4:	4948      	ldr	r1, [pc, #288]	@ (90008ec8 <HAL_I2C_Mem_Write+0x1f4>)
90008da6:	ea43 030b 	orr.w	r3, r3, fp
90008daa:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008dac:	23ff      	movs	r3, #255	@ 0xff
90008dae:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008db0:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008db2:	e003      	b.n	90008dbc <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90008db4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008db6:	b29b      	uxth	r3, r3
90008db8:	2b00      	cmp	r3, #0
90008dba:	d069      	beq.n	90008e90 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008dbc:	4632      	mov	r2, r6
90008dbe:	4639      	mov	r1, r7
90008dc0:	4620      	mov	r0, r4
90008dc2:	f7ff fcd7 	bl	90008774 <I2C_WaitOnTXISFlagUntilTimeout>
90008dc6:	4602      	mov	r2, r0
90008dc8:	2800      	cmp	r0, #0
90008dca:	d1a5      	bne.n	90008d18 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008dcc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008dce:	6825      	ldr	r5, [r4, #0]
90008dd0:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90008dd4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008dd6:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90008dd8:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008ddc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008dde:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008de0:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008de4:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90008de6:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008dea:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90008dec:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008df0:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
90008df2:	b289      	uxth	r1, r1
90008df4:	2900      	cmp	r1, #0
90008df6:	d0dd      	beq.n	90008db4 <HAL_I2C_Mem_Write+0xe0>
90008df8:	2b00      	cmp	r3, #0
90008dfa:	d1db      	bne.n	90008db4 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008dfc:	463b      	mov	r3, r7
90008dfe:	2180      	movs	r1, #128	@ 0x80
90008e00:	4620      	mov	r0, r4
90008e02:	9600      	str	r6, [sp, #0]
90008e04:	f7ff fd6c 	bl	900088e0 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008e08:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008e0c:	2800      	cmp	r0, #0
90008e0e:	d183      	bne.n	90008d18 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008e10:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008e12:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90008ec4 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008e16:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008e18:	492b      	ldr	r1, [pc, #172]	@ (90008ec8 <HAL_I2C_Mem_Write+0x1f4>)
90008e1a:	4670      	mov	r0, lr
90008e1c:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008e1e:	4563      	cmp	r3, ip
90008e20:	d909      	bls.n	90008e36 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90008e22:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008e24:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008e28:	ea03 030e 	and.w	r3, r3, lr
90008e2c:	ea43 030b 	orr.w	r3, r3, fp
90008e30:	4319      	orrs	r1, r3
90008e32:	6051      	str	r1, [r2, #4]
}
90008e34:	e7be      	b.n	90008db4 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90008e36:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008e38:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90008e3a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008e3c:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008e3e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008e40:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008e42:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90008e46:	430b      	orrs	r3, r1
90008e48:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008e4c:	6053      	str	r3, [r2, #4]
}
90008e4e:	e7b1      	b.n	90008db4 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008e50:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008e54:	4639      	mov	r1, r7
90008e56:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008e58:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008e5a:	4632      	mov	r2, r6
90008e5c:	f7ff fc8a 	bl	90008774 <I2C_WaitOnTXISFlagUntilTimeout>
90008e60:	b188      	cbz	r0, 90008e86 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
90008e62:	2300      	movs	r3, #0
90008e64:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008e68:	e756      	b.n	90008d18 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90008e6a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008e6c:	4815      	ldr	r0, [pc, #84]	@ (90008ec4 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
90008e6e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008e70:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90008e72:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008e74:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008e76:	4001      	ands	r1, r0
90008e78:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90008e7c:	430b      	orrs	r3, r1
90008e7e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008e82:	6053      	str	r3, [r2, #4]
}
90008e84:	e79a      	b.n	90008dbc <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008e86:	fa5f f289 	uxtb.w	r2, r9
90008e8a:	6823      	ldr	r3, [r4, #0]
90008e8c:	629a      	str	r2, [r3, #40]	@ 0x28
90008e8e:	e778      	b.n	90008d82 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008e90:	4632      	mov	r2, r6
90008e92:	4639      	mov	r1, r7
90008e94:	4620      	mov	r0, r4
90008e96:	f7ff fdef 	bl	90008a78 <I2C_WaitOnSTOPFlagUntilTimeout>
90008e9a:	2800      	cmp	r0, #0
90008e9c:	f47f af3c 	bne.w	90008d18 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008ea0:	6823      	ldr	r3, [r4, #0]
90008ea2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008ea4:	4d09      	ldr	r5, [pc, #36]	@ (90008ecc <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008ea6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008ea8:	685a      	ldr	r2, [r3, #4]
90008eaa:	402a      	ands	r2, r5
90008eac:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008eae:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008eb2:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008eb6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90008eba:	e72e      	b.n	90008d1a <HAL_I2C_Mem_Write+0x46>
90008ebc:	fc009800 	.word	0xfc009800
90008ec0:	01002000 	.word	0x01002000
90008ec4:	fc009c00 	.word	0xfc009c00
90008ec8:	01ff0000 	.word	0x01ff0000
90008ecc:	fe00e800 	.word	0xfe00e800

90008ed0 <HAL_I2C_Mem_Read>:
{
90008ed0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008ed4:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008ed6:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008eda:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90008edc:	2820      	cmp	r0, #32
{
90008ede:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90008ee2:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008ee4:	d11e      	bne.n	90008f24 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90008ee6:	4698      	mov	r8, r3
90008ee8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008eea:	b1bb      	cbz	r3, 90008f1c <HAL_I2C_Mem_Read+0x4c>
90008eec:	f1ba 0f00 	cmp.w	sl, #0
90008ef0:	d014      	beq.n	90008f1c <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90008ef2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008ef6:	2b01      	cmp	r3, #1
90008ef8:	d014      	beq.n	90008f24 <HAL_I2C_Mem_Read+0x54>
90008efa:	2301      	movs	r3, #1
90008efc:	460d      	mov	r5, r1
90008efe:	4691      	mov	r9, r2
90008f00:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008f04:	f7fe fb4e 	bl	900075a4 <HAL_GetTick>
90008f08:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008f0a:	4620      	mov	r0, r4
90008f0c:	4631      	mov	r1, r6
90008f0e:	f7ff fb91 	bl	90008634 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90008f12:	b158      	cbz	r0, 90008f2c <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90008f14:	2001      	movs	r0, #1
}
90008f16:	b002      	add	sp, #8
90008f18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008f1c:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008f20:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008f22:	e7f7      	b.n	90008f14 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90008f24:	2002      	movs	r0, #2
}
90008f26:	b002      	add	sp, #8
90008f28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008f2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008f2e:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
90008f32:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008f34:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008f36:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90008f38:	495f      	ldr	r1, [pc, #380]	@ (900090b8 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008f3a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f3e:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008f40:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f42:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008f46:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f48:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008f4a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008f4e:	6853      	ldr	r3, [r2, #4]
90008f50:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008f52:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008f56:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f5a:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90008f5c:	432b      	orrs	r3, r5
90008f5e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008f62:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f64:	4632      	mov	r2, r6
90008f66:	f7ff fc05 	bl	90008774 <I2C_WaitOnTXISFlagUntilTimeout>
90008f6a:	2800      	cmp	r0, #0
90008f6c:	d177      	bne.n	9000905e <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008f6e:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008f72:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008f74:	d16a      	bne.n	9000904c <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008f76:	fa5f f289 	uxtb.w	r2, r9
90008f7a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90008f7c:	463b      	mov	r3, r7
90008f7e:	2200      	movs	r2, #0
90008f80:	2140      	movs	r1, #64	@ 0x40
90008f82:	4620      	mov	r0, r4
90008f84:	9600      	str	r6, [sp, #0]
90008f86:	f7ff fcab 	bl	900088e0 <I2C_WaitOnFlagUntilTimeout>
90008f8a:	2800      	cmp	r0, #0
90008f8c:	d167      	bne.n	9000905e <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008f8e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008f90:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008f92:	b29b      	uxth	r3, r3
90008f94:	2bff      	cmp	r3, #255	@ 0xff
90008f96:	d966      	bls.n	90009066 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008f98:	6853      	ldr	r3, [r2, #4]
90008f9a:	4947      	ldr	r1, [pc, #284]	@ (900090b8 <HAL_I2C_Mem_Read+0x1e8>)
90008f9c:	400b      	ands	r3, r1
90008f9e:	4947      	ldr	r1, [pc, #284]	@ (900090bc <HAL_I2C_Mem_Read+0x1ec>)
90008fa0:	432b      	orrs	r3, r5
90008fa2:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008fa4:	23ff      	movs	r3, #255	@ 0xff
90008fa6:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008fa8:	6051      	str	r1, [r2, #4]
}
90008faa:	e003      	b.n	90008fb4 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
90008fac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008fae:	b29b      	uxth	r3, r3
90008fb0:	2b00      	cmp	r3, #0
90008fb2:	d06b      	beq.n	9000908c <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90008fb4:	463b      	mov	r3, r7
90008fb6:	2200      	movs	r2, #0
90008fb8:	2104      	movs	r1, #4
90008fba:	4620      	mov	r0, r4
90008fbc:	9600      	str	r6, [sp, #0]
90008fbe:	f7ff fc8f 	bl	900088e0 <I2C_WaitOnFlagUntilTimeout>
90008fc2:	2800      	cmp	r0, #0
90008fc4:	d1a6      	bne.n	90008f14 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008fc6:	6821      	ldr	r1, [r4, #0]
90008fc8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008fca:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90008fcc:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
90008fce:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90008fd2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008fd4:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008fd8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90008fda:	3101      	adds	r1, #1
      hi2c->XferCount--;
90008fdc:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008fe0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008fe2:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008fe4:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008fe8:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008fea:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008fec:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008fee:	b289      	uxth	r1, r1
90008ff0:	2900      	cmp	r1, #0
90008ff2:	d0db      	beq.n	90008fac <HAL_I2C_Mem_Read+0xdc>
90008ff4:	2b00      	cmp	r3, #0
90008ff6:	d1d9      	bne.n	90008fac <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008ff8:	4602      	mov	r2, r0
90008ffa:	463b      	mov	r3, r7
90008ffc:	2180      	movs	r1, #128	@ 0x80
90008ffe:	4620      	mov	r0, r4
90009000:	9600      	str	r6, [sp, #0]
90009002:	f7ff fc6d 	bl	900088e0 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009006:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000900a:	2800      	cmp	r0, #0
9000900c:	d182      	bne.n	90008f14 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000900e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009010:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 900090cc <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009014:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009016:	492a      	ldr	r1, [pc, #168]	@ (900090c0 <HAL_I2C_Mem_Read+0x1f0>)
90009018:	4670      	mov	r0, lr
9000901a:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000901c:	4563      	cmp	r3, ip
9000901e:	d908      	bls.n	90009032 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90009020:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009022:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009026:	ea03 030e 	and.w	r3, r3, lr
9000902a:	432b      	orrs	r3, r5
9000902c:	4319      	orrs	r1, r3
9000902e:	6051      	str	r1, [r2, #4]
}
90009030:	e7bc      	b.n	90008fac <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
90009032:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009034:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009036:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009038:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000903a:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000903c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000903e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009042:	430b      	orrs	r3, r1
90009044:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009048:	6053      	str	r3, [r2, #4]
}
9000904a:	e7af      	b.n	90008fac <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000904c:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009050:	4639      	mov	r1, r7
90009052:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009054:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009056:	4632      	mov	r2, r6
90009058:	f7ff fb8c 	bl	90008774 <I2C_WaitOnTXISFlagUntilTimeout>
9000905c:	b188      	cbz	r0, 90009082 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
9000905e:	2300      	movs	r3, #0
90009060:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009064:	e756      	b.n	90008f14 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009066:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009068:	4813      	ldr	r0, [pc, #76]	@ (900090b8 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
9000906a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000906c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000906e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009070:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009072:	4001      	ands	r1, r0
90009074:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009078:	430b      	orrs	r3, r1
9000907a:	4912      	ldr	r1, [pc, #72]	@ (900090c4 <HAL_I2C_Mem_Read+0x1f4>)
9000907c:	4319      	orrs	r1, r3
9000907e:	6051      	str	r1, [r2, #4]
}
90009080:	e798      	b.n	90008fb4 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009082:	fa5f f289 	uxtb.w	r2, r9
90009086:	6823      	ldr	r3, [r4, #0]
90009088:	629a      	str	r2, [r3, #40]	@ 0x28
9000908a:	e777      	b.n	90008f7c <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000908c:	4632      	mov	r2, r6
9000908e:	4639      	mov	r1, r7
90009090:	4620      	mov	r0, r4
90009092:	f7ff fcf1 	bl	90008a78 <I2C_WaitOnSTOPFlagUntilTimeout>
90009096:	2800      	cmp	r0, #0
90009098:	f47f af3c 	bne.w	90008f14 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000909c:	6823      	ldr	r3, [r4, #0]
9000909e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900090a0:	4d09      	ldr	r5, [pc, #36]	@ (900090c8 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090a2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900090a4:	685a      	ldr	r2, [r3, #4]
900090a6:	402a      	ands	r2, r5
900090a8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900090aa:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900090ae:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900090b2:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900090b6:	e72e      	b.n	90008f16 <HAL_I2C_Mem_Read+0x46>
900090b8:	fc009800 	.word	0xfc009800
900090bc:	01ff2400 	.word	0x01ff2400
900090c0:	01ff0000 	.word	0x01ff0000
900090c4:	02002400 	.word	0x02002400
900090c8:	fe00e800 	.word	0xfe00e800
900090cc:	fc009c00 	.word	0xfc009c00

900090d0 <HAL_I2C_GetState>:
  return hi2c->State;
900090d0:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
900090d4:	4770      	bx	lr
900090d6:	bf00      	nop

900090d8 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900090d8:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
900090da:	4770      	bx	lr

900090dc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900090dc:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900090e0:	2a20      	cmp	r2, #32
900090e2:	d123      	bne.n	9000912c <HAL_I2CEx_ConfigAnalogFilter+0x50>
900090e4:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900090e8:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900090ec:	4603      	mov	r3, r0
900090ee:	2a01      	cmp	r2, #1
900090f0:	d01c      	beq.n	9000912c <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900090f2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900090f4:	2024      	movs	r0, #36	@ 0x24
{
900090f6:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900090f8:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900090fc:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009100:	6810      	ldr	r0, [r2, #0]
90009102:	f020 0001 	bic.w	r0, r0, #1
90009106:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009108:	6810      	ldr	r0, [r2, #0]
9000910a:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000910e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009110:	6810      	ldr	r0, [r2, #0]
90009112:	4301      	orrs	r1, r0

    return HAL_OK;
90009114:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009116:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009118:	6811      	ldr	r1, [r2, #0]
9000911a:	f041 0101 	orr.w	r1, r1, #1
9000911e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009120:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009124:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009128:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000912c:	2002      	movs	r0, #2
}
9000912e:	4770      	bx	lr

90009130 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009130:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009134:	2a20      	cmp	r2, #32
90009136:	d122      	bne.n	9000917e <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009138:	4603      	mov	r3, r0
{
9000913a:	b500      	push	{lr}
9000913c:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009140:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009144:	2a01      	cmp	r2, #1
90009146:	d01c      	beq.n	90009182 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009148:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000914a:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000914c:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009150:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90009154:	6810      	ldr	r0, [r2, #0]
90009156:	f020 0001 	bic.w	r0, r0, #1
9000915a:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000915c:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000915e:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90009162:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009166:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009168:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000916a:	6811      	ldr	r1, [r2, #0]
9000916c:	f041 0101 	orr.w	r1, r1, #1
90009170:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009172:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009176:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000917a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000917e:	2002      	movs	r0, #2
}
90009180:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009182:	2002      	movs	r0, #2
}
90009184:	f85d fb04 	ldr.w	pc, [sp], #4

90009188 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009188:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000918c:	4681      	mov	r9, r0
9000918e:	460d      	mov	r5, r1
90009190:	4614      	mov	r4, r2
90009192:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009194:	7806      	ldrb	r6, [r0, #0]
90009196:	2701      	movs	r7, #1
  p = 0;
90009198:	f04f 0800 	mov.w	r8, #0
9000919c:	e006      	b.n	900091ac <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000919e:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
900091a2:	eb06 0308 	add.w	r3, r6, r8
900091a6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900091aa:	d83c      	bhi.n	90009226 <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900091ac:	4632      	mov	r2, r6
900091ae:	4639      	mov	r1, r7
900091b0:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
900091b4:	b116      	cbz	r6, 900091bc <JPEG_Bits_To_SizeCodes+0x34>
900091b6:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
900091b8:	f022 fc8e 	bl	9002bad8 <memset>
  for (l = 0; l < 16UL; l++)
900091bc:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
900091be:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
900091c2:	d1ec      	bne.n	9000919e <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
900091c4:	f04f 0900 	mov.w	r9, #0
900091c8:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
900091cc:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
900091d0:	7829      	ldrb	r1, [r5, #0]
900091d2:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
900091d4:	b321      	cbz	r1, 90009220 <JPEG_Bits_To_SizeCodes+0x98>
900091d6:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900091da:	2701      	movs	r7, #1
  p = 0;
900091dc:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
900091de:	4291      	cmp	r1, r2
900091e0:	d124      	bne.n	9000922c <JPEG_Bits_To_SizeCodes+0xa4>
900091e2:	eb06 0008 	add.w	r0, r6, r8
900091e6:	eb05 0c06 	add.w	ip, r5, r6
900091ea:	464b      	mov	r3, r9
900091ec:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
900091f0:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
900091f4:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
900091f6:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
900091fa:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
900091fc:	4596      	cmp	lr, r2
900091fe:	d0f7      	beq.n	900091f0 <JPEG_Bits_To_SizeCodes+0x68>
90009200:	3601      	adds	r6, #1
90009202:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90009206:	440e      	add	r6, r1
    if(si > 31UL)
90009208:	2a1f      	cmp	r2, #31
9000920a:	d80c      	bhi.n	90009226 <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000920c:	fa07 f102 	lsl.w	r1, r7, r2
90009210:	4299      	cmp	r1, r3
90009212:	d908      	bls.n	90009226 <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
90009214:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009216:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
9000921a:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
9000921c:	2900      	cmp	r1, #0
9000921e:	d1de      	bne.n	900091de <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
90009220:	2000      	movs	r0, #0
}
90009222:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90009226:	2001      	movs	r0, #1
}
90009228:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
9000922c:	464b      	mov	r3, r9
9000922e:	e7eb      	b.n	90009208 <JPEG_Bits_To_SizeCodes+0x80>

90009230 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009230:	b5f0      	push	{r4, r5, r6, r7, lr}
90009232:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90009236:	460d      	mov	r5, r1
90009238:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000923a:	ab01      	add	r3, sp, #4
9000923c:	aa43      	add	r2, sp, #268	@ 0x10c
9000923e:	a902      	add	r1, sp, #8
90009240:	f7ff ffa2 	bl	90009188 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009244:	b9d0      	cbnz	r0, 9000927c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009246:	9f01      	ldr	r7, [sp, #4]
90009248:	b1c7      	cbz	r7, 9000927c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000924a:	370f      	adds	r7, #15
9000924c:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009250:	a902      	add	r1, sp, #8
90009252:	f104 0c0f 	add.w	ip, r4, #15
90009256:	4427      	add	r7, r4
90009258:	e009      	b.n	9000926e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000925a:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000925e:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009260:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009264:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009268:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000926a:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000926c:	d006      	beq.n	9000927c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000926e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009272:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009274:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009278:	d9ef      	bls.n	9000925a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000927a:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000927c:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009280:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009282:	bf00      	nop

90009284 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009288:	6804      	ldr	r4, [r0, #0]
{
9000928a:	b093      	sub	sp, #76	@ 0x4c
9000928c:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000928e:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90009292:	429a      	cmp	r2, r3
90009294:	f000 809d 	beq.w	900093d2 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009298:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
9000929c:	429a      	cmp	r2, r3
9000929e:	d003      	beq.n	900092a8 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900092a0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900092a2:	b013      	add	sp, #76	@ 0x4c
900092a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900092a8:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900092ac:	a903      	add	r1, sp, #12
900092ae:	f7ff ffbf 	bl	90009230 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900092b2:	2800      	cmp	r0, #0
900092b4:	d1f5      	bne.n	900092a2 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900092b6:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092ba:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092be:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
900092c2:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092c4:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
900092c8:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092ca:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
900092ce:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092d2:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
900092d6:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092da:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
900092de:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092e0:	f89d 9015 	ldrb.w	r9, [sp, #21]
900092e4:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092e8:	f89d c014 	ldrb.w	ip, [sp, #20]
900092ec:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092f0:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092f4:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092f8:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092fc:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900092fe:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009302:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90009306:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
9000930a:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000930e:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009312:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009316:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000931a:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000931e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009320:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009324:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009328:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000932c:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000932e:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009332:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009334:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90009338:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000933c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009340:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009344:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009348:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000934c:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000934e:	9b01      	ldr	r3, [sp, #4]
90009350:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009354:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009358:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000935c:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009360:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009364:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90009366:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000936a:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000936e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90009372:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009376:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000937a:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000937e:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009382:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009386:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000938a:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000938e:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90009392:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009394:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009398:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000939a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000939e:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900093a2:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
900093a6:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900093a8:	f89d 2020 	ldrb.w	r2, [sp, #32]
900093ac:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900093ae:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900093b2:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900093b6:	f89d 301c 	ldrb.w	r3, [sp, #28]
900093ba:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900093bc:	f89d 3018 	ldrb.w	r3, [sp, #24]
900093c0:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
900093c4:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
900093c8:	f844 3c18 	str.w	r3, [r4, #-24]
}
900093cc:	b013      	add	sp, #76	@ 0x4c
900093ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900093d2:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
900093d6:	e769      	b.n	900092ac <JPEG_Set_HuffDC_Mem+0x28>

900093d8 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
900093d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900093dc:	6804      	ldr	r4, [r0, #0]
{
900093de:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
900093e2:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900093e4:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
900093e8:	429a      	cmp	r2, r3
900093ea:	d041      	beq.n	90009470 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
900093ec:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
900093f0:	429a      	cmp	r2, r3
900093f2:	d004      	beq.n	900093fe <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900093f4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900093f6:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900093fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900093fe:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009402:	4628      	mov	r0, r5
90009404:	466b      	mov	r3, sp
90009406:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
9000940a:	a901      	add	r1, sp, #4
9000940c:	f7ff febc 	bl	90009188 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009410:	2800      	cmp	r0, #0
90009412:	d1f0      	bne.n	900093f6 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009414:	9b00      	ldr	r3, [sp, #0]
90009416:	b373      	cbz	r3, 90009476 <JPEG_Set_HuffAC_Mem+0x9e>
90009418:	330f      	adds	r3, #15
9000941a:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000941e:	af01      	add	r7, sp, #4
90009420:	f105 020f 	add.w	r2, r5, #15
90009424:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009428:	ae42      	add	r6, sp, #264	@ 0x108
9000942a:	e011      	b.n	90009450 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
9000942c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009430:	2ba1      	cmp	r3, #161	@ 0xa1
90009432:	d8df      	bhi.n	900093f4 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009434:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009438:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000943c:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90009440:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009442:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009446:	46b1      	mov	r9, r6
90009448:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000944c:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000944e:	d014      	beq.n	9000947a <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009450:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009454:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90009456:	2900      	cmp	r1, #0
90009458:	d0ec      	beq.n	90009434 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000945a:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000945c:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009460:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90009462:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009466:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000946a:	d1df      	bne.n	9000942c <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
9000946c:	23a1      	movs	r3, #161	@ 0xa1
9000946e:	e7e1      	b.n	90009434 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009470:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90009474:	e7c5      	b.n	90009402 <JPEG_Set_HuffAC_Mem+0x2a>
90009476:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000947a:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000947e:	4a1a      	ldr	r2, [pc, #104]	@ (900094e8 <JPEG_Set_HuffAC_Mem+0x110>)
90009480:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009484:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90009486:	6023      	str	r3, [r4, #0]
90009488:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
9000948c:	6063      	str	r3, [r4, #4]
9000948e:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90009492:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009494:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009498:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000949a:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000949e:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
900094a2:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900094a4:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900094a8:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900094aa:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900094ae:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094b0:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094b4:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094b8:	0212      	lsls	r2, r2, #8
900094ba:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094be:	021b      	lsls	r3, r3, #8
900094c0:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094c4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
900094c8:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094ca:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094ce:	433a      	orrs	r2, r7
    while (i > 1UL)
900094d0:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900094d2:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900094d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900094da:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900094de:	d1e7      	bne.n	900094b0 <JPEG_Set_HuffAC_Mem+0xd8>
}
900094e0:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900094e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900094e8:	0fd10fd0 	.word	0x0fd10fd0

900094ec <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900094ec:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900094ee:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900094f0:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900094f4:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900094f6:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900094f8:	f002 0203 	and.w	r2, r2, #3
900094fc:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900094fe:	685a      	ldr	r2, [r3, #4]
90009500:	bf0c      	ite	eq
90009502:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90009506:	f022 0208 	bicne.w	r2, r2, #8
9000950a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000950c:	681a      	ldr	r2, [r3, #0]
9000950e:	f022 0201 	bic.w	r2, r2, #1
90009512:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009514:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009516:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000951a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000951c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000951e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009522:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009524:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009526:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000952a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000952c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000952e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009532:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90009534:	681a      	ldr	r2, [r3, #0]
90009536:	f042 0201 	orr.w	r2, r2, #1
9000953a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000953c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000953e:	f002 020c 	and.w	r2, r2, #12
90009542:	2a08      	cmp	r2, #8
90009544:	d00a      	beq.n	9000955c <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009546:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009548:	f002 020c 	and.w	r2, r2, #12
9000954c:	2a0c      	cmp	r2, #12
9000954e:	d000      	beq.n	90009552 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009550:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009552:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009554:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009558:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000955a:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000955c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000955e:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90009562:	631a      	str	r2, [r3, #48]	@ 0x30
90009564:	4770      	bx	lr
90009566:	bf00      	nop

90009568 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009568:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000956a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
9000956c:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000956e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90009570:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009572:	42aa      	cmp	r2, r5
90009574:	d32a      	bcc.n	900095cc <JPEG_DMA_StartProcess+0x64>
90009576:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009578:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000957a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000957c:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000957e:	42b3      	cmp	r3, r6
90009580:	d324      	bcc.n	900095cc <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009582:	4f19      	ldr	r7, [pc, #100]	@ (900095e8 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009584:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 900095f4 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009588:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000958a:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000958e:	4917      	ldr	r1, [pc, #92]	@ (900095ec <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009590:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009592:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90009594:	4916      	ldr	r1, [pc, #88]	@ (900095f0 <JPEG_DMA_StartProcess+0x88>)
90009596:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009598:	b1a5      	cbz	r5, 900095c4 <JPEG_DMA_StartProcess+0x5c>
9000959a:	b19e      	cbz	r6, 900095c4 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000959c:	fbb2 f1f5 	udiv	r1, r2, r5
900095a0:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900095a4:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900095a6:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900095a8:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900095aa:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900095ac:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900095ae:	fbb3 f2f6 	udiv	r2, r3, r6
900095b2:	fb06 3212 	mls	r2, r6, r2, r3
900095b6:	1a9b      	subs	r3, r3, r2
900095b8:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900095ba:	9500      	str	r5, [sp, #0]
900095bc:	69e2      	ldr	r2, [r4, #28]
900095be:	f001 fc0f 	bl	9000ade0 <HAL_MDMA_Start_IT>
900095c2:	b130      	cbz	r0, 900095d2 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900095c4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900095c6:	f043 0304 	orr.w	r3, r3, #4
900095ca:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
900095cc:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900095ce:	b003      	add	sp, #12
900095d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900095d2:	6822      	ldr	r2, [r4, #0]
900095d4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900095d6:	69a1      	ldr	r1, [r4, #24]
900095d8:	3240      	adds	r2, #64	@ 0x40
900095da:	9500      	str	r5, [sp, #0]
900095dc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900095de:	f001 fbff 	bl	9000ade0 <HAL_MDMA_Start_IT>
900095e2:	2800      	cmp	r0, #0
900095e4:	d0f3      	beq.n	900095ce <JPEG_DMA_StartProcess+0x66>
900095e6:	e7ed      	b.n	900095c4 <JPEG_DMA_StartProcess+0x5c>
900095e8:	90009be5 	.word	0x90009be5
900095ec:	90009e59 	.word	0x90009e59
900095f0:	90009ed9 	.word	0x90009ed9
900095f4:	90009c11 	.word	0x90009c11

900095f8 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900095f8:	6803      	ldr	r3, [r0, #0]
900095fa:	685a      	ldr	r2, [r3, #4]
900095fc:	f002 0203 	and.w	r2, r2, #3
90009600:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009602:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90009604:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90009608:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000960a:	f000 80a0 	beq.w	9000974e <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000960e:	f012 0203 	ands.w	r2, r2, #3
90009612:	d177      	bne.n	90009704 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009614:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009616:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000961a:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000961c:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000961e:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009620:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009624:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009628:	2100      	movs	r1, #0
9000962a:	4a5e      	ldr	r2, [pc, #376]	@ (900097a4 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000962c:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009630:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90009634:	2600      	movs	r6, #0
90009636:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000963a:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000963e:	f241 3188 	movw	r1, #5000	@ 0x1388
90009642:	e033      	b.n	900096ac <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009644:	f892 8001 	ldrb.w	r8, [r2, #1]
90009648:	fb0e f707 	mul.w	r7, lr, r7
9000964c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000964e:	f815 8008 	ldrb.w	r8, [r5, r8]
90009652:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009656:	2f64      	cmp	r7, #100	@ 0x64
90009658:	d96a      	bls.n	90009730 <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
9000965a:	fbb1 f7f7 	udiv	r7, r1, r7
9000965e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009660:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90009664:	2f01      	cmp	r7, #1
90009666:	d03d      	beq.n	900096e4 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009668:	f892 8002 	ldrb.w	r8, [r2, #2]
9000966c:	fb0e f707 	mul.w	r7, lr, r7
90009670:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009672:	f815 8008 	ldrb.w	r8, [r5, r8]
90009676:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000967a:	2f64      	cmp	r7, #100	@ 0x64
9000967c:	d953      	bls.n	90009726 <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
9000967e:	fbb1 f7f7 	udiv	r7, r1, r7
90009682:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009684:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90009686:	2b01      	cmp	r3, #1
90009688:	d030      	beq.n	900096ec <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000968a:	78d7      	ldrb	r7, [r2, #3]
9000968c:	fb0e f303 	mul.w	r3, lr, r3
90009690:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009692:	5def      	ldrb	r7, [r5, r7]
90009694:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009698:	2b64      	cmp	r3, #100	@ 0x64
9000969a:	d953      	bls.n	90009744 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
9000969c:	fbb1 f3f3 	udiv	r3, r1, r3
900096a0:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900096a2:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
900096a4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900096a8:	42a2      	cmp	r2, r4
900096aa:	d025      	beq.n	900096f8 <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
900096ac:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900096b0:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
900096b2:	2f01      	cmp	r7, #1
900096b4:	d035      	beq.n	90009722 <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900096b6:	f892 8000 	ldrb.w	r8, [r2]
900096ba:	fb0e f707 	mul.w	r7, lr, r7
900096be:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900096c0:	f815 8008 	ldrb.w	r8, [r5, r8]
900096c4:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900096c8:	2f64      	cmp	r7, #100	@ 0x64
900096ca:	d936      	bls.n	9000973a <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
900096cc:	fbb1 f7f7 	udiv	r7, r1, r7
900096d0:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900096d2:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
900096d6:	2f01      	cmp	r7, #1
900096d8:	d1b4      	bne.n	90009644 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900096da:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
900096de:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900096e0:	2f01      	cmp	r7, #1
900096e2:	d1c1      	bne.n	90009668 <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900096e4:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
900096e6:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900096e8:	2b01      	cmp	r3, #1
900096ea:	d1ce      	bne.n	9000968a <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900096ec:	3204      	adds	r2, #4
        quality += 100UL;
900096ee:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
900096f0:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900096f4:	42a2      	cmp	r2, r4
900096f6:	d1d9      	bne.n	900096ac <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
900096f8:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
900096fa:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
900096fc:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009700:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90009704:	685a      	ldr	r2, [r3, #4]
90009706:	f002 0203 	and.w	r2, r2, #3
9000970a:	2a03      	cmp	r2, #3
9000970c:	d147      	bne.n	9000979e <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000970e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009710:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009712:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009714:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009718:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000971c:	68da      	ldr	r2, [r3, #12]
9000971e:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009720:	e01d      	b.n	9000975e <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
90009722:	3664      	adds	r6, #100	@ 0x64
90009724:	e7d5      	b.n	900096d2 <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90009726:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000972a:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000972e:	e7a9      	b.n	90009684 <HAL_JPEG_GetInfo.part.0+0x8c>
90009730:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009734:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009738:	e792      	b.n	90009660 <HAL_JPEG_GetInfo.part.0+0x68>
9000973a:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000973e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009742:	e7c6      	b.n	900096d2 <HAL_JPEG_GetInfo.part.0+0xda>
90009744:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90009748:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000974c:	e7a9      	b.n	900096a2 <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000974e:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009750:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009752:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009756:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000975a:	68da      	ldr	r2, [r3, #12]
9000975c:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000975e:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009760:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009762:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009766:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000976a:	699a      	ldr	r2, [r3, #24]
9000976c:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009770:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009772:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009776:	d105      	bne.n	90009784 <HAL_JPEG_GetInfo.part.0+0x18c>
90009778:	b927      	cbnz	r7, 90009784 <HAL_JPEG_GetInfo.part.0+0x18c>
9000977a:	2a00      	cmp	r2, #0
9000977c:	f47f af54 	bne.w	90009628 <HAL_JPEG_GetInfo.part.0+0x30>
90009780:	2102      	movs	r1, #2
90009782:	e752      	b.n	9000962a <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009784:	4321      	orrs	r1, r4
90009786:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
9000978a:	f43f af4d 	beq.w	90009628 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000978e:	433a      	orrs	r2, r7
90009790:	f47f af4a 	bne.w	90009628 <HAL_JPEG_GetInfo.part.0+0x30>
90009794:	2e03      	cmp	r6, #3
90009796:	f47f af47 	bne.w	90009628 <HAL_JPEG_GetInfo.part.0+0x30>
9000979a:	2101      	movs	r1, #1
9000979c:	e745      	b.n	9000962a <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
9000979e:	2001      	movs	r0, #1
}
900097a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900097a4:	9002f1a8 	.word	0x9002f1a8

900097a8 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900097a8:	2800      	cmp	r0, #0
900097aa:	f000 8108 	beq.w	900099be <HAL_JPEG_Init+0x216>
{
900097ae:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
900097b0:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
900097b4:	4605      	mov	r5, r0
900097b6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900097ba:	2b00      	cmp	r3, #0
900097bc:	f000 80fa 	beq.w	900099b4 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
900097c0:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900097c2:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
900097c4:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900097c6:	497f      	ldr	r1, [pc, #508]	@ (900099c4 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900097c8:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
900097cc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900097ce:	f042 0201 	orr.w	r2, r2, #1
900097d2:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900097d4:	6822      	ldr	r2, [r4, #0]
900097d6:	f022 0201 	bic.w	r2, r2, #1
900097da:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900097dc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900097de:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900097e2:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900097e4:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900097e6:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900097ea:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900097ec:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900097ee:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900097f2:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900097f4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900097f6:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900097fa:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900097fc:	4a72      	ldr	r2, [pc, #456]	@ (900099c8 <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900097fe:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009800:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90009802:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009804:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009808:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
9000980c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90009810:	4b6e      	ldr	r3, [pc, #440]	@ (900099cc <HAL_JPEG_Init+0x224>)
90009812:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009816:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000981a:	496d      	ldr	r1, [pc, #436]	@ (900099d0 <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000981c:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009820:	4b6c      	ldr	r3, [pc, #432]	@ (900099d4 <HAL_JPEG_Init+0x22c>)
90009822:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009826:	4a6c      	ldr	r2, [pc, #432]	@ (900099d8 <HAL_JPEG_Init+0x230>)
90009828:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000982c:	4b6b      	ldr	r3, [pc, #428]	@ (900099dc <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000982e:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009832:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90009836:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
9000983a:	4969      	ldr	r1, [pc, #420]	@ (900099e0 <HAL_JPEG_Init+0x238>)
9000983c:	4b69      	ldr	r3, [pc, #420]	@ (900099e4 <HAL_JPEG_Init+0x23c>)
9000983e:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009842:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009846:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000984a:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000984e:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
90009852:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90009856:	4a64      	ldr	r2, [pc, #400]	@ (900099e8 <HAL_JPEG_Init+0x240>)
90009858:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000985c:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90009860:	4303      	orrs	r3, r0
  *address = value;
90009862:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009866:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
9000986a:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000986c:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009870:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009872:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009876:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
9000987a:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000987c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009880:	ea43 030c 	orr.w	r3, r3, ip
90009884:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009888:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000988c:	d1eb      	bne.n	90009866 <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
9000988e:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009892:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009896:	4955      	ldr	r1, [pc, #340]	@ (900099ec <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009898:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
9000989a:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000989c:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
900098a0:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
900098a4:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900098a8:	400b      	ands	r3, r1
  *address = value;
900098aa:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900098ae:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
900098b2:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
900098b6:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900098ba:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
900098be:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
900098c2:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
900098c4:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
900098c8:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
900098cc:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
900098d0:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900098d2:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900098d4:	4b46      	ldr	r3, [pc, #280]	@ (900099f0 <HAL_JPEG_Init+0x248>)
  *address = value;
900098d6:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900098da:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900098de:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
900098e2:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
900098e6:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
900098ea:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
900098ee:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
900098f0:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
900098f4:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
900098f8:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
900098fc:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900098fe:	493d      	ldr	r1, [pc, #244]	@ (900099f4 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009900:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009902:	4b3d      	ldr	r3, [pc, #244]	@ (900099f8 <HAL_JPEG_Init+0x250>)
  *address = value;
90009904:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009908:	4a3c      	ldr	r2, [pc, #240]	@ (900099fc <HAL_JPEG_Init+0x254>)
9000990a:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000990e:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009912:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009916:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
9000991a:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000991e:	4a38      	ldr	r2, [pc, #224]	@ (90009a00 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90009920:	b29b      	uxth	r3, r3
90009922:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009926:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000992a:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000992e:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90009932:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009934:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009938:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000993a:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000993e:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90009942:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009944:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009948:	ea43 030c 	orr.w	r3, r3, ip
9000994c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009950:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009954:	d1eb      	bne.n	9000992e <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009956:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
9000995a:	4923      	ldr	r1, [pc, #140]	@ (900099e8 <HAL_JPEG_Init+0x240>)
9000995c:	4628      	mov	r0, r5
9000995e:	f7ff fd3b 	bl	900093d8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009962:	b118      	cbz	r0, 9000996c <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009964:	2301      	movs	r3, #1
    return HAL_ERROR;
90009966:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009968:	652b      	str	r3, [r5, #80]	@ 0x50
}
9000996a:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000996c:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90009970:	4923      	ldr	r1, [pc, #140]	@ (90009a00 <HAL_JPEG_Init+0x258>)
90009972:	4628      	mov	r0, r5
90009974:	f7ff fd30 	bl	900093d8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009978:	2800      	cmp	r0, #0
9000997a:	d1f3      	bne.n	90009964 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000997c:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90009980:	4920      	ldr	r1, [pc, #128]	@ (90009a04 <HAL_JPEG_Init+0x25c>)
90009982:	4628      	mov	r0, r5
90009984:	f7ff fc7e 	bl	90009284 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009988:	2800      	cmp	r0, #0
9000998a:	d1eb      	bne.n	90009964 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000998c:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90009990:	491d      	ldr	r1, [pc, #116]	@ (90009a08 <HAL_JPEG_Init+0x260>)
90009992:	4628      	mov	r0, r5
90009994:	f7ff fc76 	bl	90009284 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009998:	2800      	cmp	r0, #0
9000999a:	d1e3      	bne.n	90009964 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000999c:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000999e:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900099a0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
900099a4:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
900099a6:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
900099a8:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
900099aa:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
900099ae:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
900099b0:	6568      	str	r0, [r5, #84]	@ 0x54
}
900099b2:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
900099b4:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
900099b8:	f7fa fbfe 	bl	900041b8 <HAL_JPEG_MspInit>
900099bc:	e700      	b.n	900097c0 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
900099be:	2001      	movs	r0, #1
}
900099c0:	4770      	bx	lr
900099c2:	bf00      	nop
900099c4:	9002f168 	.word	0x9002f168
900099c8:	9002f128 	.word	0x9002f128
900099cc:	01050100 	.word	0x01050100
900099d0:	0b0a0908 	.word	0x0b0a0908
900099d4:	07060504 	.word	0x07060504
900099d8:	03020100 	.word	0x03020100
900099dc:	7d010000 	.word	0x7d010000
900099e0:	04040505 	.word	0x04040505
900099e4:	03040203 	.word	0x03040203
900099e8:	9002f29c 	.word	0x9002f29c
900099ec:	ffff0000 	.word	0xffff0000
900099f0:	09080706 	.word	0x09080706
900099f4:	01000404 	.word	0x01000404
900099f8:	04040201 	.word	0x04040201
900099fc:	05070403 	.word	0x05070403
90009a00:	9002f1e8 	.word	0x9002f1e8
90009a04:	9002f36c 	.word	0x9002f36c
90009a08:	9002f350 	.word	0x9002f350

90009a0c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009a0c:	2b00      	cmp	r3, #0
90009a0e:	bf18      	it	ne
90009a10:	2900      	cmpne	r1, #0
90009a12:	d036      	beq.n	90009a82 <HAL_JPEG_Decode_DMA+0x76>
{
90009a14:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009a16:	fab0 f580 	clz	r5, r0
90009a1a:	4604      	mov	r4, r0
90009a1c:	096d      	lsrs	r5, r5, #5
90009a1e:	b370      	cbz	r0, 90009a7e <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90009a20:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009a24:	f1bc 0f01 	cmp.w	ip, #1
90009a28:	d022      	beq.n	90009a70 <HAL_JPEG_Decode_DMA+0x64>
90009a2a:	f04f 0c01 	mov.w	ip, #1
90009a2e:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009a32:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009a36:	f1bc 0f01 	cmp.w	ip, #1
90009a3a:	d117      	bne.n	90009a6c <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009a3c:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009a3e:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009a42:	9b04      	ldr	r3, [sp, #16]
90009a44:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009a46:	2304      	movs	r3, #4
90009a48:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009a4c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009a4e:	f023 030f 	bic.w	r3, r3, #15
90009a52:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009a54:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009a56:	f043 030e 	orr.w	r3, r3, #14
90009a5a:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009a5c:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009a5e:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90009a60:	f7ff fd44 	bl	900094ec <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009a64:	f7ff fd80 	bl	90009568 <JPEG_DMA_StartProcess>
90009a68:	b920      	cbnz	r0, 90009a74 <HAL_JPEG_Decode_DMA+0x68>
}
90009a6a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009a6c:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90009a70:	2002      	movs	r0, #2
}
90009a72:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a74:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009a76:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a7a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009a7e:	2001      	movs	r0, #1
}
90009a80:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009a82:	2001      	movs	r0, #1
}
90009a84:	4770      	bx	lr
90009a86:	bf00      	nop

90009a88 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009a88:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009a8a:	f003 030c 	and.w	r3, r3, #12
90009a8e:	2b0c      	cmp	r3, #12
90009a90:	d01a      	beq.n	90009ac8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009a92:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009a94:	f003 030c 	and.w	r3, r3, #12
90009a98:	2b08      	cmp	r3, #8
90009a9a:	d001      	beq.n	90009aa0 <HAL_JPEG_Pause+0x18>
}
90009a9c:	2000      	movs	r0, #0
90009a9e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009aa0:	07ca      	lsls	r2, r1, #31
90009aa2:	d41f      	bmi.n	90009ae4 <HAL_JPEG_Pause+0x5c>
90009aa4:	f04f 3cff 	mov.w	ip, #4294967295
90009aa8:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009aac:	078b      	lsls	r3, r1, #30
90009aae:	d504      	bpl.n	90009aba <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009ab0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ab2:	4694      	mov	ip, r2
90009ab4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009ab8:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009aba:	6802      	ldr	r2, [r0, #0]
}
90009abc:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009abe:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009ac0:	ea03 030c 	and.w	r3, r3, ip
90009ac4:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009ac6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009ac8:	07cb      	lsls	r3, r1, #31
90009aca:	d503      	bpl.n	90009ad4 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009acc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ace:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009ad2:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009ad4:	0789      	lsls	r1, r1, #30
90009ad6:	d5e1      	bpl.n	90009a9c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009ad8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ada:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009ade:	6543      	str	r3, [r0, #84]	@ 0x54
}
90009ae0:	2000      	movs	r0, #0
90009ae2:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009ae4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ae6:	f06f 0c06 	mvn.w	ip, #6
90009aea:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90009aee:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009af2:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009af4:	e7da      	b.n	90009aac <HAL_JPEG_Pause+0x24>
90009af6:	bf00      	nop

90009af8 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009af8:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009afa:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009afc:	4770      	bx	lr
90009afe:	bf00      	nop

90009b00 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90009b00:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90009b02:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90009b04:	4770      	bx	lr
90009b06:	bf00      	nop

90009b08 <HAL_JPEG_Abort>:
{
90009b08:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90009b0a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90009b0c:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009b0e:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90009b10:	4a32      	ldr	r2, [pc, #200]	@ (90009bdc <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009b12:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009b16:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009b18:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009b1a:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009b1c:	d043      	beq.n	90009ba6 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b1e:	6822      	ldr	r2, [r4, #0]
90009b20:	6813      	ldr	r3, [r2, #0]
90009b22:	f023 0301 	bic.w	r3, r3, #1
90009b26:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90009b28:	f7fd fd3c 	bl	900075a4 <HAL_GetTick>
90009b2c:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009b2e:	e005      	b.n	90009b3c <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90009b30:	f7fd fd38 	bl	900075a4 <HAL_GetTick>
90009b34:	1b40      	subs	r0, r0, r5
90009b36:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90009b3a:	d82b      	bhi.n	90009b94 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009b3c:	6823      	ldr	r3, [r4, #0]
90009b3e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b40:	0612      	lsls	r2, r2, #24
90009b42:	d4f5      	bmi.n	90009b30 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009b44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90009b46:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009b48:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009b4c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009b4e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009b50:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009b54:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009b56:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009b58:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009b5c:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009b5e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009b60:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009b64:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009b66:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009b68:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009b6a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009b6c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90009b70:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90009b72:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009b74:	b138      	cbz	r0, 90009b86 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b76:	2306      	movs	r3, #6
    return HAL_ERROR;
90009b78:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b7a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009b7e:	2300      	movs	r3, #0
90009b80:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009b84:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009b86:	2301      	movs	r3, #1
90009b88:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009b8c:	2300      	movs	r3, #0
90009b8e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009b92:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009b94:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b96:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009b98:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009b9a:	f042 0208 	orr.w	r2, r2, #8
90009b9e:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ba0:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009ba4:	e7ce      	b.n	90009b44 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009ba6:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009ba8:	f001 f986 	bl	9000aeb8 <HAL_MDMA_Abort>
90009bac:	b118      	cbz	r0, 90009bb6 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009bae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009bb0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009bb2:	2b40      	cmp	r3, #64	@ 0x40
90009bb4:	d00d      	beq.n	90009bd2 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009bb6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009bb8:	f001 f97e 	bl	9000aeb8 <HAL_MDMA_Abort>
90009bbc:	2800      	cmp	r0, #0
90009bbe:	d0ae      	beq.n	90009b1e <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009bc0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90009bc2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009bc4:	2b40      	cmp	r3, #64	@ 0x40
90009bc6:	d1aa      	bne.n	90009b1e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009bc8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009bca:	f043 0304 	orr.w	r3, r3, #4
90009bce:	6523      	str	r3, [r4, #80]	@ 0x50
90009bd0:	e7a5      	b.n	90009b1e <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009bd2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009bd4:	f043 0304 	orr.w	r3, r3, #4
90009bd8:	6523      	str	r3, [r4, #80]	@ 0x50
90009bda:	e7ec      	b.n	90009bb6 <HAL_JPEG_Abort+0xae>
90009bdc:	ffff7ff0 	.word	0xffff7ff0

90009be0 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90009be0:	4770      	bx	lr
90009be2:	bf00      	nop

90009be4 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009be4:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009be6:	2101      	movs	r1, #1
{
90009be8:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009bea:	6803      	ldr	r3, [r0, #0]
90009bec:	681a      	ldr	r2, [r3, #0]
90009bee:	f022 0201 	bic.w	r2, r2, #1
90009bf2:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009bf4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009bf6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009bfa:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009bfc:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009c00:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90009c02:	f043 0304 	orr.w	r3, r3, #4
90009c06:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009c08:	f7f8 fa68 	bl	900020dc <HAL_JPEG_ErrorCallback>
}
90009c0c:	bd08      	pop	{r3, pc}
90009c0e:	bf00      	nop

90009c10 <JPEG_MDMAInCpltCallback>:
{
90009c10:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009c12:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90009c14:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009c16:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009c1a:	6822      	ldr	r2, [r4, #0]
90009c1c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009c1e:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90009c22:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009c24:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009c26:	400b      	ands	r3, r1
90009c28:	2b0c      	cmp	r3, #12
90009c2a:	d001      	beq.n	90009c30 <JPEG_MDMAInCpltCallback+0x20>
}
90009c2c:	b003      	add	sp, #12
90009c2e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c30:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009c32:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c34:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009c36:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009c38:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c3a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009c3e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c40:	1a9b      	subs	r3, r3, r2
90009c42:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009c44:	6a21      	ldr	r1, [r4, #32]
90009c46:	f7f8 f97d 	bl	90001f44 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009c4a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009c4c:	42ab      	cmp	r3, r5
90009c4e:	d311      	bcc.n	90009c74 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009c50:	b305      	cbz	r5, 90009c94 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009c52:	fbb3 f2f5 	udiv	r2, r3, r5
90009c56:	fb05 3212 	mls	r2, r5, r2, r3
90009c5a:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009c5c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009c5e:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009c60:	04d1      	lsls	r1, r2, #19
90009c62:	d400      	bmi.n	90009c66 <JPEG_MDMAInCpltCallback+0x56>
90009c64:	b963      	cbnz	r3, 90009c80 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009c66:	6822      	ldr	r2, [r4, #0]
90009c68:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009c6a:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90009c6e:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009c70:	b003      	add	sp, #12
90009c72:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009c74:	b1cb      	cbz	r3, 90009caa <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009c76:	0798      	lsls	r0, r3, #30
90009c78:	d119      	bne.n	90009cae <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009c7a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009c7c:	04d2      	lsls	r2, r2, #19
90009c7e:	d4f2      	bmi.n	90009c66 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009c80:	6822      	ldr	r2, [r4, #0]
90009c82:	2501      	movs	r5, #1
90009c84:	69a1      	ldr	r1, [r4, #24]
90009c86:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009c88:	3240      	adds	r2, #64	@ 0x40
90009c8a:	9500      	str	r5, [sp, #0]
90009c8c:	f001 f8a8 	bl	9000ade0 <HAL_MDMA_Start_IT>
90009c90:	2800      	cmp	r0, #0
90009c92:	d0e8      	beq.n	90009c66 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009c94:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009c96:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009c98:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009c9a:	f043 0304 	orr.w	r3, r3, #4
90009c9e:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ca0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009ca4:	f7f8 fa1a 	bl	900020dc <HAL_JPEG_ErrorCallback>
        return;
90009ca8:	e7c0      	b.n	90009c2c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009caa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009cac:	e7db      	b.n	90009c66 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
90009cae:	f023 0303 	bic.w	r3, r3, #3
90009cb2:	3304      	adds	r3, #4
90009cb4:	e7d2      	b.n	90009c5c <JPEG_MDMAInCpltCallback+0x4c>
90009cb6:	bf00      	nop

90009cb8 <JPEG_DMA_PollResidualData>:
{
90009cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009cba:	6802      	ldr	r2, [r0, #0]
90009cbc:	2610      	movs	r6, #16
{
90009cbe:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009cc0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009cc2:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009cc6:	d11d      	bne.n	90009d04 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009cc8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009cca:	06df      	lsls	r7, r3, #27
90009ccc:	d51a      	bpl.n	90009d04 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009cce:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009cd0:	69e7      	ldr	r7, [r4, #28]
90009cd2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009cd4:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009cd6:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009cd8:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009cda:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009cdc:	6a67      	ldr	r7, [r4, #36]	@ 0x24
90009cde:	69e2      	ldr	r2, [r4, #28]
90009ce0:	443a      	add	r2, r7
90009ce2:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009ce4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009ce6:	69e2      	ldr	r2, [r4, #28]
90009ce8:	4402      	add	r2, r0
90009cea:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009cec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009cee:	69e2      	ldr	r2, [r4, #28]
90009cf0:	440a      	add	r2, r1
90009cf2:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009cf4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009cf6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009cf8:	3304      	adds	r3, #4
90009cfa:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009cfc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009cfe:	4293      	cmp	r3, r2
90009d00:	d021      	beq.n	90009d46 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009d02:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009d04:	3e01      	subs	r6, #1
90009d06:	d1db      	bne.n	90009cc0 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009d08:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009d0a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009d0c:	06d8      	lsls	r0, r3, #27
90009d0e:	d501      	bpl.n	90009d14 <JPEG_DMA_PollResidualData+0x5c>
90009d10:	048b      	lsls	r3, r1, #18
90009d12:	d417      	bmi.n	90009d44 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d14:	6813      	ldr	r3, [r2, #0]
90009d16:	f023 0301 	bic.w	r3, r3, #1
90009d1a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009d1c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009d1e:	b9eb      	cbnz	r3, 90009d5c <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009d20:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009d22:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d24:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d26:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d28:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009d2c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d30:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d34:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d36:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d38:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d3a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d3e:	d00a      	beq.n	90009d56 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009d40:	f7ff ff4e 	bl	90009be0 <HAL_JPEG_EncodeCpltCallback>
}
90009d44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d46:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d48:	4620      	mov	r0, r4
90009d4a:	69e1      	ldr	r1, [r4, #28]
90009d4c:	f7f8 f91a 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009d50:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009d52:	6265      	str	r5, [r4, #36]	@ 0x24
90009d54:	e7d6      	b.n	90009d04 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d56:	f7f8 f9c3 	bl	900020e0 <HAL_JPEG_DecodeCpltCallback>
}
90009d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d5c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d5e:	4620      	mov	r0, r4
90009d60:	69e1      	ldr	r1, [r4, #28]
90009d62:	f7f8 f90f 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009d66:	2300      	movs	r3, #0
90009d68:	6263      	str	r3, [r4, #36]	@ 0x24
90009d6a:	e7d9      	b.n	90009d20 <JPEG_DMA_PollResidualData+0x68>

90009d6c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009d6c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d6e:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90009d72:	d06f      	beq.n	90009e54 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d74:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d76:	f003 030c 	and.w	r3, r3, #12
90009d7a:	2b0c      	cmp	r3, #12
{
90009d7c:	b530      	push	{r4, r5, lr}
90009d7e:	4604      	mov	r4, r0
90009d80:	b083      	sub	sp, #12
90009d82:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d84:	d007      	beq.n	90009d96 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009d86:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d88:	f003 030c 	and.w	r3, r3, #12
90009d8c:	2b08      	cmp	r3, #8
90009d8e:	d035      	beq.n	90009dfc <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90009d90:	2000      	movs	r0, #0
}
90009d92:	b003      	add	sp, #12
90009d94:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009d96:	07c8      	lsls	r0, r1, #31
90009d98:	d415      	bmi.n	90009dc6 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009d9a:	07a9      	lsls	r1, r5, #30
90009d9c:	d5f8      	bpl.n	90009d90 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009d9e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009da0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009da4:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009da6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009da8:	041a      	lsls	r2, r3, #16
90009daa:	d44f      	bmi.n	90009e4c <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009dac:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009dae:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90009db0:	2a00      	cmp	r2, #0
90009db2:	d13a      	bne.n	90009e2a <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009db4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009db6:	2206      	movs	r2, #6
    return HAL_ERROR;
90009db8:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009dba:	f043 0304 	orr.w	r3, r3, #4
90009dbe:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009dc0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009dc4:	e7e5      	b.n	90009d92 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009dc6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009dc8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009dca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009dce:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009dd0:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
90009dd2:	2a00      	cmp	r2, #0
90009dd4:	d0ee      	beq.n	90009db4 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009dd6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009dd8:	fbb3 f1f2 	udiv	r1, r3, r2
90009ddc:	fb02 3211 	mls	r2, r2, r1, r3
90009de0:	1a9b      	subs	r3, r3, r2
90009de2:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90009de4:	2b00      	cmp	r3, #0
90009de6:	d0d8      	beq.n	90009d9a <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009de8:	6822      	ldr	r2, [r4, #0]
90009dea:	2101      	movs	r1, #1
90009dec:	3240      	adds	r2, #64	@ 0x40
90009dee:	9100      	str	r1, [sp, #0]
90009df0:	69a1      	ldr	r1, [r4, #24]
90009df2:	f000 fff5 	bl	9000ade0 <HAL_MDMA_Start_IT>
90009df6:	2800      	cmp	r0, #0
90009df8:	d0cf      	beq.n	90009d9a <HAL_JPEG_Resume+0x2e>
90009dfa:	e7db      	b.n	90009db4 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009dfc:	f011 0101 	ands.w	r1, r1, #1
90009e00:	d011      	beq.n	90009e26 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009e02:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009e04:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009e06:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009e08:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90009e0c:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009e0e:	07ab      	lsls	r3, r5, #30
90009e10:	d504      	bpl.n	90009e1c <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009e12:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90009e14:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009e16:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009e1a:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009e1c:	6822      	ldr	r2, [r4, #0]
90009e1e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009e20:	430b      	orrs	r3, r1
90009e22:	6313      	str	r3, [r2, #48]	@ 0x30
90009e24:	e7b4      	b.n	90009d90 <HAL_JPEG_Resume+0x24>
90009e26:	2228      	movs	r2, #40	@ 0x28
90009e28:	e7f1      	b.n	90009e0e <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009e2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009e2c:	fbb3 f1f2 	udiv	r1, r3, r2
90009e30:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e34:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009e36:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e38:	2201      	movs	r2, #1
90009e3a:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009e3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009e3e:	9200      	str	r2, [sp, #0]
90009e40:	69e2      	ldr	r2, [r4, #28]
90009e42:	f000 ffcd 	bl	9000ade0 <HAL_MDMA_Start_IT>
90009e46:	2800      	cmp	r0, #0
90009e48:	d0a2      	beq.n	90009d90 <HAL_JPEG_Resume+0x24>
90009e4a:	e7b3      	b.n	90009db4 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009e4c:	4620      	mov	r0, r4
90009e4e:	f7ff ff33 	bl	90009cb8 <JPEG_DMA_PollResidualData>
90009e52:	e79d      	b.n	90009d90 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
90009e54:	2001      	movs	r0, #1
}
90009e56:	4770      	bx	lr

90009e58 <JPEG_MDMAOutCpltCallback>:
{
90009e58:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009e5a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90009e5c:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009e5e:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009e62:	6823      	ldr	r3, [r4, #0]
90009e64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e66:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009e6a:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009e6c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009e6e:	400a      	ands	r2, r1
90009e70:	2a0c      	cmp	r2, #12
90009e72:	d001      	beq.n	90009e78 <JPEG_MDMAOutCpltCallback+0x20>
}
90009e74:	b003      	add	sp, #12
90009e76:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009e78:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e7a:	0692      	lsls	r2, r2, #26
90009e7c:	d505      	bpl.n	90009e8a <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009e7e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e80:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009e84:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009e86:	b003      	add	sp, #12
90009e88:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e8a:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009e8c:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e8e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009e90:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009e92:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e94:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009e98:	1a9b      	subs	r3, r3, r2
90009e9a:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009e9c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009e9e:	f7f8 f871 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009ea2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009ea4:	049b      	lsls	r3, r3, #18
90009ea6:	d501      	bpl.n	90009eac <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009ea8:	6823      	ldr	r3, [r4, #0]
90009eaa:	e7e8      	b.n	90009e7e <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009eac:	6821      	ldr	r1, [r4, #0]
90009eae:	2501      	movs	r5, #1
90009eb0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009eb2:	69e2      	ldr	r2, [r4, #28]
90009eb4:	3144      	adds	r1, #68	@ 0x44
90009eb6:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009eb8:	9500      	str	r5, [sp, #0]
90009eba:	f000 ff91 	bl	9000ade0 <HAL_MDMA_Start_IT>
90009ebe:	2800      	cmp	r0, #0
90009ec0:	d0f2      	beq.n	90009ea8 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ec2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ec4:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90009ec6:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ec8:	f043 0304 	orr.w	r3, r3, #4
90009ecc:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ece:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90009ed2:	f7f8 f903 	bl	900020dc <HAL_JPEG_ErrorCallback>
          return;
90009ed6:	e7cd      	b.n	90009e74 <JPEG_MDMAOutCpltCallback+0x1c>

90009ed8 <JPEG_MDMAOutAbortCallback>:
{
90009ed8:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009eda:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009edc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009ede:	041a      	lsls	r2, r3, #16
90009ee0:	d400      	bmi.n	90009ee4 <JPEG_MDMAOutAbortCallback+0xc>
}
90009ee2:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009ee4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009ee6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009ee8:	681b      	ldr	r3, [r3, #0]
90009eea:	695b      	ldr	r3, [r3, #20]
90009eec:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009ef0:	1ad3      	subs	r3, r2, r3
90009ef2:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009ef4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009ef6:	429a      	cmp	r2, r3
90009ef8:	d025      	beq.n	90009f46 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009efa:	6822      	ldr	r2, [r4, #0]
90009efc:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009efe:	f015 0510 	ands.w	r5, r5, #16
90009f02:	d118      	bne.n	90009f36 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009f04:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f06:	bb4b      	cbnz	r3, 90009f5c <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f08:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009f0a:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f0c:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f0e:	f023 0301 	bic.w	r3, r3, #1
90009f12:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009f14:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f16:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f18:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009f1c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f20:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f24:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f26:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f28:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f2a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f2e:	d012      	beq.n	90009f56 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009f30:	f7ff fe56 	bl	90009be0 <HAL_JPEG_EncodeCpltCallback>
}
90009f34:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009f36:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009f38:	049b      	lsls	r3, r3, #18
90009f3a:	d4d2      	bmi.n	90009ee2 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009f3c:	4620      	mov	r0, r4
}
90009f3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009f42:	f7ff beb9 	b.w	90009cb8 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f46:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f48:	4620      	mov	r0, r4
90009f4a:	69e1      	ldr	r1, [r4, #28]
90009f4c:	f7f8 f81a 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009f50:	2300      	movs	r3, #0
90009f52:	6263      	str	r3, [r4, #36]	@ 0x24
90009f54:	e7d1      	b.n	90009efa <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f56:	f7f8 f8c3 	bl	900020e0 <HAL_JPEG_DecodeCpltCallback>
}
90009f5a:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f5c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f5e:	4620      	mov	r0, r4
90009f60:	69e1      	ldr	r1, [r4, #28]
90009f62:	f7f8 f80f 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f66:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009f68:	6265      	str	r5, [r4, #36]	@ 0x24
90009f6a:	e7cd      	b.n	90009f08 <JPEG_MDMAOutAbortCallback+0x30>

90009f6c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f6c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009f6e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f70:	f002 0203 	and.w	r2, r2, #3
90009f74:	2a02      	cmp	r2, #2
{
90009f76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009f7a:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f7c:	d01e      	beq.n	90009fbc <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009f7e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009f80:	04d7      	lsls	r7, r2, #19
90009f82:	d407      	bmi.n	90009f94 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009f84:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009f86:	0796      	lsls	r6, r2, #30
90009f88:	f100 811b 	bmi.w	9000a1c2 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009f8c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009f8e:	0750      	lsls	r0, r2, #29
90009f90:	f100 81cc 	bmi.w	9000a32c <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009f94:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009f96:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009f9a:	d107      	bne.n	90009fac <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009f9c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90009f9e:	f016 0608 	ands.w	r6, r6, #8
90009fa2:	d14a      	bne.n	9000a03a <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009fa4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009fa6:	06d2      	lsls	r2, r2, #27
90009fa8:	f100 81fe 	bmi.w	9000a3a8 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009fac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009fae:	f002 0238 	and.w	r2, r2, #56	@ 0x38
90009fb2:	2a20      	cmp	r2, #32
90009fb4:	d019      	beq.n	90009fea <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
90009fb6:	2000      	movs	r0, #0
}
90009fb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009fbc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009fbe:	0652      	lsls	r2, r2, #25
90009fc0:	d5dd      	bpl.n	90009f7e <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009fc2:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009fc4:	4629      	mov	r1, r5
90009fc6:	f7ff fb17 	bl	900095f8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009fca:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009fcc:	4629      	mov	r1, r5
90009fce:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009fd0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009fd2:	f7f7 ff89 	bl	90001ee8 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009fd6:	6823      	ldr	r3, [r4, #0]
90009fd8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009fda:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009fde:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009fe0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009fe2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009fe6:	639a      	str	r2, [r3, #56]	@ 0x38
90009fe8:	e7c9      	b.n	90009f7e <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009fea:	681a      	ldr	r2, [r3, #0]
90009fec:	f022 0201 	bic.w	r2, r2, #1
90009ff0:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009ff2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009ff4:	f002 020c 	and.w	r2, r2, #12
90009ff8:	2a08      	cmp	r2, #8
90009ffa:	f000 8201 	beq.w	9000a400 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009ffe:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a000:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a004:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a006:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a008:	2b00      	cmp	r3, #0
9000a00a:	f040 81fe 	bne.w	9000a40a <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a00e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a010:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a012:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a014:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a016:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a01a:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a01e:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a022:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a024:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a026:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a028:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a02c:	f000 81e5 	beq.w	9000a3fa <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a030:	f7ff fdd6 	bl	90009be0 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a034:	2001      	movs	r0, #1
}
9000a036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a03a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a03c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a03e:	3220      	adds	r2, #32
9000a040:	4296      	cmp	r6, r2
9000a042:	f0c0 8200 	bcc.w	9000a446 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a046:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a048:	69e1      	ldr	r1, [r4, #28]
9000a04a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a04c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a04e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a050:	69e2      	ldr	r2, [r4, #28]
9000a052:	440a      	add	r2, r1
9000a054:	0a19      	lsrs	r1, r3, #8
9000a056:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a058:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a05a:	69e2      	ldr	r2, [r4, #28]
9000a05c:	440a      	add	r2, r1
9000a05e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a060:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a062:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a064:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a066:	69e2      	ldr	r2, [r4, #28]
9000a068:	440a      	add	r2, r1
9000a06a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a06c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a06e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a070:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a072:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a074:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a076:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a078:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a07a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a07c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a07e:	69e2      	ldr	r2, [r4, #28]
9000a080:	440a      	add	r2, r1
9000a082:	0a19      	lsrs	r1, r3, #8
9000a084:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a086:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a088:	69e2      	ldr	r2, [r4, #28]
9000a08a:	440a      	add	r2, r1
9000a08c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a08e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a090:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a092:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a094:	69e2      	ldr	r2, [r4, #28]
9000a096:	440a      	add	r2, r1
9000a098:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a09a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a09c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a09e:	3304      	adds	r3, #4
9000a0a0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a0a2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0a6:	69e1      	ldr	r1, [r4, #28]
9000a0a8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a0aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0ac:	69e2      	ldr	r2, [r4, #28]
9000a0ae:	440a      	add	r2, r1
9000a0b0:	0a19      	lsrs	r1, r3, #8
9000a0b2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0b6:	69e2      	ldr	r2, [r4, #28]
9000a0b8:	440a      	add	r2, r1
9000a0ba:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0bc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0be:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0c2:	69e2      	ldr	r2, [r4, #28]
9000a0c4:	440a      	add	r2, r1
9000a0c6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a0c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a0ca:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a0cc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0ce:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a0d0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a0d2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0d6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a0d8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0da:	69e2      	ldr	r2, [r4, #28]
9000a0dc:	440a      	add	r2, r1
9000a0de:	0a19      	lsrs	r1, r3, #8
9000a0e0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0e4:	69e2      	ldr	r2, [r4, #28]
9000a0e6:	440a      	add	r2, r1
9000a0e8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0ea:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0ec:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0ee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0f0:	69e2      	ldr	r2, [r4, #28]
9000a0f2:	440a      	add	r2, r1
9000a0f4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a0f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a0f8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a0fa:	3304      	adds	r3, #4
9000a0fc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a0fe:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a100:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a102:	69e1      	ldr	r1, [r4, #28]
9000a104:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a106:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a108:	69e2      	ldr	r2, [r4, #28]
9000a10a:	440a      	add	r2, r1
9000a10c:	0a19      	lsrs	r1, r3, #8
9000a10e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a110:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a112:	69e2      	ldr	r2, [r4, #28]
9000a114:	440a      	add	r2, r1
9000a116:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a118:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a11a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a11c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a11e:	69e2      	ldr	r2, [r4, #28]
9000a120:	440a      	add	r2, r1
9000a122:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a124:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a126:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a128:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a12a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a12c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a12e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a130:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a132:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a134:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a136:	69e2      	ldr	r2, [r4, #28]
9000a138:	440a      	add	r2, r1
9000a13a:	0a19      	lsrs	r1, r3, #8
9000a13c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a13e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a140:	69e2      	ldr	r2, [r4, #28]
9000a142:	440a      	add	r2, r1
9000a144:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a146:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a148:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a14a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a14c:	69e2      	ldr	r2, [r4, #28]
9000a14e:	440a      	add	r2, r1
9000a150:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a152:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a154:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a156:	3304      	adds	r3, #4
9000a158:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a15a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a15c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a15e:	69e1      	ldr	r1, [r4, #28]
9000a160:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a162:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a164:	69e2      	ldr	r2, [r4, #28]
9000a166:	440a      	add	r2, r1
9000a168:	0a19      	lsrs	r1, r3, #8
9000a16a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a16c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a16e:	69e2      	ldr	r2, [r4, #28]
9000a170:	440a      	add	r2, r1
9000a172:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a174:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a176:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a178:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a17a:	69e2      	ldr	r2, [r4, #28]
9000a17c:	440a      	add	r2, r1
9000a17e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a180:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a182:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a184:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a186:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a188:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a18a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a18c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a18e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a190:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a192:	69e2      	ldr	r2, [r4, #28]
9000a194:	440a      	add	r2, r1
9000a196:	0a19      	lsrs	r1, r3, #8
9000a198:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a19a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a19c:	69e2      	ldr	r2, [r4, #28]
9000a19e:	440a      	add	r2, r1
9000a1a0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a1a2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a1a4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a1a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a1a8:	69e2      	ldr	r2, [r4, #28]
9000a1aa:	440a      	add	r2, r1
9000a1ac:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a1ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a1b0:	3304      	adds	r3, #4
9000a1b2:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a1b4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a1b6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a1b8:	429a      	cmp	r2, r3
9000a1ba:	f000 82d8 	beq.w	9000a76e <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a1be:	6823      	ldr	r3, [r4, #0]
9000a1c0:	e6f4      	b.n	90009fac <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a1c2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a1c4:	2a00      	cmp	r2, #0
9000a1c6:	f000 8128 	beq.w	9000a41a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a1ca:	6a21      	ldr	r1, [r4, #32]
9000a1cc:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a1ce:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a1d0:	f240 81b9 	bls.w	9000a546 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a1d4:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a1d6:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a1d8:	04cd      	lsls	r5, r1, #19
9000a1da:	f53f aedb 	bmi.w	90009f94 <JPEG_Process+0x28>
9000a1de:	2a00      	cmp	r2, #0
9000a1e0:	f43f aed8 	beq.w	90009f94 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a1e4:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000a1e6:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1ea:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a1ec:	f200 824e 	bhi.w	9000a68c <JPEG_Process+0x720>
      if (nb_words > 0UL)
9000a1f0:	2a03      	cmp	r2, #3
9000a1f2:	f240 82cc 	bls.w	9000a78e <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
9000a1f6:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a1f8:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1fa:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1fe:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a200:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a202:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a204:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a208:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a20a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a20e:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a212:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a216:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a218:	6a22      	ldr	r2, [r4, #32]
9000a21a:	f102 0204 	add.w	r2, r2, #4
9000a21e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a220:	f43f aeb8 	beq.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a224:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a226:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a228:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a22c:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a22e:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a230:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a232:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a236:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a238:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a23c:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a240:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a244:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a246:	6a22      	ldr	r2, [r4, #32]
9000a248:	f102 0204 	add.w	r2, r2, #4
9000a24c:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a24e:	f43f aea1 	beq.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a252:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a254:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a256:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a25a:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a25c:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a25e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a260:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a264:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a266:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a26a:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a26e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a272:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a274:	6a22      	ldr	r2, [r4, #32]
9000a276:	f102 0204 	add.w	r2, r2, #4
9000a27a:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a27c:	f43f ae8a 	beq.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a280:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a282:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a284:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a288:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a28a:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a28c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a28e:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a292:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a294:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a298:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a29c:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2a0:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a2a2:	6a22      	ldr	r2, [r4, #32]
9000a2a4:	f102 0204 	add.w	r2, r2, #4
9000a2a8:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2aa:	f43f ae73 	beq.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a2ae:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2b0:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2b2:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2b6:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2b8:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2ba:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2bc:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2c0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2c2:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a2c6:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2ca:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2ce:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a2d0:	6a22      	ldr	r2, [r4, #32]
9000a2d2:	f102 0204 	add.w	r2, r2, #4
9000a2d6:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2d8:	f43f ae5c 	beq.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a2dc:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2de:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2e0:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2e4:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2e6:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2e8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2ea:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2ee:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2f0:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000a2f4:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2f8:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2fc:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a2fe:	6a22      	ldr	r2, [r4, #32]
9000a300:	f102 0204 	add.w	r2, r2, #4
9000a304:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a306:	f47f ae45 	bne.w	90009f94 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a30a:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a30c:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a30e:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a310:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a312:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a314:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a316:	7840      	ldrb	r0, [r0, #1]
9000a318:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
9000a31c:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a31e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a322:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a324:	6a22      	ldr	r2, [r4, #32]
9000a326:	3204      	adds	r2, #4
9000a328:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a32a:	e633      	b.n	90009f94 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a32c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a32e:	2a00      	cmp	r2, #0
9000a330:	d073      	beq.n	9000a41a <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a332:	6a21      	ldr	r1, [r4, #32]
9000a334:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a336:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a338:	f200 8182 	bhi.w	9000a640 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a33c:	428a      	cmp	r2, r1
9000a33e:	f040 8104 	bne.w	9000a54a <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a342:	6a21      	ldr	r1, [r4, #32]
9000a344:	4620      	mov	r0, r4
9000a346:	f7f7 fdfd 	bl	90001f44 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a34a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a34c:	2a04      	cmp	r2, #4
9000a34e:	d902      	bls.n	9000a356 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a350:	f022 0203 	bic.w	r2, r2, #3
9000a354:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a356:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a358:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a35a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a35c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a35e:	04c9      	lsls	r1, r1, #19
9000a360:	f53f ae18 	bmi.w	90009f94 <JPEG_Process+0x28>
9000a364:	2a00      	cmp	r2, #0
9000a366:	f43f ae15 	beq.w	90009f94 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a36a:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a36c:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a36e:	f040 8177 	bne.w	9000a660 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a372:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a374:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a376:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a378:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000a37a:	f105 0501 	add.w	r5, r5, #1
9000a37e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a380:	d010      	beq.n	9000a3a4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a382:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a384:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a386:	5d45      	ldrb	r5, [r0, r5]
9000a388:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000a38c:	6a25      	ldr	r5, [r4, #32]
9000a38e:	f105 0501 	add.w	r5, r5, #1
9000a392:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a394:	d106      	bne.n	9000a3a4 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a396:	6a22      	ldr	r2, [r4, #32]
9000a398:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000a39a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a39c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a3a0:	3201      	adds	r2, #1
9000a3a2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a3a4:	6419      	str	r1, [r3, #64]	@ 0x40
9000a3a6:	e5f5      	b.n	90009f94 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a3a8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3aa:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a3ac:	3204      	adds	r2, #4
9000a3ae:	4295      	cmp	r5, r2
9000a3b0:	f0c0 80cd 	bcc.w	9000a54e <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000a3b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3b6:	69e1      	ldr	r1, [r4, #28]
9000a3b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3ba:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a3bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3be:	69e2      	ldr	r2, [r4, #28]
9000a3c0:	440a      	add	r2, r1
9000a3c2:	0a19      	lsrs	r1, r3, #8
9000a3c4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3c6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3c8:	69e2      	ldr	r2, [r4, #28]
9000a3ca:	440a      	add	r2, r1
9000a3cc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3ce:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3d0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3d2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3d4:	69e2      	ldr	r2, [r4, #28]
9000a3d6:	440a      	add	r2, r1
9000a3d8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a3da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a3dc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a3de:	3304      	adds	r3, #4
9000a3e0:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a3e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3e4:	429a      	cmp	r2, r3
9000a3e6:	f47f aeea 	bne.w	9000a1be <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a3ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3ec:	4620      	mov	r0, r4
9000a3ee:	69e1      	ldr	r1, [r4, #28]
9000a3f0:	f7f7 fdc8 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3f4:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a3f6:	6266      	str	r6, [r4, #36]	@ 0x24
9000a3f8:	e5d8      	b.n	90009fac <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a3fa:	f7f7 fe71 	bl	900020e0 <HAL_JPEG_DecodeCpltCallback>
9000a3fe:	e619      	b.n	9000a034 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a400:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a402:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a406:	631a      	str	r2, [r3, #48]	@ 0x30
9000a408:	e5f9      	b.n	90009ffe <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a40a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a40c:	4620      	mov	r0, r4
9000a40e:	69e1      	ldr	r1, [r4, #28]
9000a410:	f7f7 fdb8 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a414:	2300      	movs	r3, #0
9000a416:	6263      	str	r3, [r4, #36]	@ 0x24
9000a418:	e5f9      	b.n	9000a00e <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a41a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a41c:	f002 020c 	and.w	r2, r2, #12
9000a420:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a422:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a424:	f000 812d 	beq.w	9000a682 <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a428:	f002 020c 	and.w	r2, r2, #12
9000a42c:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a42e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a430:	f47f adb0 	bne.w	90009f94 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a434:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a438:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a43a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a43c:	f022 0206 	bic.w	r2, r2, #6
9000a440:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a442:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a444:	e5a6      	b.n	90009f94 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a446:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a448:	4296      	cmp	r6, r2
9000a44a:	f67f adaf 	bls.w	90009fac <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a44e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a450:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a452:	0880      	lsrs	r0, r0, #2
9000a454:	d020      	beq.n	9000a498 <JPEG_Process+0x52c>
9000a456:	4629      	mov	r1, r5
9000a458:	e000      	b.n	9000a45c <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000a45a:	6823      	ldr	r3, [r4, #0]
9000a45c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a45e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a460:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a462:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a464:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a466:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a468:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a46a:	69e2      	ldr	r2, [r4, #28]
9000a46c:	4432      	add	r2, r6
9000a46e:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a472:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a474:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a476:	69e2      	ldr	r2, [r4, #28]
9000a478:	4432      	add	r2, r6
9000a47a:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a47e:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a482:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a484:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a486:	69e2      	ldr	r2, [r4, #28]
9000a488:	4432      	add	r2, r6
9000a48a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a48c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a48e:	f103 0304 	add.w	r3, r3, #4
9000a492:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a494:	d1e1      	bne.n	9000a45a <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a496:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a498:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a49a:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a49c:	429e      	cmp	r6, r3
9000a49e:	f000 816e 	beq.w	9000a77e <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a4a2:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a4a6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a4a8:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a4ac:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a4ae:	d00e      	beq.n	9000a4ce <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a4b0:	f005 0303 	and.w	r3, r5, #3
9000a4b4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a4b6:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a4b8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a4ba:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a4bc:	fa27 f303 	lsr.w	r3, r7, r3
9000a4c0:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a4c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a4c4:	69e1      	ldr	r1, [r4, #28]
9000a4c6:	f103 0301 	add.w	r3, r3, #1
9000a4ca:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a4cc:	d1f0      	bne.n	9000a4b0 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000a4ce:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a4d2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a4d4:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a4d6:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a4da:	f7f7 fd53 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a4de:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a4e0:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000a4e2:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a4e4:	f63f ae6b 	bhi.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a4e8:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000a4ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4ee:	69e0      	ldr	r0, [r4, #28]
9000a4f0:	fa27 f502 	lsr.w	r5, r7, r2
9000a4f4:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a4f6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4f8:	f101 0101 	add.w	r1, r1, #1
9000a4fc:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a4fe:	f43f ae5e 	beq.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a502:	f102 0108 	add.w	r1, r2, #8
9000a506:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a508:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a50a:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a50c:	fa27 f101 	lsr.w	r1, r7, r1
9000a510:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a512:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a514:	f101 0101 	add.w	r1, r1, #1
9000a518:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a51a:	f43f ae50 	beq.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a51e:	3210      	adds	r2, #16
9000a520:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a522:	69e0      	ldr	r0, [r4, #28]
9000a524:	fa27 f202 	lsr.w	r2, r7, r2
9000a528:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a52a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a52c:	3201      	adds	r2, #1
9000a52e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a530:	2e00      	cmp	r6, #0
9000a532:	f47f ae44 	bne.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a536:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a538:	0e3f      	lsrs	r7, r7, #24
9000a53a:	69e2      	ldr	r2, [r4, #28]
9000a53c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a53e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a540:	3301      	adds	r3, #1
9000a542:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a544:	e63b      	b.n	9000a1be <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a546:	428a      	cmp	r2, r1
9000a548:	d07c      	beq.n	9000a644 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a54a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a54c:	e522      	b.n	90009f94 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a54e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a550:	4295      	cmp	r5, r2
9000a552:	f67f ad2b 	bls.w	90009fac <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a556:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a558:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a55a:	0880      	lsrs	r0, r0, #2
9000a55c:	d020      	beq.n	9000a5a0 <JPEG_Process+0x634>
9000a55e:	4631      	mov	r1, r6
9000a560:	e000      	b.n	9000a564 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000a562:	6823      	ldr	r3, [r4, #0]
9000a564:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a566:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a568:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a56a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a56c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a56e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a570:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a572:	69e2      	ldr	r2, [r4, #28]
9000a574:	442a      	add	r2, r5
9000a576:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a57a:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a57c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a57e:	69e2      	ldr	r2, [r4, #28]
9000a580:	442a      	add	r2, r5
9000a582:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a586:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a58a:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a58c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a58e:	69e2      	ldr	r2, [r4, #28]
9000a590:	442a      	add	r2, r5
9000a592:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a594:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a596:	f103 0304 	add.w	r3, r3, #4
9000a59a:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a59c:	d1e1      	bne.n	9000a562 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a59e:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a5a0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a5a2:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a5a4:	429d      	cmp	r5, r3
9000a5a6:	f000 80ea 	beq.w	9000a77e <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a5aa:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a5ae:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a5b0:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a5b4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a5b6:	d00e      	beq.n	9000a5d6 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a5b8:	f006 0303 	and.w	r3, r6, #3
9000a5bc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a5be:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a5c0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a5c2:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a5c4:	fa27 f303 	lsr.w	r3, r7, r3
9000a5c8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a5ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a5cc:	69e1      	ldr	r1, [r4, #28]
9000a5ce:	f103 0301 	add.w	r3, r3, #1
9000a5d2:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a5d4:	d1f0      	bne.n	9000a5b8 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000a5d6:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a5da:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5dc:	4620      	mov	r0, r4
9000a5de:	f7f7 fcd1 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000a5e2:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000a5e6:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a5e8:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000a5ea:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a5ec:	f63f ade7 	bhi.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a5f0:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000a5f4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5f6:	69e0      	ldr	r0, [r4, #28]
9000a5f8:	fa27 f502 	lsr.w	r5, r7, r2
9000a5fc:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a5fe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a600:	f101 0101 	add.w	r1, r1, #1
9000a604:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a606:	f43f adda 	beq.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a60a:	f102 0108 	add.w	r1, r2, #8
9000a60e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a610:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a612:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a614:	fa27 f101 	lsr.w	r1, r7, r1
9000a618:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a61a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a61c:	f101 0101 	add.w	r1, r1, #1
9000a620:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a622:	f43f adcc 	beq.w	9000a1be <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a626:	3210      	adds	r2, #16
9000a628:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a62a:	69e0      	ldr	r0, [r4, #28]
9000a62c:	fa27 f202 	lsr.w	r2, r7, r2
9000a630:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a632:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a634:	3201      	adds	r2, #1
9000a636:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a638:	2b00      	cmp	r3, #0
9000a63a:	f43f af7c 	beq.w	9000a536 <JPEG_Process+0x5ca>
9000a63e:	e5be      	b.n	9000a1be <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a640:	1a52      	subs	r2, r2, r1
9000a642:	e68b      	b.n	9000a35c <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a644:	6a21      	ldr	r1, [r4, #32]
9000a646:	4620      	mov	r0, r4
9000a648:	f7f7 fc7c 	bl	90001f44 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a64c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a64e:	2a04      	cmp	r2, #4
9000a650:	d902      	bls.n	9000a658 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a652:	f022 0203 	bic.w	r2, r2, #3
9000a656:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a658:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a65a:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a65c:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a65e:	e5ba      	b.n	9000a1d6 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000a660:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a662:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a664:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a666:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a668:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a66a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a66c:	7849      	ldrb	r1, [r1, #1]
9000a66e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000a672:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a674:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a678:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a67a:	6a22      	ldr	r2, [r4, #32]
9000a67c:	3204      	adds	r2, #4
9000a67e:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000a680:	e488      	b.n	90009f94 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a682:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a686:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a688:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a68a:	e483      	b.n	90009f94 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
9000a68c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a68e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a690:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a692:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a694:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a696:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a698:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a69a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a69e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6a0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6a4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a6a6:	6a22      	ldr	r2, [r4, #32]
9000a6a8:	3204      	adds	r2, #4
9000a6aa:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a6ac:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6ae:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6b0:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6b2:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6b4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6b6:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a6b8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6ba:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a6be:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6c0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6c4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a6c6:	6a22      	ldr	r2, [r4, #32]
9000a6c8:	3204      	adds	r2, #4
9000a6ca:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a6cc:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6ce:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6d0:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6d2:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6d4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6d6:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a6d8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6da:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a6de:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6e0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6e4:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a6e6:	6a22      	ldr	r2, [r4, #32]
9000a6e8:	3204      	adds	r2, #4
9000a6ea:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a6ec:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6ee:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6f0:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6f2:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6f4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a6f6:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a6f8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a6fa:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a6fe:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a700:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a704:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a706:	6a22      	ldr	r2, [r4, #32]
9000a708:	3204      	adds	r2, #4
9000a70a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a70c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a70e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a710:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a712:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a714:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a716:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a718:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a71a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a71e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a720:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a724:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a726:	6a22      	ldr	r2, [r4, #32]
9000a728:	3204      	adds	r2, #4
9000a72a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a72c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a72e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a730:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a732:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a734:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a736:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a738:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a73a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a73e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a740:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a744:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a746:	6a22      	ldr	r2, [r4, #32]
9000a748:	3204      	adds	r2, #4
9000a74a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a74c:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a74e:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a750:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a752:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a754:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a756:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a758:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a75a:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000a75e:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a760:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a764:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a766:	6a22      	ldr	r2, [r4, #32]
9000a768:	3204      	adds	r2, #4
9000a76a:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a76c:	e5cd      	b.n	9000a30a <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a76e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a770:	4620      	mov	r0, r4
9000a772:	69e1      	ldr	r1, [r4, #28]
9000a774:	f7f7 fc06 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a778:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a77a:	6265      	str	r5, [r4, #36]	@ 0x24
9000a77c:	e416      	b.n	90009fac <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a77e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a780:	4620      	mov	r0, r4
9000a782:	f7f7 fbff 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a786:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a788:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a78a:	6262      	str	r2, [r4, #36]	@ 0x24
9000a78c:	e40e      	b.n	90009fac <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a78e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a790:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a792:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a794:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
9000a796:	f105 0501 	add.w	r5, r5, #1
9000a79a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a79c:	d010      	beq.n	9000a7c0 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a79e:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a7a0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a7a2:	5d4d      	ldrb	r5, [r1, r5]
9000a7a4:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
9000a7a8:	6a25      	ldr	r5, [r4, #32]
9000a7aa:	f105 0501 	add.w	r5, r5, #1
9000a7ae:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a7b0:	d106      	bne.n	9000a7c0 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a7b2:	6a22      	ldr	r2, [r4, #32]
9000a7b4:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
9000a7b6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a7b8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000a7bc:	3201      	adds	r2, #1
9000a7be:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a7c0:	6418      	str	r0, [r3, #64]	@ 0x40
9000a7c2:	f7ff bbe7 	b.w	90009f94 <JPEG_Process+0x28>
9000a7c6:	bf00      	nop

9000a7c8 <HAL_JPEG_IRQHandler>:
{
9000a7c8:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000a7ca:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a7ce:	3b03      	subs	r3, #3
9000a7d0:	2b01      	cmp	r3, #1
9000a7d2:	d900      	bls.n	9000a7d6 <HAL_JPEG_IRQHandler+0xe>
}
9000a7d4:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a7d6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a7d8:	4604      	mov	r4, r0
9000a7da:	f003 030c 	and.w	r3, r3, #12
9000a7de:	2b08      	cmp	r3, #8
9000a7e0:	d050      	beq.n	9000a884 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a7e2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a7e4:	f003 030c 	and.w	r3, r3, #12
9000a7e8:	2b0c      	cmp	r3, #12
9000a7ea:	d1f3      	bne.n	9000a7d4 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a7ec:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a7ee:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a7f0:	f002 0203 	and.w	r2, r2, #3
9000a7f4:	2a02      	cmp	r2, #2
9000a7f6:	d049      	beq.n	9000a88c <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a7f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a7fa:	0692      	lsls	r2, r2, #26
9000a7fc:	d5ea      	bpl.n	9000a7d4 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a7fe:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a800:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a802:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000a806:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a808:	681a      	ldr	r2, [r3, #0]
9000a80a:	f022 0201 	bic.w	r2, r2, #1
9000a80e:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a810:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a812:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a816:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a818:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a81a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a81e:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a820:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a824:	2b02      	cmp	r3, #2
9000a826:	d054      	beq.n	9000a8d2 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a828:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a82a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a82e:	2b02      	cmp	r3, #2
9000a830:	d043      	beq.n	9000a8ba <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a832:	6803      	ldr	r3, [r0, #0]
9000a834:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a836:	695b      	ldr	r3, [r3, #20]
9000a838:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a83c:	1ad3      	subs	r3, r2, r3
9000a83e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a840:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a842:	429a      	cmp	r2, r3
9000a844:	d048      	beq.n	9000a8d8 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a846:	6822      	ldr	r2, [r4, #0]
9000a848:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a84a:	f015 0510 	ands.w	r5, r5, #16
9000a84e:	d138      	bne.n	9000a8c2 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000a850:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a852:	2b00      	cmp	r3, #0
9000a854:	d14b      	bne.n	9000a8ee <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a856:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a858:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a85a:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a85c:	f023 0301 	bic.w	r3, r3, #1
9000a860:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a862:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a864:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a866:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a86a:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a86e:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a872:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a874:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a876:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a878:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a87c:	d034      	beq.n	9000a8e8 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a87e:	f7ff f9af 	bl	90009be0 <HAL_JPEG_EncodeCpltCallback>
}
9000a882:	bd38      	pop	{r3, r4, r5, pc}
9000a884:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a888:	f7ff bb70 	b.w	90009f6c <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a88c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a88e:	0651      	lsls	r1, r2, #25
9000a890:	d5b2      	bpl.n	9000a7f8 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a892:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a894:	4629      	mov	r1, r5
9000a896:	f7fe feaf 	bl	900095f8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a89a:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a89c:	4629      	mov	r1, r5
9000a89e:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a8a0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a8a2:	f7f7 fb21 	bl	90001ee8 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a8a6:	6823      	ldr	r3, [r4, #0]
9000a8a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a8aa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a8ae:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a8b0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a8b2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a8b6:	639a      	str	r2, [r3, #56]	@ 0x38
9000a8b8:	e79e      	b.n	9000a7f8 <HAL_JPEG_IRQHandler+0x30>
}
9000a8ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a8be:	f000 bb35 	b.w	9000af2c <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a8c2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a8c4:	049b      	lsls	r3, r3, #18
9000a8c6:	d485      	bmi.n	9000a7d4 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000a8c8:	4620      	mov	r0, r4
}
9000a8ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a8ce:	f7ff b9f3 	b.w	90009cb8 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a8d2:	f000 fb2b 	bl	9000af2c <HAL_MDMA_Abort_IT>
9000a8d6:	e7a7      	b.n	9000a828 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8d8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a8da:	4620      	mov	r0, r4
9000a8dc:	69e1      	ldr	r1, [r4, #28]
9000a8de:	f7f7 fb51 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a8e2:	2300      	movs	r3, #0
9000a8e4:	6263      	str	r3, [r4, #36]	@ 0x24
9000a8e6:	e7ae      	b.n	9000a846 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a8e8:	f7f7 fbfa 	bl	900020e0 <HAL_JPEG_DecodeCpltCallback>
}
9000a8ec:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8ee:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a8f0:	4620      	mov	r0, r4
9000a8f2:	69e1      	ldr	r1, [r4, #28]
9000a8f4:	f7f7 fb46 	bl	90001f84 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a8f8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a8fa:	6265      	str	r5, [r4, #36]	@ 0x24
9000a8fc:	e7ab      	b.n	9000a856 <HAL_JPEG_IRQHandler+0x8e>
9000a8fe:	bf00      	nop

9000a900 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000a900:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000a904:	4770      	bx	lr
9000a906:	bf00      	nop

9000a908 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a908:	2800      	cmp	r0, #0
9000a90a:	d052      	beq.n	9000a9b2 <HAL_LTDC_Init+0xaa>
{
9000a90c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a90e:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000a912:	4604      	mov	r4, r0
9000a914:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a918:	2b00      	cmp	r3, #0
9000a91a:	d045      	beq.n	9000a9a8 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a91c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a91e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a920:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a924:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a928:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a92a:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a92c:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a92e:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a932:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a934:	6920      	ldr	r0, [r4, #16]
9000a936:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a938:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a93a:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a93c:	6999      	ldr	r1, [r3, #24]
9000a93e:	430a      	orrs	r2, r1
9000a940:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a942:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
9000a946:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a94a:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a94c:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
9000a950:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a954:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a956:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
9000a95a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a95e:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
9000a960:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a962:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a966:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a968:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a96a:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a96e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a972:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a976:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a978:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000a97a:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000a97e:	432a      	orrs	r2, r5
9000a980:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a984:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a986:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a98a:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a98c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a98e:	f042 0206 	orr.w	r2, r2, #6
9000a992:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a994:	699a      	ldr	r2, [r3, #24]
9000a996:	f042 0201 	orr.w	r2, r2, #1
9000a99a:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a99c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a99e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a9a2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000a9a6:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a9a8:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a9ac:	f7f9 fc90 	bl	900042d0 <HAL_LTDC_MspInit>
9000a9b0:	e7b4      	b.n	9000a91c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a9b2:	2001      	movs	r0, #1
}
9000a9b4:	4770      	bx	lr
9000a9b6:	bf00      	nop

9000a9b8 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000a9b8:	4770      	bx	lr
9000a9ba:	bf00      	nop

9000a9bc <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000a9bc:	4770      	bx	lr
9000a9be:	bf00      	nop

9000a9c0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a9c0:	6803      	ldr	r3, [r0, #0]
{
9000a9c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a9c4:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000a9c6:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a9c8:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a9ca:	076a      	lsls	r2, r5, #29
9000a9cc:	d501      	bpl.n	9000a9d2 <HAL_LTDC_IRQHandler+0x12>
9000a9ce:	0771      	lsls	r1, r6, #29
9000a9d0:	d41d      	bmi.n	9000aa0e <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a9d2:	07aa      	lsls	r2, r5, #30
9000a9d4:	d501      	bpl.n	9000a9da <HAL_LTDC_IRQHandler+0x1a>
9000a9d6:	07b3      	lsls	r3, r6, #30
9000a9d8:	d42d      	bmi.n	9000aa36 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a9da:	07e8      	lsls	r0, r5, #31
9000a9dc:	d501      	bpl.n	9000a9e2 <HAL_LTDC_IRQHandler+0x22>
9000a9de:	07f1      	lsls	r1, r6, #31
9000a9e0:	d440      	bmi.n	9000aa64 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a9e2:	072a      	lsls	r2, r5, #28
9000a9e4:	d501      	bpl.n	9000a9ea <HAL_LTDC_IRQHandler+0x2a>
9000a9e6:	0733      	lsls	r3, r6, #28
9000a9e8:	d400      	bmi.n	9000a9ec <HAL_LTDC_IRQHandler+0x2c>
}
9000a9ea:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a9ec:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a9ee:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a9f0:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a9f2:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a9f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a9f6:	f022 0208 	bic.w	r2, r2, #8
9000a9fa:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a9fc:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a9fe:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000aa00:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000aa04:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000aa08:	f7ff ffd8 	bl	9000a9bc <HAL_LTDC_ReloadEventCallback>
}
9000aa0c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000aa0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa10:	f022 0204 	bic.w	r2, r2, #4
9000aa14:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000aa16:	2204      	movs	r2, #4
9000aa18:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000aa1a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000aa1e:	f043 0301 	orr.w	r3, r3, #1
9000aa22:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000aa26:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000aa28:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000aa2c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000aa30:	f7ff ffc2 	bl	9000a9b8 <HAL_LTDC_ErrorCallback>
9000aa34:	e7cd      	b.n	9000a9d2 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000aa36:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000aa38:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000aa3a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa3c:	f022 0202 	bic.w	r2, r2, #2
9000aa40:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000aa42:	2202      	movs	r2, #2
9000aa44:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000aa46:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000aa48:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000aa4c:	f043 0302 	orr.w	r3, r3, #2
9000aa50:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000aa54:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000aa56:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000aa5a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000aa5e:	f7ff ffab 	bl	9000a9b8 <HAL_LTDC_ErrorCallback>
9000aa62:	e7ba      	b.n	9000a9da <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000aa64:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000aa66:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000aa68:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa6a:	f022 0201 	bic.w	r2, r2, #1
9000aa6e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000aa70:	2201      	movs	r2, #1
9000aa72:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000aa74:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000aa76:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000aa7a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000aa7e:	f7f8 fddf 	bl	90003640 <HAL_LTDC_LineEventCallback>
9000aa82:	e7ae      	b.n	9000a9e2 <HAL_LTDC_IRQHandler+0x22>

9000aa84 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000aa84:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000aa88:	2b01      	cmp	r3, #1
9000aa8a:	f000 80b6 	beq.w	9000abfa <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000aa8e:	2302      	movs	r3, #2
{
9000aa90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aa94:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000aa98:	f8d0 9000 	ldr.w	r9, [r0]
{
9000aa9c:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000aa9e:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aaa2:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aaa6:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000aaa8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aaac:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aaae:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000aab2:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000aab4:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000aab8:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aaba:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aabe:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000aac2:	f8df a140 	ldr.w	sl, [pc, #320]	@ 9000ac04 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aac6:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000aaca:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000aace:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aad0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000aad2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000aad6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000aad8:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aada:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000aade:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000aae0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000aae4:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000aae6:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000aae8:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000aaea:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aaee:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000aaf0:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000aaf2:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000aaf4:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000aaf8:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000aafc:	f3c3 430b 	ubfx	r3, r3, #16, #12
9000ab00:	440b      	add	r3, r1
9000ab02:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ab06:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ab0a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ab0e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ab12:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ab16:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ab1a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ab1c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ab20:	68ab      	ldr	r3, [r5, #8]
9000ab22:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000ab26:	3301      	adds	r3, #1
9000ab28:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000ab2c:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000ab2e:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ab30:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ab34:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ab36:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000ab3a:	2907      	cmp	r1, #7
9000ab3c:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ab40:	f023 0307 	bic.w	r3, r3, #7
9000ab44:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ab48:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000ab4c:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000ab50:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000ab54:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000ab58:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000ab5c:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000ab60:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000ab64:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000ab68:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000ab6c:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000ab70:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000ab74:	696b      	ldr	r3, [r5, #20]
9000ab76:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ab7a:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ab7e:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ab80:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ab84:	6a28      	ldr	r0, [r5, #32]
9000ab86:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ab8a:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ab8e:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000ab92:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000ab94:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000ab98:	d82d      	bhi.n	9000abf6 <HAL_LTDC_ConfigLayer+0x172>
9000ab9a:	4b19      	ldr	r3, [pc, #100]	@ (9000ac00 <HAL_LTDC_ConfigLayer+0x17c>)
9000ab9c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000aba0:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000aba2:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000aba4:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000aba8:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000abac:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000abae:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000abb0:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000abb4:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000abb8:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000abbc:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000abc0:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000abc4:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
9000abc8:	f36f 030a 	bfc	r3, #0, #11
9000abcc:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000abd0:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000abd4:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000abd6:	f859 3006 	ldr.w	r3, [r9, r6]
9000abda:	4313      	orrs	r3, r2
9000abdc:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000abe0:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000abe2:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000abe6:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000abe8:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000abec:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000abf0:	b003      	add	sp, #12
9000abf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000abf6:	2301      	movs	r3, #1
9000abf8:	e7d2      	b.n	9000aba0 <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
9000abfa:	2002      	movs	r0, #2
}
9000abfc:	4770      	bx	lr
9000abfe:	bf00      	nop
9000ac00:	9002f388 	.word	0x9002f388
9000ac04:	fffff8f8 	.word	0xfffff8f8

9000ac08 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000ac08:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000ac0c:	2a01      	cmp	r2, #1
9000ac0e:	d019      	beq.n	9000ac44 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ac10:	6802      	ldr	r2, [r0, #0]
9000ac12:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ac14:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000ac16:	f04f 0c00 	mov.w	ip, #0
{
9000ac1a:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ac1c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ac20:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000ac22:	4c09      	ldr	r4, [pc, #36]	@ (9000ac48 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ac24:	f020 0001 	bic.w	r0, r0, #1
9000ac28:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000ac2a:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000ac2c:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000ac2e:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000ac30:	4301      	orrs	r1, r0
9000ac32:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000ac34:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000ac38:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000ac3a:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000ac3e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ac42:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000ac44:	2002      	movs	r0, #2
}
9000ac46:	4770      	bx	lr
9000ac48:	50001000 	.word	0x50001000

9000ac4c <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000ac4c:	b538      	push	{r3, r4, r5, lr}
9000ac4e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000ac50:	f7fc fca8 	bl	900075a4 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000ac54:	2c00      	cmp	r4, #0
9000ac56:	d058      	beq.n	9000ad0a <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000ac58:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000ac5a:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000ac5c:	2100      	movs	r1, #0
9000ac5e:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000ac60:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000ac64:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000ac68:	68da      	ldr	r2, [r3, #12]
9000ac6a:	f022 0201 	bic.w	r2, r2, #1
9000ac6e:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ac70:	e005      	b.n	9000ac7e <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000ac72:	f7fc fc97 	bl	900075a4 <HAL_GetTick>
9000ac76:	1b43      	subs	r3, r0, r5
9000ac78:	2b05      	cmp	r3, #5
9000ac7a:	d841      	bhi.n	9000ad00 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ac7c:	6823      	ldr	r3, [r4, #0]
9000ac7e:	68da      	ldr	r2, [r3, #12]
9000ac80:	07d2      	lsls	r2, r2, #31
9000ac82:	d4f6      	bmi.n	9000ac72 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000ac84:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000ac88:	69e0      	ldr	r0, [r4, #28]
9000ac8a:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000ac8c:	68e1      	ldr	r1, [r4, #12]
9000ac8e:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000ac90:	4302      	orrs	r2, r0
9000ac92:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000ac94:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000ac96:	4302      	orrs	r2, r0
9000ac98:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000ac9a:	4302      	orrs	r2, r0
9000ac9c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000ac9e:	4302      	orrs	r2, r0
9000aca0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000aca2:	4302      	orrs	r2, r0
9000aca4:	68a0      	ldr	r0, [r4, #8]
9000aca6:	4302      	orrs	r2, r0
9000aca8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000acaa:	3801      	subs	r0, #1
9000acac:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000acb0:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000acb2:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000acb4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000acb8:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000acba:	d103      	bne.n	9000acc4 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000acbc:	691a      	ldr	r2, [r3, #16]
9000acbe:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000acc2:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000acc4:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000acc6:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000acc8:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000acca:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000accc:	db1f      	blt.n	9000ad0e <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000acce:	b292      	uxth	r2, r2
9000acd0:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000acd2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000acd4:	2a00      	cmp	r2, #0
9000acd6:	db24      	blt.n	9000ad22 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000acd8:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000acda:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000acde:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000ace2:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ace4:	d029      	beq.n	9000ad3a <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000ace6:	b2c0      	uxtb	r0, r0
9000ace8:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000acea:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000acec:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000acee:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000acf0:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000acf2:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000acf4:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000acf6:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000acfa:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000acfe:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000ad00:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ad02:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000ad04:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ad06:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000ad0a:	2001      	movs	r0, #1
}
9000ad0c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ad0e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000ad10:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ad12:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000ad16:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ad18:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000ad1a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000ad1c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000ad1e:	2a00      	cmp	r2, #0
9000ad20:	dada      	bge.n	9000acd8 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000ad22:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000ad24:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ad26:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000ad2a:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000ad2e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000ad30:	6a19      	ldr	r1, [r3, #32]
9000ad32:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000ad36:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ad38:	d1d5      	bne.n	9000ace6 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000ad3a:	2200      	movs	r2, #0
9000ad3c:	629a      	str	r2, [r3, #40]	@ 0x28
9000ad3e:	e7d4      	b.n	9000acea <HAL_MDMA_Init+0x9e>

9000ad40 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000ad40:	b1f8      	cbz	r0, 9000ad82 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000ad42:	6802      	ldr	r2, [r0, #0]
9000ad44:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000ad46:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000ad48:	68d0      	ldr	r0, [r2, #12]
{
9000ad4a:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000ad4c:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000ad50:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000ad52:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000ad54:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000ad56:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000ad58:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000ad5a:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000ad5c:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000ad5e:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000ad60:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000ad62:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000ad64:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000ad66:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000ad68:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000ad6a:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ad6c:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000ad6e:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000ad72:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000ad76:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000ad7a:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000ad7c:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000ad80:	4770      	bx	lr
    return HAL_ERROR;
9000ad82:	2001      	movs	r0, #1
}
9000ad84:	4770      	bx	lr
9000ad86:	bf00      	nop

9000ad88 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000ad88:	b308      	cbz	r0, 9000adce <HAL_MDMA_ConfigPostRequestMask+0x46>
9000ad8a:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000ad8c:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000ad90:	2801      	cmp	r0, #1
9000ad92:	d01e      	beq.n	9000add2 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000ad94:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000ad96:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000ad9a:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000ad9e:	45f4      	cmp	ip, lr
9000ada0:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000ada4:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000ada8:	d004      	beq.n	9000adb4 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000adaa:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000adac:	2200      	movs	r2, #0
9000adae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000adb2:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000adb4:	681c      	ldr	r4, [r3, #0]
9000adb6:	6925      	ldr	r5, [r4, #16]
9000adb8:	006d      	lsls	r5, r5, #1
9000adba:	d4f7      	bmi.n	9000adac <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000adbc:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000adbe:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000adc0:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000adc2:	b941      	cbnz	r1, 9000add6 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000adc4:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000adc8:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000adca:	2000      	movs	r0, #0
9000adcc:	e7ee      	b.n	9000adac <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000adce:	2001      	movs	r0, #1
9000add0:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000add2:	2002      	movs	r0, #2
}
9000add4:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000add6:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000adda:	6122      	str	r2, [r4, #16]
9000addc:	e7f5      	b.n	9000adca <HAL_MDMA_ConfigPostRequestMask+0x42>
9000adde:	bf00      	nop

9000ade0 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000ade0:	2800      	cmp	r0, #0
9000ade2:	d066      	beq.n	9000aeb2 <HAL_MDMA_Start_IT+0xd2>
{
9000ade4:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000ade6:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000adea:	2c01      	cmp	r4, #1
9000adec:	d009      	beq.n	9000ae02 <HAL_MDMA_Start_IT+0x22>
9000adee:	2401      	movs	r4, #1
9000adf0:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000adf4:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000adf8:	2c01      	cmp	r4, #1
9000adfa:	d005      	beq.n	9000ae08 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000adfc:	2300      	movs	r3, #0
9000adfe:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000ae02:	2002      	movs	r0, #2
}
9000ae04:	bc70      	pop	{r4, r5, r6}
9000ae06:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ae08:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ae0a:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000ae0c:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ae0e:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ae12:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ae16:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ae1a:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ae1e:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000ae20:	6804      	ldr	r4, [r0, #0]
9000ae22:	68e5      	ldr	r5, [r4, #12]
9000ae24:	f025 0501 	bic.w	r5, r5, #1
9000ae28:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ae2a:	6965      	ldr	r5, [r4, #20]
9000ae2c:	f363 0510 	bfi	r5, r3, #0, #17
9000ae30:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ae32:	6963      	ldr	r3, [r4, #20]
9000ae34:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000ae38:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000ae3c:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000ae3e:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000ae40:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000ae42:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000ae44:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ae46:	bf0c      	ite	eq
9000ae48:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ae4c:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ae50:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000ae54:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ae56:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000ae58:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ae5a:	bf0c      	ite	eq
9000ae5c:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000ae60:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000ae64:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000ae66:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000ae68:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000ae6a:	68e3      	ldr	r3, [r4, #12]
9000ae6c:	f043 0306 	orr.w	r3, r3, #6
9000ae70:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000ae72:	b11a      	cbz	r2, 9000ae7c <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000ae74:	68e3      	ldr	r3, [r4, #12]
9000ae76:	f043 0310 	orr.w	r3, r3, #16
9000ae7a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ae7c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000ae7e:	b11b      	cbz	r3, 9000ae88 <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000ae80:	68e3      	ldr	r3, [r4, #12]
9000ae82:	f043 0308 	orr.w	r3, r3, #8
9000ae86:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000ae88:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000ae8a:	b11b      	cbz	r3, 9000ae94 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000ae8c:	68e3      	ldr	r3, [r4, #12]
9000ae8e:	f043 0320 	orr.w	r3, r3, #32
9000ae92:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000ae94:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ae96:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000ae98:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ae9c:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000aea0:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aea2:	d103      	bne.n	9000aeac <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000aea4:	68e3      	ldr	r3, [r4, #12]
9000aea6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aeaa:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000aeac:	2000      	movs	r0, #0
}
9000aeae:	bc70      	pop	{r4, r5, r6}
9000aeb0:	4770      	bx	lr
    return HAL_ERROR;
9000aeb2:	2001      	movs	r0, #1
}
9000aeb4:	4770      	bx	lr
9000aeb6:	bf00      	nop

9000aeb8 <HAL_MDMA_Abort>:
{
9000aeb8:	b538      	push	{r3, r4, r5, lr}
9000aeba:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000aebc:	f7fc fb72 	bl	900075a4 <HAL_GetTick>
  if(hmdma == NULL)
9000aec0:	b334      	cbz	r4, 9000af10 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000aec2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000aec6:	2b02      	cmp	r3, #2
9000aec8:	d11d      	bne.n	9000af06 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000aeca:	6822      	ldr	r2, [r4, #0]
9000aecc:	4605      	mov	r5, r0
9000aece:	68d3      	ldr	r3, [r2, #12]
9000aed0:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000aed4:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000aed6:	68d3      	ldr	r3, [r2, #12]
9000aed8:	f023 0301 	bic.w	r3, r3, #1
9000aedc:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aede:	e005      	b.n	9000aeec <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000aee0:	f7fc fb60 	bl	900075a4 <HAL_GetTick>
9000aee4:	1b43      	subs	r3, r0, r5
9000aee6:	2b05      	cmp	r3, #5
9000aee8:	d814      	bhi.n	9000af14 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aeea:	6822      	ldr	r2, [r4, #0]
9000aeec:	68d3      	ldr	r3, [r2, #12]
9000aeee:	f013 0301 	ands.w	r3, r3, #1
9000aef2:	d1f5      	bne.n	9000aee0 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000aef4:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000aef6:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000aef8:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000aefa:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000aefc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000af00:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000af04:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000af06:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000af08:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000af0a:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000af0c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000af10:	2001      	movs	r0, #1
}
9000af12:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000af14:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000af16:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000af18:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000af1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000af1e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000af22:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000af24:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000af28:	e7f2      	b.n	9000af10 <HAL_MDMA_Abort+0x58>
9000af2a:	bf00      	nop

9000af2c <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000af2c:	4603      	mov	r3, r0
9000af2e:	b128      	cbz	r0, 9000af3c <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000af30:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000af34:	2a02      	cmp	r2, #2
9000af36:	d003      	beq.n	9000af40 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000af38:	2280      	movs	r2, #128	@ 0x80
9000af3a:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000af3c:	2001      	movs	r0, #1
9000af3e:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000af40:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000af42:	2104      	movs	r1, #4
  return HAL_OK;
9000af44:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000af46:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000af4a:	68d3      	ldr	r3, [r2, #12]
9000af4c:	f023 0301 	bic.w	r3, r3, #1
9000af50:	60d3      	str	r3, [r2, #12]
}
9000af52:	4770      	bx	lr

9000af54 <HAL_MDMA_IRQHandler>:
{
9000af54:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000af56:	2300      	movs	r3, #0
{
9000af58:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000af5a:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000af5e:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000af60:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000af62:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000af64:	4b57      	ldr	r3, [pc, #348]	@ (9000b0c4 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000af66:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000af68:	4a57      	ldr	r2, [pc, #348]	@ (9000b0c8 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000af6a:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000af6c:	6823      	ldr	r3, [r4, #0]
9000af6e:	441a      	add	r2, r3
9000af70:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000af74:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000af78:	4202      	tst	r2, r0
9000af7a:	f000 80a0 	beq.w	9000b0be <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000af7e:	681a      	ldr	r2, [r3, #0]
9000af80:	07d1      	lsls	r1, r2, #31
9000af82:	d529      	bpl.n	9000afd8 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000af84:	68da      	ldr	r2, [r3, #12]
9000af86:	0792      	lsls	r2, r2, #30
9000af88:	d526      	bpl.n	9000afd8 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000af8a:	68da      	ldr	r2, [r3, #12]
9000af8c:	f022 0202 	bic.w	r2, r2, #2
9000af90:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000af92:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000af94:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000af96:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000af98:	bf54      	ite	pl
9000af9a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000af9e:	f041 0102 	orrmi.w	r1, r1, #2
9000afa2:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000afa4:	0591      	lsls	r1, r2, #22
9000afa6:	d503      	bpl.n	9000afb0 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000afa8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000afaa:	f041 0104 	orr.w	r1, r1, #4
9000afae:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000afb0:	05d0      	lsls	r0, r2, #23
9000afb2:	d503      	bpl.n	9000afbc <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000afb4:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000afb6:	f041 0108 	orr.w	r1, r1, #8
9000afba:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000afbc:	0551      	lsls	r1, r2, #21
9000afbe:	d503      	bpl.n	9000afc8 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000afc0:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000afc2:	f041 0110 	orr.w	r1, r1, #16
9000afc6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000afc8:	0510      	lsls	r0, r2, #20
9000afca:	d503      	bpl.n	9000afd4 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000afcc:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000afce:	f042 0220 	orr.w	r2, r2, #32
9000afd2:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000afd4:	2201      	movs	r2, #1
9000afd6:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000afd8:	681a      	ldr	r2, [r3, #0]
9000afda:	06d1      	lsls	r1, r2, #27
9000afdc:	d509      	bpl.n	9000aff2 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000afde:	68da      	ldr	r2, [r3, #12]
9000afe0:	0692      	lsls	r2, r2, #26
9000afe2:	d506      	bpl.n	9000aff2 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000afe4:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000afe6:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000afe8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000afea:	b112      	cbz	r2, 9000aff2 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000afec:	4620      	mov	r0, r4
9000afee:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000aff0:	6823      	ldr	r3, [r4, #0]
9000aff2:	681a      	ldr	r2, [r3, #0]
9000aff4:	0710      	lsls	r0, r2, #28
9000aff6:	d509      	bpl.n	9000b00c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000aff8:	68da      	ldr	r2, [r3, #12]
9000affa:	06d1      	lsls	r1, r2, #27
9000affc:	d506      	bpl.n	9000b00c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000affe:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b000:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b002:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b004:	b112      	cbz	r2, 9000b00c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b006:	4620      	mov	r0, r4
9000b008:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b00a:	6823      	ldr	r3, [r4, #0]
9000b00c:	681a      	ldr	r2, [r3, #0]
9000b00e:	0752      	lsls	r2, r2, #29
9000b010:	d509      	bpl.n	9000b026 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b012:	68da      	ldr	r2, [r3, #12]
9000b014:	0710      	lsls	r0, r2, #28
9000b016:	d506      	bpl.n	9000b026 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b018:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b01a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b01c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b01e:	b112      	cbz	r2, 9000b026 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b020:	4620      	mov	r0, r4
9000b022:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b024:	6823      	ldr	r3, [r4, #0]
9000b026:	681a      	ldr	r2, [r3, #0]
9000b028:	0791      	lsls	r1, r2, #30
9000b02a:	d516      	bpl.n	9000b05a <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b02c:	68da      	ldr	r2, [r3, #12]
9000b02e:	0752      	lsls	r2, r2, #29
9000b030:	d513      	bpl.n	9000b05a <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b032:	68da      	ldr	r2, [r3, #12]
9000b034:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b038:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b03a:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b03e:	2a04      	cmp	r2, #4
9000b040:	d034      	beq.n	9000b0ac <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b042:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b044:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b046:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b048:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b04a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b04c:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b050:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b054:	b10b      	cbz	r3, 9000b05a <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b056:	4620      	mov	r0, r4
9000b058:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b05a:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b05c:	2b00      	cmp	r3, #0
9000b05e:	d02e      	beq.n	9000b0be <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b060:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b062:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b064:	4b19      	ldr	r3, [pc, #100]	@ (9000b0cc <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b066:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b06a:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b06e:	68cb      	ldr	r3, [r1, #12]
9000b070:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b074:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b076:	60cb      	str	r3, [r1, #12]
9000b078:	e002      	b.n	9000b080 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b07a:	68cb      	ldr	r3, [r1, #12]
9000b07c:	07d8      	lsls	r0, r3, #31
9000b07e:	d504      	bpl.n	9000b08a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b080:	9b01      	ldr	r3, [sp, #4]
9000b082:	3301      	adds	r3, #1
9000b084:	4293      	cmp	r3, r2
9000b086:	9301      	str	r3, [sp, #4]
9000b088:	d9f7      	bls.n	9000b07a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b08a:	2300      	movs	r3, #0
9000b08c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b090:	68cb      	ldr	r3, [r1, #12]
9000b092:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b094:	bf4c      	ite	mi
9000b096:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b098:	2301      	movpl	r3, #1
9000b09a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b09e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b0a0:	b16b      	cbz	r3, 9000b0be <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b0a2:	4620      	mov	r0, r4
}
9000b0a4:	b003      	add	sp, #12
9000b0a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b0aa:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b0ac:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b0ae:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b0b0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b0b2:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b0b6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b0ba:	2b00      	cmp	r3, #0
9000b0bc:	d1f1      	bne.n	9000b0a2 <HAL_MDMA_IRQHandler+0x14e>
}
9000b0be:	b003      	add	sp, #12
9000b0c0:	bd30      	pop	{r4, r5, pc}
9000b0c2:	bf00      	nop
9000b0c4:	24000078 	.word	0x24000078
9000b0c8:	adffffc0 	.word	0xadffffc0
9000b0cc:	1b4e81b5 	.word	0x1b4e81b5

9000b0d0 <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000b0d0:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b0d2:	4c10      	ldr	r4, [pc, #64]	@ (9000b114 <HAL_PWREx_ConfigSupply+0x44>)
9000b0d4:	68e3      	ldr	r3, [r4, #12]
9000b0d6:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b0da:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b0dc:	d105      	bne.n	9000b0ea <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b0de:	f003 0307 	and.w	r3, r3, #7
9000b0e2:	1a18      	subs	r0, r3, r0
9000b0e4:	bf18      	it	ne
9000b0e6:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000b0e8:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000b0ea:	f023 0307 	bic.w	r3, r3, #7
9000b0ee:	4303      	orrs	r3, r0
9000b0f0:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000b0f2:	f7fc fa57 	bl	900075a4 <HAL_GetTick>
9000b0f6:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b0f8:	e005      	b.n	9000b106 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000b0fa:	f7fc fa53 	bl	900075a4 <HAL_GetTick>
9000b0fe:	1b40      	subs	r0, r0, r5
9000b100:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000b104:	d804      	bhi.n	9000b110 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b106:	6863      	ldr	r3, [r4, #4]
9000b108:	049b      	lsls	r3, r3, #18
9000b10a:	d5f6      	bpl.n	9000b0fa <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000b10c:	2000      	movs	r0, #0
}
9000b10e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000b110:	2001      	movs	r0, #1
}
9000b112:	bd38      	pop	{r3, r4, r5, pc}
9000b114:	58024800 	.word	0x58024800

9000b118 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b118:	4b33      	ldr	r3, [pc, #204]	@ (9000b1e8 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000b11a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b11c:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b11e:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b120:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000b122:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b126:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b128:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b12c:	d036      	beq.n	9000b19c <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b12e:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b132:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b136:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b13a:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b13e:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000b142:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b144:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b148:	ee06 2a90 	vmov	s13, r2
9000b14c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000b150:	d002      	beq.n	9000b158 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000b152:	2902      	cmp	r1, #2
9000b154:	d042      	beq.n	9000b1dc <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000b156:	b319      	cbz	r1, 9000b1a0 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b158:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000b1ec <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000b15c:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000b160:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b162:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b166:	ee07 3a90 	vmov	s15, r3
9000b16a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b16e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b172:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000b176:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000b17a:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b17e:	4b1a      	ldr	r3, [pc, #104]	@ (9000b1e8 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000b180:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b182:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b186:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b188:	ee07 3a10 	vmov	s14, r3
9000b18c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000b190:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000b194:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000b198:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000b19c:	bc30      	pop	{r4, r5}
9000b19e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b1a0:	681a      	ldr	r2, [r3, #0]
9000b1a2:	0692      	lsls	r2, r2, #26
9000b1a4:	d51d      	bpl.n	9000b1e2 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b1a6:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1a8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b1ac:	4a10      	ldr	r2, [pc, #64]	@ (9000b1f0 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b1b0:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b1b8:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1ba:	ee07 3a90 	vmov	s15, r3
9000b1be:	ee06 2a10 	vmov	s12, r2
9000b1c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b1c6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b1ca:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000b1ce:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000b1d2:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000b1d6:	ee67 7a87 	vmul.f32	s15, s15, s14
9000b1da:	e7d0      	b.n	9000b17e <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1dc:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b1f4 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000b1e0:	e7bc      	b.n	9000b15c <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b1e2:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b1f8 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000b1e6:	e7b9      	b.n	9000b15c <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000b1e8:	58024400 	.word	0x58024400
9000b1ec:	4a742400 	.word	0x4a742400
9000b1f0:	03d09000 	.word	0x03d09000
9000b1f4:	4bbebc20 	.word	0x4bbebc20
9000b1f8:	4c742400 	.word	0x4c742400

9000b1fc <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000b1fc:	2800      	cmp	r0, #0
9000b1fe:	f000 82e7 	beq.w	9000b7d0 <HAL_RCC_OscConfig+0x5d4>
{
9000b202:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000b204:	6803      	ldr	r3, [r0, #0]
9000b206:	4604      	mov	r4, r0
9000b208:	07d9      	lsls	r1, r3, #31
9000b20a:	d52e      	bpl.n	9000b26a <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b20c:	4997      	ldr	r1, [pc, #604]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b20e:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b210:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b212:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b216:	2a10      	cmp	r2, #16
9000b218:	f000 80ee 	beq.w	9000b3f8 <HAL_RCC_OscConfig+0x1fc>
9000b21c:	2a18      	cmp	r2, #24
9000b21e:	f000 80e6 	beq.w	9000b3ee <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b222:	6863      	ldr	r3, [r4, #4]
9000b224:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000b228:	f000 8111 	beq.w	9000b44e <HAL_RCC_OscConfig+0x252>
9000b22c:	2b00      	cmp	r3, #0
9000b22e:	f000 8167 	beq.w	9000b500 <HAL_RCC_OscConfig+0x304>
9000b232:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000b236:	4b8d      	ldr	r3, [pc, #564]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b238:	681a      	ldr	r2, [r3, #0]
9000b23a:	f000 8288 	beq.w	9000b74e <HAL_RCC_OscConfig+0x552>
9000b23e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000b242:	601a      	str	r2, [r3, #0]
9000b244:	681a      	ldr	r2, [r3, #0]
9000b246:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000b24a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000b24c:	f7fc f9aa 	bl	900075a4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b250:	4e86      	ldr	r6, [pc, #536]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000b252:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b254:	e005      	b.n	9000b262 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b256:	f7fc f9a5 	bl	900075a4 <HAL_GetTick>
9000b25a:	1b40      	subs	r0, r0, r5
9000b25c:	2864      	cmp	r0, #100	@ 0x64
9000b25e:	f200 814d 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b262:	6833      	ldr	r3, [r6, #0]
9000b264:	039b      	lsls	r3, r3, #14
9000b266:	d5f6      	bpl.n	9000b256 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000b268:	6823      	ldr	r3, [r4, #0]
9000b26a:	079d      	lsls	r5, r3, #30
9000b26c:	d470      	bmi.n	9000b350 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b26e:	06d9      	lsls	r1, r3, #27
9000b270:	d533      	bpl.n	9000b2da <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b272:	4a7e      	ldr	r2, [pc, #504]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b274:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b276:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b278:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b27c:	2b08      	cmp	r3, #8
9000b27e:	f000 80cb 	beq.w	9000b418 <HAL_RCC_OscConfig+0x21c>
9000b282:	2b18      	cmp	r3, #24
9000b284:	f000 80c3 	beq.w	9000b40e <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b288:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000b28a:	4d78      	ldr	r5, [pc, #480]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b28c:	2b00      	cmp	r3, #0
9000b28e:	f000 816f 	beq.w	9000b570 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000b292:	682b      	ldr	r3, [r5, #0]
9000b294:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000b298:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b29a:	f7fc f983 	bl	900075a4 <HAL_GetTick>
9000b29e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b2a0:	e005      	b.n	9000b2ae <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b2a2:	f7fc f97f 	bl	900075a4 <HAL_GetTick>
9000b2a6:	1b80      	subs	r0, r0, r6
9000b2a8:	2802      	cmp	r0, #2
9000b2aa:	f200 8127 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b2ae:	682b      	ldr	r3, [r5, #0]
9000b2b0:	05db      	lsls	r3, r3, #23
9000b2b2:	d5f6      	bpl.n	9000b2a2 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b2b4:	f7fc f97c 	bl	900075b0 <HAL_GetREVID>
9000b2b8:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b2bc:	4298      	cmp	r0, r3
9000b2be:	f200 8267 	bhi.w	9000b790 <HAL_RCC_OscConfig+0x594>
9000b2c2:	6a22      	ldr	r2, [r4, #32]
9000b2c4:	686b      	ldr	r3, [r5, #4]
9000b2c6:	2a20      	cmp	r2, #32
9000b2c8:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b2cc:	bf0c      	ite	eq
9000b2ce:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000b2d2:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000b2d6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b2d8:	6823      	ldr	r3, [r4, #0]
9000b2da:	071d      	lsls	r5, r3, #28
9000b2dc:	d516      	bpl.n	9000b30c <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b2de:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000b2e0:	4d62      	ldr	r5, [pc, #392]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b2e2:	2b00      	cmp	r3, #0
9000b2e4:	f000 8122 	beq.w	9000b52c <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000b2e8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b2ea:	f043 0301 	orr.w	r3, r3, #1
9000b2ee:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b2f0:	f7fc f958 	bl	900075a4 <HAL_GetTick>
9000b2f4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b2f6:	e005      	b.n	9000b304 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b2f8:	f7fc f954 	bl	900075a4 <HAL_GetTick>
9000b2fc:	1b80      	subs	r0, r0, r6
9000b2fe:	2802      	cmp	r0, #2
9000b300:	f200 80fc 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b304:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b306:	0798      	lsls	r0, r3, #30
9000b308:	d5f6      	bpl.n	9000b2f8 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000b30a:	6823      	ldr	r3, [r4, #0]
9000b30c:	069a      	lsls	r2, r3, #26
9000b30e:	d516      	bpl.n	9000b33e <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b310:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000b312:	4d56      	ldr	r5, [pc, #344]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b314:	2b00      	cmp	r3, #0
9000b316:	f000 811a 	beq.w	9000b54e <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000b31a:	682b      	ldr	r3, [r5, #0]
9000b31c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000b320:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b322:	f7fc f93f 	bl	900075a4 <HAL_GetTick>
9000b326:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b328:	e005      	b.n	9000b336 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b32a:	f7fc f93b 	bl	900075a4 <HAL_GetTick>
9000b32e:	1b80      	subs	r0, r0, r6
9000b330:	2802      	cmp	r0, #2
9000b332:	f200 80e3 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b336:	682b      	ldr	r3, [r5, #0]
9000b338:	049f      	lsls	r7, r3, #18
9000b33a:	d5f6      	bpl.n	9000b32a <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000b33c:	6823      	ldr	r3, [r4, #0]
9000b33e:	0759      	lsls	r1, r3, #29
9000b340:	f100 808b 	bmi.w	9000b45a <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000b344:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b346:	2b00      	cmp	r3, #0
9000b348:	f040 80bf 	bne.w	9000b4ca <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000b34c:	2000      	movs	r0, #0
}
9000b34e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b350:	4a46      	ldr	r2, [pc, #280]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b352:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b354:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b356:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000b35a:	d12d      	bne.n	9000b3b8 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b35c:	4b43      	ldr	r3, [pc, #268]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b35e:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b360:	681b      	ldr	r3, [r3, #0]
9000b362:	0759      	lsls	r1, r3, #29
9000b364:	d501      	bpl.n	9000b36a <HAL_RCC_OscConfig+0x16e>
9000b366:	2a00      	cmp	r2, #0
9000b368:	d04f      	beq.n	9000b40a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b36a:	4d40      	ldr	r5, [pc, #256]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b36c:	682b      	ldr	r3, [r5, #0]
9000b36e:	f023 0319 	bic.w	r3, r3, #25
9000b372:	4313      	orrs	r3, r2
9000b374:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b376:	f7fc f915 	bl	900075a4 <HAL_GetTick>
9000b37a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b37c:	e005      	b.n	9000b38a <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b37e:	f7fc f911 	bl	900075a4 <HAL_GetTick>
9000b382:	1b80      	subs	r0, r0, r6
9000b384:	2802      	cmp	r0, #2
9000b386:	f200 80b9 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b38a:	682b      	ldr	r3, [r5, #0]
9000b38c:	075b      	lsls	r3, r3, #29
9000b38e:	d5f6      	bpl.n	9000b37e <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b390:	f7fc f90e 	bl	900075b0 <HAL_GetREVID>
9000b394:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b398:	4298      	cmp	r0, r3
9000b39a:	f200 8110 	bhi.w	9000b5be <HAL_RCC_OscConfig+0x3c2>
9000b39e:	6922      	ldr	r2, [r4, #16]
9000b3a0:	686b      	ldr	r3, [r5, #4]
9000b3a2:	2a40      	cmp	r2, #64	@ 0x40
9000b3a4:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b3a8:	bf0c      	ite	eq
9000b3aa:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000b3ae:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000b3b2:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b3b4:	6823      	ldr	r3, [r4, #0]
9000b3b6:	e75a      	b.n	9000b26e <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b3b8:	2b18      	cmp	r3, #24
9000b3ba:	f000 80fc 	beq.w	9000b5b6 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b3be:	4d2b      	ldr	r5, [pc, #172]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b3c0:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b3c2:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b3c4:	2a00      	cmp	r2, #0
9000b3c6:	f000 80e5 	beq.w	9000b594 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b3ca:	f023 0319 	bic.w	r3, r3, #25
9000b3ce:	4313      	orrs	r3, r2
9000b3d0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b3d2:	f7fc f8e7 	bl	900075a4 <HAL_GetTick>
9000b3d6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b3d8:	e005      	b.n	9000b3e6 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b3da:	f7fc f8e3 	bl	900075a4 <HAL_GetTick>
9000b3de:	1b80      	subs	r0, r0, r6
9000b3e0:	2802      	cmp	r0, #2
9000b3e2:	f200 808b 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b3e6:	682b      	ldr	r3, [r5, #0]
9000b3e8:	075f      	lsls	r7, r3, #29
9000b3ea:	d5f6      	bpl.n	9000b3da <HAL_RCC_OscConfig+0x1de>
9000b3ec:	e7d0      	b.n	9000b390 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b3ee:	f001 0103 	and.w	r1, r1, #3
9000b3f2:	2902      	cmp	r1, #2
9000b3f4:	f47f af15 	bne.w	9000b222 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000b3f8:	4a1c      	ldr	r2, [pc, #112]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b3fa:	6812      	ldr	r2, [r2, #0]
9000b3fc:	0392      	lsls	r2, r2, #14
9000b3fe:	f57f af34 	bpl.w	9000b26a <HAL_RCC_OscConfig+0x6e>
9000b402:	6862      	ldr	r2, [r4, #4]
9000b404:	2a00      	cmp	r2, #0
9000b406:	f47f af30 	bne.w	9000b26a <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000b40a:	2001      	movs	r0, #1
}
9000b40c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b40e:	f002 0203 	and.w	r2, r2, #3
9000b412:	2a01      	cmp	r2, #1
9000b414:	f47f af38 	bne.w	9000b288 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000b418:	4b14      	ldr	r3, [pc, #80]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b41a:	681b      	ldr	r3, [r3, #0]
9000b41c:	05da      	lsls	r2, r3, #23
9000b41e:	d502      	bpl.n	9000b426 <HAL_RCC_OscConfig+0x22a>
9000b420:	69e3      	ldr	r3, [r4, #28]
9000b422:	2b80      	cmp	r3, #128	@ 0x80
9000b424:	d1f1      	bne.n	9000b40a <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b426:	f7fc f8c3 	bl	900075b0 <HAL_GetREVID>
9000b42a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b42e:	4298      	cmp	r0, r3
9000b430:	f200 80ce 	bhi.w	9000b5d0 <HAL_RCC_OscConfig+0x3d4>
9000b434:	6a22      	ldr	r2, [r4, #32]
9000b436:	2a20      	cmp	r2, #32
9000b438:	f000 81b9 	beq.w	9000b7ae <HAL_RCC_OscConfig+0x5b2>
9000b43c:	490b      	ldr	r1, [pc, #44]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b43e:	684b      	ldr	r3, [r1, #4]
9000b440:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b444:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b448:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b44a:	6823      	ldr	r3, [r4, #0]
9000b44c:	e745      	b.n	9000b2da <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b44e:	4a07      	ldr	r2, [pc, #28]	@ (9000b46c <HAL_RCC_OscConfig+0x270>)
9000b450:	6813      	ldr	r3, [r2, #0]
9000b452:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b456:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b458:	e6f8      	b.n	9000b24c <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b45a:	4d05      	ldr	r5, [pc, #20]	@ (9000b470 <HAL_RCC_OscConfig+0x274>)
9000b45c:	682b      	ldr	r3, [r5, #0]
9000b45e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b462:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b464:	f7fc f89e 	bl	900075a4 <HAL_GetTick>
9000b468:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b46a:	e008      	b.n	9000b47e <HAL_RCC_OscConfig+0x282>
9000b46c:	58024400 	.word	0x58024400
9000b470:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b474:	f7fc f896 	bl	900075a4 <HAL_GetTick>
9000b478:	1b80      	subs	r0, r0, r6
9000b47a:	2864      	cmp	r0, #100	@ 0x64
9000b47c:	d83e      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b47e:	682b      	ldr	r3, [r5, #0]
9000b480:	05da      	lsls	r2, r3, #23
9000b482:	d5f7      	bpl.n	9000b474 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b484:	68a3      	ldr	r3, [r4, #8]
9000b486:	2b01      	cmp	r3, #1
9000b488:	f000 818b 	beq.w	9000b7a2 <HAL_RCC_OscConfig+0x5a6>
9000b48c:	2b00      	cmp	r3, #0
9000b48e:	f000 8166 	beq.w	9000b75e <HAL_RCC_OscConfig+0x562>
9000b492:	2b05      	cmp	r3, #5
9000b494:	4b85      	ldr	r3, [pc, #532]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
9000b496:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b498:	f000 8192 	beq.w	9000b7c0 <HAL_RCC_OscConfig+0x5c4>
9000b49c:	f022 0201 	bic.w	r2, r2, #1
9000b4a0:	671a      	str	r2, [r3, #112]	@ 0x70
9000b4a2:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b4a4:	f022 0204 	bic.w	r2, r2, #4
9000b4a8:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000b4aa:	f7fc f87b 	bl	900075a4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b4ae:	4e7f      	ldr	r6, [pc, #508]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b4b0:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000b4b4:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b4b6:	e004      	b.n	9000b4c2 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b4b8:	f7fc f874 	bl	900075a4 <HAL_GetTick>
9000b4bc:	1b40      	subs	r0, r0, r5
9000b4be:	42b8      	cmp	r0, r7
9000b4c0:	d81c      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b4c2:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000b4c4:	079b      	lsls	r3, r3, #30
9000b4c6:	d5f7      	bpl.n	9000b4b8 <HAL_RCC_OscConfig+0x2bc>
9000b4c8:	e73c      	b.n	9000b344 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000b4ca:	4d78      	ldr	r5, [pc, #480]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
9000b4cc:	692a      	ldr	r2, [r5, #16]
9000b4ce:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000b4d2:	2a18      	cmp	r2, #24
9000b4d4:	f000 80ee 	beq.w	9000b6b4 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b4d8:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000b4da:	682b      	ldr	r3, [r5, #0]
9000b4dc:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000b4e0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b4e2:	d07f      	beq.n	9000b5e4 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000b4e4:	f7fc f85e 	bl	900075a4 <HAL_GetTick>
9000b4e8:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b4ea:	682b      	ldr	r3, [r5, #0]
9000b4ec:	019b      	lsls	r3, r3, #6
9000b4ee:	f57f af2d 	bpl.w	9000b34c <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b4f2:	f7fc f857 	bl	900075a4 <HAL_GetTick>
9000b4f6:	1b00      	subs	r0, r0, r4
9000b4f8:	2802      	cmp	r0, #2
9000b4fa:	d9f6      	bls.n	9000b4ea <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000b4fc:	2003      	movs	r0, #3
}
9000b4fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b500:	4d6a      	ldr	r5, [pc, #424]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
9000b502:	682b      	ldr	r3, [r5, #0]
9000b504:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000b508:	602b      	str	r3, [r5, #0]
9000b50a:	682b      	ldr	r3, [r5, #0]
9000b50c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000b510:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b512:	f7fc f847 	bl	900075a4 <HAL_GetTick>
9000b516:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b518:	e004      	b.n	9000b524 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b51a:	f7fc f843 	bl	900075a4 <HAL_GetTick>
9000b51e:	1b80      	subs	r0, r0, r6
9000b520:	2864      	cmp	r0, #100	@ 0x64
9000b522:	d8eb      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b524:	682b      	ldr	r3, [r5, #0]
9000b526:	039f      	lsls	r7, r3, #14
9000b528:	d4f7      	bmi.n	9000b51a <HAL_RCC_OscConfig+0x31e>
9000b52a:	e69d      	b.n	9000b268 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b52c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b52e:	f023 0301 	bic.w	r3, r3, #1
9000b532:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b534:	f7fc f836 	bl	900075a4 <HAL_GetTick>
9000b538:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b53a:	e004      	b.n	9000b546 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b53c:	f7fc f832 	bl	900075a4 <HAL_GetTick>
9000b540:	1b80      	subs	r0, r0, r6
9000b542:	2802      	cmp	r0, #2
9000b544:	d8da      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b546:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b548:	0799      	lsls	r1, r3, #30
9000b54a:	d4f7      	bmi.n	9000b53c <HAL_RCC_OscConfig+0x340>
9000b54c:	e6dd      	b.n	9000b30a <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000b54e:	682b      	ldr	r3, [r5, #0]
9000b550:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000b554:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b556:	f7fc f825 	bl	900075a4 <HAL_GetTick>
9000b55a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b55c:	e004      	b.n	9000b568 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b55e:	f7fc f821 	bl	900075a4 <HAL_GetTick>
9000b562:	1b80      	subs	r0, r0, r6
9000b564:	2802      	cmp	r0, #2
9000b566:	d8c9      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b568:	682b      	ldr	r3, [r5, #0]
9000b56a:	0498      	lsls	r0, r3, #18
9000b56c:	d4f7      	bmi.n	9000b55e <HAL_RCC_OscConfig+0x362>
9000b56e:	e6e5      	b.n	9000b33c <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000b570:	682b      	ldr	r3, [r5, #0]
9000b572:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000b576:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b578:	f7fc f814 	bl	900075a4 <HAL_GetTick>
9000b57c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b57e:	e004      	b.n	9000b58a <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b580:	f7fc f810 	bl	900075a4 <HAL_GetTick>
9000b584:	1b80      	subs	r0, r0, r6
9000b586:	2802      	cmp	r0, #2
9000b588:	d8b8      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b58a:	682b      	ldr	r3, [r5, #0]
9000b58c:	05df      	lsls	r7, r3, #23
9000b58e:	d4f7      	bmi.n	9000b580 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b590:	6823      	ldr	r3, [r4, #0]
9000b592:	e6a2      	b.n	9000b2da <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000b594:	f023 0301 	bic.w	r3, r3, #1
9000b598:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b59a:	f7fc f803 	bl	900075a4 <HAL_GetTick>
9000b59e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b5a0:	e004      	b.n	9000b5ac <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b5a2:	f7fb ffff 	bl	900075a4 <HAL_GetTick>
9000b5a6:	1b80      	subs	r0, r0, r6
9000b5a8:	2802      	cmp	r0, #2
9000b5aa:	d8a7      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b5ac:	682b      	ldr	r3, [r5, #0]
9000b5ae:	0758      	lsls	r0, r3, #29
9000b5b0:	d4f7      	bmi.n	9000b5a2 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b5b2:	6823      	ldr	r3, [r4, #0]
9000b5b4:	e65b      	b.n	9000b26e <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b5b6:	0790      	lsls	r0, r2, #30
9000b5b8:	f47f af01 	bne.w	9000b3be <HAL_RCC_OscConfig+0x1c2>
9000b5bc:	e6ce      	b.n	9000b35c <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b5be:	686b      	ldr	r3, [r5, #4]
9000b5c0:	6922      	ldr	r2, [r4, #16]
9000b5c2:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000b5c6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b5ca:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b5cc:	6823      	ldr	r3, [r4, #0]
9000b5ce:	e64e      	b.n	9000b26e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b5d0:	4a36      	ldr	r2, [pc, #216]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
9000b5d2:	6a21      	ldr	r1, [r4, #32]
9000b5d4:	68d3      	ldr	r3, [r2, #12]
9000b5d6:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b5da:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b5de:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b5e0:	6823      	ldr	r3, [r4, #0]
9000b5e2:	e67a      	b.n	9000b2da <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000b5e4:	f7fb ffde 	bl	900075a4 <HAL_GetTick>
9000b5e8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b5ea:	e004      	b.n	9000b5f6 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b5ec:	f7fb ffda 	bl	900075a4 <HAL_GetTick>
9000b5f0:	1b80      	subs	r0, r0, r6
9000b5f2:	2802      	cmp	r0, #2
9000b5f4:	d882      	bhi.n	9000b4fc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b5f6:	682b      	ldr	r3, [r5, #0]
9000b5f8:	0199      	lsls	r1, r3, #6
9000b5fa:	d4f7      	bmi.n	9000b5ec <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b5fc:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000b5fe:	4b2c      	ldr	r3, [pc, #176]	@ (9000b6b0 <HAL_RCC_OscConfig+0x4b4>)
9000b600:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000b602:	400b      	ands	r3, r1
9000b604:	4313      	orrs	r3, r2
9000b606:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b608:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b60c:	62ab      	str	r3, [r5, #40]	@ 0x28
9000b60e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000b610:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000b614:	3901      	subs	r1, #1
9000b616:	3b01      	subs	r3, #1
9000b618:	3a01      	subs	r2, #1
9000b61a:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000b61e:	025b      	lsls	r3, r3, #9
9000b620:	0412      	lsls	r2, r2, #16
9000b622:	b29b      	uxth	r3, r3
9000b624:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b628:	4313      	orrs	r3, r2
9000b62a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000b62c:	3a01      	subs	r2, #1
9000b62e:	430b      	orrs	r3, r1
9000b630:	0612      	lsls	r2, r2, #24
9000b632:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b636:	4313      	orrs	r3, r2
9000b638:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b63a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b63c:	f023 0301 	bic.w	r3, r3, #1
9000b640:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b642:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000b644:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000b646:	f36f 03cf 	bfc	r3, #3, #13
9000b64a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b64e:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b650:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b652:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000b654:	f023 030c 	bic.w	r3, r3, #12
9000b658:	4313      	orrs	r3, r2
9000b65a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000b65c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b65e:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000b660:	f023 0302 	bic.w	r3, r3, #2
9000b664:	4313      	orrs	r3, r2
9000b666:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000b668:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b66a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b66e:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b670:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b672:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000b676:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000b678:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b67a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000b67e:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000b680:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b682:	f043 0301 	orr.w	r3, r3, #1
9000b686:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000b688:	682b      	ldr	r3, [r5, #0]
9000b68a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000b68e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b690:	f7fb ff88 	bl	900075a4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b694:	4d05      	ldr	r5, [pc, #20]	@ (9000b6ac <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000b696:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b698:	682b      	ldr	r3, [r5, #0]
9000b69a:	019a      	lsls	r2, r3, #6
9000b69c:	f53f ae56 	bmi.w	9000b34c <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b6a0:	f7fb ff80 	bl	900075a4 <HAL_GetTick>
9000b6a4:	1b00      	subs	r0, r0, r4
9000b6a6:	2802      	cmp	r0, #2
9000b6a8:	d9f6      	bls.n	9000b698 <HAL_RCC_OscConfig+0x49c>
9000b6aa:	e727      	b.n	9000b4fc <HAL_RCC_OscConfig+0x300>
9000b6ac:	58024400 	.word	0x58024400
9000b6b0:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b6b4:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000b6b6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000b6b8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b6ba:	f43f aea6 	beq.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b6be:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b6c2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000b6c4:	428b      	cmp	r3, r1
9000b6c6:	f47f aea0 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b6ca:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b6ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b6d0:	429a      	cmp	r2, r3
9000b6d2:	f47f ae9a 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b6d6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000b6d8:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000b6dc:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b6de:	429a      	cmp	r2, r3
9000b6e0:	f47f ae93 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b6e4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000b6e6:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000b6ea:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b6ec:	429a      	cmp	r2, r3
9000b6ee:	f47f ae8c 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b6f2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000b6f4:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000b6f8:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b6fa:	429a      	cmp	r2, r3
9000b6fc:	f47f ae85 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000b700:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000b702:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000b706:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b708:	4298      	cmp	r0, r3
9000b70a:	f47f ae7e 	bne.w	9000b40a <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b70e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b710:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b712:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b716:	429a      	cmp	r2, r3
9000b718:	f43f ae18 	beq.w	9000b34c <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000b71c:	4a2d      	ldr	r2, [pc, #180]	@ (9000b7d4 <HAL_RCC_OscConfig+0x5d8>)
9000b71e:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000b720:	f023 0301 	bic.w	r3, r3, #1
9000b724:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000b726:	f7fb ff3d 	bl	900075a4 <HAL_GetTick>
9000b72a:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000b72c:	f7fb ff3a 	bl	900075a4 <HAL_GetTick>
9000b730:	42a8      	cmp	r0, r5
9000b732:	d0fb      	beq.n	9000b72c <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b734:	4a27      	ldr	r2, [pc, #156]	@ (9000b7d4 <HAL_RCC_OscConfig+0x5d8>)
9000b736:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b738:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000b73a:	f36f 03cf 	bfc	r3, #3, #13
9000b73e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000b742:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000b744:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000b746:	f043 0301 	orr.w	r3, r3, #1
9000b74a:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000b74c:	e5fe      	b.n	9000b34c <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b74e:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000b752:	601a      	str	r2, [r3, #0]
9000b754:	681a      	ldr	r2, [r3, #0]
9000b756:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000b75a:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b75c:	e576      	b.n	9000b24c <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b75e:	4d1d      	ldr	r5, [pc, #116]	@ (9000b7d4 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b760:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b764:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b766:	f023 0301 	bic.w	r3, r3, #1
9000b76a:	672b      	str	r3, [r5, #112]	@ 0x70
9000b76c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b76e:	f023 0304 	bic.w	r3, r3, #4
9000b772:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000b774:	f7fb ff16 	bl	900075a4 <HAL_GetTick>
9000b778:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b77a:	e005      	b.n	9000b788 <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b77c:	f7fb ff12 	bl	900075a4 <HAL_GetTick>
9000b780:	1b80      	subs	r0, r0, r6
9000b782:	42b8      	cmp	r0, r7
9000b784:	f63f aeba 	bhi.w	9000b4fc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b788:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b78a:	0798      	lsls	r0, r3, #30
9000b78c:	d4f6      	bmi.n	9000b77c <HAL_RCC_OscConfig+0x580>
9000b78e:	e5d9      	b.n	9000b344 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b790:	68eb      	ldr	r3, [r5, #12]
9000b792:	6a22      	ldr	r2, [r4, #32]
9000b794:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b798:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b79c:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b79e:	6823      	ldr	r3, [r4, #0]
9000b7a0:	e59b      	b.n	9000b2da <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b7a2:	4a0c      	ldr	r2, [pc, #48]	@ (9000b7d4 <HAL_RCC_OscConfig+0x5d8>)
9000b7a4:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000b7a6:	f043 0301 	orr.w	r3, r3, #1
9000b7aa:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b7ac:	e67d      	b.n	9000b4aa <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b7ae:	4a09      	ldr	r2, [pc, #36]	@ (9000b7d4 <HAL_RCC_OscConfig+0x5d8>)
9000b7b0:	6853      	ldr	r3, [r2, #4]
9000b7b2:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b7b6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000b7ba:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b7bc:	6823      	ldr	r3, [r4, #0]
9000b7be:	e58c      	b.n	9000b2da <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b7c0:	f042 0204 	orr.w	r2, r2, #4
9000b7c4:	671a      	str	r2, [r3, #112]	@ 0x70
9000b7c6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b7c8:	f042 0201 	orr.w	r2, r2, #1
9000b7cc:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b7ce:	e66c      	b.n	9000b4aa <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000b7d0:	2001      	movs	r0, #1
}
9000b7d2:	4770      	bx	lr
9000b7d4:	58024400 	.word	0x58024400

9000b7d8 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b7d8:	4a3f      	ldr	r2, [pc, #252]	@ (9000b8d8 <HAL_RCC_GetSysClockFreq+0x100>)
9000b7da:	6913      	ldr	r3, [r2, #16]
9000b7dc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b7e0:	2b10      	cmp	r3, #16
9000b7e2:	d04f      	beq.n	9000b884 <HAL_RCC_GetSysClockFreq+0xac>
9000b7e4:	2b18      	cmp	r3, #24
9000b7e6:	d00a      	beq.n	9000b7fe <HAL_RCC_GetSysClockFreq+0x26>
9000b7e8:	2b00      	cmp	r3, #0
9000b7ea:	d14d      	bne.n	9000b888 <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b7ec:	6813      	ldr	r3, [r2, #0]
9000b7ee:	0699      	lsls	r1, r3, #26
9000b7f0:	d54c      	bpl.n	9000b88c <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b7f2:	6813      	ldr	r3, [r2, #0]
9000b7f4:	4839      	ldr	r0, [pc, #228]	@ (9000b8dc <HAL_RCC_GetSysClockFreq+0x104>)
9000b7f6:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b7fa:	40d8      	lsrs	r0, r3
9000b7fc:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b7fe:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000b800:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b802:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b804:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000b806:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b80a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b80c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b810:	d036      	beq.n	9000b880 <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b812:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b816:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b81a:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b81e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b822:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000b826:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b828:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b82c:	ee06 3a90 	vmov	s13, r3
9000b830:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000b834:	d002      	beq.n	9000b83c <HAL_RCC_GetSysClockFreq+0x64>
9000b836:	2902      	cmp	r1, #2
9000b838:	d048      	beq.n	9000b8cc <HAL_RCC_GetSysClockFreq+0xf4>
9000b83a:	b349      	cbz	r1, 9000b890 <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b83c:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000b8e0 <HAL_RCC_GetSysClockFreq+0x108>
9000b840:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000b844:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000b846:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b84a:	ee07 3a10 	vmov	s14, r3
9000b84e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b852:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b856:	ee37 7a26 	vadd.f32	s14, s14, s13
9000b85a:	ee37 7a25 	vadd.f32	s14, s14, s11
9000b85e:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b862:	4b1d      	ldr	r3, [pc, #116]	@ (9000b8d8 <HAL_RCC_GetSysClockFreq+0x100>)
9000b864:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b866:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b86a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b86c:	ee07 3a90 	vmov	s15, r3
9000b870:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000b874:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000b878:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b87c:	ee17 0a90 	vmov	r0, s15
}
9000b880:	bc30      	pop	{r4, r5}
9000b882:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b884:	4817      	ldr	r0, [pc, #92]	@ (9000b8e4 <HAL_RCC_GetSysClockFreq+0x10c>)
9000b886:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000b888:	4817      	ldr	r0, [pc, #92]	@ (9000b8e8 <HAL_RCC_GetSysClockFreq+0x110>)
9000b88a:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b88c:	4813      	ldr	r0, [pc, #76]	@ (9000b8dc <HAL_RCC_GetSysClockFreq+0x104>)
}
9000b88e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b890:	6813      	ldr	r3, [r2, #0]
9000b892:	069b      	lsls	r3, r3, #26
9000b894:	d51d      	bpl.n	9000b8d2 <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b896:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b898:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b89c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b89e:	490f      	ldr	r1, [pc, #60]	@ (9000b8dc <HAL_RCC_GetSysClockFreq+0x104>)
9000b8a0:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b8a4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b8a8:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b8aa:	ee07 3a10 	vmov	s14, r3
9000b8ae:	ee06 1a10 	vmov	s12, r1
9000b8b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b8b6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b8ba:	ee77 6a26 	vadd.f32	s13, s14, s13
9000b8be:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b8c2:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000b8c6:	ee27 7a27 	vmul.f32	s14, s14, s15
9000b8ca:	e7ca      	b.n	9000b862 <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b8cc:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000b8ec <HAL_RCC_GetSysClockFreq+0x114>
9000b8d0:	e7b6      	b.n	9000b840 <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b8d2:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000b8f0 <HAL_RCC_GetSysClockFreq+0x118>
9000b8d6:	e7b3      	b.n	9000b840 <HAL_RCC_GetSysClockFreq+0x68>
9000b8d8:	58024400 	.word	0x58024400
9000b8dc:	03d09000 	.word	0x03d09000
9000b8e0:	4a742400 	.word	0x4a742400
9000b8e4:	017d7840 	.word	0x017d7840
9000b8e8:	003d0900 	.word	0x003d0900
9000b8ec:	4bbebc20 	.word	0x4bbebc20
9000b8f0:	4c742400 	.word	0x4c742400

9000b8f4 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b8f4:	2800      	cmp	r0, #0
9000b8f6:	f000 810e 	beq.w	9000bb16 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b8fa:	4a8d      	ldr	r2, [pc, #564]	@ (9000bb30 <HAL_RCC_ClockConfig+0x23c>)
9000b8fc:	6813      	ldr	r3, [r2, #0]
9000b8fe:	f003 030f 	and.w	r3, r3, #15
9000b902:	428b      	cmp	r3, r1
{
9000b904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b908:	4604      	mov	r4, r0
9000b90a:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b90c:	d20c      	bcs.n	9000b928 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b90e:	6813      	ldr	r3, [r2, #0]
9000b910:	f023 030f 	bic.w	r3, r3, #15
9000b914:	430b      	orrs	r3, r1
9000b916:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b918:	6813      	ldr	r3, [r2, #0]
9000b91a:	f003 030f 	and.w	r3, r3, #15
9000b91e:	428b      	cmp	r3, r1
9000b920:	d002      	beq.n	9000b928 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b922:	2001      	movs	r0, #1
}
9000b924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b928:	6823      	ldr	r3, [r4, #0]
9000b92a:	0758      	lsls	r0, r3, #29
9000b92c:	d50b      	bpl.n	9000b946 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b92e:	4981      	ldr	r1, [pc, #516]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b930:	6920      	ldr	r0, [r4, #16]
9000b932:	698a      	ldr	r2, [r1, #24]
9000b934:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b938:	4290      	cmp	r0, r2
9000b93a:	d904      	bls.n	9000b946 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b93c:	698a      	ldr	r2, [r1, #24]
9000b93e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b942:	4302      	orrs	r2, r0
9000b944:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b946:	0719      	lsls	r1, r3, #28
9000b948:	d50b      	bpl.n	9000b962 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b94a:	497a      	ldr	r1, [pc, #488]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b94c:	6960      	ldr	r0, [r4, #20]
9000b94e:	69ca      	ldr	r2, [r1, #28]
9000b950:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b954:	4290      	cmp	r0, r2
9000b956:	d904      	bls.n	9000b962 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b958:	69ca      	ldr	r2, [r1, #28]
9000b95a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b95e:	4302      	orrs	r2, r0
9000b960:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b962:	06da      	lsls	r2, r3, #27
9000b964:	d50b      	bpl.n	9000b97e <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b966:	4973      	ldr	r1, [pc, #460]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b968:	69a0      	ldr	r0, [r4, #24]
9000b96a:	69ca      	ldr	r2, [r1, #28]
9000b96c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b970:	4290      	cmp	r0, r2
9000b972:	d904      	bls.n	9000b97e <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b974:	69ca      	ldr	r2, [r1, #28]
9000b976:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000b97a:	4302      	orrs	r2, r0
9000b97c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b97e:	069f      	lsls	r7, r3, #26
9000b980:	d50b      	bpl.n	9000b99a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b982:	496c      	ldr	r1, [pc, #432]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b984:	69e0      	ldr	r0, [r4, #28]
9000b986:	6a0a      	ldr	r2, [r1, #32]
9000b988:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b98c:	4290      	cmp	r0, r2
9000b98e:	d904      	bls.n	9000b99a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b990:	6a0a      	ldr	r2, [r1, #32]
9000b992:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b996:	4302      	orrs	r2, r0
9000b998:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b99a:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b99c:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b9a0:	f140 80ab 	bpl.w	9000bafa <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b9a4:	4e63      	ldr	r6, [pc, #396]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b9a6:	68e0      	ldr	r0, [r4, #12]
9000b9a8:	69b1      	ldr	r1, [r6, #24]
9000b9aa:	f001 010f 	and.w	r1, r1, #15
9000b9ae:	4288      	cmp	r0, r1
9000b9b0:	d904      	bls.n	9000b9bc <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b9b2:	69b1      	ldr	r1, [r6, #24]
9000b9b4:	f021 010f 	bic.w	r1, r1, #15
9000b9b8:	4301      	orrs	r1, r0
9000b9ba:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b9bc:	2a00      	cmp	r2, #0
9000b9be:	d030      	beq.n	9000ba22 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b9c0:	4a5c      	ldr	r2, [pc, #368]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000b9c2:	68a1      	ldr	r1, [r4, #8]
9000b9c4:	6993      	ldr	r3, [r2, #24]
9000b9c6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000b9ca:	430b      	orrs	r3, r1
9000b9cc:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b9ce:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b9d0:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b9d2:	2902      	cmp	r1, #2
9000b9d4:	f000 80a1 	beq.w	9000bb1a <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b9d8:	2903      	cmp	r1, #3
9000b9da:	f000 8098 	beq.w	9000bb0e <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b9de:	2901      	cmp	r1, #1
9000b9e0:	f000 80a1 	beq.w	9000bb26 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b9e4:	075f      	lsls	r7, r3, #29
9000b9e6:	d59c      	bpl.n	9000b922 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b9e8:	4e52      	ldr	r6, [pc, #328]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b9ea:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b9ee:	6933      	ldr	r3, [r6, #16]
9000b9f0:	f023 0307 	bic.w	r3, r3, #7
9000b9f4:	430b      	orrs	r3, r1
9000b9f6:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b9f8:	f7fb fdd4 	bl	900075a4 <HAL_GetTick>
9000b9fc:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b9fe:	e005      	b.n	9000ba0c <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ba00:	f7fb fdd0 	bl	900075a4 <HAL_GetTick>
9000ba04:	1bc0      	subs	r0, r0, r7
9000ba06:	4540      	cmp	r0, r8
9000ba08:	f200 808b 	bhi.w	9000bb22 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ba0c:	6933      	ldr	r3, [r6, #16]
9000ba0e:	6862      	ldr	r2, [r4, #4]
9000ba10:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ba14:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ba18:	d1f2      	bne.n	9000ba00 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ba1a:	6823      	ldr	r3, [r4, #0]
9000ba1c:	079e      	lsls	r6, r3, #30
9000ba1e:	d506      	bpl.n	9000ba2e <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ba20:	68e0      	ldr	r0, [r4, #12]
9000ba22:	4944      	ldr	r1, [pc, #272]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000ba24:	698a      	ldr	r2, [r1, #24]
9000ba26:	f002 020f 	and.w	r2, r2, #15
9000ba2a:	4290      	cmp	r0, r2
9000ba2c:	d369      	bcc.n	9000bb02 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ba2e:	4940      	ldr	r1, [pc, #256]	@ (9000bb30 <HAL_RCC_ClockConfig+0x23c>)
9000ba30:	680a      	ldr	r2, [r1, #0]
9000ba32:	f002 020f 	and.w	r2, r2, #15
9000ba36:	42aa      	cmp	r2, r5
9000ba38:	d90a      	bls.n	9000ba50 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ba3a:	680a      	ldr	r2, [r1, #0]
9000ba3c:	f022 020f 	bic.w	r2, r2, #15
9000ba40:	432a      	orrs	r2, r5
9000ba42:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ba44:	680a      	ldr	r2, [r1, #0]
9000ba46:	f002 020f 	and.w	r2, r2, #15
9000ba4a:	42aa      	cmp	r2, r5
9000ba4c:	f47f af69 	bne.w	9000b922 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ba50:	0758      	lsls	r0, r3, #29
9000ba52:	d50b      	bpl.n	9000ba6c <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ba54:	4937      	ldr	r1, [pc, #220]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000ba56:	6920      	ldr	r0, [r4, #16]
9000ba58:	698a      	ldr	r2, [r1, #24]
9000ba5a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ba5e:	4290      	cmp	r0, r2
9000ba60:	d204      	bcs.n	9000ba6c <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ba62:	698a      	ldr	r2, [r1, #24]
9000ba64:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ba68:	4302      	orrs	r2, r0
9000ba6a:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ba6c:	0719      	lsls	r1, r3, #28
9000ba6e:	d50b      	bpl.n	9000ba88 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ba70:	4930      	ldr	r1, [pc, #192]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000ba72:	6960      	ldr	r0, [r4, #20]
9000ba74:	69ca      	ldr	r2, [r1, #28]
9000ba76:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ba7a:	4290      	cmp	r0, r2
9000ba7c:	d204      	bcs.n	9000ba88 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ba7e:	69ca      	ldr	r2, [r1, #28]
9000ba80:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ba84:	4302      	orrs	r2, r0
9000ba86:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ba88:	06da      	lsls	r2, r3, #27
9000ba8a:	d50b      	bpl.n	9000baa4 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ba8c:	4929      	ldr	r1, [pc, #164]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000ba8e:	69a0      	ldr	r0, [r4, #24]
9000ba90:	69ca      	ldr	r2, [r1, #28]
9000ba92:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ba96:	4290      	cmp	r0, r2
9000ba98:	d204      	bcs.n	9000baa4 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ba9a:	69ca      	ldr	r2, [r1, #28]
9000ba9c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000baa0:	4302      	orrs	r2, r0
9000baa2:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000baa4:	069b      	lsls	r3, r3, #26
9000baa6:	d50b      	bpl.n	9000bac0 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000baa8:	4a22      	ldr	r2, [pc, #136]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000baaa:	69e1      	ldr	r1, [r4, #28]
9000baac:	6a13      	ldr	r3, [r2, #32]
9000baae:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000bab2:	4299      	cmp	r1, r3
9000bab4:	d204      	bcs.n	9000bac0 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000bab6:	6a13      	ldr	r3, [r2, #32]
9000bab8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000babc:	430b      	orrs	r3, r1
9000babe:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000bac0:	f7ff fe8a 	bl	9000b7d8 <HAL_RCC_GetSysClockFreq>
9000bac4:	4a1b      	ldr	r2, [pc, #108]	@ (9000bb34 <HAL_RCC_ClockConfig+0x240>)
9000bac6:	4603      	mov	r3, r0
9000bac8:	481b      	ldr	r0, [pc, #108]	@ (9000bb38 <HAL_RCC_ClockConfig+0x244>)
9000baca:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bacc:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000bace:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000bad2:	4d1a      	ldr	r5, [pc, #104]	@ (9000bb3c <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bad4:	f002 020f 	and.w	r2, r2, #15
9000bad8:	4c19      	ldr	r4, [pc, #100]	@ (9000bb40 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000bada:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000badc:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000bade:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000bae2:	4818      	ldr	r0, [pc, #96]	@ (9000bb44 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bae4:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000bae8:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000baea:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000baec:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000baee:	40d3      	lsrs	r3, r2
9000baf0:	6023      	str	r3, [r4, #0]
}
9000baf2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000baf6:	f7f8 bdab 	b.w	90004650 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000bafa:	2a00      	cmp	r2, #0
9000bafc:	f47f af60 	bne.w	9000b9c0 <HAL_RCC_ClockConfig+0xcc>
9000bb00:	e795      	b.n	9000ba2e <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000bb02:	698a      	ldr	r2, [r1, #24]
9000bb04:	f022 020f 	bic.w	r2, r2, #15
9000bb08:	4302      	orrs	r2, r0
9000bb0a:	618a      	str	r2, [r1, #24]
9000bb0c:	e78f      	b.n	9000ba2e <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000bb0e:	019a      	lsls	r2, r3, #6
9000bb10:	f53f af6a 	bmi.w	9000b9e8 <HAL_RCC_ClockConfig+0xf4>
9000bb14:	e705      	b.n	9000b922 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000bb16:	2001      	movs	r0, #1
}
9000bb18:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bb1a:	0398      	lsls	r0, r3, #14
9000bb1c:	f53f af64 	bmi.w	9000b9e8 <HAL_RCC_ClockConfig+0xf4>
9000bb20:	e6ff      	b.n	9000b922 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000bb22:	2003      	movs	r0, #3
9000bb24:	e6fe      	b.n	9000b924 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bb26:	05db      	lsls	r3, r3, #23
9000bb28:	f53f af5e 	bmi.w	9000b9e8 <HAL_RCC_ClockConfig+0xf4>
9000bb2c:	e6f9      	b.n	9000b922 <HAL_RCC_ClockConfig+0x2e>
9000bb2e:	bf00      	nop
9000bb30:	52002000 	.word	0x52002000
9000bb34:	58024400 	.word	0x58024400
9000bb38:	9002f118 	.word	0x9002f118
9000bb3c:	24000078 	.word	0x24000078
9000bb40:	24000074 	.word	0x24000074
9000bb44:	24000080 	.word	0x24000080

9000bb48 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bb48:	4a18      	ldr	r2, [pc, #96]	@ (9000bbac <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000bb4a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bb4c:	6913      	ldr	r3, [r2, #16]
9000bb4e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bb52:	2b10      	cmp	r3, #16
9000bb54:	d024      	beq.n	9000bba0 <HAL_RCC_GetHCLKFreq+0x58>
9000bb56:	2b18      	cmp	r3, #24
9000bb58:	d009      	beq.n	9000bb6e <HAL_RCC_GetHCLKFreq+0x26>
9000bb5a:	bb1b      	cbnz	r3, 9000bba4 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bb5c:	6813      	ldr	r3, [r2, #0]
9000bb5e:	069b      	lsls	r3, r3, #26
9000bb60:	d522      	bpl.n	9000bba8 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bb62:	6812      	ldr	r2, [r2, #0]
9000bb64:	4b12      	ldr	r3, [pc, #72]	@ (9000bbb0 <HAL_RCC_GetHCLKFreq+0x68>)
9000bb66:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000bb6a:	40d3      	lsrs	r3, r2
9000bb6c:	e002      	b.n	9000bb74 <HAL_RCC_GetHCLKFreq+0x2c>
9000bb6e:	f7ff fad3 	bl	9000b118 <HAL_RCC_GetSysClockFreq.part.0>
9000bb72:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bb74:	490d      	ldr	r1, [pc, #52]	@ (9000bbac <HAL_RCC_GetHCLKFreq+0x64>)
9000bb76:	480f      	ldr	r0, [pc, #60]	@ (9000bbb4 <HAL_RCC_GetHCLKFreq+0x6c>)
9000bb78:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb7a:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bb7c:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb80:	4c0d      	ldr	r4, [pc, #52]	@ (9000bbb8 <HAL_RCC_GetHCLKFreq+0x70>)
9000bb82:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000bb86:	4d0d      	ldr	r5, [pc, #52]	@ (9000bbbc <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bb88:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb8a:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bb8c:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb90:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bb94:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb96:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000bb9a:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bb9c:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000bb9e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bba0:	4b07      	ldr	r3, [pc, #28]	@ (9000bbc0 <HAL_RCC_GetHCLKFreq+0x78>)
9000bba2:	e7e7      	b.n	9000bb74 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000bba4:	4b07      	ldr	r3, [pc, #28]	@ (9000bbc4 <HAL_RCC_GetHCLKFreq+0x7c>)
9000bba6:	e7e5      	b.n	9000bb74 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bba8:	4b01      	ldr	r3, [pc, #4]	@ (9000bbb0 <HAL_RCC_GetHCLKFreq+0x68>)
9000bbaa:	e7e3      	b.n	9000bb74 <HAL_RCC_GetHCLKFreq+0x2c>
9000bbac:	58024400 	.word	0x58024400
9000bbb0:	03d09000 	.word	0x03d09000
9000bbb4:	9002f118 	.word	0x9002f118
9000bbb8:	24000074 	.word	0x24000074
9000bbbc:	24000078 	.word	0x24000078
9000bbc0:	017d7840 	.word	0x017d7840
9000bbc4:	003d0900 	.word	0x003d0900

9000bbc8 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bbc8:	4a1c      	ldr	r2, [pc, #112]	@ (9000bc3c <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000bbca:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bbcc:	6913      	ldr	r3, [r2, #16]
9000bbce:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bbd2:	2b10      	cmp	r3, #16
9000bbd4:	d02b      	beq.n	9000bc2e <HAL_RCC_GetPCLK1Freq+0x66>
9000bbd6:	2b18      	cmp	r3, #24
9000bbd8:	d009      	beq.n	9000bbee <HAL_RCC_GetPCLK1Freq+0x26>
9000bbda:	bb53      	cbnz	r3, 9000bc32 <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bbdc:	6813      	ldr	r3, [r2, #0]
9000bbde:	069b      	lsls	r3, r3, #26
9000bbe0:	d529      	bpl.n	9000bc36 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbe2:	6812      	ldr	r2, [r2, #0]
9000bbe4:	4b16      	ldr	r3, [pc, #88]	@ (9000bc40 <HAL_RCC_GetPCLK1Freq+0x78>)
9000bbe6:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000bbea:	40d3      	lsrs	r3, r2
9000bbec:	e002      	b.n	9000bbf4 <HAL_RCC_GetPCLK1Freq+0x2c>
9000bbee:	f7ff fa93 	bl	9000b118 <HAL_RCC_GetSysClockFreq.part.0>
9000bbf2:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bbf4:	4a11      	ldr	r2, [pc, #68]	@ (9000bc3c <HAL_RCC_GetPCLK1Freq+0x74>)
9000bbf6:	4913      	ldr	r1, [pc, #76]	@ (9000bc44 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000bbf8:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000bbfa:	4d13      	ldr	r5, [pc, #76]	@ (9000bc48 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bbfc:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bc00:	4c12      	ldr	r4, [pc, #72]	@ (9000bc4c <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bc02:	5c08      	ldrb	r0, [r1, r0]
9000bc04:	f000 001f 	and.w	r0, r0, #31
9000bc08:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bc0a:	6990      	ldr	r0, [r2, #24]
9000bc0c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000bc10:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bc12:	5c08      	ldrb	r0, [r1, r0]
9000bc14:	f000 001f 	and.w	r0, r0, #31
9000bc18:	40c3      	lsrs	r3, r0
9000bc1a:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000bc1c:	69d2      	ldr	r2, [r2, #28]
9000bc1e:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000bc22:	5c88      	ldrb	r0, [r1, r2]
9000bc24:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000bc28:	fa23 f000 	lsr.w	r0, r3, r0
9000bc2c:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bc2e:	4b08      	ldr	r3, [pc, #32]	@ (9000bc50 <HAL_RCC_GetPCLK1Freq+0x88>)
9000bc30:	e7e0      	b.n	9000bbf4 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000bc32:	4b08      	ldr	r3, [pc, #32]	@ (9000bc54 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000bc34:	e7de      	b.n	9000bbf4 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bc36:	4b02      	ldr	r3, [pc, #8]	@ (9000bc40 <HAL_RCC_GetPCLK1Freq+0x78>)
9000bc38:	e7dc      	b.n	9000bbf4 <HAL_RCC_GetPCLK1Freq+0x2c>
9000bc3a:	bf00      	nop
9000bc3c:	58024400 	.word	0x58024400
9000bc40:	03d09000 	.word	0x03d09000
9000bc44:	9002f118 	.word	0x9002f118
9000bc48:	24000078 	.word	0x24000078
9000bc4c:	24000074 	.word	0x24000074
9000bc50:	017d7840 	.word	0x017d7840
9000bc54:	003d0900 	.word	0x003d0900

9000bc58 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bc58:	4a1c      	ldr	r2, [pc, #112]	@ (9000bccc <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000bc5a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bc5c:	6913      	ldr	r3, [r2, #16]
9000bc5e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bc62:	2b10      	cmp	r3, #16
9000bc64:	d02b      	beq.n	9000bcbe <HAL_RCC_GetPCLK2Freq+0x66>
9000bc66:	2b18      	cmp	r3, #24
9000bc68:	d009      	beq.n	9000bc7e <HAL_RCC_GetPCLK2Freq+0x26>
9000bc6a:	bb53      	cbnz	r3, 9000bcc2 <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bc6c:	6813      	ldr	r3, [r2, #0]
9000bc6e:	069b      	lsls	r3, r3, #26
9000bc70:	d529      	bpl.n	9000bcc6 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bc72:	6812      	ldr	r2, [r2, #0]
9000bc74:	4b16      	ldr	r3, [pc, #88]	@ (9000bcd0 <HAL_RCC_GetPCLK2Freq+0x78>)
9000bc76:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000bc7a:	40d3      	lsrs	r3, r2
9000bc7c:	e002      	b.n	9000bc84 <HAL_RCC_GetPCLK2Freq+0x2c>
9000bc7e:	f7ff fa4b 	bl	9000b118 <HAL_RCC_GetSysClockFreq.part.0>
9000bc82:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bc84:	4a11      	ldr	r2, [pc, #68]	@ (9000bccc <HAL_RCC_GetPCLK2Freq+0x74>)
9000bc86:	4913      	ldr	r1, [pc, #76]	@ (9000bcd4 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000bc88:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000bc8a:	4d13      	ldr	r5, [pc, #76]	@ (9000bcd8 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bc8c:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bc90:	4c12      	ldr	r4, [pc, #72]	@ (9000bcdc <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bc92:	5c08      	ldrb	r0, [r1, r0]
9000bc94:	f000 001f 	and.w	r0, r0, #31
9000bc98:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bc9a:	6990      	ldr	r0, [r2, #24]
9000bc9c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000bca0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bca2:	5c08      	ldrb	r0, [r1, r0]
9000bca4:	f000 001f 	and.w	r0, r0, #31
9000bca8:	40c3      	lsrs	r3, r0
9000bcaa:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000bcac:	69d2      	ldr	r2, [r2, #28]
9000bcae:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000bcb2:	5c88      	ldrb	r0, [r1, r2]
9000bcb4:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000bcb8:	fa23 f000 	lsr.w	r0, r3, r0
9000bcbc:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bcbe:	4b08      	ldr	r3, [pc, #32]	@ (9000bce0 <HAL_RCC_GetPCLK2Freq+0x88>)
9000bcc0:	e7e0      	b.n	9000bc84 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000bcc2:	4b08      	ldr	r3, [pc, #32]	@ (9000bce4 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000bcc4:	e7de      	b.n	9000bc84 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bcc6:	4b02      	ldr	r3, [pc, #8]	@ (9000bcd0 <HAL_RCC_GetPCLK2Freq+0x78>)
9000bcc8:	e7dc      	b.n	9000bc84 <HAL_RCC_GetPCLK2Freq+0x2c>
9000bcca:	bf00      	nop
9000bccc:	58024400 	.word	0x58024400
9000bcd0:	03d09000 	.word	0x03d09000
9000bcd4:	9002f118 	.word	0x9002f118
9000bcd8:	24000078 	.word	0x24000078
9000bcdc:	24000074 	.word	0x24000074
9000bce0:	017d7840 	.word	0x017d7840
9000bce4:	003d0900 	.word	0x003d0900

9000bce8 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000bce8:	4b13      	ldr	r3, [pc, #76]	@ (9000bd38 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000bcea:	223f      	movs	r2, #63	@ 0x3f
{
9000bcec:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000bcee:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000bcf0:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000bcf2:	4c12      	ldr	r4, [pc, #72]	@ (9000bd3c <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000bcf4:	f002 0207 	and.w	r2, r2, #7
9000bcf8:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000bcfa:	699a      	ldr	r2, [r3, #24]
9000bcfc:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000bd00:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000bd02:	699a      	ldr	r2, [r3, #24]
9000bd04:	f002 020f 	and.w	r2, r2, #15
9000bd08:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000bd0a:	699a      	ldr	r2, [r3, #24]
9000bd0c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bd10:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000bd12:	69da      	ldr	r2, [r3, #28]
9000bd14:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bd18:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000bd1a:	69da      	ldr	r2, [r3, #28]
9000bd1c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000bd20:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000bd22:	6a1b      	ldr	r3, [r3, #32]
9000bd24:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000bd28:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000bd2a:	6823      	ldr	r3, [r4, #0]
}
9000bd2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000bd30:	f003 030f 	and.w	r3, r3, #15
9000bd34:	600b      	str	r3, [r1, #0]
}
9000bd36:	4770      	bx	lr
9000bd38:	58024400 	.word	0x58024400
9000bd3c:	52002000 	.word	0x52002000

9000bd40 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000bd40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000bd42:	4c36      	ldr	r4, [pc, #216]	@ (9000be1c <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000bd44:	4606      	mov	r6, r0
9000bd46:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000bd48:	6823      	ldr	r3, [r4, #0]
9000bd4a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000bd4e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bd50:	f7fb fc28 	bl	900075a4 <HAL_GetTick>
9000bd54:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000bd56:	e004      	b.n	9000bd62 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000bd58:	f7fb fc24 	bl	900075a4 <HAL_GetTick>
9000bd5c:	1b40      	subs	r0, r0, r5
9000bd5e:	2802      	cmp	r0, #2
9000bd60:	d856      	bhi.n	9000be10 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000bd62:	6823      	ldr	r3, [r4, #0]
9000bd64:	011a      	lsls	r2, r3, #4
9000bd66:	d4f7      	bmi.n	9000bd58 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000bd68:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000bd6a:	6832      	ldr	r2, [r6, #0]
9000bd6c:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000bd70:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000bd74:	62a3      	str	r3, [r4, #40]	@ 0x28
9000bd76:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000bd7a:	3b01      	subs	r3, #1
9000bd7c:	3a01      	subs	r2, #1
9000bd7e:	025b      	lsls	r3, r3, #9
9000bd80:	0412      	lsls	r2, r2, #16
9000bd82:	b29b      	uxth	r3, r3
9000bd84:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000bd88:	4313      	orrs	r3, r2
9000bd8a:	6872      	ldr	r2, [r6, #4]
9000bd8c:	3a01      	subs	r2, #1
9000bd8e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000bd92:	4313      	orrs	r3, r2
9000bd94:	6932      	ldr	r2, [r6, #16]
9000bd96:	3a01      	subs	r2, #1
9000bd98:	0612      	lsls	r2, r2, #24
9000bd9a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000bd9e:	4313      	orrs	r3, r2
9000bda0:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000bda2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bda4:	6972      	ldr	r2, [r6, #20]
9000bda6:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000bdaa:	4313      	orrs	r3, r2
9000bdac:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000bdae:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bdb0:	69b2      	ldr	r2, [r6, #24]
9000bdb2:	f023 0320 	bic.w	r3, r3, #32
9000bdb6:	4313      	orrs	r3, r2
9000bdb8:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000bdba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bdbc:	f023 0310 	bic.w	r3, r3, #16
9000bdc0:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000bdc2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000bdc4:	69f2      	ldr	r2, [r6, #28]
9000bdc6:	f36f 03cf 	bfc	r3, #3, #13
9000bdca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000bdce:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000bdd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000bdd2:	f043 0310 	orr.w	r3, r3, #16
9000bdd6:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000bdd8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000bdda:	b1df      	cbz	r7, 9000be14 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000bddc:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000bdde:	bf0c      	ite	eq
9000bde0:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000bde4:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000bde8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000bdea:	4c0c      	ldr	r4, [pc, #48]	@ (9000be1c <RCCEx_PLL2_Config.part.0+0xdc>)
9000bdec:	6823      	ldr	r3, [r4, #0]
9000bdee:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000bdf2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bdf4:	f7fb fbd6 	bl	900075a4 <HAL_GetTick>
9000bdf8:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000bdfa:	e004      	b.n	9000be06 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000bdfc:	f7fb fbd2 	bl	900075a4 <HAL_GetTick>
9000be00:	1b40      	subs	r0, r0, r5
9000be02:	2802      	cmp	r0, #2
9000be04:	d804      	bhi.n	9000be10 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000be06:	6823      	ldr	r3, [r4, #0]
9000be08:	011b      	lsls	r3, r3, #4
9000be0a:	d5f7      	bpl.n	9000bdfc <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000be0c:	2000      	movs	r0, #0
}
9000be0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000be10:	2003      	movs	r0, #3
}
9000be12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000be14:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000be18:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000be1a:	e7e6      	b.n	9000bdea <RCCEx_PLL2_Config.part.0+0xaa>
9000be1c:	58024400 	.word	0x58024400

9000be20 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000be20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000be22:	4c36      	ldr	r4, [pc, #216]	@ (9000befc <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000be24:	4606      	mov	r6, r0
9000be26:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000be28:	6823      	ldr	r3, [r4, #0]
9000be2a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000be2e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000be30:	f7fb fbb8 	bl	900075a4 <HAL_GetTick>
9000be34:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000be36:	e004      	b.n	9000be42 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000be38:	f7fb fbb4 	bl	900075a4 <HAL_GetTick>
9000be3c:	1b40      	subs	r0, r0, r5
9000be3e:	2802      	cmp	r0, #2
9000be40:	d856      	bhi.n	9000bef0 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000be42:	6823      	ldr	r3, [r4, #0]
9000be44:	009a      	lsls	r2, r3, #2
9000be46:	d4f7      	bmi.n	9000be38 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000be48:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000be4a:	6832      	ldr	r2, [r6, #0]
9000be4c:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000be50:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000be54:	62a3      	str	r3, [r4, #40]	@ 0x28
9000be56:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000be5a:	3b01      	subs	r3, #1
9000be5c:	3a01      	subs	r2, #1
9000be5e:	025b      	lsls	r3, r3, #9
9000be60:	0412      	lsls	r2, r2, #16
9000be62:	b29b      	uxth	r3, r3
9000be64:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000be68:	4313      	orrs	r3, r2
9000be6a:	6872      	ldr	r2, [r6, #4]
9000be6c:	3a01      	subs	r2, #1
9000be6e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000be72:	4313      	orrs	r3, r2
9000be74:	6932      	ldr	r2, [r6, #16]
9000be76:	3a01      	subs	r2, #1
9000be78:	0612      	lsls	r2, r2, #24
9000be7a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000be7e:	4313      	orrs	r3, r2
9000be80:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000be82:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000be84:	6972      	ldr	r2, [r6, #20]
9000be86:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000be8a:	4313      	orrs	r3, r2
9000be8c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000be8e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000be90:	69b2      	ldr	r2, [r6, #24]
9000be92:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000be96:	4313      	orrs	r3, r2
9000be98:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000be9a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000be9c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000bea0:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000bea2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000bea4:	69f2      	ldr	r2, [r6, #28]
9000bea6:	f36f 03cf 	bfc	r3, #3, #13
9000beaa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000beae:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000beb0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000beb2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000beb6:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000beb8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000beba:	b1df      	cbz	r7, 9000bef4 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000bebc:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000bebe:	bf0c      	ite	eq
9000bec0:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000bec4:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000bec8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000beca:	4c0c      	ldr	r4, [pc, #48]	@ (9000befc <RCCEx_PLL3_Config.part.0+0xdc>)
9000becc:	6823      	ldr	r3, [r4, #0]
9000bece:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000bed2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bed4:	f7fb fb66 	bl	900075a4 <HAL_GetTick>
9000bed8:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000beda:	e004      	b.n	9000bee6 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000bedc:	f7fb fb62 	bl	900075a4 <HAL_GetTick>
9000bee0:	1b40      	subs	r0, r0, r5
9000bee2:	2802      	cmp	r0, #2
9000bee4:	d804      	bhi.n	9000bef0 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000bee6:	6823      	ldr	r3, [r4, #0]
9000bee8:	009b      	lsls	r3, r3, #2
9000beea:	d5f7      	bpl.n	9000bedc <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000beec:	2000      	movs	r0, #0
}
9000beee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000bef0:	2003      	movs	r0, #3
}
9000bef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000bef4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000bef8:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000befa:	e7e6      	b.n	9000beca <RCCEx_PLL3_Config.part.0+0xaa>
9000befc:	58024400 	.word	0x58024400

9000bf00 <HAL_RCCEx_PeriphCLKConfig>:
{
9000bf00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bf04:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000bf08:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bf0a:	011d      	lsls	r5, r3, #4
9000bf0c:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000bf10:	d524      	bpl.n	9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bf12:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000bf14:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000bf18:	f000 85df 	beq.w	9000cada <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000bf1c:	f200 86a8 	bhi.w	9000cc70 <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000bf20:	2900      	cmp	r1, #0
9000bf22:	f000 85f6 	beq.w	9000cb12 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000bf26:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000bf2a:	f040 86a5 	bne.w	9000cc78 <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf2e:	49a9      	ldr	r1, [pc, #676]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000bf30:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf32:	f001 0103 	and.w	r1, r1, #3
9000bf36:	2903      	cmp	r1, #3
9000bf38:	f000 869e 	beq.w	9000cc78 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000bf3c:	2102      	movs	r1, #2
9000bf3e:	3008      	adds	r0, #8
9000bf40:	f7ff fefe 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000bf44:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bf46:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf4a:	b93e      	cbnz	r6, 9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bf4c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bf4e:	4da1      	ldr	r5, [pc, #644]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000bf50:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bf52:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000bf54:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000bf58:	4301      	orrs	r1, r0
9000bf5a:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bf5c:	05d8      	lsls	r0, r3, #23
9000bf5e:	d50a      	bpl.n	9000bf76 <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000bf60:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000bf62:	2904      	cmp	r1, #4
9000bf64:	d806      	bhi.n	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000bf66:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bf6a:	03ff      	.short	0x03ff
9000bf6c:	0582056d 	.word	0x0582056d
9000bf70:	04040404 	.word	0x04040404
      status = ret;
9000bf74:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bf76:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bf78:	0599      	lsls	r1, r3, #22
9000bf7a:	d524      	bpl.n	9000bfc6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000bf7c:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000bf7e:	2980      	cmp	r1, #128	@ 0x80
9000bf80:	f000 854b 	beq.w	9000ca1a <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000bf84:	f200 8687 	bhi.w	9000cc96 <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000bf88:	2900      	cmp	r1, #0
9000bf8a:	f000 85bb 	beq.w	9000cb04 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000bf8e:	2940      	cmp	r1, #64	@ 0x40
9000bf90:	f040 8688 	bne.w	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf94:	498f      	ldr	r1, [pc, #572]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000bf96:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf98:	f001 0103 	and.w	r1, r1, #3
9000bf9c:	2903      	cmp	r1, #3
9000bf9e:	f000 8681 	beq.w	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000bfa2:	2100      	movs	r1, #0
9000bfa4:	f104 0008 	add.w	r0, r4, #8
9000bfa8:	f7ff feca 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000bfac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bfae:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfb2:	2d00      	cmp	r5, #0
9000bfb4:	f040 8543 	bne.w	9000ca3e <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000bfb8:	4f86      	ldr	r7, [pc, #536]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000bfba:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000bfbc:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bfbe:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000bfc2:	4301      	orrs	r1, r0
9000bfc4:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bfc6:	055f      	lsls	r7, r3, #21
9000bfc8:	d528      	bpl.n	9000c01c <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bfca:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000bfce:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000bfd2:	f000 855c 	beq.w	9000ca8e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000bfd6:	f200 8652 	bhi.w	9000cc7e <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000bfda:	2900      	cmp	r1, #0
9000bfdc:	f000 858b 	beq.w	9000caf6 <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000bfe0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000bfe4:	f040 8653 	bne.w	9000cc8e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfe8:	497a      	ldr	r1, [pc, #488]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000bfea:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfec:	f001 0103 	and.w	r1, r1, #3
9000bff0:	2903      	cmp	r1, #3
9000bff2:	f000 864c 	beq.w	9000cc8e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000bff6:	2100      	movs	r1, #0
9000bff8:	f104 0008 	add.w	r0, r4, #8
9000bffc:	f7ff fea0 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c000:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c002:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c006:	2d00      	cmp	r5, #0
9000c008:	f040 8553 	bne.w	9000cab2 <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000c00c:	4f71      	ldr	r7, [pc, #452]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c00e:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000c012:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c014:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000c018:	4301      	orrs	r1, r0
9000c01a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c01c:	0518      	lsls	r0, r3, #20
9000c01e:	d528      	bpl.n	9000c072 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c020:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000c024:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000c028:	f000 8546 	beq.w	9000cab8 <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000c02c:	f200 8614 	bhi.w	9000cc58 <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000c030:	2900      	cmp	r1, #0
9000c032:	f000 84d6 	beq.w	9000c9e2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000c036:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000c03a:	f040 8615 	bne.w	9000cc68 <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c03e:	4965      	ldr	r1, [pc, #404]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c040:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c042:	f001 0103 	and.w	r1, r1, #3
9000c046:	2903      	cmp	r1, #3
9000c048:	f000 860e 	beq.w	9000cc68 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000c04c:	2100      	movs	r1, #0
9000c04e:	f104 0008 	add.w	r0, r4, #8
9000c052:	f7ff fe75 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c056:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c058:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c05c:	2d00      	cmp	r5, #0
9000c05e:	f040 84c8 	bne.w	9000c9f2 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000c062:	4f5c      	ldr	r7, [pc, #368]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c064:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000c068:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c06a:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000c06e:	4301      	orrs	r1, r0
9000c070:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c072:	0199      	lsls	r1, r3, #6
9000c074:	d518      	bpl.n	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000c076:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000c078:	2920      	cmp	r1, #32
9000c07a:	f000 8434 	beq.w	9000c8e6 <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000c07e:	f200 8615 	bhi.w	9000ccac <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000c082:	b139      	cbz	r1, 9000c094 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000c084:	2910      	cmp	r1, #16
9000c086:	f040 8614 	bne.w	9000ccb2 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c08a:	4852      	ldr	r0, [pc, #328]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c08c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c08e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c092:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c094:	2d00      	cmp	r5, #0
9000c096:	f040 83bf 	bne.w	9000c818 <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000c09a:	4f4e      	ldr	r7, [pc, #312]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c09c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000c09e:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c0a0:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000c0a4:	4301      	orrs	r1, r0
9000c0a6:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c0a8:	04df      	lsls	r7, r3, #19
9000c0aa:	d526      	bpl.n	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c0ac:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000c0ae:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c0b2:	f000 84a1 	beq.w	9000c9f8 <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000c0b6:	f200 85c3 	bhi.w	9000cc40 <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000c0ba:	2900      	cmp	r1, #0
9000c0bc:	f000 8486 	beq.w	9000c9cc <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000c0c0:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000c0c4:	f040 85c4 	bne.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c0c8:	4942      	ldr	r1, [pc, #264]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c0ca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c0cc:	f001 0103 	and.w	r1, r1, #3
9000c0d0:	2903      	cmp	r1, #3
9000c0d2:	f000 85bd 	beq.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000c0d6:	2100      	movs	r1, #0
9000c0d8:	f104 0008 	add.w	r0, r4, #8
9000c0dc:	f7ff fe30 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c0e0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c0e2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0e6:	2d00      	cmp	r5, #0
9000c0e8:	f040 8478 	bne.w	9000c9dc <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000c0ec:	4f39      	ldr	r7, [pc, #228]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c0ee:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000c0f0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c0f2:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000c0f6:	4301      	orrs	r1, r0
9000c0f8:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c0fa:	0498      	lsls	r0, r3, #18
9000c0fc:	d524      	bpl.n	9000c148 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c0fe:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000c100:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c104:	f000 8415 	beq.w	9000c932 <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000c108:	f200 8556 	bhi.w	9000cbb8 <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000c10c:	b191      	cbz	r1, 9000c134 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000c10e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c112:	f040 855b 	bne.w	9000cbcc <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c116:	492f      	ldr	r1, [pc, #188]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c118:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c11a:	f001 0103 	and.w	r1, r1, #3
9000c11e:	2903      	cmp	r1, #3
9000c120:	f000 8554 	beq.w	9000cbcc <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000c124:	2101      	movs	r1, #1
9000c126:	f104 0008 	add.w	r0, r4, #8
9000c12a:	f7ff fe09 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c12e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c130:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c134:	2d00      	cmp	r5, #0
9000c136:	f040 838f 	bne.w	9000c858 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000c13a:	4f26      	ldr	r7, [pc, #152]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c13c:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000c13e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c140:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000c144:	4301      	orrs	r1, r0
9000c146:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c148:	0459      	lsls	r1, r3, #17
9000c14a:	d526      	bpl.n	9000c19a <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c14c:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000c150:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c154:	f000 8426 	beq.w	9000c9a4 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000c158:	f200 854a 	bhi.w	9000cbf0 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000c15c:	b191      	cbz	r1, 9000c184 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000c15e:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c162:	f040 854f 	bne.w	9000cc04 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c166:	491b      	ldr	r1, [pc, #108]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c168:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c16a:	f001 0103 	and.w	r1, r1, #3
9000c16e:	2903      	cmp	r1, #3
9000c170:	f000 8548 	beq.w	9000cc04 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000c174:	2101      	movs	r1, #1
9000c176:	f104 0008 	add.w	r0, r4, #8
9000c17a:	f7ff fde1 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c17e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c180:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c184:	2d00      	cmp	r5, #0
9000c186:	f040 835b 	bne.w	9000c840 <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000c18a:	4f12      	ldr	r7, [pc, #72]	@ (9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000c18c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000c190:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c192:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c196:	4301      	orrs	r1, r0
9000c198:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c19a:	041f      	lsls	r7, r3, #16
9000c19c:	d50d      	bpl.n	9000c1ba <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000c19e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000c1a0:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c1a4:	f000 8260 	beq.w	9000c668 <HAL_RCCEx_PeriphCLKConfig+0x768>
9000c1a8:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c1ac:	f000 8591 	beq.w	9000ccd2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000c1b0:	2900      	cmp	r1, #0
9000c1b2:	f000 825e 	beq.w	9000c672 <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000c1b6:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c1b8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c1ba:	01d8      	lsls	r0, r3, #7
9000c1bc:	d515      	bpl.n	9000c1ea <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000c1be:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c1c0:	2903      	cmp	r1, #3
9000c1c2:	f200 85b4 	bhi.w	9000cd2e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c1c6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c1ca:	000c      	.short	0x000c
9000c1cc:	03a10007 	.word	0x03a10007
9000c1d0:	000c      	.short	0x000c
9000c1d2:	bf00      	nop
9000c1d4:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c1d8:	4836      	ldr	r0, [pc, #216]	@ (9000c2b4 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000c1da:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c1dc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c1e0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c1e2:	2d00      	cmp	r5, #0
9000c1e4:	f000 831a 	beq.w	9000c81c <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000c1e8:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c1ea:	0259      	lsls	r1, r3, #9
9000c1ec:	f100 827a 	bmi.w	9000c6e4 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c1f0:	07df      	lsls	r7, r3, #31
9000c1f2:	d52f      	bpl.n	9000c254 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000c1f4:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000c1f6:	2928      	cmp	r1, #40	@ 0x28
9000c1f8:	d82a      	bhi.n	9000c250 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c1fa:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c1fe:	0257      	.short	0x0257
9000c200:	00290029 	.word	0x00290029
9000c204:	00290029 	.word	0x00290029
9000c208:	00290029 	.word	0x00290029
9000c20c:	02480029 	.word	0x02480029
9000c210:	00290029 	.word	0x00290029
9000c214:	00290029 	.word	0x00290029
9000c218:	00290029 	.word	0x00290029
9000c21c:	04b90029 	.word	0x04b90029
9000c220:	00290029 	.word	0x00290029
9000c224:	00290029 	.word	0x00290029
9000c228:	00290029 	.word	0x00290029
9000c22c:	02570029 	.word	0x02570029
9000c230:	00290029 	.word	0x00290029
9000c234:	00290029 	.word	0x00290029
9000c238:	00290029 	.word	0x00290029
9000c23c:	02570029 	.word	0x02570029
9000c240:	00290029 	.word	0x00290029
9000c244:	00290029 	.word	0x00290029
9000c248:	00290029 	.word	0x00290029
9000c24c:	02570029 	.word	0x02570029
      status = ret;
9000c250:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c252:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c254:	0798      	lsls	r0, r3, #30
9000c256:	d51e      	bpl.n	9000c296 <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c258:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000c25a:	2905      	cmp	r1, #5
9000c25c:	f200 8550 	bhi.w	9000cd00 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000c260:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c264:	00060015 	.word	0x00060015
9000c268:	00150471 	.word	0x00150471
9000c26c:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c270:	4910      	ldr	r1, [pc, #64]	@ (9000c2b4 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000c272:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c274:	f001 0103 	and.w	r1, r1, #3
9000c278:	2903      	cmp	r1, #3
9000c27a:	f000 8541 	beq.w	9000cd00 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000c27e:	2101      	movs	r1, #1
9000c280:	f104 0008 	add.w	r0, r4, #8
9000c284:	f7ff fd5c 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c288:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c28a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c28e:	2d00      	cmp	r5, #0
9000c290:	f000 82cc 	beq.w	9000c82c <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000c294:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c296:	0759      	lsls	r1, r3, #29
9000c298:	d521      	bpl.n	9000c2de <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c29a:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000c29e:	2905      	cmp	r1, #5
9000c2a0:	f200 852a 	bhi.w	9000ccf8 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000c2a4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c2a8:	00080017 	.word	0x00080017
9000c2ac:	0017043c 	.word	0x0017043c
9000c2b0:	00170017 	.word	0x00170017
9000c2b4:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2b8:	49ae      	ldr	r1, [pc, #696]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c2ba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2bc:	f001 0103 	and.w	r1, r1, #3
9000c2c0:	2903      	cmp	r1, #3
9000c2c2:	f000 8519 	beq.w	9000ccf8 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000c2c6:	2101      	movs	r1, #1
9000c2c8:	f104 0008 	add.w	r0, r4, #8
9000c2cc:	f7ff fd38 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c2d0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c2d2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2d6:	2d00      	cmp	r5, #0
9000c2d8:	f000 82c2 	beq.w	9000c860 <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000c2dc:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c2de:	069f      	lsls	r7, r3, #26
9000c2e0:	d526      	bpl.n	9000c330 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c2e2:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000c2e6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c2ea:	f000 82c6 	beq.w	9000c87a <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000c2ee:	f200 8455 	bhi.w	9000cb9c <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000c2f2:	b191      	cbz	r1, 9000c31a <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000c2f4:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c2f8:	f040 845a 	bne.w	9000cbb0 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2fc:	499d      	ldr	r1, [pc, #628]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c2fe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c300:	f001 0103 	and.w	r1, r1, #3
9000c304:	2903      	cmp	r1, #3
9000c306:	f000 8453 	beq.w	9000cbb0 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000c30a:	2100      	movs	r1, #0
9000c30c:	f104 0008 	add.w	r0, r4, #8
9000c310:	f7ff fd16 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c314:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c316:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c31a:	2d00      	cmp	r5, #0
9000c31c:	f040 828e 	bne.w	9000c83c <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000c320:	4f94      	ldr	r7, [pc, #592]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c322:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000c326:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c328:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c32c:	4301      	orrs	r1, r0
9000c32e:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c330:	0658      	lsls	r0, r3, #25
9000c332:	d526      	bpl.n	9000c382 <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c334:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000c338:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000c33c:	f000 82af 	beq.w	9000c89e <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000c340:	f200 8464 	bhi.w	9000cc0c <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000c344:	b191      	cbz	r1, 9000c36c <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c346:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000c34a:	f040 8469 	bne.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c34e:	4989      	ldr	r1, [pc, #548]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c350:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c352:	f001 0103 	and.w	r1, r1, #3
9000c356:	2903      	cmp	r1, #3
9000c358:	f000 8462 	beq.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000c35c:	2100      	movs	r1, #0
9000c35e:	f104 0008 	add.w	r0, r4, #8
9000c362:	f7ff fced 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c366:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c368:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c36c:	2d00      	cmp	r5, #0
9000c36e:	f040 8269 	bne.w	9000c844 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000c372:	4f80      	ldr	r7, [pc, #512]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c374:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000c378:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c37a:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000c37e:	4301      	orrs	r1, r0
9000c380:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c382:	0619      	lsls	r1, r3, #24
9000c384:	d526      	bpl.n	9000c3d4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c386:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000c38a:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c38e:	f000 8298 	beq.w	9000c8c2 <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000c392:	f200 841f 	bhi.w	9000cbd4 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000c396:	b191      	cbz	r1, 9000c3be <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000c398:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c39c:	f040 8424 	bne.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c3a0:	4974      	ldr	r1, [pc, #464]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c3a2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c3a4:	f001 0103 	and.w	r1, r1, #3
9000c3a8:	2903      	cmp	r1, #3
9000c3aa:	f000 841d 	beq.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000c3ae:	2100      	movs	r1, #0
9000c3b0:	f104 0008 	add.w	r0, r4, #8
9000c3b4:	f7ff fcc4 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c3b8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c3ba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3be:	2d00      	cmp	r5, #0
9000c3c0:	f040 8244 	bne.w	9000c84c <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000c3c4:	4f6b      	ldr	r7, [pc, #428]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c3c6:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000c3ca:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c3cc:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000c3d0:	4301      	orrs	r1, r0
9000c3d2:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c3d4:	071f      	lsls	r7, r3, #28
9000c3d6:	d50b      	bpl.n	9000c3f0 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000c3d8:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000c3dc:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c3e0:	f000 81d4 	beq.w	9000c78c <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c3e4:	4f63      	ldr	r7, [pc, #396]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c3e6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c3e8:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000c3ec:	4301      	orrs	r1, r0
9000c3ee:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c3f0:	06d8      	lsls	r0, r3, #27
9000c3f2:	d50b      	bpl.n	9000c40c <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000c3f4:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000c3f8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000c3fc:	f000 81db 	beq.w	9000c7b6 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c400:	4f5c      	ldr	r7, [pc, #368]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c402:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c404:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000c408:	4301      	orrs	r1, r0
9000c40a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c40c:	0319      	lsls	r1, r3, #12
9000c40e:	d524      	bpl.n	9000c45a <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000c410:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000c414:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c418:	f000 82b1 	beq.w	9000c97e <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000c41c:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c420:	d010      	beq.n	9000c444 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000c422:	2900      	cmp	r1, #0
9000c424:	f040 8130 	bne.w	9000c688 <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c428:	4852      	ldr	r0, [pc, #328]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c42a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000c42c:	f000 0003 	and.w	r0, r0, #3
9000c430:	2803      	cmp	r0, #3
9000c432:	f000 8129 	beq.w	9000c688 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000c436:	f104 0008 	add.w	r0, r4, #8
9000c43a:	f7ff fc81 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c43e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c440:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c444:	2d00      	cmp	r5, #0
9000c446:	f040 81ff 	bne.w	9000c848 <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c44a:	4f4a      	ldr	r7, [pc, #296]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c44c:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000c450:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c452:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000c456:	4301      	orrs	r1, r0
9000c458:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c45a:	035f      	lsls	r7, r3, #13
9000c45c:	d50f      	bpl.n	9000c47e <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000c45e:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000c462:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c466:	f000 8277 	beq.w	9000c958 <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000c46a:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c46e:	f000 812d 	beq.w	9000c6cc <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000c472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c476:	f000 8124 	beq.w	9000c6c2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000c47a:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c47c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c47e:	03d8      	lsls	r0, r3, #15
9000c480:	d520      	bpl.n	9000c4c4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000c482:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000c484:	2900      	cmp	r1, #0
9000c486:	f000 81aa 	beq.w	9000c7de <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000c48a:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c48e:	f040 80e8 	bne.w	9000c662 <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c492:	4938      	ldr	r1, [pc, #224]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c494:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c496:	f001 0103 	and.w	r1, r1, #3
9000c49a:	2903      	cmp	r1, #3
9000c49c:	f000 80e1 	beq.w	9000c662 <HAL_RCCEx_PeriphCLKConfig+0x762>
9000c4a0:	2102      	movs	r1, #2
9000c4a2:	f104 0008 	add.w	r0, r4, #8
9000c4a6:	f7ff fc4b 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c4aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c4ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4b0:	2d00      	cmp	r5, #0
9000c4b2:	f040 819c 	bne.w	9000c7ee <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c4b6:	4f2f      	ldr	r7, [pc, #188]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c4b8:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000c4ba:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c4bc:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000c4c0:	4301      	orrs	r1, r0
9000c4c2:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c4c4:	0099      	lsls	r1, r3, #2
9000c4c6:	d50e      	bpl.n	9000c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4c8:	492a      	ldr	r1, [pc, #168]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c4ca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4cc:	f001 0103 	and.w	r1, r1, #3
9000c4d0:	2903      	cmp	r1, #3
9000c4d2:	d007      	beq.n	9000c4e4 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000c4d4:	2102      	movs	r1, #2
9000c4d6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c4da:	f7ff fca1 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c4de:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c4e2:	b100      	cbz	r0, 9000c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000c4e4:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c4e6:	039f      	lsls	r7, r3, #14
9000c4e8:	f100 80ab 	bmi.w	9000c642 <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000c4ec:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000c4ee:	02d8      	lsls	r0, r3, #11
9000c4f0:	d506      	bpl.n	9000c500 <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000c4f2:	4820      	ldr	r0, [pc, #128]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c4f4:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000c4f6:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c4f8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000c4fc:	4331      	orrs	r1, r6
9000c4fe:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000c500:	00d9      	lsls	r1, r3, #3
9000c502:	d507      	bpl.n	9000c514 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000c504:	481b      	ldr	r0, [pc, #108]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c506:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000c50a:	6901      	ldr	r1, [r0, #16]
9000c50c:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000c510:	4331      	orrs	r1, r6
9000c512:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000c514:	029f      	lsls	r7, r3, #10
9000c516:	d506      	bpl.n	9000c526 <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000c518:	4816      	ldr	r0, [pc, #88]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c51a:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000c51c:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c51e:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000c522:	4331      	orrs	r1, r6
9000c524:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000c526:	005e      	lsls	r6, r3, #1
9000c528:	d509      	bpl.n	9000c53e <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000c52a:	4912      	ldr	r1, [pc, #72]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c52c:	6908      	ldr	r0, [r1, #16]
9000c52e:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000c532:	6108      	str	r0, [r1, #16]
9000c534:	6908      	ldr	r0, [r1, #16]
9000c536:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000c53a:	4330      	orrs	r0, r6
9000c53c:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000c53e:	2b00      	cmp	r3, #0
9000c540:	da06      	bge.n	9000c550 <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000c542:	480c      	ldr	r0, [pc, #48]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c544:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000c546:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000c548:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000c54c:	4331      	orrs	r1, r6
9000c54e:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000c550:	0218      	lsls	r0, r3, #8
9000c552:	d507      	bpl.n	9000c564 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000c554:	4907      	ldr	r1, [pc, #28]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c556:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000c55a:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000c55c:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000c560:	4303      	orrs	r3, r0
9000c562:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000c564:	07d1      	lsls	r1, r2, #31
9000c566:	d511      	bpl.n	9000c58c <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c568:	4b02      	ldr	r3, [pc, #8]	@ (9000c574 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000c56a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c56c:	f003 0303 	and.w	r3, r3, #3
9000c570:	2b03      	cmp	r3, #3
9000c572:	e001      	b.n	9000c578 <HAL_RCCEx_PeriphCLKConfig+0x678>
9000c574:	58024400 	.word	0x58024400
9000c578:	f000 835c 	beq.w	9000cc34 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000c57c:	2100      	movs	r1, #0
9000c57e:	f104 0008 	add.w	r0, r4, #8
9000c582:	f7ff fbdd 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c586:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c588:	b100      	cbz	r0, 9000c58c <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c58a:	4605      	mov	r5, r0
9000c58c:	0793      	lsls	r3, r2, #30
9000c58e:	d50e      	bpl.n	9000c5ae <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c590:	4baf      	ldr	r3, [pc, #700]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c592:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c594:	f003 0303 	and.w	r3, r3, #3
9000c598:	2b03      	cmp	r3, #3
9000c59a:	f000 834d 	beq.w	9000cc38 <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000c59e:	2101      	movs	r1, #1
9000c5a0:	f104 0008 	add.w	r0, r4, #8
9000c5a4:	f7ff fbcc 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c5a8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c5aa:	b100      	cbz	r0, 9000c5ae <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c5ac:	4605      	mov	r5, r0
9000c5ae:	0757      	lsls	r7, r2, #29
9000c5b0:	d50e      	bpl.n	9000c5d0 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5b2:	4ba7      	ldr	r3, [pc, #668]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c5b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c5b6:	f003 0303 	and.w	r3, r3, #3
9000c5ba:	2b03      	cmp	r3, #3
9000c5bc:	f000 833e 	beq.w	9000cc3c <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000c5c0:	2102      	movs	r1, #2
9000c5c2:	f104 0008 	add.w	r0, r4, #8
9000c5c6:	f7ff fbbb 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c5ca:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c5cc:	b100      	cbz	r0, 9000c5d0 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c5ce:	4605      	mov	r5, r0
9000c5d0:	0716      	lsls	r6, r2, #28
9000c5d2:	d50e      	bpl.n	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5d4:	4b9e      	ldr	r3, [pc, #632]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c5d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c5d8:	f003 0303 	and.w	r3, r3, #3
9000c5dc:	2b03      	cmp	r3, #3
9000c5de:	f000 8323 	beq.w	9000cc28 <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000c5e2:	2100      	movs	r1, #0
9000c5e4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c5e8:	f7ff fc1a 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c5ec:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c5ee:	b100      	cbz	r0, 9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c5f0:	4605      	mov	r5, r0
9000c5f2:	06d0      	lsls	r0, r2, #27
9000c5f4:	d50f      	bpl.n	9000c616 <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5f6:	4b96      	ldr	r3, [pc, #600]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c5f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c5fa:	f003 0303 	and.w	r3, r3, #3
9000c5fe:	2b03      	cmp	r3, #3
9000c600:	f000 8314 	beq.w	9000cc2c <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000c604:	2101      	movs	r1, #1
9000c606:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c60a:	f7ff fc09 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000c60e:	2800      	cmp	r0, #0
9000c610:	f040 8359 	bne.w	9000ccc6 <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c614:	6862      	ldr	r2, [r4, #4]
9000c616:	0693      	lsls	r3, r2, #26
9000c618:	d50e      	bpl.n	9000c638 <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c61a:	4b8d      	ldr	r3, [pc, #564]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c61c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c61e:	f003 0303 	and.w	r3, r3, #3
9000c622:	2b03      	cmp	r3, #3
9000c624:	f000 82b7 	beq.w	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000c628:	2102      	movs	r1, #2
9000c62a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c62e:	f7ff fbf7 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000c632:	2800      	cmp	r0, #0
9000c634:	f040 82af 	bne.w	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000c638:	1e28      	subs	r0, r5, #0
9000c63a:	bf18      	it	ne
9000c63c:	2001      	movne	r0, #1
}
9000c63e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000c642:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000c646:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c64a:	f000 80d2 	beq.w	9000c7f2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000c64e:	f240 8110 	bls.w	9000c872 <HAL_RCCEx_PeriphCLKConfig+0x972>
9000c652:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000c656:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000c65a:	f000 80cf 	beq.w	9000c7fc <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000c65e:	2501      	movs	r5, #1
9000c660:	e745      	b.n	9000c4ee <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000c662:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c664:	4635      	mov	r5, r6
9000c666:	e72d      	b.n	9000c4c4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c668:	4879      	ldr	r0, [pc, #484]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c66a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c66c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c670:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c672:	2d00      	cmp	r5, #0
9000c674:	f040 80ce 	bne.w	9000c814 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000c678:	4f75      	ldr	r7, [pc, #468]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c67a:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000c67c:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c67e:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000c682:	4301      	orrs	r1, r0
9000c684:	6539      	str	r1, [r7, #80]	@ 0x50
9000c686:	e598      	b.n	9000c1ba <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000c688:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c68a:	4635      	mov	r5, r6
9000c68c:	e6e5      	b.n	9000c45a <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c68e:	4970      	ldr	r1, [pc, #448]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c690:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c692:	f001 0103 	and.w	r1, r1, #3
9000c696:	2903      	cmp	r1, #3
9000c698:	f43f adda 	beq.w	9000c250 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c69c:	2101      	movs	r1, #1
9000c69e:	f104 0008 	add.w	r0, r4, #8
9000c6a2:	f7ff fb4d 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c6a6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c6a8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6ac:	2d00      	cmp	r5, #0
9000c6ae:	f040 80d5 	bne.w	9000c85c <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000c6b2:	4f67      	ldr	r7, [pc, #412]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c6b4:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000c6b6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c6b8:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000c6bc:	4301      	orrs	r1, r0
9000c6be:	6579      	str	r1, [r7, #84]	@ 0x54
9000c6c0:	e5c8      	b.n	9000c254 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c6c2:	4863      	ldr	r0, [pc, #396]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c6c4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c6c6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c6ca:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c6cc:	2d00      	cmp	r5, #0
9000c6ce:	f040 809f 	bne.w	9000c810 <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000c6d2:	4f5f      	ldr	r7, [pc, #380]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c6d4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000c6d8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c6da:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000c6de:	4301      	orrs	r1, r0
9000c6e0:	6579      	str	r1, [r7, #84]	@ 0x54
9000c6e2:	e6cc      	b.n	9000c47e <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000c6e4:	4f5b      	ldr	r7, [pc, #364]	@ (9000c854 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000c6e6:	683b      	ldr	r3, [r7, #0]
9000c6e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c6ec:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c6ee:	f7fa ff59 	bl	900075a4 <HAL_GetTick>
9000c6f2:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c6f4:	e006      	b.n	9000c704 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c6f6:	f7fa ff55 	bl	900075a4 <HAL_GetTick>
9000c6fa:	eba0 0008 	sub.w	r0, r0, r8
9000c6fe:	2864      	cmp	r0, #100	@ 0x64
9000c700:	f200 82db 	bhi.w	9000ccba <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c704:	683b      	ldr	r3, [r7, #0]
9000c706:	05da      	lsls	r2, r3, #23
9000c708:	d5f5      	bpl.n	9000c6f6 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000c70a:	2d00      	cmp	r5, #0
9000c70c:	f040 82d6 	bne.w	9000ccbc <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c710:	4a4f      	ldr	r2, [pc, #316]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c712:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c716:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000c718:	4059      	eors	r1, r3
9000c71a:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000c71e:	d00b      	beq.n	9000c738 <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c720:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c722:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c724:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c728:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000c72c:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c72e:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000c730:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000c734:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000c736:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c738:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000c73c:	f000 82fb 	beq.w	9000cd36 <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c740:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000c744:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000c748:	f000 8309 	beq.w	9000cd5e <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000c74c:	4940      	ldr	r1, [pc, #256]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c74e:	690a      	ldr	r2, [r1, #16]
9000c750:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000c754:	610a      	str	r2, [r1, #16]
9000c756:	483e      	ldr	r0, [pc, #248]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c758:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c75c:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000c75e:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c760:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c764:	6701      	str	r1, [r0, #112]	@ 0x70
9000c766:	e543      	b.n	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c768:	4839      	ldr	r0, [pc, #228]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c76a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c76c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c770:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000c772:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c774:	2d00      	cmp	r5, #0
9000c776:	f040 8177 	bne.w	9000ca68 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c77a:	4f35      	ldr	r7, [pc, #212]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c77c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000c77e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c780:	f021 0107 	bic.w	r1, r1, #7
9000c784:	4301      	orrs	r1, r0
9000c786:	6539      	str	r1, [r7, #80]	@ 0x50
9000c788:	f7ff bbf6 	b.w	9000bf78 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c78c:	4930      	ldr	r1, [pc, #192]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c78e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c790:	f001 0103 	and.w	r1, r1, #3
9000c794:	2903      	cmp	r1, #3
9000c796:	f000 82ba 	beq.w	9000cd0e <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000c79a:	2102      	movs	r1, #2
9000c79c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c7a0:	f7ff fb3e 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c7a4:	2800      	cmp	r0, #0
9000c7a6:	f000 82b5 	beq.w	9000cd14 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c7aa:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000c7ae:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c7b0:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c7b4:	e616      	b.n	9000c3e4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c7b6:	4926      	ldr	r1, [pc, #152]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c7b8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7ba:	f001 0103 	and.w	r1, r1, #3
9000c7be:	2903      	cmp	r1, #3
9000c7c0:	f000 82a2 	beq.w	9000cd08 <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000c7c4:	2102      	movs	r1, #2
9000c7c6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c7ca:	f7ff fb29 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c7ce:	2800      	cmp	r0, #0
9000c7d0:	f040 82a6 	bne.w	9000cd20 <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c7d4:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c7d8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c7dc:	e610      	b.n	9000c400 <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c7de:	481c      	ldr	r0, [pc, #112]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c7e0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c7e2:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c7e6:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c7e8:	2d00      	cmp	r5, #0
9000c7ea:	f43f ae64 	beq.w	9000c4b6 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000c7ee:	462e      	mov	r6, r5
9000c7f0:	e668      	b.n	9000c4c4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c7f2:	4f17      	ldr	r7, [pc, #92]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c7f4:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000c7f6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c7fa:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c7fc:	2d00      	cmp	r5, #0
9000c7fe:	f47f ae76 	bne.w	9000c4ee <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000c802:	4d13      	ldr	r5, [pc, #76]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c804:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000c806:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000c80a:	4301      	orrs	r1, r0
9000c80c:	6569      	str	r1, [r5, #84]	@ 0x54
9000c80e:	e66d      	b.n	9000c4ec <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000c810:	462e      	mov	r6, r5
9000c812:	e634      	b.n	9000c47e <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000c814:	462e      	mov	r6, r5
9000c816:	e4d0      	b.n	9000c1ba <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000c818:	462e      	mov	r6, r5
9000c81a:	e445      	b.n	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000c81c:	4f0c      	ldr	r7, [pc, #48]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c81e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000c820:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c822:	f021 0103 	bic.w	r1, r1, #3
9000c826:	4301      	orrs	r1, r0
9000c828:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000c82a:	e4de      	b.n	9000c1ea <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000c82c:	4f08      	ldr	r7, [pc, #32]	@ (9000c850 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000c82e:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000c830:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c832:	f021 0107 	bic.w	r1, r1, #7
9000c836:	4301      	orrs	r1, r0
9000c838:	6579      	str	r1, [r7, #84]	@ 0x54
9000c83a:	e52c      	b.n	9000c296 <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000c83c:	462e      	mov	r6, r5
9000c83e:	e577      	b.n	9000c330 <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000c840:	462e      	mov	r6, r5
9000c842:	e4aa      	b.n	9000c19a <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000c844:	462e      	mov	r6, r5
9000c846:	e59c      	b.n	9000c382 <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000c848:	462e      	mov	r6, r5
9000c84a:	e606      	b.n	9000c45a <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000c84c:	462e      	mov	r6, r5
9000c84e:	e5c1      	b.n	9000c3d4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c850:	58024400 	.word	0x58024400
9000c854:	58024800 	.word	0x58024800
      status = ret;
9000c858:	462e      	mov	r6, r5
9000c85a:	e475      	b.n	9000c148 <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000c85c:	462e      	mov	r6, r5
9000c85e:	e4f9      	b.n	9000c254 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000c860:	4fc2      	ldr	r7, [pc, #776]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c862:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000c866:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c868:	f021 0107 	bic.w	r1, r1, #7
9000c86c:	4301      	orrs	r1, r0
9000c86e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000c870:	e535      	b.n	9000c2de <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000c872:	2900      	cmp	r1, #0
9000c874:	f47f aef3 	bne.w	9000c65e <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000c878:	e7c0      	b.n	9000c7fc <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c87a:	49bc      	ldr	r1, [pc, #752]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c87c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c87e:	f001 0103 	and.w	r1, r1, #3
9000c882:	2903      	cmp	r1, #3
9000c884:	f000 8194 	beq.w	9000cbb0 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000c888:	2102      	movs	r1, #2
9000c88a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c88e:	f7ff fac7 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c892:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c894:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c898:	2d00      	cmp	r5, #0
9000c89a:	d1cf      	bne.n	9000c83c <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000c89c:	e540      	b.n	9000c320 <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c89e:	49b3      	ldr	r1, [pc, #716]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c8a0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c8a2:	f001 0103 	and.w	r1, r1, #3
9000c8a6:	2903      	cmp	r1, #3
9000c8a8:	f000 81ba 	beq.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000c8ac:	2102      	movs	r1, #2
9000c8ae:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c8b2:	f7ff fab5 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c8b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c8b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c8bc:	2d00      	cmp	r5, #0
9000c8be:	d1c1      	bne.n	9000c844 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000c8c0:	e557      	b.n	9000c372 <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c8c2:	49aa      	ldr	r1, [pc, #680]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c8c4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c8c6:	f001 0103 	and.w	r1, r1, #3
9000c8ca:	2903      	cmp	r1, #3
9000c8cc:	f000 818c 	beq.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000c8d0:	2102      	movs	r1, #2
9000c8d2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c8d6:	f7ff faa3 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c8da:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c8dc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c8e0:	2d00      	cmp	r5, #0
9000c8e2:	d1b3      	bne.n	9000c84c <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000c8e4:	e56e      	b.n	9000c3c4 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c8e6:	49a1      	ldr	r1, [pc, #644]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c8e8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c8ea:	f001 0103 	and.w	r1, r1, #3
9000c8ee:	2903      	cmp	r1, #3
9000c8f0:	f000 81df 	beq.w	9000ccb2 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000c8f4:	2102      	movs	r1, #2
9000c8f6:	f104 0008 	add.w	r0, r4, #8
9000c8fa:	f7ff fa21 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c8fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c900:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c904:	2d00      	cmp	r5, #0
9000c906:	d187      	bne.n	9000c818 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000c908:	f7ff bbc7 	b.w	9000c09a <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c90c:	4997      	ldr	r1, [pc, #604]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c90e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c910:	f001 0103 	and.w	r1, r1, #3
9000c914:	2903      	cmp	r1, #3
9000c916:	f000 820a 	beq.w	9000cd2e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c91a:	2102      	movs	r1, #2
9000c91c:	f104 0008 	add.w	r0, r4, #8
9000c920:	f7ff fa0e 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000c924:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c926:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c92a:	2d00      	cmp	r5, #0
9000c92c:	f47f ac5c 	bne.w	9000c1e8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000c930:	e774      	b.n	9000c81c <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c932:	498e      	ldr	r1, [pc, #568]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c934:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c936:	f001 0103 	and.w	r1, r1, #3
9000c93a:	2903      	cmp	r1, #3
9000c93c:	f000 8146 	beq.w	9000cbcc <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000c940:	2101      	movs	r1, #1
9000c942:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c946:	f7ff fa6b 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c94a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c94c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c950:	2d00      	cmp	r5, #0
9000c952:	d181      	bne.n	9000c858 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000c954:	f7ff bbf1 	b.w	9000c13a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c958:	4984      	ldr	r1, [pc, #528]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c95a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c95c:	f001 0103 	and.w	r1, r1, #3
9000c960:	2903      	cmp	r1, #3
9000c962:	f43f ad8a 	beq.w	9000c47a <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000c966:	2101      	movs	r1, #1
9000c968:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c96c:	f7ff fa58 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c970:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c972:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c976:	2d00      	cmp	r5, #0
9000c978:	f47f af4a 	bne.w	9000c810 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000c97c:	e6a9      	b.n	9000c6d2 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c97e:	497b      	ldr	r1, [pc, #492]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c980:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c982:	f001 0103 	and.w	r1, r1, #3
9000c986:	2903      	cmp	r1, #3
9000c988:	f43f ae7e 	beq.w	9000c688 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000c98c:	2102      	movs	r1, #2
9000c98e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c992:	f7ff fa45 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c996:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c998:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c99c:	2d00      	cmp	r5, #0
9000c99e:	f47f af53 	bne.w	9000c848 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000c9a2:	e552      	b.n	9000c44a <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9a4:	4971      	ldr	r1, [pc, #452]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c9a6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c9a8:	f001 0103 	and.w	r1, r1, #3
9000c9ac:	2903      	cmp	r1, #3
9000c9ae:	f000 8129 	beq.w	9000cc04 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000c9b2:	2101      	movs	r1, #1
9000c9b4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c9b8:	f7ff fa32 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000c9bc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c9be:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c9c2:	2d00      	cmp	r5, #0
9000c9c4:	f47f af3c 	bne.w	9000c840 <HAL_RCCEx_PeriphCLKConfig+0x940>
9000c9c8:	f7ff bbdf 	b.w	9000c18a <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c9cc:	4867      	ldr	r0, [pc, #412]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c9ce:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c9d0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c9d4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c9d6:	2d00      	cmp	r5, #0
9000c9d8:	f43f ab88 	beq.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000c9dc:	462e      	mov	r6, r5
9000c9de:	f7ff bb8c 	b.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c9e2:	4862      	ldr	r0, [pc, #392]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c9e4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c9e6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c9ea:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c9ec:	2d00      	cmp	r5, #0
9000c9ee:	f43f ab38 	beq.w	9000c062 <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000c9f2:	462e      	mov	r6, r5
9000c9f4:	f7ff bb3d 	b.w	9000c072 <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9f8:	495c      	ldr	r1, [pc, #368]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000c9fa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c9fc:	f001 0103 	and.w	r1, r1, #3
9000ca00:	2903      	cmp	r1, #3
9000ca02:	f000 8125 	beq.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000ca06:	2100      	movs	r1, #0
9000ca08:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ca0c:	f7ff fa08 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000ca10:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ca12:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000ca16:	f7ff bb66 	b.w	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca1a:	4954      	ldr	r1, [pc, #336]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ca1c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca1e:	f001 0103 	and.w	r1, r1, #3
9000ca22:	2903      	cmp	r1, #3
9000ca24:	f000 813e 	beq.w	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000ca28:	2100      	movs	r1, #0
9000ca2a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ca2e:	f7ff f9f7 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000ca32:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000ca34:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ca38:	2d00      	cmp	r5, #0
9000ca3a:	f43f aabd 	beq.w	9000bfb8 <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000ca3e:	462e      	mov	r6, r5
9000ca40:	f7ff bac1 	b.w	9000bfc6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca44:	4949      	ldr	r1, [pc, #292]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ca46:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca48:	f001 0103 	and.w	r1, r1, #3
9000ca4c:	2903      	cmp	r1, #3
9000ca4e:	f43f aa91 	beq.w	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000ca52:	2100      	movs	r1, #0
9000ca54:	f104 0008 	add.w	r0, r4, #8
9000ca58:	f7ff f972 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000ca5c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000ca5e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ca62:	2d00      	cmp	r5, #0
9000ca64:	f43f ae89 	beq.w	9000c77a <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000ca68:	462e      	mov	r6, r5
9000ca6a:	f7ff ba85 	b.w	9000bf78 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca6e:	493f      	ldr	r1, [pc, #252]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ca70:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca72:	f001 0103 	and.w	r1, r1, #3
9000ca76:	2903      	cmp	r1, #3
9000ca78:	f43f aa7c 	beq.w	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000ca7c:	2100      	movs	r1, #0
9000ca7e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ca82:	f7ff f9cd 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000ca86:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000ca88:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000ca8c:	e672      	b.n	9000c774 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca8e:	4937      	ldr	r1, [pc, #220]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000ca90:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ca92:	f001 0103 	and.w	r1, r1, #3
9000ca96:	2903      	cmp	r1, #3
9000ca98:	f000 80f9 	beq.w	9000cc8e <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000ca9c:	2100      	movs	r1, #0
9000ca9e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000caa2:	f7ff f9bd 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000caa6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000caa8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000caac:	2d00      	cmp	r5, #0
9000caae:	f43f aaad 	beq.w	9000c00c <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000cab2:	462e      	mov	r6, r5
9000cab4:	f7ff bab2 	b.w	9000c01c <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cab8:	492c      	ldr	r1, [pc, #176]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000caba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cabc:	f001 0103 	and.w	r1, r1, #3
9000cac0:	2903      	cmp	r1, #3
9000cac2:	f000 80d1 	beq.w	9000cc68 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000cac6:	2100      	movs	r1, #0
9000cac8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cacc:	f7ff f9a8 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000cad0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cad2:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000cad6:	f7ff bac1 	b.w	9000c05c <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cada:	4924      	ldr	r1, [pc, #144]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cadc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cade:	f001 0103 	and.w	r1, r1, #3
9000cae2:	2903      	cmp	r1, #3
9000cae4:	f000 80c8 	beq.w	9000cc78 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000cae8:	2102      	movs	r1, #2
9000caea:	3028      	adds	r0, #40	@ 0x28
9000caec:	f7ff f998 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000caf0:	4606      	mov	r6, r0
        break;
9000caf2:	f7ff ba28 	b.w	9000bf46 <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000caf6:	481d      	ldr	r0, [pc, #116]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000caf8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cafa:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cafe:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000cb00:	f7ff ba81 	b.w	9000c006 <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cb04:	4819      	ldr	r0, [pc, #100]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cb06:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cb08:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cb0c:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000cb0e:	f7ff ba50 	b.w	9000bfb2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cb12:	4d16      	ldr	r5, [pc, #88]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cb14:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000cb16:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000cb1a:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cb1c:	f7ff ba17 	b.w	9000bf4e <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb20:	4912      	ldr	r1, [pc, #72]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cb22:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb24:	f001 0103 	and.w	r1, r1, #3
9000cb28:	2903      	cmp	r1, #3
9000cb2a:	f000 80e5 	beq.w	9000ccf8 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000cb2e:	2101      	movs	r1, #1
9000cb30:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cb34:	f7ff f974 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000cb38:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cb3a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb3e:	2d00      	cmp	r5, #0
9000cb40:	f47f abcc 	bne.w	9000c2dc <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000cb44:	e68c      	b.n	9000c860 <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb46:	4909      	ldr	r1, [pc, #36]	@ (9000cb6c <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000cb48:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb4a:	f001 0103 	and.w	r1, r1, #3
9000cb4e:	2903      	cmp	r1, #3
9000cb50:	f000 80d6 	beq.w	9000cd00 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000cb54:	2101      	movs	r1, #1
9000cb56:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cb5a:	f7ff f961 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000cb5e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000cb60:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb64:	2d00      	cmp	r5, #0
9000cb66:	f47f ab95 	bne.w	9000c294 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000cb6a:	e65f      	b.n	9000c82c <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000cb6c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb70:	4983      	ldr	r1, [pc, #524]	@ (9000cd80 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000cb72:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb74:	f001 0103 	and.w	r1, r1, #3
9000cb78:	2903      	cmp	r1, #3
9000cb7a:	f43f ab69 	beq.w	9000c250 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000cb7e:	2101      	movs	r1, #1
9000cb80:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cb84:	f7ff f94c 	bl	9000be20 <RCCEx_PLL3_Config.part.0>
9000cb88:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000cb8a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb8e:	2d00      	cmp	r5, #0
9000cb90:	f47f ae64 	bne.w	9000c85c <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000cb94:	e58d      	b.n	9000c6b2 <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000cb96:	2001      	movs	r0, #1
}
9000cb98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cb9c:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000cba0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000cba4:	f43f abb9 	beq.w	9000c31a <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000cba8:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000cbac:	f43f abb5 	beq.w	9000c31a <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000cbb0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cbb2:	4635      	mov	r5, r6
9000cbb4:	f7ff bbbc 	b.w	9000c330 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cbb8:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000cbbc:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000cbc0:	f43f aab8 	beq.w	9000c134 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000cbc4:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000cbc8:	f43f aab4 	beq.w	9000c134 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000cbcc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cbce:	4635      	mov	r5, r6
9000cbd0:	f7ff baba 	b.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cbd4:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000cbd8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000cbdc:	f43f abef 	beq.w	9000c3be <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000cbe0:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000cbe4:	f43f abeb 	beq.w	9000c3be <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000cbe8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cbea:	4635      	mov	r5, r6
9000cbec:	f7ff bbf2 	b.w	9000c3d4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cbf0:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000cbf4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000cbf8:	f43f aac4 	beq.w	9000c184 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000cbfc:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000cc00:	f43f aac0 	beq.w	9000c184 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000cc04:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc06:	4635      	mov	r5, r6
9000cc08:	f7ff bac7 	b.w	9000c19a <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cc0c:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000cc10:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000cc14:	f43f abaa 	beq.w	9000c36c <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000cc18:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000cc1c:	f43f aba6 	beq.w	9000c36c <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000cc20:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc22:	4635      	mov	r5, r6
9000cc24:	f7ff bbad 	b.w	9000c382 <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000cc28:	2501      	movs	r5, #1
9000cc2a:	e4e2      	b.n	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cc2c:	0691      	lsls	r1, r2, #26
9000cc2e:	d5b2      	bpl.n	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000cc30:	2501      	movs	r5, #1
9000cc32:	e4f2      	b.n	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000cc34:	2501      	movs	r5, #1
9000cc36:	e4a9      	b.n	9000c58c <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000cc38:	2501      	movs	r5, #1
9000cc3a:	e4b8      	b.n	9000c5ae <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000cc3c:	2501      	movs	r5, #1
9000cc3e:	e4c7      	b.n	9000c5d0 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cc40:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000cc44:	f43f aa4f 	beq.w	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000cc48:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000cc4c:	f43f aa4b 	beq.w	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000cc50:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc52:	4635      	mov	r5, r6
9000cc54:	f7ff ba51 	b.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cc58:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000cc5c:	f43f a9fe 	beq.w	9000c05c <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000cc60:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000cc64:	f43f a9fa 	beq.w	9000c05c <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000cc68:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc6a:	4635      	mov	r5, r6
9000cc6c:	f7ff ba01 	b.w	9000c072 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cc70:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000cc74:	f43f a96b 	beq.w	9000bf4e <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000cc78:	2601      	movs	r6, #1
9000cc7a:	f7ff b96f 	b.w	9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cc7e:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000cc82:	f43f a9c0 	beq.w	9000c006 <HAL_RCCEx_PeriphCLKConfig+0x106>
9000cc86:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000cc8a:	f43f a9bc 	beq.w	9000c006 <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000cc8e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cc90:	4635      	mov	r5, r6
9000cc92:	f7ff b9c3 	b.w	9000c01c <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000cc96:	29c0      	cmp	r1, #192	@ 0xc0
9000cc98:	f43f a98b 	beq.w	9000bfb2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000cc9c:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000cca0:	f43f a987 	beq.w	9000bfb2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000cca4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cca6:	4635      	mov	r5, r6
9000cca8:	f7ff b98d 	b.w	9000bfc6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000ccac:	2930      	cmp	r1, #48	@ 0x30
9000ccae:	f43f a9f1 	beq.w	9000c094 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000ccb2:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000ccb4:	4635      	mov	r5, r6
9000ccb6:	f7ff b9f7 	b.w	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000ccba:	2503      	movs	r5, #3
      status = ret;
9000ccbc:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ccbe:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ccc2:	f7ff ba95 	b.w	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ccc6:	6863      	ldr	r3, [r4, #4]
9000ccc8:	069a      	lsls	r2, r3, #26
9000ccca:	f57f af64 	bpl.w	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000ccce:	4605      	mov	r5, r0
9000ccd0:	e4a3      	b.n	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ccd2:	492b      	ldr	r1, [pc, #172]	@ (9000cd80 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000ccd4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ccd6:	f001 0103 	and.w	r1, r1, #3
9000ccda:	2903      	cmp	r1, #3
9000ccdc:	f43f aa6b 	beq.w	9000c1b6 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000cce0:	2101      	movs	r1, #1
9000cce2:	f104 0008 	add.w	r0, r4, #8
9000cce6:	f7ff f82b 	bl	9000bd40 <RCCEx_PLL2_Config.part.0>
9000ccea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ccec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccf0:	2d00      	cmp	r5, #0
9000ccf2:	f47f ad8f 	bne.w	9000c814 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000ccf6:	e4bf      	b.n	9000c678 <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000ccf8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000ccfa:	4635      	mov	r5, r6
9000ccfc:	f7ff baef 	b.w	9000c2de <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000cd00:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cd02:	4635      	mov	r5, r6
9000cd04:	f7ff bac7 	b.w	9000c296 <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000cd08:	2601      	movs	r6, #1
9000cd0a:	f7ff bb79 	b.w	9000c400 <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000cd0e:	2601      	movs	r6, #1
9000cd10:	f7ff bb68 	b.w	9000c3e4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cd14:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cd18:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cd1c:	f7ff bb62 	b.w	9000c3e4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000cd20:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000cd24:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000cd26:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cd2a:	f7ff bb69 	b.w	9000c400 <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000cd2e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cd30:	4635      	mov	r5, r6
9000cd32:	f7ff ba5a 	b.w	9000c1ea <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000cd36:	f7fa fc35 	bl	900075a4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cd3a:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000cd80 <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000cd3e:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cd40:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cd44:	e004      	b.n	9000cd50 <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cd46:	f7fa fc2d 	bl	900075a4 <HAL_GetTick>
9000cd4a:	1bc0      	subs	r0, r0, r7
9000cd4c:	4548      	cmp	r0, r9
9000cd4e:	d810      	bhi.n	9000cd72 <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cd50:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000cd54:	079b      	lsls	r3, r3, #30
9000cd56:	d5f6      	bpl.n	9000cd46 <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000cd58:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000cd5c:	e4f0      	b.n	9000c740 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000cd5e:	4808      	ldr	r0, [pc, #32]	@ (9000cd80 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000cd60:	4a08      	ldr	r2, [pc, #32]	@ (9000cd84 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000cd62:	6901      	ldr	r1, [r0, #16]
9000cd64:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000cd68:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000cd6c:	430a      	orrs	r2, r1
9000cd6e:	6102      	str	r2, [r0, #16]
9000cd70:	e4f1      	b.n	9000c756 <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000cd72:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cd74:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cd78:	4635      	mov	r5, r6
9000cd7a:	f7ff ba39 	b.w	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000cd7e:	bf00      	nop
9000cd80:	58024400 	.word	0x58024400
9000cd84:	00ffffcf 	.word	0x00ffffcf

9000cd88 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000cd88:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000cd8a:	f7fe fedd 	bl	9000bb48 <HAL_RCC_GetHCLKFreq>
9000cd8e:	4b05      	ldr	r3, [pc, #20]	@ (9000cda4 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000cd90:	4a05      	ldr	r2, [pc, #20]	@ (9000cda8 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000cd92:	6a1b      	ldr	r3, [r3, #32]
9000cd94:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000cd98:	5cd3      	ldrb	r3, [r2, r3]
9000cd9a:	f003 031f 	and.w	r3, r3, #31
}
9000cd9e:	40d8      	lsrs	r0, r3
9000cda0:	bd08      	pop	{r3, pc}
9000cda2:	bf00      	nop
9000cda4:	58024400 	.word	0x58024400
9000cda8:	9002f118 	.word	0x9002f118

9000cdac <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cdac:	4a47      	ldr	r2, [pc, #284]	@ (9000cecc <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000cdae:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cdb0:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000cdb2:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000cdb4:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000cdb6:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000cdba:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000cdbe:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000cdc0:	d05b      	beq.n	9000ce7a <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000cdc2:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000cdc6:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cdca:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000cdce:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000cdd2:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000cdd6:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000cdd8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000cddc:	ee06 1a90 	vmov	s13, r1
9000cde0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000cde4:	d003      	beq.n	9000cdee <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000cde6:	2c02      	cmp	r4, #2
9000cde8:	d06a      	beq.n	9000cec0 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000cdea:	2c00      	cmp	r4, #0
9000cdec:	d04a      	beq.n	9000ce84 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000cdee:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000ced0 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000cdf2:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000cdf6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000cdf8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000cdfc:	ee07 3a90 	vmov	s15, r3
9000ce00:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ce04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ce08:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000ce0c:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000ce10:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000ce14:	4a2d      	ldr	r2, [pc, #180]	@ (9000cecc <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000ce16:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000ce1a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000ce1c:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ce20:	ee07 3a10 	vmov	s14, r3
9000ce24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000ce28:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000ce2a:	ee37 7a06 	vadd.f32	s14, s14, s12
9000ce2e:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000ce32:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000ce36:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000ce3a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000ce3c:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000ce40:	ee07 3a10 	vmov	s14, r3
9000ce44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ce48:	ee37 7a06 	vadd.f32	s14, s14, s12
9000ce4c:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000ce50:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000ce54:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000ce58:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000ce5a:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000ce5e:	ee06 3a90 	vmov	s13, r3
9000ce62:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000ce66:	ee76 6a86 	vadd.f32	s13, s13, s12
9000ce6a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000ce6e:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000ce72:	ee17 3a90 	vmov	r3, s15
9000ce76:	6083      	str	r3, [r0, #8]
}
9000ce78:	4770      	bx	lr
9000ce7a:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000ce7c:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000ce80:	6083      	str	r3, [r0, #8]
}
9000ce82:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ce84:	6813      	ldr	r3, [r2, #0]
9000ce86:	069b      	lsls	r3, r3, #26
9000ce88:	d51d      	bpl.n	9000cec6 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ce8a:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ce8c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ce90:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ce92:	4910      	ldr	r1, [pc, #64]	@ (9000ced4 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000ce94:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ce98:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ce9c:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ce9e:	ee07 3a90 	vmov	s15, r3
9000cea2:	ee06 1a10 	vmov	s12, r1
9000cea6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ceaa:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ceae:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000ceb2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000ceb6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000ceba:	ee67 7a87 	vmul.f32	s15, s15, s14
9000cebe:	e7a9      	b.n	9000ce14 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000cec0:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000ced8 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000cec4:	e795      	b.n	9000cdf2 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000cec6:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000cedc <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000ceca:	e792      	b.n	9000cdf2 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000cecc:	58024400 	.word	0x58024400
9000ced0:	4a742400 	.word	0x4a742400
9000ced4:	03d09000 	.word	0x03d09000
9000ced8:	4bbebc20 	.word	0x4bbebc20
9000cedc:	4c742400 	.word	0x4c742400

9000cee0 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cee0:	4a47      	ldr	r2, [pc, #284]	@ (9000d000 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000cee2:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cee4:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000cee6:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000cee8:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000ceea:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000ceee:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000cef2:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000cef4:	d05b      	beq.n	9000cfae <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000cef6:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000cefa:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000cefe:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cf02:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000cf06:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000cf0a:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cf0c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000cf10:	ee06 1a90 	vmov	s13, r1
9000cf14:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000cf18:	d003      	beq.n	9000cf22 <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000cf1a:	2c02      	cmp	r4, #2
9000cf1c:	d06a      	beq.n	9000cff4 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000cf1e:	2c00      	cmp	r4, #0
9000cf20:	d04a      	beq.n	9000cfb8 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cf22:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000d004 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000cf26:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000cf2a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000cf2c:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000cf30:	ee07 3a90 	vmov	s15, r3
9000cf34:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000cf38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cf3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000cf40:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000cf44:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000cf48:	4a2d      	ldr	r2, [pc, #180]	@ (9000d000 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000cf4a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000cf4e:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000cf50:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000cf54:	ee07 3a10 	vmov	s14, r3
9000cf58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000cf5c:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000cf5e:	ee37 7a06 	vadd.f32	s14, s14, s12
9000cf62:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000cf66:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000cf6a:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000cf6e:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000cf70:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000cf74:	ee07 3a10 	vmov	s14, r3
9000cf78:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000cf7c:	ee37 7a06 	vadd.f32	s14, s14, s12
9000cf80:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000cf84:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000cf88:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000cf8c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000cf8e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000cf92:	ee06 3a90 	vmov	s13, r3
9000cf96:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000cf9a:	ee76 6a86 	vadd.f32	s13, s13, s12
9000cf9e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000cfa2:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000cfa6:	ee17 3a90 	vmov	r3, s15
9000cfaa:	6083      	str	r3, [r0, #8]
}
9000cfac:	4770      	bx	lr
9000cfae:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000cfb0:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000cfb4:	6083      	str	r3, [r0, #8]
}
9000cfb6:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cfb8:	6813      	ldr	r3, [r2, #0]
9000cfba:	069b      	lsls	r3, r3, #26
9000cfbc:	d51d      	bpl.n	9000cffa <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cfbe:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cfc0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000cfc4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cfc6:	4910      	ldr	r1, [pc, #64]	@ (9000d008 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000cfc8:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cfcc:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cfd0:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cfd2:	ee07 3a90 	vmov	s15, r3
9000cfd6:	ee06 1a10 	vmov	s12, r1
9000cfda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cfde:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000cfe2:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000cfe6:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000cfea:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000cfee:	ee67 7a87 	vmul.f32	s15, s15, s14
9000cff2:	e7a9      	b.n	9000cf48 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cff4:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d00c <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000cff8:	e795      	b.n	9000cf26 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000cffa:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000d010 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000cffe:	e792      	b.n	9000cf26 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000d000:	58024400 	.word	0x58024400
9000d004:	4a742400 	.word	0x4a742400
9000d008:	03d09000 	.word	0x03d09000
9000d00c:	4bbebc20 	.word	0x4bbebc20
9000d010:	4c742400 	.word	0x4c742400

9000d014 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d014:	b318      	cbz	r0, 9000d05e <HAL_SDRAM_Init+0x4a>
{
9000d016:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d018:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000d01c:	4604      	mov	r4, r0
9000d01e:	460d      	mov	r5, r1
9000d020:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d024:	b1b3      	cbz	r3, 9000d054 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d026:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d028:	2302      	movs	r3, #2
9000d02a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d02e:	f851 0b04 	ldr.w	r0, [r1], #4
9000d032:	f001 fdbd 	bl	9000ebb0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d036:	6862      	ldr	r2, [r4, #4]
9000d038:	4629      	mov	r1, r5
9000d03a:	6820      	ldr	r0, [r4, #0]
9000d03c:	f001 fdee 	bl	9000ec1c <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d040:	4a08      	ldr	r2, [pc, #32]	@ (9000d064 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d042:	2101      	movs	r1, #1

  return HAL_OK;
9000d044:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d046:	6813      	ldr	r3, [r2, #0]
9000d048:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000d04c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d04e:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000d052:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d054:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d058:	f7f7 fa48 	bl	900044ec <HAL_SDRAM_MspInit>
9000d05c:	e7e3      	b.n	9000d026 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d05e:	2001      	movs	r0, #1
}
9000d060:	4770      	bx	lr
9000d062:	bf00      	nop
9000d064:	52004000 	.word	0x52004000

9000d068 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d068:	b510      	push	{r4, lr}
9000d06a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d06c:	f7f7 faba 	bl	900045e4 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d070:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d074:	f001 fe10 	bl	9000ec98 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d078:	2000      	movs	r0, #0
9000d07a:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d07e:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000d082:	bd10      	pop	{r4, pc}

9000d084 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d084:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d086:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d08a:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d08c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d08e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d090:	d004      	beq.n	9000d09c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d092:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000d096:	2c01      	cmp	r4, #1
9000d098:	d001      	beq.n	9000d09e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d09a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d09c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d09e:	2302      	movs	r3, #2
9000d0a0:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d0a2:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d0a4:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d0a8:	f001 fe0a 	bl	9000ecc0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d0ac:	6833      	ldr	r3, [r6, #0]
9000d0ae:	2b02      	cmp	r3, #2
9000d0b0:	d003      	beq.n	9000d0ba <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d0b2:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000d0b6:	2000      	movs	r0, #0
}
9000d0b8:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d0ba:	2305      	movs	r3, #5
9000d0bc:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000d0c0:	e7f9      	b.n	9000d0b6 <HAL_SDRAM_SendCommand+0x32>
9000d0c2:	bf00      	nop

9000d0c4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d0c4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d0c6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d0ca:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d0cc:	2b02      	cmp	r3, #2
9000d0ce:	b2d8      	uxtb	r0, r3
9000d0d0:	d005      	beq.n	9000d0de <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d0d2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000d0d6:	2b01      	cmp	r3, #1
9000d0d8:	b2dd      	uxtb	r5, r3
9000d0da:	d001      	beq.n	9000d0e0 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d0dc:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d0de:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d0e0:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d0e2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d0e4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d0e8:	f001 fe04 	bl	9000ecf4 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d0ec:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d0ee:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000d0f2:	bd38      	pop	{r3, r4, r5, pc}

9000d0f4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d0f4:	4770      	bx	lr
9000d0f6:	bf00      	nop

9000d0f8 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d0f8:	2800      	cmp	r0, #0
9000d0fa:	f000 8095 	beq.w	9000d228 <HAL_TIM_Base_Init+0x130>
{
9000d0fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d100:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d104:	4604      	mov	r4, r0
9000d106:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d10a:	2b00      	cmp	r3, #0
9000d10c:	f000 8087 	beq.w	9000d21e <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d110:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d112:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d114:	4945      	ldr	r1, [pc, #276]	@ (9000d22c <HAL_TIM_Base_Init+0x134>)
9000d116:	4d46      	ldr	r5, [pc, #280]	@ (9000d230 <HAL_TIM_Base_Init+0x138>)
9000d118:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000d11c:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000d120:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d124:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000d128:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d12a:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d12e:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d130:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d134:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d136:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d13a:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d13c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000d140:	d01f      	beq.n	9000d182 <HAL_TIM_Base_Init+0x8a>
9000d142:	b9f1      	cbnz	r1, 9000d182 <HAL_TIM_Base_Init+0x8a>
9000d144:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000d240 <HAL_TIM_Base_Init+0x148>
9000d148:	4563      	cmp	r3, ip
9000d14a:	d050      	beq.n	9000d1ee <HAL_TIM_Base_Init+0xf6>
9000d14c:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d150:	4563      	cmp	r3, ip
9000d152:	d04c      	beq.n	9000d1ee <HAL_TIM_Base_Init+0xf6>
9000d154:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d158:	4563      	cmp	r3, ip
9000d15a:	d012      	beq.n	9000d182 <HAL_TIM_Base_Init+0x8a>
9000d15c:	f1be 0f00 	cmp.w	lr, #0
9000d160:	d10f      	bne.n	9000d182 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d162:	4d34      	ldr	r5, [pc, #208]	@ (9000d234 <HAL_TIM_Base_Init+0x13c>)
9000d164:	4934      	ldr	r1, [pc, #208]	@ (9000d238 <HAL_TIM_Base_Init+0x140>)
9000d166:	428b      	cmp	r3, r1
9000d168:	bf18      	it	ne
9000d16a:	42ab      	cmpne	r3, r5
9000d16c:	d043      	beq.n	9000d1f6 <HAL_TIM_Base_Init+0xfe>
9000d16e:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000d172:	428b      	cmp	r3, r1
9000d174:	d03f      	beq.n	9000d1f6 <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d176:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d17a:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d17c:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d17e:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d180:	e014      	b.n	9000d1ac <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000d182:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d184:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d188:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000d18c:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d18e:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d190:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000d192:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d196:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d19a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d19e:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d1a0:	b911      	cbnz	r1, 9000d1a8 <HAL_TIM_Base_Init+0xb0>
9000d1a2:	f1be 0f00 	cmp.w	lr, #0
9000d1a6:	d02f      	beq.n	9000d208 <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d1a8:	6962      	ldr	r2, [r4, #20]
9000d1aa:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d1ac:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d1ae:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000d1b0:	f041 0104 	orr.w	r1, r1, #4
9000d1b4:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000d1b6:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000d1b8:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000d1ba:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d1bc:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d1c0:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000d1c4:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000d1c8:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000d1cc:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000d1d0:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000d1d4:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d1d8:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000d1dc:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000d1e0:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000d1e4:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d1e8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000d1ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d1ee:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000d1f2:	68a1      	ldr	r1, [r4, #8]
9000d1f4:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d1f6:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d1f8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d1fc:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d1fe:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000d200:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d202:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d206:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d208:	490c      	ldr	r1, [pc, #48]	@ (9000d23c <HAL_TIM_Base_Init+0x144>)
9000d20a:	4a0a      	ldr	r2, [pc, #40]	@ (9000d234 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d20c:	4293      	cmp	r3, r2
9000d20e:	bf18      	it	ne
9000d210:	428b      	cmpne	r3, r1
9000d212:	d0c9      	beq.n	9000d1a8 <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d214:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d218:	4293      	cmp	r3, r2
9000d21a:	d0c5      	beq.n	9000d1a8 <HAL_TIM_Base_Init+0xb0>
9000d21c:	e7c6      	b.n	9000d1ac <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000d21e:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d222:	f7ff ff67 	bl	9000d0f4 <HAL_TIM_Base_MspInit>
9000d226:	e773      	b.n	9000d110 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000d228:	2001      	movs	r0, #1
}
9000d22a:	4770      	bx	lr
9000d22c:	40010000 	.word	0x40010000
9000d230:	40010400 	.word	0x40010400
9000d234:	40014000 	.word	0x40014000
9000d238:	40014400 	.word	0x40014400
9000d23c:	40014800 	.word	0x40014800
9000d240:	40000400 	.word	0x40000400

9000d244 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d244:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d248:	2b01      	cmp	r3, #1
9000d24a:	d13d      	bne.n	9000d2c8 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d24c:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d24e:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d250:	4b1e      	ldr	r3, [pc, #120]	@ (9000d2cc <HAL_TIM_Base_Start_IT+0x88>)
9000d252:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000d256:	bf18      	it	ne
9000d258:	429a      	cmpne	r2, r3
{
9000d25a:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d25c:	bf0c      	ite	eq
9000d25e:	2301      	moveq	r3, #1
9000d260:	2300      	movne	r3, #0
9000d262:	4d1b      	ldr	r5, [pc, #108]	@ (9000d2d0 <HAL_TIM_Base_Start_IT+0x8c>)
9000d264:	4c1b      	ldr	r4, [pc, #108]	@ (9000d2d4 <HAL_TIM_Base_Start_IT+0x90>)
9000d266:	42aa      	cmp	r2, r5
9000d268:	bf08      	it	eq
9000d26a:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d26e:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d272:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d274:	42a2      	cmp	r2, r4
9000d276:	bf08      	it	eq
9000d278:	f043 0301 	orreq.w	r3, r3, #1
9000d27c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d280:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d284:	4814      	ldr	r0, [pc, #80]	@ (9000d2d8 <HAL_TIM_Base_Start_IT+0x94>)
9000d286:	42a2      	cmp	r2, r4
9000d288:	bf08      	it	eq
9000d28a:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d28e:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d290:	4282      	cmp	r2, r0
9000d292:	bf08      	it	eq
9000d294:	f043 0301 	orreq.w	r3, r3, #1
9000d298:	4910      	ldr	r1, [pc, #64]	@ (9000d2dc <HAL_TIM_Base_Start_IT+0x98>)
9000d29a:	428a      	cmp	r2, r1
9000d29c:	bf08      	it	eq
9000d29e:	f043 0301 	orreq.w	r3, r3, #1
9000d2a2:	b913      	cbnz	r3, 9000d2aa <HAL_TIM_Base_Start_IT+0x66>
9000d2a4:	4b0e      	ldr	r3, [pc, #56]	@ (9000d2e0 <HAL_TIM_Base_Start_IT+0x9c>)
9000d2a6:	429a      	cmp	r2, r3
9000d2a8:	d107      	bne.n	9000d2ba <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d2aa:	6891      	ldr	r1, [r2, #8]
9000d2ac:	4b0d      	ldr	r3, [pc, #52]	@ (9000d2e4 <HAL_TIM_Base_Start_IT+0xa0>)
9000d2ae:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d2b0:	2b06      	cmp	r3, #6
9000d2b2:	d006      	beq.n	9000d2c2 <HAL_TIM_Base_Start_IT+0x7e>
9000d2b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000d2b8:	d003      	beq.n	9000d2c2 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000d2ba:	6813      	ldr	r3, [r2, #0]
9000d2bc:	f043 0301 	orr.w	r3, r3, #1
9000d2c0:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000d2c2:	2000      	movs	r0, #0
}
9000d2c4:	bc30      	pop	{r4, r5}
9000d2c6:	4770      	bx	lr
    return HAL_ERROR;
9000d2c8:	2001      	movs	r0, #1
}
9000d2ca:	4770      	bx	lr
9000d2cc:	40010000 	.word	0x40010000
9000d2d0:	40000400 	.word	0x40000400
9000d2d4:	40000800 	.word	0x40000800
9000d2d8:	40010400 	.word	0x40010400
9000d2dc:	40001800 	.word	0x40001800
9000d2e0:	40014000 	.word	0x40014000
9000d2e4:	00010007 	.word	0x00010007

9000d2e8 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000d2e8:	4770      	bx	lr
9000d2ea:	bf00      	nop

9000d2ec <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000d2ec:	4770      	bx	lr
9000d2ee:	bf00      	nop

9000d2f0 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000d2f0:	4770      	bx	lr
9000d2f2:	bf00      	nop

9000d2f4 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000d2f4:	4770      	bx	lr
9000d2f6:	bf00      	nop

9000d2f8 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000d2f8:	6803      	ldr	r3, [r0, #0]
{
9000d2fa:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000d2fc:	68de      	ldr	r6, [r3, #12]
{
9000d2fe:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000d300:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000d302:	07aa      	lsls	r2, r5, #30
9000d304:	d501      	bpl.n	9000d30a <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000d306:	07b1      	lsls	r1, r6, #30
9000d308:	d452      	bmi.n	9000d3b0 <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000d30a:	076b      	lsls	r3, r5, #29
9000d30c:	d501      	bpl.n	9000d312 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000d30e:	0770      	lsls	r0, r6, #29
9000d310:	d43b      	bmi.n	9000d38a <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000d312:	0729      	lsls	r1, r5, #28
9000d314:	d501      	bpl.n	9000d31a <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000d316:	0732      	lsls	r2, r6, #28
9000d318:	d425      	bmi.n	9000d366 <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000d31a:	06e8      	lsls	r0, r5, #27
9000d31c:	d501      	bpl.n	9000d322 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000d31e:	06f1      	lsls	r1, r6, #27
9000d320:	d411      	bmi.n	9000d346 <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000d322:	07ea      	lsls	r2, r5, #31
9000d324:	d501      	bpl.n	9000d32a <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000d326:	07f3      	lsls	r3, r6, #31
9000d328:	d464      	bmi.n	9000d3f4 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d32a:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000d32e:	d04c      	beq.n	9000d3ca <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d330:	0630      	lsls	r0, r6, #24
9000d332:	d467      	bmi.n	9000d404 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000d334:	0668      	lsls	r0, r5, #25
9000d336:	d501      	bpl.n	9000d33c <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000d338:	0671      	lsls	r1, r6, #25
9000d33a:	d46d      	bmi.n	9000d418 <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000d33c:	06aa      	lsls	r2, r5, #26
9000d33e:	d501      	bpl.n	9000d344 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000d340:	06b3      	lsls	r3, r6, #26
9000d342:	d44e      	bmi.n	9000d3e2 <HAL_TIM_IRQHandler+0xea>
}
9000d344:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d346:	6823      	ldr	r3, [r4, #0]
9000d348:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000d34c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d34e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d350:	2208      	movs	r2, #8
9000d352:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000d354:	69db      	ldr	r3, [r3, #28]
9000d356:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d35a:	d071      	beq.n	9000d440 <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000d35c:	f7ff ffc6 	bl	9000d2ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d360:	2300      	movs	r3, #0
9000d362:	7723      	strb	r3, [r4, #28]
9000d364:	e7dd      	b.n	9000d322 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d366:	6823      	ldr	r3, [r4, #0]
9000d368:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000d36c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d36e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d370:	2204      	movs	r2, #4
9000d372:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000d374:	69db      	ldr	r3, [r3, #28]
9000d376:	079b      	lsls	r3, r3, #30
9000d378:	d15f      	bne.n	9000d43a <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d37a:	f7ff ffb5 	bl	9000d2e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d37e:	4620      	mov	r0, r4
9000d380:	f7ff ffb6 	bl	9000d2f0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d384:	2300      	movs	r3, #0
9000d386:	7723      	strb	r3, [r4, #28]
9000d388:	e7c7      	b.n	9000d31a <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d38a:	6823      	ldr	r3, [r4, #0]
9000d38c:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000d390:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d392:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d394:	2202      	movs	r2, #2
9000d396:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000d398:	699b      	ldr	r3, [r3, #24]
9000d39a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d39e:	d149      	bne.n	9000d434 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d3a0:	f7ff ffa2 	bl	9000d2e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d3a4:	4620      	mov	r0, r4
9000d3a6:	f7ff ffa3 	bl	9000d2f0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d3aa:	2300      	movs	r3, #0
9000d3ac:	7723      	strb	r3, [r4, #28]
9000d3ae:	e7b0      	b.n	9000d312 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000d3b0:	f06f 0202 	mvn.w	r2, #2
9000d3b4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d3b6:	2201      	movs	r2, #1
9000d3b8:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000d3ba:	699b      	ldr	r3, [r3, #24]
9000d3bc:	079a      	lsls	r2, r3, #30
9000d3be:	d033      	beq.n	9000d428 <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000d3c0:	f7ff ff94 	bl	9000d2ec <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d3c4:	2300      	movs	r3, #0
9000d3c6:	7723      	strb	r3, [r4, #28]
9000d3c8:	e79f      	b.n	9000d30a <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d3ca:	05ea      	lsls	r2, r5, #23
9000d3cc:	d5b2      	bpl.n	9000d334 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d3ce:	0633      	lsls	r3, r6, #24
9000d3d0:	d5b0      	bpl.n	9000d334 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d3d2:	6823      	ldr	r3, [r4, #0]
9000d3d4:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000d3d8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d3da:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000d3dc:	f000 f83a 	bl	9000d454 <HAL_TIMEx_Break2Callback>
9000d3e0:	e7a8      	b.n	9000d334 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d3e2:	6823      	ldr	r3, [r4, #0]
9000d3e4:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000d3e8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d3ea:	611a      	str	r2, [r3, #16]
}
9000d3ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000d3f0:	f000 b82c 	b.w	9000d44c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d3f4:	6823      	ldr	r3, [r4, #0]
9000d3f6:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000d3fa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d3fc:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000d3fe:	f7f6 fe79 	bl	900040f4 <HAL_TIM_PeriodElapsedCallback>
9000d402:	e792      	b.n	9000d32a <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d404:	6823      	ldr	r3, [r4, #0]
9000d406:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000d40a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d40c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000d40e:	f000 f81f 	bl	9000d450 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d412:	05e9      	lsls	r1, r5, #23
9000d414:	d58e      	bpl.n	9000d334 <HAL_TIM_IRQHandler+0x3c>
9000d416:	e7dc      	b.n	9000d3d2 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d418:	6823      	ldr	r3, [r4, #0]
9000d41a:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000d41e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d420:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000d422:	f7ff ff67 	bl	9000d2f4 <HAL_TIM_TriggerCallback>
9000d426:	e789      	b.n	9000d33c <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000d428:	f7ff ff5e 	bl	9000d2e8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d42c:	4620      	mov	r0, r4
9000d42e:	f7ff ff5f 	bl	9000d2f0 <HAL_TIM_PWM_PulseFinishedCallback>
9000d432:	e7c7      	b.n	9000d3c4 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000d434:	f7ff ff5a 	bl	9000d2ec <HAL_TIM_IC_CaptureCallback>
9000d438:	e7b7      	b.n	9000d3aa <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000d43a:	f7ff ff57 	bl	9000d2ec <HAL_TIM_IC_CaptureCallback>
9000d43e:	e7a1      	b.n	9000d384 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d440:	f7ff ff52 	bl	9000d2e8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d444:	4620      	mov	r0, r4
9000d446:	f7ff ff53 	bl	9000d2f0 <HAL_TIM_PWM_PulseFinishedCallback>
9000d44a:	e789      	b.n	9000d360 <HAL_TIM_IRQHandler+0x68>

9000d44c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000d44c:	4770      	bx	lr
9000d44e:	bf00      	nop

9000d450 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000d450:	4770      	bx	lr
9000d452:	bf00      	nop

9000d454 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000d454:	4770      	bx	lr
9000d456:	bf00      	nop

9000d458 <UART_TxISR_16BIT>:
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000d458:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000d45c:	2b21      	cmp	r3, #33	@ 0x21
9000d45e:	d000      	beq.n	9000d462 <UART_TxISR_16BIT+0xa>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
9000d460:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000d462:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000d466:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000d468:	b29b      	uxth	r3, r3
9000d46a:	b983      	cbnz	r3, 9000d48e <UART_TxISR_16BIT+0x36>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d46c:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000d470:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d474:	e842 3100 	strex	r1, r3, [r2]
9000d478:	2900      	cmp	r1, #0
9000d47a:	d1f7      	bne.n	9000d46c <UART_TxISR_16BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d47c:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000d480:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d484:	e842 3100 	strex	r1, r3, [r2]
9000d488:	2900      	cmp	r1, #0
9000d48a:	d1f7      	bne.n	9000d47c <UART_TxISR_16BIT+0x24>
9000d48c:	4770      	bx	lr
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000d48e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d490:	f831 3b02 	ldrh.w	r3, [r1], #2
9000d494:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d498:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000d49a:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr += 2U;
9000d49e:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000d4a0:	3b01      	subs	r3, #1
9000d4a2:	b29b      	uxth	r3, r3
9000d4a4:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000d4a8:	4770      	bx	lr
9000d4aa:	bf00      	nop

9000d4ac <UART_TxISR_16BIT_FIFOEN>:
{
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000d4ac:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000d4b0:	2b21      	cmp	r3, #33	@ 0x21
9000d4b2:	d000      	beq.n	9000d4b6 <UART_TxISR_16BIT_FIFOEN+0xa>
9000d4b4:	4770      	bx	lr
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d4b6:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000d4ba:	2b00      	cmp	r3, #0
9000d4bc:	d0fa      	beq.n	9000d4b4 <UART_TxISR_16BIT_FIFOEN+0x8>
        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);

        break; /* force exit loop */
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000d4be:	6801      	ldr	r1, [r0, #0]
{
9000d4c0:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000d4c2:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d4c6:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000d4c8:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d4ca:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000d4cc:	b1a2      	cbz	r2, 9000d4f8 <UART_TxISR_16BIT_FIFOEN+0x4c>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000d4ce:	69ca      	ldr	r2, [r1, #28]
9000d4d0:	0612      	lsls	r2, r2, #24
9000d4d2:	d50c      	bpl.n	9000d4ee <UART_TxISR_16BIT_FIFOEN+0x42>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000d4d4:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000d4d6:	f834 2b02 	ldrh.w	r2, [r4], #2
9000d4da:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d4de:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->pTxBuffPtr += 2U;
        huart->TxXferCount--;
9000d4e0:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr += 2U;
9000d4e4:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000d4e6:	3a01      	subs	r2, #1
9000d4e8:	b292      	uxth	r2, r2
9000d4ea:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d4ee:	2b00      	cmp	r3, #0
9000d4f0:	d1e7      	bne.n	9000d4c2 <UART_TxISR_16BIT_FIFOEN+0x16>
      {
        /* Nothing to do */
      }
    }
  }
}
9000d4f2:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d4f6:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d4f8:	f101 0308 	add.w	r3, r1, #8
9000d4fc:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000d500:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d504:	f101 0008 	add.w	r0, r1, #8
9000d508:	e840 3200 	strex	r2, r3, [r0]
9000d50c:	2a00      	cmp	r2, #0
9000d50e:	d1f3      	bne.n	9000d4f8 <UART_TxISR_16BIT_FIFOEN+0x4c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d510:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000d514:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d518:	e841 3200 	strex	r2, r3, [r1]
9000d51c:	2a00      	cmp	r2, #0
9000d51e:	d0e8      	beq.n	9000d4f2 <UART_TxISR_16BIT_FIFOEN+0x46>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d520:	e851 3f00 	ldrex	r3, [r1]
9000d524:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d528:	e841 3200 	strex	r2, r3, [r1]
9000d52c:	2a00      	cmp	r2, #0
9000d52e:	d1ef      	bne.n	9000d510 <UART_TxISR_16BIT_FIFOEN+0x64>
9000d530:	e7df      	b.n	9000d4f2 <UART_TxISR_16BIT_FIFOEN+0x46>
9000d532:	bf00      	nop

9000d534 <UART_TxISR_8BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000d534:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000d538:	2b21      	cmp	r3, #33	@ 0x21
9000d53a:	d000      	beq.n	9000d53e <UART_TxISR_8BIT+0xa>
}
9000d53c:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000d53e:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000d542:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000d544:	b29b      	uxth	r3, r3
9000d546:	b983      	cbnz	r3, 9000d56a <UART_TxISR_8BIT+0x36>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d548:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000d54c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d550:	e842 3100 	strex	r1, r3, [r2]
9000d554:	2900      	cmp	r1, #0
9000d556:	d1f7      	bne.n	9000d548 <UART_TxISR_8BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d558:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000d55c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d560:	e842 3100 	strex	r1, r3, [r2]
9000d564:	2900      	cmp	r1, #0
9000d566:	d1f7      	bne.n	9000d558 <UART_TxISR_8BIT+0x24>
9000d568:	4770      	bx	lr
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000d56a:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d56c:	f811 3b01 	ldrb.w	r3, [r1], #1
9000d570:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000d572:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr++;
9000d576:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000d578:	3b01      	subs	r3, #1
9000d57a:	b29b      	uxth	r3, r3
9000d57c:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000d580:	4770      	bx	lr
9000d582:	bf00      	nop

9000d584 <UART_TxISR_8BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000d584:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000d588:	2b21      	cmp	r3, #33	@ 0x21
9000d58a:	d000      	beq.n	9000d58e <UART_TxISR_8BIT_FIFOEN+0xa>
9000d58c:	4770      	bx	lr
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d58e:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000d592:	2b00      	cmp	r3, #0
9000d594:	d0fa      	beq.n	9000d58c <UART_TxISR_8BIT_FIFOEN+0x8>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000d596:	6801      	ldr	r1, [r0, #0]
{
9000d598:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000d59a:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d59e:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000d5a0:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d5a2:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000d5a4:	b192      	cbz	r2, 9000d5cc <UART_TxISR_8BIT_FIFOEN+0x48>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000d5a6:	69ca      	ldr	r2, [r1, #28]
9000d5a8:	0612      	lsls	r2, r2, #24
9000d5aa:	d50a      	bpl.n	9000d5c2 <UART_TxISR_8BIT_FIFOEN+0x3e>
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000d5ac:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000d5ae:	f814 2b01 	ldrb.w	r2, [r4], #1
9000d5b2:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->TxXferCount--;
9000d5b4:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr++;
9000d5b8:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000d5ba:	3a01      	subs	r2, #1
9000d5bc:	b292      	uxth	r2, r2
9000d5be:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000d5c2:	2b00      	cmp	r3, #0
9000d5c4:	d1e9      	bne.n	9000d59a <UART_TxISR_8BIT_FIFOEN+0x16>
}
9000d5c6:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d5ca:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d5cc:	f101 0308 	add.w	r3, r1, #8
9000d5d0:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000d5d4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d5d8:	f101 0008 	add.w	r0, r1, #8
9000d5dc:	e840 3200 	strex	r2, r3, [r0]
9000d5e0:	2a00      	cmp	r2, #0
9000d5e2:	d1f3      	bne.n	9000d5cc <UART_TxISR_8BIT_FIFOEN+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d5e4:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000d5e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d5ec:	e841 3200 	strex	r2, r3, [r1]
9000d5f0:	2a00      	cmp	r2, #0
9000d5f2:	d0e8      	beq.n	9000d5c6 <UART_TxISR_8BIT_FIFOEN+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d5f4:	e851 3f00 	ldrex	r3, [r1]
9000d5f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d5fc:	e841 3200 	strex	r2, r3, [r1]
9000d600:	2a00      	cmp	r2, #0
9000d602:	d1ef      	bne.n	9000d5e4 <UART_TxISR_8BIT_FIFOEN+0x60>
9000d604:	e7df      	b.n	9000d5c6 <UART_TxISR_8BIT_FIFOEN+0x42>
9000d606:	bf00      	nop

9000d608 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
9000d608:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000d60c:	2b20      	cmp	r3, #32
9000d60e:	d128      	bne.n	9000d662 <HAL_UART_Transmit_IT+0x5a>
    if ((pData == NULL) || (Size == 0U))
9000d610:	b329      	cbz	r1, 9000d65e <HAL_UART_Transmit_IT+0x56>
9000d612:	fab2 f382 	clz	r3, r2
9000d616:	095b      	lsrs	r3, r3, #5
9000d618:	b30a      	cbz	r2, 9000d65e <HAL_UART_Transmit_IT+0x56>
{
9000d61a:	b410      	push	{r4}
    huart->pTxBuffPtr  = pData;
9000d61c:	6501      	str	r1, [r0, #80]	@ 0x50
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000d61e:	2421      	movs	r4, #33	@ 0x21
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d620:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    huart->TxXferCount = Size;
9000d622:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d626:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d62a:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
    huart->TxXferSize  = Size;
9000d62e:	f8a0 2054 	strh.w	r2, [r0, #84]	@ 0x54
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d632:	6883      	ldr	r3, [r0, #8]
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000d634:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d638:	d01c      	beq.n	9000d674 <HAL_UART_Transmit_IT+0x6c>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d63a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000d63e:	d012      	beq.n	9000d666 <HAL_UART_Transmit_IT+0x5e>
        huart->TxISR = UART_TxISR_8BIT;
9000d640:	4b1b      	ldr	r3, [pc, #108]	@ (9000d6b0 <HAL_UART_Transmit_IT+0xa8>)
9000d642:	6802      	ldr	r2, [r0, #0]
9000d644:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d646:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000d64a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d64e:	e842 3100 	strex	r1, r3, [r2]
9000d652:	2900      	cmp	r1, #0
9000d654:	d1f7      	bne.n	9000d646 <HAL_UART_Transmit_IT+0x3e>
    return HAL_OK;
9000d656:	2000      	movs	r0, #0
}
9000d658:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d65c:	4770      	bx	lr
      return HAL_ERROR;
9000d65e:	2001      	movs	r0, #1
}
9000d660:	4770      	bx	lr
    return HAL_BUSY;
9000d662:	2002      	movs	r0, #2
9000d664:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d666:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT;
9000d668:	4b12      	ldr	r3, [pc, #72]	@ (9000d6b4 <HAL_UART_Transmit_IT+0xac>)
9000d66a:	4a11      	ldr	r2, [pc, #68]	@ (9000d6b0 <HAL_UART_Transmit_IT+0xa8>)
9000d66c:	2900      	cmp	r1, #0
9000d66e:	bf18      	it	ne
9000d670:	4613      	movne	r3, r2
9000d672:	e7e6      	b.n	9000d642 <HAL_UART_Transmit_IT+0x3a>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d674:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000d678:	d012      	beq.n	9000d6a0 <HAL_UART_Transmit_IT+0x98>
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000d67a:	4b0f      	ldr	r3, [pc, #60]	@ (9000d6b8 <HAL_UART_Transmit_IT+0xb0>)
9000d67c:	6802      	ldr	r2, [r0, #0]
9000d67e:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d680:	f102 0308 	add.w	r3, r2, #8
9000d684:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000d688:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d68c:	f102 0008 	add.w	r0, r2, #8
9000d690:	e840 3100 	strex	r1, r3, [r0]
9000d694:	2900      	cmp	r1, #0
9000d696:	d1f3      	bne.n	9000d680 <HAL_UART_Transmit_IT+0x78>
    return HAL_OK;
9000d698:	2000      	movs	r0, #0
}
9000d69a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d69e:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d6a0:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000d6a2:	4b06      	ldr	r3, [pc, #24]	@ (9000d6bc <HAL_UART_Transmit_IT+0xb4>)
9000d6a4:	4a04      	ldr	r2, [pc, #16]	@ (9000d6b8 <HAL_UART_Transmit_IT+0xb0>)
9000d6a6:	2900      	cmp	r1, #0
9000d6a8:	bf18      	it	ne
9000d6aa:	4613      	movne	r3, r2
9000d6ac:	e7e6      	b.n	9000d67c <HAL_UART_Transmit_IT+0x74>
9000d6ae:	bf00      	nop
9000d6b0:	9000d535 	.word	0x9000d535
9000d6b4:	9000d459 	.word	0x9000d459
9000d6b8:	9000d585 	.word	0x9000d585
9000d6bc:	9000d4ad 	.word	0x9000d4ad

9000d6c0 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
9000d6c0:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
9000d6c4:	2b20      	cmp	r3, #32
9000d6c6:	d15d      	bne.n	9000d784 <HAL_UART_Receive_IT+0xc4>
    if ((pData == NULL) || (Size == 0U))
9000d6c8:	2900      	cmp	r1, #0
9000d6ca:	d060      	beq.n	9000d78e <HAL_UART_Receive_IT+0xce>
{
9000d6cc:	b430      	push	{r4, r5}
    if ((pData == NULL) || (Size == 0U))
9000d6ce:	fab2 f482 	clz	r4, r2
9000d6d2:	0964      	lsrs	r4, r4, #5
9000d6d4:	2a00      	cmp	r2, #0
9000d6d6:	d057      	beq.n	9000d788 <HAL_UART_Receive_IT+0xc8>
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d6d8:	6803      	ldr	r3, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d6da:	66c4      	str	r4, [r0, #108]	@ 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d6dc:	4c57      	ldr	r4, [pc, #348]	@ (9000d83c <HAL_UART_Receive_IT+0x17c>)
9000d6de:	42a3      	cmp	r3, r4
9000d6e0:	d002      	beq.n	9000d6e8 <HAL_UART_Receive_IT+0x28>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d6e2:	685c      	ldr	r4, [r3, #4]
9000d6e4:	0224      	lsls	r4, r4, #8
9000d6e6:	d43c      	bmi.n	9000d762 <HAL_UART_Receive_IT+0xa2>
  huart->pRxBuffPtr  = pData;
9000d6e8:	6581      	str	r1, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
9000d6ea:	2400      	movs	r4, #0
  UART_MASK_COMPUTATION(huart);
9000d6ec:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
9000d6ee:	f8a0 205c 	strh.w	r2, [r0, #92]	@ 0x5c
  UART_MASK_COMPUTATION(huart);
9000d6f2:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
  huart->RxXferCount = Size;
9000d6f6:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
  huart->RxISR       = NULL;
9000d6fa:	6744      	str	r4, [r0, #116]	@ 0x74
  UART_MASK_COMPUTATION(huart);
9000d6fc:	d066      	beq.n	9000d7cc <HAL_UART_Receive_IT+0x10c>
9000d6fe:	2900      	cmp	r1, #0
9000d700:	d147      	bne.n	9000d792 <HAL_UART_Receive_IT+0xd2>
9000d702:	6901      	ldr	r1, [r0, #16]
9000d704:	2900      	cmp	r1, #0
9000d706:	bf0c      	ite	eq
9000d708:	24ff      	moveq	r4, #255	@ 0xff
9000d70a:	247f      	movne	r4, #127	@ 0x7f
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d70c:	2100      	movs	r1, #0
  UART_MASK_COMPUTATION(huart);
9000d70e:	f8a0 4060 	strh.w	r4, [r0, #96]	@ 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d712:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
9000d716:	2122      	movs	r1, #34	@ 0x22
9000d718:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d71c:	f103 0108 	add.w	r1, r3, #8
9000d720:	e851 1f00 	ldrex	r1, [r1]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000d724:	f041 0101 	orr.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d728:	f103 0508 	add.w	r5, r3, #8
9000d72c:	e845 1400 	strex	r4, r1, [r5]
9000d730:	2c00      	cmp	r4, #0
9000d732:	d1f3      	bne.n	9000d71c <HAL_UART_Receive_IT+0x5c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000d734:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d736:	6885      	ldr	r5, [r0, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000d738:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d73c:	6904      	ldr	r4, [r0, #16]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000d73e:	d04c      	beq.n	9000d7da <HAL_UART_Receive_IT+0x11a>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d740:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000d744:	d02e      	beq.n	9000d7a4 <HAL_UART_Receive_IT+0xe4>
9000d746:	4a3e      	ldr	r2, [pc, #248]	@ (9000d840 <HAL_UART_Receive_IT+0x180>)
9000d748:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000d74a:	b374      	cbz	r4, 9000d7aa <HAL_UART_Receive_IT+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d74c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
9000d750:	f442 7290 	orr.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d754:	e843 2100 	strex	r1, r2, [r3]
9000d758:	2900      	cmp	r1, #0
9000d75a:	d1f7      	bne.n	9000d74c <HAL_UART_Receive_IT+0x8c>
    return (UART_Start_Receive_IT(huart, pData, Size));
9000d75c:	2000      	movs	r0, #0
}
9000d75e:	bc30      	pop	{r4, r5}
9000d760:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d762:	e853 4f00 	ldrex	r4, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d766:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d76a:	e843 4500 	strex	r5, r4, [r3]
9000d76e:	2d00      	cmp	r5, #0
9000d770:	d0ba      	beq.n	9000d6e8 <HAL_UART_Receive_IT+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d772:	e853 4f00 	ldrex	r4, [r3]
9000d776:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d77a:	e843 4500 	strex	r5, r4, [r3]
9000d77e:	2d00      	cmp	r5, #0
9000d780:	d1ef      	bne.n	9000d762 <HAL_UART_Receive_IT+0xa2>
9000d782:	e7b1      	b.n	9000d6e8 <HAL_UART_Receive_IT+0x28>
    return HAL_BUSY;
9000d784:	2002      	movs	r0, #2
9000d786:	4770      	bx	lr
      return HAL_ERROR;
9000d788:	2001      	movs	r0, #1
}
9000d78a:	bc30      	pop	{r4, r5}
9000d78c:	4770      	bx	lr
      return HAL_ERROR;
9000d78e:	2001      	movs	r0, #1
}
9000d790:	4770      	bx	lr
  UART_MASK_COMPUTATION(huart);
9000d792:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000d796:	d1b9      	bne.n	9000d70c <HAL_UART_Receive_IT+0x4c>
9000d798:	6901      	ldr	r1, [r0, #16]
9000d79a:	2900      	cmp	r1, #0
9000d79c:	bf0c      	ite	eq
9000d79e:	247f      	moveq	r4, #127	@ 0x7f
9000d7a0:	243f      	movne	r4, #63	@ 0x3f
9000d7a2:	e7b3      	b.n	9000d70c <HAL_UART_Receive_IT+0x4c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d7a4:	bb84      	cbnz	r4, 9000d808 <HAL_UART_Receive_IT+0x148>
9000d7a6:	4a27      	ldr	r2, [pc, #156]	@ (9000d844 <HAL_UART_Receive_IT+0x184>)
9000d7a8:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d7aa:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000d7ae:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d7b2:	e843 2100 	strex	r1, r2, [r3]
9000d7b6:	2900      	cmp	r1, #0
9000d7b8:	d0d0      	beq.n	9000d75c <HAL_UART_Receive_IT+0x9c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d7ba:	e853 2f00 	ldrex	r2, [r3]
9000d7be:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d7c2:	e843 2100 	strex	r1, r2, [r3]
9000d7c6:	2900      	cmp	r1, #0
9000d7c8:	d1ef      	bne.n	9000d7aa <HAL_UART_Receive_IT+0xea>
9000d7ca:	e7c7      	b.n	9000d75c <HAL_UART_Receive_IT+0x9c>
  UART_MASK_COMPUTATION(huart);
9000d7cc:	6901      	ldr	r1, [r0, #16]
9000d7ce:	f240 14ff 	movw	r4, #511	@ 0x1ff
9000d7d2:	2900      	cmp	r1, #0
9000d7d4:	bf18      	it	ne
9000d7d6:	24ff      	movne	r4, #255	@ 0xff
9000d7d8:	e798      	b.n	9000d70c <HAL_UART_Receive_IT+0x4c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000d7da:	f8b0 1068 	ldrh.w	r1, [r0, #104]	@ 0x68
9000d7de:	4291      	cmp	r1, r2
9000d7e0:	d8ae      	bhi.n	9000d740 <HAL_UART_Receive_IT+0x80>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d7e2:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000d7e6:	d012      	beq.n	9000d80e <HAL_UART_Receive_IT+0x14e>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000d7e8:	4a17      	ldr	r2, [pc, #92]	@ (9000d848 <HAL_UART_Receive_IT+0x188>)
9000d7ea:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000d7ec:	b994      	cbnz	r4, 9000d814 <HAL_UART_Receive_IT+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d7ee:	f103 0208 	add.w	r2, r3, #8
9000d7f2:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000d7f6:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d7fa:	f103 0008 	add.w	r0, r3, #8
9000d7fe:	e840 2100 	strex	r1, r2, [r0]
9000d802:	2900      	cmp	r1, #0
9000d804:	d1f3      	bne.n	9000d7ee <HAL_UART_Receive_IT+0x12e>
9000d806:	e7a9      	b.n	9000d75c <HAL_UART_Receive_IT+0x9c>
9000d808:	4a0d      	ldr	r2, [pc, #52]	@ (9000d840 <HAL_UART_Receive_IT+0x180>)
9000d80a:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000d80c:	e79e      	b.n	9000d74c <HAL_UART_Receive_IT+0x8c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000d80e:	b194      	cbz	r4, 9000d836 <HAL_UART_Receive_IT+0x176>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000d810:	4a0d      	ldr	r2, [pc, #52]	@ (9000d848 <HAL_UART_Receive_IT+0x188>)
9000d812:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d814:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d818:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d81c:	e843 2100 	strex	r1, r2, [r3]
9000d820:	2900      	cmp	r1, #0
9000d822:	d0e4      	beq.n	9000d7ee <HAL_UART_Receive_IT+0x12e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d824:	e853 2f00 	ldrex	r2, [r3]
9000d828:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d82c:	e843 2100 	strex	r1, r2, [r3]
9000d830:	2900      	cmp	r1, #0
9000d832:	d1ef      	bne.n	9000d814 <HAL_UART_Receive_IT+0x154>
9000d834:	e7db      	b.n	9000d7ee <HAL_UART_Receive_IT+0x12e>
9000d836:	4a05      	ldr	r2, [pc, #20]	@ (9000d84c <HAL_UART_Receive_IT+0x18c>)
9000d838:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000d83a:	e7d8      	b.n	9000d7ee <HAL_UART_Receive_IT+0x12e>
9000d83c:	58000c00 	.word	0x58000c00
9000d840:	9000dee9 	.word	0x9000dee9
9000d844:	9000dea1 	.word	0x9000dea1
9000d848:	9000df2d 	.word	0x9000df2d
9000d84c:	9000e155 	.word	0x9000e155

9000d850 <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
9000d850:	4770      	bx	lr
9000d852:	bf00      	nop

9000d854 <UART_DMAAbortOnError>:
{
9000d854:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000d856:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
9000d858:	2300      	movs	r3, #0
9000d85a:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  HAL_UART_ErrorCallback(huart);
9000d85e:	f7ff fff7 	bl	9000d850 <HAL_UART_ErrorCallback>
}
9000d862:	bd08      	pop	{r3, pc}

9000d864 <HAL_UART_AbortCpltCallback>:
__weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
9000d864:	4770      	bx	lr
9000d866:	bf00      	nop

9000d868 <HAL_UART_Abort_IT>:
{
9000d868:	b570      	push	{r4, r5, r6, lr}
9000d86a:	6803      	ldr	r3, [r0, #0]
9000d86c:	4605      	mov	r5, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d86e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
9000d872:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d876:	e843 2100 	strex	r1, r2, [r3]
9000d87a:	2900      	cmp	r1, #0
9000d87c:	d1f7      	bne.n	9000d86e <HAL_UART_Abort_IT+0x6>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
9000d87e:	494e      	ldr	r1, [pc, #312]	@ (9000d9b8 <HAL_UART_Abort_IT+0x150>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d880:	f103 0208 	add.w	r2, r3, #8
9000d884:	e852 2f00 	ldrex	r2, [r2]
9000d888:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d88a:	f103 0008 	add.w	r0, r3, #8
9000d88e:	e840 2400 	strex	r4, r2, [r0]
9000d892:	2c00      	cmp	r4, #0
9000d894:	d1f4      	bne.n	9000d880 <HAL_UART_Abort_IT+0x18>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d896:	6eea      	ldr	r2, [r5, #108]	@ 0x6c
9000d898:	2a01      	cmp	r2, #1
9000d89a:	d06c      	beq.n	9000d976 <HAL_UART_Abort_IT+0x10e>
  if (huart->hdmatx != NULL)
9000d89c:	6fee      	ldr	r6, [r5, #124]	@ 0x7c
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000d89e:	4619      	mov	r1, r3
  if (huart->hdmatx != NULL)
9000d8a0:	b12e      	cbz	r6, 9000d8ae <HAL_UART_Abort_IT+0x46>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000d8a2:	689a      	ldr	r2, [r3, #8]
9000d8a4:	f012 0280 	ands.w	r2, r2, #128	@ 0x80
      huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
9000d8a8:	bf18      	it	ne
9000d8aa:	4a44      	ldrne	r2, [pc, #272]	@ (9000d9bc <HAL_UART_Abort_IT+0x154>)
      huart->hdmatx->XferAbortCallback = NULL;
9000d8ac:	6532      	str	r2, [r6, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000d8ae:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000d8b2:	b128      	cbz	r0, 9000d8c0 <HAL_UART_Abort_IT+0x58>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d8b4:	689a      	ldr	r2, [r3, #8]
9000d8b6:	f012 0240 	ands.w	r2, r2, #64	@ 0x40
      huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
9000d8ba:	bf18      	it	ne
9000d8bc:	4a40      	ldrne	r2, [pc, #256]	@ (9000d9c0 <HAL_UART_Abort_IT+0x158>)
      huart->hdmarx->XferAbortCallback = NULL;
9000d8be:	6502      	str	r2, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000d8c0:	689a      	ldr	r2, [r3, #8]
9000d8c2:	0612      	lsls	r2, r2, #24
9000d8c4:	d43c      	bmi.n	9000d940 <HAL_UART_Abort_IT+0xd8>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d8c6:	689a      	ldr	r2, [r3, #8]
9000d8c8:	0654      	lsls	r4, r2, #25
9000d8ca:	d516      	bpl.n	9000d8fa <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000d8cc:	2401      	movs	r4, #1
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d8ce:	f103 0208 	add.w	r2, r3, #8
9000d8d2:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000d8d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d8da:	f103 0608 	add.w	r6, r3, #8
9000d8de:	e846 2100 	strex	r1, r2, [r6]
9000d8e2:	2900      	cmp	r1, #0
9000d8e4:	d1f3      	bne.n	9000d8ce <HAL_UART_Abort_IT+0x66>
    if (huart->hdmarx != NULL)
9000d8e6:	2800      	cmp	r0, #0
9000d8e8:	d05b      	beq.n	9000d9a2 <HAL_UART_Abort_IT+0x13a>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000d8ea:	f7fa f94f 	bl	90007b8c <HAL_DMA_Abort_IT>
9000d8ee:	b328      	cbz	r0, 9000d93c <HAL_UART_Abort_IT+0xd4>
        huart->hdmarx->XferAbortCallback = NULL;
9000d8f0:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
9000d8f4:	2200      	movs	r2, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d8f6:	6829      	ldr	r1, [r5, #0]
        huart->hdmarx->XferAbortCallback = NULL;
9000d8f8:	651a      	str	r2, [r3, #80]	@ 0x50
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d8fa:	6e6a      	ldr	r2, [r5, #100]	@ 0x64
    huart->TxXferCount = 0U;
9000d8fc:	2300      	movs	r3, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d8fe:	200f      	movs	r0, #15
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d900:	f1b2 5f00 	cmp.w	r2, #536870912	@ 0x20000000
    huart->TxXferCount = 0U;
9000d904:	f8a5 3056 	strh.w	r3, [r5, #86]	@ 0x56
    huart->RxISR = NULL;
9000d908:	676b      	str	r3, [r5, #116]	@ 0x74
    huart->RxXferCount = 0U;
9000d90a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
    huart->RxISR = NULL;
9000d90e:	67ab      	str	r3, [r5, #120]	@ 0x78
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d910:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d914:	6208      	str	r0, [r1, #32]
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000d916:	d103      	bne.n	9000d920 <HAL_UART_Abort_IT+0xb8>
      __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000d918:	698b      	ldr	r3, [r1, #24]
9000d91a:	f043 0310 	orr.w	r3, r3, #16
9000d91e:	618b      	str	r3, [r1, #24]
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d920:	698b      	ldr	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000d922:	2220      	movs	r2, #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d924:	2400      	movs	r4, #0
    HAL_UART_AbortCpltCallback(huart);
9000d926:	4628      	mov	r0, r5
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d928:	f043 0308 	orr.w	r3, r3, #8
9000d92c:	618b      	str	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000d92e:	f8c5 2088 	str.w	r2, [r5, #136]	@ 0x88
    huart->RxState = HAL_UART_STATE_READY;
9000d932:	f8c5 208c 	str.w	r2, [r5, #140]	@ 0x8c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d936:	66ec      	str	r4, [r5, #108]	@ 0x6c
    HAL_UART_AbortCpltCallback(huart);
9000d938:	f7ff ff94 	bl	9000d864 <HAL_UART_AbortCpltCallback>
}
9000d93c:	2000      	movs	r0, #0
9000d93e:	bd70      	pop	{r4, r5, r6, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d940:	f103 0208 	add.w	r2, r3, #8
9000d944:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
9000d948:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d94c:	f103 0c08 	add.w	ip, r3, #8
9000d950:	e84c 2100 	strex	r1, r2, [ip]
9000d954:	2900      	cmp	r1, #0
9000d956:	d1f3      	bne.n	9000d940 <HAL_UART_Abort_IT+0xd8>
    if (huart->hdmatx != NULL)
9000d958:	b1f6      	cbz	r6, 9000d998 <HAL_UART_Abort_IT+0x130>
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000d95a:	4630      	mov	r0, r6
9000d95c:	f7fa f916 	bl	90007b8c <HAL_DMA_Abort_IT>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d960:	682b      	ldr	r3, [r5, #0]
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000d962:	b310      	cbz	r0, 9000d9aa <HAL_UART_Abort_IT+0x142>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d964:	689a      	ldr	r2, [r3, #8]
        huart->hdmatx->XferAbortCallback = NULL;
9000d966:	2400      	movs	r4, #0
9000d968:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d96a:	4619      	mov	r1, r3
9000d96c:	0656      	lsls	r6, r2, #25
        huart->hdmatx->XferAbortCallback = NULL;
9000d96e:	6504      	str	r4, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d970:	d5c3      	bpl.n	9000d8fa <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000d972:	2401      	movs	r4, #1
9000d974:	e01c      	b.n	9000d9b0 <HAL_UART_Abort_IT+0x148>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d976:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
9000d97a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d97e:	e843 2100 	strex	r1, r2, [r3]
9000d982:	2900      	cmp	r1, #0
9000d984:	d08a      	beq.n	9000d89c <HAL_UART_Abort_IT+0x34>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d986:	e853 2f00 	ldrex	r2, [r3]
9000d98a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d98e:	e843 2100 	strex	r1, r2, [r3]
9000d992:	2900      	cmp	r1, #0
9000d994:	d1ef      	bne.n	9000d976 <HAL_UART_Abort_IT+0x10e>
9000d996:	e781      	b.n	9000d89c <HAL_UART_Abort_IT+0x34>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d998:	689a      	ldr	r2, [r3, #8]
9000d99a:	4619      	mov	r1, r3
9000d99c:	0652      	lsls	r2, r2, #25
9000d99e:	d495      	bmi.n	9000d8cc <HAL_UART_Abort_IT+0x64>
9000d9a0:	e7ab      	b.n	9000d8fa <HAL_UART_Abort_IT+0x92>
  if (abortcplt == 1U)
9000d9a2:	2c01      	cmp	r4, #1
9000d9a4:	d1ca      	bne.n	9000d93c <HAL_UART_Abort_IT+0xd4>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d9a6:	4619      	mov	r1, r3
9000d9a8:	e7a7      	b.n	9000d8fa <HAL_UART_Abort_IT+0x92>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d9aa:	689a      	ldr	r2, [r3, #8]
9000d9ac:	0652      	lsls	r2, r2, #25
9000d9ae:	d5c5      	bpl.n	9000d93c <HAL_UART_Abort_IT+0xd4>
9000d9b0:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000d9b4:	e78b      	b.n	9000d8ce <HAL_UART_Abort_IT+0x66>
9000d9b6:	bf00      	nop
9000d9b8:	ef7ffffe 	.word	0xef7ffffe
9000d9bc:	9000da09 	.word	0x9000da09
9000d9c0:	9000d9c5 	.word	0x9000d9c5

9000d9c4 <UART_DMARxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000d9c4:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmarx->XferAbortCallback = NULL;
9000d9c6:	2100      	movs	r1, #0
  if (huart->hdmatx != NULL)
9000d9c8:	e9d0 321f 	ldrd	r3, r2, [r0, #124]	@ 0x7c
  huart->hdmarx->XferAbortCallback = NULL;
9000d9cc:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmatx != NULL)
9000d9ce:	b113      	cbz	r3, 9000d9d6 <UART_DMARxAbortCallback+0x12>
    if (huart->hdmatx->XferAbortCallback != NULL)
9000d9d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000d9d2:	b103      	cbz	r3, 9000d9d6 <UART_DMARxAbortCallback+0x12>
9000d9d4:	4770      	bx	lr
  huart->TxXferCount = 0U;
9000d9d6:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d9d8:	6802      	ldr	r2, [r0, #0]
9000d9da:	210f      	movs	r1, #15
{
9000d9dc:	b510      	push	{r4, lr}
  huart->TxXferCount = 0U;
9000d9de:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->gState  = HAL_UART_STATE_READY;
9000d9e2:	2420      	movs	r4, #32
  huart->RxXferCount = 0U;
9000d9e4:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d9e8:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000d9ec:	6211      	str	r1, [r2, #32]
  __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d9ee:	6991      	ldr	r1, [r2, #24]
9000d9f0:	f041 0108 	orr.w	r1, r1, #8
9000d9f4:	6191      	str	r1, [r2, #24]
  huart->gState  = HAL_UART_STATE_READY;
9000d9f6:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000d9fa:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d9fe:	66c3      	str	r3, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000da00:	f7ff ff30 	bl	9000d864 <HAL_UART_AbortCpltCallback>
}
9000da04:	bd10      	pop	{r4, pc}
9000da06:	bf00      	nop

9000da08 <UART_DMATxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000da08:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmatx->XferAbortCallback = NULL;
9000da0a:	2100      	movs	r1, #0
  if (huart->hdmarx != NULL)
9000da0c:	e9d0 231f 	ldrd	r2, r3, [r0, #124]	@ 0x7c
  huart->hdmatx->XferAbortCallback = NULL;
9000da10:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000da12:	b113      	cbz	r3, 9000da1a <UART_DMATxAbortCallback+0x12>
    if (huart->hdmarx->XferAbortCallback != NULL)
9000da14:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000da16:	b103      	cbz	r3, 9000da1a <UART_DMATxAbortCallback+0x12>
9000da18:	4770      	bx	lr
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000da1a:	6e41      	ldr	r1, [r0, #100]	@ 0x64
  huart->TxXferCount = 0U;
9000da1c:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000da1e:	6802      	ldr	r2, [r0, #0]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000da20:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
{
9000da24:	b510      	push	{r4, lr}
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000da26:	f04f 040f 	mov.w	r4, #15
  huart->TxXferCount = 0U;
9000da2a:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->RxXferCount = 0U;
9000da2e:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000da32:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000da36:	6214      	str	r4, [r2, #32]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000da38:	d009      	beq.n	9000da4e <UART_DMATxAbortCallback+0x46>
  huart->gState  = HAL_UART_STATE_READY;
9000da3a:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da3c:	2200      	movs	r2, #0
  huart->gState  = HAL_UART_STATE_READY;
9000da3e:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000da42:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000da46:	66c2      	str	r2, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000da48:	f7ff ff0c 	bl	9000d864 <HAL_UART_AbortCpltCallback>
}
9000da4c:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000da4e:	6993      	ldr	r3, [r2, #24]
9000da50:	f043 0310 	orr.w	r3, r3, #16
9000da54:	6193      	str	r3, [r2, #24]
9000da56:	e7f0      	b.n	9000da3a <UART_DMATxAbortCallback+0x32>

9000da58 <HAL_UARTEx_RxEventCallback>:
}
9000da58:	4770      	bx	lr
9000da5a:	bf00      	nop

9000da5c <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000da5c:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
9000da5e:	f640 0c0f 	movw	ip, #2063	@ 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000da62:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
9000da64:	ea12 0f0c 	tst.w	r2, ip
{
9000da68:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
9000da6a:	681d      	ldr	r5, [r3, #0]
{
9000da6c:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
9000da6e:	6899      	ldr	r1, [r3, #8]
  if (errorflags == 0U)
9000da70:	d145      	bne.n	9000dafe <HAL_UART_IRQHandler+0xa2>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000da72:	0696      	lsls	r6, r2, #26
9000da74:	d507      	bpl.n	9000da86 <HAL_UART_IRQHandler+0x2a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000da76:	f005 0c20 	and.w	ip, r5, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000da7a:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
9000da7e:	ea5c 0c06 	orrs.w	ip, ip, r6
9000da82:	f040 812a 	bne.w	9000dcda <HAL_UART_IRQHandler+0x27e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000da86:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
9000da88:	2801      	cmp	r0, #1
9000da8a:	f000 80cd 	beq.w	9000dc28 <HAL_UART_IRQHandler+0x1cc>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000da8e:	02d0      	lsls	r0, r2, #11
9000da90:	d41d      	bmi.n	9000dace <HAL_UART_IRQHandler+0x72>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9000da92:	0610      	lsls	r0, r2, #24
9000da94:	d506      	bpl.n	9000daa4 <HAL_UART_IRQHandler+0x48>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000da96:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
9000da9a:	f005 0080 	and.w	r0, r5, #128	@ 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000da9e:	4308      	orrs	r0, r1
9000daa0:	f040 8122 	bne.w	9000dce8 <HAL_UART_IRQHandler+0x28c>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9000daa4:	0651      	lsls	r1, r2, #25
9000daa6:	d51c      	bpl.n	9000dae2 <HAL_UART_IRQHandler+0x86>
9000daa8:	066e      	lsls	r6, r5, #25
9000daaa:	d51a      	bpl.n	9000dae2 <HAL_UART_IRQHandler+0x86>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000daac:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000dab0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dab4:	e843 2100 	strex	r1, r2, [r3]
9000dab8:	2900      	cmp	r1, #0
9000daba:	d1f7      	bne.n	9000daac <HAL_UART_IRQHandler+0x50>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
9000dabc:	2220      	movs	r2, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
9000dabe:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
9000dac0:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_READY;
9000dac2:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->TxISR = NULL;
9000dac6:	67a3      	str	r3, [r4, #120]	@ 0x78
  HAL_UART_TxCpltCallback(huart);
9000dac8:	f7f5 fed8 	bl	9000387c <HAL_UART_TxCpltCallback>
}
9000dacc:	bd70      	pop	{r4, r5, r6, pc}
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000dace:	024e      	lsls	r6, r1, #9
9000dad0:	d5df      	bpl.n	9000da92 <HAL_UART_IRQHandler+0x36>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000dad2:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9000dad6:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000dad8:	621a      	str	r2, [r3, #32]
}
9000dada:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_WakeupCallback(huart);
9000dade:	f000 bfbf 	b.w	9000ea60 <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9000dae2:	0210      	lsls	r0, r2, #8
9000dae4:	d502      	bpl.n	9000daec <HAL_UART_IRQHandler+0x90>
9000dae6:	0069      	lsls	r1, r5, #1
9000dae8:	f100 813d 	bmi.w	9000dd66 <HAL_UART_IRQHandler+0x30a>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
9000daec:	01d3      	lsls	r3, r2, #7
9000daee:	d5ed      	bpl.n	9000dacc <HAL_UART_IRQHandler+0x70>
9000daf0:	2d00      	cmp	r5, #0
9000daf2:	daeb      	bge.n	9000dacc <HAL_UART_IRQHandler+0x70>
    HAL_UARTEx_RxFifoFullCallback(huart);
9000daf4:	4620      	mov	r0, r4
}
9000daf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
9000dafa:	f000 bfb3 	b.w	9000ea64 <HAL_UARTEx_RxFifoFullCallback>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
9000dafe:	48b9      	ldr	r0, [pc, #740]	@ (9000dde4 <HAL_UART_IRQHandler+0x388>)
9000db00:	4008      	ands	r0, r1
9000db02:	f040 8125 	bne.w	9000dd50 <HAL_UART_IRQHandler+0x2f4>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
9000db06:	4eb8      	ldr	r6, [pc, #736]	@ (9000dde8 <HAL_UART_IRQHandler+0x38c>)
9000db08:	4235      	tst	r5, r6
9000db0a:	d0bc      	beq.n	9000da86 <HAL_UART_IRQHandler+0x2a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000db0c:	07d6      	lsls	r6, r2, #31
9000db0e:	d51a      	bpl.n	9000db46 <HAL_UART_IRQHandler+0xea>
9000db10:	05ee      	lsls	r6, r5, #23
9000db12:	f140 8103 	bpl.w	9000dd1c <HAL_UART_IRQHandler+0x2c0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000db16:	2601      	movs	r6, #1
9000db18:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
9000db1a:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000db1e:	f046 0601 	orr.w	r6, r6, #1
9000db22:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000db26:	0796      	lsls	r6, r2, #30
9000db28:	f140 80fb 	bpl.w	9000dd22 <HAL_UART_IRQHandler+0x2c6>
9000db2c:	07ce      	lsls	r6, r1, #31
9000db2e:	d50a      	bpl.n	9000db46 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000db30:	2602      	movs	r6, #2
9000db32:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
9000db34:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000db38:	f046 0604 	orr.w	r6, r6, #4
9000db3c:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000db40:	0756      	lsls	r6, r2, #29
9000db42:	f100 80f4 	bmi.w	9000dd2e <HAL_UART_IRQHandler+0x2d2>
    if (((isrflags & USART_ISR_ORE) != 0U)
9000db46:	0716      	lsls	r6, r2, #28
9000db48:	d50b      	bpl.n	9000db62 <HAL_UART_IRQHandler+0x106>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
9000db4a:	f005 0620 	and.w	r6, r5, #32
9000db4e:	4306      	orrs	r6, r0
9000db50:	d007      	beq.n	9000db62 <HAL_UART_IRQHandler+0x106>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000db52:	2008      	movs	r0, #8
9000db54:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
9000db56:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000db5a:	f040 0008 	orr.w	r0, r0, #8
9000db5e:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
9000db62:	0510      	lsls	r0, r2, #20
9000db64:	d50a      	bpl.n	9000db7c <HAL_UART_IRQHandler+0x120>
9000db66:	016e      	lsls	r6, r5, #5
9000db68:	d508      	bpl.n	9000db7c <HAL_UART_IRQHandler+0x120>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000db6a:	f44f 6000 	mov.w	r0, #2048	@ 0x800
9000db6e:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
9000db70:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000db74:	f040 0020 	orr.w	r0, r0, #32
9000db78:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000db7c:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000db80:	2800      	cmp	r0, #0
9000db82:	d0a3      	beq.n	9000dacc <HAL_UART_IRQHandler+0x70>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000db84:	0690      	lsls	r0, r2, #26
9000db86:	d506      	bpl.n	9000db96 <HAL_UART_IRQHandler+0x13a>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000db88:	f005 0520 	and.w	r5, r5, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000db8c:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
9000db90:	430d      	orrs	r5, r1
9000db92:	f040 80d5 	bne.w	9000dd40 <HAL_UART_IRQHandler+0x2e4>
      errorcode = huart->ErrorCode;
9000db96:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000db9a:	689a      	ldr	r2, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
9000db9c:	f001 0128 	and.w	r1, r1, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000dba0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000dba4:	ea52 0501 	orrs.w	r5, r2, r1
9000dba8:	f000 80e2 	beq.w	9000dd70 <HAL_UART_IRQHandler+0x314>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dbac:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dbb0:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dbb4:	e843 2100 	strex	r1, r2, [r3]
9000dbb8:	2900      	cmp	r1, #0
9000dbba:	d1f7      	bne.n	9000dbac <HAL_UART_IRQHandler+0x150>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dbbc:	488b      	ldr	r0, [pc, #556]	@ (9000ddec <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dbbe:	f103 0208 	add.w	r2, r3, #8
9000dbc2:	e852 2f00 	ldrex	r2, [r2]
9000dbc6:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dbc8:	f103 0508 	add.w	r5, r3, #8
9000dbcc:	e845 2100 	strex	r1, r2, [r5]
9000dbd0:	2900      	cmp	r1, #0
9000dbd2:	d1f4      	bne.n	9000dbbe <HAL_UART_IRQHandler+0x162>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000dbd4:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000dbd6:	2a01      	cmp	r2, #1
9000dbd8:	f000 808e 	beq.w	9000dcf8 <HAL_UART_IRQHandler+0x29c>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dbdc:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000dbde:	2120      	movs	r1, #32
9000dbe0:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dbe4:	66e2      	str	r2, [r4, #108]	@ 0x6c
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000dbe6:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
9000dbe8:	6762      	str	r2, [r4, #116]	@ 0x74
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000dbea:	064a      	lsls	r2, r1, #25
9000dbec:	f140 80b7 	bpl.w	9000dd5e <HAL_UART_IRQHandler+0x302>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dbf0:	f103 0208 	add.w	r2, r3, #8
9000dbf4:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000dbf8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dbfc:	f103 0008 	add.w	r0, r3, #8
9000dc00:	e840 2100 	strex	r1, r2, [r0]
9000dc04:	2900      	cmp	r1, #0
9000dc06:	d1f3      	bne.n	9000dbf0 <HAL_UART_IRQHandler+0x194>
          if (huart->hdmarx != NULL)
9000dc08:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000dc0c:	2800      	cmp	r0, #0
9000dc0e:	f000 80a6 	beq.w	9000dd5e <HAL_UART_IRQHandler+0x302>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
9000dc12:	4b77      	ldr	r3, [pc, #476]	@ (9000ddf0 <HAL_UART_IRQHandler+0x394>)
9000dc14:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000dc16:	f7f9 ffb9 	bl	90007b8c <HAL_DMA_Abort_IT>
9000dc1a:	2800      	cmp	r0, #0
9000dc1c:	f43f af56 	beq.w	9000dacc <HAL_UART_IRQHandler+0x70>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000dc20:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000dc24:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000dc26:	e05c      	b.n	9000dce2 <HAL_UART_IRQHandler+0x286>
      && ((isrflags & USART_ISR_IDLE) != 0U)
9000dc28:	06d6      	lsls	r6, r2, #27
9000dc2a:	f57f af30 	bpl.w	9000da8e <HAL_UART_IRQHandler+0x32>
      && ((cr1its & USART_ISR_IDLE) != 0U))
9000dc2e:	06e8      	lsls	r0, r5, #27
9000dc30:	f57f af2d 	bpl.w	9000da8e <HAL_UART_IRQHandler+0x32>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000dc34:	2210      	movs	r2, #16
          && (nb_remaining_rx_data < huart->RxXferSize))
9000dc36:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000dc3a:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000dc3c:	689a      	ldr	r2, [r3, #8]
9000dc3e:	0656      	lsls	r6, r2, #25
9000dc40:	f140 809c 	bpl.w	9000dd7c <HAL_UART_IRQHandler+0x320>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
9000dc44:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000dc48:	6801      	ldr	r1, [r0, #0]
9000dc4a:	6849      	ldr	r1, [r1, #4]
9000dc4c:	b289      	uxth	r1, r1
      if ((nb_remaining_rx_data > 0U)
9000dc4e:	2900      	cmp	r1, #0
9000dc50:	f000 80d0 	beq.w	9000ddf4 <HAL_UART_IRQHandler+0x398>
          && (nb_remaining_rx_data < huart->RxXferSize))
9000dc54:	42a9      	cmp	r1, r5
9000dc56:	f080 80cd 	bcs.w	9000ddf4 <HAL_UART_IRQHandler+0x398>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000dc5a:	69c2      	ldr	r2, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
9000dc5c:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000dc60:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000dc64:	d02f      	beq.n	9000dcc6 <HAL_UART_IRQHandler+0x26a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dc66:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000dc6a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dc6e:	e843 2100 	strex	r1, r2, [r3]
9000dc72:	2900      	cmp	r1, #0
9000dc74:	d1f7      	bne.n	9000dc66 <HAL_UART_IRQHandler+0x20a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dc76:	f103 0208 	add.w	r2, r3, #8
9000dc7a:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000dc7e:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dc82:	f103 0508 	add.w	r5, r3, #8
9000dc86:	e845 2100 	strex	r1, r2, [r5]
9000dc8a:	2900      	cmp	r1, #0
9000dc8c:	d1f3      	bne.n	9000dc76 <HAL_UART_IRQHandler+0x21a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dc8e:	f103 0208 	add.w	r2, r3, #8
9000dc92:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000dc96:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dc9a:	f103 0508 	add.w	r5, r3, #8
9000dc9e:	e845 2100 	strex	r1, r2, [r5]
9000dca2:	2900      	cmp	r1, #0
9000dca4:	d1f3      	bne.n	9000dc8e <HAL_UART_IRQHandler+0x232>
          huart->RxState = HAL_UART_STATE_READY;
9000dca6:	2220      	movs	r2, #32
9000dca8:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dcac:	66e1      	str	r1, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dcae:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dcb2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dcb6:	e843 2100 	strex	r1, r2, [r3]
9000dcba:	2900      	cmp	r1, #0
9000dcbc:	d1f7      	bne.n	9000dcae <HAL_UART_IRQHandler+0x252>
          (void)HAL_DMA_Abort(huart->hdmarx);
9000dcbe:	f7f9 fdaf 	bl	90007820 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000dcc2:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000dcc6:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000dcc8:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000dcca:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000dccc:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
9000dcd0:	1a69      	subs	r1, r5, r1
9000dcd2:	b289      	uxth	r1, r1
9000dcd4:	f7ff fec0 	bl	9000da58 <HAL_UARTEx_RxEventCallback>
}
9000dcd8:	bd70      	pop	{r4, r5, r6, pc}
      if (huart->RxISR != NULL)
9000dcda:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9000dcdc:	2b00      	cmp	r3, #0
9000dcde:	f43f aef5 	beq.w	9000dacc <HAL_UART_IRQHandler+0x70>
}
9000dce2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000dce6:	4718      	bx	r3
    if (huart->TxISR != NULL)
9000dce8:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
9000dcea:	2b00      	cmp	r3, #0
9000dcec:	f43f aeee 	beq.w	9000dacc <HAL_UART_IRQHandler+0x70>
      huart->TxISR(huart);
9000dcf0:	4620      	mov	r0, r4
}
9000dcf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
9000dcf6:	4718      	bx	r3
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dcf8:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dcfc:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd00:	e843 2100 	strex	r1, r2, [r3]
9000dd04:	2900      	cmp	r1, #0
9000dd06:	f43f af69 	beq.w	9000dbdc <HAL_UART_IRQHandler+0x180>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd0a:	e853 2f00 	ldrex	r2, [r3]
9000dd0e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd12:	e843 2100 	strex	r1, r2, [r3]
9000dd16:	2900      	cmp	r1, #0
9000dd18:	d1ee      	bne.n	9000dcf8 <HAL_UART_IRQHandler+0x29c>
9000dd1a:	e75f      	b.n	9000dbdc <HAL_UART_IRQHandler+0x180>
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000dd1c:	0796      	lsls	r6, r2, #30
9000dd1e:	f53f af12 	bmi.w	9000db46 <HAL_UART_IRQHandler+0xea>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000dd22:	0756      	lsls	r6, r2, #29
9000dd24:	f57f af0f 	bpl.w	9000db46 <HAL_UART_IRQHandler+0xea>
9000dd28:	07ce      	lsls	r6, r1, #31
9000dd2a:	f57f af0c 	bpl.w	9000db46 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000dd2e:	2604      	movs	r6, #4
9000dd30:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
9000dd32:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000dd36:	f046 0602 	orr.w	r6, r6, #2
9000dd3a:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000dd3e:	e702      	b.n	9000db46 <HAL_UART_IRQHandler+0xea>
        if (huart->RxISR != NULL)
9000dd40:	6f62      	ldr	r2, [r4, #116]	@ 0x74
9000dd42:	2a00      	cmp	r2, #0
9000dd44:	f43f af27 	beq.w	9000db96 <HAL_UART_IRQHandler+0x13a>
          huart->RxISR(huart);
9000dd48:	4620      	mov	r0, r4
9000dd4a:	4790      	blx	r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000dd4c:	6823      	ldr	r3, [r4, #0]
9000dd4e:	e722      	b.n	9000db96 <HAL_UART_IRQHandler+0x13a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000dd50:	07d6      	lsls	r6, r2, #31
9000dd52:	f57f aee8 	bpl.w	9000db26 <HAL_UART_IRQHandler+0xca>
9000dd56:	05ee      	lsls	r6, r5, #23
9000dd58:	f57f aee5 	bpl.w	9000db26 <HAL_UART_IRQHandler+0xca>
9000dd5c:	e6db      	b.n	9000db16 <HAL_UART_IRQHandler+0xba>
            HAL_UART_ErrorCallback(huart);
9000dd5e:	4620      	mov	r0, r4
9000dd60:	f7ff fd76 	bl	9000d850 <HAL_UART_ErrorCallback>
}
9000dd64:	bd70      	pop	{r4, r5, r6, pc}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000dd66:	4620      	mov	r0, r4
}
9000dd68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000dd6c:	f000 be7c 	b.w	9000ea68 <HAL_UARTEx_TxFifoEmptyCallback>
        HAL_UART_ErrorCallback(huart);
9000dd70:	4620      	mov	r0, r4
9000dd72:	f7ff fd6d 	bl	9000d850 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
9000dd76:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
}
9000dd7a:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000dd7c:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
      if ((huart->RxXferCount > 0U)
9000dd80:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000dd84:	1a6d      	subs	r5, r5, r1
      if ((huart->RxXferCount > 0U)
9000dd86:	b292      	uxth	r2, r2
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000dd88:	b2a9      	uxth	r1, r5
          && (nb_rx_data > 0U))
9000dd8a:	2900      	cmp	r1, #0
9000dd8c:	f43f ae9e 	beq.w	9000dacc <HAL_UART_IRQHandler+0x70>
9000dd90:	2a00      	cmp	r2, #0
9000dd92:	f43f ae9b 	beq.w	9000dacc <HAL_UART_IRQHandler+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd96:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dd9a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd9e:	e843 2000 	strex	r0, r2, [r3]
9000dda2:	2800      	cmp	r0, #0
9000dda4:	d1f7      	bne.n	9000dd96 <HAL_UART_IRQHandler+0x33a>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dda6:	4d11      	ldr	r5, [pc, #68]	@ (9000ddec <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dda8:	f103 0208 	add.w	r2, r3, #8
9000ddac:	e852 2f00 	ldrex	r2, [r2]
9000ddb0:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ddb2:	f103 0608 	add.w	r6, r3, #8
9000ddb6:	e846 2000 	strex	r0, r2, [r6]
9000ddba:	2800      	cmp	r0, #0
9000ddbc:	d1f4      	bne.n	9000dda8 <HAL_UART_IRQHandler+0x34c>
        huart->RxState = HAL_UART_STATE_READY;
9000ddbe:	2220      	movs	r2, #32
        huart->RxISR = NULL;
9000ddc0:	6760      	str	r0, [r4, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
9000ddc2:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ddc6:	66e0      	str	r0, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ddc8:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ddcc:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ddd0:	e843 2000 	strex	r0, r2, [r3]
9000ddd4:	2800      	cmp	r0, #0
9000ddd6:	d1f7      	bne.n	9000ddc8 <HAL_UART_IRQHandler+0x36c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000ddd8:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000ddda:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000dddc:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000ddde:	f7ff fe3b 	bl	9000da58 <HAL_UARTEx_RxEventCallback>
}
9000dde2:	bd70      	pop	{r4, r5, r6, pc}
9000dde4:	10000001 	.word	0x10000001
9000dde8:	04000120 	.word	0x04000120
9000ddec:	effffffe 	.word	0xeffffffe
9000ddf0:	9000d855 	.word	0x9000d855
        if (nb_remaining_rx_data == huart->RxXferSize)
9000ddf4:	42a9      	cmp	r1, r5
9000ddf6:	f47f ae69 	bne.w	9000dacc <HAL_UART_IRQHandler+0x70>
          if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
9000ddfa:	69c3      	ldr	r3, [r0, #28]
9000ddfc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000de00:	d0ea      	beq.n	9000ddd8 <HAL_UART_IRQHandler+0x37c>
}
9000de02:	bd70      	pop	{r4, r5, r6, pc}

9000de04 <UART_RxISR_16BIT.part.0>:
/**
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
9000de04:	6803      	ldr	r3, [r0, #0]
9000de06:	b510      	push	{r4, lr}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de08:	e853 2f00 	ldrex	r2, [r3]
    huart->RxXferCount--;

    if (huart->RxXferCount == 0U)
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000de0c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de10:	e843 2100 	strex	r1, r2, [r3]
9000de14:	2900      	cmp	r1, #0
9000de16:	d1f7      	bne.n	9000de08 <UART_RxISR_16BIT.part.0+0x4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de18:	f103 0208 	add.w	r2, r3, #8
9000de1c:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000de20:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de24:	f103 0408 	add.w	r4, r3, #8
9000de28:	e844 2100 	strex	r1, r2, [r4]
9000de2c:	2900      	cmp	r1, #0
9000de2e:	d1f3      	bne.n	9000de18 <UART_RxISR_16BIT.part.0+0x14>
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000de30:	4a1a      	ldr	r2, [pc, #104]	@ (9000de9c <UART_RxISR_16BIT.part.0+0x98>)
      huart->RxState = HAL_UART_STATE_READY;
9000de32:	2420      	movs	r4, #32
      huart->RxISR = NULL;
9000de34:	6741      	str	r1, [r0, #116]	@ 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000de36:	4293      	cmp	r3, r2
      huart->RxState = HAL_UART_STATE_READY;
9000de38:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
      huart->RxEventType = HAL_UART_RXEVENT_TC;
9000de3c:	6701      	str	r1, [r0, #112]	@ 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000de3e:	d002      	beq.n	9000de46 <UART_RxISR_16BIT.part.0+0x42>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000de40:	685a      	ldr	r2, [r3, #4]
9000de42:	0211      	lsls	r1, r2, #8
9000de44:	d416      	bmi.n	9000de74 <UART_RxISR_16BIT.part.0+0x70>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000de46:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
9000de48:	2a01      	cmp	r2, #1
9000de4a:	d124      	bne.n	9000de96 <UART_RxISR_16BIT.part.0+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000de4c:	2200      	movs	r2, #0
9000de4e:	66c2      	str	r2, [r0, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de50:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000de54:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de58:	e843 2100 	strex	r1, r2, [r3]
9000de5c:	2900      	cmp	r1, #0
9000de5e:	d1f7      	bne.n	9000de50 <UART_RxISR_16BIT.part.0+0x4c>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000de60:	69da      	ldr	r2, [r3, #28]
9000de62:	06d2      	lsls	r2, r2, #27
9000de64:	d501      	bpl.n	9000de6a <UART_RxISR_16BIT.part.0+0x66>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000de66:	2210      	movs	r2, #16
9000de68:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000de6a:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
9000de6e:	f7ff fdf3 	bl	9000da58 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000de72:	bd10      	pop	{r4, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de74:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000de78:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de7c:	e843 2100 	strex	r1, r2, [r3]
9000de80:	2900      	cmp	r1, #0
9000de82:	d0e0      	beq.n	9000de46 <UART_RxISR_16BIT.part.0+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de84:	e853 2f00 	ldrex	r2, [r3]
9000de88:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de8c:	e843 2100 	strex	r1, r2, [r3]
9000de90:	2900      	cmp	r1, #0
9000de92:	d1ef      	bne.n	9000de74 <UART_RxISR_16BIT.part.0+0x70>
9000de94:	e7d7      	b.n	9000de46 <UART_RxISR_16BIT.part.0+0x42>
        HAL_UART_RxCpltCallback(huart);
9000de96:	f7f5 fcc3 	bl	90003820 <HAL_UART_RxCpltCallback>
}
9000de9a:	bd10      	pop	{r4, pc}
9000de9c:	58000c00 	.word	0x58000c00

9000dea0 <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
9000dea0:	b410      	push	{r4}
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000dea2:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000dea6:	f8b0 1060 	ldrh.w	r1, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000deaa:	2c22      	cmp	r4, #34	@ 0x22
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000deac:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000deae:	d006      	beq.n	9000debe <UART_RxISR_16BIT+0x1e>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000deb0:	6993      	ldr	r3, [r2, #24]
9000deb2:	f043 0308 	orr.w	r3, r3, #8
9000deb6:	6193      	str	r3, [r2, #24]
  }
}
9000deb8:	f85d 4b04 	ldr.w	r4, [sp], #4
9000debc:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000debe:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *tmp = (uint16_t)(uhdata & uhMask);
9000dec0:	6d84      	ldr	r4, [r0, #88]	@ 0x58
9000dec2:	4011      	ands	r1, r2
9000dec4:	f824 1b02 	strh.w	r1, [r4], #2
    huart->RxXferCount--;
9000dec8:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr += 2U;
9000decc:	6584      	str	r4, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000dece:	3a01      	subs	r2, #1
9000ded0:	b292      	uxth	r2, r2
9000ded2:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000ded6:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000deda:	b29b      	uxth	r3, r3
9000dedc:	2b00      	cmp	r3, #0
9000dede:	d1eb      	bne.n	9000deb8 <UART_RxISR_16BIT+0x18>
}
9000dee0:	f85d 4b04 	ldr.w	r4, [sp], #4
9000dee4:	f7ff bf8e 	b.w	9000de04 <UART_RxISR_16BIT.part.0>

9000dee8 <UART_RxISR_8BIT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000dee8:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000deec:	f8b0 c060 	ldrh.w	ip, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000def0:	2922      	cmp	r1, #34	@ 0x22
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000def2:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000def4:	d004      	beq.n	9000df00 <UART_RxISR_8BIT+0x18>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000def6:	6993      	ldr	r3, [r2, #24]
9000def8:	f043 0308 	orr.w	r3, r3, #8
9000defc:	6193      	str	r3, [r2, #24]
}
9000defe:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000df00:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000df02:	6d81      	ldr	r1, [r0, #88]	@ 0x58
9000df04:	ea02 020c 	and.w	r2, r2, ip
9000df08:	700a      	strb	r2, [r1, #0]
    huart->RxXferCount--;
9000df0a:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr++;
9000df0e:	6d81      	ldr	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000df10:	3a01      	subs	r2, #1
    huart->pRxBuffPtr++;
9000df12:	3101      	adds	r1, #1
    huart->RxXferCount--;
9000df14:	b292      	uxth	r2, r2
    huart->pRxBuffPtr++;
9000df16:	6581      	str	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000df18:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000df1c:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000df20:	b29b      	uxth	r3, r3
9000df22:	2b00      	cmp	r3, #0
9000df24:	d1eb      	bne.n	9000defe <UART_RxISR_8BIT+0x16>
9000df26:	f7ff bf6d 	b.w	9000de04 <UART_RxISR_16BIT.part.0>
9000df2a:	bf00      	nop

9000df2c <UART_RxISR_8BIT_FIFOEN>:
{
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000df2c:	6803      	ldr	r3, [r0, #0]
{
9000df2e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000df32:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000df34:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000df36:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000df38:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000df3c:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000df40:	2a22      	cmp	r2, #34	@ 0x22
9000df42:	d005      	beq.n	9000df50 <UART_RxISR_8BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000df44:	699a      	ldr	r2, [r3, #24]
9000df46:	f042 0208 	orr.w	r2, r2, #8
9000df4a:	619a      	str	r2, [r3, #24]
  }
}
9000df4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000df50:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000df54:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000df56:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000df5a:	f007 0701 	and.w	r7, r7, #1
9000df5e:	2b00      	cmp	r3, #0
9000df60:	f000 80d8 	beq.w	9000e114 <UART_RxISR_8BIT_FIFOEN+0x1e8>
9000df64:	2f00      	cmp	r7, #0
9000df66:	f000 80a3 	beq.w	9000e0b0 <UART_RxISR_8BIT_FIFOEN+0x184>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000df6a:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000df6c:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000df6e:	f04f 0802 	mov.w	r8, #2
9000df72:	e004      	b.n	9000df7e <UART_RxISR_8BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000df74:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000df78:	b29b      	uxth	r3, r3
9000df7a:	2b00      	cmp	r3, #0
9000df7c:	d03e      	beq.n	9000dffc <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000df7e:	06ab      	lsls	r3, r5, #26
9000df80:	d573      	bpl.n	9000e06a <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000df82:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000df84:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000df86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000df88:	ea03 0309 	and.w	r3, r3, r9
9000df8c:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000df8e:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000df92:	6823      	ldr	r3, [r4, #0]
      huart->RxXferCount--;
9000df94:	3a01      	subs	r2, #1
      huart->pRxBuffPtr++;
9000df96:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000df98:	b292      	uxth	r2, r2
      huart->pRxBuffPtr++;
9000df9a:	3101      	adds	r1, #1
      huart->RxXferCount--;
9000df9c:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000dfa0:	69dd      	ldr	r5, [r3, #28]
      huart->pRxBuffPtr++;
9000dfa2:	65a1      	str	r1, [r4, #88]	@ 0x58
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000dfa4:	0768      	lsls	r0, r5, #29
9000dfa6:	d0e5      	beq.n	9000df74 <UART_RxISR_8BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000dfa8:	07e9      	lsls	r1, r5, #31
9000dfaa:	d50a      	bpl.n	9000dfc2 <UART_RxISR_8BIT_FIFOEN+0x96>
9000dfac:	f1ba 0f00 	cmp.w	sl, #0
9000dfb0:	d007      	beq.n	9000dfc2 <UART_RxISR_8BIT_FIFOEN+0x96>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000dfb2:	2201      	movs	r2, #1
9000dfb4:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000dfb6:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000dfba:	f042 0201 	orr.w	r2, r2, #1
9000dfbe:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000dfc2:	07aa      	lsls	r2, r5, #30
9000dfc4:	d507      	bpl.n	9000dfd6 <UART_RxISR_8BIT_FIFOEN+0xaa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000dfc6:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000dfca:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000dfce:	f042 0204 	orr.w	r2, r2, #4
9000dfd2:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000dfd6:	0768      	lsls	r0, r5, #29
9000dfd8:	d506      	bpl.n	9000dfe8 <UART_RxISR_8BIT_FIFOEN+0xbc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000dfda:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000dfdc:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000dfe0:	f043 0302 	orr.w	r3, r3, #2
9000dfe4:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000dfe8:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000dfec:	2b00      	cmp	r3, #0
9000dfee:	d0c1      	beq.n	9000df74 <UART_RxISR_8BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000dff0:	4620      	mov	r0, r4
9000dff2:	f7ff fc2d 	bl	9000d850 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000dff6:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000dffa:	e7bb      	b.n	9000df74 <UART_RxISR_8BIT_FIFOEN+0x48>
9000dffc:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dffe:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000e002:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e006:	e843 2100 	strex	r1, r2, [r3]
9000e00a:	2900      	cmp	r1, #0
9000e00c:	d1f7      	bne.n	9000dffe <UART_RxISR_8BIT_FIFOEN+0xd2>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e00e:	484e      	ldr	r0, [pc, #312]	@ (9000e148 <UART_RxISR_8BIT_FIFOEN+0x21c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e010:	f103 0208 	add.w	r2, r3, #8
9000e014:	e852 2f00 	ldrex	r2, [r2]
9000e018:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e01a:	f103 0508 	add.w	r5, r3, #8
9000e01e:	e845 2100 	strex	r1, r2, [r5]
9000e022:	2900      	cmp	r1, #0
9000e024:	d1f4      	bne.n	9000e010 <UART_RxISR_8BIT_FIFOEN+0xe4>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e026:	4a49      	ldr	r2, [pc, #292]	@ (9000e14c <UART_RxISR_8BIT_FIFOEN+0x220>)
        huart->RxState = HAL_UART_STATE_READY;
9000e028:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000e02a:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e02c:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000e02e:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000e032:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e034:	d002      	beq.n	9000e03c <UART_RxISR_8BIT_FIFOEN+0x110>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000e036:	685a      	ldr	r2, [r3, #4]
9000e038:	0211      	lsls	r1, r2, #8
9000e03a:	d46f      	bmi.n	9000e11c <UART_RxISR_8BIT_FIFOEN+0x1f0>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e03c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e03e:	2a01      	cmp	r2, #1
9000e040:	d17d      	bne.n	9000e13e <UART_RxISR_8BIT_FIFOEN+0x212>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e042:	2200      	movs	r2, #0
9000e044:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e046:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e04a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e04e:	e843 2100 	strex	r1, r2, [r3]
9000e052:	2900      	cmp	r1, #0
9000e054:	d1f7      	bne.n	9000e046 <UART_RxISR_8BIT_FIFOEN+0x11a>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000e056:	69da      	ldr	r2, [r3, #28]
9000e058:	06d2      	lsls	r2, r2, #27
9000e05a:	d501      	bpl.n	9000e060 <UART_RxISR_8BIT_FIFOEN+0x134>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000e05c:	2210      	movs	r2, #16
9000e05e:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000e060:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000e064:	4620      	mov	r0, r4
9000e066:	f7ff fcf7 	bl	9000da58 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000e06a:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e06e:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000e070:	2b00      	cmp	r3, #0
9000e072:	f43f af6b 	beq.w	9000df4c <UART_RxISR_8BIT_FIFOEN+0x20>
9000e076:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000e07a:	429a      	cmp	r2, r3
9000e07c:	f67f af66 	bls.w	9000df4c <UART_RxISR_8BIT_FIFOEN+0x20>
9000e080:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e082:	f103 0208 	add.w	r2, r3, #8
9000e086:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000e08a:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e08e:	f103 0008 	add.w	r0, r3, #8
9000e092:	e840 2100 	strex	r1, r2, [r0]
9000e096:	2900      	cmp	r1, #0
9000e098:	d1f3      	bne.n	9000e082 <UART_RxISR_8BIT_FIFOEN+0x156>
      huart->RxISR = UART_RxISR_8BIT;
9000e09a:	4a2d      	ldr	r2, [pc, #180]	@ (9000e150 <UART_RxISR_8BIT_FIFOEN+0x224>)
9000e09c:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e09e:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000e0a2:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e0a6:	e843 2100 	strex	r1, r2, [r3]
9000e0aa:	2900      	cmp	r1, #0
9000e0ac:	d1f7      	bne.n	9000e09e <UART_RxISR_8BIT_FIFOEN+0x172>
9000e0ae:	e74d      	b.n	9000df4c <UART_RxISR_8BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e0b0:	2601      	movs	r6, #1
9000e0b2:	e004      	b.n	9000e0be <UART_RxISR_8BIT_FIFOEN+0x192>
      if (huart->RxXferCount == 0U)
9000e0b4:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e0b8:	b29b      	uxth	r3, r3
9000e0ba:	2b00      	cmp	r3, #0
9000e0bc:	d09e      	beq.n	9000dffc <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e0be:	06a8      	lsls	r0, r5, #26
9000e0c0:	d5d3      	bpl.n	9000e06a <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e0c2:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000e0c4:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e0c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000e0c8:	ea03 0309 	and.w	r3, r3, r9
9000e0cc:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000e0ce:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr++;
9000e0d2:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000e0d4:	3b01      	subs	r3, #1
      huart->pRxBuffPtr++;
9000e0d6:	3201      	adds	r2, #1
      huart->RxXferCount--;
9000e0d8:	b29b      	uxth	r3, r3
      huart->pRxBuffPtr++;
9000e0da:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000e0dc:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000e0e0:	6823      	ldr	r3, [r4, #0]
9000e0e2:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000e0e4:	0769      	lsls	r1, r5, #29
9000e0e6:	d0e5      	beq.n	9000e0b4 <UART_RxISR_8BIT_FIFOEN+0x188>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e0e8:	07ea      	lsls	r2, r5, #31
9000e0ea:	d509      	bpl.n	9000e100 <UART_RxISR_8BIT_FIFOEN+0x1d4>
9000e0ec:	f1ba 0f00 	cmp.w	sl, #0
9000e0f0:	d006      	beq.n	9000e100 <UART_RxISR_8BIT_FIFOEN+0x1d4>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e0f2:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000e0f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e0f8:	f043 0301 	orr.w	r3, r3, #1
9000e0fc:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000e100:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e104:	2b00      	cmp	r3, #0
9000e106:	d0d5      	beq.n	9000e0b4 <UART_RxISR_8BIT_FIFOEN+0x188>
          HAL_UART_ErrorCallback(huart);
9000e108:	4620      	mov	r0, r4
9000e10a:	f7ff fba1 	bl	9000d850 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e10e:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000e112:	e7cf      	b.n	9000e0b4 <UART_RxISR_8BIT_FIFOEN+0x188>
    rxdatacount = huart->RxXferCount;
9000e114:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000e118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e11c:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000e120:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e124:	e843 2100 	strex	r1, r2, [r3]
9000e128:	2900      	cmp	r1, #0
9000e12a:	d087      	beq.n	9000e03c <UART_RxISR_8BIT_FIFOEN+0x110>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e12c:	e853 2f00 	ldrex	r2, [r3]
9000e130:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e134:	e843 2100 	strex	r1, r2, [r3]
9000e138:	2900      	cmp	r1, #0
9000e13a:	d1ef      	bne.n	9000e11c <UART_RxISR_8BIT_FIFOEN+0x1f0>
9000e13c:	e77e      	b.n	9000e03c <UART_RxISR_8BIT_FIFOEN+0x110>
          HAL_UART_RxCpltCallback(huart);
9000e13e:	4620      	mov	r0, r4
9000e140:	f7f5 fb6e 	bl	90003820 <HAL_UART_RxCpltCallback>
9000e144:	e791      	b.n	9000e06a <UART_RxISR_8BIT_FIFOEN+0x13e>
9000e146:	bf00      	nop
9000e148:	effffffe 	.word	0xeffffffe
9000e14c:	58000c00 	.word	0x58000c00
9000e150:	9000dee9 	.word	0x9000dee9

9000e154 <UART_RxISR_16BIT_FIFOEN>:
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000e154:	6803      	ldr	r3, [r0, #0]
{
9000e156:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000e15a:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000e15c:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000e15e:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e160:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000e164:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e168:	2a22      	cmp	r2, #34	@ 0x22
9000e16a:	d005      	beq.n	9000e178 <UART_RxISR_16BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000e16c:	699a      	ldr	r2, [r3, #24]
9000e16e:	f042 0208 	orr.w	r2, r2, #8
9000e172:	619a      	str	r2, [r3, #24]
  }
}
9000e174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e178:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000e17c:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e17e:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e182:	f007 0701 	and.w	r7, r7, #1
9000e186:	2b00      	cmp	r3, #0
9000e188:	f000 80d4 	beq.w	9000e334 <UART_RxISR_16BIT_FIFOEN+0x1e0>
9000e18c:	2f00      	cmp	r7, #0
9000e18e:	f000 80a1 	beq.w	9000e2d4 <UART_RxISR_16BIT_FIFOEN+0x180>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e192:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000e194:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000e196:	f04f 0802 	mov.w	r8, #2
9000e19a:	e004      	b.n	9000e1a6 <UART_RxISR_16BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000e19c:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e1a0:	b29b      	uxth	r3, r3
9000e1a2:	2b00      	cmp	r3, #0
9000e1a4:	d03c      	beq.n	9000e220 <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e1a6:	06ab      	lsls	r3, r5, #26
9000e1a8:	d571      	bpl.n	9000e28e <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e1aa:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000e1ac:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e1ae:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000e1b0:	ea09 0202 	and.w	r2, r9, r2
9000e1b4:	f821 2b02 	strh.w	r2, [r1], #2
      huart->RxXferCount--;
9000e1b8:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr += 2U;
9000e1bc:	65a1      	str	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000e1be:	3a01      	subs	r2, #1
9000e1c0:	b292      	uxth	r2, r2
9000e1c2:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000e1c6:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000e1c8:	0768      	lsls	r0, r5, #29
9000e1ca:	d0e7      	beq.n	9000e19c <UART_RxISR_16BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e1cc:	07e9      	lsls	r1, r5, #31
9000e1ce:	d50a      	bpl.n	9000e1e6 <UART_RxISR_16BIT_FIFOEN+0x92>
9000e1d0:	f1ba 0f00 	cmp.w	sl, #0
9000e1d4:	d007      	beq.n	9000e1e6 <UART_RxISR_16BIT_FIFOEN+0x92>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e1d6:	2201      	movs	r2, #1
9000e1d8:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000e1da:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000e1de:	f042 0201 	orr.w	r2, r2, #1
9000e1e2:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e1e6:	07aa      	lsls	r2, r5, #30
9000e1e8:	d507      	bpl.n	9000e1fa <UART_RxISR_16BIT_FIFOEN+0xa6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000e1ea:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000e1ee:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000e1f2:	f042 0204 	orr.w	r2, r2, #4
9000e1f6:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e1fa:	0768      	lsls	r0, r5, #29
9000e1fc:	d506      	bpl.n	9000e20c <UART_RxISR_16BIT_FIFOEN+0xb8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000e1fe:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000e200:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e204:	f043 0302 	orr.w	r3, r3, #2
9000e208:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000e20c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e210:	2b00      	cmp	r3, #0
9000e212:	d0c3      	beq.n	9000e19c <UART_RxISR_16BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000e214:	4620      	mov	r0, r4
9000e216:	f7ff fb1b 	bl	9000d850 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e21a:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000e21e:	e7bd      	b.n	9000e19c <UART_RxISR_16BIT_FIFOEN+0x48>
9000e220:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e222:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000e226:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e22a:	e843 2100 	strex	r1, r2, [r3]
9000e22e:	2900      	cmp	r1, #0
9000e230:	d1f7      	bne.n	9000e222 <UART_RxISR_16BIT_FIFOEN+0xce>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e232:	484d      	ldr	r0, [pc, #308]	@ (9000e368 <UART_RxISR_16BIT_FIFOEN+0x214>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e234:	f103 0208 	add.w	r2, r3, #8
9000e238:	e852 2f00 	ldrex	r2, [r2]
9000e23c:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e23e:	f103 0508 	add.w	r5, r3, #8
9000e242:	e845 2100 	strex	r1, r2, [r5]
9000e246:	2900      	cmp	r1, #0
9000e248:	d1f4      	bne.n	9000e234 <UART_RxISR_16BIT_FIFOEN+0xe0>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e24a:	4a48      	ldr	r2, [pc, #288]	@ (9000e36c <UART_RxISR_16BIT_FIFOEN+0x218>)
        huart->RxState = HAL_UART_STATE_READY;
9000e24c:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000e24e:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e250:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000e252:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000e256:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e258:	d002      	beq.n	9000e260 <UART_RxISR_16BIT_FIFOEN+0x10c>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000e25a:	685a      	ldr	r2, [r3, #4]
9000e25c:	0211      	lsls	r1, r2, #8
9000e25e:	d46d      	bmi.n	9000e33c <UART_RxISR_16BIT_FIFOEN+0x1e8>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e260:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e262:	2a01      	cmp	r2, #1
9000e264:	d17b      	bne.n	9000e35e <UART_RxISR_16BIT_FIFOEN+0x20a>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e266:	2200      	movs	r2, #0
9000e268:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e26a:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e26e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e272:	e843 2100 	strex	r1, r2, [r3]
9000e276:	2900      	cmp	r1, #0
9000e278:	d1f7      	bne.n	9000e26a <UART_RxISR_16BIT_FIFOEN+0x116>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000e27a:	69da      	ldr	r2, [r3, #28]
9000e27c:	06d2      	lsls	r2, r2, #27
9000e27e:	d501      	bpl.n	9000e284 <UART_RxISR_16BIT_FIFOEN+0x130>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000e280:	2210      	movs	r2, #16
9000e282:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000e284:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000e288:	4620      	mov	r0, r4
9000e28a:	f7ff fbe5 	bl	9000da58 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000e28e:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e292:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000e294:	2b00      	cmp	r3, #0
9000e296:	f43f af6d 	beq.w	9000e174 <UART_RxISR_16BIT_FIFOEN+0x20>
9000e29a:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000e29e:	429a      	cmp	r2, r3
9000e2a0:	f67f af68 	bls.w	9000e174 <UART_RxISR_16BIT_FIFOEN+0x20>
9000e2a4:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e2a6:	f103 0208 	add.w	r2, r3, #8
9000e2aa:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000e2ae:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e2b2:	f103 0008 	add.w	r0, r3, #8
9000e2b6:	e840 2100 	strex	r1, r2, [r0]
9000e2ba:	2900      	cmp	r1, #0
9000e2bc:	d1f3      	bne.n	9000e2a6 <UART_RxISR_16BIT_FIFOEN+0x152>
      huart->RxISR = UART_RxISR_16BIT;
9000e2be:	4a2c      	ldr	r2, [pc, #176]	@ (9000e370 <UART_RxISR_16BIT_FIFOEN+0x21c>)
9000e2c0:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e2c2:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000e2c6:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e2ca:	e843 2100 	strex	r1, r2, [r3]
9000e2ce:	2900      	cmp	r1, #0
9000e2d0:	d1f7      	bne.n	9000e2c2 <UART_RxISR_16BIT_FIFOEN+0x16e>
9000e2d2:	e74f      	b.n	9000e174 <UART_RxISR_16BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e2d4:	2601      	movs	r6, #1
9000e2d6:	e004      	b.n	9000e2e2 <UART_RxISR_16BIT_FIFOEN+0x18e>
      if (huart->RxXferCount == 0U)
9000e2d8:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e2dc:	b29b      	uxth	r3, r3
9000e2de:	2b00      	cmp	r3, #0
9000e2e0:	d09e      	beq.n	9000e220 <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e2e2:	06a8      	lsls	r0, r5, #26
9000e2e4:	d5d3      	bpl.n	9000e28e <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e2e6:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000e2e8:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e2ea:	6a59      	ldr	r1, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000e2ec:	ea09 0101 	and.w	r1, r9, r1
9000e2f0:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
9000e2f4:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000e2f6:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
9000e2fa:	3a01      	subs	r2, #1
9000e2fc:	b292      	uxth	r2, r2
9000e2fe:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000e302:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000e304:	0769      	lsls	r1, r5, #29
9000e306:	d0e7      	beq.n	9000e2d8 <UART_RxISR_16BIT_FIFOEN+0x184>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e308:	07ea      	lsls	r2, r5, #31
9000e30a:	d509      	bpl.n	9000e320 <UART_RxISR_16BIT_FIFOEN+0x1cc>
9000e30c:	f1ba 0f00 	cmp.w	sl, #0
9000e310:	d006      	beq.n	9000e320 <UART_RxISR_16BIT_FIFOEN+0x1cc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e312:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000e314:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e318:	f043 0301 	orr.w	r3, r3, #1
9000e31c:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000e320:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e324:	2b00      	cmp	r3, #0
9000e326:	d0d7      	beq.n	9000e2d8 <UART_RxISR_16BIT_FIFOEN+0x184>
          HAL_UART_ErrorCallback(huart);
9000e328:	4620      	mov	r0, r4
9000e32a:	f7ff fa91 	bl	9000d850 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e32e:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000e332:	e7d1      	b.n	9000e2d8 <UART_RxISR_16BIT_FIFOEN+0x184>
    rxdatacount = huart->RxXferCount;
9000e334:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000e338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e33c:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000e340:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e344:	e843 2100 	strex	r1, r2, [r3]
9000e348:	2900      	cmp	r1, #0
9000e34a:	d089      	beq.n	9000e260 <UART_RxISR_16BIT_FIFOEN+0x10c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e34c:	e853 2f00 	ldrex	r2, [r3]
9000e350:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e354:	e843 2100 	strex	r1, r2, [r3]
9000e358:	2900      	cmp	r1, #0
9000e35a:	d1ef      	bne.n	9000e33c <UART_RxISR_16BIT_FIFOEN+0x1e8>
9000e35c:	e780      	b.n	9000e260 <UART_RxISR_16BIT_FIFOEN+0x10c>
          HAL_UART_RxCpltCallback(huart);
9000e35e:	4620      	mov	r0, r4
9000e360:	f7f5 fa5e 	bl	90003820 <HAL_UART_RxCpltCallback>
9000e364:	e793      	b.n	9000e28e <UART_RxISR_16BIT_FIFOEN+0x13a>
9000e366:	bf00      	nop
9000e368:	effffffe 	.word	0xeffffffe
9000e36c:	58000c00 	.word	0x58000c00
9000e370:	9000dea1 	.word	0x9000dea1

9000e374 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000e374:	6901      	ldr	r1, [r0, #16]
9000e376:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e378:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000e37a:	430a      	orrs	r2, r1
{
9000e37c:	b570      	push	{r4, r5, r6, lr}
9000e37e:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e380:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000e382:	69c0      	ldr	r0, [r0, #28]
{
9000e384:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000e386:	6961      	ldr	r1, [r4, #20]
9000e388:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e38a:	49a0      	ldr	r1, [pc, #640]	@ (9000e60c <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000e38c:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e38e:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000e390:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e392:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000e394:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000e396:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000e398:	685a      	ldr	r2, [r3, #4]
9000e39a:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000e39e:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000e3a0:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000e3a2:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000e3a4:	4a9a      	ldr	r2, [pc, #616]	@ (9000e610 <UART_SetConfig+0x29c>)
9000e3a6:	4293      	cmp	r3, r2
9000e3a8:	f000 8119 	beq.w	9000e5de <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000e3ac:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000e3ae:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000e3b0:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000e3b2:	4a98      	ldr	r2, [pc, #608]	@ (9000e614 <UART_SetConfig+0x2a0>)
9000e3b4:	4032      	ands	r2, r6
9000e3b6:	4311      	orrs	r1, r2
9000e3b8:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000e3ba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000e3bc:	f022 020f 	bic.w	r2, r2, #15
9000e3c0:	432a      	orrs	r2, r5
9000e3c2:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000e3c4:	4a94      	ldr	r2, [pc, #592]	@ (9000e618 <UART_SetConfig+0x2a4>)
9000e3c6:	4293      	cmp	r3, r2
9000e3c8:	d028      	beq.n	9000e41c <UART_SetConfig+0xa8>
9000e3ca:	4a94      	ldr	r2, [pc, #592]	@ (9000e61c <UART_SetConfig+0x2a8>)
9000e3cc:	4293      	cmp	r3, r2
9000e3ce:	d01a      	beq.n	9000e406 <UART_SetConfig+0x92>
9000e3d0:	4a93      	ldr	r2, [pc, #588]	@ (9000e620 <UART_SetConfig+0x2ac>)
9000e3d2:	4293      	cmp	r3, r2
9000e3d4:	d017      	beq.n	9000e406 <UART_SetConfig+0x92>
9000e3d6:	4a93      	ldr	r2, [pc, #588]	@ (9000e624 <UART_SetConfig+0x2b0>)
9000e3d8:	4293      	cmp	r3, r2
9000e3da:	d014      	beq.n	9000e406 <UART_SetConfig+0x92>
9000e3dc:	4a92      	ldr	r2, [pc, #584]	@ (9000e628 <UART_SetConfig+0x2b4>)
9000e3de:	4293      	cmp	r3, r2
9000e3e0:	d011      	beq.n	9000e406 <UART_SetConfig+0x92>
9000e3e2:	4a92      	ldr	r2, [pc, #584]	@ (9000e62c <UART_SetConfig+0x2b8>)
9000e3e4:	4293      	cmp	r3, r2
9000e3e6:	d019      	beq.n	9000e41c <UART_SetConfig+0xa8>
9000e3e8:	4a91      	ldr	r2, [pc, #580]	@ (9000e630 <UART_SetConfig+0x2bc>)
9000e3ea:	4293      	cmp	r3, r2
9000e3ec:	d00b      	beq.n	9000e406 <UART_SetConfig+0x92>
9000e3ee:	4a91      	ldr	r2, [pc, #580]	@ (9000e634 <UART_SetConfig+0x2c0>)
9000e3f0:	4293      	cmp	r3, r2
9000e3f2:	d008      	beq.n	9000e406 <UART_SetConfig+0x92>
        ret = HAL_ERROR;
9000e3f4:	2001      	movs	r0, #1
  huart->RxISR = NULL;
9000e3f6:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000e3f8:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000e3fc:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000e3fe:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000e400:	67a3      	str	r3, [r4, #120]	@ 0x78
}
9000e402:	b006      	add	sp, #24
9000e404:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000e406:	4b8c      	ldr	r3, [pc, #560]	@ (9000e638 <UART_SetConfig+0x2c4>)
9000e408:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000e40a:	f003 0307 	and.w	r3, r3, #7
9000e40e:	2b05      	cmp	r3, #5
9000e410:	d8f0      	bhi.n	9000e3f4 <UART_SetConfig+0x80>
9000e412:	e8df f003 	tbb	[pc, r3]
9000e416:	7e9e      	.short	0x7e9e
9000e418:	785f9189 	.word	0x785f9189
9000e41c:	4b86      	ldr	r3, [pc, #536]	@ (9000e638 <UART_SetConfig+0x2c4>)
9000e41e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000e420:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000e424:	2b28      	cmp	r3, #40	@ 0x28
9000e426:	d8e5      	bhi.n	9000e3f4 <UART_SetConfig+0x80>
9000e428:	a201      	add	r2, pc, #4	@ (adr r2, 9000e430 <UART_SetConfig+0xbc>)
9000e42a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000e42e:	bf00      	nop
9000e430:	9000e5ad 	.word	0x9000e5ad
9000e434:	9000e3f5 	.word	0x9000e3f5
9000e438:	9000e3f5 	.word	0x9000e3f5
9000e43c:	9000e3f5 	.word	0x9000e3f5
9000e440:	9000e3f5 	.word	0x9000e3f5
9000e444:	9000e3f5 	.word	0x9000e3f5
9000e448:	9000e3f5 	.word	0x9000e3f5
9000e44c:	9000e3f5 	.word	0x9000e3f5
9000e450:	9000e513 	.word	0x9000e513
9000e454:	9000e3f5 	.word	0x9000e3f5
9000e458:	9000e3f5 	.word	0x9000e3f5
9000e45c:	9000e3f5 	.word	0x9000e3f5
9000e460:	9000e3f5 	.word	0x9000e3f5
9000e464:	9000e3f5 	.word	0x9000e3f5
9000e468:	9000e3f5 	.word	0x9000e3f5
9000e46c:	9000e3f5 	.word	0x9000e3f5
9000e470:	9000e529 	.word	0x9000e529
9000e474:	9000e3f5 	.word	0x9000e3f5
9000e478:	9000e3f5 	.word	0x9000e3f5
9000e47c:	9000e3f5 	.word	0x9000e3f5
9000e480:	9000e3f5 	.word	0x9000e3f5
9000e484:	9000e3f5 	.word	0x9000e3f5
9000e488:	9000e3f5 	.word	0x9000e3f5
9000e48c:	9000e3f5 	.word	0x9000e3f5
9000e490:	9000e539 	.word	0x9000e539
9000e494:	9000e3f5 	.word	0x9000e3f5
9000e498:	9000e3f5 	.word	0x9000e3f5
9000e49c:	9000e3f5 	.word	0x9000e3f5
9000e4a0:	9000e3f5 	.word	0x9000e3f5
9000e4a4:	9000e3f5 	.word	0x9000e3f5
9000e4a8:	9000e3f5 	.word	0x9000e3f5
9000e4ac:	9000e3f5 	.word	0x9000e3f5
9000e4b0:	9000e4d5 	.word	0x9000e4d5
9000e4b4:	9000e3f5 	.word	0x9000e3f5
9000e4b8:	9000e3f5 	.word	0x9000e3f5
9000e4bc:	9000e3f5 	.word	0x9000e3f5
9000e4c0:	9000e3f5 	.word	0x9000e3f5
9000e4c4:	9000e3f5 	.word	0x9000e3f5
9000e4c8:	9000e3f5 	.word	0x9000e3f5
9000e4cc:	9000e3f5 	.word	0x9000e3f5
9000e4d0:	9000e507 	.word	0x9000e507
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e4d4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000e4d8:	4858      	ldr	r0, [pc, #352]	@ (9000e63c <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e4da:	d047      	beq.n	9000e56c <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e4dc:	4a58      	ldr	r2, [pc, #352]	@ (9000e640 <UART_SetConfig+0x2cc>)
9000e4de:	6863      	ldr	r3, [r4, #4]
9000e4e0:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000e4e4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e4e8:	fbb0 f0f1 	udiv	r0, r0, r1
9000e4ec:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000e4f0:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000e4f4:	f1a0 0310 	sub.w	r3, r0, #16
9000e4f8:	4293      	cmp	r3, r2
9000e4fa:	f63f af7b 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000e4fe:	6823      	ldr	r3, [r4, #0]
9000e500:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000e502:	2000      	movs	r0, #0
9000e504:	e777      	b.n	9000e3f6 <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e506:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e50a:	d02f      	beq.n	9000e56c <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000e50c:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000e510:	e7e4      	b.n	9000e4dc <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e512:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e516:	d022      	beq.n	9000e55e <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000e518:	4668      	mov	r0, sp
9000e51a:	f7fe fc47 	bl	9000cdac <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000e51e:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000e520:	2800      	cmp	r0, #0
9000e522:	d0ee      	beq.n	9000e502 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e524:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000e526:	e7d9      	b.n	9000e4dc <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e528:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e52c:	d04f      	beq.n	9000e5ce <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000e52e:	a803      	add	r0, sp, #12
9000e530:	f7fe fcd6 	bl	9000cee0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000e534:	9804      	ldr	r0, [sp, #16]
        break;
9000e536:	e7f3      	b.n	9000e520 <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e538:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e53c:	d03c      	beq.n	9000e5b8 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e53e:	4b3e      	ldr	r3, [pc, #248]	@ (9000e638 <UART_SetConfig+0x2c4>)
9000e540:	681a      	ldr	r2, [r3, #0]
9000e542:	0691      	lsls	r1, r2, #26
9000e544:	d52d      	bpl.n	9000e5a2 <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000e546:	681b      	ldr	r3, [r3, #0]
9000e548:	483e      	ldr	r0, [pc, #248]	@ (9000e644 <UART_SetConfig+0x2d0>)
9000e54a:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e54e:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000e550:	e7c4      	b.n	9000e4dc <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e552:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e556:	d026      	beq.n	9000e5a6 <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000e558:	f7fd fb36 	bl	9000bbc8 <HAL_RCC_GetPCLK1Freq>
        break;
9000e55c:	e7e0      	b.n	9000e520 <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000e55e:	4668      	mov	r0, sp
9000e560:	f7fe fc24 	bl	9000cdac <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000e564:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000e566:	2800      	cmp	r0, #0
9000e568:	d0cb      	beq.n	9000e502 <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e56a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000e56c:	4b34      	ldr	r3, [pc, #208]	@ (9000e640 <UART_SetConfig+0x2cc>)
9000e56e:	6862      	ldr	r2, [r4, #4]
9000e570:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000e574:	0853      	lsrs	r3, r2, #1
9000e576:	fbb0 f0f1 	udiv	r0, r0, r1
9000e57a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000e57e:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e582:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000e586:	f1a3 0210 	sub.w	r2, r3, #16
9000e58a:	428a      	cmp	r2, r1
9000e58c:	f63f af32 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000e590:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000e594:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000e598:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000e59a:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000e59c:	4313      	orrs	r3, r2
9000e59e:	60cb      	str	r3, [r1, #12]
9000e5a0:	e7af      	b.n	9000e502 <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000e5a2:	4828      	ldr	r0, [pc, #160]	@ (9000e644 <UART_SetConfig+0x2d0>)
9000e5a4:	e79a      	b.n	9000e4dc <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000e5a6:	f7fd fb0f 	bl	9000bbc8 <HAL_RCC_GetPCLK1Freq>
        break;
9000e5aa:	e7dc      	b.n	9000e566 <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000e5ac:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000e5b0:	d012      	beq.n	9000e5d8 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000e5b2:	f7fd fb51 	bl	9000bc58 <HAL_RCC_GetPCLK2Freq>
        break;
9000e5b6:	e7b3      	b.n	9000e520 <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e5b8:	4b1f      	ldr	r3, [pc, #124]	@ (9000e638 <UART_SetConfig+0x2c4>)
9000e5ba:	681a      	ldr	r2, [r3, #0]
9000e5bc:	0690      	lsls	r0, r2, #26
9000e5be:	f140 808b 	bpl.w	9000e6d8 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000e5c2:	681b      	ldr	r3, [r3, #0]
9000e5c4:	481f      	ldr	r0, [pc, #124]	@ (9000e644 <UART_SetConfig+0x2d0>)
9000e5c6:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e5ca:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000e5cc:	e7ce      	b.n	9000e56c <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000e5ce:	a803      	add	r0, sp, #12
9000e5d0:	f7fe fc86 	bl	9000cee0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000e5d4:	9804      	ldr	r0, [sp, #16]
        break;
9000e5d6:	e7c6      	b.n	9000e566 <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000e5d8:	f7fd fb3e 	bl	9000bc58 <HAL_RCC_GetPCLK2Freq>
        break;
9000e5dc:	e7c3      	b.n	9000e566 <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000e5de:	6898      	ldr	r0, [r3, #8]
9000e5e0:	4a0c      	ldr	r2, [pc, #48]	@ (9000e614 <UART_SetConfig+0x2a0>)
9000e5e2:	4002      	ands	r2, r0
9000e5e4:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000e5e6:	4914      	ldr	r1, [pc, #80]	@ (9000e638 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000e5e8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000e5ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000e5ec:	f022 020f 	bic.w	r2, r2, #15
9000e5f0:	432a      	orrs	r2, r5
9000e5f2:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000e5f4:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000e5f6:	f003 0307 	and.w	r3, r3, #7
9000e5fa:	2b05      	cmp	r3, #5
9000e5fc:	f63f aefa 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
9000e600:	e8df f003 	tbb	[pc, r3]
9000e604:	224e575c 	.word	0x224e575c
9000e608:	5f62      	.short	0x5f62
9000e60a:	bf00      	nop
9000e60c:	cfff69f3 	.word	0xcfff69f3
9000e610:	58000c00 	.word	0x58000c00
9000e614:	11fff4ff 	.word	0x11fff4ff
9000e618:	40011000 	.word	0x40011000
9000e61c:	40004400 	.word	0x40004400
9000e620:	40004800 	.word	0x40004800
9000e624:	40004c00 	.word	0x40004c00
9000e628:	40005000 	.word	0x40005000
9000e62c:	40011400 	.word	0x40011400
9000e630:	40007800 	.word	0x40007800
9000e634:	40007c00 	.word	0x40007c00
9000e638:	58024400 	.word	0x58024400
9000e63c:	003d0900 	.word	0x003d0900
9000e640:	9002f3a8 	.word	0x9002f3a8
9000e644:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e648:	4b24      	ldr	r3, [pc, #144]	@ (9000e6dc <UART_SetConfig+0x368>)
9000e64a:	681a      	ldr	r2, [r3, #0]
9000e64c:	0692      	lsls	r2, r2, #26
9000e64e:	d43d      	bmi.n	9000e6cc <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000e650:	4823      	ldr	r0, [pc, #140]	@ (9000e6e0 <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000e652:	4b24      	ldr	r3, [pc, #144]	@ (9000e6e4 <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000e654:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000e656:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000e65a:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000e65e:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000e662:	4299      	cmp	r1, r3
9000e664:	f63f aec6 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
9000e668:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000e66c:	f63f aec2 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000e670:	2300      	movs	r3, #0
9000e672:	4619      	mov	r1, r3
9000e674:	f7f2 f890 	bl	90000798 <__aeabi_uldivmod>
9000e678:	4632      	mov	r2, r6
9000e67a:	0209      	lsls	r1, r1, #8
9000e67c:	0203      	lsls	r3, r0, #8
9000e67e:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000e682:	0870      	lsrs	r0, r6, #1
9000e684:	1818      	adds	r0, r3, r0
9000e686:	f04f 0300 	mov.w	r3, #0
9000e68a:	f141 0100 	adc.w	r1, r1, #0
9000e68e:	f7f2 f883 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000e692:	4b15      	ldr	r3, [pc, #84]	@ (9000e6e8 <UART_SetConfig+0x374>)
9000e694:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000e698:	429a      	cmp	r2, r3
9000e69a:	f63f aeab 	bhi.w	9000e3f4 <UART_SetConfig+0x80>
9000e69e:	e72e      	b.n	9000e4fe <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000e6a0:	a803      	add	r0, sp, #12
9000e6a2:	f7fe fc1d 	bl	9000cee0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000e6a6:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000e6a8:	2800      	cmp	r0, #0
9000e6aa:	f43f af2a 	beq.w	9000e502 <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000e6ae:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000e6b0:	e7cf      	b.n	9000e652 <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000e6b2:	4668      	mov	r0, sp
9000e6b4:	f7fe fb7a 	bl	9000cdac <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000e6b8:	9801      	ldr	r0, [sp, #4]
        break;
9000e6ba:	e7f5      	b.n	9000e6a8 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000e6bc:	f7fe fb64 	bl	9000cd88 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000e6c0:	e7f2      	b.n	9000e6a8 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000e6c2:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000e6c6:	e7c4      	b.n	9000e652 <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000e6c8:	4808      	ldr	r0, [pc, #32]	@ (9000e6ec <UART_SetConfig+0x378>)
9000e6ca:	e7c2      	b.n	9000e652 <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000e6cc:	681b      	ldr	r3, [r3, #0]
9000e6ce:	4804      	ldr	r0, [pc, #16]	@ (9000e6e0 <UART_SetConfig+0x36c>)
9000e6d0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e6d4:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000e6d6:	e7bc      	b.n	9000e652 <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000e6d8:	4801      	ldr	r0, [pc, #4]	@ (9000e6e0 <UART_SetConfig+0x36c>)
9000e6da:	e747      	b.n	9000e56c <UART_SetConfig+0x1f8>
9000e6dc:	58024400 	.word	0x58024400
9000e6e0:	03d09000 	.word	0x03d09000
9000e6e4:	9002f3a8 	.word	0x9002f3a8
9000e6e8:	000ffcff 	.word	0x000ffcff
9000e6ec:	003d0900 	.word	0x003d0900

9000e6f0 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000e6f0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000e6f2:	071a      	lsls	r2, r3, #28
{
9000e6f4:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000e6f6:	d506      	bpl.n	9000e706 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000e6f8:	6801      	ldr	r1, [r0, #0]
9000e6fa:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000e6fc:	684a      	ldr	r2, [r1, #4]
9000e6fe:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000e702:	4322      	orrs	r2, r4
9000e704:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000e706:	07dc      	lsls	r4, r3, #31
9000e708:	d506      	bpl.n	9000e718 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000e70a:	6801      	ldr	r1, [r0, #0]
9000e70c:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000e70e:	684a      	ldr	r2, [r1, #4]
9000e710:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000e714:	4322      	orrs	r2, r4
9000e716:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000e718:	0799      	lsls	r1, r3, #30
9000e71a:	d506      	bpl.n	9000e72a <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000e71c:	6801      	ldr	r1, [r0, #0]
9000e71e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000e720:	684a      	ldr	r2, [r1, #4]
9000e722:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000e726:	4322      	orrs	r2, r4
9000e728:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000e72a:	075a      	lsls	r2, r3, #29
9000e72c:	d506      	bpl.n	9000e73c <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000e72e:	6801      	ldr	r1, [r0, #0]
9000e730:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000e732:	684a      	ldr	r2, [r1, #4]
9000e734:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000e738:	4322      	orrs	r2, r4
9000e73a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000e73c:	06dc      	lsls	r4, r3, #27
9000e73e:	d506      	bpl.n	9000e74e <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000e740:	6801      	ldr	r1, [r0, #0]
9000e742:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000e744:	688a      	ldr	r2, [r1, #8]
9000e746:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000e74a:	4322      	orrs	r2, r4
9000e74c:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000e74e:	0699      	lsls	r1, r3, #26
9000e750:	d506      	bpl.n	9000e760 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000e752:	6801      	ldr	r1, [r0, #0]
9000e754:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000e756:	688a      	ldr	r2, [r1, #8]
9000e758:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000e75c:	4322      	orrs	r2, r4
9000e75e:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000e760:	065a      	lsls	r2, r3, #25
9000e762:	d50a      	bpl.n	9000e77a <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000e764:	6801      	ldr	r1, [r0, #0]
9000e766:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000e768:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000e76a:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000e76e:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000e772:	ea42 0204 	orr.w	r2, r2, r4
9000e776:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000e778:	d00b      	beq.n	9000e792 <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000e77a:	061b      	lsls	r3, r3, #24
9000e77c:	d506      	bpl.n	9000e78c <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000e77e:	6802      	ldr	r2, [r0, #0]
9000e780:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000e782:	6853      	ldr	r3, [r2, #4]
9000e784:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000e788:	430b      	orrs	r3, r1
9000e78a:	6053      	str	r3, [r2, #4]
}
9000e78c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e790:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000e792:	684a      	ldr	r2, [r1, #4]
9000e794:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000e796:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000e79a:	4322      	orrs	r2, r4
9000e79c:	604a      	str	r2, [r1, #4]
9000e79e:	e7ec      	b.n	9000e77a <UART_AdvFeatureConfig+0x8a>

9000e7a0 <UART_CheckIdleState>:
{
9000e7a0:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e7a2:	2300      	movs	r3, #0
{
9000e7a4:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e7a6:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  tickstart = HAL_GetTick();
9000e7aa:	f7f8 fefb 	bl	900075a4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000e7ae:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000e7b0:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000e7b2:	6813      	ldr	r3, [r2, #0]
9000e7b4:	071b      	lsls	r3, r3, #28
9000e7b6:	d40f      	bmi.n	9000e7d8 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000e7b8:	6813      	ldr	r3, [r2, #0]
9000e7ba:	0759      	lsls	r1, r3, #29
9000e7bc:	d431      	bmi.n	9000e822 <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e7be:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000e7c0:	2220      	movs	r2, #32
  return HAL_OK;
9000e7c2:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000e7c4:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000e7c8:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e7cc:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000e7ce:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000e7d0:	2300      	movs	r3, #0
9000e7d2:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000e7d6:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000e7d8:	69d3      	ldr	r3, [r2, #28]
9000e7da:	0298      	lsls	r0, r3, #10
9000e7dc:	d4ec      	bmi.n	9000e7b8 <UART_CheckIdleState+0x18>
9000e7de:	e00c      	b.n	9000e7fa <UART_CheckIdleState+0x5a>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000e7e0:	6819      	ldr	r1, [r3, #0]
9000e7e2:	461a      	mov	r2, r3
9000e7e4:	0749      	lsls	r1, r1, #29
9000e7e6:	d505      	bpl.n	9000e7f4 <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000e7e8:	69d9      	ldr	r1, [r3, #28]
9000e7ea:	0708      	lsls	r0, r1, #28
9000e7ec:	d44a      	bmi.n	9000e884 <UART_CheckIdleState+0xe4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000e7ee:	69d9      	ldr	r1, [r3, #28]
9000e7f0:	0509      	lsls	r1, r1, #20
9000e7f2:	d475      	bmi.n	9000e8e0 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000e7f4:	69db      	ldr	r3, [r3, #28]
9000e7f6:	0298      	lsls	r0, r3, #10
9000e7f8:	d4de      	bmi.n	9000e7b8 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000e7fa:	f7f8 fed3 	bl	900075a4 <HAL_GetTick>
9000e7fe:	1b43      	subs	r3, r0, r5
9000e800:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000e804:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000e806:	d3eb      	bcc.n	9000e7e0 <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e808:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000e80c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e810:	e843 2100 	strex	r1, r2, [r3]
9000e814:	2900      	cmp	r1, #0
9000e816:	d1f7      	bne.n	9000e808 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000e818:	2320      	movs	r3, #32
9000e81a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000e81e:	2003      	movs	r0, #3
9000e820:	e7d6      	b.n	9000e7d0 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000e822:	69d3      	ldr	r3, [r2, #28]
9000e824:	025b      	lsls	r3, r3, #9
9000e826:	d4ca      	bmi.n	9000e7be <UART_CheckIdleState+0x1e>
9000e828:	e00d      	b.n	9000e846 <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000e82a:	681a      	ldr	r2, [r3, #0]
9000e82c:	0750      	lsls	r0, r2, #29
9000e82e:	d507      	bpl.n	9000e840 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000e830:	69da      	ldr	r2, [r3, #28]
9000e832:	0711      	lsls	r1, r2, #28
9000e834:	f100 8082 	bmi.w	9000e93c <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000e838:	69da      	ldr	r2, [r3, #28]
9000e83a:	0512      	lsls	r2, r2, #20
9000e83c:	f100 80ac 	bmi.w	9000e998 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000e840:	69db      	ldr	r3, [r3, #28]
9000e842:	025b      	lsls	r3, r3, #9
9000e844:	d4bb      	bmi.n	9000e7be <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000e846:	f7f8 fead 	bl	900075a4 <HAL_GetTick>
9000e84a:	1b43      	subs	r3, r0, r5
9000e84c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000e850:	6823      	ldr	r3, [r4, #0]
9000e852:	d3ea      	bcc.n	9000e82a <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e854:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e858:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e85c:	e843 2100 	strex	r1, r2, [r3]
9000e860:	2900      	cmp	r1, #0
9000e862:	d1f7      	bne.n	9000e854 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e864:	f103 0208 	add.w	r2, r3, #8
9000e868:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000e86c:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e870:	f103 0008 	add.w	r0, r3, #8
9000e874:	e840 2100 	strex	r1, r2, [r0]
9000e878:	2900      	cmp	r1, #0
9000e87a:	d1f3      	bne.n	9000e864 <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000e87c:	2320      	movs	r3, #32
9000e87e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000e882:	e7cc      	b.n	9000e81e <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000e884:	2208      	movs	r2, #8
9000e886:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e888:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e88c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e890:	e843 2100 	strex	r1, r2, [r3]
9000e894:	2900      	cmp	r1, #0
9000e896:	d1f7      	bne.n	9000e888 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e898:	4856      	ldr	r0, [pc, #344]	@ (9000e9f4 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e89a:	f103 0208 	add.w	r2, r3, #8
9000e89e:	e852 2f00 	ldrex	r2, [r2]
9000e8a2:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e8a4:	f103 0508 	add.w	r5, r3, #8
9000e8a8:	e845 2100 	strex	r1, r2, [r5]
9000e8ac:	2900      	cmp	r1, #0
9000e8ae:	d1f4      	bne.n	9000e89a <UART_CheckIdleState+0xfa>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e8b0:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e8b2:	2a01      	cmp	r2, #1
9000e8b4:	d00b      	beq.n	9000e8ce <UART_CheckIdleState+0x12e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e8b6:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e8b8:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000e8ba:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000e8bc:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000e8c0:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e8c2:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000e8c4:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000e8c8:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000e8cc:	e79c      	b.n	9000e808 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e8ce:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e8d2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e8d6:	e843 2100 	strex	r1, r2, [r3]
9000e8da:	2900      	cmp	r1, #0
9000e8dc:	d1f7      	bne.n	9000e8ce <UART_CheckIdleState+0x12e>
9000e8de:	e7ea      	b.n	9000e8b6 <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000e8e0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000e8e4:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e8e6:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e8ea:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e8ee:	e843 2100 	strex	r1, r2, [r3]
9000e8f2:	2900      	cmp	r1, #0
9000e8f4:	d1f7      	bne.n	9000e8e6 <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e8f6:	483f      	ldr	r0, [pc, #252]	@ (9000e9f4 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e8f8:	f103 0208 	add.w	r2, r3, #8
9000e8fc:	e852 2f00 	ldrex	r2, [r2]
9000e900:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e902:	f103 0508 	add.w	r5, r3, #8
9000e906:	e845 2100 	strex	r1, r2, [r5]
9000e90a:	2900      	cmp	r1, #0
9000e90c:	d1f4      	bne.n	9000e8f8 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e90e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e910:	2a01      	cmp	r2, #1
9000e912:	d00a      	beq.n	9000e92a <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e914:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e916:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000e918:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000e91a:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000e91e:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e922:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000e924:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000e928:	e76e      	b.n	9000e808 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e92a:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e92e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e932:	e843 2100 	strex	r1, r2, [r3]
9000e936:	2900      	cmp	r1, #0
9000e938:	d1f7      	bne.n	9000e92a <UART_CheckIdleState+0x18a>
9000e93a:	e7eb      	b.n	9000e914 <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000e93c:	2208      	movs	r2, #8
9000e93e:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e940:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e944:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e948:	e843 2100 	strex	r1, r2, [r3]
9000e94c:	2900      	cmp	r1, #0
9000e94e:	d1f7      	bne.n	9000e940 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e950:	4828      	ldr	r0, [pc, #160]	@ (9000e9f4 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e952:	f103 0208 	add.w	r2, r3, #8
9000e956:	e852 2f00 	ldrex	r2, [r2]
9000e95a:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e95c:	f103 0508 	add.w	r5, r3, #8
9000e960:	e845 2100 	strex	r1, r2, [r5]
9000e964:	2900      	cmp	r1, #0
9000e966:	d1f4      	bne.n	9000e952 <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e968:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e96a:	2a01      	cmp	r2, #1
9000e96c:	d00b      	beq.n	9000e986 <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e96e:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e970:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000e972:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000e974:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000e978:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e97a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000e97c:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000e980:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000e984:	e766      	b.n	9000e854 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e986:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e98a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e98e:	e843 2100 	strex	r1, r2, [r3]
9000e992:	2900      	cmp	r1, #0
9000e994:	d1f7      	bne.n	9000e986 <UART_CheckIdleState+0x1e6>
9000e996:	e7ea      	b.n	9000e96e <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000e998:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000e99c:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e99e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e9a2:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e9a6:	e843 2100 	strex	r1, r2, [r3]
9000e9aa:	2900      	cmp	r1, #0
9000e9ac:	d1f7      	bne.n	9000e99e <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e9ae:	4811      	ldr	r0, [pc, #68]	@ (9000e9f4 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e9b0:	f103 0208 	add.w	r2, r3, #8
9000e9b4:	e852 2f00 	ldrex	r2, [r2]
9000e9b8:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e9ba:	f103 0508 	add.w	r5, r3, #8
9000e9be:	e845 2100 	strex	r1, r2, [r5]
9000e9c2:	2900      	cmp	r1, #0
9000e9c4:	d1f4      	bne.n	9000e9b0 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e9c6:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e9c8:	2a01      	cmp	r2, #1
9000e9ca:	d00a      	beq.n	9000e9e2 <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e9cc:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e9ce:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000e9d0:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000e9d2:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000e9d6:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e9da:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000e9dc:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000e9e0:	e738      	b.n	9000e854 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e9e2:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e9e6:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e9ea:	e843 2100 	strex	r1, r2, [r3]
9000e9ee:	2900      	cmp	r1, #0
9000e9f0:	d1f7      	bne.n	9000e9e2 <UART_CheckIdleState+0x242>
9000e9f2:	e7eb      	b.n	9000e9cc <UART_CheckIdleState+0x22c>
9000e9f4:	effffffe 	.word	0xeffffffe

9000e9f8 <HAL_UART_Init>:
  if (huart == NULL)
9000e9f8:	b380      	cbz	r0, 9000ea5c <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000e9fa:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000e9fe:	b510      	push	{r4, lr}
9000ea00:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000ea02:	b333      	cbz	r3, 9000ea52 <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000ea04:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000ea06:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000ea08:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000ea0a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000ea0e:	6813      	ldr	r3, [r2, #0]
9000ea10:	f023 0301 	bic.w	r3, r3, #1
9000ea14:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000ea16:	b9c1      	cbnz	r1, 9000ea4a <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000ea18:	4620      	mov	r0, r4
9000ea1a:	f7ff fcab 	bl	9000e374 <UART_SetConfig>
9000ea1e:	2801      	cmp	r0, #1
9000ea20:	d011      	beq.n	9000ea46 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000ea22:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000ea24:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000ea26:	685a      	ldr	r2, [r3, #4]
9000ea28:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000ea2c:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000ea2e:	689a      	ldr	r2, [r3, #8]
9000ea30:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000ea34:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000ea36:	681a      	ldr	r2, [r3, #0]
9000ea38:	f042 0201 	orr.w	r2, r2, #1
}
9000ea3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000ea40:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000ea42:	f7ff bead 	b.w	9000e7a0 <UART_CheckIdleState>
}
9000ea46:	2001      	movs	r0, #1
9000ea48:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000ea4a:	4620      	mov	r0, r4
9000ea4c:	f7ff fe50 	bl	9000e6f0 <UART_AdvFeatureConfig>
9000ea50:	e7e2      	b.n	9000ea18 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000ea52:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000ea56:	f7f5 fceb 	bl	90004430 <HAL_UART_MspInit>
9000ea5a:	e7d3      	b.n	9000ea04 <HAL_UART_Init+0xc>
}
9000ea5c:	2001      	movs	r0, #1
9000ea5e:	4770      	bx	lr

9000ea60 <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
9000ea60:	4770      	bx	lr
9000ea62:	bf00      	nop

9000ea64 <HAL_UARTEx_RxFifoFullCallback>:
/**
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
9000ea64:	4770      	bx	lr
9000ea66:	bf00      	nop

9000ea68 <HAL_UARTEx_TxFifoEmptyCallback>:
/**
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
9000ea68:	4770      	bx	lr
9000ea6a:	bf00      	nop

9000ea6c <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000ea6c:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000ea70:	2a01      	cmp	r2, #1
9000ea72:	d017      	beq.n	9000eaa4 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000ea74:	6802      	ldr	r2, [r0, #0]
9000ea76:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000ea78:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000ea7a:	2100      	movs	r1, #0
{
9000ea7c:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000ea7e:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000ea82:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000ea84:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000ea86:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000ea88:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000ea8c:	f024 0401 	bic.w	r4, r4, #1
9000ea90:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000ea92:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000ea94:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000ea96:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000ea98:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000ea9c:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000eaa0:	bc30      	pop	{r4, r5}
9000eaa2:	4770      	bx	lr
  __HAL_LOCK(huart);
9000eaa4:	2002      	movs	r0, #2
}
9000eaa6:	4770      	bx	lr

9000eaa8 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000eaa8:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000eaac:	2a01      	cmp	r2, #1
9000eaae:	d037      	beq.n	9000eb20 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000eab0:	6802      	ldr	r2, [r0, #0]
9000eab2:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000eab4:	2024      	movs	r0, #36	@ 0x24
{
9000eab6:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000eab8:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000eabc:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000eabe:	6810      	ldr	r0, [r2, #0]
9000eac0:	f020 0001 	bic.w	r0, r0, #1
9000eac4:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000eac6:	6890      	ldr	r0, [r2, #8]
9000eac8:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000eacc:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000eace:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000ead0:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000ead2:	b310      	cbz	r0, 9000eb1a <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000ead4:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000ead6:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000ead8:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eadc:	4911      	ldr	r1, [pc, #68]	@ (9000eb24 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000eade:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000eae2:	4d11      	ldr	r5, [pc, #68]	@ (9000eb28 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eae4:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eae8:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000eaec:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eaf0:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000eaf2:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eaf6:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eaf8:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eafc:	fbb1 f1f5 	udiv	r1, r1, r5
9000eb00:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000eb04:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000eb06:	2100      	movs	r1, #0
9000eb08:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000eb0c:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000eb0e:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000eb10:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000eb14:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000eb18:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000eb1a:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000eb1c:	4608      	mov	r0, r1
9000eb1e:	e7ef      	b.n	9000eb00 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000eb20:	2002      	movs	r0, #2
}
9000eb22:	4770      	bx	lr
9000eb24:	9002f3c8 	.word	0x9002f3c8
9000eb28:	9002f3c0 	.word	0x9002f3c0

9000eb2c <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000eb2c:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000eb30:	2a01      	cmp	r2, #1
9000eb32:	d037      	beq.n	9000eba4 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000eb34:	6802      	ldr	r2, [r0, #0]
9000eb36:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000eb38:	2024      	movs	r0, #36	@ 0x24
{
9000eb3a:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000eb3c:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000eb40:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000eb42:	6810      	ldr	r0, [r2, #0]
9000eb44:	f020 0001 	bic.w	r0, r0, #1
9000eb48:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000eb4a:	6890      	ldr	r0, [r2, #8]
9000eb4c:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000eb50:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000eb52:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000eb54:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000eb56:	b310      	cbz	r0, 9000eb9e <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000eb58:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000eb5a:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eb5c:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eb60:	4911      	ldr	r1, [pc, #68]	@ (9000eba8 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000eb62:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000eb66:	4d11      	ldr	r5, [pc, #68]	@ (9000ebac <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eb68:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eb6c:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000eb70:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eb74:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000eb76:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eb7a:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000eb7c:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000eb80:	fbb1 f1f5 	udiv	r1, r1, r5
9000eb84:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000eb88:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000eb8a:	2100      	movs	r1, #0
9000eb8c:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000eb90:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000eb92:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000eb94:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000eb98:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000eb9c:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000eb9e:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000eba0:	4608      	mov	r0, r1
9000eba2:	e7ef      	b.n	9000eb84 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000eba4:	2002      	movs	r0, #2
}
9000eba6:	4770      	bx	lr
9000eba8:	9002f3c8 	.word	0x9002f3c8
9000ebac:	9002f3c0 	.word	0x9002f3c0

9000ebb0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000ebb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ebb4:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000ebb8:	e9d1 8200 	ldrd	r8, r2, [r1]
9000ebbc:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000ebbe:	ea43 030e 	orr.w	r3, r3, lr
9000ebc2:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000ebc6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000ebca:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000ebcc:	f1b8 0f00 	cmp.w	r8, #0
9000ebd0:	d10f      	bne.n	9000ebf2 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ebd2:	433b      	orrs	r3, r7
9000ebd4:	4313      	orrs	r3, r2
9000ebd6:	6802      	ldr	r2, [r0, #0]
9000ebd8:	ea43 030c 	orr.w	r3, r3, ip
9000ebdc:	f36f 020e 	bfc	r2, #0, #15
9000ebe0:	4333      	orrs	r3, r6
9000ebe2:	432b      	orrs	r3, r5
9000ebe4:	4323      	orrs	r3, r4
9000ebe6:	430b      	orrs	r3, r1
9000ebe8:	4313      	orrs	r3, r2
9000ebea:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000ebec:	2000      	movs	r0, #0
9000ebee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ebf2:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ebf6:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ebf8:	4332      	orrs	r2, r6
9000ebfa:	432a      	orrs	r2, r5
9000ebfc:	4322      	orrs	r2, r4
9000ebfe:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ec00:	6801      	ldr	r1, [r0, #0]
9000ec02:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000ec06:	430b      	orrs	r3, r1
9000ec08:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ec0a:	6843      	ldr	r3, [r0, #4]
9000ec0c:	f36f 030e 	bfc	r3, #0, #15
9000ec10:	4313      	orrs	r3, r2
9000ec12:	6043      	str	r3, [r0, #4]
}
9000ec14:	2000      	movs	r0, #0
9000ec16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000ec1a:	bf00      	nop

9000ec1c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000ec1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ec1e:	68cc      	ldr	r4, [r1, #12]
9000ec20:	694b      	ldr	r3, [r1, #20]
9000ec22:	3c01      	subs	r4, #1
9000ec24:	688d      	ldr	r5, [r1, #8]
9000ec26:	698f      	ldr	r7, [r1, #24]
9000ec28:	3b01      	subs	r3, #1
9000ec2a:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000ec2e:	684c      	ldr	r4, [r1, #4]
9000ec30:	680e      	ldr	r6, [r1, #0]
9000ec32:	3d01      	subs	r5, #1
9000ec34:	3c01      	subs	r4, #1
9000ec36:	051b      	lsls	r3, r3, #20
9000ec38:	022d      	lsls	r5, r5, #8
9000ec3a:	3e01      	subs	r6, #1
9000ec3c:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000ec40:	690c      	ldr	r4, [r1, #16]
9000ec42:	1e79      	subs	r1, r7, #1
9000ec44:	3c01      	subs	r4, #1
9000ec46:	0609      	lsls	r1, r1, #24
9000ec48:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000ec4a:	b972      	cbnz	r2, 9000ec6a <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ec4c:	ea4e 0303 	orr.w	r3, lr, r3
9000ec50:	6882      	ldr	r2, [r0, #8]
9000ec52:	4333      	orrs	r3, r6
9000ec54:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000ec58:	ea43 030c 	orr.w	r3, r3, ip
9000ec5c:	432b      	orrs	r3, r5
9000ec5e:	4323      	orrs	r3, r4
9000ec60:	430b      	orrs	r3, r1
9000ec62:	4313      	orrs	r3, r2
9000ec64:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000ec66:	2000      	movs	r0, #0
9000ec68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ec6a:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ec6e:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ec72:	4a08      	ldr	r2, [pc, #32]	@ (9000ec94 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ec74:	4333      	orrs	r3, r6
9000ec76:	4323      	orrs	r3, r4
9000ec78:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ec7a:	6881      	ldr	r1, [r0, #8]
9000ec7c:	400a      	ands	r2, r1
9000ec7e:	ea4e 0202 	orr.w	r2, lr, r2
9000ec82:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ec84:	68c2      	ldr	r2, [r0, #12]
9000ec86:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000ec8a:	4313      	orrs	r3, r2
9000ec8c:	60c3      	str	r3, [r0, #12]
}
9000ec8e:	2000      	movs	r0, #0
9000ec90:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000ec92:	bf00      	nop
9000ec94:	ff0f0fff 	.word	0xff0f0fff

9000ec98 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000ec98:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000ec9a:	2200      	movs	r2, #0
{
9000ec9c:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000ec9e:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000eca2:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000eca6:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000ecaa:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000ecae:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000ecb0:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000ecb4:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000ecb6:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000ecb8:	619a      	str	r2, [r3, #24]
}
9000ecba:	bc30      	pop	{r4, r5}
9000ecbc:	4770      	bx	lr
9000ecbe:	bf00      	nop

9000ecc0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000ecc0:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ecc2:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000ecc6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ecc8:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000ecf0 <FMC_SDRAM_SendCommand+0x30>
9000eccc:	6900      	ldr	r0, [r0, #16]
9000ecce:	4323      	orrs	r3, r4
9000ecd0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000ecd4:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000ecd8:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ecda:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000ecde:	3901      	subs	r1, #1
}
9000ece0:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ece4:	ea43 030c 	orr.w	r3, r3, ip
9000ece8:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000ecec:	6113      	str	r3, [r2, #16]
}
9000ecee:	4770      	bx	lr
9000ecf0:	ffc00000 	.word	0xffc00000

9000ecf4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000ecf4:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000ecf6:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ecf8:	6953      	ldr	r3, [r2, #20]
9000ecfa:	f36f 034d 	bfc	r3, #1, #13
9000ecfe:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000ed02:	6153      	str	r3, [r2, #20]
}
9000ed04:	4770      	bx	lr
9000ed06:	bf00      	nop

9000ed08 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000ed08:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000ed0a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ed0e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000ed10:	f002 fc40 	bl	90011594 <xTaskGetSchedulerState>
9000ed14:	2801      	cmp	r0, #1
9000ed16:	d100      	bne.n	9000ed1a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000ed18:	bd08      	pop	{r3, pc}
9000ed1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000ed1e:	f000 bc89 	b.w	9000f634 <xPortSysTickHandler>
9000ed22:	bf00      	nop

9000ed24 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000ed24:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000ed28:	b92b      	cbnz	r3, 9000ed36 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000ed2a:	4b06      	ldr	r3, [pc, #24]	@ (9000ed44 <osKernelInitialize+0x20>)
9000ed2c:	6818      	ldr	r0, [r3, #0]
9000ed2e:	b928      	cbnz	r0, 9000ed3c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000ed30:	2201      	movs	r2, #1
9000ed32:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000ed34:	4770      	bx	lr
    stat = osErrorISR;
9000ed36:	f06f 0005 	mvn.w	r0, #5
9000ed3a:	4770      	bx	lr
    } else {
      stat = osError;
9000ed3c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000ed40:	4770      	bx	lr
9000ed42:	bf00      	nop
9000ed44:	24008b8c 	.word	0x24008b8c

9000ed48 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000ed48:	b510      	push	{r4, lr}
9000ed4a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000ed4e:	b974      	cbnz	r4, 9000ed6e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000ed50:	4b08      	ldr	r3, [pc, #32]	@ (9000ed74 <osKernelStart+0x2c>)
9000ed52:	681a      	ldr	r2, [r3, #0]
9000ed54:	2a01      	cmp	r2, #1
9000ed56:	d107      	bne.n	9000ed68 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000ed58:	4907      	ldr	r1, [pc, #28]	@ (9000ed78 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000ed5a:	2202      	movs	r2, #2
9000ed5c:	77cc      	strb	r4, [r1, #31]
9000ed5e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000ed60:	f002 f9ca 	bl	900110f8 <vTaskStartScheduler>
      stat = osOK;
9000ed64:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000ed66:	bd10      	pop	{r4, pc}
      stat = osError;
9000ed68:	f04f 30ff 	mov.w	r0, #4294967295
}
9000ed6c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ed6e:	f06f 0005 	mvn.w	r0, #5
}
9000ed72:	bd10      	pop	{r4, pc}
9000ed74:	24008b8c 	.word	0x24008b8c
9000ed78:	e000ed00 	.word	0xe000ed00

9000ed7c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000ed7c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000ed7e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000ed80:	b087      	sub	sp, #28
  hTask = NULL;
9000ed82:	9505      	str	r5, [sp, #20]
9000ed84:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000ed88:	b340      	cbz	r0, 9000eddc <osThreadNew+0x60>
9000ed8a:	bb3b      	cbnz	r3, 9000eddc <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000ed8c:	4614      	mov	r4, r2
9000ed8e:	b1d2      	cbz	r2, 9000edc6 <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000ed90:	6996      	ldr	r6, [r2, #24]
9000ed92:	bb36      	cbnz	r6, 9000ede2 <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000ed94:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000ed96:	6863      	ldr	r3, [r4, #4]
9000ed98:	07db      	lsls	r3, r3, #31
9000ed9a:	d41f      	bmi.n	9000eddc <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000ed9c:	6963      	ldr	r3, [r4, #20]
9000ed9e:	b323      	cbz	r3, 9000edea <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000eda0:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000eda2:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000eda4:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000eda8:	68e7      	ldr	r7, [r4, #12]
9000edaa:	b305      	cbz	r5, 9000edee <osThreadNew+0x72>
9000edac:	2fab      	cmp	r7, #171	@ 0xab
9000edae:	d915      	bls.n	9000eddc <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000edb0:	6924      	ldr	r4, [r4, #16]
9000edb2:	b19c      	cbz	r4, 9000eddc <osThreadNew+0x60>
9000edb4:	b193      	cbz	r3, 9000eddc <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000edb6:	460b      	mov	r3, r1
9000edb8:	9600      	str	r6, [sp, #0]
9000edba:	4661      	mov	r1, ip
9000edbc:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000edc0:	f002 f814 	bl	90010dec <xTaskCreateStatic>
9000edc4:	e00b      	b.n	9000edde <osThreadNew+0x62>
9000edc6:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000edc8:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000edca:	460b      	mov	r3, r1
9000edcc:	4621      	mov	r1, r4
9000edce:	ac05      	add	r4, sp, #20
9000edd0:	9600      	str	r6, [sp, #0]
9000edd2:	9401      	str	r4, [sp, #4]
9000edd4:	f002 f844 	bl	90010e60 <xTaskCreate>
9000edd8:	2801      	cmp	r0, #1
9000edda:	d010      	beq.n	9000edfe <osThreadNew+0x82>
        return (NULL);
9000eddc:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000edde:	b007      	add	sp, #28
9000ede0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000ede2:	1e72      	subs	r2, r6, #1
9000ede4:	2a37      	cmp	r2, #55	@ 0x37
9000ede6:	d9d6      	bls.n	9000ed96 <osThreadNew+0x1a>
9000ede8:	e7f8      	b.n	9000eddc <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000edea:	2280      	movs	r2, #128	@ 0x80
9000edec:	e7d9      	b.n	9000eda2 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000edee:	2f00      	cmp	r7, #0
9000edf0:	d1f4      	bne.n	9000eddc <osThreadNew+0x60>
9000edf2:	6923      	ldr	r3, [r4, #16]
9000edf4:	2b00      	cmp	r3, #0
9000edf6:	d1f1      	bne.n	9000eddc <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000edf8:	b292      	uxth	r2, r2
9000edfa:	4664      	mov	r4, ip
9000edfc:	e7e5      	b.n	9000edca <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000edfe:	9805      	ldr	r0, [sp, #20]
9000ee00:	e7ed      	b.n	9000edde <osThreadNew+0x62>
9000ee02:	bf00      	nop

9000ee04 <osThreadGetState>:
  id = (osThreadId_t)xTaskGetCurrentTaskHandle();

  return (id);
}

osThreadState_t osThreadGetState (osThreadId_t thread_id) {
9000ee04:	b508      	push	{r3, lr}
9000ee06:	f3ef 8205 	mrs	r2, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osThreadState_t state;

  if (IS_IRQ() || (hTask == NULL)) {
9000ee0a:	b140      	cbz	r0, 9000ee1e <osThreadGetState+0x1a>
9000ee0c:	b93a      	cbnz	r2, 9000ee1e <osThreadGetState+0x1a>
    state = osThreadError;
  }
  else {
    switch (eTaskGetState (hTask)) {
9000ee0e:	f002 f933 	bl	90011078 <eTaskGetState>
9000ee12:	2804      	cmp	r0, #4
9000ee14:	d803      	bhi.n	9000ee1e <osThreadGetState+0x1a>
9000ee16:	4b03      	ldr	r3, [pc, #12]	@ (9000ee24 <osThreadGetState+0x20>)
9000ee18:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
      default:         state = osThreadError;      break;
    }
  }

  return (state);
}
9000ee1c:	bd08      	pop	{r3, pc}
    state = osThreadError;
9000ee1e:	f04f 30ff 	mov.w	r0, #4294967295
}
9000ee22:	bd08      	pop	{r3, pc}
9000ee24:	9002f3d0 	.word	0x9002f3d0

9000ee28 <osThreadExit>:
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
9000ee28:	2000      	movs	r0, #0
__NO_RETURN void osThreadExit (void) {
9000ee2a:	b508      	push	{r3, lr}
  vTaskDelete (NULL);
9000ee2c:	f002 f848 	bl	90010ec0 <vTaskDelete>
#endif
  for (;;);
9000ee30:	e7fe      	b.n	9000ee30 <osThreadExit+0x8>
9000ee32:	bf00      	nop

9000ee34 <osDelay>:
9000ee34:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000ee38:	b93a      	cbnz	r2, 9000ee4a <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000ee3a:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000ee3c:	b908      	cbnz	r0, 9000ee42 <osDelay+0xe>
    stat = osOK;
9000ee3e:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000ee40:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000ee42:	f002 f8c3 	bl	90010fcc <vTaskDelay>
    stat = osOK;
9000ee46:	2000      	movs	r0, #0
}
9000ee48:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000ee4a:	f06f 0005 	mvn.w	r0, #5
}
9000ee4e:	4770      	bx	lr

9000ee50 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000ee50:	b5f0      	push	{r4, r5, r6, r7, lr}
9000ee52:	b083      	sub	sp, #12
9000ee54:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000ee58:	b98e      	cbnz	r6, 9000ee7e <osSemaphoreNew+0x2e>
9000ee5a:	4605      	mov	r5, r0
9000ee5c:	b178      	cbz	r0, 9000ee7e <osSemaphoreNew+0x2e>
9000ee5e:	4288      	cmp	r0, r1
9000ee60:	460f      	mov	r7, r1
9000ee62:	d30c      	bcc.n	9000ee7e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000ee64:	4614      	mov	r4, r2
9000ee66:	b172      	cbz	r2, 9000ee86 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ee68:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000ee6c:	b14a      	cbz	r2, 9000ee82 <osSemaphoreNew+0x32>
9000ee6e:	2b4f      	cmp	r3, #79	@ 0x4f
9000ee70:	d905      	bls.n	9000ee7e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000ee72:	2801      	cmp	r0, #1
9000ee74:	d02e      	beq.n	9000eed4 <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000ee76:	f000 fdbd 	bl	9000f9f4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000ee7a:	4605      	mov	r5, r0
9000ee7c:	b96d      	cbnz	r5, 9000ee9a <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000ee7e:	2500      	movs	r5, #0
9000ee80:	e010      	b.n	9000eea4 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000ee82:	2b00      	cmp	r3, #0
9000ee84:	d1fb      	bne.n	9000ee7e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000ee86:	2d01      	cmp	r5, #1
9000ee88:	d00f      	beq.n	9000eeaa <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000ee8a:	4628      	mov	r0, r5
9000ee8c:	4639      	mov	r1, r7
9000ee8e:	f000 fe11 	bl	9000fab4 <xQueueCreateCountingSemaphore>
9000ee92:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000ee94:	2d00      	cmp	r5, #0
9000ee96:	d0f2      	beq.n	9000ee7e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000ee98:	b104      	cbz	r4, 9000ee9c <osSemaphoreNew+0x4c>
          name = attr->name;
9000ee9a:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000ee9c:	4621      	mov	r1, r4
9000ee9e:	4628      	mov	r0, r5
9000eea0:	f001 fc3c 	bl	9001071c <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000eea4:	4628      	mov	r0, r5
9000eea6:	b003      	add	sp, #12
9000eea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000eeaa:	4628      	mov	r0, r5
9000eeac:	2203      	movs	r2, #3
9000eeae:	2100      	movs	r1, #0
9000eeb0:	f000 fd5e 	bl	9000f970 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000eeb4:	4605      	mov	r5, r0
9000eeb6:	2800      	cmp	r0, #0
9000eeb8:	d0ec      	beq.n	9000ee94 <osSemaphoreNew+0x44>
9000eeba:	2f00      	cmp	r7, #0
9000eebc:	d0ea      	beq.n	9000ee94 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000eebe:	2300      	movs	r3, #0
9000eec0:	461a      	mov	r2, r3
9000eec2:	4619      	mov	r1, r3
9000eec4:	f000 fe3c 	bl	9000fb40 <xQueueGenericSend>
9000eec8:	2801      	cmp	r0, #1
9000eeca:	d0e5      	beq.n	9000ee98 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000eecc:	4628      	mov	r0, r5
9000eece:	f001 fbdf 	bl	90010690 <vQueueDelete>
      if (hSemaphore != NULL) {
9000eed2:	e7d4      	b.n	9000ee7e <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000eed4:	4613      	mov	r3, r2
9000eed6:	2203      	movs	r2, #3
9000eed8:	4631      	mov	r1, r6
9000eeda:	9200      	str	r2, [sp, #0]
9000eedc:	4632      	mov	r2, r6
9000eede:	f000 fcdb 	bl	9000f898 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000eee2:	4605      	mov	r5, r0
9000eee4:	2800      	cmp	r0, #0
9000eee6:	d0c9      	beq.n	9000ee7c <osSemaphoreNew+0x2c>
9000eee8:	2f00      	cmp	r7, #0
9000eeea:	d0c7      	beq.n	9000ee7c <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000eeec:	4633      	mov	r3, r6
9000eeee:	4632      	mov	r2, r6
9000eef0:	4631      	mov	r1, r6
9000eef2:	f000 fe25 	bl	9000fb40 <xQueueGenericSend>
9000eef6:	2801      	cmp	r0, #1
9000eef8:	d0cf      	beq.n	9000ee9a <osSemaphoreNew+0x4a>
9000eefa:	e7e7      	b.n	9000eecc <osSemaphoreNew+0x7c>

9000eefc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000eefc:	b360      	cbz	r0, 9000ef58 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000eefe:	b510      	push	{r4, lr}
9000ef00:	460c      	mov	r4, r1
9000ef02:	b082      	sub	sp, #8
9000ef04:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000ef08:	b1b3      	cbz	r3, 9000ef38 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000ef0a:	bb11      	cbnz	r1, 9000ef52 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000ef0c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000ef0e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000ef10:	f001 fb62 	bl	900105d8 <xQueueReceiveFromISR>
9000ef14:	2801      	cmp	r0, #1
9000ef16:	d118      	bne.n	9000ef4a <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000ef18:	9b01      	ldr	r3, [sp, #4]
9000ef1a:	b913      	cbnz	r3, 9000ef22 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000ef1c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000ef1e:	b002      	add	sp, #8
9000ef20:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000ef22:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ef26:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ef2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ef2e:	f3bf 8f4f 	dsb	sy
9000ef32:	f3bf 8f6f 	isb	sy
9000ef36:	e7f1      	b.n	9000ef1c <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000ef38:	f001 f9be 	bl	900102b8 <xQueueSemaphoreTake>
9000ef3c:	2801      	cmp	r0, #1
9000ef3e:	d0ed      	beq.n	9000ef1c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000ef40:	b11c      	cbz	r4, 9000ef4a <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000ef42:	f06f 0001 	mvn.w	r0, #1
}
9000ef46:	b002      	add	sp, #8
9000ef48:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000ef4a:	f06f 0002 	mvn.w	r0, #2
}
9000ef4e:	b002      	add	sp, #8
9000ef50:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000ef52:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000ef56:	e7e2      	b.n	9000ef1e <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000ef58:	f06f 0003 	mvn.w	r0, #3
}
9000ef5c:	4770      	bx	lr
9000ef5e:	bf00      	nop

9000ef60 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000ef60:	b328      	cbz	r0, 9000efae <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000ef62:	b500      	push	{lr}
9000ef64:	b083      	sub	sp, #12
9000ef66:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000ef6a:	b19b      	cbz	r3, 9000ef94 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000ef6c:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000ef6e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000ef70:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000ef72:	f000 ffcd 	bl	9000ff10 <xQueueGiveFromISR>
9000ef76:	2801      	cmp	r0, #1
9000ef78:	d116      	bne.n	9000efa8 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000ef7a:	9b01      	ldr	r3, [sp, #4]
9000ef7c:	b183      	cbz	r3, 9000efa0 <osSemaphoreRelease+0x40>
9000ef7e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ef82:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ef86:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ef8a:	f3bf 8f4f 	dsb	sy
9000ef8e:	f3bf 8f6f 	isb	sy
9000ef92:	e005      	b.n	9000efa0 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000ef94:	461a      	mov	r2, r3
9000ef96:	4619      	mov	r1, r3
9000ef98:	f000 fdd2 	bl	9000fb40 <xQueueGenericSend>
9000ef9c:	2801      	cmp	r0, #1
9000ef9e:	d103      	bne.n	9000efa8 <osSemaphoreRelease+0x48>
  stat = osOK;
9000efa0:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000efa2:	b003      	add	sp, #12
9000efa4:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000efa8:	f06f 0002 	mvn.w	r0, #2
9000efac:	e7f9      	b.n	9000efa2 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000efae:	f06f 0003 	mvn.w	r0, #3
}
9000efb2:	4770      	bx	lr

9000efb4 <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
9000efb4:	b538      	push	{r3, r4, r5, lr}
9000efb6:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
9000efba:	b944      	cbnz	r4, 9000efce <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
9000efbc:	4605      	mov	r5, r0
9000efbe:	b148      	cbz	r0, 9000efd4 <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
9000efc0:	f001 fbd4 	bl	9001076c <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
9000efc4:	4628      	mov	r0, r5
9000efc6:	f001 fb63 	bl	90010690 <vQueueDelete>
    stat = osOK;
9000efca:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
9000efcc:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
9000efce:	f06f 0005 	mvn.w	r0, #5
}
9000efd2:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorParameter;
9000efd4:	f06f 0003 	mvn.w	r0, #3
}
9000efd8:	bd38      	pop	{r3, r4, r5, pc}
9000efda:	bf00      	nop

9000efdc <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000efdc:	b5f0      	push	{r4, r5, r6, r7, lr}
9000efde:	b083      	sub	sp, #12
9000efe0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000efe4:	b987      	cbnz	r7, 9000f008 <osMessageQueueNew+0x2c>
9000efe6:	4605      	mov	r5, r0
9000efe8:	b170      	cbz	r0, 9000f008 <osMessageQueueNew+0x2c>
9000efea:	b169      	cbz	r1, 9000f008 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000efec:	4614      	mov	r4, r2
9000efee:	b17a      	cbz	r2, 9000f010 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000eff0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000eff4:	b1c3      	cbz	r3, 9000f028 <osMessageQueueNew+0x4c>
9000eff6:	2a4f      	cmp	r2, #79	@ 0x4f
9000eff8:	d906      	bls.n	9000f008 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000effa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000effc:	b122      	cbz	r2, 9000f008 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000effe:	fb01 f505 	mul.w	r5, r1, r5
9000f002:	6966      	ldr	r6, [r4, #20]
9000f004:	42ae      	cmp	r6, r5
9000f006:	d21e      	bcs.n	9000f046 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000f008:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000f00a:	4628      	mov	r0, r5
9000f00c:	b003      	add	sp, #12
9000f00e:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000f010:	f000 fcae 	bl	9000f970 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f014:	4605      	mov	r5, r0
9000f016:	2800      	cmp	r0, #0
9000f018:	d0f6      	beq.n	9000f008 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000f01a:	4628      	mov	r0, r5
9000f01c:	4621      	mov	r1, r4
9000f01e:	f001 fb7d 	bl	9001071c <vQueueAddToRegistry>
}
9000f022:	4628      	mov	r0, r5
9000f024:	b003      	add	sp, #12
9000f026:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000f028:	2a00      	cmp	r2, #0
9000f02a:	d1ed      	bne.n	9000f008 <osMessageQueueNew+0x2c>
9000f02c:	6923      	ldr	r3, [r4, #16]
9000f02e:	2b00      	cmp	r3, #0
9000f030:	d1ea      	bne.n	9000f008 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000f032:	6962      	ldr	r2, [r4, #20]
9000f034:	2a00      	cmp	r2, #0
9000f036:	d1e7      	bne.n	9000f008 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000f038:	f000 fc9a 	bl	9000f970 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f03c:	4605      	mov	r5, r0
9000f03e:	2800      	cmp	r0, #0
9000f040:	d0e2      	beq.n	9000f008 <osMessageQueueNew+0x2c>
        name = attr->name;
9000f042:	6824      	ldr	r4, [r4, #0]
9000f044:	e7e9      	b.n	9000f01a <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000f046:	9700      	str	r7, [sp, #0]
9000f048:	f000 fc26 	bl	9000f898 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000f04c:	4605      	mov	r5, r0
9000f04e:	2800      	cmp	r0, #0
9000f050:	d1f7      	bne.n	9000f042 <osMessageQueueNew+0x66>
9000f052:	e7d9      	b.n	9000f008 <osMessageQueueNew+0x2c>

9000f054 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000f054:	b560      	push	{r5, r6, lr}
9000f056:	461e      	mov	r6, r3
9000f058:	b083      	sub	sp, #12
9000f05a:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f05e:	fab0 f580 	clz	r5, r0
9000f062:	fab1 f381 	clz	r3, r1
9000f066:	096d      	lsrs	r5, r5, #5
9000f068:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000f06a:	b1da      	cbz	r2, 9000f0a4 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f06c:	2e00      	cmp	r6, #0
9000f06e:	bf18      	it	ne
9000f070:	f043 0301 	orrne.w	r3, r3, #1
9000f074:	bb33      	cbnz	r3, 9000f0c4 <osMessageQueuePut+0x70>
9000f076:	bb2d      	cbnz	r5, 9000f0c4 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000f078:	462b      	mov	r3, r5
9000f07a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f07c:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000f07e:	f000 fee1 	bl	9000fe44 <xQueueGenericSendFromISR>
9000f082:	2801      	cmp	r0, #1
9000f084:	d11a      	bne.n	9000f0bc <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f086:	9b01      	ldr	r3, [sp, #4]
9000f088:	b14b      	cbz	r3, 9000f09e <osMessageQueuePut+0x4a>
9000f08a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f08e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f092:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f096:	f3bf 8f4f 	dsb	sy
9000f09a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000f09e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f0a0:	b003      	add	sp, #12
9000f0a2:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000f0a4:	b975      	cbnz	r5, 9000f0c4 <osMessageQueuePut+0x70>
9000f0a6:	b96b      	cbnz	r3, 9000f0c4 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000f0a8:	4632      	mov	r2, r6
9000f0aa:	f000 fd49 	bl	9000fb40 <xQueueGenericSend>
9000f0ae:	2801      	cmp	r0, #1
9000f0b0:	d0f5      	beq.n	9000f09e <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000f0b2:	b11e      	cbz	r6, 9000f0bc <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000f0b4:	f06f 0001 	mvn.w	r0, #1
}
9000f0b8:	b003      	add	sp, #12
9000f0ba:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000f0bc:	f06f 0002 	mvn.w	r0, #2
}
9000f0c0:	b003      	add	sp, #12
9000f0c2:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000f0c4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f0c8:	e7ea      	b.n	9000f0a0 <osMessageQueuePut+0x4c>
9000f0ca:	bf00      	nop

9000f0cc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000f0cc:	b570      	push	{r4, r5, r6, lr}
9000f0ce:	461e      	mov	r6, r3
9000f0d0:	b082      	sub	sp, #8
9000f0d2:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f0d6:	fab0 f580 	clz	r5, r0
9000f0da:	fab1 f481 	clz	r4, r1
9000f0de:	096d      	lsrs	r5, r5, #5
9000f0e0:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000f0e2:	b1d3      	cbz	r3, 9000f11a <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f0e4:	2e00      	cmp	r6, #0
9000f0e6:	bf18      	it	ne
9000f0e8:	f044 0401 	orrne.w	r4, r4, #1
9000f0ec:	bb2c      	cbnz	r4, 9000f13a <osMessageQueueGet+0x6e>
9000f0ee:	bb25      	cbnz	r5, 9000f13a <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000f0f0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f0f2:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000f0f4:	f001 fa70 	bl	900105d8 <xQueueReceiveFromISR>
9000f0f8:	2801      	cmp	r0, #1
9000f0fa:	d11a      	bne.n	9000f132 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f0fc:	9b01      	ldr	r3, [sp, #4]
9000f0fe:	b14b      	cbz	r3, 9000f114 <osMessageQueueGet+0x48>
9000f100:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f104:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f108:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f10c:	f3bf 8f4f 	dsb	sy
9000f110:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000f114:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f116:	b002      	add	sp, #8
9000f118:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000f11a:	b975      	cbnz	r5, 9000f13a <osMessageQueueGet+0x6e>
9000f11c:	b96c      	cbnz	r4, 9000f13a <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000f11e:	4632      	mov	r2, r6
9000f120:	f000 ff4c 	bl	9000ffbc <xQueueReceive>
9000f124:	2801      	cmp	r0, #1
9000f126:	d0f5      	beq.n	9000f114 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000f128:	b11e      	cbz	r6, 9000f132 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000f12a:	f06f 0001 	mvn.w	r0, #1
}
9000f12e:	b002      	add	sp, #8
9000f130:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000f132:	f06f 0002 	mvn.w	r0, #2
}
9000f136:	b002      	add	sp, #8
9000f138:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000f13a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f13e:	e7ea      	b.n	9000f116 <osMessageQueueGet+0x4a>

9000f140 <osMessageQueueDelete>:
  }

  return (stat);
}

osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {
9000f140:	b538      	push	{r3, r4, r5, lr}
9000f142:	f3ef 8405 	mrs	r4, IPSR
9000f146:	b944      	cbnz	r4, 9000f15a <osMessageQueueDelete+0x1a>
9000f148:	4605      	mov	r5, r0
9000f14a:	b148      	cbz	r0, 9000f160 <osMessageQueueDelete+0x20>
9000f14c:	f001 fb0e 	bl	9001076c <vQueueUnregisterQueue>
9000f150:	4628      	mov	r0, r5
9000f152:	f001 fa9d 	bl	90010690 <vQueueDelete>
9000f156:	4620      	mov	r0, r4
9000f158:	bd38      	pop	{r3, r4, r5, pc}
9000f15a:	f06f 0005 	mvn.w	r0, #5
9000f15e:	bd38      	pop	{r3, r4, r5, pc}
9000f160:	f06f 0003 	mvn.w	r0, #3
9000f164:	bd38      	pop	{r3, r4, r5, pc}
9000f166:	bf00      	nop

9000f168 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000f168:	4b04      	ldr	r3, [pc, #16]	@ (9000f17c <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000f16a:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000f16c:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000f16e:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000f170:	4c03      	ldr	r4, [pc, #12]	@ (9000f180 <vApplicationGetIdleTaskMemory+0x18>)
9000f172:	600c      	str	r4, [r1, #0]
}
9000f174:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000f178:	6013      	str	r3, [r2, #0]
}
9000f17a:	4770      	bx	lr
9000f17c:	24008ae0 	.word	0x24008ae0
9000f180:	240088e0 	.word	0x240088e0

9000f184 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000f184:	4b05      	ldr	r3, [pc, #20]	@ (9000f19c <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000f186:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000f188:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000f18a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000f18e:	4c04      	ldr	r4, [pc, #16]	@ (9000f1a0 <vApplicationGetTimerTaskMemory+0x1c>)
9000f190:	600c      	str	r4, [r1, #0]
}
9000f192:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000f196:	6013      	str	r3, [r2, #0]
}
9000f198:	4770      	bx	lr
9000f19a:	bf00      	nop
9000f19c:	24008834 	.word	0x24008834
9000f1a0:	24008434 	.word	0x24008434

9000f1a4 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000f1a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f1a8:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000f1aa:	f002 f829 	bl	90011200 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000f1ae:	4a54      	ldr	r2, [pc, #336]	@ (9000f300 <pvPortMalloc+0x15c>)
9000f1b0:	6815      	ldr	r5, [r2, #0]
9000f1b2:	2d00      	cmp	r5, #0
9000f1b4:	d035      	beq.n	9000f222 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000f1b6:	4b53      	ldr	r3, [pc, #332]	@ (9000f304 <pvPortMalloc+0x160>)
9000f1b8:	681e      	ldr	r6, [r3, #0]
9000f1ba:	4234      	tst	r4, r6
9000f1bc:	d12b      	bne.n	9000f216 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000f1be:	b354      	cbz	r4, 9000f216 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000f1c0:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000f1c4:	0764      	lsls	r4, r4, #29
9000f1c6:	d002      	beq.n	9000f1ce <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000f1c8:	f020 0007 	bic.w	r0, r0, #7
9000f1cc:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000f1ce:	b310      	cbz	r0, 9000f216 <pvPortMalloc+0x72>
9000f1d0:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000f318 <pvPortMalloc+0x174>
9000f1d4:	f8de c000 	ldr.w	ip, [lr]
9000f1d8:	4584      	cmp	ip, r0
9000f1da:	d31c      	bcc.n	9000f216 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000f1dc:	4c4a      	ldr	r4, [pc, #296]	@ (9000f308 <pvPortMalloc+0x164>)
9000f1de:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000f1e0:	e003      	b.n	9000f1ea <pvPortMalloc+0x46>
9000f1e2:	681a      	ldr	r2, [r3, #0]
9000f1e4:	b122      	cbz	r2, 9000f1f0 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000f1e6:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000f1e8:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000f1ea:	6859      	ldr	r1, [r3, #4]
9000f1ec:	4281      	cmp	r1, r0
9000f1ee:	d3f8      	bcc.n	9000f1e2 <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000f1f0:	42ab      	cmp	r3, r5
9000f1f2:	d010      	beq.n	9000f216 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000f1f4:	681a      	ldr	r2, [r3, #0]
9000f1f6:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000f1f8:	1a0c      	subs	r4, r1, r0
9000f1fa:	2c10      	cmp	r4, #16
9000f1fc:	d947      	bls.n	9000f28e <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000f1fe:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000f200:	0751      	lsls	r1, r2, #29
9000f202:	d02d      	beq.n	9000f260 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000f204:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f208:	f383 8811 	msr	BASEPRI, r3
9000f20c:	f3bf 8f6f 	isb	sy
9000f210:	f3bf 8f4f 	dsb	sy
9000f214:	e7fe      	b.n	9000f214 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000f216:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000f218:	f001 fffa 	bl	90011210 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000f21c:	4620      	mov	r0, r4
9000f21e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000f222:	4b3a      	ldr	r3, [pc, #232]	@ (9000f30c <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000f224:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000f228:	4e37      	ldr	r6, [pc, #220]	@ (9000f308 <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000f22a:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000f22c:	4d38      	ldr	r5, [pc, #224]	@ (9000f310 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000f22e:	bf18      	it	ne
9000f230:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000f232:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000f236:	bf18      	it	ne
9000f238:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000f23c:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000f23e:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000f240:	6033      	str	r3, [r6, #0]
9000f242:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000f244:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000f246:	1aeb      	subs	r3, r5, r3
}
9000f248:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000f24a:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f24e:	4a31      	ldr	r2, [pc, #196]	@ (9000f314 <pvPortMalloc+0x170>)
9000f250:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f252:	4a31      	ldr	r2, [pc, #196]	@ (9000f318 <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000f254:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000f258:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000f25a:	4b2a      	ldr	r3, [pc, #168]	@ (9000f304 <pvPortMalloc+0x160>)
9000f25c:	6018      	str	r0, [r3, #0]
}
9000f25e:	e7ac      	b.n	9000f1ba <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f260:	4929      	ldr	r1, [pc, #164]	@ (9000f308 <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000f262:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000f264:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f266:	460c      	mov	r4, r1
9000f268:	6809      	ldr	r1, [r1, #0]
9000f26a:	428a      	cmp	r2, r1
9000f26c:	d8fb      	bhi.n	9000f266 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f26e:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f270:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f274:	eb04 0907 	add.w	r9, r4, r7
9000f278:	454a      	cmp	r2, r9
9000f27a:	d028      	beq.n	9000f2ce <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f27c:	eb02 0708 	add.w	r7, r2, r8
9000f280:	42b9      	cmp	r1, r7
9000f282:	d02b      	beq.n	9000f2dc <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000f284:	6011      	str	r1, [r2, #0]
9000f286:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000f288:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000f28a:	bf18      	it	ne
9000f28c:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f28e:	4821      	ldr	r0, [pc, #132]	@ (9000f314 <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f290:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000f294:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000f296:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f298:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f29a:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000f29e:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000f2a0:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000f2a4:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000f2a6:	bf38      	it	cc
9000f2a8:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000f2aa:	481c      	ldr	r0, [pc, #112]	@ (9000f31c <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000f2ac:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000f2ae:	6802      	ldr	r2, [r0, #0]
9000f2b0:	3201      	adds	r2, #1
9000f2b2:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000f2b4:	f001 ffac 	bl	90011210 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000f2b8:	0763      	lsls	r3, r4, #29
9000f2ba:	d0af      	beq.n	9000f21c <pvPortMalloc+0x78>
9000f2bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f2c0:	f383 8811 	msr	BASEPRI, r3
9000f2c4:	f3bf 8f6f 	isb	sy
9000f2c8:	f3bf 8f4f 	dsb	sy
9000f2cc:	e7fe      	b.n	9000f2cc <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f2ce:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f2d0:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f2d2:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f2d4:	4281      	cmp	r1, r0
9000f2d6:	d00a      	beq.n	9000f2ee <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f2d8:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000f2da:	e7d8      	b.n	9000f28e <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f2dc:	42a9      	cmp	r1, r5
9000f2de:	d0d1      	beq.n	9000f284 <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2e0:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f2e2:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2e4:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f2e6:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2e8:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000f2ea:	6859      	ldr	r1, [r3, #4]
9000f2ec:	e7cc      	b.n	9000f288 <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f2ee:	42a9      	cmp	r1, r5
9000f2f0:	d0f2      	beq.n	9000f2d8 <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2f2:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f2f4:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2f6:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f2f8:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f2fa:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f2fc:	e7ec      	b.n	9000f2d8 <pvPortMalloc+0x134>
9000f2fe:	bf00      	nop
9000f300:	24008ba4 	.word	0x24008ba4
9000f304:	24008b90 	.word	0x24008b90
9000f308:	24008ba8 	.word	0x24008ba8
9000f30c:	24008bb0 	.word	0x24008bb0
9000f310:	24021248 	.word	0x24021248
9000f314:	24008b9c 	.word	0x24008b9c
9000f318:	24008ba0 	.word	0x24008ba0
9000f31c:	24008b98 	.word	0x24008b98

9000f320 <vPortFree>:
	if( pv != NULL )
9000f320:	b1d0      	cbz	r0, 9000f358 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000f322:	4a2f      	ldr	r2, [pc, #188]	@ (9000f3e0 <vPortFree+0xc0>)
9000f324:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000f328:	6812      	ldr	r2, [r2, #0]
9000f32a:	4213      	tst	r3, r2
9000f32c:	d00b      	beq.n	9000f346 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000f32e:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000f332:	b191      	cbz	r1, 9000f35a <vPortFree+0x3a>
9000f334:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f338:	f383 8811 	msr	BASEPRI, r3
9000f33c:	f3bf 8f6f 	isb	sy
9000f340:	f3bf 8f4f 	dsb	sy
9000f344:	e7fe      	b.n	9000f344 <vPortFree+0x24>
9000f346:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f34a:	f383 8811 	msr	BASEPRI, r3
9000f34e:	f3bf 8f6f 	isb	sy
9000f352:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000f356:	e7fe      	b.n	9000f356 <vPortFree+0x36>
9000f358:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f35a:	ea23 0302 	bic.w	r3, r3, r2
{
9000f35e:	b530      	push	{r4, r5, lr}
9000f360:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f362:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000f366:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000f36a:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000f36c:	f001 ff48 	bl	90011200 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000f370:	4a1c      	ldr	r2, [pc, #112]	@ (9000f3e4 <vPortFree+0xc4>)
9000f372:	9801      	ldr	r0, [sp, #4]
9000f374:	6813      	ldr	r3, [r2, #0]
9000f376:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000f37a:	440b      	add	r3, r1
9000f37c:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000f37e:	4b1a      	ldr	r3, [pc, #104]	@ (9000f3e8 <vPortFree+0xc8>)
9000f380:	461a      	mov	r2, r3
9000f382:	681b      	ldr	r3, [r3, #0]
9000f384:	429c      	cmp	r4, r3
9000f386:	d8fb      	bhi.n	9000f380 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000f388:	6855      	ldr	r5, [r2, #4]
9000f38a:	eb02 0e05 	add.w	lr, r2, r5
9000f38e:	4574      	cmp	r4, lr
9000f390:	d011      	beq.n	9000f3b6 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f392:	eb04 0c01 	add.w	ip, r4, r1
9000f396:	4563      	cmp	r3, ip
9000f398:	d01d      	beq.n	9000f3d6 <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000f39a:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000f39e:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000f3a0:	bf18      	it	ne
9000f3a2:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000f3a4:	4a11      	ldr	r2, [pc, #68]	@ (9000f3ec <vPortFree+0xcc>)
9000f3a6:	6813      	ldr	r3, [r2, #0]
9000f3a8:	3301      	adds	r3, #1
9000f3aa:	6013      	str	r3, [r2, #0]
}
9000f3ac:	b003      	add	sp, #12
9000f3ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000f3b2:	f001 bf2d 	b.w	90011210 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f3b6:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f3b8:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000f3ba:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000f3bc:	4283      	cmp	r3, r0
9000f3be:	d1f1      	bne.n	9000f3a4 <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f3c0:	480b      	ldr	r0, [pc, #44]	@ (9000f3f0 <vPortFree+0xd0>)
9000f3c2:	6800      	ldr	r0, [r0, #0]
9000f3c4:	4283      	cmp	r3, r0
9000f3c6:	d0ed      	beq.n	9000f3a4 <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000f3c8:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f3ca:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f3ce:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f3d0:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000f3d2:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000f3d4:	e7e3      	b.n	9000f39e <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000f3d6:	4d06      	ldr	r5, [pc, #24]	@ (9000f3f0 <vPortFree+0xd0>)
9000f3d8:	682d      	ldr	r5, [r5, #0]
9000f3da:	42ab      	cmp	r3, r5
9000f3dc:	d1f5      	bne.n	9000f3ca <vPortFree+0xaa>
9000f3de:	e7dc      	b.n	9000f39a <vPortFree+0x7a>
9000f3e0:	24008b90 	.word	0x24008b90
9000f3e4:	24008ba0 	.word	0x24008ba0
9000f3e8:	24008ba8 	.word	0x24008ba8
9000f3ec:	24008b94 	.word	0x24008b94
9000f3f0:	24008ba4 	.word	0x24008ba4

9000f3f4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f3f4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000f3f8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000f3fc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000f3fe:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000f400:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f402:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000f404:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000f408:	4770      	bx	lr
9000f40a:	bf00      	nop

9000f40c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000f40c:	2300      	movs	r3, #0
9000f40e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000f410:	4770      	bx	lr
9000f412:	bf00      	nop

9000f414 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000f414:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000f416:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000f418:	3301      	adds	r3, #1
{
9000f41a:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000f41c:	6894      	ldr	r4, [r2, #8]
9000f41e:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000f422:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000f424:	6091      	str	r1, [r2, #8]
}
9000f426:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000f42a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000f42c:	6003      	str	r3, [r0, #0]
}
9000f42e:	4770      	bx	lr

9000f430 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000f430:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000f432:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000f434:	1c6b      	adds	r3, r5, #1
9000f436:	d010      	beq.n	9000f45a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000f438:	f100 0308 	add.w	r3, r0, #8
9000f43c:	461c      	mov	r4, r3
9000f43e:	685b      	ldr	r3, [r3, #4]
9000f440:	681a      	ldr	r2, [r3, #0]
9000f442:	42aa      	cmp	r2, r5
9000f444:	d9fa      	bls.n	9000f43c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000f446:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000f448:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000f44a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000f44c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000f44e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000f450:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000f452:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000f454:	6002      	str	r2, [r0, #0]
}
9000f456:	bc30      	pop	{r4, r5}
9000f458:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000f45a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000f45c:	6863      	ldr	r3, [r4, #4]
9000f45e:	e7f2      	b.n	9000f446 <vListInsert+0x16>

9000f460 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000f460:	6903      	ldr	r3, [r0, #16]
{
9000f462:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000f464:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000f466:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000f46a:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000f46c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000f470:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000f472:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000f474:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000f478:	bf08      	it	eq
9000f47a:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000f47c:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000f47e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000f480:	3a01      	subs	r2, #1
9000f482:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000f484:	6818      	ldr	r0, [r3, #0]
}
9000f486:	4770      	bx	lr

9000f488 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000f488:	4808      	ldr	r0, [pc, #32]	@ (9000f4ac <prvPortStartFirstTask+0x24>)
9000f48a:	6800      	ldr	r0, [r0, #0]
9000f48c:	6800      	ldr	r0, [r0, #0]
9000f48e:	f380 8808 	msr	MSP, r0
9000f492:	f04f 0000 	mov.w	r0, #0
9000f496:	f380 8814 	msr	CONTROL, r0
9000f49a:	b662      	cpsie	i
9000f49c:	b661      	cpsie	f
9000f49e:	f3bf 8f4f 	dsb	sy
9000f4a2:	f3bf 8f6f 	isb	sy
9000f4a6:	df00      	svc	0
9000f4a8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000f4aa:	0000      	.short	0x0000
9000f4ac:	e000ed08 	.word	0xe000ed08

9000f4b0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000f4b0:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000f4c0 <vPortEnableVFP+0x10>
9000f4b4:	6801      	ldr	r1, [r0, #0]
9000f4b6:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000f4ba:	6001      	str	r1, [r0, #0]
9000f4bc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000f4be:	0000      	.short	0x0000
9000f4c0:	e000ed88 	.word	0xe000ed88

9000f4c4 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000f4c4:	4b0e      	ldr	r3, [pc, #56]	@ (9000f500 <prvTaskExitError+0x3c>)
{
9000f4c6:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000f4c8:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000f4ca:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000f4cc:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000f4ce:	3301      	adds	r3, #1
9000f4d0:	d008      	beq.n	9000f4e4 <prvTaskExitError+0x20>
9000f4d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4d6:	f383 8811 	msr	BASEPRI, r3
9000f4da:	f3bf 8f6f 	isb	sy
9000f4de:	f3bf 8f4f 	dsb	sy
9000f4e2:	e7fe      	b.n	9000f4e2 <prvTaskExitError+0x1e>
9000f4e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4e8:	f383 8811 	msr	BASEPRI, r3
9000f4ec:	f3bf 8f6f 	isb	sy
9000f4f0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000f4f4:	9b01      	ldr	r3, [sp, #4]
9000f4f6:	2b00      	cmp	r3, #0
9000f4f8:	d0fc      	beq.n	9000f4f4 <prvTaskExitError+0x30>
}
9000f4fa:	b002      	add	sp, #8
9000f4fc:	4770      	bx	lr
9000f4fe:	bf00      	nop
9000f500:	24000084 	.word	0x24000084

9000f504 <pxPortInitialiseStack>:
{
9000f504:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000f506:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000f50a:	4809      	ldr	r0, [pc, #36]	@ (9000f530 <pxPortInitialiseStack+0x2c>)
{
9000f50c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000f50e:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000f512:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000f516:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000f51a:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000f51e:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000f522:	f06f 0102 	mvn.w	r1, #2
}
9000f526:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000f52a:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000f52e:	4770      	bx	lr
9000f530:	9000f4c5 	.word	0x9000f4c5
	...

9000f540 <SVC_Handler>:
	__asm volatile (
9000f540:	4b07      	ldr	r3, [pc, #28]	@ (9000f560 <pxCurrentTCBConst2>)
9000f542:	6819      	ldr	r1, [r3, #0]
9000f544:	6808      	ldr	r0, [r1, #0]
9000f546:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f54a:	f380 8809 	msr	PSP, r0
9000f54e:	f3bf 8f6f 	isb	sy
9000f552:	f04f 0000 	mov.w	r0, #0
9000f556:	f380 8811 	msr	BASEPRI, r0
9000f55a:	4770      	bx	lr
9000f55c:	f3af 8000 	nop.w

9000f560 <pxCurrentTCBConst2>:
9000f560:	24021790 	.word	0x24021790

9000f564 <vPortEnterCritical>:
9000f564:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f568:	f383 8811 	msr	BASEPRI, r3
9000f56c:	f3bf 8f6f 	isb	sy
9000f570:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000f574:	4a0b      	ldr	r2, [pc, #44]	@ (9000f5a4 <vPortEnterCritical+0x40>)
9000f576:	6813      	ldr	r3, [r2, #0]
9000f578:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000f57a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000f57c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000f57e:	d000      	beq.n	9000f582 <vPortEnterCritical+0x1e>
}
9000f580:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000f582:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f586:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000f58a:	b2db      	uxtb	r3, r3
9000f58c:	2b00      	cmp	r3, #0
9000f58e:	d0f7      	beq.n	9000f580 <vPortEnterCritical+0x1c>
9000f590:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f594:	f383 8811 	msr	BASEPRI, r3
9000f598:	f3bf 8f6f 	isb	sy
9000f59c:	f3bf 8f4f 	dsb	sy
9000f5a0:	e7fe      	b.n	9000f5a0 <vPortEnterCritical+0x3c>
9000f5a2:	bf00      	nop
9000f5a4:	24000084 	.word	0x24000084

9000f5a8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000f5a8:	4a08      	ldr	r2, [pc, #32]	@ (9000f5cc <vPortExitCritical+0x24>)
9000f5aa:	6813      	ldr	r3, [r2, #0]
9000f5ac:	b943      	cbnz	r3, 9000f5c0 <vPortExitCritical+0x18>
9000f5ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f5b2:	f383 8811 	msr	BASEPRI, r3
9000f5b6:	f3bf 8f6f 	isb	sy
9000f5ba:	f3bf 8f4f 	dsb	sy
9000f5be:	e7fe      	b.n	9000f5be <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000f5c0:	3b01      	subs	r3, #1
9000f5c2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000f5c4:	b90b      	cbnz	r3, 9000f5ca <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000f5c6:	f383 8811 	msr	BASEPRI, r3
}
9000f5ca:	4770      	bx	lr
9000f5cc:	24000084 	.word	0x24000084

9000f5d0 <PendSV_Handler>:
	__asm volatile
9000f5d0:	f3ef 8009 	mrs	r0, PSP
9000f5d4:	f3bf 8f6f 	isb	sy
9000f5d8:	4b15      	ldr	r3, [pc, #84]	@ (9000f630 <pxCurrentTCBConst>)
9000f5da:	681a      	ldr	r2, [r3, #0]
9000f5dc:	f01e 0f10 	tst.w	lr, #16
9000f5e0:	bf08      	it	eq
9000f5e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000f5e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f5ea:	6010      	str	r0, [r2, #0]
9000f5ec:	e92d 0009 	stmdb	sp!, {r0, r3}
9000f5f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000f5f4:	f380 8811 	msr	BASEPRI, r0
9000f5f8:	f3bf 8f4f 	dsb	sy
9000f5fc:	f3bf 8f6f 	isb	sy
9000f600:	f001 fe42 	bl	90011288 <vTaskSwitchContext>
9000f604:	f04f 0000 	mov.w	r0, #0
9000f608:	f380 8811 	msr	BASEPRI, r0
9000f60c:	bc09      	pop	{r0, r3}
9000f60e:	6819      	ldr	r1, [r3, #0]
9000f610:	6808      	ldr	r0, [r1, #0]
9000f612:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f616:	f01e 0f10 	tst.w	lr, #16
9000f61a:	bf08      	it	eq
9000f61c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000f620:	f380 8809 	msr	PSP, r0
9000f624:	f3bf 8f6f 	isb	sy
9000f628:	4770      	bx	lr
9000f62a:	bf00      	nop
9000f62c:	f3af 8000 	nop.w

9000f630 <pxCurrentTCBConst>:
9000f630:	24021790 	.word	0x24021790

9000f634 <xPortSysTickHandler>:
{
9000f634:	b508      	push	{r3, lr}
	__asm volatile
9000f636:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f63a:	f383 8811 	msr	BASEPRI, r3
9000f63e:	f3bf 8f6f 	isb	sy
9000f642:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000f646:	f001 fdf9 	bl	9001123c <xTaskIncrementTick>
9000f64a:	b128      	cbz	r0, 9000f658 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000f64c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f650:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f654:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000f658:	2300      	movs	r3, #0
9000f65a:	f383 8811 	msr	BASEPRI, r3
}
9000f65e:	bd08      	pop	{r3, pc}

9000f660 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000f660:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000f664:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f666:	4806      	ldr	r0, [pc, #24]	@ (9000f680 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000f668:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f66a:	4906      	ldr	r1, [pc, #24]	@ (9000f684 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000f66c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f66e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000f670:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000f672:	fba1 1303 	umull	r1, r3, r1, r3
9000f676:	099b      	lsrs	r3, r3, #6
9000f678:	3b01      	subs	r3, #1
9000f67a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000f67c:	6110      	str	r0, [r2, #16]
}
9000f67e:	4770      	bx	lr
9000f680:	24000078 	.word	0x24000078
9000f684:	10624dd3 	.word	0x10624dd3

9000f688 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000f688:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f68c:	4a48      	ldr	r2, [pc, #288]	@ (9000f7b0 <xPortStartScheduler+0x128>)
9000f68e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000f692:	4291      	cmp	r1, r2
9000f694:	d041      	beq.n	9000f71a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000f696:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000f69a:	4b46      	ldr	r3, [pc, #280]	@ (9000f7b4 <xPortStartScheduler+0x12c>)
9000f69c:	429a      	cmp	r2, r3
9000f69e:	d033      	beq.n	9000f708 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f6a0:	4b45      	ldr	r3, [pc, #276]	@ (9000f7b8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000f6a2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f6a6:	4845      	ldr	r0, [pc, #276]	@ (9000f7bc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f6a8:	4945      	ldr	r1, [pc, #276]	@ (9000f7c0 <xPortStartScheduler+0x138>)
{
9000f6aa:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f6ac:	781a      	ldrb	r2, [r3, #0]
{
9000f6ae:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000f6b0:	b2d2      	uxtb	r2, r2
9000f6b2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f6b4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000f6b6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000f6ba:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000f6bc:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000f6be:	b2db      	uxtb	r3, r3
9000f6c0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f6c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f6c8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f6cc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f6d0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000f6d2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f6d4:	d50f      	bpl.n	9000f6f6 <xPortStartScheduler+0x6e>
9000f6d6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000f6d8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000f6dc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f6de:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000f6e0:	005b      	lsls	r3, r3, #1
9000f6e2:	b2db      	uxtb	r3, r3
9000f6e4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000f6e8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000f6ec:	061b      	lsls	r3, r3, #24
9000f6ee:	d4f3      	bmi.n	9000f6d8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000f6f0:	2903      	cmp	r1, #3
9000f6f2:	d01b      	beq.n	9000f72c <xPortStartScheduler+0xa4>
9000f6f4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000f6f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6fa:	f383 8811 	msr	BASEPRI, r3
9000f6fe:	f3bf 8f6f 	isb	sy
9000f702:	f3bf 8f4f 	dsb	sy
9000f706:	e7fe      	b.n	9000f706 <xPortStartScheduler+0x7e>
9000f708:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f70c:	f383 8811 	msr	BASEPRI, r3
9000f710:	f3bf 8f6f 	isb	sy
9000f714:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000f718:	e7fe      	b.n	9000f718 <xPortStartScheduler+0x90>
9000f71a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f71e:	f383 8811 	msr	BASEPRI, r3
9000f722:	f3bf 8f6f 	isb	sy
9000f726:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000f72a:	e7fe      	b.n	9000f72a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000f72c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000f72e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000f732:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000f736:	4a20      	ldr	r2, [pc, #128]	@ (9000f7b8 <xPortStartScheduler+0x130>)
9000f738:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000f73a:	4e22      	ldr	r6, [pc, #136]	@ (9000f7c4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000f73c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000f73e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000f740:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000f742:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000f746:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000f74a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000f74e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000f752:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000f756:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000f75a:	f7ff ff81 	bl	9000f660 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000f75e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000f760:	f7ff fea6 	bl	9000f4b0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000f764:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000f768:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000f76c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000f770:	f7ff fe8a 	bl	9000f488 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000f774:	f001 fd88 	bl	90011288 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000f778:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000f77a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000f77c:	3301      	adds	r3, #1
9000f77e:	d008      	beq.n	9000f792 <xPortStartScheduler+0x10a>
9000f780:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f784:	f383 8811 	msr	BASEPRI, r3
9000f788:	f3bf 8f6f 	isb	sy
9000f78c:	f3bf 8f4f 	dsb	sy
9000f790:	e7fe      	b.n	9000f790 <xPortStartScheduler+0x108>
9000f792:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f796:	f383 8811 	msr	BASEPRI, r3
9000f79a:	f3bf 8f6f 	isb	sy
9000f79e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000f7a2:	9b03      	ldr	r3, [sp, #12]
9000f7a4:	2b00      	cmp	r3, #0
9000f7a6:	d0fc      	beq.n	9000f7a2 <xPortStartScheduler+0x11a>
}
9000f7a8:	2000      	movs	r0, #0
9000f7aa:	b004      	add	sp, #16
9000f7ac:	bd70      	pop	{r4, r5, r6, pc}
9000f7ae:	bf00      	nop
9000f7b0:	410fc271 	.word	0x410fc271
9000f7b4:	410fc270 	.word	0x410fc270
9000f7b8:	e000e400 	.word	0xe000e400
9000f7bc:	24021250 	.word	0x24021250
9000f7c0:	24021254 	.word	0x24021254
9000f7c4:	24000084 	.word	0x24000084

9000f7c8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000f7c8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000f7cc:	2b0f      	cmp	r3, #15
9000f7ce:	d90e      	bls.n	9000f7ee <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000f7d0:	4911      	ldr	r1, [pc, #68]	@ (9000f818 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000f7d2:	4a12      	ldr	r2, [pc, #72]	@ (9000f81c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000f7d4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000f7d6:	7812      	ldrb	r2, [r2, #0]
9000f7d8:	429a      	cmp	r2, r3
9000f7da:	d908      	bls.n	9000f7ee <vPortValidateInterruptPriority+0x26>
9000f7dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7e0:	f383 8811 	msr	BASEPRI, r3
9000f7e4:	f3bf 8f6f 	isb	sy
9000f7e8:	f3bf 8f4f 	dsb	sy
9000f7ec:	e7fe      	b.n	9000f7ec <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000f7ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f7f2:	4a0b      	ldr	r2, [pc, #44]	@ (9000f820 <vPortValidateInterruptPriority+0x58>)
9000f7f4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000f7f8:	6812      	ldr	r2, [r2, #0]
9000f7fa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000f7fe:	4293      	cmp	r3, r2
9000f800:	d908      	bls.n	9000f814 <vPortValidateInterruptPriority+0x4c>
9000f802:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f806:	f383 8811 	msr	BASEPRI, r3
9000f80a:	f3bf 8f6f 	isb	sy
9000f80e:	f3bf 8f4f 	dsb	sy
9000f812:	e7fe      	b.n	9000f812 <vPortValidateInterruptPriority+0x4a>
	}
9000f814:	4770      	bx	lr
9000f816:	bf00      	nop
9000f818:	e000e3f0 	.word	0xe000e3f0
9000f81c:	24021254 	.word	0x24021254
9000f820:	24021250 	.word	0x24021250

9000f824 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000f824:	b570      	push	{r4, r5, r6, lr}
9000f826:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000f828:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000f82a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f82c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000f82e:	b92a      	cbnz	r2, 9000f83c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f830:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f832:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f834:	b32e      	cbz	r6, 9000f882 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000f836:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f838:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000f83a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000f83c:	b97e      	cbnz	r6, 9000f85e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f83e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f840:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f842:	f01c fa88 	bl	9002bd56 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f846:	6863      	ldr	r3, [r4, #4]
9000f848:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f84a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f84c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f84e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f850:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000f852:	bf24      	itt	cs
9000f854:	6823      	ldrcs	r3, [r4, #0]
9000f856:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000f858:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f85a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000f85c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000f85e:	68c0      	ldr	r0, [r0, #12]
9000f860:	f01c fa79 	bl	9002bd56 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000f864:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000f866:	68e3      	ldr	r3, [r4, #12]
9000f868:	4251      	negs	r1, r2
9000f86a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f86c:	6822      	ldr	r2, [r4, #0]
9000f86e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000f870:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000f872:	d202      	bcs.n	9000f87a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000f874:	68a3      	ldr	r3, [r4, #8]
9000f876:	440b      	add	r3, r1
9000f878:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000f87a:	2e02      	cmp	r6, #2
9000f87c:	d006      	beq.n	9000f88c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f87e:	3501      	adds	r5, #1
9000f880:	e7ea      	b.n	9000f858 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f882:	6880      	ldr	r0, [r0, #8]
9000f884:	f001 fed6 	bl	90011634 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000f888:	60a6      	str	r6, [r4, #8]
9000f88a:	e7d5      	b.n	9000f838 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f88c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000f88e:	f04f 0000 	mov.w	r0, #0
9000f892:	bf38      	it	cc
9000f894:	2501      	movcc	r5, #1
9000f896:	e7cf      	b.n	9000f838 <prvCopyDataToQueue+0x14>

9000f898 <xQueueGenericCreateStatic>:
	{
9000f898:	b530      	push	{r4, r5, lr}
9000f89a:	b083      	sub	sp, #12
9000f89c:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000f8a0:	b940      	cbnz	r0, 9000f8b4 <xQueueGenericCreateStatic+0x1c>
9000f8a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8a6:	f383 8811 	msr	BASEPRI, r3
9000f8aa:	f3bf 8f6f 	isb	sy
9000f8ae:	f3bf 8f4f 	dsb	sy
9000f8b2:	e7fe      	b.n	9000f8b2 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000f8b4:	461c      	mov	r4, r3
9000f8b6:	b153      	cbz	r3, 9000f8ce <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000f8b8:	b30a      	cbz	r2, 9000f8fe <xQueueGenericCreateStatic+0x66>
9000f8ba:	b989      	cbnz	r1, 9000f8e0 <xQueueGenericCreateStatic+0x48>
9000f8bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8c0:	f383 8811 	msr	BASEPRI, r3
9000f8c4:	f3bf 8f6f 	isb	sy
9000f8c8:	f3bf 8f4f 	dsb	sy
9000f8cc:	e7fe      	b.n	9000f8cc <xQueueGenericCreateStatic+0x34>
9000f8ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8d2:	f383 8811 	msr	BASEPRI, r3
9000f8d6:	f3bf 8f6f 	isb	sy
9000f8da:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f8de:	e7fe      	b.n	9000f8de <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000f8e0:	b16a      	cbz	r2, 9000f8fe <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f8e2:	2350      	movs	r3, #80	@ 0x50
9000f8e4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000f8e6:	9b01      	ldr	r3, [sp, #4]
9000f8e8:	2b50      	cmp	r3, #80	@ 0x50
9000f8ea:	d013      	beq.n	9000f914 <xQueueGenericCreateStatic+0x7c>
9000f8ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8f0:	f383 8811 	msr	BASEPRI, r3
9000f8f4:	f3bf 8f6f 	isb	sy
9000f8f8:	f3bf 8f4f 	dsb	sy
9000f8fc:	e7fe      	b.n	9000f8fc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000f8fe:	2900      	cmp	r1, #0
9000f900:	d0ef      	beq.n	9000f8e2 <xQueueGenericCreateStatic+0x4a>
9000f902:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f906:	f383 8811 	msr	BASEPRI, r3
9000f90a:	f3bf 8f6f 	isb	sy
9000f90e:	f3bf 8f4f 	dsb	sy
9000f912:	e7fe      	b.n	9000f912 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f914:	2900      	cmp	r1, #0
9000f916:	bf08      	it	eq
9000f918:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f91a:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f91c:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000f91e:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000f920:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000f922:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f924:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000f928:	f7ff fe1c 	bl	9000f564 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f92c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f92e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f932:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f934:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000f938:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f93c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f93e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f940:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f942:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f944:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000f946:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f948:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f94a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000f94c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f950:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f954:	f7ff fd4e 	bl	9000f3f4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f958:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f95c:	f7ff fd4a 	bl	9000f3f4 <vListInitialise>
	taskEXIT_CRITICAL();
9000f960:	f7ff fe22 	bl	9000f5a8 <vPortExitCritical>
	}
9000f964:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f966:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000f96a:	b003      	add	sp, #12
9000f96c:	bd30      	pop	{r4, r5, pc}
9000f96e:	bf00      	nop

9000f970 <xQueueGenericCreate>:
	{
9000f970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000f972:	b940      	cbnz	r0, 9000f986 <xQueueGenericCreate+0x16>
9000f974:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f978:	f383 8811 	msr	BASEPRI, r3
9000f97c:	f3bf 8f6f 	isb	sy
9000f980:	f3bf 8f4f 	dsb	sy
9000f984:	e7fe      	b.n	9000f984 <xQueueGenericCreate+0x14>
9000f986:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f988:	fb01 f000 	mul.w	r0, r1, r0
9000f98c:	460e      	mov	r6, r1
9000f98e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f990:	3050      	adds	r0, #80	@ 0x50
9000f992:	f7ff fc07 	bl	9000f1a4 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f996:	4604      	mov	r4, r0
9000f998:	b340      	cbz	r0, 9000f9ec <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f99a:	2300      	movs	r3, #0
9000f99c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000f9a0:	b336      	cbz	r6, 9000f9f0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9a2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000f9a6:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000f9a8:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000f9ac:	f7ff fdda 	bl	9000f564 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9b0:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f9b2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f9b6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9b8:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000f9bc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9c0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9c2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9c4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9c6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f9c8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000f9ca:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f9cc:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f9ce:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000f9d0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f9d4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f9d8:	f7ff fd0c 	bl	9000f3f4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f9dc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f9e0:	f7ff fd08 	bl	9000f3f4 <vListInitialise>
	taskEXIT_CRITICAL();
9000f9e4:	f7ff fde0 	bl	9000f5a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f9e8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000f9ec:	4620      	mov	r0, r4
9000f9ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f9f0:	4603      	mov	r3, r0
9000f9f2:	e7d8      	b.n	9000f9a6 <xQueueGenericCreate+0x36>

9000f9f4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000f9f4:	b940      	cbnz	r0, 9000fa08 <xQueueCreateCountingSemaphoreStatic+0x14>
9000f9f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9fa:	f383 8811 	msr	BASEPRI, r3
9000f9fe:	f3bf 8f6f 	isb	sy
9000fa02:	f3bf 8f4f 	dsb	sy
9000fa06:	e7fe      	b.n	9000fa06 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000fa08:	4288      	cmp	r0, r1
9000fa0a:	d208      	bcs.n	9000fa1e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000fa0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa10:	f383 8811 	msr	BASEPRI, r3
9000fa14:	f3bf 8f6f 	isb	sy
9000fa18:	f3bf 8f4f 	dsb	sy
9000fa1c:	e7fe      	b.n	9000fa1c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000fa1e:	b530      	push	{r4, r5, lr}
9000fa20:	4614      	mov	r4, r2
9000fa22:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000fa24:	2a00      	cmp	r2, #0
9000fa26:	d03b      	beq.n	9000faa0 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000fa28:	2350      	movs	r3, #80	@ 0x50
9000fa2a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000fa2c:	9b03      	ldr	r3, [sp, #12]
9000fa2e:	2b50      	cmp	r3, #80	@ 0x50
9000fa30:	d008      	beq.n	9000fa44 <xQueueCreateCountingSemaphoreStatic+0x50>
9000fa32:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa36:	f383 8811 	msr	BASEPRI, r3
9000fa3a:	f3bf 8f6f 	isb	sy
9000fa3e:	f3bf 8f4f 	dsb	sy
9000fa42:	e7fe      	b.n	9000fa42 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000fa44:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fa46:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000fa48:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000fa4a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000fa4c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000fa50:	6415      	str	r5, [r2, #64]	@ 0x40
9000fa52:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000fa54:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000fa56:	f7ff fd85 	bl	9000f564 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa5a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fa5c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fa5e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa60:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000fa64:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa68:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa6a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa6c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa6e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000fa70:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fa72:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fa76:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000fa78:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fa7c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fa80:	f7ff fcb8 	bl	9000f3f4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fa84:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fa88:	f7ff fcb4 	bl	9000f3f4 <vListInitialise>
	taskEXIT_CRITICAL();
9000fa8c:	f7ff fd8c 	bl	9000f5a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000fa90:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fa92:	9901      	ldr	r1, [sp, #4]
	}
9000fa94:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000fa96:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fa9a:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000fa9c:	b005      	add	sp, #20
9000fa9e:	bd30      	pop	{r4, r5, pc}
9000faa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000faa4:	f383 8811 	msr	BASEPRI, r3
9000faa8:	f3bf 8f6f 	isb	sy
9000faac:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000fab0:	e7fe      	b.n	9000fab0 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000fab2:	bf00      	nop

9000fab4 <xQueueCreateCountingSemaphore>:
	{
9000fab4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000fab6:	b940      	cbnz	r0, 9000faca <xQueueCreateCountingSemaphore+0x16>
9000fab8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fabc:	f383 8811 	msr	BASEPRI, r3
9000fac0:	f3bf 8f6f 	isb	sy
9000fac4:	f3bf 8f4f 	dsb	sy
9000fac8:	e7fe      	b.n	9000fac8 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000faca:	4288      	cmp	r0, r1
9000facc:	4604      	mov	r4, r0
9000face:	460e      	mov	r6, r1
9000fad0:	d208      	bcs.n	9000fae4 <xQueueCreateCountingSemaphore+0x30>
9000fad2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fad6:	f383 8811 	msr	BASEPRI, r3
9000fada:	f3bf 8f6f 	isb	sy
9000fade:	f3bf 8f4f 	dsb	sy
9000fae2:	e7fe      	b.n	9000fae2 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000fae4:	2050      	movs	r0, #80	@ 0x50
9000fae6:	f7ff fb5d 	bl	9000f1a4 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000faea:	4605      	mov	r5, r0
9000faec:	b330      	cbz	r0, 9000fb3c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000faee:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000faf0:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000faf2:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000faf4:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000faf8:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000fafa:	f7ff fd33 	bl	9000f564 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fafe:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000fb00:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fb02:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000fb06:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb08:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000fb0c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb10:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb12:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb14:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb16:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000fb18:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000fb1a:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000fb1c:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000fb20:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000fb24:	f7ff fc66 	bl	9000f3f4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000fb28:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000fb2c:	f7ff fc62 	bl	9000f3f4 <vListInitialise>
	taskEXIT_CRITICAL();
9000fb30:	f7ff fd3a 	bl	9000f5a8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000fb34:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000fb36:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000fb38:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000fb3c:	4628      	mov	r0, r5
9000fb3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000fb40 <xQueueGenericSend>:
{
9000fb40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fb44:	b084      	sub	sp, #16
9000fb46:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000fb48:	2800      	cmp	r0, #0
9000fb4a:	f000 8103 	beq.w	9000fd54 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fb4e:	4688      	mov	r8, r1
9000fb50:	4604      	mov	r4, r0
9000fb52:	461f      	mov	r7, r3
9000fb54:	2900      	cmp	r1, #0
9000fb56:	f000 8097 	beq.w	9000fc88 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000fb5a:	2f02      	cmp	r7, #2
9000fb5c:	d10b      	bne.n	9000fb76 <xQueueGenericSend+0x36>
9000fb5e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fb60:	2b01      	cmp	r3, #1
9000fb62:	d008      	beq.n	9000fb76 <xQueueGenericSend+0x36>
9000fb64:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb68:	f383 8811 	msr	BASEPRI, r3
9000fb6c:	f3bf 8f6f 	isb	sy
9000fb70:	f3bf 8f4f 	dsb	sy
9000fb74:	e7fe      	b.n	9000fb74 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fb76:	f001 fd0d 	bl	90011594 <xTaskGetSchedulerState>
9000fb7a:	2800      	cmp	r0, #0
9000fb7c:	f000 80f3 	beq.w	9000fd66 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fb80:	f1a7 0902 	sub.w	r9, r7, #2
9000fb84:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fb86:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fb8a:	fab9 f989 	clz	r9, r9
9000fb8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000fb92:	f7ff fce7 	bl	9000f564 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fb96:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000fb98:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fb9a:	429a      	cmp	r2, r3
9000fb9c:	f0c0 80f0 	bcc.w	9000fd80 <xQueueGenericSend+0x240>
9000fba0:	f1b9 0f00 	cmp.w	r9, #0
9000fba4:	f040 80ec 	bne.w	9000fd80 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000fba8:	9b01      	ldr	r3, [sp, #4]
9000fbaa:	2b00      	cmp	r3, #0
9000fbac:	f000 8101 	beq.w	9000fdb2 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000fbb0:	2d00      	cmp	r5, #0
9000fbb2:	f000 80cb 	beq.w	9000fd4c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000fbb6:	f7ff fcf7 	bl	9000f5a8 <vPortExitCritical>
		vTaskSuspendAll();
9000fbba:	f001 fb21 	bl	90011200 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000fbbe:	f7ff fcd1 	bl	9000f564 <vPortEnterCritical>
9000fbc2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000fbc6:	2bff      	cmp	r3, #255	@ 0xff
9000fbc8:	d102      	bne.n	9000fbd0 <xQueueGenericSend+0x90>
9000fbca:	2300      	movs	r3, #0
9000fbcc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000fbd0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000fbd4:	2bff      	cmp	r3, #255	@ 0xff
9000fbd6:	d102      	bne.n	9000fbde <xQueueGenericSend+0x9e>
9000fbd8:	2300      	movs	r3, #0
9000fbda:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000fbde:	f7ff fce3 	bl	9000f5a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000fbe2:	a901      	add	r1, sp, #4
9000fbe4:	a802      	add	r0, sp, #8
9000fbe6:	f001 fc8d 	bl	90011504 <xTaskCheckForTimeOut>
9000fbea:	2800      	cmp	r0, #0
9000fbec:	f040 80e5 	bne.w	9000fdba <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000fbf0:	f7ff fcb8 	bl	9000f564 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000fbf4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000fbf6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fbf8:	429a      	cmp	r2, r3
9000fbfa:	d052      	beq.n	9000fca2 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000fbfc:	f7ff fcd4 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fc00:	f7ff fcb0 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fc04:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000fc08:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc0a:	2d00      	cmp	r5, #0
9000fc0c:	dc04      	bgt.n	9000fc18 <xQueueGenericSend+0xd8>
9000fc0e:	e011      	b.n	9000fc34 <xQueueGenericSend+0xf4>
			--cTxLock;
9000fc10:	1e6a      	subs	r2, r5, #1
9000fc12:	b2d3      	uxtb	r3, r2
9000fc14:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc16:	b16b      	cbz	r3, 9000fc34 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fc18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fc1a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fc1c:	b153      	cbz	r3, 9000fc34 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fc1e:	f001 fc1f 	bl	90011460 <xTaskRemoveFromEventList>
9000fc22:	2800      	cmp	r0, #0
9000fc24:	d0f4      	beq.n	9000fc10 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000fc26:	f001 fcaf 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
9000fc2a:	1e6a      	subs	r2, r5, #1
9000fc2c:	b2d3      	uxtb	r3, r2
9000fc2e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc30:	2b00      	cmp	r3, #0
9000fc32:	d1f1      	bne.n	9000fc18 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000fc34:	23ff      	movs	r3, #255	@ 0xff
9000fc36:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fc3a:	f7ff fcb5 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fc3e:	f7ff fc91 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fc42:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000fc46:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc48:	2d00      	cmp	r5, #0
9000fc4a:	dd14      	ble.n	9000fc76 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc4c:	f104 0a10 	add.w	sl, r4, #16
9000fc50:	e003      	b.n	9000fc5a <xQueueGenericSend+0x11a>
				--cRxLock;
9000fc52:	1e6a      	subs	r2, r5, #1
9000fc54:	b2d3      	uxtb	r3, r2
9000fc56:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc58:	b16b      	cbz	r3, 9000fc76 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc5a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc5c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc5e:	b153      	cbz	r3, 9000fc76 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc60:	f001 fbfe 	bl	90011460 <xTaskRemoveFromEventList>
9000fc64:	2800      	cmp	r0, #0
9000fc66:	d0f4      	beq.n	9000fc52 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000fc68:	f001 fc8e 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
9000fc6c:	1e6a      	subs	r2, r5, #1
9000fc6e:	b2d3      	uxtb	r3, r2
9000fc70:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc72:	2b00      	cmp	r3, #0
9000fc74:	d1f1      	bne.n	9000fc5a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000fc76:	23ff      	movs	r3, #255	@ 0xff
9000fc78:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fc7c:	f7ff fc94 	bl	9000f5a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000fc80:	f001 fac6 	bl	90011210 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fc84:	2501      	movs	r5, #1
9000fc86:	e784      	b.n	9000fb92 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fc88:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000fc8a:	2b00      	cmp	r3, #0
9000fc8c:	f43f af65 	beq.w	9000fb5a <xQueueGenericSend+0x1a>
9000fc90:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc94:	f383 8811 	msr	BASEPRI, r3
9000fc98:	f3bf 8f6f 	isb	sy
9000fc9c:	f3bf 8f4f 	dsb	sy
9000fca0:	e7fe      	b.n	9000fca0 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000fca2:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000fca6:	f7ff fc7f 	bl	9000f5a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000fcaa:	9901      	ldr	r1, [sp, #4]
9000fcac:	4650      	mov	r0, sl
9000fcae:	f001 fb49 	bl	90011344 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000fcb2:	f7ff fc57 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fcb6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000fcba:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fcbc:	2d00      	cmp	r5, #0
9000fcbe:	dc04      	bgt.n	9000fcca <xQueueGenericSend+0x18a>
9000fcc0:	e011      	b.n	9000fce6 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000fcc2:	1e6b      	subs	r3, r5, #1
9000fcc4:	b2da      	uxtb	r2, r3
9000fcc6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fcc8:	b16a      	cbz	r2, 9000fce6 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fcca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fccc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fcce:	b153      	cbz	r3, 9000fce6 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fcd0:	f001 fbc6 	bl	90011460 <xTaskRemoveFromEventList>
9000fcd4:	2800      	cmp	r0, #0
9000fcd6:	d0f4      	beq.n	9000fcc2 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000fcd8:	f001 fc56 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
9000fcdc:	1e6b      	subs	r3, r5, #1
9000fcde:	b2da      	uxtb	r2, r3
9000fce0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fce2:	2a00      	cmp	r2, #0
9000fce4:	d1f1      	bne.n	9000fcca <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000fce6:	23ff      	movs	r3, #255	@ 0xff
9000fce8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fcec:	f7ff fc5c 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fcf0:	f7ff fc38 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fcf4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000fcf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fcfa:	2d00      	cmp	r5, #0
9000fcfc:	dc04      	bgt.n	9000fd08 <xQueueGenericSend+0x1c8>
9000fcfe:	e011      	b.n	9000fd24 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000fd00:	1e6b      	subs	r3, r5, #1
9000fd02:	b2da      	uxtb	r2, r3
9000fd04:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fd06:	b16a      	cbz	r2, 9000fd24 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fd08:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fd0a:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fd0c:	b153      	cbz	r3, 9000fd24 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fd0e:	f001 fba7 	bl	90011460 <xTaskRemoveFromEventList>
9000fd12:	2800      	cmp	r0, #0
9000fd14:	d0f4      	beq.n	9000fd00 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000fd16:	f001 fc37 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
9000fd1a:	1e6b      	subs	r3, r5, #1
9000fd1c:	b2da      	uxtb	r2, r3
9000fd1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fd20:	2a00      	cmp	r2, #0
9000fd22:	d1f1      	bne.n	9000fd08 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000fd24:	23ff      	movs	r3, #255	@ 0xff
9000fd26:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fd2a:	f7ff fc3d 	bl	9000f5a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000fd2e:	f001 fa6f 	bl	90011210 <xTaskResumeAll>
9000fd32:	2800      	cmp	r0, #0
9000fd34:	d1a6      	bne.n	9000fc84 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000fd36:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fd3a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fd3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fd42:	f3bf 8f4f 	dsb	sy
9000fd46:	f3bf 8f6f 	isb	sy
9000fd4a:	e79b      	b.n	9000fc84 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000fd4c:	a802      	add	r0, sp, #8
9000fd4e:	f001 fbcd 	bl	900114ec <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000fd52:	e730      	b.n	9000fbb6 <xQueueGenericSend+0x76>
9000fd54:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd58:	f383 8811 	msr	BASEPRI, r3
9000fd5c:	f3bf 8f6f 	isb	sy
9000fd60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fd64:	e7fe      	b.n	9000fd64 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000fd66:	9b01      	ldr	r3, [sp, #4]
9000fd68:	2b00      	cmp	r3, #0
9000fd6a:	f43f af09 	beq.w	9000fb80 <xQueueGenericSend+0x40>
9000fd6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd72:	f383 8811 	msr	BASEPRI, r3
9000fd76:	f3bf 8f6f 	isb	sy
9000fd7a:	f3bf 8f4f 	dsb	sy
9000fd7e:	e7fe      	b.n	9000fd7e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000fd80:	463a      	mov	r2, r7
9000fd82:	4641      	mov	r1, r8
9000fd84:	4620      	mov	r0, r4
9000fd86:	f7ff fd4d 	bl	9000f824 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fd8a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000fd8c:	2b00      	cmp	r3, #0
9000fd8e:	d151      	bne.n	9000fe34 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000fd90:	b148      	cbz	r0, 9000fda6 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000fd92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fd96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fd9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fd9e:	f3bf 8f4f 	dsb	sy
9000fda2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000fda6:	f7ff fbff 	bl	9000f5a8 <vPortExitCritical>
				return pdPASS;
9000fdaa:	2001      	movs	r0, #1
}
9000fdac:	b004      	add	sp, #16
9000fdae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000fdb2:	f7ff fbf9 	bl	9000f5a8 <vPortExitCritical>
					return errQUEUE_FULL;
9000fdb6:	2000      	movs	r0, #0
9000fdb8:	e7f8      	b.n	9000fdac <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000fdba:	f7ff fbd3 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fdbe:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000fdc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fdc4:	2d00      	cmp	r5, #0
9000fdc6:	dd10      	ble.n	9000fdea <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fdc8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000fdcc:	e003      	b.n	9000fdd6 <xQueueGenericSend+0x296>
			--cTxLock;
9000fdce:	1e6b      	subs	r3, r5, #1
9000fdd0:	b2da      	uxtb	r2, r3
9000fdd2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fdd4:	b14a      	cbz	r2, 9000fdea <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fdd6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fdd8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fdda:	b133      	cbz	r3, 9000fdea <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fddc:	f001 fb40 	bl	90011460 <xTaskRemoveFromEventList>
9000fde0:	2800      	cmp	r0, #0
9000fde2:	d0f4      	beq.n	9000fdce <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000fde4:	f001 fbd0 	bl	90011588 <vTaskMissedYield>
9000fde8:	e7f1      	b.n	9000fdce <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fdea:	23ff      	movs	r3, #255	@ 0xff
9000fdec:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fdf0:	f7ff fbda 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fdf4:	f7ff fbb6 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fdf8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000fdfc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fdfe:	2d00      	cmp	r5, #0
9000fe00:	dd10      	ble.n	9000fe24 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe02:	f104 0610 	add.w	r6, r4, #16
9000fe06:	e003      	b.n	9000fe10 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000fe08:	1e6b      	subs	r3, r5, #1
9000fe0a:	b2da      	uxtb	r2, r3
9000fe0c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe0e:	b14a      	cbz	r2, 9000fe24 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe10:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe12:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe14:	b133      	cbz	r3, 9000fe24 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe16:	f001 fb23 	bl	90011460 <xTaskRemoveFromEventList>
9000fe1a:	2800      	cmp	r0, #0
9000fe1c:	d0f4      	beq.n	9000fe08 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000fe1e:	f001 fbb3 	bl	90011588 <vTaskMissedYield>
9000fe22:	e7f1      	b.n	9000fe08 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000fe24:	23ff      	movs	r3, #255	@ 0xff
9000fe26:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000fe2a:	f7ff fbbd 	bl	9000f5a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000fe2e:	f001 f9ef 	bl	90011210 <xTaskResumeAll>
			return errQUEUE_FULL;
9000fe32:	e7c0      	b.n	9000fdb6 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fe34:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fe38:	f001 fb12 	bl	90011460 <xTaskRemoveFromEventList>
9000fe3c:	2800      	cmp	r0, #0
9000fe3e:	d0b2      	beq.n	9000fda6 <xQueueGenericSend+0x266>
9000fe40:	e7a7      	b.n	9000fd92 <xQueueGenericSend+0x252>
9000fe42:	bf00      	nop

9000fe44 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000fe44:	2800      	cmp	r0, #0
9000fe46:	d04b      	beq.n	9000fee0 <xQueueGenericSendFromISR+0x9c>
{
9000fe48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fe4c:	460e      	mov	r6, r1
9000fe4e:	4604      	mov	r4, r0
9000fe50:	4617      	mov	r7, r2
9000fe52:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fe54:	b339      	cbz	r1, 9000fea6 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000fe56:	2d02      	cmp	r5, #2
9000fe58:	d10b      	bne.n	9000fe72 <xQueueGenericSendFromISR+0x2e>
9000fe5a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fe5c:	2b01      	cmp	r3, #1
9000fe5e:	d008      	beq.n	9000fe72 <xQueueGenericSendFromISR+0x2e>
9000fe60:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe64:	f383 8811 	msr	BASEPRI, r3
9000fe68:	f3bf 8f6f 	isb	sy
9000fe6c:	f3bf 8f4f 	dsb	sy
9000fe70:	e7fe      	b.n	9000fe70 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000fe72:	f7ff fca9 	bl	9000f7c8 <vPortValidateInterruptPriority>
	__asm volatile
9000fe76:	f3ef 8811 	mrs	r8, BASEPRI
9000fe7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe7e:	f383 8811 	msr	BASEPRI, r3
9000fe82:	f3bf 8f6f 	isb	sy
9000fe86:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000fe8a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000fe8c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000fe8e:	429a      	cmp	r2, r3
9000fe90:	d315      	bcc.n	9000febe <xQueueGenericSendFromISR+0x7a>
9000fe92:	f1a5 0002 	sub.w	r0, r5, #2
9000fe96:	fab0 f080 	clz	r0, r0
9000fe9a:	0940      	lsrs	r0, r0, #5
9000fe9c:	b978      	cbnz	r0, 9000febe <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000fe9e:	f388 8811 	msr	BASEPRI, r8
}
9000fea2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fea6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000fea8:	2b00      	cmp	r3, #0
9000feaa:	d0d4      	beq.n	9000fe56 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000feac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000feb0:	f383 8811 	msr	BASEPRI, r3
9000feb4:	f3bf 8f6f 	isb	sy
9000feb8:	f3bf 8f4f 	dsb	sy
9000febc:	e7fe      	b.n	9000febc <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000febe:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000fec0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000fec4:	4631      	mov	r1, r6
9000fec6:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000fec8:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000feca:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000fecc:	f7ff fcaa 	bl	9000f824 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000fed0:	1c6b      	adds	r3, r5, #1
9000fed2:	d00e      	beq.n	9000fef2 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000fed4:	1c6b      	adds	r3, r5, #1
9000fed6:	b25b      	sxtb	r3, r3
9000fed8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000fedc:	2001      	movs	r0, #1
9000fede:	e7de      	b.n	9000fe9e <xQueueGenericSendFromISR+0x5a>
9000fee0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fee4:	f383 8811 	msr	BASEPRI, r3
9000fee8:	f3bf 8f6f 	isb	sy
9000feec:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fef0:	e7fe      	b.n	9000fef0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fef2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000fef4:	2b00      	cmp	r3, #0
9000fef6:	d0f1      	beq.n	9000fedc <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fef8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000fefc:	f001 fab0 	bl	90011460 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ff00:	2f00      	cmp	r7, #0
9000ff02:	d0eb      	beq.n	9000fedc <xQueueGenericSendFromISR+0x98>
9000ff04:	2800      	cmp	r0, #0
9000ff06:	d0e9      	beq.n	9000fedc <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ff08:	2301      	movs	r3, #1
9000ff0a:	603b      	str	r3, [r7, #0]
9000ff0c:	e7e6      	b.n	9000fedc <xQueueGenericSendFromISR+0x98>
9000ff0e:	bf00      	nop

9000ff10 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000ff10:	b360      	cbz	r0, 9000ff6c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000ff12:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000ff14:	b570      	push	{r4, r5, r6, lr}
9000ff16:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000ff18:	b143      	cbz	r3, 9000ff2c <xQueueGiveFromISR+0x1c>
9000ff1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff1e:	f383 8811 	msr	BASEPRI, r3
9000ff22:	f3bf 8f6f 	isb	sy
9000ff26:	f3bf 8f4f 	dsb	sy
9000ff2a:	e7fe      	b.n	9000ff2a <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000ff2c:	6803      	ldr	r3, [r0, #0]
9000ff2e:	460d      	mov	r5, r1
9000ff30:	b32b      	cbz	r3, 9000ff7e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000ff32:	f7ff fc49 	bl	9000f7c8 <vPortValidateInterruptPriority>
	__asm volatile
9000ff36:	f3ef 8611 	mrs	r6, BASEPRI
9000ff3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff3e:	f383 8811 	msr	BASEPRI, r3
9000ff42:	f3bf 8f6f 	isb	sy
9000ff46:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ff4a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000ff4c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000ff4e:	429a      	cmp	r2, r3
9000ff50:	d921      	bls.n	9000ff96 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000ff52:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ff56:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000ff58:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ff5a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000ff5c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000ff5e:	d01e      	beq.n	9000ff9e <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ff60:	3301      	adds	r3, #1
9000ff62:	b25b      	sxtb	r3, r3
9000ff64:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000ff68:	2001      	movs	r0, #1
9000ff6a:	e015      	b.n	9000ff98 <xQueueGiveFromISR+0x88>
	__asm volatile
9000ff6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff70:	f383 8811 	msr	BASEPRI, r3
9000ff74:	f3bf 8f6f 	isb	sy
9000ff78:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ff7c:	e7fe      	b.n	9000ff7c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000ff7e:	6883      	ldr	r3, [r0, #8]
9000ff80:	2b00      	cmp	r3, #0
9000ff82:	d0d6      	beq.n	9000ff32 <xQueueGiveFromISR+0x22>
9000ff84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff88:	f383 8811 	msr	BASEPRI, r3
9000ff8c:	f3bf 8f6f 	isb	sy
9000ff90:	f3bf 8f4f 	dsb	sy
9000ff94:	e7fe      	b.n	9000ff94 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000ff96:	2000      	movs	r0, #0
	__asm volatile
9000ff98:	f386 8811 	msr	BASEPRI, r6
}
9000ff9c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ff9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ffa0:	2b00      	cmp	r3, #0
9000ffa2:	d0e1      	beq.n	9000ff68 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ffa4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ffa8:	f001 fa5a 	bl	90011460 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ffac:	2d00      	cmp	r5, #0
9000ffae:	d0db      	beq.n	9000ff68 <xQueueGiveFromISR+0x58>
9000ffb0:	2800      	cmp	r0, #0
9000ffb2:	d0d9      	beq.n	9000ff68 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ffb4:	2301      	movs	r3, #1
9000ffb6:	602b      	str	r3, [r5, #0]
9000ffb8:	e7d6      	b.n	9000ff68 <xQueueGiveFromISR+0x58>
9000ffba:	bf00      	nop

9000ffbc <xQueueReceive>:
{
9000ffbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ffc0:	b085      	sub	sp, #20
9000ffc2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000ffc4:	2800      	cmp	r0, #0
9000ffc6:	f000 8147 	beq.w	90010258 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ffca:	460f      	mov	r7, r1
9000ffcc:	4604      	mov	r4, r0
9000ffce:	2900      	cmp	r1, #0
9000ffd0:	d07b      	beq.n	900100ca <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ffd2:	f001 fadf 	bl	90011594 <xTaskGetSchedulerState>
9000ffd6:	2800      	cmp	r0, #0
9000ffd8:	f000 8083 	beq.w	900100e2 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000ffdc:	f7ff fac2 	bl	9000f564 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ffe0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ffe2:	2d00      	cmp	r5, #0
9000ffe4:	f040 8141 	bne.w	9001026a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ffe8:	9b01      	ldr	r3, [sp, #4]
9000ffea:	2b00      	cmp	r3, #0
9000ffec:	f000 80d7 	beq.w	9001019e <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000fff0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fff2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000fff6:	a802      	add	r0, sp, #8
9000fff8:	f001 fa78 	bl	900114ec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000fffc:	f7ff fad4 	bl	9000f5a8 <vPortExitCritical>
		vTaskSuspendAll();
90010000:	f001 f8fe 	bl	90011200 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010004:	f7ff faae 	bl	9000f564 <vPortEnterCritical>
90010008:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001000c:	2bff      	cmp	r3, #255	@ 0xff
9001000e:	d101      	bne.n	90010014 <xQueueReceive+0x58>
90010010:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90010014:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010018:	2bff      	cmp	r3, #255	@ 0xff
9001001a:	d101      	bne.n	90010020 <xQueueReceive+0x64>
9001001c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
90010020:	f7ff fac2 	bl	9000f5a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010024:	a901      	add	r1, sp, #4
90010026:	a802      	add	r0, sp, #8
90010028:	f001 fa6c 	bl	90011504 <xTaskCheckForTimeOut>
9001002c:	2800      	cmp	r0, #0
9001002e:	d165      	bne.n	900100fc <xQueueReceive+0x140>
	taskENTER_CRITICAL();
90010030:	f7ff fa98 	bl	9000f564 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010034:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010036:	2b00      	cmp	r3, #0
90010038:	f000 80b7 	beq.w	900101aa <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9001003c:	f7ff fab4 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010040:	f7ff fa90 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010044:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010048:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001004a:	2d00      	cmp	r5, #0
9001004c:	dd14      	ble.n	90010078 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001004e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
90010052:	e003      	b.n	9001005c <xQueueReceive+0xa0>
			--cTxLock;
90010054:	1e6b      	subs	r3, r5, #1
90010056:	b2da      	uxtb	r2, r3
90010058:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001005a:	b16a      	cbz	r2, 90010078 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001005c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001005e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010060:	b153      	cbz	r3, 90010078 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010062:	f001 f9fd 	bl	90011460 <xTaskRemoveFromEventList>
90010066:	2800      	cmp	r0, #0
90010068:	d0f4      	beq.n	90010054 <xQueueReceive+0x98>
						vTaskMissedYield();
9001006a:	f001 fa8d 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
9001006e:	1e6b      	subs	r3, r5, #1
90010070:	b2da      	uxtb	r2, r3
90010072:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010074:	2a00      	cmp	r2, #0
90010076:	d1f1      	bne.n	9001005c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
90010078:	23ff      	movs	r3, #255	@ 0xff
9001007a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001007e:	f7ff fa93 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010082:	f7ff fa6f 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010086:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001008a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001008c:	2d00      	cmp	r5, #0
9001008e:	dd14      	ble.n	900100ba <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010090:	f104 0910 	add.w	r9, r4, #16
90010094:	e003      	b.n	9001009e <xQueueReceive+0xe2>
				--cRxLock;
90010096:	1e6b      	subs	r3, r5, #1
90010098:	b2da      	uxtb	r2, r3
9001009a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001009c:	b16a      	cbz	r2, 900100ba <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001009e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100a0:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900100a2:	b153      	cbz	r3, 900100ba <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900100a4:	f001 f9dc 	bl	90011460 <xTaskRemoveFromEventList>
900100a8:	2800      	cmp	r0, #0
900100aa:	d0f4      	beq.n	90010096 <xQueueReceive+0xda>
					vTaskMissedYield();
900100ac:	f001 fa6c 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
900100b0:	1e6b      	subs	r3, r5, #1
900100b2:	b2da      	uxtb	r2, r3
900100b4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900100b6:	2a00      	cmp	r2, #0
900100b8:	d1f1      	bne.n	9001009e <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
900100ba:	23ff      	movs	r3, #255	@ 0xff
900100bc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900100c0:	f7ff fa72 	bl	9000f5a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
900100c4:	f001 f8a4 	bl	90011210 <xTaskResumeAll>
900100c8:	e060      	b.n	9001018c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
900100ca:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900100cc:	2b00      	cmp	r3, #0
900100ce:	d080      	beq.n	9000ffd2 <xQueueReceive+0x16>
	__asm volatile
900100d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100d4:	f383 8811 	msr	BASEPRI, r3
900100d8:	f3bf 8f6f 	isb	sy
900100dc:	f3bf 8f4f 	dsb	sy
900100e0:	e7fe      	b.n	900100e0 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900100e2:	9b01      	ldr	r3, [sp, #4]
900100e4:	2b00      	cmp	r3, #0
900100e6:	f43f af79 	beq.w	9000ffdc <xQueueReceive+0x20>
900100ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100ee:	f383 8811 	msr	BASEPRI, r3
900100f2:	f3bf 8f6f 	isb	sy
900100f6:	f3bf 8f4f 	dsb	sy
900100fa:	e7fe      	b.n	900100fa <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
900100fc:	f7ff fa32 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010100:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010104:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010106:	2d00      	cmp	r5, #0
90010108:	dc04      	bgt.n	90010114 <xQueueReceive+0x158>
9001010a:	e011      	b.n	90010130 <xQueueReceive+0x174>
			--cTxLock;
9001010c:	1e6b      	subs	r3, r5, #1
9001010e:	b2da      	uxtb	r2, r3
90010110:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010112:	b16a      	cbz	r2, 90010130 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010114:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010116:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010118:	b153      	cbz	r3, 90010130 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001011a:	f001 f9a1 	bl	90011460 <xTaskRemoveFromEventList>
9001011e:	2800      	cmp	r0, #0
90010120:	d0f4      	beq.n	9001010c <xQueueReceive+0x150>
						vTaskMissedYield();
90010122:	f001 fa31 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
90010126:	1e6b      	subs	r3, r5, #1
90010128:	b2da      	uxtb	r2, r3
9001012a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001012c:	2a00      	cmp	r2, #0
9001012e:	d1f1      	bne.n	90010114 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
90010130:	23ff      	movs	r3, #255	@ 0xff
90010132:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010136:	f7ff fa37 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001013a:	f7ff fa13 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001013e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010142:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010144:	2d00      	cmp	r5, #0
90010146:	dd14      	ble.n	90010172 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010148:	f104 0910 	add.w	r9, r4, #16
9001014c:	e003      	b.n	90010156 <xQueueReceive+0x19a>
				--cRxLock;
9001014e:	1e6b      	subs	r3, r5, #1
90010150:	b2da      	uxtb	r2, r3
90010152:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010154:	b16a      	cbz	r2, 90010172 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010156:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010158:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001015a:	b153      	cbz	r3, 90010172 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001015c:	f001 f980 	bl	90011460 <xTaskRemoveFromEventList>
90010160:	2800      	cmp	r0, #0
90010162:	d0f4      	beq.n	9001014e <xQueueReceive+0x192>
					vTaskMissedYield();
90010164:	f001 fa10 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
90010168:	1e6b      	subs	r3, r5, #1
9001016a:	b2da      	uxtb	r2, r3
9001016c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001016e:	2a00      	cmp	r2, #0
90010170:	d1f1      	bne.n	90010156 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
90010172:	23ff      	movs	r3, #255	@ 0xff
90010174:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010178:	f7ff fa16 	bl	9000f5a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001017c:	f001 f848 	bl	90011210 <xTaskResumeAll>
	taskENTER_CRITICAL();
90010180:	f7ff f9f0 	bl	9000f564 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010184:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010186:	b153      	cbz	r3, 9001019e <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
90010188:	f7ff fa0e 	bl	9000f5a8 <vPortExitCritical>
		taskENTER_CRITICAL();
9001018c:	f7ff f9ea 	bl	9000f564 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010190:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010192:	2d00      	cmp	r5, #0
90010194:	d169      	bne.n	9001026a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
90010196:	9b01      	ldr	r3, [sp, #4]
90010198:	2b00      	cmp	r3, #0
9001019a:	f47f af2f 	bne.w	9000fffc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9001019e:	f7ff fa03 	bl	9000f5a8 <vPortExitCritical>
					return errQUEUE_EMPTY;
900101a2:	2000      	movs	r0, #0
}
900101a4:	b005      	add	sp, #20
900101a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900101aa:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
900101ae:	f7ff f9fb 	bl	9000f5a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900101b2:	9901      	ldr	r1, [sp, #4]
900101b4:	4648      	mov	r0, r9
900101b6:	f001 f8c5 	bl	90011344 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900101ba:	f7ff f9d3 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900101be:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900101c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900101c4:	2d00      	cmp	r5, #0
900101c6:	dc04      	bgt.n	900101d2 <xQueueReceive+0x216>
900101c8:	e011      	b.n	900101ee <xQueueReceive+0x232>
			--cTxLock;
900101ca:	1e6b      	subs	r3, r5, #1
900101cc:	b2da      	uxtb	r2, r3
900101ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900101d0:	b16a      	cbz	r2, 900101ee <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900101d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101d4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900101d6:	b153      	cbz	r3, 900101ee <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900101d8:	f001 f942 	bl	90011460 <xTaskRemoveFromEventList>
900101dc:	2800      	cmp	r0, #0
900101de:	d0f4      	beq.n	900101ca <xQueueReceive+0x20e>
						vTaskMissedYield();
900101e0:	f001 f9d2 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
900101e4:	1e6b      	subs	r3, r5, #1
900101e6:	b2da      	uxtb	r2, r3
900101e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900101ea:	2a00      	cmp	r2, #0
900101ec:	d1f1      	bne.n	900101d2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
900101ee:	23ff      	movs	r3, #255	@ 0xff
900101f0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900101f4:	f7ff f9d8 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
900101f8:	f7ff f9b4 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900101fc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010200:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010202:	2d00      	cmp	r5, #0
90010204:	dd14      	ble.n	90010230 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010206:	f104 0910 	add.w	r9, r4, #16
9001020a:	e003      	b.n	90010214 <xQueueReceive+0x258>
				--cRxLock;
9001020c:	1e6b      	subs	r3, r5, #1
9001020e:	b2da      	uxtb	r2, r3
90010210:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010212:	b16a      	cbz	r2, 90010230 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010214:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010216:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010218:	b153      	cbz	r3, 90010230 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001021a:	f001 f921 	bl	90011460 <xTaskRemoveFromEventList>
9001021e:	2800      	cmp	r0, #0
90010220:	d0f4      	beq.n	9001020c <xQueueReceive+0x250>
					vTaskMissedYield();
90010222:	f001 f9b1 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
90010226:	1e6b      	subs	r3, r5, #1
90010228:	b2da      	uxtb	r2, r3
9001022a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001022c:	2a00      	cmp	r2, #0
9001022e:	d1f1      	bne.n	90010214 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
90010230:	23ff      	movs	r3, #255	@ 0xff
90010232:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010236:	f7ff f9b7 	bl	9000f5a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9001023a:	f000 ffe9 	bl	90011210 <xTaskResumeAll>
9001023e:	2800      	cmp	r0, #0
90010240:	d1a4      	bne.n	9001018c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
90010242:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010246:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001024a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001024e:	f3bf 8f4f 	dsb	sy
90010252:	f3bf 8f6f 	isb	sy
90010256:	e799      	b.n	9001018c <xQueueReceive+0x1d0>
90010258:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001025c:	f383 8811 	msr	BASEPRI, r3
90010260:	f3bf 8f6f 	isb	sy
90010264:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010268:	e7fe      	b.n	90010268 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001026a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9001026c:	b152      	cbz	r2, 90010284 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001026e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010270:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010272:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010274:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010276:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010278:	d301      	bcc.n	9001027e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9001027a:	6821      	ldr	r1, [r4, #0]
9001027c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001027e:	4638      	mov	r0, r7
90010280:	f01b fd69 	bl	9002bd56 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010284:	3d01      	subs	r5, #1
90010286:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010288:	6923      	ldr	r3, [r4, #16]
9001028a:	b91b      	cbnz	r3, 90010294 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9001028c:	f7ff f98c 	bl	9000f5a8 <vPortExitCritical>
				return pdPASS;
90010290:	2001      	movs	r0, #1
90010292:	e787      	b.n	900101a4 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010294:	f104 0010 	add.w	r0, r4, #16
90010298:	f001 f8e2 	bl	90011460 <xTaskRemoveFromEventList>
9001029c:	2800      	cmp	r0, #0
9001029e:	d0f5      	beq.n	9001028c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
900102a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900102a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900102a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900102ac:	f3bf 8f4f 	dsb	sy
900102b0:	f3bf 8f6f 	isb	sy
900102b4:	e7ea      	b.n	9001028c <xQueueReceive+0x2d0>
900102b6:	bf00      	nop

900102b8 <xQueueSemaphoreTake>:
{
900102b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900102bc:	b085      	sub	sp, #20
900102be:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
900102c0:	2800      	cmp	r0, #0
900102c2:	d05f      	beq.n	90010384 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
900102c4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900102c6:	4604      	mov	r4, r0
900102c8:	b143      	cbz	r3, 900102dc <xQueueSemaphoreTake+0x24>
900102ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
900102ce:	f383 8811 	msr	BASEPRI, r3
900102d2:	f3bf 8f6f 	isb	sy
900102d6:	f3bf 8f4f 	dsb	sy
900102da:	e7fe      	b.n	900102da <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900102dc:	f001 f95a 	bl	90011594 <xTaskGetSchedulerState>
900102e0:	2800      	cmp	r0, #0
900102e2:	d058      	beq.n	90010396 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
900102e4:	f7ff f93e 	bl	9000f564 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
900102e8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
900102ea:	2d00      	cmp	r5, #0
900102ec:	f040 8155 	bne.w	9001059a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
900102f0:	9b01      	ldr	r3, [sp, #4]
900102f2:	2b00      	cmp	r3, #0
900102f4:	f000 8145 	beq.w	90010582 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
900102f8:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
900102fa:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900102fc:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010300:	a802      	add	r0, sp, #8
90010302:	f001 f8f3 	bl	900114ec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010306:	f7ff f94f 	bl	9000f5a8 <vPortExitCritical>
		vTaskSuspendAll();
9001030a:	f000 ff79 	bl	90011200 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001030e:	f7ff f929 	bl	9000f564 <vPortEnterCritical>
90010312:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010316:	2bff      	cmp	r3, #255	@ 0xff
90010318:	d101      	bne.n	9001031e <xQueueSemaphoreTake+0x66>
9001031a:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9001031e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010322:	2bff      	cmp	r3, #255	@ 0xff
90010324:	d101      	bne.n	9001032a <xQueueSemaphoreTake+0x72>
90010326:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9001032a:	f7ff f93d 	bl	9000f5a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9001032e:	a901      	add	r1, sp, #4
90010330:	a802      	add	r0, sp, #8
90010332:	f001 f8e7 	bl	90011504 <xTaskCheckForTimeOut>
90010336:	2800      	cmp	r0, #0
90010338:	d139      	bne.n	900103ae <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9001033a:	f7ff f913 	bl	9000f564 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9001033e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010340:	2b00      	cmp	r3, #0
90010342:	f000 80c0 	beq.w	900104c6 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
90010346:	f7ff f92f 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001034a:	f7ff f90b 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001034e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010352:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010354:	2d00      	cmp	r5, #0
90010356:	f340 8091 	ble.w	9001047c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001035a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9001035e:	e005      	b.n	9001036c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
90010360:	1e6b      	subs	r3, r5, #1
90010362:	b2da      	uxtb	r2, r3
90010364:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010366:	2a00      	cmp	r2, #0
90010368:	f000 8088 	beq.w	9001047c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001036c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001036e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010370:	2b00      	cmp	r3, #0
90010372:	f000 8083 	beq.w	9001047c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010376:	f001 f873 	bl	90011460 <xTaskRemoveFromEventList>
9001037a:	2800      	cmp	r0, #0
9001037c:	d0f0      	beq.n	90010360 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9001037e:	f001 f903 	bl	90011588 <vTaskMissedYield>
90010382:	e7ed      	b.n	90010360 <xQueueSemaphoreTake+0xa8>
90010384:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010388:	f383 8811 	msr	BASEPRI, r3
9001038c:	f3bf 8f6f 	isb	sy
90010390:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010394:	e7fe      	b.n	90010394 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010396:	9b01      	ldr	r3, [sp, #4]
90010398:	2b00      	cmp	r3, #0
9001039a:	d0a3      	beq.n	900102e4 <xQueueSemaphoreTake+0x2c>
9001039c:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103a0:	f383 8811 	msr	BASEPRI, r3
900103a4:	f3bf 8f6f 	isb	sy
900103a8:	f3bf 8f4f 	dsb	sy
900103ac:	e7fe      	b.n	900103ac <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
900103ae:	f7ff f8d9 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900103b2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900103b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900103b8:	2d00      	cmp	r5, #0
900103ba:	dc04      	bgt.n	900103c6 <xQueueSemaphoreTake+0x10e>
900103bc:	e011      	b.n	900103e2 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
900103be:	1e6b      	subs	r3, r5, #1
900103c0:	b2da      	uxtb	r2, r3
900103c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900103c4:	b16a      	cbz	r2, 900103e2 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900103c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900103c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900103ca:	b153      	cbz	r3, 900103e2 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900103cc:	f001 f848 	bl	90011460 <xTaskRemoveFromEventList>
900103d0:	2800      	cmp	r0, #0
900103d2:	d0f4      	beq.n	900103be <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
900103d4:	f001 f8d8 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
900103d8:	1e6b      	subs	r3, r5, #1
900103da:	b2da      	uxtb	r2, r3
900103dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900103de:	2a00      	cmp	r2, #0
900103e0:	d1f1      	bne.n	900103c6 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
900103e2:	23ff      	movs	r3, #255	@ 0xff
900103e4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900103e8:	f7ff f8de 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
900103ec:	f7ff f8ba 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900103f0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900103f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900103f6:	2d00      	cmp	r5, #0
900103f8:	dd14      	ble.n	90010424 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900103fa:	f104 0910 	add.w	r9, r4, #16
900103fe:	e003      	b.n	90010408 <xQueueSemaphoreTake+0x150>
				--cRxLock;
90010400:	1e6b      	subs	r3, r5, #1
90010402:	b2da      	uxtb	r2, r3
90010404:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010406:	b16a      	cbz	r2, 90010424 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010408:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001040a:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001040c:	b153      	cbz	r3, 90010424 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001040e:	f001 f827 	bl	90011460 <xTaskRemoveFromEventList>
90010412:	2800      	cmp	r0, #0
90010414:	d0f4      	beq.n	90010400 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
90010416:	f001 f8b7 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
9001041a:	1e6b      	subs	r3, r5, #1
9001041c:	b2da      	uxtb	r2, r3
9001041e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010420:	2a00      	cmp	r2, #0
90010422:	d1f1      	bne.n	90010408 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90010424:	23ff      	movs	r3, #255	@ 0xff
90010426:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001042a:	f7ff f8bd 	bl	9000f5a8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001042e:	f000 feef 	bl	90011210 <xTaskResumeAll>
	taskENTER_CRITICAL();
90010432:	f7ff f897 	bl	9000f564 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010436:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010438:	b943      	cbnz	r3, 9001044c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9001043a:	f7ff f8b5 	bl	9000f5a8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9001043e:	2f00      	cmp	r7, #0
90010440:	f040 8094 	bne.w	9001056c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
90010444:	2000      	movs	r0, #0
}
90010446:	b005      	add	sp, #20
90010448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9001044c:	f7ff f8ac 	bl	9000f5a8 <vPortExitCritical>
		taskENTER_CRITICAL();
90010450:	f7ff f888 	bl	9000f564 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90010454:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90010456:	2d00      	cmp	r5, #0
90010458:	f040 809f 	bne.w	9001059a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9001045c:	9b01      	ldr	r3, [sp, #4]
9001045e:	2b00      	cmp	r3, #0
90010460:	f47f af51 	bne.w	90010306 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
90010464:	2f00      	cmp	r7, #0
90010466:	f000 808c 	beq.w	90010582 <xQueueSemaphoreTake+0x2ca>
9001046a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001046e:	f383 8811 	msr	BASEPRI, r3
90010472:	f3bf 8f6f 	isb	sy
90010476:	f3bf 8f4f 	dsb	sy
9001047a:	e7fe      	b.n	9001047a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9001047c:	23ff      	movs	r3, #255	@ 0xff
9001047e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010482:	f7ff f891 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010486:	f7ff f86d 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001048a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001048e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010490:	2d00      	cmp	r5, #0
90010492:	dd10      	ble.n	900104b6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010494:	f104 0910 	add.w	r9, r4, #16
90010498:	e003      	b.n	900104a2 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9001049a:	1e6b      	subs	r3, r5, #1
9001049c:	b2da      	uxtb	r2, r3
9001049e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900104a0:	b14a      	cbz	r2, 900104b6 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900104a2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900104a4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900104a6:	b133      	cbz	r3, 900104b6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900104a8:	f000 ffda 	bl	90011460 <xTaskRemoveFromEventList>
900104ac:	2800      	cmp	r0, #0
900104ae:	d0f4      	beq.n	9001049a <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
900104b0:	f001 f86a 	bl	90011588 <vTaskMissedYield>
900104b4:	e7f1      	b.n	9001049a <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
900104b6:	23ff      	movs	r3, #255	@ 0xff
900104b8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900104bc:	f7ff f874 	bl	9000f5a8 <vPortExitCritical>
				( void ) xTaskResumeAll();
900104c0:	f000 fea6 	bl	90011210 <xTaskResumeAll>
900104c4:	e7c4      	b.n	90010450 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
900104c6:	f7ff f86f 	bl	9000f5a8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900104ca:	6823      	ldr	r3, [r4, #0]
900104cc:	2b00      	cmp	r3, #0
900104ce:	d05b      	beq.n	90010588 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900104d0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
900104d4:	9901      	ldr	r1, [sp, #4]
900104d6:	4648      	mov	r0, r9
900104d8:	f000 ff34 	bl	90011344 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900104dc:	f7ff f842 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900104e0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900104e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900104e6:	2d00      	cmp	r5, #0
900104e8:	dc04      	bgt.n	900104f4 <xQueueSemaphoreTake+0x23c>
900104ea:	e00d      	b.n	90010508 <xQueueSemaphoreTake+0x250>
			--cTxLock;
900104ec:	1e6b      	subs	r3, r5, #1
900104ee:	b2da      	uxtb	r2, r3
900104f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900104f2:	b14a      	cbz	r2, 90010508 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900104f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900104f6:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900104f8:	b133      	cbz	r3, 90010508 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900104fa:	f000 ffb1 	bl	90011460 <xTaskRemoveFromEventList>
900104fe:	2800      	cmp	r0, #0
90010500:	d0f4      	beq.n	900104ec <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
90010502:	f001 f841 	bl	90011588 <vTaskMissedYield>
90010506:	e7f1      	b.n	900104ec <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
90010508:	23ff      	movs	r3, #255	@ 0xff
9001050a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001050e:	f7ff f84b 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010512:	f7ff f827 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010516:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001051a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001051c:	2d00      	cmp	r5, #0
9001051e:	dd10      	ble.n	90010542 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010520:	f104 0910 	add.w	r9, r4, #16
90010524:	e003      	b.n	9001052e <xQueueSemaphoreTake+0x276>
				--cRxLock;
90010526:	1e6b      	subs	r3, r5, #1
90010528:	b2da      	uxtb	r2, r3
9001052a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001052c:	b14a      	cbz	r2, 90010542 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001052e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010530:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010532:	b133      	cbz	r3, 90010542 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010534:	f000 ff94 	bl	90011460 <xTaskRemoveFromEventList>
90010538:	2800      	cmp	r0, #0
9001053a:	d0f4      	beq.n	90010526 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9001053c:	f001 f824 	bl	90011588 <vTaskMissedYield>
90010540:	e7f1      	b.n	90010526 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
90010542:	23ff      	movs	r3, #255	@ 0xff
90010544:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010548:	f7ff f82e 	bl	9000f5a8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9001054c:	f000 fe60 	bl	90011210 <xTaskResumeAll>
90010550:	2800      	cmp	r0, #0
90010552:	f47f af7d 	bne.w	90010450 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
90010556:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001055a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001055e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010562:	f3bf 8f4f 	dsb	sy
90010566:	f3bf 8f6f 	isb	sy
9001056a:	e771      	b.n	90010450 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9001056c:	f7fe fffa 	bl	9000f564 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90010570:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90010572:	b119      	cbz	r1, 9001057c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90010574:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010576:	6819      	ldr	r1, [r3, #0]
90010578:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9001057c:	68a0      	ldr	r0, [r4, #8]
9001057e:	f001 f89d 	bl	900116bc <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90010582:	f7ff f811 	bl	9000f5a8 <vPortExitCritical>
90010586:	e75d      	b.n	90010444 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90010588:	f7fe ffec 	bl	9000f564 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9001058c:	68a0      	ldr	r0, [r4, #8]
9001058e:	f001 f811 	bl	900115b4 <xTaskPriorityInherit>
90010592:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90010594:	f7ff f808 	bl	9000f5a8 <vPortExitCritical>
90010598:	e79a      	b.n	900104d0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001059a:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9001059c:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001059e:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900105a0:	b12b      	cbz	r3, 900105ae <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105a2:	6923      	ldr	r3, [r4, #16]
900105a4:	b93b      	cbnz	r3, 900105b6 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
900105a6:	f7fe ffff 	bl	9000f5a8 <vPortExitCritical>
				return pdPASS;
900105aa:	2001      	movs	r0, #1
900105ac:	e74b      	b.n	90010446 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
900105ae:	f001 f8d5 	bl	9001175c <pvTaskIncrementMutexHeldCount>
900105b2:	60a0      	str	r0, [r4, #8]
900105b4:	e7f5      	b.n	900105a2 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105b6:	f104 0010 	add.w	r0, r4, #16
900105ba:	f000 ff51 	bl	90011460 <xTaskRemoveFromEventList>
900105be:	2800      	cmp	r0, #0
900105c0:	d0f1      	beq.n	900105a6 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
900105c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900105c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900105ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900105ce:	f3bf 8f4f 	dsb	sy
900105d2:	f3bf 8f6f 	isb	sy
900105d6:	e7e6      	b.n	900105a6 <xQueueSemaphoreTake+0x2ee>

900105d8 <xQueueReceiveFromISR>:
{
900105d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
900105dc:	b310      	cbz	r0, 90010624 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900105de:	460f      	mov	r7, r1
900105e0:	4604      	mov	r4, r0
900105e2:	4616      	mov	r6, r2
900105e4:	b191      	cbz	r1, 9001060c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900105e6:	f7ff f8ef 	bl	9000f7c8 <vPortValidateInterruptPriority>
	__asm volatile
900105ea:	f3ef 8911 	mrs	r9, BASEPRI
900105ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105f2:	f383 8811 	msr	BASEPRI, r3
900105f6:	f3bf 8f6f 	isb	sy
900105fa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900105fe:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010600:	b9cd      	cbnz	r5, 90010636 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90010602:	4628      	mov	r0, r5
	__asm volatile
90010604:	f389 8811 	msr	BASEPRI, r9
}
90010608:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001060c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001060e:	2b00      	cmp	r3, #0
90010610:	d0e9      	beq.n	900105e6 <xQueueReceiveFromISR+0xe>
	__asm volatile
90010612:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010616:	f383 8811 	msr	BASEPRI, r3
9001061a:	f3bf 8f6f 	isb	sy
9001061e:	f3bf 8f4f 	dsb	sy
90010622:	e7fe      	b.n	90010622 <xQueueReceiveFromISR+0x4a>
90010624:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010628:	f383 8811 	msr	BASEPRI, r3
9001062c:	f3bf 8f6f 	isb	sy
90010630:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010634:	e7fe      	b.n	90010634 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90010636:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001063a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001063c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010640:	b142      	cbz	r2, 90010654 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010642:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010644:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010646:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010648:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001064a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001064c:	d21c      	bcs.n	90010688 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001064e:	4638      	mov	r0, r7
90010650:	f01b fb81 	bl	9002bd56 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010654:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90010656:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001065a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9001065c:	d006      	beq.n	9001066c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9001065e:	f108 0301 	add.w	r3, r8, #1
90010662:	b25b      	sxtb	r3, r3
90010664:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
90010668:	2001      	movs	r0, #1
9001066a:	e7cb      	b.n	90010604 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001066c:	6923      	ldr	r3, [r4, #16]
9001066e:	2b00      	cmp	r3, #0
90010670:	d0fa      	beq.n	90010668 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010672:	f104 0010 	add.w	r0, r4, #16
90010676:	f000 fef3 	bl	90011460 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9001067a:	2e00      	cmp	r6, #0
9001067c:	d0f4      	beq.n	90010668 <xQueueReceiveFromISR+0x90>
9001067e:	2800      	cmp	r0, #0
90010680:	d0f2      	beq.n	90010668 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90010682:	2301      	movs	r3, #1
90010684:	6033      	str	r3, [r6, #0]
90010686:	e7ef      	b.n	90010668 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010688:	6821      	ldr	r1, [r4, #0]
9001068a:	60e1      	str	r1, [r4, #12]
9001068c:	e7df      	b.n	9001064e <xQueueReceiveFromISR+0x76>
9001068e:	bf00      	nop

90010690 <vQueueDelete>:
	configASSERT( pxQueue );
90010690:	b1e0      	cbz	r0, 900106cc <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90010692:	4b21      	ldr	r3, [pc, #132]	@ (90010718 <vQueueDelete+0x88>)
90010694:	685a      	ldr	r2, [r3, #4]
90010696:	4290      	cmp	r0, r2
90010698:	d02b      	beq.n	900106f2 <vQueueDelete+0x62>
9001069a:	68da      	ldr	r2, [r3, #12]
9001069c:	4290      	cmp	r0, r2
9001069e:	d02a      	beq.n	900106f6 <vQueueDelete+0x66>
900106a0:	695a      	ldr	r2, [r3, #20]
900106a2:	4290      	cmp	r0, r2
900106a4:	d029      	beq.n	900106fa <vQueueDelete+0x6a>
900106a6:	69da      	ldr	r2, [r3, #28]
900106a8:	4290      	cmp	r0, r2
900106aa:	d028      	beq.n	900106fe <vQueueDelete+0x6e>
900106ac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900106ae:	4290      	cmp	r0, r2
900106b0:	d027      	beq.n	90010702 <vQueueDelete+0x72>
900106b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900106b4:	4290      	cmp	r0, r2
900106b6:	d014      	beq.n	900106e2 <vQueueDelete+0x52>
900106b8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900106ba:	4290      	cmp	r0, r2
900106bc:	d023      	beq.n	90010706 <vQueueDelete+0x76>
900106be:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
900106c0:	4290      	cmp	r0, r2
900106c2:	d022      	beq.n	9001070a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
900106c4:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
900106c8:	b14b      	cbz	r3, 900106de <vQueueDelete+0x4e>
}
900106ca:	4770      	bx	lr
900106cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106d0:	f383 8811 	msr	BASEPRI, r3
900106d4:	f3bf 8f6f 	isb	sy
900106d8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900106dc:	e7fe      	b.n	900106dc <vQueueDelete+0x4c>
			vPortFree( pxQueue );
900106de:	f7fe be1f 	b.w	9000f320 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900106e2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
900106e4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900106e8:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 90010710 <vQueueDelete+0x80>
900106ec:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
900106f0:	e7e8      	b.n	900106c4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900106f2:	2200      	movs	r2, #0
900106f4:	e7f6      	b.n	900106e4 <vQueueDelete+0x54>
900106f6:	2201      	movs	r2, #1
900106f8:	e7f4      	b.n	900106e4 <vQueueDelete+0x54>
900106fa:	2202      	movs	r2, #2
900106fc:	e7f2      	b.n	900106e4 <vQueueDelete+0x54>
900106fe:	2203      	movs	r2, #3
90010700:	e7f0      	b.n	900106e4 <vQueueDelete+0x54>
90010702:	2204      	movs	r2, #4
90010704:	e7ee      	b.n	900106e4 <vQueueDelete+0x54>
90010706:	2206      	movs	r2, #6
90010708:	e7ec      	b.n	900106e4 <vQueueDelete+0x54>
9001070a:	2207      	movs	r2, #7
9001070c:	e7ea      	b.n	900106e4 <vQueueDelete+0x54>
9001070e:	bf00      	nop
	...
90010718:	24021258 	.word	0x24021258

9001071c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9001071c:	4b12      	ldr	r3, [pc, #72]	@ (90010768 <vQueueAddToRegistry+0x4c>)
9001071e:	681a      	ldr	r2, [r3, #0]
90010720:	b17a      	cbz	r2, 90010742 <vQueueAddToRegistry+0x26>
90010722:	689a      	ldr	r2, [r3, #8]
90010724:	b162      	cbz	r2, 90010740 <vQueueAddToRegistry+0x24>
90010726:	691a      	ldr	r2, [r3, #16]
90010728:	b192      	cbz	r2, 90010750 <vQueueAddToRegistry+0x34>
9001072a:	699a      	ldr	r2, [r3, #24]
9001072c:	b192      	cbz	r2, 90010754 <vQueueAddToRegistry+0x38>
9001072e:	6a1a      	ldr	r2, [r3, #32]
90010730:	b192      	cbz	r2, 90010758 <vQueueAddToRegistry+0x3c>
90010732:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90010734:	b192      	cbz	r2, 9001075c <vQueueAddToRegistry+0x40>
90010736:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90010738:	b192      	cbz	r2, 90010760 <vQueueAddToRegistry+0x44>
9001073a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9001073c:	b192      	cbz	r2, 90010764 <vQueueAddToRegistry+0x48>
	}
9001073e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010740:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
90010742:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
90010746:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9001074a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9001074e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90010750:	2202      	movs	r2, #2
90010752:	e7f6      	b.n	90010742 <vQueueAddToRegistry+0x26>
90010754:	2203      	movs	r2, #3
90010756:	e7f4      	b.n	90010742 <vQueueAddToRegistry+0x26>
90010758:	2204      	movs	r2, #4
9001075a:	e7f2      	b.n	90010742 <vQueueAddToRegistry+0x26>
9001075c:	2205      	movs	r2, #5
9001075e:	e7f0      	b.n	90010742 <vQueueAddToRegistry+0x26>
90010760:	2206      	movs	r2, #6
90010762:	e7ee      	b.n	90010742 <vQueueAddToRegistry+0x26>
90010764:	2207      	movs	r2, #7
90010766:	e7ec      	b.n	90010742 <vQueueAddToRegistry+0x26>
90010768:	24021258 	.word	0x24021258

9001076c <vQueueUnregisterQueue>:
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9001076c:	4b17      	ldr	r3, [pc, #92]	@ (900107cc <vQueueUnregisterQueue+0x60>)
9001076e:	685a      	ldr	r2, [r3, #4]
90010770:	4290      	cmp	r0, r2
90010772:	d015      	beq.n	900107a0 <vQueueUnregisterQueue+0x34>
90010774:	68da      	ldr	r2, [r3, #12]
90010776:	4290      	cmp	r0, r2
90010778:	d01a      	beq.n	900107b0 <vQueueUnregisterQueue+0x44>
9001077a:	695a      	ldr	r2, [r3, #20]
9001077c:	4290      	cmp	r0, r2
9001077e:	d019      	beq.n	900107b4 <vQueueUnregisterQueue+0x48>
90010780:	69da      	ldr	r2, [r3, #28]
90010782:	4290      	cmp	r0, r2
90010784:	d018      	beq.n	900107b8 <vQueueUnregisterQueue+0x4c>
90010786:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90010788:	4290      	cmp	r0, r2
9001078a:	d017      	beq.n	900107bc <vQueueUnregisterQueue+0x50>
9001078c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9001078e:	4290      	cmp	r0, r2
90010790:	d016      	beq.n	900107c0 <vQueueUnregisterQueue+0x54>
90010792:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90010794:	4290      	cmp	r0, r2
90010796:	d015      	beq.n	900107c4 <vQueueUnregisterQueue+0x58>
90010798:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9001079a:	4282      	cmp	r2, r0
9001079c:	d014      	beq.n	900107c8 <vQueueUnregisterQueue+0x5c>
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9001079e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900107a0:	2200      	movs	r2, #0
				xQueueRegistry[ ux ].pcQueueName = NULL;
900107a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900107a6:	2000      	movs	r0, #0
900107a8:	2100      	movs	r1, #0
900107aa:	e9c3 0100 	strd	r0, r1, [r3]
	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
900107ae:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900107b0:	2201      	movs	r2, #1
900107b2:	e7f6      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107b4:	2202      	movs	r2, #2
900107b6:	e7f4      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107b8:	2203      	movs	r2, #3
900107ba:	e7f2      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107bc:	2204      	movs	r2, #4
900107be:	e7f0      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107c0:	2205      	movs	r2, #5
900107c2:	e7ee      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107c4:	2206      	movs	r2, #6
900107c6:	e7ec      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107c8:	2207      	movs	r2, #7
900107ca:	e7ea      	b.n	900107a2 <vQueueUnregisterQueue+0x36>
900107cc:	24021258 	.word	0x24021258

900107d0 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900107d0:	b570      	push	{r4, r5, r6, lr}
900107d2:	4605      	mov	r5, r0
900107d4:	460e      	mov	r6, r1
900107d6:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
900107d8:	f7fe fec4 	bl	9000f564 <vPortEnterCritical>
900107dc:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
900107e0:	2bff      	cmp	r3, #255	@ 0xff
900107e2:	d102      	bne.n	900107ea <vQueueWaitForMessageRestricted+0x1a>
900107e4:	2300      	movs	r3, #0
900107e6:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
900107ea:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
900107ee:	2bff      	cmp	r3, #255	@ 0xff
900107f0:	d102      	bne.n	900107f8 <vQueueWaitForMessageRestricted+0x28>
900107f2:	2300      	movs	r3, #0
900107f4:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
900107f8:	f7fe fed6 	bl	9000f5a8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
900107fc:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900107fe:	2b00      	cmp	r3, #0
90010800:	d043      	beq.n	9001088a <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90010802:	f7fe feaf 	bl	9000f564 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010806:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9001080a:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001080c:	2c00      	cmp	r4, #0
9001080e:	dd14      	ble.n	9001083a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010810:	f105 0624 	add.w	r6, r5, #36	@ 0x24
90010814:	e003      	b.n	9001081e <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
90010816:	1e63      	subs	r3, r4, #1
90010818:	b2da      	uxtb	r2, r3
9001081a:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001081c:	b16a      	cbz	r2, 9001083a <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001081e:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010820:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010822:	b153      	cbz	r3, 9001083a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010824:	f000 fe1c 	bl	90011460 <xTaskRemoveFromEventList>
90010828:	2800      	cmp	r0, #0
9001082a:	d0f4      	beq.n	90010816 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9001082c:	f000 feac 	bl	90011588 <vTaskMissedYield>
			--cTxLock;
90010830:	1e63      	subs	r3, r4, #1
90010832:	b2da      	uxtb	r2, r3
90010834:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010836:	2a00      	cmp	r2, #0
90010838:	d1f1      	bne.n	9001081e <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001083a:	23ff      	movs	r3, #255	@ 0xff
9001083c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010840:	f7fe feb2 	bl	9000f5a8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010844:	f7fe fe8e 	bl	9000f564 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010848:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9001084c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001084e:	2c00      	cmp	r4, #0
90010850:	dd14      	ble.n	9001087c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010852:	f105 0610 	add.w	r6, r5, #16
90010856:	e003      	b.n	90010860 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
90010858:	1e63      	subs	r3, r4, #1
9001085a:	b2da      	uxtb	r2, r3
9001085c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001085e:	b16a      	cbz	r2, 9001087c <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010860:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010862:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010864:	b153      	cbz	r3, 9001087c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010866:	f000 fdfb 	bl	90011460 <xTaskRemoveFromEventList>
9001086a:	2800      	cmp	r0, #0
9001086c:	d0f4      	beq.n	90010858 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9001086e:	f000 fe8b 	bl	90011588 <vTaskMissedYield>
				--cRxLock;
90010872:	1e63      	subs	r3, r4, #1
90010874:	b2da      	uxtb	r2, r3
90010876:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010878:	2a00      	cmp	r2, #0
9001087a:	d1f1      	bne.n	90010860 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9001087c:	23ff      	movs	r3, #255	@ 0xff
9001087e:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90010882:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
90010886:	f7fe be8f 	b.w	9000f5a8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001088a:	4622      	mov	r2, r4
9001088c:	4631      	mov	r1, r6
9001088e:	f105 0024 	add.w	r0, r5, #36	@ 0x24
90010892:	f000 fd9b 	bl	900113cc <vTaskPlaceOnEventListRestricted>
90010896:	e7b4      	b.n	90010802 <vQueueWaitForMessageRestricted+0x32>

90010898 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
90010898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001089c:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9001089e:	f7fe fe61 	bl	9000f564 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900108a2:	4a33      	ldr	r2, [pc, #204]	@ (90010970 <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
900108a4:	4e33      	ldr	r6, [pc, #204]	@ (90010974 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
900108a6:	6813      	ldr	r3, [r2, #0]
900108a8:	3301      	adds	r3, #1
900108aa:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900108ac:	6833      	ldr	r3, [r6, #0]
900108ae:	2b00      	cmp	r3, #0
900108b0:	d031      	beq.n	90010916 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900108b2:	4c31      	ldr	r4, [pc, #196]	@ (90010978 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900108b4:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
900108b6:	6823      	ldr	r3, [r4, #0]
900108b8:	b333      	cbz	r3, 90010908 <prvAddNewTaskToReadyList+0x70>
900108ba:	4f30      	ldr	r7, [pc, #192]	@ (9001097c <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900108bc:	4a30      	ldr	r2, [pc, #192]	@ (90010980 <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900108be:	4931      	ldr	r1, [pc, #196]	@ (90010984 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
900108c0:	6813      	ldr	r3, [r2, #0]
900108c2:	3301      	adds	r3, #1
900108c4:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900108c6:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
900108c8:	680b      	ldr	r3, [r1, #0]
900108ca:	4283      	cmp	r3, r0
900108cc:	d200      	bcs.n	900108d0 <prvAddNewTaskToReadyList+0x38>
900108ce:	6008      	str	r0, [r1, #0]
900108d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900108d4:	1d29      	adds	r1, r5, #4
900108d6:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900108da:	f7fe fd9b 	bl	9000f414 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
900108de:	f7fe fe63 	bl	9000f5a8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
900108e2:	6823      	ldr	r3, [r4, #0]
900108e4:	b173      	cbz	r3, 90010904 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
900108e6:	6832      	ldr	r2, [r6, #0]
900108e8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
900108ea:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900108ec:	429a      	cmp	r2, r3
900108ee:	d209      	bcs.n	90010904 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
900108f0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900108f4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900108f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900108fc:	f3bf 8f4f 	dsb	sy
90010900:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90010904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90010908:	6833      	ldr	r3, [r6, #0]
9001090a:	4f1c      	ldr	r7, [pc, #112]	@ (9001097c <prvAddNewTaskToReadyList+0xe4>)
9001090c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001090e:	4283      	cmp	r3, r0
90010910:	d8d4      	bhi.n	900108bc <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90010912:	6035      	str	r5, [r6, #0]
90010914:	e7d2      	b.n	900108bc <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
90010916:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90010918:	6813      	ldr	r3, [r2, #0]
9001091a:	2b01      	cmp	r3, #1
9001091c:	d003      	beq.n	90010926 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001091e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90010920:	4f16      	ldr	r7, [pc, #88]	@ (9001097c <prvAddNewTaskToReadyList+0xe4>)
90010922:	4c15      	ldr	r4, [pc, #84]	@ (90010978 <prvAddNewTaskToReadyList+0xe0>)
90010924:	e7ca      	b.n	900108bc <prvAddNewTaskToReadyList+0x24>
90010926:	4f15      	ldr	r7, [pc, #84]	@ (9001097c <prvAddNewTaskToReadyList+0xe4>)
90010928:	463c      	mov	r4, r7
9001092a:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9001092e:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90010930:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90010932:	f7fe fd5f 	bl	9000f3f4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90010936:	45a0      	cmp	r8, r4
90010938:	d1f9      	bne.n	9001092e <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9001093a:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 900109a0 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9001093e:	4c12      	ldr	r4, [pc, #72]	@ (90010988 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
90010940:	4640      	mov	r0, r8
90010942:	f7fe fd57 	bl	9000f3f4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90010946:	4620      	mov	r0, r4
90010948:	f7fe fd54 	bl	9000f3f4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9001094c:	480f      	ldr	r0, [pc, #60]	@ (9001098c <prvAddNewTaskToReadyList+0xf4>)
9001094e:	f7fe fd51 	bl	9000f3f4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
90010952:	480f      	ldr	r0, [pc, #60]	@ (90010990 <prvAddNewTaskToReadyList+0xf8>)
90010954:	f7fe fd4e 	bl	9000f3f4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90010958:	480e      	ldr	r0, [pc, #56]	@ (90010994 <prvAddNewTaskToReadyList+0xfc>)
9001095a:	f7fe fd4b 	bl	9000f3f4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9001095e:	4b0e      	ldr	r3, [pc, #56]	@ (90010998 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90010960:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
90010962:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90010966:	4b0d      	ldr	r3, [pc, #52]	@ (9001099c <prvAddNewTaskToReadyList+0x104>)
90010968:	601c      	str	r4, [r3, #0]
9001096a:	4c03      	ldr	r4, [pc, #12]	@ (90010978 <prvAddNewTaskToReadyList+0xe0>)
}
9001096c:	e7a6      	b.n	900108bc <prvAddNewTaskToReadyList+0x24>
9001096e:	bf00      	nop
90010970:	240212bc 	.word	0x240212bc
90010974:	24021790 	.word	0x24021790
90010978:	240212b0 	.word	0x240212b0
9001097c:	24021330 	.word	0x24021330
90010980:	240212a0 	.word	0x240212a0
90010984:	240212b4 	.word	0x240212b4
90010988:	24021308 	.word	0x24021308
9001098c:	240212ec 	.word	0x240212ec
90010990:	240212d8 	.word	0x240212d8
90010994:	240212c0 	.word	0x240212c0
90010998:	24021304 	.word	0x24021304
9001099c:	24021300 	.word	0x24021300
900109a0:	2402131c 	.word	0x2402131c

900109a4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900109a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900109a8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900109aa:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900109ac:	4607      	mov	r7, r0
900109ae:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900109b0:	4632      	mov	r2, r6
900109b2:	21a5      	movs	r1, #165	@ 0xa5
900109b4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900109b6:	4698      	mov	r8, r3
900109b8:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900109bc:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900109be:	f01b f88b 	bl	9002bad8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900109c2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900109c4:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900109c6:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
900109ca:	2d00      	cmp	r5, #0
900109cc:	d074      	beq.n	90010ab8 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109ce:	782b      	ldrb	r3, [r5, #0]
900109d0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
900109d4:	2b00      	cmp	r3, #0
900109d6:	d036      	beq.n	90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109d8:	786b      	ldrb	r3, [r5, #1]
900109da:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
900109de:	b393      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109e0:	78ab      	ldrb	r3, [r5, #2]
900109e2:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
900109e6:	b373      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109e8:	78eb      	ldrb	r3, [r5, #3]
900109ea:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
900109ee:	b353      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109f0:	792b      	ldrb	r3, [r5, #4]
900109f2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
900109f6:	b333      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900109f8:	796b      	ldrb	r3, [r5, #5]
900109fa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900109fe:	b313      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a00:	79ab      	ldrb	r3, [r5, #6]
90010a02:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90010a06:	b1f3      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a08:	79eb      	ldrb	r3, [r5, #7]
90010a0a:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010a0e:	b1d3      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a10:	7a2b      	ldrb	r3, [r5, #8]
90010a12:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90010a16:	b1b3      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a18:	7a6b      	ldrb	r3, [r5, #9]
90010a1a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90010a1e:	b193      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a20:	7aab      	ldrb	r3, [r5, #10]
90010a22:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90010a26:	b173      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a28:	7aeb      	ldrb	r3, [r5, #11]
90010a2a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90010a2e:	b153      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a30:	7b2b      	ldrb	r3, [r5, #12]
90010a32:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90010a36:	b133      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a38:	7b6b      	ldrb	r3, [r5, #13]
90010a3a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90010a3e:	b113      	cbz	r3, 90010a46 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010a40:	7bab      	ldrb	r3, [r5, #14]
90010a42:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010a46:	2300      	movs	r3, #0
90010a48:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010a4c:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90010a4e:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010a52:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010a54:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90010a56:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010a5a:	bf28      	it	cs
90010a5c:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
90010a5e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90010a60:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a62:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010a66:	f7fe fcd1 	bl	9000f40c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010a6a:	f104 0018 	add.w	r0, r4, #24
90010a6e:	f7fe fccd 	bl	9000f40c <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90010a72:	4651      	mov	r1, sl
90010a74:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a76:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
90010a78:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90010a7c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90010a80:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90010a82:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90010a84:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010a88:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90010a8c:	f01b f824 	bl	9002bad8 <memset>
90010a90:	4b0b      	ldr	r3, [pc, #44]	@ (90010ac0 <prvInitialiseNewTask.constprop.0+0x11c>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a92:	4642      	mov	r2, r8
90010a94:	4639      	mov	r1, r7
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90010a96:	f103 0568 	add.w	r5, r3, #104	@ 0x68
90010a9a:	65e3      	str	r3, [r4, #92]	@ 0x5c
90010a9c:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010a9e:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90010aa0:	6625      	str	r5, [r4, #96]	@ 0x60
90010aa2:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010aa4:	f7fe fd2e 	bl	9000f504 <pxPortInitialiseStack>
90010aa8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90010aaa:	f1b9 0f00 	cmp.w	r9, #0
90010aae:	d001      	beq.n	90010ab4 <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90010ab0:	f8c9 4000 	str.w	r4, [r9]
}
90010ab4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90010ab8:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90010abc:	e7c6      	b.n	90010a4c <prvInitialiseNewTask.constprop.0+0xa8>
90010abe:	bf00      	nop
90010ac0:	24022330 	.word	0x24022330

90010ac4 <prvIdleTask>:
{
90010ac4:	b580      	push	{r7, lr}
90010ac6:	4d24      	ldr	r5, [pc, #144]	@ (90010b58 <prvIdleTask+0x94>)
90010ac8:	4f24      	ldr	r7, [pc, #144]	@ (90010b5c <prvIdleTask+0x98>)
90010aca:	4e25      	ldr	r6, [pc, #148]	@ (90010b60 <prvIdleTask+0x9c>)
90010acc:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 90010b64 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90010ad0:	682b      	ldr	r3, [r5, #0]
90010ad2:	b35b      	cbz	r3, 90010b2c <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
90010ad4:	f7fe fd46 	bl	9000f564 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010ad8:	68fb      	ldr	r3, [r7, #12]
90010ada:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010adc:	1d20      	adds	r0, r4, #4
90010ade:	f7fe fcbf 	bl	9000f460 <uxListRemove>
				--uxCurrentNumberOfTasks;
90010ae2:	6833      	ldr	r3, [r6, #0]
90010ae4:	3b01      	subs	r3, #1
90010ae6:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
90010ae8:	682b      	ldr	r3, [r5, #0]
90010aea:	3b01      	subs	r3, #1
90010aec:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
90010aee:	f7fe fd5b 	bl	9000f5a8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90010af2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90010af6:	f01b f849 	bl	9002bb8c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90010afa:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
90010afe:	b163      	cbz	r3, 90010b1a <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90010b00:	2b01      	cmp	r3, #1
90010b02:	d024      	beq.n	90010b4e <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90010b04:	2b02      	cmp	r3, #2
90010b06:	d0e3      	beq.n	90010ad0 <prvIdleTask+0xc>
90010b08:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010b0c:	f383 8811 	msr	BASEPRI, r3
90010b10:	f3bf 8f6f 	isb	sy
90010b14:	f3bf 8f4f 	dsb	sy
90010b18:	e7fe      	b.n	90010b18 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
90010b1a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90010b1c:	f7fe fc00 	bl	9000f320 <vPortFree>
				vPortFree( pxTCB );
90010b20:	4620      	mov	r0, r4
90010b22:	f7fe fbfd 	bl	9000f320 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90010b26:	682b      	ldr	r3, [r5, #0]
90010b28:	2b00      	cmp	r3, #0
90010b2a:	d1d3      	bne.n	90010ad4 <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90010b2c:	f8d8 3000 	ldr.w	r3, [r8]
90010b30:	2b01      	cmp	r3, #1
90010b32:	d909      	bls.n	90010b48 <prvIdleTask+0x84>
				taskYIELD();
90010b34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010b38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010b3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010b40:	f3bf 8f4f 	dsb	sy
90010b44:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90010b48:	f7f2 ffd4 	bl	90003af4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90010b4c:	e7c0      	b.n	90010ad0 <prvIdleTask+0xc>
				vPortFree( pxTCB );
90010b4e:	4620      	mov	r0, r4
90010b50:	f7fe fbe6 	bl	9000f320 <vPortFree>
90010b54:	e7bc      	b.n	90010ad0 <prvIdleTask+0xc>
90010b56:	bf00      	nop
90010b58:	240212d4 	.word	0x240212d4
90010b5c:	240212d8 	.word	0x240212d8
90010b60:	240212bc 	.word	0x240212bc
90010b64:	24021330 	.word	0x24021330

90010b68 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010b68:	4b49      	ldr	r3, [pc, #292]	@ (90010c90 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
90010b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010b6e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90010b70:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010b72:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90010b74:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90010b76:	2e00      	cmp	r6, #0
90010b78:	d03e      	beq.n	90010bf8 <xTaskIncrementTick.part.0+0x90>
90010b7a:	4b46      	ldr	r3, [pc, #280]	@ (90010c94 <xTaskIncrementTick.part.0+0x12c>)
90010b7c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
90010b7e:	681b      	ldr	r3, [r3, #0]
90010b80:	429e      	cmp	r6, r3
90010b82:	d346      	bcc.n	90010c12 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010b84:	4f44      	ldr	r7, [pc, #272]	@ (90010c98 <xTaskIncrementTick.part.0+0x130>)
90010b86:	683b      	ldr	r3, [r7, #0]
90010b88:	681d      	ldr	r5, [r3, #0]
90010b8a:	2d00      	cmp	r5, #0
90010b8c:	d077      	beq.n	90010c7e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
90010b8e:	2500      	movs	r5, #0
90010b90:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 90010ca8 <xTaskIncrementTick.part.0+0x140>
90010b94:	f8df a114 	ldr.w	sl, [pc, #276]	@ 90010cac <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
90010b98:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 90010cb0 <xTaskIncrementTick.part.0+0x148>
90010b9c:	e020      	b.n	90010be0 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010b9e:	f7fe fc5f 	bl	9000f460 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010ba2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010ba4:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010ba8:	b10b      	cbz	r3, 90010bae <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010baa:	f7fe fc59 	bl	9000f460 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90010bae:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90010bb0:	4659      	mov	r1, fp
90010bb2:	f8d8 2000 	ldr.w	r2, [r8]
90010bb6:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90010bba:	4293      	cmp	r3, r2
90010bbc:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010bc0:	d901      	bls.n	90010bc6 <xTaskIncrementTick.part.0+0x5e>
90010bc2:	f8c8 3000 	str.w	r3, [r8]
90010bc6:	f7fe fc25 	bl	9000f414 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010bca:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010bce:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010bd0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90010bd2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010bd4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
90010bd6:	4291      	cmp	r1, r2
90010bd8:	bf28      	it	cs
90010bda:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010bdc:	2b00      	cmp	r3, #0
90010bde:	d052      	beq.n	90010c86 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010be0:	683b      	ldr	r3, [r7, #0]
90010be2:	68db      	ldr	r3, [r3, #12]
90010be4:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90010be6:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010be8:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
90010bec:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010bee:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90010bf0:	d2d5      	bcs.n	90010b9e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90010bf2:	9a01      	ldr	r2, [sp, #4]
90010bf4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90010bf6:	e011      	b.n	90010c1c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90010bf8:	4b27      	ldr	r3, [pc, #156]	@ (90010c98 <xTaskIncrementTick.part.0+0x130>)
90010bfa:	681a      	ldr	r2, [r3, #0]
90010bfc:	6812      	ldr	r2, [r2, #0]
90010bfe:	b30a      	cbz	r2, 90010c44 <xTaskIncrementTick.part.0+0xdc>
90010c00:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c04:	f383 8811 	msr	BASEPRI, r3
90010c08:	f3bf 8f6f 	isb	sy
90010c0c:	f3bf 8f4f 	dsb	sy
90010c10:	e7fe      	b.n	90010c10 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90010c12:	2500      	movs	r5, #0
90010c14:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 90010ca8 <xTaskIncrementTick.part.0+0x140>
90010c18:	f8df a090 	ldr.w	sl, [pc, #144]	@ 90010cac <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010c1c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90010c20:	491e      	ldr	r1, [pc, #120]	@ (90010c9c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010c22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010c24:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010c28:	009b      	lsls	r3, r3, #2
90010c2a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90010c2e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90010c30:	2a02      	cmp	r2, #2
90010c32:	bf28      	it	cs
90010c34:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90010c36:	2b00      	cmp	r3, #0
}
90010c38:	bf0c      	ite	eq
90010c3a:	4628      	moveq	r0, r5
90010c3c:	2001      	movne	r0, #1
90010c3e:	b003      	add	sp, #12
90010c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90010c44:	4a16      	ldr	r2, [pc, #88]	@ (90010ca0 <xTaskIncrementTick.part.0+0x138>)
90010c46:	6818      	ldr	r0, [r3, #0]
90010c48:	6811      	ldr	r1, [r2, #0]
90010c4a:	6019      	str	r1, [r3, #0]
90010c4c:	4915      	ldr	r1, [pc, #84]	@ (90010ca4 <xTaskIncrementTick.part.0+0x13c>)
90010c4e:	6010      	str	r0, [r2, #0]
90010c50:	680a      	ldr	r2, [r1, #0]
90010c52:	3201      	adds	r2, #1
90010c54:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010c56:	681a      	ldr	r2, [r3, #0]
90010c58:	6812      	ldr	r2, [r2, #0]
90010c5a:	b93a      	cbnz	r2, 90010c6c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90010c5c:	4b0d      	ldr	r3, [pc, #52]	@ (90010c94 <xTaskIncrementTick.part.0+0x12c>)
90010c5e:	461a      	mov	r2, r3
90010c60:	9301      	str	r3, [sp, #4]
90010c62:	f04f 33ff 	mov.w	r3, #4294967295
90010c66:	6013      	str	r3, [r2, #0]
90010c68:	4613      	mov	r3, r2
90010c6a:	e788      	b.n	90010b7e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010c6c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010c6e:	4a09      	ldr	r2, [pc, #36]	@ (90010c94 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010c70:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010c72:	9201      	str	r2, [sp, #4]
90010c74:	68db      	ldr	r3, [r3, #12]
90010c76:	685b      	ldr	r3, [r3, #4]
90010c78:	6013      	str	r3, [r2, #0]
90010c7a:	4613      	mov	r3, r2
	}
}
90010c7c:	e77f      	b.n	90010b7e <xTaskIncrementTick.part.0+0x16>
90010c7e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 90010ca8 <xTaskIncrementTick.part.0+0x140>
90010c82:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90010cac <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c86:	f04f 33ff 	mov.w	r3, #4294967295
90010c8a:	9a01      	ldr	r2, [sp, #4]
90010c8c:	6013      	str	r3, [r2, #0]
					break;
90010c8e:	e7c5      	b.n	90010c1c <xTaskIncrementTick.part.0+0xb4>
90010c90:	240212b8 	.word	0x240212b8
90010c94:	2402129c 	.word	0x2402129c
90010c98:	24021304 	.word	0x24021304
90010c9c:	240212a8 	.word	0x240212a8
90010ca0:	24021300 	.word	0x24021300
90010ca4:	240212a4 	.word	0x240212a4
90010ca8:	24021330 	.word	0x24021330
90010cac:	24021790 	.word	0x24021790
90010cb0:	240212b4 	.word	0x240212b4

90010cb4 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90010cb4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
90010cb8:	4d42      	ldr	r5, [pc, #264]	@ (90010dc4 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
90010cba:	f7fe fc53 	bl	9000f564 <vPortEnterCritical>
		--uxSchedulerSuspended;
90010cbe:	682b      	ldr	r3, [r5, #0]
90010cc0:	3b01      	subs	r3, #1
90010cc2:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010cc4:	682b      	ldr	r3, [r5, #0]
90010cc6:	2b00      	cmp	r3, #0
90010cc8:	d165      	bne.n	90010d96 <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90010cca:	4b3f      	ldr	r3, [pc, #252]	@ (90010dc8 <xTaskResumeAll.part.0+0x114>)
90010ccc:	681b      	ldr	r3, [r3, #0]
90010cce:	2b00      	cmp	r3, #0
90010cd0:	d061      	beq.n	90010d96 <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010cd2:	4e3e      	ldr	r6, [pc, #248]	@ (90010dcc <xTaskResumeAll.part.0+0x118>)
90010cd4:	6833      	ldr	r3, [r6, #0]
90010cd6:	2b00      	cmp	r3, #0
90010cd8:	d070      	beq.n	90010dbc <xTaskResumeAll.part.0+0x108>
90010cda:	4f3d      	ldr	r7, [pc, #244]	@ (90010dd0 <xTaskResumeAll.part.0+0x11c>)
90010cdc:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 90010de0 <xTaskResumeAll.part.0+0x12c>
90010ce0:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 90010de4 <xTaskResumeAll.part.0+0x130>
90010ce4:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90010de8 <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010ce8:	68f3      	ldr	r3, [r6, #12]
90010cea:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010cec:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010cf0:	f104 0018 	add.w	r0, r4, #24
90010cf4:	f7fe fbb4 	bl	9000f460 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010cf8:	4658      	mov	r0, fp
90010cfa:	f7fe fbb1 	bl	9000f460 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90010cfe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90010d00:	683a      	ldr	r2, [r7, #0]
90010d02:	4659      	mov	r1, fp
90010d04:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90010d08:	4293      	cmp	r3, r2
90010d0a:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010d0e:	d900      	bls.n	90010d12 <xTaskResumeAll.part.0+0x5e>
90010d10:	603b      	str	r3, [r7, #0]
90010d12:	f7fe fb7f 	bl	9000f414 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010d16:	f8d8 3000 	ldr.w	r3, [r8]
90010d1a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90010d1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d1e:	429a      	cmp	r2, r3
90010d20:	d33f      	bcc.n	90010da2 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
90010d22:	2301      	movs	r3, #1
90010d24:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010d28:	6833      	ldr	r3, [r6, #0]
90010d2a:	2b00      	cmp	r3, #0
90010d2c:	d1dc      	bne.n	90010ce8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010d2e:	4b29      	ldr	r3, [pc, #164]	@ (90010dd4 <xTaskResumeAll.part.0+0x120>)
90010d30:	681a      	ldr	r2, [r3, #0]
90010d32:	6812      	ldr	r2, [r2, #0]
90010d34:	2a00      	cmp	r2, #0
90010d36:	d03c      	beq.n	90010db2 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d38:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010d3a:	4b27      	ldr	r3, [pc, #156]	@ (90010dd8 <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d3c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010d3e:	68d2      	ldr	r2, [r2, #12]
90010d40:	6852      	ldr	r2, [r2, #4]
90010d42:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90010d44:	4e25      	ldr	r6, [pc, #148]	@ (90010ddc <xTaskResumeAll.part.0+0x128>)
90010d46:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90010d48:	b194      	cbz	r4, 90010d70 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
90010d4a:	2701      	movs	r7, #1
90010d4c:	e006      	b.n	90010d5c <xTaskResumeAll.part.0+0xa8>
90010d4e:	f7ff ff0b 	bl	90010b68 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010d52:	b108      	cbz	r0, 90010d58 <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
90010d54:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010d58:	3c01      	subs	r4, #1
90010d5a:	d008      	beq.n	90010d6e <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010d5c:	682b      	ldr	r3, [r5, #0]
90010d5e:	2b00      	cmp	r3, #0
90010d60:	d0f5      	beq.n	90010d4e <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
90010d62:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010d64:	3c01      	subs	r4, #1
		++xPendedTicks;
90010d66:	f103 0301 	add.w	r3, r3, #1
90010d6a:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010d6c:	d1f6      	bne.n	90010d5c <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
90010d6e:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90010d70:	f8da 3000 	ldr.w	r3, [sl]
90010d74:	b17b      	cbz	r3, 90010d96 <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
90010d76:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010d7a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010d7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010d82:	f3bf 8f4f 	dsb	sy
90010d86:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90010d8a:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90010d8c:	f7fe fc0c 	bl	9000f5a8 <vPortExitCritical>
}
90010d90:	4620      	mov	r0, r4
90010d92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
90010d96:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
90010d98:	f7fe fc06 	bl	9000f5a8 <vPortExitCritical>
}
90010d9c:	4620      	mov	r0, r4
90010d9e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010da2:	6833      	ldr	r3, [r6, #0]
90010da4:	2b00      	cmp	r3, #0
90010da6:	d19f      	bne.n	90010ce8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010da8:	4b0a      	ldr	r3, [pc, #40]	@ (90010dd4 <xTaskResumeAll.part.0+0x120>)
90010daa:	681a      	ldr	r2, [r3, #0]
90010dac:	6812      	ldr	r2, [r2, #0]
90010dae:	2a00      	cmp	r2, #0
90010db0:	d1c2      	bne.n	90010d38 <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
90010db2:	4b09      	ldr	r3, [pc, #36]	@ (90010dd8 <xTaskResumeAll.part.0+0x124>)
90010db4:	f04f 32ff 	mov.w	r2, #4294967295
90010db8:	601a      	str	r2, [r3, #0]
90010dba:	e7c3      	b.n	90010d44 <xTaskResumeAll.part.0+0x90>
90010dbc:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90010de8 <xTaskResumeAll.part.0+0x134>
90010dc0:	e7c0      	b.n	90010d44 <xTaskResumeAll.part.0+0x90>
90010dc2:	bf00      	nop
90010dc4:	24021298 	.word	0x24021298
90010dc8:	240212bc 	.word	0x240212bc
90010dcc:	240212ec 	.word	0x240212ec
90010dd0:	240212b4 	.word	0x240212b4
90010dd4:	24021304 	.word	0x24021304
90010dd8:	2402129c 	.word	0x2402129c
90010ddc:	240212ac 	.word	0x240212ac
90010de0:	24021330 	.word	0x24021330
90010de4:	24021790 	.word	0x24021790
90010de8:	240212a8 	.word	0x240212a8

90010dec <xTaskCreateStatic>:
	{
90010dec:	b530      	push	{r4, r5, lr}
90010dee:	b087      	sub	sp, #28
90010df0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
90010df2:	b1c4      	cbz	r4, 90010e26 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
90010df4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90010df6:	b16d      	cbz	r5, 90010e14 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
90010df8:	25ac      	movs	r5, #172	@ 0xac
90010dfa:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
90010dfc:	9d05      	ldr	r5, [sp, #20]
90010dfe:	2dac      	cmp	r5, #172	@ 0xac
90010e00:	d01a      	beq.n	90010e38 <xTaskCreateStatic+0x4c>
90010e02:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e06:	f383 8811 	msr	BASEPRI, r3
90010e0a:	f3bf 8f6f 	isb	sy
90010e0e:	f3bf 8f4f 	dsb	sy
90010e12:	e7fe      	b.n	90010e12 <xTaskCreateStatic+0x26>
90010e14:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e18:	f383 8811 	msr	BASEPRI, r3
90010e1c:	f3bf 8f6f 	isb	sy
90010e20:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010e24:	e7fe      	b.n	90010e24 <xTaskCreateStatic+0x38>
90010e26:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e2a:	f383 8811 	msr	BASEPRI, r3
90010e2e:	f3bf 8f6f 	isb	sy
90010e32:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010e36:	e7fe      	b.n	90010e36 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010e38:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90010e3a:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010e3c:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90010e3e:	9502      	str	r5, [sp, #8]
90010e40:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90010e42:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010e44:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90010e46:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90010e4a:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010e4c:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90010e4e:	9401      	str	r4, [sp, #4]
90010e50:	f7ff fda8 	bl	900109a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90010e54:	980c      	ldr	r0, [sp, #48]	@ 0x30
90010e56:	f7ff fd1f 	bl	90010898 <prvAddNewTaskToReadyList>
	}
90010e5a:	9804      	ldr	r0, [sp, #16]
90010e5c:	b007      	add	sp, #28
90010e5e:	bd30      	pop	{r4, r5, pc}

90010e60 <xTaskCreate>:
	{
90010e60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010e64:	4607      	mov	r7, r0
90010e66:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010e68:	0090      	lsls	r0, r2, #2
	{
90010e6a:	4615      	mov	r5, r2
90010e6c:	4688      	mov	r8, r1
90010e6e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010e70:	f7fe f998 	bl	9000f1a4 <pvPortMalloc>
			if( pxStack != NULL )
90010e74:	b1f0      	cbz	r0, 90010eb4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90010e76:	4604      	mov	r4, r0
90010e78:	20ac      	movs	r0, #172	@ 0xac
90010e7a:	f7fe f993 	bl	9000f1a4 <pvPortMalloc>
				if( pxNewTCB != NULL )
90010e7e:	4606      	mov	r6, r0
90010e80:	b1a8      	cbz	r0, 90010eae <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
90010e82:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010e84:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
90010e86:	464b      	mov	r3, r9
90010e88:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010e8a:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
90010e8e:	4641      	mov	r1, r8
90010e90:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90010e92:	4638      	mov	r0, r7
90010e94:	9602      	str	r6, [sp, #8]
90010e96:	9401      	str	r4, [sp, #4]
90010e98:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90010e9a:	9400      	str	r4, [sp, #0]
90010e9c:	f7ff fd82 	bl	900109a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90010ea0:	4630      	mov	r0, r6
90010ea2:	f7ff fcf9 	bl	90010898 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90010ea6:	2001      	movs	r0, #1
	}
90010ea8:	b005      	add	sp, #20
90010eaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
90010eae:	4620      	mov	r0, r4
90010eb0:	f7fe fa36 	bl	9000f320 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90010eb4:	f04f 30ff 	mov.w	r0, #4294967295
	}
90010eb8:	b005      	add	sp, #20
90010eba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010ebe:	bf00      	nop

90010ec0 <vTaskDelete>:
	{
90010ec0:	b570      	push	{r4, r5, r6, lr}
90010ec2:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010ec4:	4d38      	ldr	r5, [pc, #224]	@ (90010fa8 <vTaskDelete+0xe8>)
		taskENTER_CRITICAL();
90010ec6:	f7fe fb4d 	bl	9000f564 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010eca:	2c00      	cmp	r4, #0
90010ecc:	d048      	beq.n	90010f60 <vTaskDelete+0xa0>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010ece:	1d26      	adds	r6, r4, #4
90010ed0:	4630      	mov	r0, r6
90010ed2:	f7fe fac5 	bl	9000f460 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010ed6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90010ed8:	b11b      	cbz	r3, 90010ee2 <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010eda:	f104 0018 	add.w	r0, r4, #24
90010ede:	f7fe fabf 	bl	9000f460 <uxListRemove>
			uxTaskNumber++;
90010ee2:	4a32      	ldr	r2, [pc, #200]	@ (90010fac <vTaskDelete+0xec>)
90010ee4:	6813      	ldr	r3, [r2, #0]
90010ee6:	3301      	adds	r3, #1
90010ee8:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
90010eea:	682b      	ldr	r3, [r5, #0]
90010eec:	42a3      	cmp	r3, r4
90010eee:	d02e      	beq.n	90010f4e <vTaskDelete+0x8e>
				--uxCurrentNumberOfTasks;
90010ef0:	4a2f      	ldr	r2, [pc, #188]	@ (90010fb0 <vTaskDelete+0xf0>)
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90010ef2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
				--uxCurrentNumberOfTasks;
90010ef6:	6813      	ldr	r3, [r2, #0]
90010ef8:	3b01      	subs	r3, #1
90010efa:	6013      	str	r3, [r2, #0]
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90010efc:	f01a fe46 	bl	9002bb8c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90010f00:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
90010f04:	b163      	cbz	r3, 90010f20 <vTaskDelete+0x60>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90010f06:	2b01      	cmp	r3, #1
90010f08:	d03f      	beq.n	90010f8a <vTaskDelete+0xca>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90010f0a:	2b02      	cmp	r3, #2
90010f0c:	d00e      	beq.n	90010f2c <vTaskDelete+0x6c>
90010f0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f12:	f383 8811 	msr	BASEPRI, r3
90010f16:	f3bf 8f6f 	isb	sy
90010f1a:	f3bf 8f4f 	dsb	sy
90010f1e:	e7fe      	b.n	90010f1e <vTaskDelete+0x5e>
				vPortFree( pxTCB->pxStack );
90010f20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90010f22:	f7fe f9fd 	bl	9000f320 <vPortFree>
				vPortFree( pxTCB );
90010f26:	4620      	mov	r0, r4
90010f28:	f7fe f9fa 	bl	9000f320 <vPortFree>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010f2c:	4b21      	ldr	r3, [pc, #132]	@ (90010fb4 <vTaskDelete+0xf4>)
90010f2e:	681a      	ldr	r2, [r3, #0]
90010f30:	6812      	ldr	r2, [r2, #0]
90010f32:	b9ba      	cbnz	r2, 90010f64 <vTaskDelete+0xa4>
		xNextTaskUnblockTime = portMAX_DELAY;
90010f34:	4b20      	ldr	r3, [pc, #128]	@ (90010fb8 <vTaskDelete+0xf8>)
90010f36:	f04f 32ff 	mov.w	r2, #4294967295
90010f3a:	601a      	str	r2, [r3, #0]
		taskEXIT_CRITICAL();
90010f3c:	f7fe fb34 	bl	9000f5a8 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
90010f40:	4b1e      	ldr	r3, [pc, #120]	@ (90010fbc <vTaskDelete+0xfc>)
90010f42:	681b      	ldr	r3, [r3, #0]
90010f44:	b113      	cbz	r3, 90010f4c <vTaskDelete+0x8c>
			if( pxTCB == pxCurrentTCB )
90010f46:	682b      	ldr	r3, [r5, #0]
90010f48:	42a3      	cmp	r3, r4
90010f4a:	d012      	beq.n	90010f72 <vTaskDelete+0xb2>
	}
90010f4c:	bd70      	pop	{r4, r5, r6, pc}
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
90010f4e:	4631      	mov	r1, r6
90010f50:	481b      	ldr	r0, [pc, #108]	@ (90010fc0 <vTaskDelete+0x100>)
90010f52:	f7fe fa5f 	bl	9000f414 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
90010f56:	4a1b      	ldr	r2, [pc, #108]	@ (90010fc4 <vTaskDelete+0x104>)
90010f58:	6813      	ldr	r3, [r2, #0]
90010f5a:	3301      	adds	r3, #1
90010f5c:	6013      	str	r3, [r2, #0]
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
90010f5e:	e7ed      	b.n	90010f3c <vTaskDelete+0x7c>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010f60:	682c      	ldr	r4, [r5, #0]
90010f62:	e7b4      	b.n	90010ece <vTaskDelete+0xe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010f64:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010f66:	4b14      	ldr	r3, [pc, #80]	@ (90010fb8 <vTaskDelete+0xf8>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010f68:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010f6a:	68d2      	ldr	r2, [r2, #12]
90010f6c:	6852      	ldr	r2, [r2, #4]
90010f6e:	601a      	str	r2, [r3, #0]
}
90010f70:	e7e4      	b.n	90010f3c <vTaskDelete+0x7c>
				configASSERT( uxSchedulerSuspended == 0 );
90010f72:	4b15      	ldr	r3, [pc, #84]	@ (90010fc8 <vTaskDelete+0x108>)
90010f74:	681b      	ldr	r3, [r3, #0]
90010f76:	b163      	cbz	r3, 90010f92 <vTaskDelete+0xd2>
90010f78:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f7c:	f383 8811 	msr	BASEPRI, r3
90010f80:	f3bf 8f6f 	isb	sy
90010f84:	f3bf 8f4f 	dsb	sy
90010f88:	e7fe      	b.n	90010f88 <vTaskDelete+0xc8>
				vPortFree( pxTCB );
90010f8a:	4620      	mov	r0, r4
90010f8c:	f7fe f9c8 	bl	9000f320 <vPortFree>
90010f90:	e7cc      	b.n	90010f2c <vTaskDelete+0x6c>
				portYIELD_WITHIN_API();
90010f92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010f96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010f9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010f9e:	f3bf 8f4f 	dsb	sy
90010fa2:	f3bf 8f6f 	isb	sy
	}
90010fa6:	bd70      	pop	{r4, r5, r6, pc}
90010fa8:	24021790 	.word	0x24021790
90010fac:	240212a0 	.word	0x240212a0
90010fb0:	240212bc 	.word	0x240212bc
90010fb4:	24021304 	.word	0x24021304
90010fb8:	2402129c 	.word	0x2402129c
90010fbc:	240212b0 	.word	0x240212b0
90010fc0:	240212d8 	.word	0x240212d8
90010fc4:	240212d4 	.word	0x240212d4
90010fc8:	24021298 	.word	0x24021298

90010fcc <vTaskDelay>:
	{
90010fcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90010fce:	b950      	cbnz	r0, 90010fe6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90010fd0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010fd4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010fd8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010fdc:	f3bf 8f4f 	dsb	sy
90010fe0:	f3bf 8f6f 	isb	sy
	}
90010fe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90010fe6:	4d1e      	ldr	r5, [pc, #120]	@ (90011060 <vTaskDelay+0x94>)
90010fe8:	682b      	ldr	r3, [r5, #0]
90010fea:	b143      	cbz	r3, 90010ffe <vTaskDelay+0x32>
90010fec:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ff0:	f383 8811 	msr	BASEPRI, r3
90010ff4:	f3bf 8f6f 	isb	sy
90010ff8:	f3bf 8f4f 	dsb	sy
90010ffc:	e7fe      	b.n	90010ffc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
90010ffe:	682b      	ldr	r3, [r5, #0]
90011000:	4604      	mov	r4, r0
90011002:	3301      	adds	r3, #1
90011004:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011006:	4b17      	ldr	r3, [pc, #92]	@ (90011064 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011008:	4e17      	ldr	r6, [pc, #92]	@ (90011068 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9001100a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001100c:	6830      	ldr	r0, [r6, #0]
9001100e:	3004      	adds	r0, #4
90011010:	f7fe fa26 	bl	9000f460 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011014:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011016:	6833      	ldr	r3, [r6, #0]
90011018:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9001101a:	d315      	bcc.n	90011048 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001101c:	4b13      	ldr	r3, [pc, #76]	@ (9001106c <vTaskDelay+0xa0>)
9001101e:	6818      	ldr	r0, [r3, #0]
90011020:	6831      	ldr	r1, [r6, #0]
90011022:	3104      	adds	r1, #4
90011024:	f7fe fa04 	bl	9000f430 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011028:	682b      	ldr	r3, [r5, #0]
9001102a:	b943      	cbnz	r3, 9001103e <vTaskDelay+0x72>
9001102c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011030:	f383 8811 	msr	BASEPRI, r3
90011034:	f3bf 8f6f 	isb	sy
90011038:	f3bf 8f4f 	dsb	sy
9001103c:	e7fe      	b.n	9001103c <vTaskDelay+0x70>
9001103e:	f7ff fe39 	bl	90010cb4 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90011042:	2800      	cmp	r0, #0
90011044:	d0c4      	beq.n	90010fd0 <vTaskDelay+0x4>
	}
90011046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011048:	4b09      	ldr	r3, [pc, #36]	@ (90011070 <vTaskDelay+0xa4>)
9001104a:	6818      	ldr	r0, [r3, #0]
9001104c:	6831      	ldr	r1, [r6, #0]
9001104e:	3104      	adds	r1, #4
90011050:	f7fe f9ee 	bl	9000f430 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011054:	4b07      	ldr	r3, [pc, #28]	@ (90011074 <vTaskDelay+0xa8>)
90011056:	681a      	ldr	r2, [r3, #0]
90011058:	4294      	cmp	r4, r2
9001105a:	d2e5      	bcs.n	90011028 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9001105c:	601c      	str	r4, [r3, #0]
9001105e:	e7e3      	b.n	90011028 <vTaskDelay+0x5c>
90011060:	24021298 	.word	0x24021298
90011064:	240212b8 	.word	0x240212b8
90011068:	24021790 	.word	0x24021790
9001106c:	24021300 	.word	0x24021300
90011070:	24021304 	.word	0x24021304
90011074:	2402129c 	.word	0x2402129c

90011078 <eTaskGetState>:
	{
90011078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
9001107a:	b1e0      	cbz	r0, 900110b6 <eTaskGetState+0x3e>
		if( pxTCB == pxCurrentTCB )
9001107c:	4b19      	ldr	r3, [pc, #100]	@ (900110e4 <eTaskGetState+0x6c>)
9001107e:	4604      	mov	r4, r0
90011080:	681b      	ldr	r3, [r3, #0]
90011082:	4283      	cmp	r3, r0
90011084:	d015      	beq.n	900110b2 <eTaskGetState+0x3a>
			taskENTER_CRITICAL();
90011086:	f7fe fa6d 	bl	9000f564 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
9001108a:	4a17      	ldr	r2, [pc, #92]	@ (900110e8 <eTaskGetState+0x70>)
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
9001108c:	4b17      	ldr	r3, [pc, #92]	@ (900110ec <eTaskGetState+0x74>)
				pxDelayedList = pxDelayedTaskList;
9001108e:	6816      	ldr	r6, [r2, #0]
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
90011090:	6965      	ldr	r5, [r4, #20]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
90011092:	681f      	ldr	r7, [r3, #0]
			taskEXIT_CRITICAL();
90011094:	f7fe fa88 	bl	9000f5a8 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
90011098:	42b5      	cmp	r5, r6
9001109a:	d017      	beq.n	900110cc <eTaskGetState+0x54>
9001109c:	42bd      	cmp	r5, r7
9001109e:	d015      	beq.n	900110cc <eTaskGetState+0x54>
				else if( pxStateList == &xSuspendedTaskList )
900110a0:	4b13      	ldr	r3, [pc, #76]	@ (900110f0 <eTaskGetState+0x78>)
900110a2:	429d      	cmp	r5, r3
900110a4:	d010      	beq.n	900110c8 <eTaskGetState+0x50>
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
900110a6:	b19d      	cbz	r5, 900110d0 <eTaskGetState+0x58>
900110a8:	4b12      	ldr	r3, [pc, #72]	@ (900110f4 <eTaskGetState+0x7c>)
900110aa:	429d      	cmp	r5, r3
900110ac:	d010      	beq.n	900110d0 <eTaskGetState+0x58>
				eReturn = eReady;
900110ae:	2001      	movs	r0, #1
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
900110b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			eReturn = eRunning;
900110b2:	2000      	movs	r0, #0
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
900110b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900110b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900110ba:	f383 8811 	msr	BASEPRI, r3
900110be:	f3bf 8f6f 	isb	sy
900110c2:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTCB );
900110c6:	e7fe      	b.n	900110c6 <eTaskGetState+0x4e>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
900110c8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900110ca:	b11b      	cbz	r3, 900110d4 <eTaskGetState+0x5c>
				eReturn = eBlocked;
900110cc:	2002      	movs	r0, #2
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
900110ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					eReturn = eDeleted;
900110d0:	2004      	movs	r0, #4
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
900110d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
900110d4:	f894 30a8 	ldrb.w	r3, [r4, #168]	@ 0xa8
								eReturn = eSuspended;
900110d8:	2b01      	cmp	r3, #1
900110da:	bf0c      	ite	eq
900110dc:	2002      	moveq	r0, #2
900110de:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
900110e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900110e2:	bf00      	nop
900110e4:	24021790 	.word	0x24021790
900110e8:	24021304 	.word	0x24021304
900110ec:	24021300 	.word	0x24021300
900110f0:	240212c0 	.word	0x240212c0
900110f4:	240212d8 	.word	0x240212d8

900110f8 <vTaskStartScheduler>:
{
900110f8:	b530      	push	{r4, r5, lr}
900110fa:	b08b      	sub	sp, #44	@ 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900110fc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900110fe:	aa07      	add	r2, sp, #28
90011100:	a906      	add	r1, sp, #24
90011102:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
90011104:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011108:	f7fe f82e 	bl	9000f168 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9001110c:	9d05      	ldr	r5, [sp, #20]
9001110e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
90011112:	b1bb      	cbz	r3, 90011144 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011114:	b16d      	cbz	r5, 90011132 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011116:	21ac      	movs	r1, #172	@ 0xac
90011118:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
9001111a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001111c:	29ac      	cmp	r1, #172	@ 0xac
9001111e:	d01a      	beq.n	90011156 <vTaskStartScheduler+0x5e>
90011120:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011124:	f383 8811 	msr	BASEPRI, r3
90011128:	f3bf 8f6f 	isb	sy
9001112c:	f3bf 8f4f 	dsb	sy
90011130:	e7fe      	b.n	90011130 <vTaskStartScheduler+0x38>
90011132:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011136:	f383 8811 	msr	BASEPRI, r3
9001113a:	f3bf 8f6f 	isb	sy
9001113e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011142:	e7fe      	b.n	90011142 <vTaskStartScheduler+0x4a>
90011144:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011148:	f383 8811 	msr	BASEPRI, r3
9001114c:	f3bf 8f6f 	isb	sy
90011150:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011154:	e7fe      	b.n	90011154 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011156:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011158:	632b      	str	r3, [r5, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001115a:	4822      	ldr	r0, [pc, #136]	@ (900111e4 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001115c:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011160:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011164:	4623      	mov	r3, r4
90011166:	9400      	str	r4, [sp, #0]
90011168:	e9cd 1501 	strd	r1, r5, [sp, #4]
9001116c:	491e      	ldr	r1, [pc, #120]	@ (900111e8 <vTaskStartScheduler+0xf0>)
9001116e:	f7ff fc19 	bl	900109a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90011172:	4628      	mov	r0, r5
90011174:	f7ff fb90 	bl	90010898 <prvAddNewTaskToReadyList>
		return xReturn;
90011178:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
9001117a:	b17b      	cbz	r3, 9001119c <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
9001117c:	f000 fc90 	bl	90011aa0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90011180:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
90011182:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
90011184:	d00c      	beq.n	900111a0 <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011186:	3301      	adds	r3, #1
90011188:	d108      	bne.n	9001119c <vTaskStartScheduler+0xa4>
9001118a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001118e:	f383 8811 	msr	BASEPRI, r3
90011192:	f3bf 8f6f 	isb	sy
90011196:	f3bf 8f4f 	dsb	sy
9001119a:	e7fe      	b.n	9001119a <vTaskStartScheduler+0xa2>
}
9001119c:	b00b      	add	sp, #44	@ 0x2c
9001119e:	bd30      	pop	{r4, r5, pc}
900111a0:	f04f 0250 	mov.w	r2, #80	@ 0x50
900111a4:	f382 8811 	msr	BASEPRI, r2
900111a8:	f3bf 8f6f 	isb	sy
900111ac:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
900111b0:	4a0e      	ldr	r2, [pc, #56]	@ (900111ec <vTaskStartScheduler+0xf4>)
900111b2:	480f      	ldr	r0, [pc, #60]	@ (900111f0 <vTaskStartScheduler+0xf8>)
900111b4:	6811      	ldr	r1, [r2, #0]
900111b6:	3158      	adds	r1, #88	@ 0x58
900111b8:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
900111ba:	f04f 30ff 	mov.w	r0, #4294967295
900111be:	490d      	ldr	r1, [pc, #52]	@ (900111f4 <vTaskStartScheduler+0xfc>)
900111c0:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
900111c2:	480d      	ldr	r0, [pc, #52]	@ (900111f8 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900111c4:	490d      	ldr	r1, [pc, #52]	@ (900111fc <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
900111c6:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900111c8:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
900111ca:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
900111cc:	b143      	cbz	r3, 900111e0 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
900111ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900111d0:	b10b      	cbz	r3, 900111d6 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
900111d2:	2000      	movs	r0, #0
900111d4:	4798      	blx	r3
}
900111d6:	b00b      	add	sp, #44	@ 0x2c
900111d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
900111dc:	f7fe ba54 	b.w	9000f688 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
900111e0:	6813      	ldr	r3, [r2, #0]
900111e2:	e7f4      	b.n	900111ce <vTaskStartScheduler+0xd6>
900111e4:	90010ac5 	.word	0x90010ac5
900111e8:	9002e488 	.word	0x9002e488
900111ec:	24021790 	.word	0x24021790
900111f0:	24000114 	.word	0x24000114
900111f4:	2402129c 	.word	0x2402129c
900111f8:	240212b0 	.word	0x240212b0
900111fc:	240212b8 	.word	0x240212b8

90011200 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011200:	4a02      	ldr	r2, [pc, #8]	@ (9001120c <vTaskSuspendAll+0xc>)
90011202:	6813      	ldr	r3, [r2, #0]
90011204:	3301      	adds	r3, #1
90011206:	6013      	str	r3, [r2, #0]
}
90011208:	4770      	bx	lr
9001120a:	bf00      	nop
9001120c:	24021298 	.word	0x24021298

90011210 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011210:	4b06      	ldr	r3, [pc, #24]	@ (9001122c <xTaskResumeAll+0x1c>)
90011212:	681b      	ldr	r3, [r3, #0]
90011214:	b943      	cbnz	r3, 90011228 <xTaskResumeAll+0x18>
90011216:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001121a:	f383 8811 	msr	BASEPRI, r3
9001121e:	f3bf 8f6f 	isb	sy
90011222:	f3bf 8f4f 	dsb	sy
90011226:	e7fe      	b.n	90011226 <xTaskResumeAll+0x16>
90011228:	f7ff bd44 	b.w	90010cb4 <xTaskResumeAll.part.0>
9001122c:	24021298 	.word	0x24021298

90011230 <xTaskGetTickCount>:
		xTicks = xTickCount;
90011230:	4b01      	ldr	r3, [pc, #4]	@ (90011238 <xTaskGetTickCount+0x8>)
90011232:	6818      	ldr	r0, [r3, #0]
}
90011234:	4770      	bx	lr
90011236:	bf00      	nop
90011238:	240212b8 	.word	0x240212b8

9001123c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001123c:	4b05      	ldr	r3, [pc, #20]	@ (90011254 <xTaskIncrementTick+0x18>)
9001123e:	681b      	ldr	r3, [r3, #0]
90011240:	b90b      	cbnz	r3, 90011246 <xTaskIncrementTick+0xa>
90011242:	f7ff bc91 	b.w	90010b68 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011246:	4a04      	ldr	r2, [pc, #16]	@ (90011258 <xTaskIncrementTick+0x1c>)
}
90011248:	2000      	movs	r0, #0
		++xPendedTicks;
9001124a:	6813      	ldr	r3, [r2, #0]
9001124c:	3301      	adds	r3, #1
9001124e:	6013      	str	r3, [r2, #0]
}
90011250:	4770      	bx	lr
90011252:	bf00      	nop
90011254:	24021298 	.word	0x24021298
90011258:	240212ac 	.word	0x240212ac

9001125c <vTaskSetApplicationTaskTag>:
	{
9001125c:	b538      	push	{r3, r4, r5, lr}
9001125e:	460d      	mov	r5, r1
		if( xTask == NULL )
90011260:	b138      	cbz	r0, 90011272 <vTaskSetApplicationTaskTag+0x16>
90011262:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011264:	f7fe f97e 	bl	9000f564 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011268:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9001126a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001126e:	f7fe b99b 	b.w	9000f5a8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011272:	4b04      	ldr	r3, [pc, #16]	@ (90011284 <vTaskSetApplicationTaskTag+0x28>)
90011274:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011276:	f7fe f975 	bl	9000f564 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9001127a:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9001127c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011280:	f7fe b992 	b.w	9000f5a8 <vPortExitCritical>
90011284:	24021790 	.word	0x24021790

90011288 <vTaskSwitchContext>:
{
90011288:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9001128a:	4b28      	ldr	r3, [pc, #160]	@ (9001132c <vTaskSwitchContext+0xa4>)
9001128c:	681b      	ldr	r3, [r3, #0]
9001128e:	b11b      	cbz	r3, 90011298 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
90011290:	4b27      	ldr	r3, [pc, #156]	@ (90011330 <vTaskSwitchContext+0xa8>)
90011292:	2201      	movs	r2, #1
90011294:	601a      	str	r2, [r3, #0]
}
90011296:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
90011298:	4a25      	ldr	r2, [pc, #148]	@ (90011330 <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
9001129a:	4c26      	ldr	r4, [pc, #152]	@ (90011334 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
9001129c:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001129e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900112a0:	2b00      	cmp	r3, #0
900112a2:	d038      	beq.n	90011316 <vTaskSwitchContext+0x8e>
		if( xTCB->pxTaskTag != NULL )
900112a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900112a6:	b10b      	cbz	r3, 900112ac <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900112a8:	2001      	movs	r0, #1
900112aa:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900112ac:	4d22      	ldr	r5, [pc, #136]	@ (90011338 <vTaskSwitchContext+0xb0>)
900112ae:	4923      	ldr	r1, [pc, #140]	@ (9001133c <vTaskSwitchContext+0xb4>)
900112b0:	682b      	ldr	r3, [r5, #0]
900112b2:	eb03 0283 	add.w	r2, r3, r3, lsl #2
900112b6:	0098      	lsls	r0, r3, #2
900112b8:	0092      	lsls	r2, r2, #2
900112ba:	588a      	ldr	r2, [r1, r2]
900112bc:	b942      	cbnz	r2, 900112d0 <vTaskSwitchContext+0x48>
900112be:	b30b      	cbz	r3, 90011304 <vTaskSwitchContext+0x7c>
900112c0:	3b01      	subs	r3, #1
900112c2:	eb03 0283 	add.w	r2, r3, r3, lsl #2
900112c6:	0098      	lsls	r0, r3, #2
900112c8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
900112cc:	2a00      	cmp	r2, #0
900112ce:	d0f6      	beq.n	900112be <vTaskSwitchContext+0x36>
900112d0:	4418      	add	r0, r3
900112d2:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
900112d6:	f8dc 1004 	ldr.w	r1, [ip, #4]
900112da:	4662      	mov	r2, ip
900112dc:	6849      	ldr	r1, [r1, #4]
900112de:	3208      	adds	r2, #8
900112e0:	4291      	cmp	r1, r2
900112e2:	f8cc 1004 	str.w	r1, [ip, #4]
900112e6:	d01d      	beq.n	90011324 <vTaskSwitchContext+0x9c>
900112e8:	68ca      	ldr	r2, [r1, #12]
900112ea:	6022      	str	r2, [r4, #0]
900112ec:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
900112ee:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900112f0:	b1b3      	cbz	r3, 90011320 <vTaskSwitchContext+0x98>
		if( xTCB->pxTaskTag != NULL )
900112f2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900112f4:	b10b      	cbz	r3, 900112fa <vTaskSwitchContext+0x72>
			xReturn = xTCB->pxTaskTag( pvParameter );
900112f6:	2000      	movs	r0, #0
900112f8:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
900112fa:	6823      	ldr	r3, [r4, #0]
900112fc:	4a10      	ldr	r2, [pc, #64]	@ (90011340 <vTaskSwitchContext+0xb8>)
900112fe:	3358      	adds	r3, #88	@ 0x58
90011300:	6013      	str	r3, [r2, #0]
}
90011302:	bd38      	pop	{r3, r4, r5, pc}
90011304:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011308:	f383 8811 	msr	BASEPRI, r3
9001130c:	f3bf 8f6f 	isb	sy
90011310:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011314:	e7fe      	b.n	90011314 <vTaskSwitchContext+0x8c>
			xTCB = pxCurrentTCB;
90011316:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90011318:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001131a:	2b00      	cmp	r3, #0
9001131c:	d1c4      	bne.n	900112a8 <vTaskSwitchContext+0x20>
9001131e:	e7c5      	b.n	900112ac <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011320:	6823      	ldr	r3, [r4, #0]
90011322:	e7e6      	b.n	900112f2 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011324:	6849      	ldr	r1, [r1, #4]
90011326:	f8cc 1004 	str.w	r1, [ip, #4]
9001132a:	e7dd      	b.n	900112e8 <vTaskSwitchContext+0x60>
9001132c:	24021298 	.word	0x24021298
90011330:	240212a8 	.word	0x240212a8
90011334:	24021790 	.word	0x24021790
90011338:	240212b4 	.word	0x240212b4
9001133c:	24021330 	.word	0x24021330
90011340:	24000114 	.word	0x24000114

90011344 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011344:	b1f0      	cbz	r0, 90011384 <vTaskPlaceOnEventList+0x40>
{
90011346:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011348:	4d1a      	ldr	r5, [pc, #104]	@ (900113b4 <vTaskPlaceOnEventList+0x70>)
9001134a:	460c      	mov	r4, r1
9001134c:	6829      	ldr	r1, [r5, #0]
9001134e:	3118      	adds	r1, #24
90011350:	f7fe f86e 	bl	9000f430 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011354:	4b18      	ldr	r3, [pc, #96]	@ (900113b8 <vTaskPlaceOnEventList+0x74>)
90011356:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011358:	6828      	ldr	r0, [r5, #0]
9001135a:	3004      	adds	r0, #4
9001135c:	f7fe f880 	bl	9000f460 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90011360:	1c63      	adds	r3, r4, #1
90011362:	d020      	beq.n	900113a6 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011364:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011366:	682b      	ldr	r3, [r5, #0]
90011368:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001136a:	d214      	bcs.n	90011396 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001136c:	4b13      	ldr	r3, [pc, #76]	@ (900113bc <vTaskPlaceOnEventList+0x78>)
9001136e:	6818      	ldr	r0, [r3, #0]
90011370:	6829      	ldr	r1, [r5, #0]
90011372:	3104      	adds	r1, #4
90011374:	f7fe f85c 	bl	9000f430 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011378:	4b11      	ldr	r3, [pc, #68]	@ (900113c0 <vTaskPlaceOnEventList+0x7c>)
9001137a:	681a      	ldr	r2, [r3, #0]
9001137c:	4294      	cmp	r4, r2
9001137e:	d200      	bcs.n	90011382 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90011380:	601c      	str	r4, [r3, #0]
}
90011382:	bd70      	pop	{r4, r5, r6, pc}
90011384:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011388:	f383 8811 	msr	BASEPRI, r3
9001138c:	f3bf 8f6f 	isb	sy
90011390:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90011394:	e7fe      	b.n	90011394 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011396:	4b0b      	ldr	r3, [pc, #44]	@ (900113c4 <vTaskPlaceOnEventList+0x80>)
90011398:	6818      	ldr	r0, [r3, #0]
9001139a:	6829      	ldr	r1, [r5, #0]
}
9001139c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900113a0:	3104      	adds	r1, #4
900113a2:	f7fe b845 	b.w	9000f430 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900113a6:	6829      	ldr	r1, [r5, #0]
900113a8:	4807      	ldr	r0, [pc, #28]	@ (900113c8 <vTaskPlaceOnEventList+0x84>)
900113aa:	3104      	adds	r1, #4
}
900113ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900113b0:	f7fe b830 	b.w	9000f414 <vListInsertEnd>
900113b4:	24021790 	.word	0x24021790
900113b8:	240212b8 	.word	0x240212b8
900113bc:	24021304 	.word	0x24021304
900113c0:	2402129c 	.word	0x2402129c
900113c4:	24021300 	.word	0x24021300
900113c8:	240212c0 	.word	0x240212c0

900113cc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
900113cc:	b350      	cbz	r0, 90011424 <vTaskPlaceOnEventListRestricted+0x58>
	{
900113ce:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900113d0:	4e1d      	ldr	r6, [pc, #116]	@ (90011448 <vTaskPlaceOnEventListRestricted+0x7c>)
900113d2:	460c      	mov	r4, r1
900113d4:	4615      	mov	r5, r2
900113d6:	6831      	ldr	r1, [r6, #0]
900113d8:	3118      	adds	r1, #24
900113da:	f7fe f81b 	bl	9000f414 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
900113de:	4b1b      	ldr	r3, [pc, #108]	@ (9001144c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
900113e0:	b15d      	cbz	r5, 900113fa <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
900113e2:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900113e4:	6830      	ldr	r0, [r6, #0]
900113e6:	3004      	adds	r0, #4
900113e8:	f7fe f83a 	bl	9000f460 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900113ec:	6831      	ldr	r1, [r6, #0]
900113ee:	4818      	ldr	r0, [pc, #96]	@ (90011450 <vTaskPlaceOnEventListRestricted+0x84>)
900113f0:	3104      	adds	r1, #4
	}
900113f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900113f6:	f7fe b80d 	b.w	9000f414 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
900113fa:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900113fc:	6830      	ldr	r0, [r6, #0]
900113fe:	3004      	adds	r0, #4
90011400:	f7fe f82e 	bl	9000f460 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011404:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011406:	6833      	ldr	r3, [r6, #0]
90011408:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001140a:	d214      	bcs.n	90011436 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001140c:	4b11      	ldr	r3, [pc, #68]	@ (90011454 <vTaskPlaceOnEventListRestricted+0x88>)
9001140e:	6818      	ldr	r0, [r3, #0]
90011410:	6831      	ldr	r1, [r6, #0]
90011412:	3104      	adds	r1, #4
90011414:	f7fe f80c 	bl	9000f430 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011418:	4b0f      	ldr	r3, [pc, #60]	@ (90011458 <vTaskPlaceOnEventListRestricted+0x8c>)
9001141a:	681a      	ldr	r2, [r3, #0]
9001141c:	4294      	cmp	r4, r2
9001141e:	d200      	bcs.n	90011422 <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
90011420:	601c      	str	r4, [r3, #0]
	}
90011422:	bd70      	pop	{r4, r5, r6, pc}
90011424:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011428:	f383 8811 	msr	BASEPRI, r3
9001142c:	f3bf 8f6f 	isb	sy
90011430:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90011434:	e7fe      	b.n	90011434 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011436:	4b09      	ldr	r3, [pc, #36]	@ (9001145c <vTaskPlaceOnEventListRestricted+0x90>)
90011438:	6818      	ldr	r0, [r3, #0]
9001143a:	6831      	ldr	r1, [r6, #0]
	}
9001143c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011440:	3104      	adds	r1, #4
90011442:	f7fd bff5 	b.w	9000f430 <vListInsert>
90011446:	bf00      	nop
90011448:	24021790 	.word	0x24021790
9001144c:	240212b8 	.word	0x240212b8
90011450:	240212c0 	.word	0x240212c0
90011454:	24021304 	.word	0x24021304
90011458:	2402129c 	.word	0x2402129c
9001145c:	24021300 	.word	0x24021300

90011460 <xTaskRemoveFromEventList>:
{
90011460:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011462:	68c3      	ldr	r3, [r0, #12]
90011464:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90011466:	b34c      	cbz	r4, 900114bc <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90011468:	f104 0518 	add.w	r5, r4, #24
9001146c:	4628      	mov	r0, r5
9001146e:	f7fd fff7 	bl	9000f460 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011472:	4b18      	ldr	r3, [pc, #96]	@ (900114d4 <xTaskRemoveFromEventList+0x74>)
90011474:	681b      	ldr	r3, [r3, #0]
90011476:	b173      	cbz	r3, 90011496 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90011478:	4629      	mov	r1, r5
9001147a:	4817      	ldr	r0, [pc, #92]	@ (900114d8 <xTaskRemoveFromEventList+0x78>)
9001147c:	f7fd ffca 	bl	9000f414 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90011480:	4b16      	ldr	r3, [pc, #88]	@ (900114dc <xTaskRemoveFromEventList+0x7c>)
90011482:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011484:	681b      	ldr	r3, [r3, #0]
90011486:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011488:	429a      	cmp	r2, r3
9001148a:	d920      	bls.n	900114ce <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9001148c:	2301      	movs	r3, #1
9001148e:	4a14      	ldr	r2, [pc, #80]	@ (900114e0 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90011490:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90011492:	6013      	str	r3, [r2, #0]
}
90011494:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90011496:	1d25      	adds	r5, r4, #4
90011498:	4628      	mov	r0, r5
9001149a:	f7fd ffe1 	bl	9000f460 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9001149e:	4b11      	ldr	r3, [pc, #68]	@ (900114e4 <xTaskRemoveFromEventList+0x84>)
900114a0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900114a2:	681a      	ldr	r2, [r3, #0]
900114a4:	4290      	cmp	r0, r2
900114a6:	d900      	bls.n	900114aa <xTaskRemoveFromEventList+0x4a>
900114a8:	6018      	str	r0, [r3, #0]
900114aa:	4b0f      	ldr	r3, [pc, #60]	@ (900114e8 <xTaskRemoveFromEventList+0x88>)
900114ac:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900114b0:	4629      	mov	r1, r5
900114b2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900114b6:	f7fd ffad 	bl	9000f414 <vListInsertEnd>
900114ba:	e7e1      	b.n	90011480 <xTaskRemoveFromEventList+0x20>
900114bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900114c0:	f383 8811 	msr	BASEPRI, r3
900114c4:	f3bf 8f6f 	isb	sy
900114c8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
900114cc:	e7fe      	b.n	900114cc <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
900114ce:	2000      	movs	r0, #0
}
900114d0:	bd38      	pop	{r3, r4, r5, pc}
900114d2:	bf00      	nop
900114d4:	24021298 	.word	0x24021298
900114d8:	240212ec 	.word	0x240212ec
900114dc:	24021790 	.word	0x24021790
900114e0:	240212a8 	.word	0x240212a8
900114e4:	240212b4 	.word	0x240212b4
900114e8:	24021330 	.word	0x24021330

900114ec <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900114ec:	4a03      	ldr	r2, [pc, #12]	@ (900114fc <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
900114ee:	4b04      	ldr	r3, [pc, #16]	@ (90011500 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900114f0:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900114f2:	681b      	ldr	r3, [r3, #0]
900114f4:	e9c0 2300 	strd	r2, r3, [r0]
}
900114f8:	4770      	bx	lr
900114fa:	bf00      	nop
900114fc:	240212a4 	.word	0x240212a4
90011500:	240212b8 	.word	0x240212b8

90011504 <xTaskCheckForTimeOut>:
{
90011504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90011506:	b308      	cbz	r0, 9001154c <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90011508:	460d      	mov	r5, r1
9001150a:	b1b1      	cbz	r1, 9001153a <xTaskCheckForTimeOut+0x36>
9001150c:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001150e:	f7fe f829 	bl	9000f564 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90011512:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90011514:	4a1a      	ldr	r2, [pc, #104]	@ (90011580 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90011516:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90011518:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9001151a:	d02c      	beq.n	90011576 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001151c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90011584 <xTaskCheckForTimeOut+0x80>
90011520:	6826      	ldr	r6, [r4, #0]
90011522:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011526:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011528:	42be      	cmp	r6, r7
9001152a:	d018      	beq.n	9001155e <xTaskCheckForTimeOut+0x5a>
9001152c:	4288      	cmp	r0, r1
9001152e:	d816      	bhi.n	9001155e <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90011530:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90011532:	f7fe f839 	bl	9000f5a8 <vPortExitCritical>
}
90011536:	4620      	mov	r0, r4
90011538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001153a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001153e:	f383 8811 	msr	BASEPRI, r3
90011542:	f3bf 8f6f 	isb	sy
90011546:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001154a:	e7fe      	b.n	9001154a <xTaskCheckForTimeOut+0x46>
9001154c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011550:	f383 8811 	msr	BASEPRI, r3
90011554:	f3bf 8f6f 	isb	sy
90011558:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001155c:	e7fe      	b.n	9001155c <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9001155e:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90011562:	4573      	cmp	r3, lr
90011564:	d909      	bls.n	9001157a <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90011566:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011568:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001156c:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9001156e:	4403      	add	r3, r0
90011570:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011572:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90011576:	2400      	movs	r4, #0
90011578:	e7db      	b.n	90011532 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9001157a:	2300      	movs	r3, #0
9001157c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9001157e:	e7d7      	b.n	90011530 <xTaskCheckForTimeOut+0x2c>
90011580:	240212b8 	.word	0x240212b8
90011584:	240212a4 	.word	0x240212a4

90011588 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90011588:	4b01      	ldr	r3, [pc, #4]	@ (90011590 <vTaskMissedYield+0x8>)
9001158a:	2201      	movs	r2, #1
9001158c:	601a      	str	r2, [r3, #0]
}
9001158e:	4770      	bx	lr
90011590:	240212a8 	.word	0x240212a8

90011594 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90011594:	4b05      	ldr	r3, [pc, #20]	@ (900115ac <xTaskGetSchedulerState+0x18>)
90011596:	681b      	ldr	r3, [r3, #0]
90011598:	b133      	cbz	r3, 900115a8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001159a:	4b05      	ldr	r3, [pc, #20]	@ (900115b0 <xTaskGetSchedulerState+0x1c>)
9001159c:	6818      	ldr	r0, [r3, #0]
9001159e:	fab0 f080 	clz	r0, r0
900115a2:	0940      	lsrs	r0, r0, #5
900115a4:	0040      	lsls	r0, r0, #1
900115a6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900115a8:	2001      	movs	r0, #1
	}
900115aa:	4770      	bx	lr
900115ac:	240212b0 	.word	0x240212b0
900115b0:	24021298 	.word	0x24021298

900115b4 <xTaskPriorityInherit>:
	{
900115b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
900115b6:	4604      	mov	r4, r0
900115b8:	b1c8      	cbz	r0, 900115ee <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
900115ba:	4d1b      	ldr	r5, [pc, #108]	@ (90011628 <xTaskPriorityInherit+0x74>)
900115bc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900115be:	682a      	ldr	r2, [r5, #0]
900115c0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900115c2:	4293      	cmp	r3, r2
900115c4:	d214      	bcs.n	900115f0 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900115c6:	6982      	ldr	r2, [r0, #24]
900115c8:	2a00      	cmp	r2, #0
900115ca:	db04      	blt.n	900115d6 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900115cc:	682a      	ldr	r2, [r5, #0]
900115ce:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900115d0:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
900115d4:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900115d6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900115da:	4e14      	ldr	r6, [pc, #80]	@ (9001162c <xTaskPriorityInherit+0x78>)
900115dc:	6962      	ldr	r2, [r4, #20]
900115de:	eb06 0383 	add.w	r3, r6, r3, lsl #2
900115e2:	429a      	cmp	r2, r3
900115e4:	d00c      	beq.n	90011600 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900115e6:	682b      	ldr	r3, [r5, #0]
900115e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900115ea:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
900115ec:	2001      	movs	r0, #1
	}
900115ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
900115f0:	682b      	ldr	r3, [r5, #0]
900115f2:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
900115f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900115f6:	4298      	cmp	r0, r3
900115f8:	bf2c      	ite	cs
900115fa:	2000      	movcs	r0, #0
900115fc:	2001      	movcc	r0, #1
	}
900115fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011600:	1d27      	adds	r7, r4, #4
90011602:	4638      	mov	r0, r7
90011604:	f7fd ff2c 	bl	9000f460 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011608:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001160a:	4b09      	ldr	r3, [pc, #36]	@ (90011630 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001160c:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001160e:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011610:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011612:	4290      	cmp	r0, r2
90011614:	d900      	bls.n	90011618 <xTaskPriorityInherit+0x64>
90011616:	6018      	str	r0, [r3, #0]
90011618:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001161c:	4639      	mov	r1, r7
9001161e:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90011622:	f7fd fef7 	bl	9000f414 <vListInsertEnd>
90011626:	e7e1      	b.n	900115ec <xTaskPriorityInherit+0x38>
90011628:	24021790 	.word	0x24021790
9001162c:	24021330 	.word	0x24021330
90011630:	240212b4 	.word	0x240212b4

90011634 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90011634:	b308      	cbz	r0, 9001167a <xTaskPriorityDisinherit+0x46>
	{
90011636:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90011638:	4b1d      	ldr	r3, [pc, #116]	@ (900116b0 <xTaskPriorityDisinherit+0x7c>)
9001163a:	681c      	ldr	r4, [r3, #0]
9001163c:	4284      	cmp	r4, r0
9001163e:	d008      	beq.n	90011652 <xTaskPriorityDisinherit+0x1e>
90011640:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011644:	f383 8811 	msr	BASEPRI, r3
90011648:	f3bf 8f6f 	isb	sy
9001164c:	f3bf 8f4f 	dsb	sy
90011650:	e7fe      	b.n	90011650 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
90011652:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90011654:	b143      	cbz	r3, 90011668 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011656:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90011658:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9001165a:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9001165c:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9001165e:	4291      	cmp	r1, r2
90011660:	d000      	beq.n	90011664 <xTaskPriorityDisinherit+0x30>
90011662:	b163      	cbz	r3, 9001167e <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90011664:	2000      	movs	r0, #0
	}
90011666:	bd38      	pop	{r3, r4, r5, pc}
90011668:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001166c:	f383 8811 	msr	BASEPRI, r3
90011670:	f3bf 8f6f 	isb	sy
90011674:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011678:	e7fe      	b.n	90011678 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9001167a:	2000      	movs	r0, #0
	}
9001167c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001167e:	1d25      	adds	r5, r4, #4
90011680:	4628      	mov	r0, r5
90011682:	f7fd feed 	bl	9000f460 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011686:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90011688:	4b0a      	ldr	r3, [pc, #40]	@ (900116b4 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001168a:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9001168e:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011690:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90011692:	681a      	ldr	r2, [r3, #0]
90011694:	4290      	cmp	r0, r2
90011696:	d900      	bls.n	9001169a <xTaskPriorityDisinherit+0x66>
90011698:	6018      	str	r0, [r3, #0]
9001169a:	4b07      	ldr	r3, [pc, #28]	@ (900116b8 <xTaskPriorityDisinherit+0x84>)
9001169c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900116a0:	4629      	mov	r1, r5
900116a2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900116a6:	f7fd feb5 	bl	9000f414 <vListInsertEnd>
					xReturn = pdTRUE;
900116aa:	2001      	movs	r0, #1
	}
900116ac:	bd38      	pop	{r3, r4, r5, pc}
900116ae:	bf00      	nop
900116b0:	24021790 	.word	0x24021790
900116b4:	240212b4 	.word	0x240212b4
900116b8:	24021330 	.word	0x24021330

900116bc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
900116bc:	2800      	cmp	r0, #0
900116be:	d03c      	beq.n	9001173a <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
900116c0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
900116c2:	b570      	push	{r4, r5, r6, lr}
900116c4:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
900116c6:	b14b      	cbz	r3, 900116dc <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900116c8:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
900116ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900116cc:	4281      	cmp	r1, r0
900116ce:	bf38      	it	cc
900116d0:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
900116d2:	2b01      	cmp	r3, #1
900116d4:	d101      	bne.n	900116da <vTaskPriorityDisinheritAfterTimeout+0x1e>
900116d6:	428a      	cmp	r2, r1
900116d8:	d109      	bne.n	900116ee <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
900116da:	bd70      	pop	{r4, r5, r6, pc}
900116dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900116e0:	f383 8811 	msr	BASEPRI, r3
900116e4:	f3bf 8f6f 	isb	sy
900116e8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900116ec:	e7fe      	b.n	900116ec <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
900116ee:	4b18      	ldr	r3, [pc, #96]	@ (90011750 <vTaskPriorityDisinheritAfterTimeout+0x94>)
900116f0:	681b      	ldr	r3, [r3, #0]
900116f2:	42a3      	cmp	r3, r4
900116f4:	d022      	beq.n	9001173c <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900116f6:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
900116f8:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900116fa:	2b00      	cmp	r3, #0
900116fc:	db02      	blt.n	90011704 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900116fe:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90011702:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90011704:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011708:	4d12      	ldr	r5, [pc, #72]	@ (90011754 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9001170a:	6961      	ldr	r1, [r4, #20]
9001170c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011710:	4299      	cmp	r1, r3
90011712:	d1e2      	bne.n	900116da <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011714:	1d26      	adds	r6, r4, #4
90011716:	4630      	mov	r0, r6
90011718:	f7fd fea2 	bl	9000f460 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9001171c:	4b0e      	ldr	r3, [pc, #56]	@ (90011758 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9001171e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011720:	681a      	ldr	r2, [r3, #0]
90011722:	4290      	cmp	r0, r2
90011724:	d900      	bls.n	90011728 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90011726:	6018      	str	r0, [r3, #0]
90011728:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001172c:	4631      	mov	r1, r6
9001172e:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90011732:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90011736:	f7fd be6d 	b.w	9000f414 <vListInsertEnd>
9001173a:	4770      	bx	lr
9001173c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011740:	f383 8811 	msr	BASEPRI, r3
90011744:	f3bf 8f6f 	isb	sy
90011748:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9001174c:	e7fe      	b.n	9001174c <vTaskPriorityDisinheritAfterTimeout+0x90>
9001174e:	bf00      	nop
90011750:	24021790 	.word	0x24021790
90011754:	24021330 	.word	0x24021330
90011758:	240212b4 	.word	0x240212b4

9001175c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9001175c:	4b04      	ldr	r3, [pc, #16]	@ (90011770 <pvTaskIncrementMutexHeldCount+0x14>)
9001175e:	681a      	ldr	r2, [r3, #0]
90011760:	b11a      	cbz	r2, 9001176a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90011762:	6819      	ldr	r1, [r3, #0]
90011764:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90011766:	3201      	adds	r2, #1
90011768:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9001176a:	6818      	ldr	r0, [r3, #0]
	}
9001176c:	4770      	bx	lr
9001176e:	bf00      	nop
90011770:	24021790 	.word	0x24021790

90011774 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90011774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011778:	4e21      	ldr	r6, [pc, #132]	@ (90011800 <prvSwitchTimerLists+0x8c>)
9001177a:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001177c:	e00d      	b.n	9001179a <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001177e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011780:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011782:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011784:	1d25      	adds	r5, r4, #4
90011786:	4628      	mov	r0, r5
90011788:	f7fd fe6a 	bl	9000f460 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001178c:	6a23      	ldr	r3, [r4, #32]
9001178e:	4620      	mov	r0, r4
90011790:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011792:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90011796:	075b      	lsls	r3, r3, #29
90011798:	d40a      	bmi.n	900117b0 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001179a:	6833      	ldr	r3, [r6, #0]
9001179c:	681a      	ldr	r2, [r3, #0]
9001179e:	2a00      	cmp	r2, #0
900117a0:	d1ed      	bne.n	9001177e <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
900117a2:	4a18      	ldr	r2, [pc, #96]	@ (90011804 <prvSwitchTimerLists+0x90>)
900117a4:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
900117a6:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
900117a8:	6031      	str	r1, [r6, #0]
}
900117aa:	b004      	add	sp, #16
900117ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900117b0:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900117b2:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
900117b4:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90011808 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900117b8:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
900117ba:	429f      	cmp	r7, r3
900117bc:	d205      	bcs.n	900117ca <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900117be:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
900117c0:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900117c2:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900117c4:	f7fd fe34 	bl	9000f430 <vListInsert>
900117c8:	e7e7      	b.n	9001179a <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
900117ca:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
900117ce:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
900117d0:	b16b      	cbz	r3, 900117ee <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900117d2:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
900117d4:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900117d8:	f7ff fedc 	bl	90011594 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900117dc:	462b      	mov	r3, r5
900117de:	462a      	mov	r2, r5
900117e0:	4669      	mov	r1, sp
900117e2:	f8d8 0000 	ldr.w	r0, [r8]
900117e6:	f7fe f9ab 	bl	9000fb40 <xQueueGenericSend>
				configASSERT( xResult );
900117ea:	2800      	cmp	r0, #0
900117ec:	d1d5      	bne.n	9001179a <prvSwitchTimerLists+0x26>
900117ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
900117f2:	f383 8811 	msr	BASEPRI, r3
900117f6:	f3bf 8f6f 	isb	sy
900117fa:	f3bf 8f4f 	dsb	sy
900117fe:	e7fe      	b.n	900117fe <prvSwitchTimerLists+0x8a>
90011800:	24021894 	.word	0x24021894
90011804:	24021890 	.word	0x24021890
90011808:	2402188c 	.word	0x2402188c

9001180c <prvTimerTask>:
{
9001180c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011810:	4e9f      	ldr	r6, [pc, #636]	@ (90011a90 <prvTimerTask+0x284>)
90011812:	b089      	sub	sp, #36	@ 0x24
90011814:	4d9f      	ldr	r5, [pc, #636]	@ (90011a94 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90011816:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9001181a:	4c9f      	ldr	r4, [pc, #636]	@ (90011a98 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001181c:	6833      	ldr	r3, [r6, #0]
9001181e:	681f      	ldr	r7, [r3, #0]
90011820:	2f00      	cmp	r7, #0
90011822:	f000 80b2 	beq.w	9001198a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011826:	68db      	ldr	r3, [r3, #12]
90011828:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001182a:	f7ff fce9 	bl	90011200 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001182e:	f7ff fcff 	bl	90011230 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011832:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011834:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90011836:	4298      	cmp	r0, r3
90011838:	f0c0 80af 	bcc.w	9001199a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9001183c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9001183e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90011840:	f200 80d0 	bhi.w	900119e4 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90011844:	f7ff fce4 	bl	90011210 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011848:	6833      	ldr	r3, [r6, #0]
9001184a:	68db      	ldr	r3, [r3, #12]
9001184c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011850:	f10b 0804 	add.w	r8, fp, #4
90011854:	4640      	mov	r0, r8
90011856:	f7fd fe03 	bl	9000f460 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001185a:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9001185e:	0758      	lsls	r0, r3, #29
90011860:	f100 80d0 	bmi.w	90011a04 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011864:	f023 0301 	bic.w	r3, r3, #1
90011868:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001186c:	f8db 3020 	ldr.w	r3, [fp, #32]
90011870:	4658      	mov	r0, fp
90011872:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90011874:	2200      	movs	r2, #0
90011876:	4669      	mov	r1, sp
90011878:	6820      	ldr	r0, [r4, #0]
9001187a:	f7fe fb9f 	bl	9000ffbc <xQueueReceive>
9001187e:	2800      	cmp	r0, #0
90011880:	d0cc      	beq.n	9001181c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90011882:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90011884:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90011886:	2b00      	cmp	r3, #0
90011888:	db77      	blt.n	9001197a <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9001188a:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9001188c:	697b      	ldr	r3, [r7, #20]
9001188e:	b113      	cbz	r3, 90011896 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011890:	1d38      	adds	r0, r7, #4
90011892:	f7fd fde5 	bl	9000f460 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90011896:	f7ff fccb 	bl	90011230 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9001189a:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001189c:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9001189e:	4298      	cmp	r0, r3
900118a0:	f0c0 8082 	bcc.w	900119a8 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900118a4:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900118a6:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
900118aa:	2b09      	cmp	r3, #9
900118ac:	d8e2      	bhi.n	90011874 <prvTimerTask+0x68>
900118ae:	e8df f003 	tbb	[pc, r3]
900118b2:	0505      	.short	0x0505
900118b4:	5b3e5405 	.word	0x5b3e5405
900118b8:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900118bc:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900118c0:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900118c2:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900118c6:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900118c8:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900118cc:	69ba      	ldr	r2, [r7, #24]
900118ce:	1899      	adds	r1, r3, r2
900118d0:	bf2c      	ite	cs
900118d2:	2001      	movcs	r0, #1
900118d4:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
900118d6:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900118d8:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900118da:	f200 8085 	bhi.w	900119e8 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900118de:	ebab 0303 	sub.w	r3, fp, r3
900118e2:	429a      	cmp	r2, r3
900118e4:	f200 80be 	bhi.w	90011a64 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900118e8:	6a3b      	ldr	r3, [r7, #32]
900118ea:	4638      	mov	r0, r7
900118ec:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900118ee:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900118f2:	0759      	lsls	r1, r3, #29
900118f4:	d5be      	bpl.n	90011874 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
900118f6:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900118f8:	9b01      	ldr	r3, [sp, #4]
900118fa:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
900118fc:	b171      	cbz	r1, 9001191c <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900118fe:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90011900:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90011904:	2700      	movs	r7, #0
90011906:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011908:	f7ff fe44 	bl	90011594 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001190c:	463b      	mov	r3, r7
9001190e:	463a      	mov	r2, r7
90011910:	a904      	add	r1, sp, #16
90011912:	6820      	ldr	r0, [r4, #0]
90011914:	f7fe f914 	bl	9000fb40 <xQueueGenericSend>
							configASSERT( xResult );
90011918:	2800      	cmp	r0, #0
9001191a:	d1ab      	bne.n	90011874 <prvTimerTask+0x68>
9001191c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011920:	f383 8811 	msr	BASEPRI, r3
90011924:	f3bf 8f6f 	isb	sy
90011928:	f3bf 8f4f 	dsb	sy
9001192c:	e7fe      	b.n	9001192c <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001192e:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90011932:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90011934:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90011938:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001193a:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001193e:	2b00      	cmp	r3, #0
90011940:	f000 809c 	beq.w	90011a7c <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90011944:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011946:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011948:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9001194a:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001194c:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001194e:	d855      	bhi.n	900119fc <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011950:	4b52      	ldr	r3, [pc, #328]	@ (90011a9c <prvTimerTask+0x290>)
90011952:	6818      	ldr	r0, [r3, #0]
90011954:	f7fd fd6c 	bl	9000f430 <vListInsert>
90011958:	e78c      	b.n	90011874 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9001195a:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9001195e:	f023 0301 	bic.w	r3, r3, #1
90011962:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
90011966:	e785      	b.n	90011874 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90011968:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9001196c:	079a      	lsls	r2, r3, #30
9001196e:	d557      	bpl.n	90011a20 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90011970:	f023 0301 	bic.w	r3, r3, #1
90011974:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
90011978:	e77c      	b.n	90011874 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9001197a:	9b01      	ldr	r3, [sp, #4]
9001197c:	9903      	ldr	r1, [sp, #12]
9001197e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90011980:	9b00      	ldr	r3, [sp, #0]
90011982:	2b00      	cmp	r3, #0
90011984:	f6ff af76 	blt.w	90011874 <prvTimerTask+0x68>
90011988:	e77f      	b.n	9001188a <prvTimerTask+0x7e>
	vTaskSuspendAll();
9001198a:	f7ff fc39 	bl	90011200 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001198e:	f7ff fc4f 	bl	90011230 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90011992:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90011994:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90011996:	4283      	cmp	r3, r0
90011998:	d909      	bls.n	900119ae <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001199a:	f7ff feeb 	bl	90011774 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001199e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900119a2:	f7ff fc35 	bl	90011210 <xTaskResumeAll>
900119a6:	e765      	b.n	90011874 <prvTimerTask+0x68>
		prvSwitchTimerLists();
900119a8:	f7ff fee4 	bl	90011774 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
900119ac:	e77a      	b.n	900118a4 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900119ae:	4b3b      	ldr	r3, [pc, #236]	@ (90011a9c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
900119b0:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900119b4:	681b      	ldr	r3, [r3, #0]
900119b6:	681a      	ldr	r2, [r3, #0]
900119b8:	fab2 f282 	clz	r2, r2
900119bc:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
900119be:	eba7 010a 	sub.w	r1, r7, sl
900119c2:	6820      	ldr	r0, [r4, #0]
900119c4:	f7fe ff04 	bl	900107d0 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
900119c8:	f7ff fc22 	bl	90011210 <xTaskResumeAll>
900119cc:	2800      	cmp	r0, #0
900119ce:	f47f af51 	bne.w	90011874 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
900119d2:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
900119d6:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
900119da:	f3bf 8f4f 	dsb	sy
900119de:	f3bf 8f6f 	isb	sy
900119e2:	e747      	b.n	90011874 <prvTimerTask+0x68>
900119e4:	2200      	movs	r2, #0
900119e6:	e7ea      	b.n	900119be <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
900119e8:	455b      	cmp	r3, fp
900119ea:	d902      	bls.n	900119f2 <prvTimerTask+0x1e6>
900119ec:	2800      	cmp	r0, #0
900119ee:	f43f af7b 	beq.w	900118e8 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900119f2:	1d39      	adds	r1, r7, #4
900119f4:	6830      	ldr	r0, [r6, #0]
900119f6:	f7fd fd1b 	bl	9000f430 <vListInsert>
	return xProcessTimerNow;
900119fa:	e73b      	b.n	90011874 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900119fc:	6830      	ldr	r0, [r6, #0]
900119fe:	f7fd fd17 	bl	9000f430 <vListInsert>
90011a02:	e737      	b.n	90011874 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90011a04:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011a08:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90011a0c:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90011a0e:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90011a10:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90011a14:	d208      	bcs.n	90011a28 <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011a16:	4641      	mov	r1, r8
90011a18:	6830      	ldr	r0, [r6, #0]
90011a1a:	f7fd fd09 	bl	9000f430 <vListInsert>
	return xProcessTimerNow;
90011a1e:	e725      	b.n	9001186c <prvTimerTask+0x60>
							vPortFree( pxTimer );
90011a20:	4638      	mov	r0, r7
90011a22:	f7fd fc7d 	bl	9000f320 <vPortFree>
90011a26:	e725      	b.n	90011874 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011a28:	ebaa 0a07 	sub.w	sl, sl, r7
90011a2c:	4552      	cmp	r2, sl
90011a2e:	d81f      	bhi.n	90011a70 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90011a30:	6823      	ldr	r3, [r4, #0]
90011a32:	b173      	cbz	r3, 90011a52 <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011a34:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
90011a38:	2700      	movs	r7, #0
90011a3a:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011a3c:	f7ff fdaa 	bl	90011594 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011a40:	463b      	mov	r3, r7
90011a42:	463a      	mov	r2, r7
90011a44:	a904      	add	r1, sp, #16
90011a46:	6820      	ldr	r0, [r4, #0]
90011a48:	f7fe f87a 	bl	9000fb40 <xQueueGenericSend>
			configASSERT( xResult );
90011a4c:	2800      	cmp	r0, #0
90011a4e:	f47f af0d 	bne.w	9001186c <prvTimerTask+0x60>
90011a52:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a56:	f383 8811 	msr	BASEPRI, r3
90011a5a:	f3bf 8f6f 	isb	sy
90011a5e:	f3bf 8f4f 	dsb	sy
90011a62:	e7fe      	b.n	90011a62 <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011a64:	4b0d      	ldr	r3, [pc, #52]	@ (90011a9c <prvTimerTask+0x290>)
90011a66:	1d39      	adds	r1, r7, #4
90011a68:	6818      	ldr	r0, [r3, #0]
90011a6a:	f7fd fce1 	bl	9000f430 <vListInsert>
	return xProcessTimerNow;
90011a6e:	e701      	b.n	90011874 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90011a70:	4b0a      	ldr	r3, [pc, #40]	@ (90011a9c <prvTimerTask+0x290>)
90011a72:	4641      	mov	r1, r8
90011a74:	6818      	ldr	r0, [r3, #0]
90011a76:	f7fd fcdb 	bl	9000f430 <vListInsert>
	return xProcessTimerNow;
90011a7a:	e6f7      	b.n	9001186c <prvTimerTask+0x60>
90011a7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a80:	f383 8811 	msr	BASEPRI, r3
90011a84:	f3bf 8f6f 	isb	sy
90011a88:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90011a8c:	e7fe      	b.n	90011a8c <prvTimerTask+0x280>
90011a8e:	bf00      	nop
90011a90:	24021894 	.word	0x24021894
90011a94:	24021884 	.word	0x24021884
90011a98:	2402188c 	.word	0x2402188c
90011a9c:	24021890 	.word	0x24021890

90011aa0 <xTimerCreateTimerTask>:
{
90011aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90011aa2:	4c23      	ldr	r4, [pc, #140]	@ (90011b30 <xTimerCreateTimerTask+0x90>)
{
90011aa4:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
90011aa6:	f7fd fd5d 	bl	9000f564 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90011aaa:	6825      	ldr	r5, [r4, #0]
90011aac:	b335      	cbz	r5, 90011afc <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90011aae:	f7fd fd7b 	bl	9000f5a8 <vPortExitCritical>
	if( xTimerQueue != NULL )
90011ab2:	6823      	ldr	r3, [r4, #0]
90011ab4:	b1cb      	cbz	r3, 90011aea <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90011ab6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011ab8:	aa07      	add	r2, sp, #28
90011aba:	a906      	add	r1, sp, #24
90011abc:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011abe:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90011ac0:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011ac4:	f7fd fb5e 	bl	9000f184 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011ac8:	4623      	mov	r3, r4
90011aca:	9a07      	ldr	r2, [sp, #28]
90011acc:	9500      	str	r5, [sp, #0]
90011ace:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90011ad2:	e9cd 1001 	strd	r1, r0, [sp, #4]
90011ad6:	4917      	ldr	r1, [pc, #92]	@ (90011b34 <xTimerCreateTimerTask+0x94>)
90011ad8:	4817      	ldr	r0, [pc, #92]	@ (90011b38 <xTimerCreateTimerTask+0x98>)
90011ada:	f7ff f987 	bl	90010dec <xTaskCreateStatic>
90011ade:	4b17      	ldr	r3, [pc, #92]	@ (90011b3c <xTimerCreateTimerTask+0x9c>)
90011ae0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90011ae2:	b110      	cbz	r0, 90011aea <xTimerCreateTimerTask+0x4a>
}
90011ae4:	2001      	movs	r0, #1
90011ae6:	b009      	add	sp, #36	@ 0x24
90011ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011aea:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011aee:	f383 8811 	msr	BASEPRI, r3
90011af2:	f3bf 8f6f 	isb	sy
90011af6:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90011afa:	e7fe      	b.n	90011afa <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90011afc:	4f10      	ldr	r7, [pc, #64]	@ (90011b40 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90011afe:	4e11      	ldr	r6, [pc, #68]	@ (90011b44 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90011b00:	4638      	mov	r0, r7
90011b02:	f7fd fc77 	bl	9000f3f4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90011b06:	4630      	mov	r0, r6
90011b08:	f7fd fc74 	bl	9000f3f4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90011b0c:	4a0e      	ldr	r2, [pc, #56]	@ (90011b48 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011b0e:	9500      	str	r5, [sp, #0]
90011b10:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90011b12:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011b14:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90011b16:	4a0d      	ldr	r2, [pc, #52]	@ (90011b4c <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011b18:	4b0d      	ldr	r3, [pc, #52]	@ (90011b50 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90011b1a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011b1c:	4a0d      	ldr	r2, [pc, #52]	@ (90011b54 <xTimerCreateTimerTask+0xb4>)
90011b1e:	f7fd febb 	bl	9000f898 <xQueueGenericCreateStatic>
90011b22:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90011b24:	2800      	cmp	r0, #0
90011b26:	d0c2      	beq.n	90011aae <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90011b28:	490b      	ldr	r1, [pc, #44]	@ (90011b58 <xTimerCreateTimerTask+0xb8>)
90011b2a:	f7fe fdf7 	bl	9001071c <vQueueAddToRegistry>
90011b2e:	e7be      	b.n	90011aae <xTimerCreateTimerTask+0xe>
90011b30:	2402188c 	.word	0x2402188c
90011b34:	9002e498 	.word	0x9002e498
90011b38:	9001180d 	.word	0x9001180d
90011b3c:	24021888 	.word	0x24021888
90011b40:	240218ac 	.word	0x240218ac
90011b44:	24021898 	.word	0x24021898
90011b48:	24021894 	.word	0x24021894
90011b4c:	24021890 	.word	0x24021890
90011b50:	24021794 	.word	0x24021794
90011b54:	240217e4 	.word	0x240217e4
90011b58:	9002e490 	.word	0x9002e490

90011b5c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90011b5c:	8880      	ldrh	r0, [r0, #4]
90011b5e:	4770      	bx	lr

90011b60 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90011b60:	b570      	push	{r4, r5, r6, lr}
90011b62:	6803      	ldr	r3, [r0, #0]
90011b64:	460c      	mov	r4, r1
90011b66:	2100      	movs	r1, #0
90011b68:	4605      	mov	r5, r0
90011b6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011b6c:	4798      	blx	r3
90011b6e:	4606      	mov	r6, r0
90011b70:	682b      	ldr	r3, [r5, #0]
90011b72:	4628      	mov	r0, r5
90011b74:	1ba4      	subs	r4, r4, r6
90011b76:	6a1b      	ldr	r3, [r3, #32]
90011b78:	b2a4      	uxth	r4, r4
90011b7a:	4798      	blx	r3
90011b7c:	fbb4 f0f0 	udiv	r0, r4, r0
90011b80:	bd70      	pop	{r4, r5, r6, pc}

90011b82 <_ZN8touchgfx17AbstractPartition5clearEv>:
90011b82:	2300      	movs	r3, #0
90011b84:	8083      	strh	r3, [r0, #4]
90011b86:	4770      	bx	lr

90011b88 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90011b88:	b510      	push	{r4, lr}
90011b8a:	6803      	ldr	r3, [r0, #0]
90011b8c:	4604      	mov	r4, r0
90011b8e:	8881      	ldrh	r1, [r0, #4]
90011b90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011b92:	4798      	blx	r3
90011b94:	88a3      	ldrh	r3, [r4, #4]
90011b96:	3301      	adds	r3, #1
90011b98:	80a3      	strh	r3, [r4, #4]
90011b9a:	bd10      	pop	{r4, pc}

90011b9c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90011b9c:	6803      	ldr	r3, [r0, #0]
90011b9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90011ba0:	4718      	bx	r3

90011ba2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90011ba2:	4770      	bx	lr

90011ba4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90011ba4:	4a02      	ldr	r2, [pc, #8]	@ (90011bb0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90011ba6:	6002      	str	r2, [r0, #0]
90011ba8:	2200      	movs	r2, #0
90011baa:	8082      	strh	r2, [r0, #4]
90011bac:	4770      	bx	lr
90011bae:	bf00      	nop
90011bb0:	9002f3ec 	.word	0x9002f3ec

90011bb4 <_ZN8touchgfx9Container13getFirstChildEv>:
90011bb4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90011bb6:	4770      	bx	lr

90011bb8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90011bb8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011bba:	2000      	movs	r0, #0
90011bbc:	b12b      	cbz	r3, 90011bca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011bbe:	b920      	cbnz	r0, 90011bca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90011bc0:	1a5a      	subs	r2, r3, r1
90011bc2:	699b      	ldr	r3, [r3, #24]
90011bc4:	4250      	negs	r0, r2
90011bc6:	4150      	adcs	r0, r2
90011bc8:	e7f8      	b.n	90011bbc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90011bca:	4770      	bx	lr

90011bcc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90011bcc:	2300      	movs	r3, #0
90011bce:	6148      	str	r0, [r1, #20]
90011bd0:	618b      	str	r3, [r1, #24]
90011bd2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011bd4:	b913      	cbnz	r3, 90011bdc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90011bd6:	6281      	str	r1, [r0, #40]	@ 0x28
90011bd8:	4770      	bx	lr
90011bda:	4613      	mov	r3, r2
90011bdc:	699a      	ldr	r2, [r3, #24]
90011bde:	2a00      	cmp	r2, #0
90011be0:	d1fb      	bne.n	90011bda <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90011be2:	6199      	str	r1, [r3, #24]
90011be4:	4770      	bx	lr

90011be6 <_ZN8touchgfx9Container9removeAllEv>:
90011be6:	2200      	movs	r2, #0
90011be8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011bea:	b123      	cbz	r3, 90011bf6 <_ZN8touchgfx9Container9removeAllEv+0x10>
90011bec:	6999      	ldr	r1, [r3, #24]
90011bee:	6281      	str	r1, [r0, #40]	@ 0x28
90011bf0:	e9c3 2205 	strd	r2, r2, [r3, #20]
90011bf4:	e7f8      	b.n	90011be8 <_ZN8touchgfx9Container9removeAllEv+0x2>
90011bf6:	4770      	bx	lr

90011bf8 <_ZN8touchgfx9Container6unlinkEv>:
90011bf8:	2300      	movs	r3, #0
90011bfa:	6283      	str	r3, [r0, #40]	@ 0x28
90011bfc:	4770      	bx	lr

90011bfe <_ZNK8touchgfx9Container12getSolidRectEv>:
90011bfe:	2200      	movs	r2, #0
90011c00:	8002      	strh	r2, [r0, #0]
90011c02:	8042      	strh	r2, [r0, #2]
90011c04:	8082      	strh	r2, [r0, #4]
90011c06:	80c2      	strh	r2, [r0, #6]
90011c08:	4770      	bx	lr

90011c0a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90011c0a:	b570      	push	{r4, r5, r6, lr}
90011c0c:	460d      	mov	r5, r1
90011c0e:	4616      	mov	r6, r2
90011c10:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011c12:	b13c      	cbz	r4, 90011c24 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90011c14:	6823      	ldr	r3, [r4, #0]
90011c16:	4620      	mov	r0, r4
90011c18:	4632      	mov	r2, r6
90011c1a:	4629      	mov	r1, r5
90011c1c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011c1e:	4798      	blx	r3
90011c20:	69a4      	ldr	r4, [r4, #24]
90011c22:	e7f6      	b.n	90011c12 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90011c24:	bd70      	pop	{r4, r5, r6, pc}

90011c26 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90011c26:	b538      	push	{r3, r4, r5, lr}
90011c28:	460d      	mov	r5, r1
90011c2a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011c2c:	b134      	cbz	r4, 90011c3c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90011c2e:	682b      	ldr	r3, [r5, #0]
90011c30:	4621      	mov	r1, r4
90011c32:	4628      	mov	r0, r5
90011c34:	689b      	ldr	r3, [r3, #8]
90011c36:	4798      	blx	r3
90011c38:	69a4      	ldr	r4, [r4, #24]
90011c3a:	e7f7      	b.n	90011c2c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90011c3c:	bd38      	pop	{r3, r4, r5, pc}

90011c3e <_ZN8touchgfx9ContainerD1Ev>:
90011c3e:	4770      	bx	lr

90011c40 <_ZN8touchgfx9ContainerD0Ev>:
90011c40:	b510      	push	{r4, lr}
90011c42:	4604      	mov	r4, r0
90011c44:	212c      	movs	r1, #44	@ 0x2c
90011c46:	f019 f933 	bl	9002aeb0 <_ZdlPvj>
90011c4a:	4620      	mov	r0, r4
90011c4c:	bd10      	pop	{r4, pc}

90011c4e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90011c4e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011c50:	b19b      	cbz	r3, 90011c7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90011c52:	428b      	cmp	r3, r1
90011c54:	d109      	bne.n	90011c6a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90011c56:	699a      	ldr	r2, [r3, #24]
90011c58:	2100      	movs	r1, #0
90011c5a:	6159      	str	r1, [r3, #20]
90011c5c:	6282      	str	r2, [r0, #40]	@ 0x28
90011c5e:	b902      	cbnz	r2, 90011c62 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90011c60:	4770      	bx	lr
90011c62:	6199      	str	r1, [r3, #24]
90011c64:	4770      	bx	lr
90011c66:	4613      	mov	r3, r2
90011c68:	b13a      	cbz	r2, 90011c7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90011c6a:	699a      	ldr	r2, [r3, #24]
90011c6c:	428a      	cmp	r2, r1
90011c6e:	d1fa      	bne.n	90011c66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90011c70:	698a      	ldr	r2, [r1, #24]
90011c72:	619a      	str	r2, [r3, #24]
90011c74:	2300      	movs	r3, #0
90011c76:	e9c1 3305 	strd	r3, r3, [r1, #20]
90011c7a:	4770      	bx	lr

90011c7c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90011c7c:	b410      	push	{r4}
90011c7e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011c80:	4604      	mov	r4, r0
90011c82:	b92b      	cbnz	r3, 90011c90 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90011c84:	6803      	ldr	r3, [r0, #0]
90011c86:	4611      	mov	r1, r2
90011c88:	f85d 4b04 	ldr.w	r4, [sp], #4
90011c8c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90011c8e:	4718      	bx	r3
90011c90:	b941      	cbnz	r1, 90011ca4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90011c92:	6193      	str	r3, [r2, #24]
90011c94:	6282      	str	r2, [r0, #40]	@ 0x28
90011c96:	6154      	str	r4, [r2, #20]
90011c98:	f85d 4b04 	ldr.w	r4, [sp], #4
90011c9c:	4770      	bx	lr
90011c9e:	4603      	mov	r3, r0
90011ca0:	2800      	cmp	r0, #0
90011ca2:	d0f9      	beq.n	90011c98 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90011ca4:	4299      	cmp	r1, r3
90011ca6:	6998      	ldr	r0, [r3, #24]
90011ca8:	d1f9      	bne.n	90011c9e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90011caa:	6190      	str	r0, [r2, #24]
90011cac:	618a      	str	r2, [r1, #24]
90011cae:	e7f2      	b.n	90011c96 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90011cb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90011cb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011cb4:	461f      	mov	r7, r3
90011cb6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90011cba:	460d      	mov	r5, r1
90011cbc:	4616      	mov	r6, r2
90011cbe:	b103      	cbz	r3, 90011cc2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90011cc0:	6038      	str	r0, [r7, #0]
90011cc2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011cc4:	b314      	cbz	r4, 90011d0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90011cc6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011cca:	b1eb      	cbz	r3, 90011d08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011ccc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90011cd0:	428d      	cmp	r5, r1
90011cd2:	db19      	blt.n	90011d08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011cd4:	b289      	uxth	r1, r1
90011cd6:	8923      	ldrh	r3, [r4, #8]
90011cd8:	440b      	add	r3, r1
90011cda:	b21b      	sxth	r3, r3
90011cdc:	429d      	cmp	r5, r3
90011cde:	da13      	bge.n	90011d08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011ce0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011ce4:	4296      	cmp	r6, r2
90011ce6:	db0f      	blt.n	90011d08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011ce8:	b292      	uxth	r2, r2
90011cea:	8963      	ldrh	r3, [r4, #10]
90011cec:	4413      	add	r3, r2
90011cee:	b21b      	sxth	r3, r3
90011cf0:	429e      	cmp	r6, r3
90011cf2:	da09      	bge.n	90011d08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011cf4:	6823      	ldr	r3, [r4, #0]
90011cf6:	1ab2      	subs	r2, r6, r2
90011cf8:	1a69      	subs	r1, r5, r1
90011cfa:	4620      	mov	r0, r4
90011cfc:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90011d00:	b212      	sxth	r2, r2
90011d02:	463b      	mov	r3, r7
90011d04:	b209      	sxth	r1, r1
90011d06:	47c0      	blx	r8
90011d08:	69a4      	ldr	r4, [r4, #24]
90011d0a:	e7db      	b.n	90011cc4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90011d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011d10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90011d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011d14:	4c6d      	ldr	r4, [pc, #436]	@ (90011ecc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90011d16:	b0a1      	sub	sp, #132	@ 0x84
90011d18:	4606      	mov	r6, r0
90011d1a:	6824      	ldr	r4, [r4, #0]
90011d1c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90011d1e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90011d22:	2400      	movs	r4, #0
90011d24:	9303      	str	r3, [sp, #12]
90011d26:	802c      	strh	r4, [r5, #0]
90011d28:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
90011d2a:	802c      	strh	r4, [r5, #0]
90011d2c:	601c      	str	r4, [r3, #0]
90011d2e:	e9cd 1201 	strd	r1, r2, [sp, #4]
90011d32:	f7ff ffbd 	bl	90011cb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011d36:	f1b9 0f03 	cmp.w	r9, #3
90011d3a:	f340 80c1 	ble.w	90011ec0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90011d3e:	4631      	mov	r1, r6
90011d40:	a80c      	add	r0, sp, #48	@ 0x30
90011d42:	f007 fc8d 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011d46:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90011d4a:	9306      	str	r3, [sp, #24]
90011d4c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90011d50:	9307      	str	r3, [sp, #28]
90011d52:	9b03      	ldr	r3, [sp, #12]
90011d54:	f8d3 a000 	ldr.w	sl, [r3]
90011d58:	f1ba 0f00 	cmp.w	sl, #0
90011d5c:	f000 80b3 	beq.w	90011ec6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90011d60:	4651      	mov	r1, sl
90011d62:	a810      	add	r0, sp, #64	@ 0x40
90011d64:	f007 fc7c 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011d68:	2002      	movs	r0, #2
90011d6a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90011d6e:	9b01      	ldr	r3, [sp, #4]
90011d70:	9a06      	ldr	r2, [sp, #24]
90011d72:	fb91 f1f0 	sdiv	r1, r1, r0
90011d76:	189d      	adds	r5, r3, r2
90011d78:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90011d7c:	9a07      	ldr	r2, [sp, #28]
90011d7e:	4419      	add	r1, r3
90011d80:	9b02      	ldr	r3, [sp, #8]
90011d82:	4413      	add	r3, r2
90011d84:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90011d88:	1a6d      	subs	r5, r5, r1
90011d8a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90011d8e:	fb92 f2f0 	sdiv	r2, r2, r0
90011d92:	440a      	add	r2, r1
90011d94:	1a9b      	subs	r3, r3, r2
90011d96:	435b      	muls	r3, r3
90011d98:	fb05 3505 	mla	r5, r5, r5, r3
90011d9c:	4f4c      	ldr	r7, [pc, #304]	@ (90011ed0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90011d9e:	ac10      	add	r4, sp, #64	@ 0x40
90011da0:	f1b9 0f0c 	cmp.w	r9, #12
90011da4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011da6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011da8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011daa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011dac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011dae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011db0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90011db4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011db8:	f04f 0303 	mov.w	r3, #3
90011dbc:	bfd8      	it	le
90011dbe:	f109 32ff 	addle.w	r2, r9, #4294967295
90011dc2:	f04f 0400 	mov.w	r4, #0
90011dc6:	f8cd 9000 	str.w	r9, [sp]
90011dca:	bfcc      	ite	gt
90011dcc:	4698      	movgt	r8, r3
90011dce:	fb92 f8f3 	sdivle	r8, r2, r3
90011dd2:	1c63      	adds	r3, r4, #1
90011dd4:	aa10      	add	r2, sp, #64	@ 0x40
90011dd6:	f004 0401 	and.w	r4, r4, #1
90011dda:	f04f 0b00 	mov.w	fp, #0
90011dde:	9308      	str	r3, [sp, #32]
90011de0:	9b00      	ldr	r3, [sp, #0]
90011de2:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90011de6:	fb93 f3f8 	sdiv	r3, r3, r8
90011dea:	3404      	adds	r4, #4
90011dec:	b29b      	uxth	r3, r3
90011dee:	9304      	str	r3, [sp, #16]
90011df0:	9a04      	ldr	r2, [sp, #16]
90011df2:	f854 3c04 	ldr.w	r3, [r4, #-4]
90011df6:	fb13 f302 	smulbb	r3, r3, r2
90011dfa:	9a01      	ldr	r2, [sp, #4]
90011dfc:	b29b      	uxth	r3, r3
90011dfe:	1899      	adds	r1, r3, r2
90011e00:	9305      	str	r3, [sp, #20]
90011e02:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011e06:	b209      	sxth	r1, r1
90011e08:	4299      	cmp	r1, r3
90011e0a:	db4d      	blt.n	90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e0c:	8932      	ldrh	r2, [r6, #8]
90011e0e:	4413      	add	r3, r2
90011e10:	b21b      	sxth	r3, r3
90011e12:	4299      	cmp	r1, r3
90011e14:	da48      	bge.n	90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e16:	9b04      	ldr	r3, [sp, #16]
90011e18:	6827      	ldr	r7, [r4, #0]
90011e1a:	fb17 f703 	smulbb	r7, r7, r3
90011e1e:	9b02      	ldr	r3, [sp, #8]
90011e20:	b2bf      	uxth	r7, r7
90011e22:	18fa      	adds	r2, r7, r3
90011e24:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011e28:	b212      	sxth	r2, r2
90011e2a:	429a      	cmp	r2, r3
90011e2c:	db3c      	blt.n	90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e2e:	8970      	ldrh	r0, [r6, #10]
90011e30:	4403      	add	r3, r0
90011e32:	b21b      	sxth	r3, r3
90011e34:	429a      	cmp	r2, r3
90011e36:	da37      	bge.n	90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e38:	2300      	movs	r3, #0
90011e3a:	4630      	mov	r0, r6
90011e3c:	930b      	str	r3, [sp, #44]	@ 0x2c
90011e3e:	ab0b      	add	r3, sp, #44	@ 0x2c
90011e40:	f7ff ff36 	bl	90011cb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90011e44:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90011e46:	b37a      	cbz	r2, 90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e48:	4552      	cmp	r2, sl
90011e4a:	d02d      	beq.n	90011ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011e4c:	4611      	mov	r1, r2
90011e4e:	a80e      	add	r0, sp, #56	@ 0x38
90011e50:	9209      	str	r2, [sp, #36]	@ 0x24
90011e52:	f007 fc05 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011e56:	f04f 0e02 	mov.w	lr, #2
90011e5a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90011e5e:	9a06      	ldr	r2, [sp, #24]
90011e60:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90011e64:	9b01      	ldr	r3, [sp, #4]
90011e66:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90011e6a:	4413      	add	r3, r2
90011e6c:	9a07      	ldr	r2, [sp, #28]
90011e6e:	fb91 f1fe 	sdiv	r1, r1, lr
90011e72:	fb9c fcfe 	sdiv	ip, ip, lr
90011e76:	4401      	add	r1, r0
90011e78:	1a58      	subs	r0, r3, r1
90011e7a:	9b02      	ldr	r3, [sp, #8]
90011e7c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90011e80:	4413      	add	r3, r2
90011e82:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90011e84:	448c      	add	ip, r1
90011e86:	eba3 030c 	sub.w	r3, r3, ip
90011e8a:	435b      	muls	r3, r3
90011e8c:	fb00 3300 	mla	r3, r0, r0, r3
90011e90:	42ab      	cmp	r3, r5
90011e92:	d208      	bcs.n	90011ea6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90011e94:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90011e96:	461d      	mov	r5, r3
90011e98:	9803      	ldr	r0, [sp, #12]
90011e9a:	6001      	str	r1, [r0, #0]
90011e9c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90011e9e:	9805      	ldr	r0, [sp, #20]
90011ea0:	8008      	strh	r0, [r1, #0]
90011ea2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90011ea4:	800f      	strh	r7, [r1, #0]
90011ea6:	4692      	mov	sl, r2
90011ea8:	f10b 0b01 	add.w	fp, fp, #1
90011eac:	3408      	adds	r4, #8
90011eae:	f1bb 0f04 	cmp.w	fp, #4
90011eb2:	d19d      	bne.n	90011df0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90011eb4:	9b00      	ldr	r3, [sp, #0]
90011eb6:	9c08      	ldr	r4, [sp, #32]
90011eb8:	444b      	add	r3, r9
90011eba:	4544      	cmp	r4, r8
90011ebc:	9300      	str	r3, [sp, #0]
90011ebe:	d188      	bne.n	90011dd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90011ec0:	b021      	add	sp, #132	@ 0x84
90011ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011ec6:	f04f 35ff 	mov.w	r5, #4294967295
90011eca:	e767      	b.n	90011d9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90011ecc:	240218cc 	.word	0x240218cc
90011ed0:	9002c6d8 	.word	0x9002c6d8

90011ed4 <_ZN8touchgfx4RectaNERKS0_>:
90011ed4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011ed8:	f9b1 7000 	ldrsh.w	r7, [r1]
90011edc:	888c      	ldrh	r4, [r1, #4]
90011ede:	f9b0 9000 	ldrsh.w	r9, [r0]
90011ee2:	443c      	add	r4, r7
90011ee4:	b2a4      	uxth	r4, r4
90011ee6:	fa0f f884 	sxth.w	r8, r4
90011eea:	45c1      	cmp	r9, r8
90011eec:	da2f      	bge.n	90011f4e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011eee:	8882      	ldrh	r2, [r0, #4]
90011ef0:	444a      	add	r2, r9
90011ef2:	b292      	uxth	r2, r2
90011ef4:	fa0f fe82 	sxth.w	lr, r2
90011ef8:	4577      	cmp	r7, lr
90011efa:	da28      	bge.n	90011f4e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011efc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90011f00:	88cb      	ldrh	r3, [r1, #6]
90011f02:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90011f06:	442b      	add	r3, r5
90011f08:	b21b      	sxth	r3, r3
90011f0a:	429e      	cmp	r6, r3
90011f0c:	da1f      	bge.n	90011f4e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011f0e:	88c3      	ldrh	r3, [r0, #6]
90011f10:	4433      	add	r3, r6
90011f12:	b29b      	uxth	r3, r3
90011f14:	fa0f fc83 	sxth.w	ip, r3
90011f18:	4565      	cmp	r5, ip
90011f1a:	da18      	bge.n	90011f4e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011f1c:	454f      	cmp	r7, r9
90011f1e:	bfb8      	it	lt
90011f20:	464f      	movlt	r7, r9
90011f22:	42b5      	cmp	r5, r6
90011f24:	bfb8      	it	lt
90011f26:	4635      	movlt	r5, r6
90011f28:	45f0      	cmp	r8, lr
90011f2a:	bfd8      	it	le
90011f2c:	4622      	movle	r2, r4
90011f2e:	1bd2      	subs	r2, r2, r7
90011f30:	8082      	strh	r2, [r0, #4]
90011f32:	884a      	ldrh	r2, [r1, #2]
90011f34:	88c9      	ldrh	r1, [r1, #6]
90011f36:	8007      	strh	r7, [r0, #0]
90011f38:	440a      	add	r2, r1
90011f3a:	8045      	strh	r5, [r0, #2]
90011f3c:	b292      	uxth	r2, r2
90011f3e:	b211      	sxth	r1, r2
90011f40:	458c      	cmp	ip, r1
90011f42:	bfa8      	it	ge
90011f44:	4613      	movge	r3, r2
90011f46:	1b5b      	subs	r3, r3, r5
90011f48:	80c3      	strh	r3, [r0, #6]
90011f4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011f4e:	2300      	movs	r3, #0
90011f50:	8003      	strh	r3, [r0, #0]
90011f52:	8043      	strh	r3, [r0, #2]
90011f54:	8083      	strh	r3, [r0, #4]
90011f56:	80c3      	strh	r3, [r0, #6]
90011f58:	e7f7      	b.n	90011f4a <_ZN8touchgfx4RectaNERKS0_+0x76>

90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>:
90011f5a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90011f5e:	2b00      	cmp	r3, #0
90011f60:	dd06      	ble.n	90011f70 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90011f62:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90011f66:	2800      	cmp	r0, #0
90011f68:	bfcc      	ite	gt
90011f6a:	2000      	movgt	r0, #0
90011f6c:	2001      	movle	r0, #1
90011f6e:	4770      	bx	lr
90011f70:	2001      	movs	r0, #1
90011f72:	4770      	bx	lr

90011f74 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90011f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011f78:	2300      	movs	r3, #0
90011f7a:	4604      	mov	r4, r0
90011f7c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90011f7e:	8003      	strh	r3, [r0, #0]
90011f80:	8043      	strh	r3, [r0, #2]
90011f82:	8083      	strh	r3, [r0, #4]
90011f84:	80c3      	strh	r3, [r0, #6]
90011f86:	2d00      	cmp	r5, #0
90011f88:	d040      	beq.n	9001200c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90011f8a:	1d28      	adds	r0, r5, #4
90011f8c:	f7ff ffe5 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90011f90:	b988      	cbnz	r0, 90011fb6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011f92:	4620      	mov	r0, r4
90011f94:	f7ff ffe1 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90011f98:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90011f9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90011fa0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90011fa4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90011fa8:	b138      	cbz	r0, 90011fba <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90011faa:	8022      	strh	r2, [r4, #0]
90011fac:	8063      	strh	r3, [r4, #2]
90011fae:	f8a4 e004 	strh.w	lr, [r4, #4]
90011fb2:	f8a4 c006 	strh.w	ip, [r4, #6]
90011fb6:	69ad      	ldr	r5, [r5, #24]
90011fb8:	e7e5      	b.n	90011f86 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90011fba:	f9b4 0000 	ldrsh.w	r0, [r4]
90011fbe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90011fc2:	4290      	cmp	r0, r2
90011fc4:	4607      	mov	r7, r0
90011fc6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90011fca:	460e      	mov	r6, r1
90011fcc:	bfa8      	it	ge
90011fce:	4617      	movge	r7, r2
90011fd0:	4299      	cmp	r1, r3
90011fd2:	4472      	add	r2, lr
90011fd4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011fd8:	bfa8      	it	ge
90011fda:	461e      	movge	r6, r3
90011fdc:	4440      	add	r0, r8
90011fde:	4471      	add	r1, lr
90011fe0:	4463      	add	r3, ip
90011fe2:	b200      	sxth	r0, r0
90011fe4:	8027      	strh	r7, [r4, #0]
90011fe6:	b212      	sxth	r2, r2
90011fe8:	8066      	strh	r6, [r4, #2]
90011fea:	b209      	sxth	r1, r1
90011fec:	b21b      	sxth	r3, r3
90011fee:	4290      	cmp	r0, r2
90011ff0:	bfac      	ite	ge
90011ff2:	ebc7 0200 	rsbge	r2, r7, r0
90011ff6:	ebc7 0202 	rsblt	r2, r7, r2
90011ffa:	4299      	cmp	r1, r3
90011ffc:	bfac      	ite	ge
90011ffe:	ebc6 0301 	rsbge	r3, r6, r1
90012002:	ebc6 0303 	rsblt	r3, r6, r3
90012006:	80a2      	strh	r2, [r4, #4]
90012008:	80e3      	strh	r3, [r4, #6]
9001200a:	e7d4      	b.n	90011fb6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001200c:	4620      	mov	r0, r4
9001200e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012012 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90012012:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90012016:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001201a:	b383      	cbz	r3, 9001207e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001201c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001201e:	b374      	cbz	r4, 9001207e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012020:	f9b1 5000 	ldrsh.w	r5, [r1]
90012024:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90012028:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9001202c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90012030:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90012034:	b303      	cbz	r3, 90012078 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012036:	4668      	mov	r0, sp
90012038:	1d21      	adds	r1, r4, #4
9001203a:	f8ad 5000 	strh.w	r5, [sp]
9001203e:	f8ad 6002 	strh.w	r6, [sp, #2]
90012042:	f8ad 7004 	strh.w	r7, [sp, #4]
90012046:	f8ad 8006 	strh.w	r8, [sp, #6]
9001204a:	f7ff ff43 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001204e:	4668      	mov	r0, sp
90012050:	f7ff ff83 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90012054:	b980      	cbnz	r0, 90012078 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012056:	f8bd 3000 	ldrh.w	r3, [sp]
9001205a:	4669      	mov	r1, sp
9001205c:	88a2      	ldrh	r2, [r4, #4]
9001205e:	4620      	mov	r0, r4
90012060:	1a9b      	subs	r3, r3, r2
90012062:	88e2      	ldrh	r2, [r4, #6]
90012064:	f8ad 3000 	strh.w	r3, [sp]
90012068:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001206c:	1a9b      	subs	r3, r3, r2
9001206e:	f8ad 3002 	strh.w	r3, [sp, #2]
90012072:	6823      	ldr	r3, [r4, #0]
90012074:	689b      	ldr	r3, [r3, #8]
90012076:	4798      	blx	r3
90012078:	69a4      	ldr	r4, [r4, #24]
9001207a:	2c00      	cmp	r4, #0
9001207c:	d1d8      	bne.n	90012030 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001207e:	b002      	add	sp, #8
90012080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012084 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90012084:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012086:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001208a:	460d      	mov	r5, r1
9001208c:	4616      	mov	r6, r2
9001208e:	b323      	cbz	r3, 900120da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012090:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90012092:	b314      	cbz	r4, 900120da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012094:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90012098:	b1eb      	cbz	r3, 900120d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001209a:	6828      	ldr	r0, [r5, #0]
9001209c:	466b      	mov	r3, sp
9001209e:	6869      	ldr	r1, [r5, #4]
900120a0:	c303      	stmia	r3!, {r0, r1}
900120a2:	4668      	mov	r0, sp
900120a4:	1d21      	adds	r1, r4, #4
900120a6:	f7ff ff15 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900120aa:	4668      	mov	r0, sp
900120ac:	f7ff ff55 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900120b0:	b988      	cbnz	r0, 900120d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900120b2:	f8bd 3000 	ldrh.w	r3, [sp]
900120b6:	4669      	mov	r1, sp
900120b8:	88a2      	ldrh	r2, [r4, #4]
900120ba:	4620      	mov	r0, r4
900120bc:	1a9b      	subs	r3, r3, r2
900120be:	88e2      	ldrh	r2, [r4, #6]
900120c0:	f8ad 3000 	strh.w	r3, [sp]
900120c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900120c8:	1a9b      	subs	r3, r3, r2
900120ca:	4632      	mov	r2, r6
900120cc:	f8ad 3002 	strh.w	r3, [sp, #2]
900120d0:	6823      	ldr	r3, [r4, #0]
900120d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
900120d4:	4798      	blx	r3
900120d6:	69a4      	ldr	r4, [r4, #24]
900120d8:	e7db      	b.n	90012092 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900120da:	b002      	add	sp, #8
900120dc:	bd70      	pop	{r4, r5, r6, pc}

900120de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900120de:	6803      	ldr	r3, [r0, #0]
900120e0:	b513      	push	{r0, r1, r4, lr}
900120e2:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
900120e6:	2300      	movs	r3, #0
900120e8:	e9cd 3300 	strd	r3, r3, [sp]
900120ec:	466b      	mov	r3, sp
900120ee:	47a0      	blx	r4
900120f0:	b002      	add	sp, #8
900120f2:	bd10      	pop	{r4, pc}

900120f4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900120f4:	2301      	movs	r3, #1
900120f6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900120fa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900120fe:	4770      	bx	lr

90012100 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90012100:	2301      	movs	r3, #1
90012102:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90012106:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001210a:	4770      	bx	lr

9001210c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9001210c:	6843      	ldr	r3, [r0, #4]
9001210e:	2201      	movs	r2, #1
90012110:	725a      	strb	r2, [r3, #9]
90012112:	6840      	ldr	r0, [r0, #4]
90012114:	6803      	ldr	r3, [r0, #0]
90012116:	691b      	ldr	r3, [r3, #16]
90012118:	4718      	bx	r3

9001211a <_ZN8touchgfx3HAL8flushDMAEv>:
9001211a:	6840      	ldr	r0, [r0, #4]
9001211c:	6803      	ldr	r3, [r0, #0]
9001211e:	689b      	ldr	r3, [r3, #8]
90012120:	4718      	bx	r3

90012122 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90012122:	b530      	push	{r4, r5, lr}
90012124:	b08b      	sub	sp, #44	@ 0x2c
90012126:	6804      	ldr	r4, [r0, #0]
90012128:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9001212c:	9509      	str	r5, [sp, #36]	@ 0x24
9001212e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90012132:	9508      	str	r5, [sp, #32]
90012134:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90012138:	9507      	str	r5, [sp, #28]
9001213a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9001213e:	9506      	str	r5, [sp, #24]
90012140:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90012144:	9505      	str	r5, [sp, #20]
90012146:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001214a:	9504      	str	r5, [sp, #16]
9001214c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90012150:	9503      	str	r5, [sp, #12]
90012152:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90012156:	9502      	str	r5, [sp, #8]
90012158:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001215c:	e9cd 3500 	strd	r3, r5, [sp]
90012160:	4613      	mov	r3, r2
90012162:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90012164:	2200      	movs	r2, #0
90012166:	47a0      	blx	r4
90012168:	b00b      	add	sp, #44	@ 0x2c
9001216a:	bd30      	pop	{r4, r5, pc}

9001216c <_ZN8touchgfx3HAL10beginFrameEv>:
9001216c:	4b04      	ldr	r3, [pc, #16]	@ (90012180 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001216e:	781b      	ldrb	r3, [r3, #0]
90012170:	b123      	cbz	r3, 9001217c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90012172:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90012176:	f080 0001 	eor.w	r0, r0, #1
9001217a:	4770      	bx	lr
9001217c:	2001      	movs	r0, #1
9001217e:	4770      	bx	lr
90012180:	240218ca 	.word	0x240218ca

90012184 <_ZN8touchgfx3HAL8endFrameEv>:
90012184:	b510      	push	{r4, lr}
90012186:	4604      	mov	r4, r0
90012188:	6840      	ldr	r0, [r0, #4]
9001218a:	6803      	ldr	r3, [r0, #0]
9001218c:	689b      	ldr	r3, [r3, #8]
9001218e:	4798      	blx	r3
90012190:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90012194:	b113      	cbz	r3, 9001219c <_ZN8touchgfx3HAL8endFrameEv+0x18>
90012196:	2301      	movs	r3, #1
90012198:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001219c:	bd10      	pop	{r4, pc}

9001219e <_ZN8touchgfx3HAL10initializeEv>:
9001219e:	b510      	push	{r4, lr}
900121a0:	4604      	mov	r4, r0
900121a2:	f7f0 f88d 	bl	900022c0 <_ZN8touchgfx10OSWrappers10initializeEv>
900121a6:	f7ee fd5f 	bl	90000c68 <_ZN8touchgfx4GPIO4initEv>
900121aa:	6860      	ldr	r0, [r4, #4]
900121ac:	6803      	ldr	r3, [r0, #0]
900121ae:	68db      	ldr	r3, [r3, #12]
900121b0:	4798      	blx	r3
900121b2:	68e0      	ldr	r0, [r4, #12]
900121b4:	6803      	ldr	r3, [r0, #0]
900121b6:	689b      	ldr	r3, [r3, #8]
900121b8:	4798      	blx	r3
900121ba:	6823      	ldr	r3, [r4, #0]
900121bc:	4620      	mov	r0, r4
900121be:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
900121c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900121c4:	4718      	bx	r3
	...

900121c8 <_ZN8touchgfx3HAL4tickEv>:
900121c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900121ca:	6803      	ldr	r3, [r0, #0]
900121cc:	4604      	mov	r4, r0
900121ce:	4d62      	ldr	r5, [pc, #392]	@ (90012358 <_ZN8touchgfx3HAL4tickEv+0x190>)
900121d0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
900121d4:	4798      	blx	r3
900121d6:	2800      	cmp	r0, #0
900121d8:	f000 809e 	beq.w	90012318 <_ZN8touchgfx3HAL4tickEv+0x150>
900121dc:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900121e0:	2b02      	cmp	r3, #2
900121e2:	d002      	beq.n	900121ea <_ZN8touchgfx3HAL4tickEv+0x22>
900121e4:	2001      	movs	r0, #1
900121e6:	f7ee fd57 	bl	90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900121ea:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900121ee:	2600      	movs	r6, #0
900121f0:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900121f4:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900121f8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900121fc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90012200:	b133      	cbz	r3, 90012210 <_ZN8touchgfx3HAL4tickEv+0x48>
90012202:	6823      	ldr	r3, [r4, #0]
90012204:	4620      	mov	r0, r4
90012206:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
9001220a:	4798      	blx	r3
9001220c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012210:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90012214:	2601      	movs	r6, #1
90012216:	6862      	ldr	r2, [r4, #4]
90012218:	f083 0301 	eor.w	r3, r3, #1
9001221c:	702e      	strb	r6, [r5, #0]
9001221e:	7253      	strb	r3, [r2, #9]
90012220:	f005 ffa2 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90012224:	6803      	ldr	r3, [r0, #0]
90012226:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012228:	4798      	blx	r3
9001222a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001222e:	b90b      	cbnz	r3, 90012234 <_ZN8touchgfx3HAL4tickEv+0x6c>
90012230:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90012234:	f005 ff98 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90012238:	6803      	ldr	r3, [r0, #0]
9001223a:	695b      	ldr	r3, [r3, #20]
9001223c:	4798      	blx	r3
9001223e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90012240:	6803      	ldr	r3, [r0, #0]
90012242:	691b      	ldr	r3, [r3, #16]
90012244:	4798      	blx	r3
90012246:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001224a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9001224e:	3b01      	subs	r3, #1
90012250:	b2db      	uxtb	r3, r3
90012252:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90012256:	b10a      	cbz	r2, 9001225c <_ZN8touchgfx3HAL4tickEv+0x94>
90012258:	2b00      	cmp	r3, #0
9001225a:	d1eb      	bne.n	90012234 <_ZN8touchgfx3HAL4tickEv+0x6c>
9001225c:	4a3f      	ldr	r2, [pc, #252]	@ (9001235c <_ZN8touchgfx3HAL4tickEv+0x194>)
9001225e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90012262:	7813      	ldrb	r3, [r2, #0]
90012264:	3301      	adds	r3, #1
90012266:	b25b      	sxtb	r3, r3
90012268:	4299      	cmp	r1, r3
9001226a:	7013      	strb	r3, [r2, #0]
9001226c:	dc10      	bgt.n	90012290 <_ZN8touchgfx3HAL4tickEv+0xc8>
9001226e:	2300      	movs	r3, #0
90012270:	68e0      	ldr	r0, [r4, #12]
90012272:	a902      	add	r1, sp, #8
90012274:	7013      	strb	r3, [r2, #0]
90012276:	aa03      	add	r2, sp, #12
90012278:	6803      	ldr	r3, [r0, #0]
9001227a:	68db      	ldr	r3, [r3, #12]
9001227c:	4798      	blx	r3
9001227e:	6823      	ldr	r3, [r4, #0]
90012280:	2800      	cmp	r0, #0
90012282:	d059      	beq.n	90012338 <_ZN8touchgfx3HAL4tickEv+0x170>
90012284:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90012288:	4620      	mov	r0, r4
9001228a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001228e:	4798      	blx	r3
90012290:	2300      	movs	r3, #0
90012292:	6960      	ldr	r0, [r4, #20]
90012294:	f88d 3007 	strb.w	r3, [sp, #7]
90012298:	b158      	cbz	r0, 900122b2 <_ZN8touchgfx3HAL4tickEv+0xea>
9001229a:	6803      	ldr	r3, [r0, #0]
9001229c:	f10d 0107 	add.w	r1, sp, #7
900122a0:	68db      	ldr	r3, [r3, #12]
900122a2:	4798      	blx	r3
900122a4:	b128      	cbz	r0, 900122b2 <_ZN8touchgfx3HAL4tickEv+0xea>
900122a6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900122a8:	f89d 1007 	ldrb.w	r1, [sp, #7]
900122ac:	6803      	ldr	r3, [r0, #0]
900122ae:	68db      	ldr	r3, [r3, #12]
900122b0:	4798      	blx	r3
900122b2:	f104 001c 	add.w	r0, r4, #28
900122b6:	f017 ffdf 	bl	9002a278 <_ZN8touchgfx8Gestures4tickEv>
900122ba:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
900122be:	b30b      	cbz	r3, 90012304 <_ZN8touchgfx3HAL4tickEv+0x13c>
900122c0:	6920      	ldr	r0, [r4, #16]
900122c2:	6803      	ldr	r3, [r0, #0]
900122c4:	691b      	ldr	r3, [r3, #16]
900122c6:	4798      	blx	r3
900122c8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900122ca:	4606      	mov	r6, r0
900122cc:	b903      	cbnz	r3, 900122d0 <_ZN8touchgfx3HAL4tickEv+0x108>
900122ce:	6760      	str	r0, [r4, #116]	@ 0x74
900122d0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900122d2:	4a23      	ldr	r2, [pc, #140]	@ (90012360 <_ZN8touchgfx3HAL4tickEv+0x198>)
900122d4:	1af3      	subs	r3, r6, r3
900122d6:	4293      	cmp	r3, r2
900122d8:	d914      	bls.n	90012304 <_ZN8touchgfx3HAL4tickEv+0x13c>
900122da:	6920      	ldr	r0, [r4, #16]
900122dc:	6803      	ldr	r3, [r0, #0]
900122de:	699b      	ldr	r3, [r3, #24]
900122e0:	4798      	blx	r3
900122e2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900122e4:	2264      	movs	r2, #100	@ 0x64
900122e6:	1af3      	subs	r3, r6, r3
900122e8:	fbb3 f3f2 	udiv	r3, r3, r2
900122ec:	fbb0 f0f3 	udiv	r0, r0, r3
900122f0:	2800      	cmp	r0, #0
900122f2:	dc26      	bgt.n	90012342 <_ZN8touchgfx3HAL4tickEv+0x17a>
900122f4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
900122f8:	6920      	ldr	r0, [r4, #16]
900122fa:	2100      	movs	r1, #0
900122fc:	6803      	ldr	r3, [r0, #0]
900122fe:	69db      	ldr	r3, [r3, #28]
90012300:	4798      	blx	r3
90012302:	6766      	str	r6, [r4, #116]	@ 0x74
90012304:	6823      	ldr	r3, [r4, #0]
90012306:	4620      	mov	r0, r4
90012308:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
9001230c:	4798      	blx	r3
9001230e:	f005 ff2b 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90012312:	6803      	ldr	r3, [r0, #0]
90012314:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012316:	4798      	blx	r3
90012318:	6823      	ldr	r3, [r4, #0]
9001231a:	4620      	mov	r0, r4
9001231c:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90012320:	4798      	blx	r3
90012322:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90012326:	2b02      	cmp	r3, #2
90012328:	d002      	beq.n	90012330 <_ZN8touchgfx3HAL4tickEv+0x168>
9001232a:	2001      	movs	r0, #1
9001232c:	f7ee fcd0 	bl	90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012330:	2300      	movs	r3, #0
90012332:	702b      	strb	r3, [r5, #0]
90012334:	b004      	add	sp, #16
90012336:	bd70      	pop	{r4, r5, r6, pc}
90012338:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
9001233c:	4620      	mov	r0, r4
9001233e:	4798      	blx	r3
90012340:	e7a6      	b.n	90012290 <_ZN8touchgfx3HAL4tickEv+0xc8>
90012342:	2863      	cmp	r0, #99	@ 0x63
90012344:	bfcb      	itete	gt
90012346:	2300      	movgt	r3, #0
90012348:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
9001234c:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90012350:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90012354:	e7d0      	b.n	900122f8 <_ZN8touchgfx3HAL4tickEv+0x130>
90012356:	bf00      	nop
90012358:	240218d0 	.word	0x240218d0
9001235c:	240218d1 	.word	0x240218d1
90012360:	05f5e100 	.word	0x05f5e100

90012364 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90012364:	b510      	push	{r4, lr}
90012366:	4604      	mov	r4, r0
90012368:	f7ef ffdc 	bl	90002324 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
9001236c:	2200      	movs	r2, #0
9001236e:	6863      	ldr	r3, [r4, #4]
90012370:	729a      	strb	r2, [r3, #10]
90012372:	bd10      	pop	{r4, pc}

90012374 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90012374:	65c1      	str	r1, [r0, #92]	@ 0x5c
90012376:	301c      	adds	r0, #28
90012378:	f017 bf7c 	b.w	9002a274 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

9001237c <_ZN8touchgfx3HAL5touchEll>:
9001237c:	b530      	push	{r4, r5, lr}
9001237e:	b087      	sub	sp, #28
90012380:	4604      	mov	r4, r0
90012382:	a804      	add	r0, sp, #16
90012384:	e9cd 1204 	strd	r1, r2, [sp, #16]
90012388:	f005 fcb8 	bl	90017cfc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
9001238c:	9b04      	ldr	r3, [sp, #16]
9001238e:	a906      	add	r1, sp, #24
90012390:	a803      	add	r0, sp, #12
90012392:	f8ad 300c 	strh.w	r3, [sp, #12]
90012396:	9b05      	ldr	r3, [sp, #20]
90012398:	f821 3d0a 	strh.w	r3, [r1, #-10]!
9001239c:	f005 fd00 	bl	90017da0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900123a0:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
900123a4:	f104 001c 	add.w	r0, r4, #28
900123a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900123ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900123b0:	b189      	cbz	r1, 900123d6 <_ZN8touchgfx3HAL5touchEll+0x5a>
900123b2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900123b6:	9300      	str	r3, [sp, #0]
900123b8:	4613      	mov	r3, r2
900123ba:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900123be:	462a      	mov	r2, r5
900123c0:	f017 ff68 	bl	9002a294 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900123c4:	b128      	cbz	r0, 900123d2 <_ZN8touchgfx3HAL5touchEll+0x56>
900123c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900123ca:	6623      	str	r3, [r4, #96]	@ 0x60
900123cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900123d0:	6663      	str	r3, [r4, #100]	@ 0x64
900123d2:	b007      	add	sp, #28
900123d4:	bd30      	pop	{r4, r5, pc}
900123d6:	f017 ff9d 	bl	9002a314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900123da:	2301      	movs	r3, #1
900123dc:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900123e0:	e7f1      	b.n	900123c6 <_ZN8touchgfx3HAL5touchEll+0x4a>

900123e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900123e2:	b510      	push	{r4, lr}
900123e4:	2b00      	cmp	r3, #0
900123e6:	d046      	beq.n	90012476 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900123e8:	ea81 0002 	eor.w	r0, r1, r2
900123ec:	07c4      	lsls	r4, r0, #31
900123ee:	d508      	bpl.n	90012402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900123f0:	440b      	add	r3, r1
900123f2:	3a01      	subs	r2, #1
900123f4:	428b      	cmp	r3, r1
900123f6:	d93e      	bls.n	90012476 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900123f8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900123fc:	f801 0b01 	strb.w	r0, [r1], #1
90012400:	e7f8      	b.n	900123f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90012402:	07d0      	lsls	r0, r2, #31
90012404:	bf42      	ittt	mi
90012406:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001240a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001240e:	f801 0b01 	strbmi.w	r0, [r1], #1
90012412:	2b01      	cmp	r3, #1
90012414:	d911      	bls.n	9001243a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012416:	ea81 0402 	eor.w	r4, r1, r2
9001241a:	4610      	mov	r0, r2
9001241c:	07a4      	lsls	r4, r4, #30
9001241e:	d022      	beq.n	90012466 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90012420:	f023 0401 	bic.w	r4, r3, #1
90012424:	440c      	add	r4, r1
90012426:	428c      	cmp	r4, r1
90012428:	4602      	mov	r2, r0
9001242a:	d904      	bls.n	90012436 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001242c:	8812      	ldrh	r2, [r2, #0]
9001242e:	3002      	adds	r0, #2
90012430:	f821 2b02 	strh.w	r2, [r1], #2
90012434:	e7f7      	b.n	90012426 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90012436:	f003 0301 	and.w	r3, r3, #1
9001243a:	f023 0003 	bic.w	r0, r3, #3
9001243e:	4408      	add	r0, r1
90012440:	4288      	cmp	r0, r1
90012442:	4614      	mov	r4, r2
90012444:	d904      	bls.n	90012450 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90012446:	6824      	ldr	r4, [r4, #0]
90012448:	3204      	adds	r2, #4
9001244a:	f841 4b04 	str.w	r4, [r1], #4
9001244e:	e7f7      	b.n	90012440 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90012450:	f003 0303 	and.w	r3, r3, #3
90012454:	3a01      	subs	r2, #1
90012456:	440b      	add	r3, r1
90012458:	428b      	cmp	r3, r1
9001245a:	d90c      	bls.n	90012476 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001245c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90012460:	f801 0b01 	strb.w	r0, [r1], #1
90012464:	e7f8      	b.n	90012458 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90012466:	0790      	lsls	r0, r2, #30
90012468:	d0e7      	beq.n	9001243a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001246a:	f832 0b02 	ldrh.w	r0, [r2], #2
9001246e:	3b02      	subs	r3, #2
90012470:	f821 0b02 	strh.w	r0, [r1], #2
90012474:	e7e1      	b.n	9001243a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012476:	2001      	movs	r0, #1
90012478:	bd10      	pop	{r4, pc}

9001247a <_ZN8touchgfx3HAL7noTouchEv>:
9001247a:	b510      	push	{r4, lr}
9001247c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90012480:	4604      	mov	r4, r0
90012482:	b153      	cbz	r3, 9001249a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90012484:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90012488:	2101      	movs	r1, #1
9001248a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
9001248e:	301c      	adds	r0, #28
90012490:	f017 ff40 	bl	9002a314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90012494:	2300      	movs	r3, #0
90012496:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001249a:	bd10      	pop	{r4, pc}

9001249c <_ZN8touchgfx8Drawable5setXYEss>:
9001249c:	b570      	push	{r4, r5, r6, lr}
9001249e:	6803      	ldr	r3, [r0, #0]
900124a0:	4604      	mov	r4, r0
900124a2:	4615      	mov	r5, r2
900124a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900124a6:	4798      	blx	r3
900124a8:	6823      	ldr	r3, [r4, #0]
900124aa:	4629      	mov	r1, r5
900124ac:	4620      	mov	r0, r4
900124ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900124b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900124b4:	4718      	bx	r3
	...

900124b8 <_ZN8touchgfx3HAL3lcdEv>:
900124b8:	4b04      	ldr	r3, [pc, #16]	@ (900124cc <_ZN8touchgfx3HAL3lcdEv+0x14>)
900124ba:	681b      	ldr	r3, [r3, #0]
900124bc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900124c0:	b10a      	cbz	r2, 900124c6 <_ZN8touchgfx3HAL3lcdEv+0xe>
900124c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900124c4:	b900      	cbnz	r0, 900124c8 <_ZN8touchgfx3HAL3lcdEv+0x10>
900124c6:	6898      	ldr	r0, [r3, #8]
900124c8:	4770      	bx	lr
900124ca:	bf00      	nop
900124cc:	240218cc 	.word	0x240218cc

900124d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900124d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900124d4:	b085      	sub	sp, #20
900124d6:	4604      	mov	r4, r0
900124d8:	2000      	movs	r0, #0
900124da:	4699      	mov	r9, r3
900124dc:	ad04      	add	r5, sp, #16
900124de:	460f      	mov	r7, r1
900124e0:	4690      	mov	r8, r2
900124e2:	f845 0d04 	str.w	r0, [r5, #-4]!
900124e6:	69a0      	ldr	r0, [r4, #24]
900124e8:	6806      	ldr	r6, [r0, #0]
900124ea:	9501      	str	r5, [sp, #4]
900124ec:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900124f0:	9500      	str	r5, [sp, #0]
900124f2:	6835      	ldr	r5, [r6, #0]
900124f4:	47a8      	blx	r5
900124f6:	4d10      	ldr	r5, [pc, #64]	@ (90012538 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900124f8:	4606      	mov	r6, r0
900124fa:	f8a5 9000 	strh.w	r9, [r5]
900124fe:	f7ff ffdb 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012502:	6803      	ldr	r3, [r0, #0]
90012504:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012506:	4798      	blx	r3
90012508:	b128      	cbz	r0, 90012516 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001250a:	2801      	cmp	r0, #1
9001250c:	d00b      	beq.n	90012526 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001250e:	4630      	mov	r0, r6
90012510:	b005      	add	sp, #20
90012512:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012516:	882b      	ldrh	r3, [r5, #0]
90012518:	fb08 7203 	mla	r2, r8, r3, r7
9001251c:	9b03      	ldr	r3, [sp, #12]
9001251e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90012522:	63e3      	str	r3, [r4, #60]	@ 0x3c
90012524:	e7f3      	b.n	9001250e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012526:	882a      	ldrh	r2, [r5, #0]
90012528:	9b03      	ldr	r3, [sp, #12]
9001252a:	fb08 7202 	mla	r2, r8, r2, r7
9001252e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90012532:	1a9a      	subs	r2, r3, r2
90012534:	63e2      	str	r2, [r4, #60]	@ 0x3c
90012536:	e7ea      	b.n	9001250e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012538:	240218c6 	.word	0x240218c6

9001253c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
9001253c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001253e:	4b15      	ldr	r3, [pc, #84]	@ (90012594 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90012540:	460f      	mov	r7, r1
90012542:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
90012546:	4606      	mov	r6, r0
90012548:	881b      	ldrh	r3, [r3, #0]
9001254a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9001254c:	fb93 f4f4 	sdiv	r4, r3, r4
90012550:	f7ff ffb2 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012554:	6803      	ldr	r3, [r0, #0]
90012556:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012558:	4798      	blx	r3
9001255a:	2801      	cmp	r0, #1
9001255c:	d00b      	beq.n	90012576 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
9001255e:	d303      	bcc.n	90012568 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90012560:	2802      	cmp	r0, #2
90012562:	d010      	beq.n	90012586 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90012564:	63f5      	str	r5, [r6, #60]	@ 0x3c
90012566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90012568:	4b0b      	ldr	r3, [pc, #44]	@ (90012598 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001256a:	437c      	muls	r4, r7
9001256c:	8819      	ldrh	r1, [r3, #0]
9001256e:	434c      	muls	r4, r1
90012570:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90012574:	e7f6      	b.n	90012564 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012576:	4b08      	ldr	r3, [pc, #32]	@ (90012598 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90012578:	437c      	muls	r4, r7
9001257a:	8819      	ldrh	r1, [r3, #0]
9001257c:	434c      	muls	r4, r1
9001257e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90012582:	1b2d      	subs	r5, r5, r4
90012584:	e7ee      	b.n	90012564 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012586:	4b04      	ldr	r3, [pc, #16]	@ (90012598 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90012588:	437c      	muls	r4, r7
9001258a:	8819      	ldrh	r1, [r3, #0]
9001258c:	434c      	muls	r4, r1
9001258e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90012592:	e7e7      	b.n	90012564 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012594:	240218c8 	.word	0x240218c8
90012598:	240218c6 	.word	0x240218c6

9001259c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001259c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001259e:	b08b      	sub	sp, #44	@ 0x2c
900125a0:	4617      	mov	r7, r2
900125a2:	4604      	mov	r4, r0
900125a4:	460e      	mov	r6, r1
900125a6:	461d      	mov	r5, r3
900125a8:	f7ff ff86 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
900125ac:	6803      	ldr	r3, [r0, #0]
900125ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900125b0:	4798      	blx	r3
900125b2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900125b6:	9007      	str	r0, [sp, #28]
900125b8:	4631      	mov	r1, r6
900125ba:	6822      	ldr	r2, [r4, #0]
900125bc:	e9cd 0308 	strd	r0, r3, [sp, #32]
900125c0:	4b0c      	ldr	r3, [pc, #48]	@ (900125f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900125c2:	4620      	mov	r0, r4
900125c4:	881b      	ldrh	r3, [r3, #0]
900125c6:	9306      	str	r3, [sp, #24]
900125c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900125cc:	9305      	str	r3, [sp, #20]
900125ce:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
900125d2:	9304      	str	r3, [sp, #16]
900125d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900125d8:	9303      	str	r3, [sp, #12]
900125da:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900125de:	9302      	str	r3, [sp, #8]
900125e0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900125e4:	e9cd 5300 	strd	r5, r3, [sp]
900125e8:	463b      	mov	r3, r7
900125ea:	6c15      	ldr	r5, [r2, #64]	@ 0x40
900125ec:	2200      	movs	r2, #0
900125ee:	47a8      	blx	r5
900125f0:	b00b      	add	sp, #44	@ 0x2c
900125f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900125f4:	240218c6 	.word	0x240218c6

900125f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900125f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900125fc:	4698      	mov	r8, r3
900125fe:	6803      	ldr	r3, [r0, #0]
90012600:	b08b      	sub	sp, #44	@ 0x2c
90012602:	4617      	mov	r7, r2
90012604:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
90012606:	460e      	mov	r6, r1
90012608:	4b13      	ldr	r3, [pc, #76]	@ (90012658 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001260a:	4604      	mov	r4, r0
9001260c:	f8b3 9000 	ldrh.w	r9, [r3]
90012610:	f7ff ff52 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012614:	6803      	ldr	r3, [r0, #0]
90012616:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012618:	4798      	blx	r3
9001261a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001261e:	2200      	movs	r2, #0
90012620:	4631      	mov	r1, r6
90012622:	e9cd 0308 	strd	r0, r3, [sp, #32]
90012626:	2302      	movs	r3, #2
90012628:	4620      	mov	r0, r4
9001262a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001262e:	2301      	movs	r3, #1
90012630:	9305      	str	r3, [sp, #20]
90012632:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90012636:	9304      	str	r3, [sp, #16]
90012638:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
9001263c:	9303      	str	r3, [sp, #12]
9001263e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90012642:	9302      	str	r3, [sp, #8]
90012644:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012648:	e9cd 8300 	strd	r8, r3, [sp]
9001264c:	463b      	mov	r3, r7
9001264e:	47a8      	blx	r5
90012650:	b00b      	add	sp, #44	@ 0x2c
90012652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012656:	bf00      	nop
90012658:	240218c6 	.word	0x240218c6

9001265c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
9001265c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012660:	4698      	mov	r8, r3
90012662:	6803      	ldr	r3, [r0, #0]
90012664:	b087      	sub	sp, #28
90012666:	460e      	mov	r6, r1
90012668:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
9001266a:	4617      	mov	r7, r2
9001266c:	4b0f      	ldr	r3, [pc, #60]	@ (900126ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
9001266e:	4604      	mov	r4, r0
90012670:	f8b3 9000 	ldrh.w	r9, [r3]
90012674:	f7ff ff20 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012678:	6803      	ldr	r3, [r0, #0]
9001267a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001267c:	4798      	blx	r3
9001267e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90012682:	463a      	mov	r2, r7
90012684:	4631      	mov	r1, r6
90012686:	f8cd 900c 	str.w	r9, [sp, #12]
9001268a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001268e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90012692:	4620      	mov	r0, r4
90012694:	9302      	str	r3, [sp, #8]
90012696:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
9001269a:	9301      	str	r3, [sp, #4]
9001269c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900126a0:	9300      	str	r3, [sp, #0]
900126a2:	4643      	mov	r3, r8
900126a4:	47a8      	blx	r5
900126a6:	b007      	add	sp, #28
900126a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900126ac:	240218c6 	.word	0x240218c6

900126b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900126b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900126b4:	4604      	mov	r4, r0
900126b6:	b08f      	sub	sp, #60	@ 0x3c
900126b8:	4610      	mov	r0, r2
900126ba:	460d      	mov	r5, r1
900126bc:	4691      	mov	r9, r2
900126be:	461e      	mov	r6, r3
900126c0:	f009 fab4 	bl	9001bc2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900126c4:	2800      	cmp	r0, #0
900126c6:	f000 809d 	beq.w	90012804 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900126ca:	6823      	ldr	r3, [r4, #0]
900126cc:	4620      	mov	r0, r4
900126ce:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90012868 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900126d2:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
900126d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900126d8:	4798      	blx	r3
900126da:	6823      	ldr	r3, [r4, #0]
900126dc:	4620      	mov	r0, r4
900126de:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 9001286c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900126e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900126e4:	4798      	blx	r3
900126e6:	f8bb 3000 	ldrh.w	r3, [fp]
900126ea:	4f5c      	ldr	r7, [pc, #368]	@ (9001285c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900126ec:	9301      	str	r3, [sp, #4]
900126ee:	f8ba 3000 	ldrh.w	r3, [sl]
900126f2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900126f6:	4640      	mov	r0, r8
900126f8:	9302      	str	r3, [sp, #8]
900126fa:	883b      	ldrh	r3, [r7, #0]
900126fc:	9303      	str	r3, [sp, #12]
900126fe:	4b58      	ldr	r3, [pc, #352]	@ (90012860 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012700:	881a      	ldrh	r2, [r3, #0]
90012702:	9305      	str	r3, [sp, #20]
90012704:	9204      	str	r2, [sp, #16]
90012706:	f009 fb25 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001270a:	8038      	strh	r0, [r7, #0]
9001270c:	4640      	mov	r0, r8
9001270e:	f009 fb55 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90012712:	9b05      	ldr	r3, [sp, #20]
90012714:	b280      	uxth	r0, r0
90012716:	8018      	strh	r0, [r3, #0]
90012718:	4b52      	ldr	r3, [pc, #328]	@ (90012864 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001271a:	781b      	ldrb	r3, [r3, #0]
9001271c:	2b00      	cmp	r3, #0
9001271e:	d174      	bne.n	9001280a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90012720:	883b      	ldrh	r3, [r7, #0]
90012722:	f8aa 0000 	strh.w	r0, [sl]
90012726:	f8ab 3000 	strh.w	r3, [fp]
9001272a:	4648      	mov	r0, r9
9001272c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90012730:	f009 fa7c 	bl	9001bc2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90012734:	2200      	movs	r2, #0
90012736:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
9001273a:	4611      	mov	r1, r2
9001273c:	4628      	mov	r0, r5
9001273e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90012742:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90012746:	f7ff fea9 	bl	9001249c <_ZN8touchgfx8Drawable5setXYEss>
9001274a:	2301      	movs	r3, #1
9001274c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90012750:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90012754:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90012758:	2b00      	cmp	r3, #0
9001275a:	dd5c      	ble.n	90012816 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001275c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012760:	2b00      	cmp	r3, #0
90012762:	dd58      	ble.n	90012816 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90012764:	462a      	mov	r2, r5
90012766:	ab0a      	add	r3, sp, #40	@ 0x28
90012768:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001276c:	6851      	ldr	r1, [r2, #4]
9001276e:	c303      	stmia	r3!, {r0, r1}
90012770:	4631      	mov	r1, r6
90012772:	a80a      	add	r0, sp, #40	@ 0x28
90012774:	f7ff fbae 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90012778:	4b38      	ldr	r3, [pc, #224]	@ (9001285c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001277a:	2100      	movs	r1, #0
9001277c:	f9b3 2000 	ldrsh.w	r2, [r3]
90012780:	4b37      	ldr	r3, [pc, #220]	@ (90012860 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012782:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90012786:	aa0a      	add	r2, sp, #40	@ 0x28
90012788:	f9b3 3000 	ldrsh.w	r3, [r3]
9001278c:	910c      	str	r1, [sp, #48]	@ 0x30
9001278e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90012792:	ab08      	add	r3, sp, #32
90012794:	e892 0003 	ldmia.w	r2, {r0, r1}
90012798:	e883 0003 	stmia.w	r3, {r0, r1}
9001279c:	4618      	mov	r0, r3
9001279e:	a90c      	add	r1, sp, #48	@ 0x30
900127a0:	f7ff fb98 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900127a4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900127a6:	2b00      	cmp	r3, #0
900127a8:	d13c      	bne.n	90012824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900127aa:	2000      	movs	r0, #0
900127ac:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
900127b0:	2600      	movs	r6, #0
900127b2:	696b      	ldr	r3, [r5, #20]
900127b4:	a908      	add	r1, sp, #32
900127b6:	682a      	ldr	r2, [r5, #0]
900127b8:	4628      	mov	r0, r5
900127ba:	9305      	str	r3, [sp, #20]
900127bc:	616e      	str	r6, [r5, #20]
900127be:	6892      	ldr	r2, [r2, #8]
900127c0:	4790      	blx	r2
900127c2:	9b05      	ldr	r3, [sp, #20]
900127c4:	4652      	mov	r2, sl
900127c6:	4649      	mov	r1, r9
900127c8:	616b      	str	r3, [r5, #20]
900127ca:	4628      	mov	r0, r5
900127cc:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
900127d0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
900127d4:	f7ff fe62 	bl	9001249c <_ZN8touchgfx8Drawable5setXYEss>
900127d8:	9a01      	ldr	r2, [sp, #4]
900127da:	4b23      	ldr	r3, [pc, #140]	@ (90012868 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900127dc:	4620      	mov	r0, r4
900127de:	801a      	strh	r2, [r3, #0]
900127e0:	9a02      	ldr	r2, [sp, #8]
900127e2:	4b22      	ldr	r3, [pc, #136]	@ (9001286c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900127e4:	801a      	strh	r2, [r3, #0]
900127e6:	9a03      	ldr	r2, [sp, #12]
900127e8:	4b1c      	ldr	r3, [pc, #112]	@ (9001285c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900127ea:	801a      	strh	r2, [r3, #0]
900127ec:	4b1c      	ldr	r3, [pc, #112]	@ (90012860 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900127ee:	9a04      	ldr	r2, [sp, #16]
900127f0:	801a      	strh	r2, [r3, #0]
900127f2:	6823      	ldr	r3, [r4, #0]
900127f4:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
900127f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900127fa:	4798      	blx	r3
900127fc:	6823      	ldr	r3, [r4, #0]
900127fe:	4620      	mov	r0, r4
90012800:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012802:	4798      	blx	r3
90012804:	b00f      	add	sp, #60	@ 0x3c
90012806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001280a:	883b      	ldrh	r3, [r7, #0]
9001280c:	f8ab 0000 	strh.w	r0, [fp]
90012810:	f8aa 3000 	strh.w	r3, [sl]
90012814:	e789      	b.n	9001272a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90012816:	462a      	mov	r2, r5
90012818:	ab0a      	add	r3, sp, #40	@ 0x28
9001281a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001281e:	6851      	ldr	r1, [r2, #4]
90012820:	c303      	stmia	r3!, {r0, r1}
90012822:	e7a9      	b.n	90012778 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90012824:	a807      	add	r0, sp, #28
90012826:	f009 fc0b 	bl	9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001282a:	4606      	mov	r6, r0
9001282c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9001282e:	6803      	ldr	r3, [r0, #0]
90012830:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012832:	4798      	blx	r3
90012834:	4286      	cmp	r6, r0
90012836:	d1b8      	bne.n	900127aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90012838:	f7ff fe3e 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
9001283c:	6803      	ldr	r3, [r0, #0]
9001283e:	4606      	mov	r6, r0
90012840:	a807      	add	r0, sp, #28
90012842:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012844:	9305      	str	r3, [sp, #20]
90012846:	f009 fbfb 	bl	9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001284a:	9b05      	ldr	r3, [sp, #20]
9001284c:	4601      	mov	r1, r0
9001284e:	4630      	mov	r0, r6
90012850:	4798      	blx	r3
90012852:	f080 0001 	eor.w	r0, r0, #1
90012856:	b2c0      	uxtb	r0, r0
90012858:	e7a8      	b.n	900127ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001285a:	bf00      	nop
9001285c:	240218c0 	.word	0x240218c0
90012860:	240218c2 	.word	0x240218c2
90012864:	240218c4 	.word	0x240218c4
90012868:	240218c6 	.word	0x240218c6
9001286c:	240218c8 	.word	0x240218c8

90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90012870:	4b07      	ldr	r3, [pc, #28]	@ (90012890 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90012872:	b510      	push	{r4, lr}
90012874:	781b      	ldrb	r3, [r3, #0]
90012876:	4604      	mov	r4, r0
90012878:	b13b      	cbz	r3, 9001288a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001287a:	6803      	ldr	r3, [r0, #0]
9001287c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001287e:	4798      	blx	r3
90012880:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90012882:	4283      	cmp	r3, r0
90012884:	d101      	bne.n	9001288a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90012886:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90012888:	bd10      	pop	{r4, pc}
9001288a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
9001288c:	e7fc      	b.n	90012888 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001288e:	bf00      	nop
90012890:	240218ca 	.word	0x240218ca

90012894 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90012894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012898:	461d      	mov	r5, r3
9001289a:	b08a      	sub	sp, #40	@ 0x28
9001289c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900128a0:	4690      	mov	r8, r2
900128a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
900128a6:	2400      	movs	r4, #0
900128a8:	4607      	mov	r7, r0
900128aa:	fb06 8505 	mla	r5, r6, r5, r8
900128ae:	9404      	str	r4, [sp, #16]
900128b0:	f88d 4020 	strb.w	r4, [sp, #32]
900128b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
900128b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900128bc:	f8ad 3018 	strh.w	r3, [sp, #24]
900128c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900128c4:	f8ad 301a 	strh.w	r3, [sp, #26]
900128c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900128cc:	f8ad 301c 	strh.w	r3, [sp, #28]
900128d0:	f7ff ffce 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900128d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900128d8:	6878      	ldr	r0, [r7, #4]
900128da:	f8ad 601e 	strh.w	r6, [sp, #30]
900128de:	a901      	add	r1, sp, #4
900128e0:	9505      	str	r5, [sp, #20]
900128e2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900128e6:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
900128ea:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900128ee:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900128f2:	6803      	ldr	r3, [r0, #0]
900128f4:	685b      	ldr	r3, [r3, #4]
900128f6:	4798      	blx	r3
900128f8:	b00a      	add	sp, #40	@ 0x28
900128fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900128fe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900128fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012902:	b08b      	sub	sp, #44	@ 0x2c
90012904:	2400      	movs	r4, #0
90012906:	4691      	mov	r9, r2
90012908:	461d      	mov	r5, r3
9001290a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
9001290e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90012912:	4688      	mov	r8, r1
90012914:	4607      	mov	r7, r0
90012916:	9404      	str	r4, [sp, #16]
90012918:	fb06 9505 	mla	r5, r6, r5, r9
9001291c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90012920:	f7ff ffa6 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012924:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012928:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001292c:	6878      	ldr	r0, [r7, #4]
9001292e:	f8ad 3018 	strh.w	r3, [sp, #24]
90012932:	a901      	add	r1, sp, #4
90012934:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90012938:	9505      	str	r5, [sp, #20]
9001293a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001293e:	f8ad 401c 	strh.w	r4, [sp, #28]
90012942:	f8ad 601e 	strh.w	r6, [sp, #30]
90012946:	f8cd 8010 	str.w	r8, [sp, #16]
9001294a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001294e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90012952:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90012956:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001295a:	6803      	ldr	r3, [r0, #0]
9001295c:	685b      	ldr	r3, [r3, #4]
9001295e:	4798      	blx	r3
90012960:	b00b      	add	sp, #44	@ 0x2c
90012962:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90012968 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90012968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001296c:	b08a      	sub	sp, #40	@ 0x28
9001296e:	4698      	mov	r8, r3
90012970:	2300      	movs	r3, #0
90012972:	4606      	mov	r6, r0
90012974:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90012978:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
9001297c:	2d0b      	cmp	r5, #11
9001297e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90012982:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90012986:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
9001298a:	9304      	str	r3, [sp, #16]
9001298c:	d137      	bne.n	900129fe <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001298e:	2380      	movs	r3, #128	@ 0x80
90012990:	f88d 0020 	strb.w	r0, [sp, #32]
90012994:	4630      	mov	r0, r6
90012996:	9203      	str	r2, [sp, #12]
90012998:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001299c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900129a0:	f8ad 3018 	strh.w	r3, [sp, #24]
900129a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900129a8:	f8ad 301a 	strh.w	r3, [sp, #26]
900129ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900129b0:	f8ad 301c 	strh.w	r3, [sp, #28]
900129b4:	f7ff ff5c 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900129b8:	2c0b      	cmp	r4, #11
900129ba:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
900129be:	f8ad 701e 	strh.w	r7, [sp, #30]
900129c2:	bf94      	ite	ls
900129c4:	4b19      	ldrls	r3, [pc, #100]	@ (90012a2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900129c6:	2100      	movhi	r1, #0
900129c8:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
900129cc:	bf98      	it	ls
900129ce:	5d19      	ldrbls	r1, [r3, r4]
900129d0:	fb02 8307 	mla	r3, r2, r7, r8
900129d4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900129d8:	10c9      	asrs	r1, r1, #3
900129da:	fb01 0003 	mla	r0, r1, r3, r0
900129de:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
900129e2:	a901      	add	r1, sp, #4
900129e4:	9005      	str	r0, [sp, #20]
900129e6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900129ea:	2300      	movs	r3, #0
900129ec:	6870      	ldr	r0, [r6, #4]
900129ee:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
900129f2:	6803      	ldr	r3, [r0, #0]
900129f4:	685b      	ldr	r3, [r3, #4]
900129f6:	4798      	blx	r3
900129f8:	b00a      	add	sp, #40	@ 0x28
900129fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900129fe:	2d02      	cmp	r5, #2
90012a00:	d109      	bne.n	90012a16 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90012a02:	28ff      	cmp	r0, #255	@ 0xff
90012a04:	d105      	bne.n	90012a12 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90012a06:	f1bc 0f00 	cmp.w	ip, #0
90012a0a:	bf14      	ite	ne
90012a0c:	2340      	movne	r3, #64	@ 0x40
90012a0e:	2320      	moveq	r3, #32
90012a10:	e7be      	b.n	90012990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012a12:	2340      	movs	r3, #64	@ 0x40
90012a14:	e7bc      	b.n	90012990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012a16:	28ff      	cmp	r0, #255	@ 0xff
90012a18:	d105      	bne.n	90012a26 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90012a1a:	f1bc 0f00 	cmp.w	ip, #0
90012a1e:	bf14      	ite	ne
90012a20:	2304      	movne	r3, #4
90012a22:	2301      	moveq	r3, #1
90012a24:	e7b4      	b.n	90012990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012a26:	2304      	movs	r3, #4
90012a28:	e7b2      	b.n	90012990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90012a2a:	bf00      	nop
90012a2c:	9002f4a8 	.word	0x9002f4a8

90012a30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90012a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012a34:	b08b      	sub	sp, #44	@ 0x2c
90012a36:	461d      	mov	r5, r3
90012a38:	2400      	movs	r4, #0
90012a3a:	4688      	mov	r8, r1
90012a3c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90012a40:	4693      	mov	fp, r2
90012a42:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90012a46:	4607      	mov	r7, r0
90012a48:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90012a4c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90012a50:	9404      	str	r4, [sp, #16]
90012a52:	bf14      	ite	ne
90012a54:	2308      	movne	r3, #8
90012a56:	2302      	moveq	r3, #2
90012a58:	fb05 b50a 	mla	r5, r5, sl, fp
90012a5c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90012a60:	f7ff ff06 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012a64:	2e0b      	cmp	r6, #11
90012a66:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90012a6a:	a901      	add	r1, sp, #4
90012a6c:	bf98      	it	ls
90012a6e:	4b13      	ldrls	r3, [pc, #76]	@ (90012abc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90012a70:	f8ad a01e 	strh.w	sl, [sp, #30]
90012a74:	bf98      	it	ls
90012a76:	5d9c      	ldrbls	r4, [r3, r6]
90012a78:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90012a7c:	10e4      	asrs	r4, r4, #3
90012a7e:	f8cd 8010 	str.w	r8, [sp, #16]
90012a82:	f8ad 3018 	strh.w	r3, [sp, #24]
90012a86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90012a8a:	fb04 0405 	mla	r4, r4, r5, r0
90012a8e:	6878      	ldr	r0, [r7, #4]
90012a90:	f8ad 301a 	strh.w	r3, [sp, #26]
90012a94:	2300      	movs	r3, #0
90012a96:	9405      	str	r4, [sp, #20]
90012a98:	f8ad 301c 	strh.w	r3, [sp, #28]
90012a9c:	f88d 9020 	strb.w	r9, [sp, #32]
90012aa0:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90012aa4:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90012aa8:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90012aac:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90012ab0:	6803      	ldr	r3, [r0, #0]
90012ab2:	685b      	ldr	r3, [r3, #4]
90012ab4:	4798      	blx	r3
90012ab6:	b00b      	add	sp, #44	@ 0x2c
90012ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012abc:	9002f4a8 	.word	0x9002f4a8

90012ac0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90012ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012ac4:	461e      	mov	r6, r3
90012ac6:	4b0a      	ldr	r3, [pc, #40]	@ (90012af0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90012ac8:	460f      	mov	r7, r1
90012aca:	4690      	mov	r8, r2
90012acc:	881d      	ldrh	r5, [r3, #0]
90012ace:	f7ff fcf3 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012ad2:	6803      	ldr	r3, [r0, #0]
90012ad4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ad6:	4798      	blx	r3
90012ad8:	280b      	cmp	r0, #11
90012ada:	bf96      	itet	ls
90012adc:	4b05      	ldrls	r3, [pc, #20]	@ (90012af4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90012ade:	2400      	movhi	r4, #0
90012ae0:	5c1c      	ldrbls	r4, [r3, r0]
90012ae2:	fb08 7005 	mla	r0, r8, r5, r7
90012ae6:	10e4      	asrs	r4, r4, #3
90012ae8:	fb04 6000 	mla	r0, r4, r0, r6
90012aec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012af0:	240218c6 	.word	0x240218c6
90012af4:	9002f4a8 	.word	0x9002f4a8

90012af8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90012af8:	b5f0      	push	{r4, r5, r6, r7, lr}
90012afa:	b08b      	sub	sp, #44	@ 0x2c
90012afc:	461f      	mov	r7, r3
90012afe:	4604      	mov	r4, r0
90012b00:	4616      	mov	r6, r2
90012b02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90012b06:	2500      	movs	r5, #0
90012b08:	e9cd 3101 	strd	r3, r1, [sp, #4]
90012b0c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012b10:	9504      	str	r5, [sp, #16]
90012b12:	f8ad 3018 	strh.w	r3, [sp, #24]
90012b16:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90012b1a:	f8ad 301a 	strh.w	r3, [sp, #26]
90012b1e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012b22:	f8ad 301c 	strh.w	r3, [sp, #28]
90012b26:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012b2a:	f88d 3020 	strb.w	r3, [sp, #32]
90012b2e:	f7ff fe9f 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012b32:	463a      	mov	r2, r7
90012b34:	4631      	mov	r1, r6
90012b36:	4603      	mov	r3, r0
90012b38:	4620      	mov	r0, r4
90012b3a:	f7ff ffc1 	bl	90012ac0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012b3e:	4b0e      	ldr	r3, [pc, #56]	@ (90012b78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90012b40:	9005      	str	r0, [sp, #20]
90012b42:	881b      	ldrh	r3, [r3, #0]
90012b44:	f8ad 301e 	strh.w	r3, [sp, #30]
90012b48:	f7ff fcb6 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012b4c:	6803      	ldr	r3, [r0, #0]
90012b4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012b50:	4798      	blx	r3
90012b52:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90012b54:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90012b58:	a901      	add	r1, sp, #4
90012b5a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90012b5e:	9304      	str	r3, [sp, #16]
90012b60:	6860      	ldr	r0, [r4, #4]
90012b62:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90012b66:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90012b6a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90012b6e:	6803      	ldr	r3, [r0, #0]
90012b70:	685b      	ldr	r3, [r3, #4]
90012b72:	4798      	blx	r3
90012b74:	b00b      	add	sp, #44	@ 0x2c
90012b76:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012b78:	240218c6 	.word	0x240218c6

90012b7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90012b7c:	b5f0      	push	{r4, r5, r6, r7, lr}
90012b7e:	b08d      	sub	sp, #52	@ 0x34
90012b80:	2501      	movs	r5, #1
90012b82:	4604      	mov	r4, r0
90012b84:	466b      	mov	r3, sp
90012b86:	9503      	str	r5, [sp, #12]
90012b88:	e883 0006 	stmia.w	r3, {r1, r2}
90012b8c:	2300      	movs	r3, #0
90012b8e:	f8bd 6000 	ldrh.w	r6, [sp]
90012b92:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90012b96:	9306      	str	r3, [sp, #24]
90012b98:	6803      	ldr	r3, [r0, #0]
90012b9a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012b9c:	4798      	blx	r3
90012b9e:	463a      	mov	r2, r7
90012ba0:	4631      	mov	r1, r6
90012ba2:	4603      	mov	r3, r0
90012ba4:	4620      	mov	r0, r4
90012ba6:	f7ff ff8b 	bl	90012ac0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012baa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90012bac:	9004      	str	r0, [sp, #16]
90012bae:	9307      	str	r3, [sp, #28]
90012bb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012bb4:	f8ad 3020 	strh.w	r3, [sp, #32]
90012bb8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012bbc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90012bc0:	4b0e      	ldr	r3, [pc, #56]	@ (90012bfc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90012bc2:	881b      	ldrh	r3, [r3, #0]
90012bc4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90012bc8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90012bcc:	f7ff fc74 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012bd0:	6803      	ldr	r3, [r0, #0]
90012bd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012bd4:	4798      	blx	r3
90012bd6:	23ff      	movs	r3, #255	@ 0xff
90012bd8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012bdc:	a903      	add	r1, sp, #12
90012bde:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90012be2:	6860      	ldr	r0, [r4, #4]
90012be4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012be8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012bec:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012bf0:	6803      	ldr	r3, [r0, #0]
90012bf2:	685b      	ldr	r3, [r3, #4]
90012bf4:	4798      	blx	r3
90012bf6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90012bf8:	b00d      	add	sp, #52	@ 0x34
90012bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012bfc:	240218c6 	.word	0x240218c6

90012c00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90012c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012c04:	b08c      	sub	sp, #48	@ 0x30
90012c06:	461e      	mov	r6, r3
90012c08:	2300      	movs	r3, #0
90012c0a:	4604      	mov	r4, r0
90012c0c:	466d      	mov	r5, sp
90012c0e:	9306      	str	r3, [sp, #24]
90012c10:	6803      	ldr	r3, [r0, #0]
90012c12:	e885 0006 	stmia.w	r5, {r1, r2}
90012c16:	2501      	movs	r5, #1
90012c18:	f8bd 7000 	ldrh.w	r7, [sp]
90012c1c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90012c20:	9503      	str	r5, [sp, #12]
90012c22:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012c24:	4798      	blx	r3
90012c26:	4642      	mov	r2, r8
90012c28:	4639      	mov	r1, r7
90012c2a:	4603      	mov	r3, r0
90012c2c:	4620      	mov	r0, r4
90012c2e:	f7ff ff47 	bl	90012ac0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012c32:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012c36:	9004      	str	r0, [sp, #16]
90012c38:	f8ad 3020 	strh.w	r3, [sp, #32]
90012c3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012c40:	9607      	str	r6, [sp, #28]
90012c42:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90012c46:	4b10      	ldr	r3, [pc, #64]	@ (90012c88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90012c48:	881b      	ldrh	r3, [r3, #0]
90012c4a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90012c4e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90012c50:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90012c54:	f7ff fc30 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
90012c58:	6803      	ldr	r3, [r0, #0]
90012c5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012c5c:	4798      	blx	r3
90012c5e:	23ff      	movs	r3, #255	@ 0xff
90012c60:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012c64:	a903      	add	r1, sp, #12
90012c66:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90012c6a:	6860      	ldr	r0, [r4, #4]
90012c6c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012c70:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012c74:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012c78:	6803      	ldr	r3, [r0, #0]
90012c7a:	685b      	ldr	r3, [r3, #4]
90012c7c:	4798      	blx	r3
90012c7e:	4630      	mov	r0, r6
90012c80:	b00c      	add	sp, #48	@ 0x30
90012c82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012c86:	bf00      	nop
90012c88:	240218c6 	.word	0x240218c6

90012c8c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90012c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
90012c8e:	b085      	sub	sp, #20
90012c90:	4605      	mov	r5, r0
90012c92:	ac02      	add	r4, sp, #8
90012c94:	e884 0006 	stmia.w	r4, {r1, r2}
90012c98:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90012c9c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90012ca0:	f7ff fde6 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012ca4:	4631      	mov	r1, r6
90012ca6:	4603      	mov	r3, r0
90012ca8:	463a      	mov	r2, r7
90012caa:	4628      	mov	r0, r5
90012cac:	f7ff ff08 	bl	90012ac0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012cb0:	4a05      	ldr	r2, [pc, #20]	@ (90012cc8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90012cb2:	682b      	ldr	r3, [r5, #0]
90012cb4:	8812      	ldrh	r2, [r2, #0]
90012cb6:	9200      	str	r2, [sp, #0]
90012cb8:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90012cba:	4603      	mov	r3, r0
90012cbc:	4628      	mov	r0, r5
90012cbe:	e894 0006 	ldmia.w	r4, {r1, r2}
90012cc2:	47b0      	blx	r6
90012cc4:	b005      	add	sp, #20
90012cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012cc8:	240218c6 	.word	0x240218c6

90012ccc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90012ccc:	b570      	push	{r4, r5, r6, lr}
90012cce:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90012cd2:	4604      	mov	r4, r0
90012cd4:	b19b      	cbz	r3, 90012cfe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90012cd6:	2002      	movs	r0, #2
90012cd8:	f7ee f816 	bl	90000d08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90012cdc:	2300      	movs	r3, #0
90012cde:	4620      	mov	r0, r4
90012ce0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90012ce4:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90012ce8:	6823      	ldr	r3, [r4, #0]
90012cea:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
90012cee:	f7ff fdbf 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012cf2:	4601      	mov	r1, r0
90012cf4:	4620      	mov	r0, r4
90012cf6:	462b      	mov	r3, r5
90012cf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012cfc:	4718      	bx	r3
90012cfe:	bd70      	pop	{r4, r5, r6, pc}

90012d00 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90012d00:	b570      	push	{r4, r5, r6, lr}
90012d02:	4605      	mov	r5, r0
90012d04:	460c      	mov	r4, r1
90012d06:	2003      	movs	r0, #3
90012d08:	b149      	cbz	r1, 90012d1e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90012d0a:	f7ed ffc5 	bl	90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012d0e:	6928      	ldr	r0, [r5, #16]
90012d10:	b168      	cbz	r0, 90012d2e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012d12:	6803      	ldr	r3, [r0, #0]
90012d14:	2101      	movs	r1, #1
90012d16:	695b      	ldr	r3, [r3, #20]
90012d18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012d1c:	4718      	bx	r3
90012d1e:	f7ed ffd7 	bl	90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012d22:	6928      	ldr	r0, [r5, #16]
90012d24:	b118      	cbz	r0, 90012d2e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012d26:	6803      	ldr	r3, [r0, #0]
90012d28:	4621      	mov	r1, r4
90012d2a:	695b      	ldr	r3, [r3, #20]
90012d2c:	e7f4      	b.n	90012d18 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90012d2e:	bd70      	pop	{r4, r5, r6, pc}

90012d30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90012d30:	b538      	push	{r3, r4, r5, lr}
90012d32:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90012d36:	4604      	mov	r4, r0
90012d38:	460d      	mov	r5, r1
90012d3a:	428b      	cmp	r3, r1
90012d3c:	d006      	beq.n	90012d4c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90012d3e:	6803      	ldr	r3, [r0, #0]
90012d40:	b929      	cbnz	r1, 90012d4e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90012d42:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
90012d46:	4798      	blx	r3
90012d48:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90012d4c:	bd38      	pop	{r3, r4, r5, pc}
90012d4e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
90012d52:	e7f8      	b.n	90012d46 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90012d54 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90012d54:	4b0c      	ldr	r3, [pc, #48]	@ (90012d88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
90012d56:	b510      	push	{r4, lr}
90012d58:	781b      	ldrb	r3, [r3, #0]
90012d5a:	4604      	mov	r4, r0
90012d5c:	b953      	cbnz	r3, 90012d74 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90012d5e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90012d62:	b93b      	cbnz	r3, 90012d74 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90012d64:	6840      	ldr	r0, [r0, #4]
90012d66:	f000 f919 	bl	90012f9c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90012d6a:	b118      	cbz	r0, 90012d74 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90012d6c:	6862      	ldr	r2, [r4, #4]
90012d6e:	7a53      	ldrb	r3, [r2, #9]
90012d70:	2b00      	cmp	r3, #0
90012d72:	d0fc      	beq.n	90012d6e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
90012d74:	f7ef face 	bl	90002314 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90012d78:	4620      	mov	r0, r4
90012d7a:	2100      	movs	r1, #0
90012d7c:	f7ff ffd8 	bl	90012d30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012d80:	4620      	mov	r0, r4
90012d82:	f7ff fd75 	bl	90012870 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012d86:	bd10      	pop	{r4, pc}
90012d88:	240218ca 	.word	0x240218ca

90012d8c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90012d8c:	b570      	push	{r4, r5, r6, lr}
90012d8e:	4604      	mov	r4, r0
90012d90:	6803      	ldr	r3, [r0, #0]
90012d92:	b919      	cbnz	r1, 90012d9c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90012d94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012d96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012d9a:	4718      	bx	r3
90012d9c:	2200      	movs	r2, #0
90012d9e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90012da2:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90012da6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012da8:	4798      	blx	r3
90012daa:	6863      	ldr	r3, [r4, #4]
90012dac:	2101      	movs	r1, #1
90012dae:	4605      	mov	r5, r0
90012db0:	4620      	mov	r0, r4
90012db2:	7299      	strb	r1, [r3, #10]
90012db4:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90012db8:	f7ff ffba 	bl	90012d30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012dbc:	4628      	mov	r0, r5
90012dbe:	bd70      	pop	{r4, r5, r6, pc}

90012dc0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90012dc0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90012dc4:	1a13      	subs	r3, r2, r0
90012dc6:	4258      	negs	r0, r3
90012dc8:	4158      	adcs	r0, r3
90012dca:	4770      	bx	lr

90012dcc <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90012dcc:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90012dd0:	1a9b      	subs	r3, r3, r2
90012dd2:	2b00      	cmp	r3, #0
90012dd4:	bfdc      	itt	le
90012dd6:	6882      	ldrle	r2, [r0, #8]
90012dd8:	189b      	addle	r3, r3, r2
90012dda:	2b01      	cmp	r3, #1
90012ddc:	bfcc      	ite	gt
90012dde:	2000      	movgt	r0, #0
90012de0:	2001      	movle	r0, #1
90012de2:	4770      	bx	lr

90012de4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90012de4:	6902      	ldr	r2, [r0, #16]
90012de6:	6843      	ldr	r3, [r0, #4]
90012de8:	2024      	movs	r0, #36	@ 0x24
90012dea:	fb00 3002 	mla	r0, r0, r2, r3
90012dee:	4770      	bx	lr

90012df0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90012df0:	6803      	ldr	r3, [r0, #0]
90012df2:	691b      	ldr	r3, [r3, #16]
90012df4:	4718      	bx	r3

90012df6 <_ZN8touchgfx13DMA_Interface7executeEv>:
90012df6:	2301      	movs	r3, #1
90012df8:	b570      	push	{r4, r5, r6, lr}
90012dfa:	7203      	strb	r3, [r0, #8]
90012dfc:	4604      	mov	r4, r0
90012dfe:	6840      	ldr	r0, [r0, #4]
90012e00:	6803      	ldr	r3, [r0, #0]
90012e02:	699b      	ldr	r3, [r3, #24]
90012e04:	4798      	blx	r3
90012e06:	6803      	ldr	r3, [r0, #0]
90012e08:	4605      	mov	r5, r0
90012e0a:	2b40      	cmp	r3, #64	@ 0x40
90012e0c:	d00c      	beq.n	90012e28 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012e0e:	d810      	bhi.n	90012e32 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90012e10:	2b04      	cmp	r3, #4
90012e12:	d01d      	beq.n	90012e50 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90012e14:	d804      	bhi.n	90012e20 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90012e16:	2b01      	cmp	r3, #1
90012e18:	d006      	beq.n	90012e28 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012e1a:	2b02      	cmp	r3, #2
90012e1c:	d02c      	beq.n	90012e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90012e1e:	bd70      	pop	{r4, r5, r6, pc}
90012e20:	2b08      	cmp	r3, #8
90012e22:	d01d      	beq.n	90012e60 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90012e24:	2b20      	cmp	r3, #32
90012e26:	d1fa      	bne.n	90012e1e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90012e28:	6823      	ldr	r3, [r4, #0]
90012e2a:	4620      	mov	r0, r4
90012e2c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012e2e:	4798      	blx	r3
90012e30:	e013      	b.n	90012e5a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90012e32:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90012e36:	d0f7      	beq.n	90012e28 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012e38:	d804      	bhi.n	90012e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90012e3a:	2b80      	cmp	r3, #128	@ 0x80
90012e3c:	d0f4      	beq.n	90012e28 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012e3e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90012e42:	e7f0      	b.n	90012e26 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90012e44:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90012e48:	d0ee      	beq.n	90012e28 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012e4a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90012e4e:	e7e5      	b.n	90012e1c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90012e50:	6823      	ldr	r3, [r4, #0]
90012e52:	7f01      	ldrb	r1, [r0, #28]
90012e54:	4620      	mov	r0, r4
90012e56:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012e58:	4798      	blx	r3
90012e5a:	6823      	ldr	r3, [r4, #0]
90012e5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012e5e:	e006      	b.n	90012e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90012e60:	6823      	ldr	r3, [r4, #0]
90012e62:	7f01      	ldrb	r1, [r0, #28]
90012e64:	4620      	mov	r0, r4
90012e66:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012e68:	4798      	blx	r3
90012e6a:	6823      	ldr	r3, [r4, #0]
90012e6c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012e6e:	4629      	mov	r1, r5
90012e70:	4620      	mov	r0, r4
90012e72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012e76:	4718      	bx	r3
90012e78:	6823      	ldr	r3, [r4, #0]
90012e7a:	4620      	mov	r0, r4
90012e7c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012e7e:	4798      	blx	r3
90012e80:	e7f3      	b.n	90012e6a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90012e82 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90012e82:	4770      	bx	lr

90012e84 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90012e84:	4770      	bx	lr

90012e86 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90012e86:	4770      	bx	lr

90012e88 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90012e88:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90012e8c:	b510      	push	{r4, lr}
90012e8e:	1ad2      	subs	r2, r2, r3
90012e90:	2a00      	cmp	r2, #0
90012e92:	bfdc      	itt	le
90012e94:	6884      	ldrle	r4, [r0, #8]
90012e96:	1912      	addle	r2, r2, r4
90012e98:	2a01      	cmp	r2, #1
90012e9a:	dd16      	ble.n	90012eca <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90012e9c:	6842      	ldr	r2, [r0, #4]
90012e9e:	2424      	movs	r4, #36	@ 0x24
90012ea0:	fb04 2303 	mla	r3, r4, r3, r2
90012ea4:	f101 0220 	add.w	r2, r1, #32
90012ea8:	f851 4b04 	ldr.w	r4, [r1], #4
90012eac:	4291      	cmp	r1, r2
90012eae:	f843 4b04 	str.w	r4, [r3], #4
90012eb2:	d1f9      	bne.n	90012ea8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90012eb4:	780a      	ldrb	r2, [r1, #0]
90012eb6:	701a      	strb	r2, [r3, #0]
90012eb8:	68c3      	ldr	r3, [r0, #12]
90012eba:	6882      	ldr	r2, [r0, #8]
90012ebc:	f3bf 8f5b 	dmb	ish
90012ec0:	3301      	adds	r3, #1
90012ec2:	429a      	cmp	r2, r3
90012ec4:	bfd8      	it	le
90012ec6:	1a9b      	suble	r3, r3, r2
90012ec8:	60c3      	str	r3, [r0, #12]
90012eca:	bd10      	pop	{r4, pc}

90012ecc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90012ecc:	6903      	ldr	r3, [r0, #16]
90012ece:	6882      	ldr	r2, [r0, #8]
90012ed0:	f3bf 8f5b 	dmb	ish
90012ed4:	3301      	adds	r3, #1
90012ed6:	429a      	cmp	r2, r3
90012ed8:	bfd8      	it	le
90012eda:	1a9b      	suble	r3, r3, r2
90012edc:	6103      	str	r3, [r0, #16]
90012ede:	4770      	bx	lr

90012ee0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90012ee0:	b570      	push	{r4, r5, r6, lr}
90012ee2:	4604      	mov	r4, r0
90012ee4:	460e      	mov	r6, r1
90012ee6:	6860      	ldr	r0, [r4, #4]
90012ee8:	6803      	ldr	r3, [r0, #0]
90012eea:	685b      	ldr	r3, [r3, #4]
90012eec:	4798      	blx	r3
90012eee:	2800      	cmp	r0, #0
90012ef0:	d1f9      	bne.n	90012ee6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90012ef2:	4d0d      	ldr	r5, [pc, #52]	@ (90012f28 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90012ef4:	6828      	ldr	r0, [r5, #0]
90012ef6:	6803      	ldr	r3, [r0, #0]
90012ef8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012efc:	4798      	blx	r3
90012efe:	f7ef fa17 	bl	90002330 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90012f02:	6828      	ldr	r0, [r5, #0]
90012f04:	2101      	movs	r1, #1
90012f06:	f7ff ff13 	bl	90012d30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012f0a:	6860      	ldr	r0, [r4, #4]
90012f0c:	4631      	mov	r1, r6
90012f0e:	6803      	ldr	r3, [r0, #0]
90012f10:	689b      	ldr	r3, [r3, #8]
90012f12:	4798      	blx	r3
90012f14:	6823      	ldr	r3, [r4, #0]
90012f16:	4620      	mov	r0, r4
90012f18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012f1a:	4798      	blx	r3
90012f1c:	6828      	ldr	r0, [r5, #0]
90012f1e:	6803      	ldr	r3, [r0, #0]
90012f20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012f24:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012f26:	4718      	bx	r3
90012f28:	240218cc 	.word	0x240218cc

90012f2c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90012f2c:	b508      	push	{r3, lr}
90012f2e:	f7ef f9f1 	bl	90002314 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90012f32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90012f36:	f7ef b9f5 	b.w	90002324 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90012f3a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90012f3a:	b510      	push	{r4, lr}
90012f3c:	4604      	mov	r4, r0
90012f3e:	2114      	movs	r1, #20
90012f40:	f017 ffb6 	bl	9002aeb0 <_ZdlPvj>
90012f44:	4620      	mov	r0, r4
90012f46:	bd10      	pop	{r4, pc}

90012f48 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90012f48:	b570      	push	{r4, r5, r6, lr}
90012f4a:	4604      	mov	r4, r0
90012f4c:	6840      	ldr	r0, [r0, #4]
90012f4e:	6803      	ldr	r3, [r0, #0]
90012f50:	681b      	ldr	r3, [r3, #0]
90012f52:	4798      	blx	r3
90012f54:	4605      	mov	r5, r0
90012f56:	b930      	cbnz	r0, 90012f66 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90012f58:	7a23      	ldrb	r3, [r4, #8]
90012f5a:	b123      	cbz	r3, 90012f66 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90012f5c:	6860      	ldr	r0, [r4, #4]
90012f5e:	6803      	ldr	r3, [r0, #0]
90012f60:	695b      	ldr	r3, [r3, #20]
90012f62:	4798      	blx	r3
90012f64:	7225      	strb	r5, [r4, #8]
90012f66:	6860      	ldr	r0, [r4, #4]
90012f68:	6803      	ldr	r3, [r0, #0]
90012f6a:	681b      	ldr	r3, [r3, #0]
90012f6c:	4798      	blx	r3
90012f6e:	b928      	cbnz	r0, 90012f7c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90012f70:	6823      	ldr	r3, [r4, #0]
90012f72:	4620      	mov	r0, r4
90012f74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90012f76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012f7a:	4718      	bx	r3
90012f7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012f80:	f7ef b9de 	b.w	90002340 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90012f84 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90012f84:	b510      	push	{r4, lr}
90012f86:	6082      	str	r2, [r0, #8]
90012f88:	2200      	movs	r2, #0
90012f8a:	4c03      	ldr	r4, [pc, #12]	@ (90012f98 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90012f8c:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012f90:	e9c0 4100 	strd	r4, r1, [r0]
90012f94:	bd10      	pop	{r4, pc}
90012f96:	bf00      	nop
90012f98:	9002f4bc 	.word	0x9002f4bc

90012f9c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90012f9c:	6840      	ldr	r0, [r0, #4]
90012f9e:	6803      	ldr	r3, [r0, #0]
90012fa0:	681b      	ldr	r3, [r3, #0]
90012fa2:	4718      	bx	r3
90012fa4:	0000      	movs	r0, r0
	...

90012fa8 <_ZN8touchgfxL10applyNoiseEiihhh>:
90012fa8:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90012fac:	fb80 0101 	smull	r0, r1, r0, r1
90012fb0:	4f21      	ldr	r7, [pc, #132]	@ (90013038 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90012fb2:	461c      	mov	r4, r3
90012fb4:	4616      	mov	r6, r2
90012fb6:	fba0 bc07 	umull	fp, ip, r0, r7
90012fba:	f89d 5018 	ldrb.w	r5, [sp, #24]
90012fbe:	fb07 cc01 	mla	ip, r7, r1, ip
90012fc2:	fbab 010b 	umull	r0, r1, fp, fp
90012fc6:	fb0b f70c 	mul.w	r7, fp, ip
90012fca:	fb00 f30c 	mul.w	r3, r0, ip
90012fce:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90012fd2:	fb0b 3301 	mla	r3, fp, r1, r3
90012fd6:	fba0 010b 	umull	r0, r1, r0, fp
90012fda:	4419      	add	r1, r3
90012fdc:	a314      	add	r3, pc, #80	@ (adr r3, 90013030 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90012fde:	e9d3 2300 	ldrd	r2, r3, [r3]
90012fe2:	f7ed fb89 	bl	900006f8 <__aeabi_ldivmod>
90012fe6:	2ef7      	cmp	r6, #247	@ 0xf7
90012fe8:	b290      	uxth	r0, r2
90012fea:	bf9e      	ittt	ls
90012fec:	f002 0207 	andls.w	r2, r2, #7
90012ff0:	18b6      	addls	r6, r6, r2
90012ff2:	b2f6      	uxtbls	r6, r6
90012ff4:	2cfb      	cmp	r4, #251	@ 0xfb
90012ff6:	bf9e      	ittt	ls
90012ff8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90012ffc:	18e4      	addls	r4, r4, r3
90012ffe:	b2e4      	uxtbls	r4, r4
90013000:	2df7      	cmp	r5, #247	@ 0xf7
90013002:	bf98      	it	ls
90013004:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90013008:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001300c:	bf98      	it	ls
9001300e:	182d      	addls	r5, r5, r0
90013010:	480a      	ldr	r0, [pc, #40]	@ (9001303c <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
90013012:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90013016:	ea00 2006 	and.w	r0, r0, r6, lsl #8
9001301a:	bf98      	it	ls
9001301c:	b2ed      	uxtbls	r5, r5
9001301e:	4304      	orrs	r4, r0
90013020:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
90013024:	b280      	uxth	r0, r0
90013026:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
9001302a:	bf00      	nop
9001302c:	f3af 8000 	nop.w
90013030:	797a8d77 	.word	0x797a8d77
90013034:	00000000 	.word	0x00000000
90013038:	00ec4ba7 	.word	0x00ec4ba7
9001303c:	fffff800 	.word	0xfffff800

90013040 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90013040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013044:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013048:	4605      	mov	r5, r0
9001304a:	ed2d 8b02 	vpush	{d8}
9001304e:	b087      	sub	sp, #28
90013050:	7c41      	ldrb	r1, [r0, #17]
90013052:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
90013056:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
9001305a:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
9001305e:	2900      	cmp	r1, #0
90013060:	f000 809a 	beq.w	90013198 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90013064:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90013068:	ed90 7a08 	vldr	s14, [r0, #32]
9001306c:	454a      	cmp	r2, r9
9001306e:	68c0      	ldr	r0, [r0, #12]
90013070:	db25      	blt.n	900130be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90013072:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013076:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001307a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001307e:	bfc8      	it	gt
90013080:	2200      	movgt	r2, #0
90013082:	5882      	ldr	r2, [r0, r2]
90013084:	2100      	movs	r1, #0
90013086:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001308a:	7c2d      	ldrb	r5, [r5, #16]
9001308c:	0950      	lsrs	r0, r2, #5
9001308e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90013092:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90013096:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001309a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001309e:	2d00      	cmp	r5, #0
900130a0:	d044      	beq.n	9001312c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900130a2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900130a6:	d141      	bne.n	9001312c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900130a8:	bb61      	cbnz	r1, 90013104 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
900130aa:	ea4e 0000 	orr.w	r0, lr, r0
900130ae:	ea4c 0500 	orr.w	r5, ip, r0
900130b2:	42bc      	cmp	r4, r7
900130b4:	f080 8214 	bcs.w	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900130b8:	f824 5b02 	strh.w	r5, [r4], #2
900130bc:	e7f9      	b.n	900130b2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
900130be:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
900130c2:	454f      	cmp	r7, r9
900130c4:	dc08      	bgt.n	900130d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
900130c6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900130ca:	f640 72fc 	movw	r2, #4092	@ 0xffc
900130ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900130d2:	bfd8      	it	le
900130d4:	2200      	movle	r2, #0
900130d6:	e7d4      	b.n	90013082 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
900130d8:	eba9 0202 	sub.w	r2, r9, r2
900130dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900130e0:	ee07 2a90 	vmov	s15, r2
900130e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900130e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900130ec:	ee67 7a87 	vmul.f32	s15, s15, s14
900130f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900130f4:	ee17 2a90 	vmov	r2, s15
900130f8:	bfd8      	it	le
900130fa:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
900130fe:	0092      	lsls	r2, r2, #2
90013100:	5882      	ldr	r2, [r0, r2]
90013102:	e7c0      	b.n	90013086 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
90013104:	b2d5      	uxtb	r5, r2
90013106:	f3c2 4a07 	ubfx	sl, r2, #16, #8
9001310a:	fa5f f888 	uxtb.w	r8, r8
9001310e:	461e      	mov	r6, r3
90013110:	42bc      	cmp	r4, r7
90013112:	f080 81e5 	bcs.w	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013116:	4630      	mov	r0, r6
90013118:	9500      	str	r5, [sp, #0]
9001311a:	4643      	mov	r3, r8
9001311c:	4652      	mov	r2, sl
9001311e:	4649      	mov	r1, r9
90013120:	3601      	adds	r6, #1
90013122:	f7ff ff41 	bl	90012fa8 <_ZN8touchgfxL10applyNoiseEiihhh>
90013126:	f824 0b02 	strh.w	r0, [r4], #2
9001312a:	e7f1      	b.n	90013110 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
9001312c:	0e12      	lsrs	r2, r2, #24
9001312e:	26ff      	movs	r6, #255	@ 0xff
90013130:	fb02 f20a 	mul.w	r2, r2, sl
90013134:	1c53      	adds	r3, r2, #1
90013136:	eb03 2222 	add.w	r2, r3, r2, asr #8
9001313a:	1212      	asrs	r2, r2, #8
9001313c:	fb02 f50c 	mul.w	r5, r2, ip
90013140:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 900134f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013144:	fb02 f10e 	mul.w	r1, r2, lr
90013148:	4350      	muls	r0, r2
9001314a:	43d2      	mvns	r2, r2
9001314c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013150:	42bc      	cmp	r4, r7
90013152:	f080 81c5 	bcs.w	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013156:	f8b4 e000 	ldrh.w	lr, [r4]
9001315a:	ea0e 030c 	and.w	r3, lr, ip
9001315e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90013162:	f00e 0e1f 	and.w	lr, lr, #31
90013166:	fb02 1303 	mla	r3, r2, r3, r1
9001316a:	fb02 0808 	mla	r8, r2, r8, r0
9001316e:	fb02 5e0e 	mla	lr, r2, lr, r5
90013172:	fb93 f3f6 	sdiv	r3, r3, r6
90013176:	fb98 f8f6 	sdiv	r8, r8, r6
9001317a:	fb9e fef6 	sdiv	lr, lr, r6
9001317e:	ea03 030c 	and.w	r3, r3, ip
90013182:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90013186:	f00e 0e1f 	and.w	lr, lr, #31
9001318a:	ea43 0308 	orr.w	r3, r3, r8
9001318e:	ea43 030e 	orr.w	r3, r3, lr
90013192:	f824 3b02 	strh.w	r3, [r4], #2
90013196:	e7db      	b.n	90013150 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90013198:	7c82      	ldrb	r2, [r0, #18]
9001319a:	2a00      	cmp	r2, #0
9001319c:	d04f      	beq.n	9001323e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001319e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900131a2:	ee07 2a90 	vmov	s15, r2
900131a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900131aa:	ee07 3a10 	vmov	s14, r3
900131ae:	461f      	mov	r7, r3
900131b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
900131b4:	eef4 6ae7 	vcmpe.f32	s13, s15
900131b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900131bc:	f200 8095 	bhi.w	900132ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
900131c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900131c4:	f640 71fc 	movw	r1, #4092	@ 0xffc
900131c8:	68ea      	ldr	r2, [r5, #12]
900131ca:	f895 c010 	ldrb.w	ip, [r5, #16]
900131ce:	ee37 7a87 	vadd.f32	s14, s15, s14
900131d2:	ee37 7a66 	vsub.f32	s14, s14, s13
900131d6:	ee06 6a90 	vmov	s13, r6
900131da:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900131de:	eeb4 7ae6 	vcmpe.f32	s14, s13
900131e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900131e6:	bf4a      	itet	mi
900131e8:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
900131ec:	9602      	strpl	r6, [sp, #8]
900131ee:	ed8d 7a02 	vstrmi	s14, [sp, #8]
900131f2:	ed95 7a08 	vldr	s14, [r5, #32]
900131f6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900131fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900131fe:	bfc8      	it	gt
90013200:	2100      	movgt	r1, #0
90013202:	5852      	ldr	r2, [r2, r1]
90013204:	9902      	ldr	r1, [sp, #8]
90013206:	ea4f 2b12 	mov.w	fp, r2, lsr #8
9001320a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001320e:	0950      	lsrs	r0, r2, #5
90013210:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90013214:	9103      	str	r1, [sp, #12]
90013216:	f3c2 01c4 	ubfx	r1, r2, #3, #5
9001321a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001321e:	f1bc 0f00 	cmp.w	ip, #0
90013222:	d024      	beq.n	9001326e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90013224:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013228:	d121      	bne.n	9001326e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
9001322a:	ea4b 0b00 	orr.w	fp, fp, r0
9001322e:	ea41 010b 	orr.w	r1, r1, fp
90013232:	9a03      	ldr	r2, [sp, #12]
90013234:	4294      	cmp	r4, r2
90013236:	d255      	bcs.n	900132e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90013238:	f824 1b02 	strh.w	r1, [r4], #2
9001323c:	e7f9      	b.n	90013232 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
9001323e:	ee07 9a10 	vmov	s14, r9
90013242:	edd0 7a06 	vldr	s15, [r0, #24]
90013246:	edd0 6a05 	vldr	s13, [r0, #20]
9001324a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001324e:	ee37 7a67 	vsub.f32	s14, s14, s15
90013252:	eec7 7a26 	vdiv.f32	s15, s14, s13
90013256:	ed90 7a08 	vldr	s14, [r0, #32]
9001325a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001325e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013262:	bf44      	itt	mi
90013264:	ed90 7a07 	vldrmi	s14, [r0, #28]
90013268:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
9001326c:	e79d      	b.n	900131aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
9001326e:	0e12      	lsrs	r2, r2, #24
90013270:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 900134f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013274:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90013278:	fb02 f20a 	mul.w	r2, r2, sl
9001327c:	f102 0c01 	add.w	ip, r2, #1
90013280:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90013284:	1212      	asrs	r2, r2, #8
90013286:	4350      	muls	r0, r2
90013288:	4351      	muls	r1, r2
9001328a:	fb02 fb0b 	mul.w	fp, r2, fp
9001328e:	43d2      	mvns	r2, r2
90013290:	9004      	str	r0, [sp, #16]
90013292:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013296:	9105      	str	r1, [sp, #20]
90013298:	9903      	ldr	r1, [sp, #12]
9001329a:	428c      	cmp	r4, r1
9001329c:	d222      	bcs.n	900132e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
9001329e:	8820      	ldrh	r0, [r4, #0]
900132a0:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
900132a4:	ea00 0c08 	and.w	ip, r0, r8
900132a8:	460f      	mov	r7, r1
900132aa:	9904      	ldr	r1, [sp, #16]
900132ac:	fb02 bc0c 	mla	ip, r2, ip, fp
900132b0:	fb02 1107 	mla	r1, r2, r7, r1
900132b4:	fb9c fcfe 	sdiv	ip, ip, lr
900132b8:	fb91 f1fe 	sdiv	r1, r1, lr
900132bc:	ea0c 0c08 	and.w	ip, ip, r8
900132c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900132c4:	ea4c 0101 	orr.w	r1, ip, r1
900132c8:	f000 0c1f 	and.w	ip, r0, #31
900132cc:	9805      	ldr	r0, [sp, #20]
900132ce:	fb02 0c0c 	mla	ip, r2, ip, r0
900132d2:	fb9c fcfe 	sdiv	ip, ip, lr
900132d6:	f00c 0c1f 	and.w	ip, ip, #31
900132da:	ea41 010c 	orr.w	r1, r1, ip
900132de:	f824 1b02 	strh.w	r1, [r4], #2
900132e2:	e7d9      	b.n	90013298 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
900132e4:	9a02      	ldr	r2, [sp, #8]
900132e6:	441a      	add	r2, r3
900132e8:	4617      	mov	r7, r2
900132ea:	441e      	add	r6, r3
900132ec:	b236      	sxth	r6, r6
900132ee:	42be      	cmp	r6, r7
900132f0:	f340 80f6 	ble.w	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900132f4:	ed95 7a07 	vldr	s14, [r5, #28]
900132f8:	ee06 7a90 	vmov	s13, r7
900132fc:	ee37 7a87 	vadd.f32	s14, s15, s14
90013300:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90013304:	eeb4 7ae6 	vcmpe.f32	s14, s13
90013308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001330c:	f340 80b2 	ble.w	90013474 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90013310:	ee06 6a10 	vmov	s12, r6
90013314:	ee76 7ae7 	vsub.f32	s15, s13, s15
90013318:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 900134ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
9001331c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90013320:	7c2b      	ldrb	r3, [r5, #16]
90013322:	eeb4 7ac6 	vcmpe.f32	s14, s12
90013326:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 900134f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
9001332a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001332e:	bfd6      	itet	le
90013330:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90013334:	46b0      	movgt	r8, r6
90013336:	ee17 8a10 	vmovle	r8, s14
9001333a:	ed95 7a08 	vldr	s14, [r5, #32]
9001333e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013342:	eba8 0707 	sub.w	r7, r8, r7
90013346:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001334a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001334e:	fe38 8a06 	vselgt.f32	s16, s16, s12
90013352:	eea7 8a27 	vfma.f32	s16, s14, s15
90013356:	b1db      	cbz	r3, 90013390 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90013358:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001335c:	d118      	bne.n	90013390 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
9001335e:	42bc      	cmp	r4, r7
90013360:	d262      	bcs.n	90013428 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90013362:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013366:	68eb      	ldr	r3, [r5, #12]
90013368:	4649      	mov	r1, r9
9001336a:	ee17 0a90 	vmov	r0, s15
9001336e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90013372:	b2d3      	uxtb	r3, r2
90013374:	9300      	str	r3, [sp, #0]
90013376:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001337a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001337e:	f7ff fe13 	bl	90012fa8 <_ZN8touchgfxL10applyNoiseEiihhh>
90013382:	f824 0b02 	strh.w	r0, [r4], #2
90013386:	edd5 7a08 	vldr	s15, [r5, #32]
9001338a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001338e:	e7e6      	b.n	9001335e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90013390:	f8df b160 	ldr.w	fp, [pc, #352]	@ 900134f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013394:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90013398:	42bc      	cmp	r4, r7
9001339a:	d245      	bcs.n	90013428 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001339c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900133a0:	68eb      	ldr	r3, [r5, #12]
900133a2:	f8b4 e000 	ldrh.w	lr, [r4]
900133a6:	ee17 2a90 	vmov	r2, s15
900133aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900133ae:	0e13      	lsrs	r3, r2, #24
900133b0:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
900133b4:	fb03 f30a 	mul.w	r3, r3, sl
900133b8:	b289      	uxth	r1, r1
900133ba:	1c58      	adds	r0, r3, #1
900133bc:	eb00 2023 	add.w	r0, r0, r3, asr #8
900133c0:	ea0e 030b 	and.w	r3, lr, fp
900133c4:	1200      	asrs	r0, r0, #8
900133c6:	ea6f 0c00 	mvn.w	ip, r0
900133ca:	fa5f fc8c 	uxtb.w	ip, ip
900133ce:	fb0c f303 	mul.w	r3, ip, r3
900133d2:	fb00 3101 	mla	r1, r0, r1, r3
900133d6:	fb91 f1f9 	sdiv	r1, r1, r9
900133da:	ea01 030b 	and.w	r3, r1, fp
900133de:	9302      	str	r3, [sp, #8]
900133e0:	0953      	lsrs	r3, r2, #5
900133e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900133e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900133ea:	4619      	mov	r1, r3
900133ec:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
900133f0:	f00e 0e1f 	and.w	lr, lr, #31
900133f4:	fb0c f303 	mul.w	r3, ip, r3
900133f8:	fb0c fc0e 	mul.w	ip, ip, lr
900133fc:	fb00 3301 	mla	r3, r0, r1, r3
90013400:	9902      	ldr	r1, [sp, #8]
90013402:	fb00 c002 	mla	r0, r0, r2, ip
90013406:	fb93 f3f9 	sdiv	r3, r3, r9
9001340a:	fb90 f0f9 	sdiv	r0, r0, r9
9001340e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90013412:	f000 001f 	and.w	r0, r0, #31
90013416:	4319      	orrs	r1, r3
90013418:	4301      	orrs	r1, r0
9001341a:	f824 1b02 	strh.w	r1, [r4], #2
9001341e:	edd5 7a08 	vldr	s15, [r5, #32]
90013422:	ee38 8a27 	vadd.f32	s16, s16, s15
90013426:	e7b7      	b.n	90013398 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90013428:	4546      	cmp	r6, r8
9001342a:	dd59      	ble.n	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001342c:	edd5 7a08 	vldr	s15, [r5, #32]
90013430:	f640 73fc 	movw	r3, #4092	@ 0xffc
90013434:	68ea      	ldr	r2, [r5, #12]
90013436:	eba6 0608 	sub.w	r6, r6, r8
9001343a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001343e:	7c29      	ldrb	r1, [r5, #16]
90013440:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90013444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013448:	bfd8      	it	le
9001344a:	2300      	movle	r3, #0
9001344c:	58d2      	ldr	r2, [r2, r3]
9001344e:	0a10      	lsrs	r0, r2, #8
90013450:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90013454:	0953      	lsrs	r3, r2, #5
90013456:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001345a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001345e:	b159      	cbz	r1, 90013478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90013460:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013464:	d108      	bne.n	90013478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90013466:	4318      	orrs	r0, r3
90013468:	4338      	orrs	r0, r7
9001346a:	42b4      	cmp	r4, r6
9001346c:	d238      	bcs.n	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001346e:	f824 0b02 	strh.w	r0, [r4], #2
90013472:	e7fa      	b.n	9001346a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90013474:	46b8      	mov	r8, r7
90013476:	e7d9      	b.n	9001342c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90013478:	0e12      	lsrs	r2, r2, #24
9001347a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 900134f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001347e:	fb02 f10a 	mul.w	r1, r2, sl
90013482:	1c4a      	adds	r2, r1, #1
90013484:	eb02 2221 	add.w	r2, r2, r1, asr #8
90013488:	1212      	asrs	r2, r2, #8
9001348a:	fb02 f507 	mul.w	r5, r2, r7
9001348e:	27ff      	movs	r7, #255	@ 0xff
90013490:	4350      	muls	r0, r2
90013492:	4353      	muls	r3, r2
90013494:	43d2      	mvns	r2, r2
90013496:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001349a:	42b4      	cmp	r4, r6
9001349c:	d220      	bcs.n	900134e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001349e:	f8b4 e000 	ldrh.w	lr, [r4]
900134a2:	ea0e 010c 	and.w	r1, lr, ip
900134a6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900134aa:	f00e 0e1f 	and.w	lr, lr, #31
900134ae:	fb02 0101 	mla	r1, r2, r1, r0
900134b2:	fb02 3808 	mla	r8, r2, r8, r3
900134b6:	fb02 5e0e 	mla	lr, r2, lr, r5
900134ba:	fb91 f1f7 	sdiv	r1, r1, r7
900134be:	fb98 f8f7 	sdiv	r8, r8, r7
900134c2:	fb9e fef7 	sdiv	lr, lr, r7
900134c6:	ea01 010c 	and.w	r1, r1, ip
900134ca:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900134ce:	f00e 0e1f 	and.w	lr, lr, #31
900134d2:	ea41 0108 	orr.w	r1, r1, r8
900134d6:	ea41 010e 	orr.w	r1, r1, lr
900134da:	f824 1b02 	strh.w	r1, [r4], #2
900134de:	e7dc      	b.n	9001349a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
900134e0:	b007      	add	sp, #28
900134e2:	ecbd 8b02 	vpop	{d8}
900134e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900134ea:	bf00      	nop
900134ec:	00000000 	.word	0x00000000
900134f0:	447ffffe 	.word	0x447ffffe
900134f4:	fffff800 	.word	0xfffff800

900134f8 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
900134f8:	4770      	bx	lr

900134fa <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
900134fa:	4770      	bx	lr

900134fc <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
900134fc:	b510      	push	{r4, lr}
900134fe:	4604      	mov	r4, r0
90013500:	2124      	movs	r1, #36	@ 0x24
90013502:	f017 fcd5 	bl	9002aeb0 <_ZdlPvj>
90013506:	4620      	mov	r0, r4
90013508:	bd10      	pop	{r4, pc}
	...

9001350c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
9001350c:	094a      	lsrs	r2, r1, #5
9001350e:	4b06      	ldr	r3, [pc, #24]	@ (90013528 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90013510:	60c1      	str	r1, [r0, #12]
90013512:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90013516:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001351a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001351e:	4313      	orrs	r3, r2
90013520:	4319      	orrs	r1, r3
90013522:	8201      	strh	r1, [r0, #16]
90013524:	4770      	bx	lr
90013526:	bf00      	nop
90013528:	fffff800 	.word	0xfffff800

9001352c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
9001352c:	f1a0 0008 	sub.w	r0, r0, #8
90013530:	e7ec      	b.n	9001350c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90013532:	bf00      	nop

90013534 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90013534:	b508      	push	{r3, lr}
90013536:	4b05      	ldr	r3, [pc, #20]	@ (9001354c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90013538:	6818      	ldr	r0, [r3, #0]
9001353a:	6803      	ldr	r3, [r0, #0]
9001353c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90013540:	4798      	blx	r3
90013542:	1e43      	subs	r3, r0, #1
90013544:	4258      	negs	r0, r3
90013546:	4158      	adcs	r0, r3
90013548:	bd08      	pop	{r3, pc}
9001354a:	bf00      	nop
9001354c:	240218cc 	.word	0x240218cc

90013550 <_ZN8touchgfx13PainterRGB565D1Ev>:
90013550:	4770      	bx	lr

90013552 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90013552:	3808      	subs	r0, #8
90013554:	4770      	bx	lr

90013556 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90013556:	b430      	push	{r4, r5}
90013558:	eb01 0442 	add.w	r4, r1, r2, lsl #1
9001355c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90013560:	8a02      	ldrh	r2, [r0, #16]
90013562:	f89d 3010 	ldrb.w	r3, [sp, #16]
90013566:	4629      	mov	r1, r5
90013568:	9202      	str	r2, [sp, #8]
9001356a:	68c2      	ldr	r2, [r0, #12]
9001356c:	4620      	mov	r0, r4
9001356e:	bc30      	pop	{r4, r5}
90013570:	f7ef b9da 	b.w	90002928 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013574 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013574:	f7ef b9b4 	b.w	900028e0 <_ZN8touchgfx5paint8tearDownEv>

90013578 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013578:	b510      	push	{r4, lr}
9001357a:	4604      	mov	r4, r0
9001357c:	2114      	movs	r1, #20
9001357e:	f017 fc97 	bl	9002aeb0 <_ZdlPvj>
90013582:	4620      	mov	r0, r4
90013584:	bd10      	pop	{r4, pc}

90013586 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013586:	f1a0 0008 	sub.w	r0, r0, #8
9001358a:	e7f5      	b.n	90013578 <_ZN8touchgfx13PainterRGB565D0Ev>

9001358c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001358c:	2300      	movs	r3, #0
9001358e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013590:	8503      	strh	r3, [r0, #40]	@ 0x28
90013592:	8543      	strh	r3, [r0, #42]	@ 0x2a
90013594:	8583      	strh	r3, [r0, #44]	@ 0x2c
90013596:	6980      	ldr	r0, [r0, #24]
90013598:	b110      	cbz	r0, 900135a0 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001359a:	6803      	ldr	r3, [r0, #0]
9001359c:	691b      	ldr	r3, [r3, #16]
9001359e:	4718      	bx	r3
900135a0:	4770      	bx	lr

900135a2 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
900135a2:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
900135a6:	4770      	bx	lr

900135a8 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
900135a8:	b538      	push	{r3, r4, r5, lr}
900135aa:	0e0b      	lsrs	r3, r1, #24
900135ac:	4604      	mov	r4, r0
900135ae:	460d      	mov	r5, r1
900135b0:	7783      	strb	r3, [r0, #30]
900135b2:	6803      	ldr	r3, [r0, #0]
900135b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900135b6:	4798      	blx	r3
900135b8:	6803      	ldr	r3, [r0, #0]
900135ba:	4629      	mov	r1, r5
900135bc:	689b      	ldr	r3, [r3, #8]
900135be:	4798      	blx	r3
900135c0:	6823      	ldr	r3, [r4, #0]
900135c2:	4620      	mov	r0, r4
900135c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900135c6:	4798      	blx	r3
900135c8:	61a0      	str	r0, [r4, #24]
900135ca:	bd38      	pop	{r3, r4, r5, pc}

900135cc <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
900135cc:	7741      	strb	r1, [r0, #29]
900135ce:	4770      	bx	lr

900135d0 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
900135d0:	b530      	push	{r4, r5, lr}
900135d2:	460d      	mov	r5, r1
900135d4:	f100 0434 	add.w	r4, r0, #52	@ 0x34
900135d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900135da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900135dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900135de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900135e0:	682b      	ldr	r3, [r5, #0]
900135e2:	6023      	str	r3, [r4, #0]
900135e4:	bd30      	pop	{r4, r5, pc}

900135e6 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
900135e6:	b538      	push	{r3, r4, r5, lr}
900135e8:	4604      	mov	r4, r0
900135ea:	1d03      	adds	r3, r0, #4
900135ec:	6808      	ldr	r0, [r1, #0]
900135ee:	2500      	movs	r5, #0
900135f0:	6849      	ldr	r1, [r1, #4]
900135f2:	c303      	stmia	r3!, {r0, r1}
900135f4:	6813      	ldr	r3, [r2, #0]
900135f6:	f104 0034 	add.w	r0, r4, #52	@ 0x34
900135fa:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
900135fe:	6853      	ldr	r3, [r2, #4]
90013600:	61a5      	str	r5, [r4, #24]
90013602:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90013606:	f006 fb1d 	bl	90019c44 <_ZN8touchgfx9Matrix3x35resetEv>
9001360a:	23ff      	movs	r3, #255	@ 0xff
9001360c:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90013610:	7763      	strb	r3, [r4, #29]
90013612:	77a3      	strb	r3, [r4, #30]
90013614:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90013618:	6323      	str	r3, [r4, #48]	@ 0x30
9001361a:	2301      	movs	r3, #1
9001361c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90013620:	bd38      	pop	{r3, r4, r5, pc}
	...

90013624 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90013624:	ee70 7a41 	vsub.f32	s15, s0, s2
90013628:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001362c:	eef5 7a40 	vcmp.f32	s15, #0.0
90013630:	4605      	mov	r5, r0
90013632:	ed2d 8b0a 	vpush	{d8-d12}
90013636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001363a:	b087      	sub	sp, #28
9001363c:	eef0 9a40 	vmov.f32	s19, s0
90013640:	6802      	ldr	r2, [r0, #0]
90013642:	eeb0 aa60 	vmov.f32	s20, s1
90013646:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001364a:	eeb0 9a41 	vmov.f32	s18, s2
9001364e:	9f19      	ldr	r7, [sp, #100]	@ 0x64
90013650:	eef0 8a61 	vmov.f32	s17, s3
90013654:	eeb0 ca42 	vmov.f32	s24, s4
90013658:	eef0 ca62 	vmov.f32	s25, s5
9001365c:	d112      	bne.n	90013684 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001365e:	ee70 7ae1 	vsub.f32	s15, s1, s3
90013662:	eef5 7a40 	vcmp.f32	s15, #0.0
90013666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001366a:	d10b      	bne.n	90013684 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001366c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90013670:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90013672:	3901      	subs	r1, #1
90013674:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90013678:	b007      	add	sp, #28
9001367a:	ecbd 8b0a 	vpop	{d8-d12}
9001367e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013682:	4710      	bx	r2
90013684:	23ff      	movs	r3, #255	@ 0xff
90013686:	4628      	mov	r0, r5
90013688:	f105 0834 	add.w	r8, r5, #52	@ 0x34
9001368c:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90013954 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90013690:	77ab      	strb	r3, [r5, #30]
90013692:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90013694:	4798      	blx	r3
90013696:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
9001369a:	eeb0 0a69 	vmov.f32	s0, s19
9001369e:	4604      	mov	r4, r0
900136a0:	80c3      	strh	r3, [r0, #6]
900136a2:	eef0 0a4a 	vmov.f32	s1, s20
900136a6:	4640      	mov	r0, r8
900136a8:	f006 fb7b 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900136ac:	eeb0 ba40 	vmov.f32	s22, s0
900136b0:	ed8d 0a00 	vstr	s0, [sp]
900136b4:	eeb0 0a49 	vmov.f32	s0, s18
900136b8:	eef0 ba60 	vmov.f32	s23, s1
900136bc:	edcd 0a01 	vstr	s1, [sp, #4]
900136c0:	4640      	mov	r0, r8
900136c2:	eef0 0a68 	vmov.f32	s1, s17
900136c6:	f006 fb6c 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900136ca:	eeb4 ba40 	vcmp.f32	s22, s0
900136ce:	eeb0 8a40 	vmov.f32	s16, s0
900136d2:	ed8d 0a02 	vstr	s0, [sp, #8]
900136d6:	eef0 aa60 	vmov.f32	s21, s1
900136da:	edcd 0a03 	vstr	s1, [sp, #12]
900136de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136e2:	eef4 ba60 	vcmp.f32	s23, s1
900136e6:	bf0c      	ite	eq
900136e8:	2301      	moveq	r3, #1
900136ea:	2300      	movne	r3, #0
900136ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136f0:	eeb4 ba40 	vcmp.f32	s22, s0
900136f4:	7463      	strb	r3, [r4, #17]
900136f6:	bf0c      	ite	eq
900136f8:	2301      	moveq	r3, #1
900136fa:	2300      	movne	r3, #0
900136fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013700:	74a3      	strb	r3, [r4, #18]
90013702:	d031      	beq.n	90013768 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90013704:	eef4 ba60 	vcmp.f32	s23, s1
90013708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001370c:	d02c      	beq.n	90013768 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
9001370e:	ee39 9a69 	vsub.f32	s18, s18, s19
90013712:	4640      	mov	r0, r8
90013714:	ee78 8aca 	vsub.f32	s17, s17, s20
90013718:	eef0 0a4a 	vmov.f32	s1, s20
9001371c:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90013720:	eec8 7aac 	vdiv.f32	s15, s17, s25
90013724:	eeb0 0a69 	vmov.f32	s0, s19
90013728:	eeec 0a87 	vfma.f32	s1, s25, s14
9001372c:	eea7 0acc 	vfms.f32	s0, s15, s24
90013730:	f006 fb37 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013734:	f899 3000 	ldrb.w	r3, [r9]
90013738:	edcd 0a05 	vstr	s1, [sp, #20]
9001373c:	ee70 0aeb 	vsub.f32	s1, s1, s23
90013740:	2b01      	cmp	r3, #1
90013742:	bf08      	it	eq
90013744:	eef1 7a60 	vnegeq.f32	s15, s1
90013748:	ed8d 0a04 	vstr	s0, [sp, #16]
9001374c:	ee30 0a4b 	vsub.f32	s0, s0, s22
90013750:	bf04      	itt	eq
90013752:	eef0 0a40 	vmoveq.f32	s1, s0
90013756:	eeb0 0a67 	vmoveq.f32	s0, s15
9001375a:	eeb5 0a40 	vcmp.f32	s0, #0.0
9001375e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013762:	d135      	bne.n	900137d0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90013764:	2301      	movs	r3, #1
90013766:	74a3      	strb	r3, [r4, #18]
90013768:	f899 2000 	ldrb.w	r2, [r9]
9001376c:	7c63      	ldrb	r3, [r4, #17]
9001376e:	2a01      	cmp	r2, #1
90013770:	f040 80a3 	bne.w	900138ba <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90013774:	2b00      	cmp	r3, #0
90013776:	d073      	beq.n	90013860 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90013778:	ee3a 7aeb 	vsub.f32	s14, s21, s23
9001377c:	eddf 6a73 	vldr	s13, [pc, #460]	@ 9001394c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90013780:	eef4 baea 	vcmpe.f32	s23, s21
90013784:	eec6 7a87 	vdiv.f32	s15, s13, s14
90013788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001378c:	edc4 7a08 	vstr	s15, [r4, #32]
90013790:	eefd 7aea 	vcvt.s32.f32	s15, s21
90013794:	ee17 3a90 	vmov	r3, s15
90013798:	eefd 7aeb 	vcvt.s32.f32	s15, s23
9001379c:	b21a      	sxth	r2, r3
9001379e:	ee17 3a90 	vmov	r3, s15
900137a2:	bf48      	it	mi
900137a4:	8162      	strhmi	r2, [r4, #10]
900137a6:	b21b      	sxth	r3, r3
900137a8:	bf56      	itet	pl
900137aa:	8122      	strhpl	r2, [r4, #8]
900137ac:	8123      	strhmi	r3, [r4, #8]
900137ae:	8163      	strhpl	r3, [r4, #10]
900137b0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900137b4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900137b8:	1a9b      	subs	r3, r3, r2
900137ba:	ee07 3a90 	vmov	s15, r3
900137be:	2300      	movs	r3, #0
900137c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900137c4:	7463      	strb	r3, [r4, #17]
900137c6:	2301      	movs	r3, #1
900137c8:	edc4 7a07 	vstr	s15, [r4, #28]
900137cc:	74a3      	strb	r3, [r4, #18]
900137ce:	e03f      	b.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900137d0:	ee80 7a80 	vdiv.f32	s14, s1, s0
900137d4:	eeb5 7a40 	vcmp.f32	s14, #0.0
900137d8:	ed84 7a05 	vstr	s14, [r4, #20]
900137dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900137e0:	d102      	bne.n	900137e8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
900137e2:	2301      	movs	r3, #1
900137e4:	7463      	strb	r3, [r4, #17]
900137e6:	e7bf      	b.n	90013768 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
900137e8:	2b01      	cmp	r3, #1
900137ea:	ee38 8a4b 	vsub.f32	s16, s16, s22
900137ee:	ee7a aaeb 	vsub.f32	s21, s21, s23
900137f2:	bf0b      	itete	eq
900137f4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
900137f8:	eef0 7a6b 	vmovne.f32	s15, s23
900137fc:	ee07 2a90 	vmoveq	s15, r2
90013800:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90013804:	bf02      	ittt	eq
90013806:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
9001380a:	ee77 7acb 	vsubeq.f32	s15, s15, s22
9001380e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90013812:	2b01      	cmp	r3, #1
90013814:	edc4 7a06 	vstr	s15, [r4, #24]
90013818:	bf02      	ittt	eq
9001381a:	eef1 7a48 	vnegeq.f32	s15, s16
9001381e:	eeb0 8a6a 	vmoveq.f32	s16, s21
90013822:	eef0 aa67 	vmoveq.f32	s21, s15
90013826:	eeca 7a87 	vdiv.f32	s15, s21, s14
9001382a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90013950 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
9001382e:	ee38 8a67 	vsub.f32	s16, s16, s15
90013832:	eec7 7a08 	vdiv.f32	s15, s14, s16
90013836:	ed84 8a07 	vstr	s16, [r4, #28]
9001383a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9001383e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013842:	edc4 7a08 	vstr	s15, [r4, #32]
90013846:	d503      	bpl.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90013848:	eeb1 8a48 	vneg.f32	s16, s16
9001384c:	ed84 8a07 	vstr	s16, [r4, #28]
90013850:	60e7      	str	r7, [r4, #12]
90013852:	7426      	strb	r6, [r4, #16]
90013854:	61ac      	str	r4, [r5, #24]
90013856:	b007      	add	sp, #28
90013858:	ecbd 8b0a 	vpop	{d8-d12}
9001385c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013860:	7ca3      	ldrb	r3, [r4, #18]
90013862:	2b00      	cmp	r3, #0
90013864:	d0f4      	beq.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90013866:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001386a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 9001394c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
9001386e:	ee00 3a10 	vmov	s0, r3
90013872:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90013876:	ee30 8a48 	vsub.f32	s16, s0, s16
9001387a:	ee30 0a4b 	vsub.f32	s0, s0, s22
9001387e:	ee38 7a40 	vsub.f32	s14, s16, s0
90013882:	eeb4 8ac0 	vcmpe.f32	s16, s0
90013886:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001388a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001388e:	edc4 7a08 	vstr	s15, [r4, #32]
90013892:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013896:	ee17 3a90 	vmov	r3, s15
9001389a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9001389e:	b21a      	sxth	r2, r3
900138a0:	ee17 3a90 	vmov	r3, s15
900138a4:	bfc8      	it	gt
900138a6:	8162      	strhgt	r2, [r4, #10]
900138a8:	b21b      	sxth	r3, r3
900138aa:	bfd6      	itet	le
900138ac:	8122      	strhle	r2, [r4, #8]
900138ae:	8123      	strhgt	r3, [r4, #8]
900138b0:	8163      	strhle	r3, [r4, #10]
900138b2:	2301      	movs	r3, #1
900138b4:	7463      	strb	r3, [r4, #17]
900138b6:	2300      	movs	r3, #0
900138b8:	e788      	b.n	900137cc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
900138ba:	b1e3      	cbz	r3, 900138f6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
900138bc:	ee3a 7aeb 	vsub.f32	s14, s21, s23
900138c0:	eddf 6a22 	vldr	s13, [pc, #136]	@ 9001394c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
900138c4:	eef4 baea 	vcmpe.f32	s23, s21
900138c8:	eec6 7a87 	vdiv.f32	s15, s13, s14
900138cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138d0:	edc4 7a08 	vstr	s15, [r4, #32]
900138d4:	eefd 7aea 	vcvt.s32.f32	s15, s21
900138d8:	ee17 3a90 	vmov	r3, s15
900138dc:	eefd 7aeb 	vcvt.s32.f32	s15, s23
900138e0:	b21a      	sxth	r2, r3
900138e2:	ee17 3a90 	vmov	r3, s15
900138e6:	bf48      	it	mi
900138e8:	8162      	strhmi	r2, [r4, #10]
900138ea:	b21b      	sxth	r3, r3
900138ec:	bf56      	itet	pl
900138ee:	8122      	strhpl	r2, [r4, #8]
900138f0:	8123      	strhmi	r3, [r4, #8]
900138f2:	8163      	strhpl	r3, [r4, #10]
900138f4:	e7ac      	b.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900138f6:	7ca3      	ldrb	r3, [r4, #18]
900138f8:	2b00      	cmp	r3, #0
900138fa:	d0a9      	beq.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900138fc:	ee38 7a4b 	vsub.f32	s14, s16, s22
90013900:	eddf 6a12 	vldr	s13, [pc, #72]	@ 9001394c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90013904:	eeb4 bac8 	vcmpe.f32	s22, s16
90013908:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001390c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013910:	edc4 7a08 	vstr	s15, [r4, #32]
90013914:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013918:	ee17 3a90 	vmov	r3, s15
9001391c:	eefd 7acb 	vcvt.s32.f32	s15, s22
90013920:	b21a      	sxth	r2, r3
90013922:	ee17 3a90 	vmov	r3, s15
90013926:	bf48      	it	mi
90013928:	8162      	strhmi	r2, [r4, #10]
9001392a:	b21b      	sxth	r3, r3
9001392c:	bf56      	itet	pl
9001392e:	8122      	strhpl	r2, [r4, #8]
90013930:	8123      	strhmi	r3, [r4, #8]
90013932:	8163      	strhpl	r3, [r4, #10]
90013934:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013938:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001393c:	1a9b      	subs	r3, r3, r2
9001393e:	ee07 3a90 	vmov	s15, r3
90013942:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90013946:	edc4 7a07 	vstr	s15, [r4, #28]
9001394a:	e781      	b.n	90013850 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
9001394c:	447ffffe 	.word	0x447ffffe
90013950:	44800000 	.word	0x44800000
90013954:	240218c4 	.word	0x240218c4

90013958 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90013958:	b510      	push	{r4, lr}
9001395a:	ed2d 8b02 	vpush	{d8}
9001395e:	eef0 8a62 	vmov.f32	s17, s5
90013962:	2100      	movs	r1, #0
90013964:	4604      	mov	r4, r0
90013966:	eeb0 8a42 	vmov.f32	s16, s4
9001396a:	f017 f813 	bl	9002a994 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9001396e:	eef0 7a68 	vmov.f32	s15, s17
90013972:	6823      	ldr	r3, [r4, #0]
90013974:	4620      	mov	r0, r4
90013976:	689b      	ldr	r3, [r3, #8]
90013978:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001397c:	ee17 2a90 	vmov	r2, s15
90013980:	eef0 7a48 	vmov.f32	s15, s16
90013984:	ecbd 8b02 	vpop	{d8}
90013988:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001398c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013990:	ee17 1a90 	vmov	r1, s15
90013994:	4718      	bx	r3

90013996 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90013996:	b510      	push	{r4, lr}
90013998:	ed2d 8b02 	vpush	{d8}
9001399c:	eef0 8a63 	vmov.f32	s17, s7
900139a0:	2100      	movs	r1, #0
900139a2:	4604      	mov	r4, r0
900139a4:	eeb0 8a43 	vmov.f32	s16, s6
900139a8:	f017 f8b6 	bl	9002ab18 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
900139ac:	eef0 7a68 	vmov.f32	s15, s17
900139b0:	6823      	ldr	r3, [r4, #0]
900139b2:	4620      	mov	r0, r4
900139b4:	689b      	ldr	r3, [r3, #8]
900139b6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900139ba:	ee17 2a90 	vmov	r2, s15
900139be:	eef0 7a48 	vmov.f32	s15, s16
900139c2:	ecbd 8b02 	vpop	{d8}
900139c6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900139ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900139ce:	ee17 1a90 	vmov	r1, s15
900139d2:	4718      	bx	r3

900139d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
900139d4:	b513      	push	{r0, r1, r4, lr}
900139d6:	4604      	mov	r4, r0
900139d8:	6f40      	ldr	r0, [r0, #116]	@ 0x74
900139da:	f006 f9e2 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900139de:	eef0 7a60 	vmov.f32	s15, s1
900139e2:	4620      	mov	r0, r4
900139e4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900139e8:	ee17 2a90 	vmov	r2, s15
900139ec:	eef0 7a40 	vmov.f32	s15, s0
900139f0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900139f4:	ee17 1a90 	vmov	r1, s15
900139f8:	b002      	add	sp, #8
900139fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900139fe:	f016 bf23 	b.w	9002a848 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90013a02:	b513      	push	{r0, r1, r4, lr}
90013a04:	4604      	mov	r4, r0
90013a06:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90013a08:	f006 f9cb 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013a0c:	eef0 7a60 	vmov.f32	s15, s1
90013a10:	4620      	mov	r0, r4
90013a12:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013a16:	ee17 2a90 	vmov	r2, s15
90013a1a:	eef0 7a40 	vmov.f32	s15, s0
90013a1e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013a22:	ee17 1a90 	vmov	r1, s15
90013a26:	b002      	add	sp, #8
90013a28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013a2c:	f016 bf59 	b.w	9002a8e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90013a30 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90013a30:	b5f0      	push	{r4, r5, r6, r7, lr}
90013a32:	2400      	movs	r4, #0
90013a34:	9f07      	ldr	r7, [sp, #28]
90013a36:	f04f 0e01 	mov.w	lr, #1
90013a3a:	4626      	mov	r6, r4
90013a3c:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90013a40:	4463      	add	r3, ip
90013a42:	4563      	cmp	r3, ip
90013a44:	d02d      	beq.n	90013aa2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90013a46:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90013a4a:	2d06      	cmp	r5, #6
90013a4c:	d8f9      	bhi.n	90013a42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013a4e:	fa0e f505 	lsl.w	r5, lr, r5
90013a52:	f015 0f66 	tst.w	r5, #102	@ 0x66
90013a56:	d10d      	bne.n	90013a74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90013a58:	f015 0f10 	tst.w	r5, #16
90013a5c:	d117      	bne.n	90013a8e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90013a5e:	072d      	lsls	r5, r5, #28
90013a60:	d5ef      	bpl.n	90013a42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013a62:	3801      	subs	r0, #1
90013a64:	b91e      	cbnz	r6, 90013a6e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90013a66:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90013a6a:	682d      	ldr	r5, [r5, #0]
90013a6c:	600d      	str	r5, [r1, #0]
90013a6e:	b96c      	cbnz	r4, 90013a8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013a70:	2601      	movs	r6, #1
90013a72:	e7e6      	b.n	90013a42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013a74:	b926      	cbnz	r6, 90013a80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90013a76:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90013a7a:	f853 3c08 	ldr.w	r3, [r3, #-8]
90013a7e:	600b      	str	r3, [r1, #0]
90013a80:	b924      	cbnz	r4, 90013a8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013a82:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90013a86:	f850 3c04 	ldr.w	r3, [r0, #-4]
90013a8a:	6013      	str	r3, [r2, #0]
90013a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013a8e:	3801      	subs	r0, #1
90013a90:	b91c      	cbnz	r4, 90013a9a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90013a92:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90013a96:	6824      	ldr	r4, [r4, #0]
90013a98:	6014      	str	r4, [r2, #0]
90013a9a:	2e00      	cmp	r6, #0
90013a9c:	d1f6      	bne.n	90013a8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013a9e:	2401      	movs	r4, #1
90013aa0:	e7cf      	b.n	90013a42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90013aa2:	b90e      	cbnz	r6, 90013aa8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90013aa4:	2300      	movs	r3, #0
90013aa6:	600b      	str	r3, [r1, #0]
90013aa8:	2c00      	cmp	r4, #0
90013aaa:	d1ef      	bne.n	90013a8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90013aac:	2300      	movs	r3, #0
90013aae:	e7ec      	b.n	90013a8a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90013ab0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90013ab0:	b538      	push	{r3, r4, r5, lr}
90013ab2:	ed2d 8b0a 	vpush	{d8-d12}
90013ab6:	eef0 ba40 	vmov.f32	s23, s0
90013aba:	4604      	mov	r4, r0
90013abc:	eeb0 ca60 	vmov.f32	s24, s1
90013ac0:	460d      	mov	r5, r1
90013ac2:	eef0 aa41 	vmov.f32	s21, s2
90013ac6:	eeb0 ba61 	vmov.f32	s22, s3
90013aca:	eeb0 9a42 	vmov.f32	s18, s4
90013ace:	eef0 9a62 	vmov.f32	s19, s5
90013ad2:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90013ad6:	ee7b 8a29 	vadd.f32	s17, s22, s19
90013ada:	ee3a 8a89 	vadd.f32	s16, s21, s18
90013ade:	ee68 8a8a 	vmul.f32	s17, s17, s20
90013ae2:	ee28 8a0a 	vmul.f32	s16, s16, s20
90013ae6:	ee3c 0a68 	vsub.f32	s0, s24, s17
90013aea:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90013aee:	ee20 0a00 	vmul.f32	s0, s0, s0
90013af2:	eea7 0aa7 	vfma.f32	s0, s15, s15
90013af6:	f017 fa05 	bl	9002af04 <sqrtf>
90013afa:	eeb5 0a40 	vcmp.f32	s0, #0.0
90013afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013b02:	d12e      	bne.n	90013b62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90013b04:	ee79 7a6a 	vsub.f32	s15, s18, s21
90013b08:	ee39 7acb 	vsub.f32	s14, s19, s22
90013b0c:	eeb0 8a6a 	vmov.f32	s16, s21
90013b10:	eef0 8a4b 	vmov.f32	s17, s22
90013b14:	eea7 8a8a 	vfma.f32	s16, s15, s20
90013b18:	eee7 8a0a 	vfma.f32	s17, s14, s20
90013b1c:	eea7 8a0a 	vfma.f32	s16, s14, s20
90013b20:	eee7 8aca 	vfms.f32	s17, s15, s20
90013b24:	2d02      	cmp	r5, #2
90013b26:	dc2f      	bgt.n	90013b88 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90013b28:	3501      	adds	r5, #1
90013b2a:	eef0 1a4b 	vmov.f32	s3, s22
90013b2e:	eeb0 1a6a 	vmov.f32	s2, s21
90013b32:	4620      	mov	r0, r4
90013b34:	4629      	mov	r1, r5
90013b36:	eef0 2a68 	vmov.f32	s5, s17
90013b3a:	eeb0 2a48 	vmov.f32	s4, s16
90013b3e:	eef0 0a4c 	vmov.f32	s1, s24
90013b42:	eeb0 0a6b 	vmov.f32	s0, s23
90013b46:	f7ff ffb3 	bl	90013ab0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90013b4a:	eef0 0a68 	vmov.f32	s1, s17
90013b4e:	eeb0 0a48 	vmov.f32	s0, s16
90013b52:	4620      	mov	r0, r4
90013b54:	f7ff ff55 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013b58:	eeb0 ba68 	vmov.f32	s22, s17
90013b5c:	eef0 aa48 	vmov.f32	s21, s16
90013b60:	e7b9      	b.n	90013ad6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90013b62:	ee38 8a6b 	vsub.f32	s16, s16, s23
90013b66:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90013b6a:	ee78 8acc 	vsub.f32	s17, s17, s24
90013b6e:	ee28 7a27 	vmul.f32	s14, s16, s15
90013b72:	ee68 7aa7 	vmul.f32	s15, s17, s15
90013b76:	ee87 8a00 	vdiv.f32	s16, s14, s0
90013b7a:	eec7 8a80 	vdiv.f32	s17, s15, s0
90013b7e:	ee3b 8a88 	vadd.f32	s16, s23, s16
90013b82:	ee7c 8a28 	vadd.f32	s17, s24, s17
90013b86:	e7cd      	b.n	90013b24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90013b88:	eef0 0a68 	vmov.f32	s1, s17
90013b8c:	4620      	mov	r0, r4
90013b8e:	eeb0 0a48 	vmov.f32	s0, s16
90013b92:	f7ff ff36 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013b96:	ecbd 8b0a 	vpop	{d8-d12}
90013b9a:	bd38      	pop	{r3, r4, r5, pc}

90013b9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90013b9c:	b510      	push	{r4, lr}
90013b9e:	ed2d 8b0a 	vpush	{d8-d12}
90013ba2:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90013ba6:	4604      	mov	r4, r0
90013ba8:	eeb0 ca40 	vmov.f32	s24, s0
90013bac:	2b02      	cmp	r3, #2
90013bae:	eeb0 9a60 	vmov.f32	s18, s1
90013bb2:	eef0 9a41 	vmov.f32	s19, s2
90013bb6:	eef0 8a61 	vmov.f32	s17, s3
90013bba:	eeb0 ba42 	vmov.f32	s22, s4
90013bbe:	eef0 ba62 	vmov.f32	s23, s5
90013bc2:	eeb0 aa43 	vmov.f32	s20, s6
90013bc6:	eef0 aa63 	vmov.f32	s21, s7
90013bca:	eeb0 8a44 	vmov.f32	s16, s8
90013bce:	eef0 ca64 	vmov.f32	s25, s9
90013bd2:	d12c      	bne.n	90013c2e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90013bd4:	eef0 0a62 	vmov.f32	s1, s5
90013bd8:	eeb0 0a42 	vmov.f32	s0, s4
90013bdc:	f7ff ff11 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013be0:	ee79 9acb 	vsub.f32	s19, s19, s22
90013be4:	ee7a caec 	vsub.f32	s25, s21, s25
90013be8:	ee78 8aeb 	vsub.f32	s17, s17, s23
90013bec:	ee3a 8a48 	vsub.f32	s16, s20, s16
90013bf0:	ee69 9aac 	vmul.f32	s19, s19, s25
90013bf4:	ee28 8a88 	vmul.f32	s16, s17, s16
90013bf8:	eef4 9ac8 	vcmpe.f32	s19, s16
90013bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c00:	db0f      	blt.n	90013c22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90013c02:	2101      	movs	r1, #1
90013c04:	eef0 2a6a 	vmov.f32	s5, s21
90013c08:	eeb0 2a4a 	vmov.f32	s4, s20
90013c0c:	4620      	mov	r0, r4
90013c0e:	eef0 1a6b 	vmov.f32	s3, s23
90013c12:	eeb0 1a4b 	vmov.f32	s2, s22
90013c16:	eef0 0a49 	vmov.f32	s1, s18
90013c1a:	eeb0 0a4c 	vmov.f32	s0, s24
90013c1e:	f7ff ff47 	bl	90013ab0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90013c22:	eef0 0a6a 	vmov.f32	s1, s21
90013c26:	4620      	mov	r0, r4
90013c28:	eeb0 0a4a 	vmov.f32	s0, s20
90013c2c:	e035      	b.n	90013c9a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90013c2e:	2b01      	cmp	r3, #1
90013c30:	d138      	bne.n	90013ca4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013c32:	ee31 4ae2 	vsub.f32	s8, s3, s5
90013c36:	ee33 6a48 	vsub.f32	s12, s6, s16
90013c3a:	ee71 7a42 	vsub.f32	s15, s2, s4
90013c3e:	ee73 6ae4 	vsub.f32	s13, s7, s9
90013c42:	ee26 7a44 	vnmul.f32	s14, s12, s8
90013c46:	eea7 7aa6 	vfma.f32	s14, s15, s13
90013c4a:	eeb5 7a40 	vcmp.f32	s14, #0.0
90013c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c52:	d027      	beq.n	90013ca4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013c54:	ee28 8a63 	vnmul.f32	s16, s16, s7
90013c58:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90013c5c:	eea4 8a83 	vfma.f32	s16, s9, s6
90013c60:	eee1 8a22 	vfma.f32	s17, s2, s5
90013c64:	ee68 7a67 	vnmul.f32	s15, s16, s15
90013c68:	ee28 8a44 	vnmul.f32	s16, s16, s8
90013c6c:	eee6 7a28 	vfma.f32	s15, s12, s17
90013c70:	eea6 8aa8 	vfma.f32	s16, s13, s17
90013c74:	ee87 0a87 	vdiv.f32	s0, s15, s14
90013c78:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90013c7c:	eec8 0a07 	vdiv.f32	s1, s16, s14
90013c80:	ee3c ca40 	vsub.f32	s24, s24, s0
90013c84:	ee39 9a60 	vsub.f32	s18, s18, s1
90013c88:	ee29 9a09 	vmul.f32	s18, s18, s18
90013c8c:	eeac 9a0c 	vfma.f32	s18, s24, s24
90013c90:	eef4 7ac9 	vcmpe.f32	s15, s18
90013c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c98:	db04      	blt.n	90013ca4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90013c9a:	f7ff feb2 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013c9e:	ecbd 8b0a 	vpop	{d8-d12}
90013ca2:	bd10      	pop	{r4, pc}
90013ca4:	eef0 0a6b 	vmov.f32	s1, s23
90013ca8:	4620      	mov	r0, r4
90013caa:	eeb0 0a4b 	vmov.f32	s0, s22
90013cae:	f7ff fea8 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013cb2:	e7b6      	b.n	90013c22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90013cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90013cb4:	b510      	push	{r4, lr}
90013cb6:	ed2d 8b0c 	vpush	{d8-d13}
90013cba:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90013cbe:	4604      	mov	r4, r0
90013cc0:	eeb0 9a40 	vmov.f32	s18, s0
90013cc4:	eef0 9a60 	vmov.f32	s19, s1
90013cc8:	eef0 aa41 	vmov.f32	s21, s2
90013ccc:	eeb0 ba61 	vmov.f32	s22, s3
90013cd0:	b933      	cbnz	r3, 90013ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90013cd2:	f7ff fe96 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013cd6:	eef0 0a4b 	vmov.f32	s1, s22
90013cda:	eeb0 0a6a 	vmov.f32	s0, s21
90013cde:	e015      	b.n	90013d0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90013ce0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90013ce4:	2b02      	cmp	r3, #2
90013ce6:	ee71 8a40 	vsub.f32	s17, s2, s0
90013cea:	ee31 8ae0 	vsub.f32	s16, s3, s1
90013cee:	ee68 8aa7 	vmul.f32	s17, s17, s15
90013cf2:	ee28 8a27 	vmul.f32	s16, s16, s15
90013cf6:	d10f      	bne.n	90013d18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90013cf8:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013cfc:	ee30 0a08 	vadd.f32	s0, s0, s16
90013d00:	f7ff fe7f 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d04:	ee7b 0a68 	vsub.f32	s1, s22, s17
90013d08:	ee3a 0a88 	vadd.f32	s0, s21, s16
90013d0c:	4620      	mov	r0, r4
90013d0e:	f7ff fe78 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d12:	ecbd 8b0c 	vpop	{d8-d13}
90013d16:	bd10      	pop	{r4, pc}
90013d18:	f7ff fe73 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d1c:	eef0 0a69 	vmov.f32	s1, s19
90013d20:	eeb0 0a49 	vmov.f32	s0, s18
90013d24:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90013e54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90013d28:	eeb1 aa68 	vneg.f32	s20, s17
90013d2c:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90013e58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90013d30:	eee8 0a27 	vfma.f32	s1, s16, s15
90013d34:	4620      	mov	r0, r4
90013d36:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013d3a:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90013e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90013d3e:	eddf ca48 	vldr	s25, [pc, #288]	@ 90013e60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90013d42:	ed9f da48 	vldr	s26, [pc, #288]	@ 90013e64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90013d46:	eeea 0a2b 	vfma.f32	s1, s20, s23
90013d4a:	eea8 0a2b 	vfma.f32	s0, s16, s23
90013d4e:	f7ff fe58 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d52:	eef0 0a69 	vmov.f32	s1, s19
90013d56:	eeb0 0a49 	vmov.f32	s0, s18
90013d5a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90013e68 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90013d5e:	4620      	mov	r0, r4
90013d60:	eee8 0a27 	vfma.f32	s1, s16, s15
90013d64:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013d68:	eeea 0a0c 	vfma.f32	s1, s20, s24
90013d6c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90013d70:	f7ff fe47 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d74:	eef0 0a69 	vmov.f32	s1, s19
90013d78:	eeb0 0a49 	vmov.f32	s0, s18
90013d7c:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90013e6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90013d80:	4620      	mov	r0, r4
90013d82:	eee8 0a27 	vfma.f32	s1, s16, s15
90013d86:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013d8a:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013d8e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013d92:	f7ff fe36 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013d96:	eef0 0a69 	vmov.f32	s1, s19
90013d9a:	eeb0 0a49 	vmov.f32	s0, s18
90013d9e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90013e70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90013da2:	4620      	mov	r0, r4
90013da4:	eee8 0a27 	vfma.f32	s1, s16, s15
90013da8:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013dac:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013db0:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013db4:	f7ff fe25 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013db8:	ee79 0a88 	vadd.f32	s1, s19, s16
90013dbc:	ee39 0a28 	vadd.f32	s0, s18, s17
90013dc0:	4620      	mov	r0, r4
90013dc2:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013dc6:	ee30 0a08 	vadd.f32	s0, s0, s16
90013dca:	f7ff fe1a 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013dce:	eef0 0a69 	vmov.f32	s1, s19
90013dd2:	eeb0 0a49 	vmov.f32	s0, s18
90013dd6:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90013e74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90013dda:	4620      	mov	r0, r4
90013ddc:	eee8 0a27 	vfma.f32	s1, s16, s15
90013de0:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013de4:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013de8:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013dec:	f7ff fe09 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013df0:	eef0 0a69 	vmov.f32	s1, s19
90013df4:	eeb0 0a49 	vmov.f32	s0, s18
90013df8:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90013e78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90013dfc:	4620      	mov	r0, r4
90013dfe:	eee8 0a27 	vfma.f32	s1, s16, s15
90013e02:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013e06:	eeea 0a2c 	vfma.f32	s1, s20, s25
90013e0a:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013e0e:	f7ff fdf8 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e12:	eef0 0a69 	vmov.f32	s1, s19
90013e16:	eeb0 0a49 	vmov.f32	s0, s18
90013e1a:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90013e7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90013e1e:	4620      	mov	r0, r4
90013e20:	eee8 0a27 	vfma.f32	s1, s16, s15
90013e24:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013e28:	eeea 0a0c 	vfma.f32	s1, s20, s24
90013e2c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90013e30:	f7ff fde7 	bl	90013a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013e34:	eef0 0a69 	vmov.f32	s1, s19
90013e38:	eeb0 0a49 	vmov.f32	s0, s18
90013e3c:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90013e80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90013e40:	4620      	mov	r0, r4
90013e42:	eee8 0a27 	vfma.f32	s1, s16, s15
90013e46:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013e4a:	eeea 0a2b 	vfma.f32	s1, s20, s23
90013e4e:	eea8 0a2b 	vfma.f32	s0, s16, s23
90013e52:	e73e      	b.n	90013cd2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90013e54:	3d23d70a 	.word	0x3d23d70a
90013e58:	3e8f5c29 	.word	0x3e8f5c29
90013e5c:	3f19999a 	.word	0x3f19999a
90013e60:	3f4ccccd 	.word	0x3f4ccccd
90013e64:	3f75c28f 	.word	0x3f75c28f
90013e68:	3e4ccccd 	.word	0x3e4ccccd
90013e6c:	3ecccccd 	.word	0x3ecccccd
90013e70:	3f3851ec 	.word	0x3f3851ec
90013e74:	3fa3d70a 	.word	0x3fa3d70a
90013e78:	3fcccccd 	.word	0x3fcccccd
90013e7c:	3fe66666 	.word	0x3fe66666
90013e80:	3ffae148 	.word	0x3ffae148

90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90013e84:	b570      	push	{r4, r5, r6, lr}
90013e86:	ed2d 8b06 	vpush	{d8-d10}
90013e8a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90013e8e:	eef0 aa40 	vmov.f32	s21, s0
90013e92:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90013e96:	4604      	mov	r4, r0
90013e98:	ee30 8ac8 	vsub.f32	s16, s1, s16
90013e9c:	ee30 9a49 	vsub.f32	s18, s0, s18
90013ea0:	eeb0 aa60 	vmov.f32	s20, s1
90013ea4:	ee28 0a08 	vmul.f32	s0, s16, s16
90013ea8:	eea9 0a09 	vfma.f32	s0, s18, s18
90013eac:	f017 f82a 	bl	9002af04 <sqrtf>
90013eb0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90013eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013eb8:	dd36      	ble.n	90013f28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90013eba:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90013ebe:	2600      	movs	r6, #0
90013ec0:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90013ec4:	eec0 6a27 	vdiv.f32	s13, s0, s15
90013ec8:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90013ecc:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90013ed0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90013ed4:	eec8 8a26 	vdiv.f32	s17, s16, s13
90013ed8:	ee89 8a26 	vdiv.f32	s16, s18, s13
90013edc:	ee70 9a28 	vadd.f32	s19, s0, s17
90013ee0:	ee78 8aaa 	vadd.f32	s17, s17, s21
90013ee4:	ee30 9ac8 	vsub.f32	s18, s1, s16
90013ee8:	ee3a 8a48 	vsub.f32	s16, s20, s16
90013eec:	b1fd      	cbz	r5, 90013f2e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90013eee:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90013ef2:	eef0 0a49 	vmov.f32	s1, s18
90013ef6:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90013efa:	eeb0 0a69 	vmov.f32	s0, s19
90013efe:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90013f02:	4620      	mov	r0, r4
90013f04:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90013f08:	f7ff fd64 	bl	900139d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90013f0c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90013f10:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90013f14:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90013f18:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90013f1c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90013f20:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90013f24:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90013f28:	ecbd 8b06 	vpop	{d8-d10}
90013f2c:	bd70      	pop	{r4, r5, r6, pc}
90013f2e:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90013f32:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90013f36:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90013f3a:	b16b      	cbz	r3, 90013f58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90013f3c:	eef0 1a49 	vmov.f32	s3, s18
90013f40:	4620      	mov	r0, r4
90013f42:	eeb0 1a69 	vmov.f32	s2, s19
90013f46:	eef0 0a62 	vmov.f32	s1, s5
90013f4a:	eeb0 0a42 	vmov.f32	s0, s4
90013f4e:	f7ff feb1 	bl	90013cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013f52:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90013f56:	e7db      	b.n	90013f10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90013f58:	eef0 4a48 	vmov.f32	s9, s16
90013f5c:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90013f60:	eeb0 4a68 	vmov.f32	s8, s17
90013f64:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90013f68:	eef0 3a49 	vmov.f32	s7, s18
90013f6c:	4620      	mov	r0, r4
90013f6e:	eeb0 3a69 	vmov.f32	s6, s19
90013f72:	f7ff fe13 	bl	90013b9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90013f76:	e7cb      	b.n	90013f10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90013f78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90013f78:	ee07 2a90 	vmov	s15, r2
90013f7c:	ee07 1a10 	vmov	s14, r1
90013f80:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90013f84:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90013f98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90013f88:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90013f8c:	ee60 0aa7 	vmul.f32	s1, s1, s15
90013f90:	ee20 0a27 	vmul.f32	s0, s0, s15
90013f94:	f7ff bf76 	b.w	90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013f98:	3d000000 	.word	0x3d000000

90013f9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90013f9c:	b538      	push	{r3, r4, r5, lr}
90013f9e:	ed2d 8b02 	vpush	{d8}
90013fa2:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90013fa6:	4604      	mov	r4, r0
90013fa8:	b31d      	cbz	r5, 90013ff2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90013faa:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90013fae:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90013fb2:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90013fb6:	ee78 8a67 	vsub.f32	s17, s16, s15
90013fba:	ee38 8a27 	vadd.f32	s16, s16, s15
90013fbe:	eef0 0a68 	vmov.f32	s1, s17
90013fc2:	f7ff fd07 	bl	900139d4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90013fc6:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013fca:	eef0 1a48 	vmov.f32	s3, s16
90013fce:	4620      	mov	r0, r4
90013fd0:	eeb0 0a41 	vmov.f32	s0, s2
90013fd4:	eef0 0a68 	vmov.f32	s1, s17
90013fd8:	f7ff fe6c 	bl	90013cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013fdc:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013fe0:	eef0 1a68 	vmov.f32	s3, s17
90013fe4:	4620      	mov	r0, r4
90013fe6:	eef0 0a48 	vmov.f32	s1, s16
90013fea:	eeb0 0a41 	vmov.f32	s0, s2
90013fee:	f7ff fe61 	bl	90013cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013ff2:	4628      	mov	r0, r5
90013ff4:	ecbd 8b02 	vpop	{d8}
90013ff8:	bd38      	pop	{r3, r4, r5, pc}

90013ffa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90013ffa:	b510      	push	{r4, lr}
90013ffc:	ed2d 8b02 	vpush	{d8}
90014000:	4604      	mov	r4, r0
90014002:	eeb0 8a40 	vmov.f32	s16, s0
90014006:	eef0 8a60 	vmov.f32	s17, s1
9001400a:	f7ff ffc7 	bl	90013f9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001400e:	b9d0      	cbnz	r0, 90014046 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90014010:	4620      	mov	r0, r4
90014012:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90014016:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
9001401a:	eef0 0a68 	vmov.f32	s1, s17
9001401e:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90014022:	eeb0 0a48 	vmov.f32	s0, s16
90014026:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
9001402a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
9001402e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90014032:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90014036:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
9001403a:	f7ff fdaf 	bl	90013b9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
9001403e:	2001      	movs	r0, #1
90014040:	ecbd 8b02 	vpop	{d8}
90014044:	bd10      	pop	{r4, pc}
90014046:	2000      	movs	r0, #0
90014048:	e7fa      	b.n	90014040 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

9001404a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
9001404a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
9001404e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90014052:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90014056:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
9001405a:	f7ff be2b 	b.w	90013cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90014060 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90014060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014064:	b089      	sub	sp, #36	@ 0x24
90014066:	461c      	mov	r4, r3
90014068:	4682      	mov	sl, r0
9001406a:	4615      	mov	r5, r2
9001406c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90014070:	f10d 0820 	add.w	r8, sp, #32
90014074:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90014076:	9304      	str	r3, [sp, #16]
90014078:	2300      	movs	r3, #0
9001407a:	9105      	str	r1, [sp, #20]
9001407c:	9306      	str	r3, [sp, #24]
9001407e:	f848 3d04 	str.w	r3, [r8, #-4]!
90014082:	9b04      	ldr	r3, [sp, #16]
90014084:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90014088:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
9001408c:	9b05      	ldr	r3, [sp, #20]
9001408e:	429d      	cmp	r5, r3
90014090:	d96d      	bls.n	9001416e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90014092:	3d01      	subs	r5, #1
90014094:	f819 3005 	ldrb.w	r3, [r9, r5]
90014098:	2b06      	cmp	r3, #6
9001409a:	d8f7      	bhi.n	9001408c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001409c:	a201      	add	r2, pc, #4	@ (adr r2, 900140a4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001409e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900140a2:	bf00      	nop
900140a4:	900140c3 	.word	0x900140c3
900140a8:	9001408d 	.word	0x9001408d
900140ac:	900140c1 	.word	0x900140c1
900140b0:	900140e5 	.word	0x900140e5
900140b4:	900140e5 	.word	0x900140e5
900140b8:	900140e9 	.word	0x900140e9
900140bc:	90014129 	.word	0x90014129
900140c0:	3c02      	subs	r4, #2
900140c2:	4650      	mov	r0, sl
900140c4:	9400      	str	r4, [sp, #0]
900140c6:	462b      	mov	r3, r5
900140c8:	4642      	mov	r2, r8
900140ca:	a906      	add	r1, sp, #24
900140cc:	e9cd 9701 	strd	r9, r7, [sp, #4]
900140d0:	f7ff fcae 	bl	90013a30 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900140d4:	eddd 0a07 	vldr	s1, [sp, #28]
900140d8:	ed9d 0a06 	vldr	s0, [sp, #24]
900140dc:	4630      	mov	r0, r6
900140de:	f7ff fed1 	bl	90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900140e2:	e7d3      	b.n	9001408c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900140e4:	3c01      	subs	r4, #1
900140e6:	e7ec      	b.n	900140c2 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
900140e8:	f1a4 0b04 	sub.w	fp, r4, #4
900140ec:	3c02      	subs	r4, #2
900140ee:	4650      	mov	r0, sl
900140f0:	462b      	mov	r3, r5
900140f2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900140f6:	f8cd b000 	str.w	fp, [sp]
900140fa:	4642      	mov	r2, r8
900140fc:	a906      	add	r1, sp, #24
900140fe:	e9cd 9701 	strd	r9, r7, [sp, #4]
90014102:	f7ff fc95 	bl	90013a30 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90014106:	eddd 2a07 	vldr	s5, [sp, #28]
9001410a:	ed9d 2a06 	vldr	s4, [sp, #24]
9001410e:	4630      	mov	r0, r6
90014110:	ed54 1a01 	vldr	s3, [r4, #-4]
90014114:	ed14 1a02 	vldr	s2, [r4, #-8]
90014118:	edd4 0a01 	vldr	s1, [r4, #4]
9001411c:	ed94 0a00 	vldr	s0, [r4]
90014120:	f7ff fc1a 	bl	90013958 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90014124:	465c      	mov	r4, fp
90014126:	e7b1      	b.n	9001408c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90014128:	f1a4 0b06 	sub.w	fp, r4, #6
9001412c:	3c02      	subs	r4, #2
9001412e:	4650      	mov	r0, sl
90014130:	462b      	mov	r3, r5
90014132:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90014136:	f8cd b000 	str.w	fp, [sp]
9001413a:	4642      	mov	r2, r8
9001413c:	a906      	add	r1, sp, #24
9001413e:	e9cd 9701 	strd	r9, r7, [sp, #4]
90014142:	f7ff fc75 	bl	90013a30 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90014146:	eddd 3a07 	vldr	s7, [sp, #28]
9001414a:	ed9d 3a06 	vldr	s6, [sp, #24]
9001414e:	4630      	mov	r0, r6
90014150:	ed54 2a03 	vldr	s5, [r4, #-12]
90014154:	ed14 2a04 	vldr	s4, [r4, #-16]
90014158:	ed54 1a01 	vldr	s3, [r4, #-4]
9001415c:	ed14 1a02 	vldr	s2, [r4, #-8]
90014160:	edd4 0a01 	vldr	s1, [r4, #4]
90014164:	ed94 0a00 	vldr	s0, [r4]
90014168:	f7ff fc15 	bl	90013996 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001416c:	e7da      	b.n	90014124 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001416e:	9b04      	ldr	r3, [sp, #16]
90014170:	b113      	cbz	r3, 90014178 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90014172:	4630      	mov	r0, r6
90014174:	f7ff ff69 	bl	9001404a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90014178:	b009      	add	sp, #36	@ 0x24
9001417a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001417e:	bf00      	nop

90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90014180:	eef0 7a60 	vmov.f32	s15, s1
90014184:	6803      	ldr	r3, [r0, #0]
90014186:	689b      	ldr	r3, [r3, #8]
90014188:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001418c:	ee17 2a90 	vmov	r2, s15
90014190:	eef0 7a40 	vmov.f32	s15, s0
90014194:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014198:	ee17 1a90 	vmov	r1, s15
9001419c:	4718      	bx	r3
	...

900141a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
900141a0:	4b04      	ldr	r3, [pc, #16]	@ (900141b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
900141a2:	b510      	push	{r4, lr}
900141a4:	4604      	mov	r4, r0
900141a6:	f840 3b14 	str.w	r3, [r0], #20
900141aa:	f001 fc53 	bl	90015a54 <_ZN8touchgfx7OutlineD1Ev>
900141ae:	4620      	mov	r0, r4
900141b0:	bd10      	pop	{r4, pc}
900141b2:	bf00      	nop
900141b4:	9002fca0 	.word	0x9002fca0

900141b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
900141b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900141bc:	ed2d 8b04 	vpush	{d8-d9}
900141c0:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
900141c4:	b0b5      	sub	sp, #212	@ 0xd4
900141c6:	4605      	mov	r5, r0
900141c8:	468b      	mov	fp, r1
900141ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900141ce:	9206      	str	r2, [sp, #24]
900141d0:	461e      	mov	r6, r3
900141d2:	2400      	movs	r4, #0
900141d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900141d8:	f240 814f 	bls.w	9001447a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
900141dc:	23ff      	movs	r3, #255	@ 0xff
900141de:	1d02      	adds	r2, r0, #4
900141e0:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90014480 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
900141e4:	f04f 0800 	mov.w	r8, #0
900141e8:	9300      	str	r3, [sp, #0]
900141ea:	af08      	add	r7, sp, #32
900141ec:	6981      	ldr	r1, [r0, #24]
900141ee:	a808      	add	r0, sp, #32
900141f0:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
900141f2:	eef0 9a49 	vmov.f32	s19, s18
900141f6:	f016 f9db 	bl	9002a5b0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
900141fa:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
900141fe:	4ba1      	ldr	r3, [pc, #644]	@ (90014484 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90014200:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90014204:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90014208:	2201      	movs	r2, #1
9001420a:	9308      	str	r3, [sp, #32]
9001420c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90014210:	edd5 6a08 	vldr	s13, [r5, #32]
90014214:	eeb0 8a49 	vmov.f32	s16, s18
90014218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001421c:	9325      	str	r3, [sp, #148]	@ 0x94
9001421e:	f04f 0300 	mov.w	r3, #0
90014222:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90014226:	7f6a      	ldrb	r2, [r5, #29]
90014228:	eef0 8a49 	vmov.f32	s17, s18
9001422c:	bf48      	it	mi
9001422e:	eef1 7a67 	vnegmi.f32	s15, s15
90014232:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90014236:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
9001423a:	46c1      	mov	r9, r8
9001423c:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90014240:	f04f 0a01 	mov.w	sl, #1
90014244:	ee67 7a87 	vmul.f32	s15, s15, s14
90014248:	7fab      	ldrb	r3, [r5, #30]
9001424a:	942a      	str	r4, [sp, #168]	@ 0xa8
9001424c:	435a      	muls	r2, r3
9001424e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
90014252:	ee26 7aa7 	vmul.f32	s14, s13, s15
90014256:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
9001425a:	1c53      	adds	r3, r2, #1
9001425c:	942b      	str	r4, [sp, #172]	@ 0xac
9001425e:	942c      	str	r4, [sp, #176]	@ 0xb0
90014260:	ee27 7a26 	vmul.f32	s14, s14, s13
90014264:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90014268:	942d      	str	r4, [sp, #180]	@ 0xb4
9001426a:	942e      	str	r4, [sp, #184]	@ 0xb8
9001426c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90014270:	ee67 7a27 	vmul.f32	s15, s14, s15
90014274:	942f      	str	r4, [sp, #188]	@ 0xbc
90014276:	9430      	str	r4, [sp, #192]	@ 0xc0
90014278:	9431      	str	r4, [sp, #196]	@ 0xc4
9001427a:	9432      	str	r4, [sp, #200]	@ 0xc8
9001427c:	9433      	str	r4, [sp, #204]	@ 0xcc
9001427e:	4644      	mov	r4, r8
90014280:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90014284:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90014288:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
9001428c:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90014290:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90014294:	9b06      	ldr	r3, [sp, #24]
90014296:	454b      	cmp	r3, r9
90014298:	f000 80cc 	beq.w	90014434 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
9001429c:	f109 0301 	add.w	r3, r9, #1
900142a0:	9305      	str	r3, [sp, #20]
900142a2:	f81b 3009 	ldrb.w	r3, [fp, r9]
900142a6:	2b06      	cmp	r3, #6
900142a8:	d839      	bhi.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900142aa:	e8df f003 	tbb	[pc, r3]
900142ae:	3b04      	.short	0x3b04
900142b0:	817c6f60 	.word	0x817c6f60
900142b4:	a0          	.byte	0xa0
900142b5:	00          	.byte	0x00
900142b6:	45c1      	cmp	r9, r8
900142b8:	d92b      	bls.n	90014312 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
900142ba:	eef0 0a49 	vmov.f32	s1, s18
900142be:	4638      	mov	r0, r7
900142c0:	eeb0 0a69 	vmov.f32	s0, s19
900142c4:	f7ff fdde 	bl	90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900142c8:	4638      	mov	r0, r7
900142ca:	f7ff fe67 	bl	90013f9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900142ce:	4681      	mov	r9, r0
900142d0:	b9f8      	cbnz	r0, 90014312 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
900142d2:	eef0 0a49 	vmov.f32	s1, s18
900142d6:	4638      	mov	r0, r7
900142d8:	eeb0 0a69 	vmov.f32	s0, s19
900142dc:	f7ff fe8d 	bl	90013ffa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900142e0:	4628      	mov	r0, r5
900142e2:	4623      	mov	r3, r4
900142e4:	9a05      	ldr	r2, [sp, #20]
900142e6:	4641      	mov	r1, r8
900142e8:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
900142ec:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
900142f0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900142f4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900142f8:	e9cd 9702 	strd	r9, r7, [sp, #8]
900142fc:	e9cd b600 	strd	fp, r6, [sp]
90014300:	f7ff feae 	bl	90014060 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014304:	eef0 0a49 	vmov.f32	s1, s18
90014308:	eeb0 0a69 	vmov.f32	s0, s19
9001430c:	4638      	mov	r0, r7
9001430e:	f7ff fe74 	bl	90013ffa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90014312:	eeb0 8a49 	vmov.f32	s16, s18
90014316:	f8dd 8014 	ldr.w	r8, [sp, #20]
9001431a:	eef0 8a69 	vmov.f32	s17, s19
9001431e:	f8dd 9014 	ldr.w	r9, [sp, #20]
90014322:	e7b7      	b.n	90014294 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90014324:	45c1      	cmp	r9, r8
90014326:	d90d      	bls.n	90014344 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90014328:	4638      	mov	r0, r7
9001432a:	f7ff fe37 	bl	90013f9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001432e:	b948      	cbnz	r0, 90014344 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90014330:	4623      	mov	r3, r4
90014332:	464a      	mov	r2, r9
90014334:	4641      	mov	r1, r8
90014336:	4628      	mov	r0, r5
90014338:	e9cd a702 	strd	sl, r7, [sp, #8]
9001433c:	e9cd b600 	strd	fp, r6, [sp]
90014340:	f7ff fe8e 	bl	90014060 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014344:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014348:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
9001434c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90014350:	3402      	adds	r4, #2
90014352:	edd3 8a00 	vldr	s17, [r3]
90014356:	46c8      	mov	r8, r9
90014358:	ed93 8a01 	vldr	s16, [r3, #4]
9001435c:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90014360:	eef0 9a68 	vmov.f32	s19, s17
90014364:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90014368:	eeb0 9a48 	vmov.f32	s18, s16
9001436c:	e7d7      	b.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001436e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014372:	4638      	mov	r0, r7
90014374:	3402      	adds	r4, #2
90014376:	edd3 8a00 	vldr	s17, [r3]
9001437a:	ed93 8a01 	vldr	s16, [r3, #4]
9001437e:	eeb0 0a68 	vmov.f32	s0, s17
90014382:	eef0 0a48 	vmov.f32	s1, s16
90014386:	f7ff fd7d 	bl	90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001438a:	e7c8      	b.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001438c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014390:	edd3 8a00 	vldr	s17, [r3]
90014394:	eef0 0a48 	vmov.f32	s1, s16
90014398:	4638      	mov	r0, r7
9001439a:	eeb0 0a68 	vmov.f32	s0, s17
9001439e:	3401      	adds	r4, #1
900143a0:	f7ff fd70 	bl	90013e84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900143a4:	e7bb      	b.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900143a6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900143aa:	ed93 8a00 	vldr	s16, [r3]
900143ae:	e7f1      	b.n	90014394 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
900143b0:	00a3      	lsls	r3, r4, #2
900143b2:	eef0 0a48 	vmov.f32	s1, s16
900143b6:	eeb0 0a68 	vmov.f32	s0, s17
900143ba:	4638      	mov	r0, r7
900143bc:	f103 0208 	add.w	r2, r3, #8
900143c0:	f103 090c 	add.w	r9, r3, #12
900143c4:	4433      	add	r3, r6
900143c6:	3404      	adds	r4, #4
900143c8:	4432      	add	r2, r6
900143ca:	44b1      	add	r9, r6
900143cc:	edd3 1a01 	vldr	s3, [r3, #4]
900143d0:	ed92 2a00 	vldr	s4, [r2]
900143d4:	edd9 2a00 	vldr	s5, [r9]
900143d8:	ed93 1a00 	vldr	s2, [r3]
900143dc:	9207      	str	r2, [sp, #28]
900143de:	f7ff fabb 	bl	90013958 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900143e2:	9a07      	ldr	r2, [sp, #28]
900143e4:	ed99 8a00 	vldr	s16, [r9]
900143e8:	edd2 8a00 	vldr	s17, [r2]
900143ec:	e797      	b.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900143ee:	00a3      	lsls	r3, r4, #2
900143f0:	eef0 0a48 	vmov.f32	s1, s16
900143f4:	eeb0 0a68 	vmov.f32	s0, s17
900143f8:	4638      	mov	r0, r7
900143fa:	f103 0210 	add.w	r2, r3, #16
900143fe:	f103 0914 	add.w	r9, r3, #20
90014402:	4433      	add	r3, r6
90014404:	3406      	adds	r4, #6
90014406:	4432      	add	r2, r6
90014408:	44b1      	add	r9, r6
9001440a:	edd3 2a03 	vldr	s5, [r3, #12]
9001440e:	ed92 3a00 	vldr	s6, [r2]
90014412:	edd9 3a00 	vldr	s7, [r9]
90014416:	ed93 2a02 	vldr	s4, [r3, #8]
9001441a:	edd3 1a01 	vldr	s3, [r3, #4]
9001441e:	ed93 1a00 	vldr	s2, [r3]
90014422:	9207      	str	r2, [sp, #28]
90014424:	f7ff fab7 	bl	90013996 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90014428:	9a07      	ldr	r2, [sp, #28]
9001442a:	ed99 8a00 	vldr	s16, [r9]
9001442e:	edd2 8a00 	vldr	s17, [r2]
90014432:	e774      	b.n	9001431e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014434:	9b06      	ldr	r3, [sp, #24]
90014436:	af08      	add	r7, sp, #32
90014438:	4543      	cmp	r3, r8
9001443a:	d90f      	bls.n	9001445c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
9001443c:	4638      	mov	r0, r7
9001443e:	f7ff fdad 	bl	90013f9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014442:	b958      	cbnz	r0, 9001445c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90014444:	2301      	movs	r3, #1
90014446:	9703      	str	r7, [sp, #12]
90014448:	f8cd b000 	str.w	fp, [sp]
9001444c:	4641      	mov	r1, r8
9001444e:	9a06      	ldr	r2, [sp, #24]
90014450:	4628      	mov	r0, r5
90014452:	e9cd 6301 	strd	r6, r3, [sp, #4]
90014456:	4623      	mov	r3, r4
90014458:	f7ff fe02 	bl	90014060 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
9001445c:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90014460:	4638      	mov	r0, r7
90014462:	f016 f939 	bl	9002a6d8 <_ZN8touchgfx6Canvas6renderEh>
90014466:	4604      	mov	r4, r0
90014468:	4638      	mov	r0, r7
9001446a:	f7ff fe99 	bl	900141a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001446e:	4620      	mov	r0, r4
90014470:	b035      	add	sp, #212	@ 0xd4
90014472:	ecbd 8b04 	vpop	{d8-d9}
90014476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001447a:	2401      	movs	r4, #1
9001447c:	e7f7      	b.n	9001446e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001447e:	bf00      	nop
90014480:	00000000 	.word	0x00000000
90014484:	9002f538 	.word	0x9002f538

90014488 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90014488:	b510      	push	{r4, lr}
9001448a:	4604      	mov	r4, r0
9001448c:	f7ff fe88 	bl	900141a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90014490:	21b0      	movs	r1, #176	@ 0xb0
90014492:	4620      	mov	r0, r4
90014494:	f016 fd0c 	bl	9002aeb0 <_ZdlPvj>
90014498:	4620      	mov	r0, r4
9001449a:	bd10      	pop	{r4, pc}

9001449c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
9001449c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900144a0:	4698      	mov	r8, r3
900144a2:	23ff      	movs	r3, #255	@ 0xff
900144a4:	4607      	mov	r7, r0
900144a6:	4689      	mov	r9, r1
900144a8:	4692      	mov	sl, r2
900144aa:	1d02      	adds	r2, r0, #4
900144ac:	f107 0534 	add.w	r5, r7, #52	@ 0x34
900144b0:	2400      	movs	r4, #0
900144b2:	44ca      	add	sl, r9
900144b4:	ed2d 8b06 	vpush	{d8-d10}
900144b8:	b0aa      	sub	sp, #168	@ 0xa8
900144ba:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 900146c0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
900144be:	9300      	str	r3, [sp, #0]
900144c0:	eef0 8a48 	vmov.f32	s17, s16
900144c4:	6981      	ldr	r1, [r0, #24]
900144c6:	a80d      	add	r0, sp, #52	@ 0x34
900144c8:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
900144ca:	f016 f871 	bl	9002a5b0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
900144ce:	7f3b      	ldrb	r3, [r7, #28]
900144d0:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 900146c0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
900144d4:	4628      	mov	r0, r5
900144d6:	1e5a      	subs	r2, r3, #1
900144d8:	eeb0 0a60 	vmov.f32	s0, s1
900144dc:	4253      	negs	r3, r2
900144de:	4153      	adcs	r3, r2
900144e0:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
900144e4:	f005 fc5d 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900144e8:	eeb0 9a40 	vmov.f32	s18, s0
900144ec:	eef0 9a60 	vmov.f32	s19, s1
900144f0:	45ca      	cmp	sl, r9
900144f2:	f000 80cd 	beq.w	90014690 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
900144f6:	f819 3b01 	ldrb.w	r3, [r9], #1
900144fa:	2b06      	cmp	r3, #6
900144fc:	d8f8      	bhi.n	900144f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900144fe:	e8df f003 	tbb	[pc, r3]
90014502:	0804      	.short	0x0804
90014504:	58533f2a 	.word	0x58533f2a
90014508:	8a          	.byte	0x8a
90014509:	00          	.byte	0x00
9001450a:	a80d      	add	r0, sp, #52	@ 0x34
9001450c:	f016 f8c2 	bl	9002a694 <_ZN8touchgfx6Canvas5closeEv>
90014510:	e7ee      	b.n	900144f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014512:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014516:	4628      	mov	r0, r5
90014518:	ed93 8a01 	vldr	s16, [r3, #4]
9001451c:	edd3 8a00 	vldr	s17, [r3]
90014520:	eef0 0a48 	vmov.f32	s1, s16
90014524:	eeb0 0a68 	vmov.f32	s0, s17
90014528:	f005 fc3b 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001452c:	a80d      	add	r0, sp, #52	@ 0x34
9001452e:	eef0 7a60 	vmov.f32	s15, s1
90014532:	eeb0 9a40 	vmov.f32	s18, s0
90014536:	eef0 9a60 	vmov.f32	s19, s1
9001453a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001453e:	ee17 2a90 	vmov	r2, s15
90014542:	eef0 7a40 	vmov.f32	s15, s0
90014546:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001454a:	ee17 1a90 	vmov	r1, s15
9001454e:	f016 f97b 	bl	9002a848 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90014552:	3402      	adds	r4, #2
90014554:	e7cc      	b.n	900144f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014556:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001455a:	4628      	mov	r0, r5
9001455c:	edd3 8a00 	vldr	s17, [r3]
90014560:	ed93 8a01 	vldr	s16, [r3, #4]
90014564:	eeb0 0a68 	vmov.f32	s0, s17
90014568:	eef0 0a48 	vmov.f32	s1, s16
9001456c:	f005 fc19 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014570:	a80d      	add	r0, sp, #52	@ 0x34
90014572:	eeb0 9a40 	vmov.f32	s18, s0
90014576:	eef0 9a60 	vmov.f32	s19, s1
9001457a:	f7ff fe01 	bl	90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001457e:	e7e8      	b.n	90014552 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90014580:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014584:	edd3 8a00 	vldr	s17, [r3]
90014588:	eef0 0a48 	vmov.f32	s1, s16
9001458c:	4628      	mov	r0, r5
9001458e:	eeb0 0a68 	vmov.f32	s0, s17
90014592:	3401      	adds	r4, #1
90014594:	f005 fc05 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014598:	a80d      	add	r0, sp, #52	@ 0x34
9001459a:	eef0 9a60 	vmov.f32	s19, s1
9001459e:	eeb0 9a40 	vmov.f32	s18, s0
900145a2:	f7ff fded 	bl	90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900145a6:	e7a3      	b.n	900144f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900145a8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900145ac:	ed93 8a00 	vldr	s16, [r3]
900145b0:	e7ea      	b.n	90014588 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
900145b2:	1ca3      	adds	r3, r4, #2
900145b4:	4628      	mov	r0, r5
900145b6:	3404      	adds	r4, #4
900145b8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
900145bc:	ed53 0a01 	vldr	s1, [r3, #-4]
900145c0:	ed13 0a02 	vldr	s0, [r3, #-8]
900145c4:	edd3 8a00 	vldr	s17, [r3]
900145c8:	ed93 8a01 	vldr	s16, [r3, #4]
900145cc:	f005 fbe9 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900145d0:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900145d4:	eeb0 0a68 	vmov.f32	s0, s17
900145d8:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900145dc:	eef0 0a48 	vmov.f32	s1, s16
900145e0:	4628      	mov	r0, r5
900145e2:	f005 fbde 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900145e6:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
900145ea:	eef0 2a60 	vmov.f32	s5, s1
900145ee:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
900145f2:	eeb0 2a40 	vmov.f32	s4, s0
900145f6:	a80d      	add	r0, sp, #52	@ 0x34
900145f8:	eeb0 aa40 	vmov.f32	s20, s0
900145fc:	eef0 aa60 	vmov.f32	s21, s1
90014600:	eeb0 0a49 	vmov.f32	s0, s18
90014604:	eef0 0a69 	vmov.f32	s1, s19
90014608:	f7ff f9a6 	bl	90013958 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001460c:	eef0 9a6a 	vmov.f32	s19, s21
90014610:	eeb0 9a4a 	vmov.f32	s18, s20
90014614:	e76c      	b.n	900144f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014616:	1d26      	adds	r6, r4, #4
90014618:	4628      	mov	r0, r5
9001461a:	3406      	adds	r4, #6
9001461c:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90014620:	ed56 0a03 	vldr	s1, [r6, #-12]
90014624:	ed16 0a04 	vldr	s0, [r6, #-16]
90014628:	edd6 8a00 	vldr	s17, [r6]
9001462c:	ed96 8a01 	vldr	s16, [r6, #4]
90014630:	f005 fbb7 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014634:	ed8d 0a07 	vstr	s0, [sp, #28]
90014638:	4628      	mov	r0, r5
9001463a:	ed16 0a02 	vldr	s0, [r6, #-8]
9001463e:	edcd 0a08 	vstr	s1, [sp, #32]
90014642:	ed56 0a01 	vldr	s1, [r6, #-4]
90014646:	f005 fbac 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001464a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
9001464e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90014652:	eeb0 0a68 	vmov.f32	s0, s17
90014656:	eef0 0a48 	vmov.f32	s1, s16
9001465a:	4628      	mov	r0, r5
9001465c:	f005 fba1 	bl	90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014660:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90014664:	eeb0 3a40 	vmov.f32	s6, s0
90014668:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
9001466c:	eef0 3a60 	vmov.f32	s7, s1
90014670:	eddd 1a08 	vldr	s3, [sp, #32]
90014674:	eeb0 aa40 	vmov.f32	s20, s0
90014678:	ed9d 1a07 	vldr	s2, [sp, #28]
9001467c:	eef0 aa60 	vmov.f32	s21, s1
90014680:	a80d      	add	r0, sp, #52	@ 0x34
90014682:	eef0 0a69 	vmov.f32	s1, s19
90014686:	eeb0 0a49 	vmov.f32	s0, s18
9001468a:	f7ff f984 	bl	90013996 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001468e:	e7bd      	b.n	9001460c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90014690:	7f7b      	ldrb	r3, [r7, #29]
90014692:	a80d      	add	r0, sp, #52	@ 0x34
90014694:	7fb9      	ldrb	r1, [r7, #30]
90014696:	4359      	muls	r1, r3
90014698:	1c4b      	adds	r3, r1, #1
9001469a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001469e:	f3c1 2107 	ubfx	r1, r1, #8, #8
900146a2:	f016 f819 	bl	9002a6d8 <_ZN8touchgfx6Canvas6renderEh>
900146a6:	4b07      	ldr	r3, [pc, #28]	@ (900146c4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
900146a8:	4604      	mov	r4, r0
900146aa:	a812      	add	r0, sp, #72	@ 0x48
900146ac:	930d      	str	r3, [sp, #52]	@ 0x34
900146ae:	f001 f9d1 	bl	90015a54 <_ZN8touchgfx7OutlineD1Ev>
900146b2:	4620      	mov	r0, r4
900146b4:	b02a      	add	sp, #168	@ 0xa8
900146b6:	ecbd 8b06 	vpop	{d8-d10}
900146ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900146be:	bf00      	nop
900146c0:	00000000 	.word	0x00000000
900146c4:	9002fca0 	.word	0x9002fca0

900146c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
900146c8:	b410      	push	{r4}
900146ca:	7f04      	ldrb	r4, [r0, #28]
900146cc:	b11c      	cbz	r4, 900146d6 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
900146ce:	f85d 4b04 	ldr.w	r4, [sp], #4
900146d2:	f7ff bee3 	b.w	9001449c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
900146d6:	f85d 4b04 	ldr.w	r4, [sp], #4
900146da:	f7ff bd6d 	b.w	900141b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

900146e0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
900146e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900146e4:	4691      	mov	r9, r2
900146e6:	4602      	mov	r2, r0
900146e8:	b085      	sub	sp, #20
900146ea:	4605      	mov	r5, r0
900146ec:	f852 0f26 	ldr.w	r0, [r2, #38]!
900146f0:	4688      	mov	r8, r1
900146f2:	469a      	mov	sl, r3
900146f4:	ab02      	add	r3, sp, #8
900146f6:	6851      	ldr	r1, [r2, #4]
900146f8:	af02      	add	r7, sp, #8
900146fa:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
900146fe:	c303      	stmia	r3!, {r0, r1}
90014700:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90014704:	2b00      	cmp	r3, #0
90014706:	dd08      	ble.n	9001471a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014708:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
9001470c:	2c00      	cmp	r4, #0
9001470e:	dd04      	ble.n	9001471a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014710:	4a2e      	ldr	r2, [pc, #184]	@ (900147cc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90014712:	7812      	ldrb	r2, [r2, #0]
90014714:	b122      	cbz	r2, 90014720 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90014716:	2a01      	cmp	r2, #1
90014718:	d02d      	beq.n	90014776 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
9001471a:	b005      	add	sp, #20
9001471c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014720:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90014724:	441c      	add	r4, r3
90014726:	b2a4      	uxth	r4, r4
90014728:	b226      	sxth	r6, r4
9001472a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001472e:	42b3      	cmp	r3, r6
90014730:	daf3      	bge.n	9001471a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014732:	4653      	mov	r3, sl
90014734:	464a      	mov	r2, r9
90014736:	4641      	mov	r1, r8
90014738:	4628      	mov	r0, r5
9001473a:	e9cd b700 	strd	fp, r7, [sp]
9001473e:	f7ff ffc3 	bl	900146c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90014742:	b940      	cbnz	r0, 90014756 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90014744:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90014748:	2b01      	cmp	r3, #1
9001474a:	d004      	beq.n	90014756 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
9001474c:	3301      	adds	r3, #1
9001474e:	105b      	asrs	r3, r3, #1
90014750:	f8ad 300e 	strh.w	r3, [sp, #14]
90014754:	e7ed      	b.n	90014732 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90014756:	f8bd 200e 	ldrh.w	r2, [sp, #14]
9001475a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001475e:	4413      	add	r3, r2
90014760:	b29b      	uxth	r3, r3
90014762:	441a      	add	r2, r3
90014764:	f8ad 300a 	strh.w	r3, [sp, #10]
90014768:	b212      	sxth	r2, r2
9001476a:	4296      	cmp	r6, r2
9001476c:	dadd      	bge.n	9001472a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
9001476e:	1ae3      	subs	r3, r4, r3
90014770:	f8ad 300e 	strh.w	r3, [sp, #14]
90014774:	e7d9      	b.n	9001472a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90014776:	f8bd 4008 	ldrh.w	r4, [sp, #8]
9001477a:	441c      	add	r4, r3
9001477c:	b2a4      	uxth	r4, r4
9001477e:	b226      	sxth	r6, r4
90014780:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90014784:	42b3      	cmp	r3, r6
90014786:	dac8      	bge.n	9001471a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014788:	4653      	mov	r3, sl
9001478a:	464a      	mov	r2, r9
9001478c:	4641      	mov	r1, r8
9001478e:	4628      	mov	r0, r5
90014790:	e9cd b700 	strd	fp, r7, [sp]
90014794:	f7ff ff98 	bl	900146c8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90014798:	b940      	cbnz	r0, 900147ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
9001479a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001479e:	2b01      	cmp	r3, #1
900147a0:	d004      	beq.n	900147ac <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
900147a2:	3301      	adds	r3, #1
900147a4:	105b      	asrs	r3, r3, #1
900147a6:	f8ad 300c 	strh.w	r3, [sp, #12]
900147aa:	e7ed      	b.n	90014788 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
900147ac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900147b0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900147b4:	4413      	add	r3, r2
900147b6:	b29b      	uxth	r3, r3
900147b8:	441a      	add	r2, r3
900147ba:	f8ad 3008 	strh.w	r3, [sp, #8]
900147be:	b212      	sxth	r2, r2
900147c0:	4296      	cmp	r6, r2
900147c2:	dadd      	bge.n	90014780 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
900147c4:	1ae3      	subs	r3, r4, r3
900147c6:	f8ad 300c 	strh.w	r3, [sp, #12]
900147ca:	e7d9      	b.n	90014780 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
900147cc:	240218c4 	.word	0x240218c4

900147d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900147d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900147d2:	6803      	ldr	r3, [r0, #0]
900147d4:	460d      	mov	r5, r1
900147d6:	4604      	mov	r4, r0
900147d8:	4601      	mov	r1, r0
900147da:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900147dc:	a802      	add	r0, sp, #8
900147de:	4798      	blx	r3
900147e0:	6828      	ldr	r0, [r5, #0]
900147e2:	6869      	ldr	r1, [r5, #4]
900147e4:	466b      	mov	r3, sp
900147e6:	c303      	stmia	r3!, {r0, r1}
900147e8:	4668      	mov	r0, sp
900147ea:	4619      	mov	r1, r3
900147ec:	f7fd fb72 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900147f0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900147f2:	b188      	cbz	r0, 90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900147f4:	6803      	ldr	r3, [r0, #0]
900147f6:	1d21      	adds	r1, r4, #4
900147f8:	68db      	ldr	r3, [r3, #12]
900147fa:	4798      	blx	r3
900147fc:	b160      	cbz	r0, 90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900147fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90014802:	2b00      	cmp	r3, #0
90014804:	dd08      	ble.n	90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014806:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001480a:	2d00      	cmp	r5, #0
9001480c:	dd04      	ble.n	90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001480e:	4a2b      	ldr	r2, [pc, #172]	@ (900148bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90014810:	7812      	ldrb	r2, [r2, #0]
90014812:	b11a      	cbz	r2, 9001481c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90014814:	2a01      	cmp	r2, #1
90014816:	d029      	beq.n	9001486c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90014818:	b004      	add	sp, #16
9001481a:	bd70      	pop	{r4, r5, r6, pc}
9001481c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014820:	441d      	add	r5, r3
90014822:	b2ad      	uxth	r5, r5
90014824:	b22e      	sxth	r6, r5
90014826:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001482a:	42b3      	cmp	r3, r6
9001482c:	daf4      	bge.n	90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001482e:	6823      	ldr	r3, [r4, #0]
90014830:	4669      	mov	r1, sp
90014832:	4620      	mov	r0, r4
90014834:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014836:	4798      	blx	r3
90014838:	b940      	cbnz	r0, 9001484c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001483a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001483e:	2b01      	cmp	r3, #1
90014840:	d004      	beq.n	9001484c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90014842:	3301      	adds	r3, #1
90014844:	105b      	asrs	r3, r3, #1
90014846:	f8ad 3006 	strh.w	r3, [sp, #6]
9001484a:	e7f0      	b.n	9001482e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001484c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90014850:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014854:	4413      	add	r3, r2
90014856:	b29b      	uxth	r3, r3
90014858:	441a      	add	r2, r3
9001485a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001485e:	b212      	sxth	r2, r2
90014860:	4296      	cmp	r6, r2
90014862:	dae0      	bge.n	90014826 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90014864:	1aeb      	subs	r3, r5, r3
90014866:	f8ad 3006 	strh.w	r3, [sp, #6]
9001486a:	e7dc      	b.n	90014826 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001486c:	f8bd 5000 	ldrh.w	r5, [sp]
90014870:	441d      	add	r5, r3
90014872:	b2ad      	uxth	r5, r5
90014874:	b22e      	sxth	r6, r5
90014876:	f9bd 3000 	ldrsh.w	r3, [sp]
9001487a:	42b3      	cmp	r3, r6
9001487c:	dacc      	bge.n	90014818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001487e:	6823      	ldr	r3, [r4, #0]
90014880:	4669      	mov	r1, sp
90014882:	4620      	mov	r0, r4
90014884:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90014886:	4798      	blx	r3
90014888:	b940      	cbnz	r0, 9001489c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001488a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001488e:	2b01      	cmp	r3, #1
90014890:	d004      	beq.n	9001489c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90014892:	3301      	adds	r3, #1
90014894:	105b      	asrs	r3, r3, #1
90014896:	f8ad 3004 	strh.w	r3, [sp, #4]
9001489a:	e7f0      	b.n	9001487e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
9001489c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900148a0:	f8bd 3000 	ldrh.w	r3, [sp]
900148a4:	4413      	add	r3, r2
900148a6:	b29b      	uxth	r3, r3
900148a8:	441a      	add	r2, r3
900148aa:	f8ad 3000 	strh.w	r3, [sp]
900148ae:	b212      	sxth	r2, r2
900148b0:	4296      	cmp	r6, r2
900148b2:	dae0      	bge.n	90014876 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900148b4:	1aeb      	subs	r3, r5, r3
900148b6:	f8ad 3004 	strh.w	r3, [sp, #4]
900148ba:	e7dc      	b.n	90014876 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900148bc:	240218c4 	.word	0x240218c4

900148c0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900148c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900148c2:	6803      	ldr	r3, [r0, #0]
900148c4:	4604      	mov	r4, r0
900148c6:	4601      	mov	r1, r0
900148c8:	4668      	mov	r0, sp
900148ca:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900148cc:	4798      	blx	r3
900148ce:	2100      	movs	r1, #0
900148d0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900148d4:	4668      	mov	r0, sp
900148d6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900148da:	9102      	str	r1, [sp, #8]
900148dc:	a902      	add	r1, sp, #8
900148de:	f8ad 200c 	strh.w	r2, [sp, #12]
900148e2:	f8ad 300e 	strh.w	r3, [sp, #14]
900148e6:	f7fd faf5 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900148ea:	6823      	ldr	r3, [r4, #0]
900148ec:	4669      	mov	r1, sp
900148ee:	4620      	mov	r0, r4
900148f0:	691b      	ldr	r3, [r3, #16]
900148f2:	4798      	blx	r3
900148f4:	b004      	add	sp, #16
900148f6:	bd10      	pop	{r4, pc}

900148f8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900148f8:	2101      	movs	r1, #1
900148fa:	2200      	movs	r2, #0
900148fc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90014900:	490a      	ldr	r1, [pc, #40]	@ (9001492c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90014902:	8082      	strh	r2, [r0, #4]
90014904:	6001      	str	r1, [r0, #0]
90014906:	21ff      	movs	r1, #255	@ 0xff
90014908:	80c2      	strh	r2, [r0, #6]
9001490a:	8102      	strh	r2, [r0, #8]
9001490c:	8142      	strh	r2, [r0, #10]
9001490e:	8182      	strh	r2, [r0, #12]
90014910:	81c2      	strh	r2, [r0, #14]
90014912:	8202      	strh	r2, [r0, #16]
90014914:	8242      	strh	r2, [r0, #18]
90014916:	61c2      	str	r2, [r0, #28]
90014918:	8402      	strh	r2, [r0, #32]
9001491a:	8442      	strh	r2, [r0, #34]	@ 0x22
9001491c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90014920:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90014924:	6282      	str	r2, [r0, #40]	@ 0x28
90014926:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001492a:	4770      	bx	lr
9001492c:	9002f598 	.word	0x9002f598

90014930 <_ZNK8touchgfx5Image17invalidateContentEv>:
90014930:	b508      	push	{r3, lr}
90014932:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90014936:	b10b      	cbz	r3, 9001493c <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90014938:	f7ee fa56 	bl	90002de8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
9001493c:	bd08      	pop	{r3, pc}

9001493e <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
9001493e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90014942:	4770      	bx	lr

90014944 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90014944:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
90014948:	4770      	bx	lr

9001494a <_ZN8touchgfx13ScalableImageD1Ev>:
9001494a:	4770      	bx	lr

9001494c <_ZN8touchgfx13ScalableImageD0Ev>:
9001494c:	b510      	push	{r4, lr}
9001494e:	4604      	mov	r4, r0
90014950:	212c      	movs	r1, #44	@ 0x2c
90014952:	f016 faad 	bl	9002aeb0 <_ZdlPvj>
90014956:	4620      	mov	r0, r4
90014958:	bd10      	pop	{r4, pc}

9001495a <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
9001495a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001495c:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90014960:	b085      	sub	sp, #20
90014962:	4604      	mov	r4, r0
90014964:	460d      	mov	r5, r1
90014966:	2bff      	cmp	r3, #255	@ 0xff
90014968:	d128      	bne.n	900149bc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001496a:	f101 0626 	add.w	r6, r1, #38	@ 0x26
9001496e:	4668      	mov	r0, sp
90014970:	4631      	mov	r1, r6
90014972:	f007 fa57 	bl	9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014976:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
9001497a:	4630      	mov	r0, r6
9001497c:	f007 f9ea 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014980:	4287      	cmp	r7, r0
90014982:	d11b      	bne.n	900149bc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014984:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90014988:	4630      	mov	r0, r6
9001498a:	f007 fa17 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
9001498e:	4287      	cmp	r7, r0
90014990:	d114      	bne.n	900149bc <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014992:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90014996:	2100      	movs	r1, #0
90014998:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
9001499c:	f8ad 300e 	strh.w	r3, [sp, #14]
900149a0:	466b      	mov	r3, sp
900149a2:	9102      	str	r1, [sp, #8]
900149a4:	f8ad 200c 	strh.w	r2, [sp, #12]
900149a8:	cb03      	ldmia	r3!, {r0, r1}
900149aa:	6020      	str	r0, [r4, #0]
900149ac:	4620      	mov	r0, r4
900149ae:	6061      	str	r1, [r4, #4]
900149b0:	4619      	mov	r1, r3
900149b2:	f7fd fa8f 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900149b6:	4620      	mov	r0, r4
900149b8:	b005      	add	sp, #20
900149ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
900149bc:	2300      	movs	r3, #0
900149be:	8023      	strh	r3, [r4, #0]
900149c0:	8063      	strh	r3, [r4, #2]
900149c2:	80a3      	strh	r3, [r4, #4]
900149c4:	80e3      	strh	r3, [r4, #6]
900149c6:	e7f6      	b.n	900149b6 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

900149c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
900149c8:	b538      	push	{r3, r4, r5, lr}
900149ca:	2300      	movs	r3, #0
900149cc:	2501      	movs	r5, #1
900149ce:	4604      	mov	r4, r0
900149d0:	8083      	strh	r3, [r0, #4]
900149d2:	80c3      	strh	r3, [r0, #6]
900149d4:	8103      	strh	r3, [r0, #8]
900149d6:	8143      	strh	r3, [r0, #10]
900149d8:	8183      	strh	r3, [r0, #12]
900149da:	81c3      	strh	r3, [r0, #14]
900149dc:	8203      	strh	r3, [r0, #16]
900149de:	8243      	strh	r3, [r0, #18]
900149e0:	61c3      	str	r3, [r0, #28]
900149e2:	8403      	strh	r3, [r0, #32]
900149e4:	8443      	strh	r3, [r0, #34]	@ 0x22
900149e6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
900149ea:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
900149ee:	e9c0 3305 	strd	r3, r3, [r0, #20]
900149f2:	4b07      	ldr	r3, [pc, #28]	@ (90014a10 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
900149f4:	6003      	str	r3, [r0, #0]
900149f6:	880b      	ldrh	r3, [r1, #0]
900149f8:	84c3      	strh	r3, [r0, #38]	@ 0x26
900149fa:	23ff      	movs	r3, #255	@ 0xff
900149fc:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90014a00:	f000 fec3 	bl	9001578a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014a04:	4b03      	ldr	r3, [pc, #12]	@ (90014a14 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90014a06:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
90014a0a:	4620      	mov	r0, r4
90014a0c:	6023      	str	r3, [r4, #0]
90014a0e:	bd38      	pop	{r3, r4, r5, pc}
90014a10:	9002f77c 	.word	0x9002f77c
90014a14:	9002f610 	.word	0x9002f610

90014a18 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90014a18:	4603      	mov	r3, r0
90014a1a:	3026      	adds	r0, #38	@ 0x26
90014a1c:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
90014a20:	b90b      	cbnz	r3, 90014a26 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90014a22:	f005 ba6b 	b.w	90019efc <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90014a26:	f005 ba79 	b.w	90019f1c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90014a2c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90014a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a30:	4604      	mov	r4, r0
90014a32:	b0b3      	sub	sp, #204	@ 0xcc
90014a34:	469b      	mov	fp, r3
90014a36:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90014a3a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014a3e:	2500      	movs	r5, #0
90014a40:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
90014a44:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
90014a48:	ab11      	add	r3, sp, #68	@ 0x44
90014a4a:	9206      	str	r2, [sp, #24]
90014a4c:	4618      	mov	r0, r3
90014a4e:	9511      	str	r5, [sp, #68]	@ 0x44
90014a50:	9307      	str	r3, [sp, #28]
90014a52:	ad13      	add	r5, sp, #76	@ 0x4c
90014a54:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
90014a58:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
90014a5c:	f7fd fa3a 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90014a60:	9b07      	ldr	r3, [sp, #28]
90014a62:	e893 0003 	ldmia.w	r3, {r0, r1}
90014a66:	e885 0003 	stmia.w	r5, {r0, r1}
90014a6a:	6821      	ldr	r1, [r4, #0]
90014a6c:	4620      	mov	r0, r4
90014a6e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90014a70:	4629      	mov	r1, r5
90014a72:	47b0      	blx	r6
90014a74:	4621      	mov	r1, r4
90014a76:	a815      	add	r0, sp, #84	@ 0x54
90014a78:	1d26      	adds	r6, r4, #4
90014a7a:	f004 fdf1 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014a7e:	a815      	add	r0, sp, #84	@ 0x54
90014a80:	f003 f9bc 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014a84:	9b07      	ldr	r3, [sp, #28]
90014a86:	4631      	mov	r1, r6
90014a88:	4618      	mov	r0, r3
90014a8a:	f003 f9fb 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90014a8e:	4628      	mov	r0, r5
90014a90:	f104 0526 	add.w	r5, r4, #38	@ 0x26
90014a94:	f003 f9b2 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014a98:	4628      	mov	r0, r5
90014a9a:	f007 fa4d 	bl	9001bf38 <_ZNK8touchgfx6Bitmap7getDataEv>
90014a9e:	9007      	str	r0, [sp, #28]
90014aa0:	2800      	cmp	r0, #0
90014aa2:	f000 80ce 	beq.w	90014c42 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90014aa6:	f8db 200c 	ldr.w	r2, [fp, #12]
90014aaa:	a809      	add	r0, sp, #36	@ 0x24
90014aac:	f8db 1000 	ldr.w	r1, [fp]
90014ab0:	920c      	str	r2, [sp, #48]	@ 0x30
90014ab2:	f8da 2000 	ldr.w	r2, [sl]
90014ab6:	9109      	str	r1, [sp, #36]	@ 0x24
90014ab8:	920d      	str	r2, [sp, #52]	@ 0x34
90014aba:	f8da 2004 	ldr.w	r2, [sl, #4]
90014abe:	f8db 1004 	ldr.w	r1, [fp, #4]
90014ac2:	920e      	str	r2, [sp, #56]	@ 0x38
90014ac4:	f8da 2008 	ldr.w	r2, [sl, #8]
90014ac8:	910a      	str	r1, [sp, #40]	@ 0x28
90014aca:	920f      	str	r2, [sp, #60]	@ 0x3c
90014acc:	f8db 1008 	ldr.w	r1, [fp, #8]
90014ad0:	f8da 200c 	ldr.w	r2, [sl, #12]
90014ad4:	910b      	str	r1, [sp, #44]	@ 0x2c
90014ad6:	a90d      	add	r1, sp, #52	@ 0x34
90014ad8:	9210      	str	r2, [sp, #64]	@ 0x40
90014ada:	4632      	mov	r2, r6
90014adc:	f003 f9b6 	bl	90017e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014ae0:	4632      	mov	r2, r6
90014ae2:	a90e      	add	r1, sp, #56	@ 0x38
90014ae4:	a80a      	add	r0, sp, #40	@ 0x28
90014ae6:	f003 f9b1 	bl	90017e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014aea:	4632      	mov	r2, r6
90014aec:	a90f      	add	r1, sp, #60	@ 0x3c
90014aee:	a80b      	add	r0, sp, #44	@ 0x2c
90014af0:	f003 f9ac 	bl	90017e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014af4:	4632      	mov	r2, r6
90014af6:	a910      	add	r1, sp, #64	@ 0x40
90014af8:	a80c      	add	r0, sp, #48	@ 0x30
90014afa:	f003 f9a7 	bl	90017e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90014afe:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
90014b02:	ed97 3a00 	vldr	s6, [r7]
90014b06:	eef0 6a67 	vmov.f32	s13, s15
90014b0a:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
90014b0e:	edd7 4a01 	vldr	s9, [r7, #4]
90014b12:	eeb0 7a67 	vmov.f32	s14, s15
90014b16:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
90014b1a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90014b1e:	ed99 2a00 	vldr	s4, [r9]
90014b22:	eeb0 6a67 	vmov.f32	s12, s15
90014b26:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
90014b2a:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90014b2e:	edd8 2a00 	vldr	s5, [r8]
90014b32:	edd9 3a01 	vldr	s7, [r9, #4]
90014b36:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014b3a:	ed98 4a01 	vldr	s8, [r8, #4]
90014b3e:	ed99 5a02 	vldr	s10, [r9, #8]
90014b42:	edd8 5a02 	vldr	s11, [r8, #8]
90014b46:	ee16 6a10 	vmov	r6, s12
90014b4a:	eeb0 6a67 	vmov.f32	s12, s15
90014b4e:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
90014b52:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90014b56:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014b5a:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90014b5e:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90014b62:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
90014b66:	ee16 0a10 	vmov	r0, s12
90014b6a:	eeb0 6a67 	vmov.f32	s12, s15
90014b6e:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
90014b72:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
90014b76:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014b7a:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
90014b7e:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
90014b82:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
90014b86:	ee16 1a10 	vmov	r1, s12
90014b8a:	eeb0 6a67 	vmov.f32	s12, s15
90014b8e:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
90014b92:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
90014b96:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014b9a:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
90014b9e:	f8d7 a008 	ldr.w	sl, [r7, #8]
90014ba2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90014ba6:	68ff      	ldr	r7, [r7, #12]
90014ba8:	ee16 2a10 	vmov	r2, s12
90014bac:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
90014bb0:	9624      	str	r6, [sp, #144]	@ 0x90
90014bb2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014bb6:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
90014bba:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
90014bbe:	4628      	mov	r0, r5
90014bc0:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
90014bc4:	9b06      	ldr	r3, [sp, #24]
90014bc6:	922d      	str	r2, [sp, #180]	@ 0xb4
90014bc8:	4a1f      	ldr	r2, [pc, #124]	@ (90014c48 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90014bca:	9317      	str	r3, [sp, #92]	@ 0x5c
90014bcc:	8812      	ldrh	r2, [r2, #0]
90014bce:	9b07      	ldr	r3, [sp, #28]
90014bd0:	9218      	str	r2, [sp, #96]	@ 0x60
90014bd2:	9319      	str	r3, [sp, #100]	@ 0x64
90014bd4:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
90014bd8:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
90014bdc:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
90014be0:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
90014be4:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
90014be8:	9731      	str	r7, [sp, #196]	@ 0xc4
90014bea:	f007 f9d5 	bl	9001bf98 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90014bee:	901a      	str	r0, [sp, #104]	@ 0x68
90014bf0:	4628      	mov	r0, r5
90014bf2:	f007 f8af 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014bf6:	901b      	str	r0, [sp, #108]	@ 0x6c
90014bf8:	4628      	mov	r0, r5
90014bfa:	f007 f8df 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90014bfe:	901c      	str	r0, [sp, #112]	@ 0x70
90014c00:	4628      	mov	r0, r5
90014c02:	f007 f8a7 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014c06:	4b11      	ldr	r3, [pc, #68]	@ (90014c4c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90014c08:	901d      	str	r0, [sp, #116]	@ 0x74
90014c0a:	681b      	ldr	r3, [r3, #0]
90014c0c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014c10:	b10a      	cbz	r2, 90014c16 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90014c12:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
90014c14:	b905      	cbnz	r5, 90014c18 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90014c16:	689d      	ldr	r5, [r3, #8]
90014c18:	682b      	ldr	r3, [r5, #0]
90014c1a:	4620      	mov	r0, r4
90014c1c:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
90014c1e:	f7ff fefb 	bl	90014a18 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90014c22:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90014c26:	aa1e      	add	r2, sp, #120	@ 0x78
90014c28:	a917      	add	r1, sp, #92	@ 0x5c
90014c2a:	9304      	str	r3, [sp, #16]
90014c2c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90014c30:	e9cd 0302 	strd	r0, r3, [sp, #8]
90014c34:	ab13      	add	r3, sp, #76	@ 0x4c
90014c36:	4628      	mov	r0, r5
90014c38:	9301      	str	r3, [sp, #4]
90014c3a:	ab15      	add	r3, sp, #84	@ 0x54
90014c3c:	9300      	str	r3, [sp, #0]
90014c3e:	ab19      	add	r3, sp, #100	@ 0x64
90014c40:	47b0      	blx	r6
90014c42:	b033      	add	sp, #204	@ 0xcc
90014c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014c48:	240218c6 	.word	0x240218c6
90014c4c:	240218cc 	.word	0x240218cc

90014c50 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90014c50:	b570      	push	{r4, r5, r6, lr}
90014c52:	ed2d 8b04 	vpush	{d8-d9}
90014c56:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90014c5a:	b098      	sub	sp, #96	@ 0x60
90014c5c:	4604      	mov	r4, r0
90014c5e:	460e      	mov	r6, r1
90014c60:	2b00      	cmp	r3, #0
90014c62:	d065      	beq.n	90014d30 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90014c64:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014c68:	f100 0526 	add.w	r5, r0, #38	@ 0x26
90014c6c:	ed9f 8a37 	vldr	s16, [pc, #220]	@ 90014d4c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90014c70:	ee09 3a10 	vmov	s18, r3
90014c74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014c78:	4628      	mov	r0, r5
90014c7a:	ee08 3a90 	vmov	s17, r3
90014c7e:	4b34      	ldr	r3, [pc, #208]	@ (90014d50 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90014c80:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90014c84:	930c      	str	r3, [sp, #48]	@ 0x30
90014c86:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90014c8a:	930d      	str	r3, [sp, #52]	@ 0x34
90014c8c:	930e      	str	r3, [sp, #56]	@ 0x38
90014c8e:	ee39 9a08 	vadd.f32	s18, s18, s16
90014c92:	930f      	str	r3, [sp, #60]	@ 0x3c
90014c94:	f007 f85e 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014c98:	ee07 0a90 	vmov	s15, r0
90014c9c:	4628      	mov	r0, r5
90014c9e:	ee78 8a88 	vadd.f32	s17, s17, s16
90014ca2:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90014ca6:	f007 f889 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90014caa:	4b2a      	ldr	r3, [pc, #168]	@ (90014d54 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90014cac:	ee07 0a90 	vmov	s15, r0
90014cb0:	781b      	ldrb	r3, [r3, #0]
90014cb2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90014cb6:	eef0 7a48 	vmov.f32	s15, s16
90014cba:	2b01      	cmp	r3, #1
90014cbc:	d13c      	bne.n	90014d38 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90014cbe:	eef0 6a69 	vmov.f32	s13, s19
90014cc2:	ee19 3a90 	vmov	r3, s19
90014cc6:	eeb0 6a47 	vmov.f32	s12, s14
90014cca:	eef0 5a47 	vmov.f32	s11, s14
90014cce:	eef0 9a48 	vmov.f32	s19, s16
90014cd2:	eeb0 7a48 	vmov.f32	s14, s16
90014cd6:	9314      	str	r3, [sp, #80]	@ 0x50
90014cd8:	ab14      	add	r3, sp, #80	@ 0x50
90014cda:	2200      	movs	r2, #0
90014cdc:	4631      	mov	r1, r6
90014cde:	9303      	str	r3, [sp, #12]
90014ce0:	ab10      	add	r3, sp, #64	@ 0x40
90014ce2:	4620      	mov	r0, r4
90014ce4:	edcd 7a04 	vstr	s15, [sp, #16]
90014ce8:	9302      	str	r3, [sp, #8]
90014cea:	ab0c      	add	r3, sp, #48	@ 0x30
90014cec:	ed8d 9a05 	vstr	s18, [sp, #20]
90014cf0:	9301      	str	r3, [sp, #4]
90014cf2:	ab08      	add	r3, sp, #32
90014cf4:	ed8d 9a06 	vstr	s18, [sp, #24]
90014cf8:	9300      	str	r3, [sp, #0]
90014cfa:	ab04      	add	r3, sp, #16
90014cfc:	edcd 7a07 	vstr	s15, [sp, #28]
90014d00:	edcd 7a08 	vstr	s15, [sp, #32]
90014d04:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
90014d08:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
90014d0c:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
90014d10:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
90014d14:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
90014d18:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
90014d1c:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
90014d20:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
90014d24:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
90014d28:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
90014d2c:	f7ff fe7e 	bl	90014a2c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90014d30:	b018      	add	sp, #96	@ 0x60
90014d32:	ecbd 8b04 	vpop	{d8-d9}
90014d36:	bd70      	pop	{r4, r5, r6, pc}
90014d38:	eef0 6a47 	vmov.f32	s13, s14
90014d3c:	ee18 3a10 	vmov	r3, s16
90014d40:	eef0 5a69 	vmov.f32	s11, s19
90014d44:	eeb0 6a48 	vmov.f32	s12, s16
90014d48:	e7c5      	b.n	90014cd6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90014d4a:	bf00      	nop
90014d4c:	00000000 	.word	0x00000000
90014d50:	42c80000 	.word	0x42c80000
90014d54:	240218c4 	.word	0x240218c4

90014d58 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90014d58:	2000      	movs	r0, #0
90014d5a:	4770      	bx	lr

90014d5c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014d5c:	4b07      	ldr	r3, [pc, #28]	@ (90014d7c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90014d5e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90014d60:	881b      	ldrh	r3, [r3, #0]
90014d62:	4293      	cmp	r3, r2
90014d64:	bf81      	itttt	hi
90014d66:	4b06      	ldrhi	r3, [pc, #24]	@ (90014d80 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014d68:	681b      	ldrhi	r3, [r3, #0]
90014d6a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90014d6e:	7858      	ldrbhi	r0, [r3, #1]
90014d70:	bf8c      	ite	hi
90014d72:	f000 0003 	andhi.w	r0, r0, #3
90014d76:	2000      	movls	r0, #0
90014d78:	4770      	bx	lr
90014d7a:	bf00      	nop
90014d7c:	24021928 	.word	0x24021928
90014d80:	24021924 	.word	0x24021924

90014d84 <_ZN8touchgfx8TextAreaD1Ev>:
90014d84:	4770      	bx	lr
	...

90014d88 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90014d88:	4b11      	ldr	r3, [pc, #68]	@ (90014dd0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90014d8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014d8e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90014d90:	4604      	mov	r4, r0
90014d92:	881b      	ldrh	r3, [r3, #0]
90014d94:	428b      	cmp	r3, r1
90014d96:	d918      	bls.n	90014dca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90014d98:	6803      	ldr	r3, [r0, #0]
90014d9a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90014d9c:	4b0d      	ldr	r3, [pc, #52]	@ (90014dd4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90014d9e:	6818      	ldr	r0, [r3, #0]
90014da0:	f7f1 f87c 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90014da4:	6823      	ldr	r3, [r4, #0]
90014da6:	4606      	mov	r6, r0
90014da8:	4620      	mov	r0, r4
90014daa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014dac:	4798      	blx	r3
90014dae:	6823      	ldr	r3, [r4, #0]
90014db0:	4607      	mov	r7, r0
90014db2:	4620      	mov	r0, r4
90014db4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014db8:	4798      	blx	r3
90014dba:	463a      	mov	r2, r7
90014dbc:	4603      	mov	r3, r0
90014dbe:	4631      	mov	r1, r6
90014dc0:	4620      	mov	r0, r4
90014dc2:	46ac      	mov	ip, r5
90014dc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014dc8:	4760      	bx	ip
90014dca:	2000      	movs	r0, #0
90014dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014dd0:	24021928 	.word	0x24021928
90014dd4:	24021930 	.word	0x24021930

90014dd8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014dd8:	4b18      	ldr	r3, [pc, #96]	@ (90014e3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014dda:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014dde:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90014de0:	4604      	mov	r4, r0
90014de2:	881b      	ldrh	r3, [r3, #0]
90014de4:	428b      	cmp	r3, r1
90014de6:	d926      	bls.n	90014e36 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014de8:	4b15      	ldr	r3, [pc, #84]	@ (90014e40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014dea:	681b      	ldr	r3, [r3, #0]
90014dec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014df0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014df4:	4b13      	ldr	r3, [pc, #76]	@ (90014e44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90014df6:	7855      	ldrb	r5, [r2, #1]
90014df8:	681b      	ldr	r3, [r3, #0]
90014dfa:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014dfe:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90014e02:	6833      	ldr	r3, [r6, #0]
90014e04:	69df      	ldr	r7, [r3, #28]
90014e06:	4b10      	ldr	r3, [pc, #64]	@ (90014e48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90014e08:	6818      	ldr	r0, [r3, #0]
90014e0a:	f7f1 f847 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90014e0e:	6823      	ldr	r3, [r4, #0]
90014e10:	4680      	mov	r8, r0
90014e12:	4620      	mov	r0, r4
90014e14:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014e16:	4798      	blx	r3
90014e18:	6823      	ldr	r3, [r4, #0]
90014e1a:	4681      	mov	r9, r0
90014e1c:	4620      	mov	r0, r4
90014e1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014e22:	4798      	blx	r3
90014e24:	464b      	mov	r3, r9
90014e26:	9000      	str	r0, [sp, #0]
90014e28:	4642      	mov	r2, r8
90014e2a:	4629      	mov	r1, r5
90014e2c:	4630      	mov	r0, r6
90014e2e:	47b8      	blx	r7
90014e30:	b003      	add	sp, #12
90014e32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014e36:	2000      	movs	r0, #0
90014e38:	e7fa      	b.n	90014e30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90014e3a:	bf00      	nop
90014e3c:	24021928 	.word	0x24021928
90014e40:	24021924 	.word	0x24021924
90014e44:	2402192c 	.word	0x2402192c
90014e48:	24021930 	.word	0x24021930

90014e4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014e4c:	b40e      	push	{r1, r2, r3}
90014e4e:	4b30      	ldr	r3, [pc, #192]	@ (90014f10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90014e50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014e54:	881a      	ldrh	r2, [r3, #0]
90014e56:	b09d      	sub	sp, #116	@ 0x74
90014e58:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90014e5a:	4604      	mov	r4, r0
90014e5c:	429a      	cmp	r2, r3
90014e5e:	d954      	bls.n	90014f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90014e60:	aa26      	add	r2, sp, #152	@ 0x98
90014e62:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90014f14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90014e66:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90014f18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014e6a:	9202      	str	r2, [sp, #8]
90014e6c:	f8d9 2000 	ldr.w	r2, [r9]
90014e70:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014e74:	f8d8 3000 	ldr.w	r3, [r8]
90014e78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014e7c:	682b      	ldr	r3, [r5, #0]
90014e7e:	4628      	mov	r0, r5
90014e80:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014e82:	4798      	blx	r3
90014e84:	4606      	mov	r6, r0
90014e86:	b207      	sxth	r7, r0
90014e88:	a803      	add	r0, sp, #12
90014e8a:	f005 fba8 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
90014e8e:	682b      	ldr	r3, [r5, #0]
90014e90:	4628      	mov	r0, r5
90014e92:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014e94:	4798      	blx	r3
90014e96:	682b      	ldr	r3, [r5, #0]
90014e98:	4682      	mov	sl, r0
90014e9a:	4628      	mov	r0, r5
90014e9c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014e9e:	4798      	blx	r3
90014ea0:	4653      	mov	r3, sl
90014ea2:	9000      	str	r0, [sp, #0]
90014ea4:	a803      	add	r0, sp, #12
90014ea6:	9a02      	ldr	r2, [sp, #8]
90014ea8:	9925      	ldr	r1, [sp, #148]	@ 0x94
90014eaa:	f005 fbf3 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014eae:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014eb0:	f8d9 3000 	ldr.w	r3, [r9]
90014eb4:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90014eb8:	8925      	ldrh	r5, [r4, #8]
90014eba:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90014ebe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90014ec2:	eba5 050c 	sub.w	r5, r5, ip
90014ec6:	784a      	ldrb	r2, [r1, #1]
90014ec8:	f8d8 3000 	ldr.w	r3, [r8]
90014ecc:	b22d      	sxth	r5, r5
90014ece:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
90014ed2:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014ed6:	9500      	str	r5, [sp, #0]
90014ed8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014edc:	a803      	add	r0, sp, #12
90014ede:	f002 fc93 	bl	90017808 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90014ee2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90014ee6:	b203      	sxth	r3, r0
90014ee8:	18b9      	adds	r1, r7, r2
90014eea:	2900      	cmp	r1, #0
90014eec:	dd0b      	ble.n	90014f06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014eee:	3b01      	subs	r3, #1
90014ef0:	fb13 f302 	smulbb	r3, r3, r2
90014ef4:	fb16 3300 	smlabb	r3, r6, r0, r3
90014ef8:	b21f      	sxth	r7, r3
90014efa:	4638      	mov	r0, r7
90014efc:	b01d      	add	sp, #116	@ 0x74
90014efe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014f02:	b003      	add	sp, #12
90014f04:	4770      	bx	lr
90014f06:	2b00      	cmp	r3, #0
90014f08:	dcf7      	bgt.n	90014efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014f0a:	2700      	movs	r7, #0
90014f0c:	e7f5      	b.n	90014efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014f0e:	bf00      	nop
90014f10:	24021928 	.word	0x24021928
90014f14:	24021924 	.word	0x24021924
90014f18:	2402192c 	.word	0x2402192c

90014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014f1c:	4bbd      	ldr	r3, [pc, #756]	@ (90015214 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014f22:	460c      	mov	r4, r1
90014f24:	881b      	ldrh	r3, [r3, #0]
90014f26:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90014f28:	b0a9      	sub	sp, #164	@ 0xa4
90014f2a:	4680      	mov	r8, r0
90014f2c:	428b      	cmp	r3, r1
90014f2e:	d809      	bhi.n	90014f44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014f30:	2300      	movs	r3, #0
90014f32:	f04f 32ff 	mov.w	r2, #4294967295
90014f36:	6083      	str	r3, [r0, #8]
90014f38:	e9c0 3200 	strd	r3, r2, [r0]
90014f3c:	4640      	mov	r0, r8
90014f3e:	b029      	add	sp, #164	@ 0xa4
90014f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014f44:	4eb4      	ldr	r6, [pc, #720]	@ (90015218 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90014f46:	6833      	ldr	r3, [r6, #0]
90014f48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014f4c:	4bb3      	ldr	r3, [pc, #716]	@ (9001521c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014f4e:	681b      	ldr	r3, [r3, #0]
90014f50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014f54:	4bb2      	ldr	r3, [pc, #712]	@ (90015220 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014f56:	6818      	ldr	r0, [r3, #0]
90014f58:	f7f0 ffa0 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90014f5c:	682b      	ldr	r3, [r5, #0]
90014f5e:	4681      	mov	r9, r0
90014f60:	4628      	mov	r0, r5
90014f62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014f64:	4798      	blx	r3
90014f66:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
90014f68:	b203      	sxth	r3, r0
90014f6a:	4682      	mov	sl, r0
90014f6c:	4407      	add	r7, r0
90014f6e:	a80f      	add	r0, sp, #60	@ 0x3c
90014f70:	9304      	str	r3, [sp, #16]
90014f72:	b2bb      	uxth	r3, r7
90014f74:	9303      	str	r3, [sp, #12]
90014f76:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90014f7a:	2b00      	cmp	r3, #0
90014f7c:	f040 80a5 	bne.w	900150ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90014f80:	f005 fb2d 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
90014f84:	682b      	ldr	r3, [r5, #0]
90014f86:	4628      	mov	r0, r5
90014f88:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014f8a:	4798      	blx	r3
90014f8c:	682b      	ldr	r3, [r5, #0]
90014f8e:	4606      	mov	r6, r0
90014f90:	4628      	mov	r0, r5
90014f92:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014f94:	4798      	blx	r3
90014f96:	6823      	ldr	r3, [r4, #0]
90014f98:	4607      	mov	r7, r0
90014f9a:	4620      	mov	r0, r4
90014f9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014f9e:	4798      	blx	r3
90014fa0:	6823      	ldr	r3, [r4, #0]
90014fa2:	4683      	mov	fp, r0
90014fa4:	4620      	mov	r0, r4
90014fa6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014faa:	4798      	blx	r3
90014fac:	463b      	mov	r3, r7
90014fae:	4649      	mov	r1, r9
90014fb0:	4632      	mov	r2, r6
90014fb2:	2600      	movs	r6, #0
90014fb4:	e9cd b000 	strd	fp, r0, [sp]
90014fb8:	a80f      	add	r0, sp, #60	@ 0x3c
90014fba:	4637      	mov	r7, r6
90014fbc:	f005 fb7f 	bl	9001a6be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014fc0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90014fc4:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90015218 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90014fc8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90014fcc:	bf0c      	ite	eq
90014fce:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90014fd2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90014fd6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014fd8:	4629      	mov	r1, r5
90014fda:	f8db 3000 	ldr.w	r3, [fp]
90014fde:	a80f      	add	r0, sp, #60	@ 0x3c
90014fe0:	3701      	adds	r7, #1
90014fe2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014fe6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014fea:	b2bf      	uxth	r7, r7
90014fec:	785b      	ldrb	r3, [r3, #1]
90014fee:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014ff2:	f002 f910 	bl	90017216 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014ff6:	9b03      	ldr	r3, [sp, #12]
90014ff8:	4286      	cmp	r6, r0
90014ffa:	eba9 0903 	sub.w	r9, r9, r3
90014ffe:	bfb8      	it	lt
90015000:	4606      	movlt	r6, r0
90015002:	a80f      	add	r0, sp, #60	@ 0x3c
90015004:	fa0f f989 	sxth.w	r9, r9
90015008:	b236      	sxth	r6, r6
9001500a:	f005 fb0f 	bl	9001a62c <_ZN8touchgfx12TextProvider11endOfStringEv>
9001500e:	b918      	cbnz	r0, 90015018 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015010:	7a2b      	ldrb	r3, [r5, #8]
90015012:	444b      	add	r3, r9
90015014:	2b00      	cmp	r3, #0
90015016:	dcde      	bgt.n	90014fd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90015018:	9b03      	ldr	r3, [sp, #12]
9001501a:	4620      	mov	r0, r4
9001501c:	9a04      	ldr	r2, [sp, #16]
9001501e:	fb13 f707 	smulbb	r7, r3, r7
90015022:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90015024:	f895 9009 	ldrb.w	r9, [r5, #9]
90015028:	1aff      	subs	r7, r7, r3
9001502a:	b2bf      	uxth	r7, r7
9001502c:	b23b      	sxth	r3, r7
9001502e:	429a      	cmp	r2, r3
90015030:	bfa8      	it	ge
90015032:	4657      	movge	r7, sl
90015034:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90015038:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001503c:	6823      	ldr	r3, [r4, #0]
9001503e:	444f      	add	r7, r9
90015040:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90015042:	bf08      	it	eq
90015044:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90015048:	fa1f f987 	uxth.w	r9, r7
9001504c:	bf18      	it	ne
9001504e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90015052:	4798      	blx	r3
90015054:	2801      	cmp	r0, #1
90015056:	fa0f f789 	sxth.w	r7, r9
9001505a:	b2b3      	uxth	r3, r6
9001505c:	f000 80e2 	beq.w	90015224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90015060:	2802      	cmp	r0, #2
90015062:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
90015066:	f000 80e3 	beq.w	90015230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
9001506a:	7aea      	ldrb	r2, [r5, #11]
9001506c:	b236      	sxth	r6, r6
9001506e:	7b2d      	ldrb	r5, [r5, #12]
90015070:	1ab6      	subs	r6, r6, r2
90015072:	442a      	add	r2, r5
90015074:	fa1f fa86 	uxth.w	sl, r6
90015078:	4413      	add	r3, r2
9001507a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
9001507e:	fa0f fb8a 	sxth.w	fp, sl
90015082:	b29b      	uxth	r3, r3
90015084:	2a02      	cmp	r2, #2
90015086:	b21e      	sxth	r6, r3
90015088:	f000 80d6 	beq.w	90015238 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
9001508c:	2a03      	cmp	r2, #3
9001508e:	f000 80de 	beq.w	9001524e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90015092:	2a01      	cmp	r2, #1
90015094:	f040 80e6 	bne.w	90015264 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90015098:	8925      	ldrh	r5, [r4, #8]
9001509a:	4633      	mov	r3, r6
9001509c:	463e      	mov	r6, r7
9001509e:	eba5 0909 	sub.w	r9, r5, r9
900150a2:	461f      	mov	r7, r3
900150a4:	465d      	mov	r5, fp
900150a6:	fa0f fb89 	sxth.w	fp, r9
900150aa:	4b5d      	ldr	r3, [pc, #372]	@ (90015220 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900150ac:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900150ae:	6818      	ldr	r0, [r3, #0]
900150b0:	f7f0 fef4 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
900150b4:	f8a8 b000 	strh.w	fp, [r8]
900150b8:	f8a8 5002 	strh.w	r5, [r8, #2]
900150bc:	f8a8 6004 	strh.w	r6, [r8, #4]
900150c0:	f8a8 7006 	strh.w	r7, [r8, #6]
900150c4:	f8c8 0008 	str.w	r0, [r8, #8]
900150c8:	e738      	b.n	90014f3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
900150ca:	f005 fa88 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
900150ce:	682b      	ldr	r3, [r5, #0]
900150d0:	4628      	mov	r0, r5
900150d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900150d4:	4798      	blx	r3
900150d6:	682b      	ldr	r3, [r5, #0]
900150d8:	4607      	mov	r7, r0
900150da:	4628      	mov	r0, r5
900150dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900150de:	4798      	blx	r3
900150e0:	6823      	ldr	r3, [r4, #0]
900150e2:	4683      	mov	fp, r0
900150e4:	4620      	mov	r0, r4
900150e6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900150e8:	4798      	blx	r3
900150ea:	6822      	ldr	r2, [r4, #0]
900150ec:	9005      	str	r0, [sp, #20]
900150ee:	4620      	mov	r0, r4
900150f0:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
900150f4:	4790      	blx	r2
900150f6:	9b05      	ldr	r3, [sp, #20]
900150f8:	463a      	mov	r2, r7
900150fa:	4649      	mov	r1, r9
900150fc:	9001      	str	r0, [sp, #4]
900150fe:	a80f      	add	r0, sp, #60	@ 0x3c
90015100:	9300      	str	r3, [sp, #0]
90015102:	465b      	mov	r3, fp
90015104:	f005 fadb 	bl	9001a6be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90015108:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001510c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90015110:	af0f      	add	r7, sp, #60	@ 0x3c
90015112:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90015116:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001511a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001511c:	bf0a      	itet	eq
9001511e:	464a      	moveq	r2, r9
90015120:	461a      	movne	r2, r3
90015122:	4699      	moveq	r9, r3
90015124:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90015128:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
9001512c:	1ad2      	subs	r2, r2, r3
9001512e:	6833      	ldr	r3, [r6, #0]
90015130:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90015134:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015138:	7859      	ldrb	r1, [r3, #1]
9001513a:	2300      	movs	r3, #0
9001513c:	9707      	str	r7, [sp, #28]
9001513e:	f3c1 0181 	ubfx	r1, r1, #2, #2
90015142:	f8ad 3018 	strh.w	r3, [sp, #24]
90015146:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
9001514a:	f88d 1020 	strb.w	r1, [sp, #32]
9001514e:	9509      	str	r5, [sp, #36]	@ 0x24
90015150:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015154:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
90015158:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
9001515c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015160:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90015164:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015168:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001516c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015170:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90015174:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
90015178:	b350      	cbz	r0, 900151d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001517a:	682b      	ldr	r3, [r5, #0]
9001517c:	4628      	mov	r0, r5
9001517e:	695b      	ldr	r3, [r3, #20]
90015180:	4798      	blx	r3
90015182:	4607      	mov	r7, r0
90015184:	b320      	cbz	r0, 900151d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015186:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015188:	4639      	mov	r1, r7
9001518a:	6803      	ldr	r3, [r0, #0]
9001518c:	68db      	ldr	r3, [r3, #12]
9001518e:	4798      	blx	r3
90015190:	4606      	mov	r6, r0
90015192:	b1e8      	cbz	r0, 900151d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015194:	7b43      	ldrb	r3, [r0, #13]
90015196:	7a82      	ldrb	r2, [r0, #10]
90015198:	005b      	lsls	r3, r3, #1
9001519a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001519e:	4313      	orrs	r3, r2
900151a0:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900151a4:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
900151a8:	2b06      	cmp	r3, #6
900151aa:	d111      	bne.n	900151d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900151ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
900151ae:	4632      	mov	r2, r6
900151b0:	4639      	mov	r1, r7
900151b2:	6803      	ldr	r3, [r0, #0]
900151b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900151b6:	4798      	blx	r3
900151b8:	7b73      	ldrb	r3, [r6, #13]
900151ba:	005b      	lsls	r3, r3, #1
900151bc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900151c0:	7ab3      	ldrb	r3, [r6, #10]
900151c2:	4313      	orrs	r3, r2
900151c4:	4418      	add	r0, r3
900151c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900151ca:	4418      	add	r0, r3
900151cc:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
900151d0:	2600      	movs	r6, #0
900151d2:	4637      	mov	r7, r6
900151d4:	a806      	add	r0, sp, #24
900151d6:	3701      	adds	r7, #1
900151d8:	f002 fa13 	bl	90017602 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900151dc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
900151e0:	9b03      	ldr	r3, [sp, #12]
900151e2:	b2bf      	uxth	r7, r7
900151e4:	4286      	cmp	r6, r0
900151e6:	eba9 0903 	sub.w	r9, r9, r3
900151ea:	f8bd 3018 	ldrh.w	r3, [sp, #24]
900151ee:	bfb8      	it	lt
900151f0:	4606      	movlt	r6, r0
900151f2:	fa0f f989 	sxth.w	r9, r9
900151f6:	b236      	sxth	r6, r6
900151f8:	2b00      	cmp	r3, #0
900151fa:	f43f af0d 	beq.w	90015018 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900151fe:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90015202:	2b00      	cmp	r3, #0
90015204:	f47f af08 	bne.w	90015018 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015208:	7a2b      	ldrb	r3, [r5, #8]
9001520a:	444b      	add	r3, r9
9001520c:	2b00      	cmp	r3, #0
9001520e:	dce1      	bgt.n	900151d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90015210:	e702      	b.n	90015018 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015212:	bf00      	nop
90015214:	24021928 	.word	0x24021928
90015218:	24021924 	.word	0x24021924
9001521c:	2402192c 	.word	0x2402192c
90015220:	24021930 	.word	0x24021930
90015224:	ebaa 0606 	sub.w	r6, sl, r6
90015228:	2002      	movs	r0, #2
9001522a:	fb96 f6f0 	sdiv	r6, r6, r0
9001522e:	e71c      	b.n	9001506a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015230:	441e      	add	r6, r3
90015232:	ebaa 0606 	sub.w	r6, sl, r6
90015236:	e718      	b.n	9001506a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015238:	8925      	ldrh	r5, [r4, #8]
9001523a:	1aed      	subs	r5, r5, r3
9001523c:	eba5 050a 	sub.w	r5, r5, sl
90015240:	fa0f fb85 	sxth.w	fp, r5
90015244:	8965      	ldrh	r5, [r4, #10]
90015246:	eba5 0509 	sub.w	r5, r5, r9
9001524a:	b22d      	sxth	r5, r5
9001524c:	e72d      	b.n	900150aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001524e:	8965      	ldrh	r5, [r4, #10]
90015250:	f04f 0b00 	mov.w	fp, #0
90015254:	1aed      	subs	r5, r5, r3
90015256:	4633      	mov	r3, r6
90015258:	463e      	mov	r6, r7
9001525a:	eba5 050a 	sub.w	r5, r5, sl
9001525e:	461f      	mov	r7, r3
90015260:	b22d      	sxth	r5, r5
90015262:	e722      	b.n	900150aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015264:	2500      	movs	r5, #0
90015266:	e720      	b.n	900150aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90015268 <_ZN8touchgfx8TextAreaD0Ev>:
90015268:	b510      	push	{r4, lr}
9001526a:	4604      	mov	r4, r0
9001526c:	2148      	movs	r1, #72	@ 0x48
9001526e:	f015 fe1f 	bl	9002aeb0 <_ZdlPvj>
90015272:	4620      	mov	r0, r4
90015274:	bd10      	pop	{r4, pc}
	...

90015278 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90015278:	b513      	push	{r0, r1, r4, lr}
9001527a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
9001527e:	4604      	mov	r4, r0
90015280:	b1fb      	cbz	r3, 900152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015282:	4b16      	ldr	r3, [pc, #88]	@ (900152dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90015284:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90015286:	881b      	ldrh	r3, [r3, #0]
90015288:	428b      	cmp	r3, r1
9001528a:	d91a      	bls.n	900152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001528c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015290:	2b00      	cmp	r3, #0
90015292:	dd16      	ble.n	900152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015294:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015298:	2b00      	cmp	r3, #0
9001529a:	dd12      	ble.n	900152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001529c:	4b10      	ldr	r3, [pc, #64]	@ (900152e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
9001529e:	6818      	ldr	r0, [r3, #0]
900152a0:	f7f0 fdfc 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
900152a4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
900152a8:	6822      	ldr	r2, [r4, #0]
900152aa:	2b00      	cmp	r3, #0
900152ac:	db06      	blt.n	900152bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900152ae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
900152b2:	2b00      	cmp	r3, #0
900152b4:	db02      	blt.n	900152bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900152b6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900152b8:	4298      	cmp	r0, r3
900152ba:	d004      	beq.n	900152c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900152bc:	6953      	ldr	r3, [r2, #20]
900152be:	4620      	mov	r0, r4
900152c0:	4798      	blx	r3
900152c2:	b002      	add	sp, #8
900152c4:	bd10      	pop	{r4, pc}
900152c6:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
900152ca:	466b      	mov	r3, sp
900152cc:	6912      	ldr	r2, [r2, #16]
900152ce:	c903      	ldmia	r1, {r0, r1}
900152d0:	e883 0003 	stmia.w	r3, {r0, r1}
900152d4:	4619      	mov	r1, r3
900152d6:	4620      	mov	r0, r4
900152d8:	4790      	blx	r2
900152da:	e7f2      	b.n	900152c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900152dc:	24021928 	.word	0x24021928
900152e0:	24021930 	.word	0x24021930

900152e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900152e4:	4b45      	ldr	r3, [pc, #276]	@ (900153fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900152e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900152ea:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900152ec:	b08e      	sub	sp, #56	@ 0x38
900152ee:	881b      	ldrh	r3, [r3, #0]
900152f0:	4604      	mov	r4, r0
900152f2:	4293      	cmp	r3, r2
900152f4:	d97e      	bls.n	900153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900152f6:	6808      	ldr	r0, [r1, #0]
900152f8:	ab05      	add	r3, sp, #20
900152fa:	6849      	ldr	r1, [r1, #4]
900152fc:	4d40      	ldr	r5, [pc, #256]	@ (90015400 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
900152fe:	c303      	stmia	r3!, {r0, r1}
90015300:	4611      	mov	r1, r2
90015302:	6828      	ldr	r0, [r5, #0]
90015304:	f7f0 fdca 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90015308:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
9001530c:	2b00      	cmp	r3, #0
9001530e:	db11      	blt.n	90015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015310:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90015314:	2b00      	cmp	r3, #0
90015316:	db0d      	blt.n	90015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015318:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9001531a:	4298      	cmp	r0, r3
9001531c:	d10a      	bne.n	90015334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001531e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90015322:	ab09      	add	r3, sp, #36	@ 0x24
90015324:	e892 0003 	ldmia.w	r2, {r0, r1}
90015328:	e883 0003 	stmia.w	r3, {r0, r1}
9001532c:	4619      	mov	r1, r3
9001532e:	a805      	add	r0, sp, #20
90015330:	f7fc fdd0 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90015334:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015338:	2b00      	cmp	r3, #0
9001533a:	dd5b      	ble.n	900153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001533c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015340:	2b00      	cmp	r3, #0
90015342:	dd57      	ble.n	900153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015344:	4f2f      	ldr	r7, [pc, #188]	@ (90015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015346:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015348:	683b      	ldr	r3, [r7, #0]
9001534a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001534e:	4b2e      	ldr	r3, [pc, #184]	@ (90015408 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90015350:	681b      	ldr	r3, [r3, #0]
90015352:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015356:	2e00      	cmp	r6, #0
90015358:	d04c      	beq.n	900153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001535a:	6823      	ldr	r3, [r4, #0]
9001535c:	4620      	mov	r0, r4
9001535e:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90015362:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90015364:	4798      	blx	r3
90015366:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015368:	683b      	ldr	r3, [r7, #0]
9001536a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
9001536e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90015372:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
90015376:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
9001537a:	785b      	ldrb	r3, [r3, #1]
9001537c:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
90015380:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015384:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90015386:	9609      	str	r6, [sp, #36]	@ 0x24
90015388:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9001538c:	4b1f      	ldr	r3, [pc, #124]	@ (9001540c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
9001538e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
90015392:	681b      	ldr	r3, [r3, #0]
90015394:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
90015398:	910b      	str	r1, [sp, #44]	@ 0x2c
9001539a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
9001539e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
900153a2:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
900153a6:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
900153aa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900153ae:	b10a      	cbz	r2, 900153b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900153b0:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
900153b2:	b906      	cbnz	r6, 900153b6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900153b4:	689e      	ldr	r6, [r3, #8]
900153b6:	af07      	add	r7, sp, #28
900153b8:	4621      	mov	r1, r4
900153ba:	4638      	mov	r0, r7
900153bc:	f004 f950 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900153c0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900153c2:	6828      	ldr	r0, [r5, #0]
900153c4:	f7f0 fd6a 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
900153c8:	6823      	ldr	r3, [r4, #0]
900153ca:	4605      	mov	r5, r0
900153cc:	4620      	mov	r0, r4
900153ce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900153d0:	4798      	blx	r3
900153d2:	6823      	ldr	r3, [r4, #0]
900153d4:	4680      	mov	r8, r0
900153d6:	4620      	mov	r0, r4
900153d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900153dc:	4798      	blx	r3
900153de:	ab09      	add	r3, sp, #36	@ 0x24
900153e0:	9501      	str	r5, [sp, #4]
900153e2:	9300      	str	r3, [sp, #0]
900153e4:	ab05      	add	r3, sp, #20
900153e6:	e9cd 8002 	strd	r8, r0, [sp, #8]
900153ea:	4630      	mov	r0, r6
900153ec:	e897 0006 	ldmia.w	r7, {r1, r2}
900153f0:	f7f0 fd04 	bl	90005dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900153f4:	b00e      	add	sp, #56	@ 0x38
900153f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900153fa:	bf00      	nop
900153fc:	24021928 	.word	0x24021928
90015400:	24021930 	.word	0x24021930
90015404:	24021924 	.word	0x24021924
90015408:	2402192c 	.word	0x2402192c
9001540c:	240218cc 	.word	0x240218cc

90015410 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90015410:	b570      	push	{r4, r5, r6, lr}
90015412:	6803      	ldr	r3, [r0, #0]
90015414:	4604      	mov	r4, r0
90015416:	4615      	mov	r5, r2
90015418:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001541a:	4798      	blx	r3
9001541c:	6823      	ldr	r3, [r4, #0]
9001541e:	4629      	mov	r1, r5
90015420:	4620      	mov	r0, r4
90015422:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015424:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015428:	4718      	bx	r3
	...

9001542c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
9001542c:	b538      	push	{r3, r4, r5, lr}
9001542e:	4b0e      	ldr	r3, [pc, #56]	@ (90015468 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90015430:	4604      	mov	r4, r0
90015432:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015434:	881b      	ldrh	r3, [r3, #0]
90015436:	429a      	cmp	r2, r3
90015438:	d214      	bcs.n	90015464 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001543a:	6803      	ldr	r3, [r0, #0]
9001543c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9001543e:	4798      	blx	r3
90015440:	6823      	ldr	r3, [r4, #0]
90015442:	4605      	mov	r5, r0
90015444:	4620      	mov	r0, r4
90015446:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90015448:	4798      	blx	r3
9001544a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001544e:	b22d      	sxth	r5, r5
90015450:	4601      	mov	r1, r0
90015452:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90015456:	bf06      	itte	eq
90015458:	4602      	moveq	r2, r0
9001545a:	4629      	moveq	r1, r5
9001545c:	462a      	movne	r2, r5
9001545e:	4620      	mov	r0, r4
90015460:	f7ff ffd6 	bl	90015410 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015464:	bd38      	pop	{r3, r4, r5, pc}
90015466:	bf00      	nop
90015468:	24021928 	.word	0x24021928

9001546c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
9001546c:	b530      	push	{r4, r5, lr}
9001546e:	888b      	ldrh	r3, [r1, #4]
90015470:	b085      	sub	sp, #20
90015472:	4604      	mov	r4, r0
90015474:	8583      	strh	r3, [r0, #44]	@ 0x2c
90015476:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001547a:	b923      	cbnz	r3, 90015486 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001547c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015480:	b90b      	cbnz	r3, 90015486 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015482:	f7ff ffd3 	bl	9001542c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90015486:	6823      	ldr	r3, [r4, #0]
90015488:	466d      	mov	r5, sp
9001548a:	4621      	mov	r1, r4
9001548c:	343c      	adds	r4, #60	@ 0x3c
9001548e:	4628      	mov	r0, r5
90015490:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90015494:	4798      	blx	r3
90015496:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001549a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001549e:	b005      	add	sp, #20
900154a0:	bd30      	pop	{r4, r5, pc}

900154a2 <_ZNK8touchgfx3Box12getSolidRectEv>:
900154a2:	2300      	movs	r3, #0
900154a4:	8083      	strh	r3, [r0, #4]
900154a6:	80c3      	strh	r3, [r0, #6]
900154a8:	8003      	strh	r3, [r0, #0]
900154aa:	8043      	strh	r3, [r0, #2]
900154ac:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900154b0:	2bff      	cmp	r3, #255	@ 0xff
900154b2:	bf01      	itttt	eq
900154b4:	890b      	ldrheq	r3, [r1, #8]
900154b6:	8083      	strheq	r3, [r0, #4]
900154b8:	894b      	ldrheq	r3, [r1, #10]
900154ba:	80c3      	strheq	r3, [r0, #6]
900154bc:	4770      	bx	lr
	...

900154c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900154c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900154c2:	4604      	mov	r4, r0
900154c4:	466b      	mov	r3, sp
900154c6:	6808      	ldr	r0, [r1, #0]
900154c8:	6849      	ldr	r1, [r1, #4]
900154ca:	c303      	stmia	r3!, {r0, r1}
900154cc:	6823      	ldr	r3, [r4, #0]
900154ce:	4669      	mov	r1, sp
900154d0:	4620      	mov	r0, r4
900154d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900154d4:	4798      	blx	r3
900154d6:	4b08      	ldr	r3, [pc, #32]	@ (900154f8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900154d8:	681b      	ldr	r3, [r3, #0]
900154da:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900154de:	b10a      	cbz	r2, 900154e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900154e0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900154e2:	b900      	cbnz	r0, 900154e6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900154e4:	6898      	ldr	r0, [r3, #8]
900154e6:	6803      	ldr	r3, [r0, #0]
900154e8:	4669      	mov	r1, sp
900154ea:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900154ec:	6a1d      	ldr	r5, [r3, #32]
900154ee:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
900154f2:	47a8      	blx	r5
900154f4:	b003      	add	sp, #12
900154f6:	bd30      	pop	{r4, r5, pc}
900154f8:	240218cc 	.word	0x240218cc

900154fc <_ZN8touchgfx3BoxD1Ev>:
900154fc:	4770      	bx	lr

900154fe <_ZN8touchgfx3BoxD0Ev>:
900154fe:	b510      	push	{r4, lr}
90015500:	4604      	mov	r4, r0
90015502:	212c      	movs	r1, #44	@ 0x2c
90015504:	f015 fcd4 	bl	9002aeb0 <_ZdlPvj>
90015508:	4620      	mov	r0, r4
9001550a:	bd10      	pop	{r4, pc}

9001550c <_ZNK8touchgfx3Box17invalidateContentEv>:
9001550c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90015510:	b12a      	cbz	r2, 9001551e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015512:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90015516:	b112      	cbz	r2, 9001551e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015518:	6803      	ldr	r3, [r0, #0]
9001551a:	695b      	ldr	r3, [r3, #20]
9001551c:	4718      	bx	r3
9001551e:	4770      	bx	lr

90015520 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90015520:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90015524:	4770      	bx	lr

90015526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90015526:	b570      	push	{r4, r5, r6, lr}
90015528:	880b      	ldrh	r3, [r1, #0]
9001552a:	4605      	mov	r5, r0
9001552c:	4604      	mov	r4, r0
9001552e:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90015530:	8813      	ldrh	r3, [r2, #0]
90015532:	f825 3f30 	strh.w	r3, [r5, #48]!
90015536:	4628      	mov	r0, r5
90015538:	f006 fc0c 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001553c:	4606      	mov	r6, r0
9001553e:	4628      	mov	r0, r5
90015540:	f006 fc3c 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90015544:	6823      	ldr	r3, [r4, #0]
90015546:	4605      	mov	r5, r0
90015548:	4631      	mov	r1, r6
9001554a:	4620      	mov	r0, r4
9001554c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001554e:	4798      	blx	r3
90015550:	6823      	ldr	r3, [r4, #0]
90015552:	4629      	mov	r1, r5
90015554:	4620      	mov	r0, r4
90015556:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001555c:	4718      	bx	r3

9001555e <_ZN8touchgfx14AbstractButton13executeActionEv>:
9001555e:	b510      	push	{r4, lr}
90015560:	4604      	mov	r4, r0
90015562:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90015564:	b150      	cbz	r0, 9001557c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015566:	6803      	ldr	r3, [r0, #0]
90015568:	68db      	ldr	r3, [r3, #12]
9001556a:	4798      	blx	r3
9001556c:	b130      	cbz	r0, 9001557c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001556e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90015570:	4621      	mov	r1, r4
90015572:	6803      	ldr	r3, [r0, #0]
90015574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015578:	689b      	ldr	r3, [r3, #8]
9001557a:	4718      	bx	r3
9001557c:	bd10      	pop	{r4, pc}

9001557e <_ZNK8touchgfx6Button12getSolidRectEv>:
9001557e:	b510      	push	{r4, lr}
90015580:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90015584:	4604      	mov	r4, r0
90015586:	2bff      	cmp	r3, #255	@ 0xff
90015588:	d006      	beq.n	90015598 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9001558a:	2300      	movs	r3, #0
9001558c:	8003      	strh	r3, [r0, #0]
9001558e:	8043      	strh	r3, [r0, #2]
90015590:	8083      	strh	r3, [r0, #4]
90015592:	80c3      	strh	r3, [r0, #6]
90015594:	4620      	mov	r0, r4
90015596:	bd10      	pop	{r4, pc}
90015598:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
9001559c:	b11b      	cbz	r3, 900155a6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001559e:	3130      	adds	r1, #48	@ 0x30
900155a0:	f006 fc40 	bl	9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900155a4:	e7f6      	b.n	90015594 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900155a6:	312e      	adds	r1, #46	@ 0x2e
900155a8:	e7fa      	b.n	900155a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900155ac <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900155ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900155b0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900155b4:	b08a      	sub	sp, #40	@ 0x28
900155b6:	4604      	mov	r4, r0
900155b8:	4688      	mov	r8, r1
900155ba:	2b00      	cmp	r3, #0
900155bc:	d066      	beq.n	9001568c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900155be:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
900155c0:	a805      	add	r0, sp, #20
900155c2:	f8ad 3014 	strh.w	r3, [sp, #20]
900155c6:	f006 fbc5 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
900155ca:	4607      	mov	r7, r0
900155cc:	a805      	add	r0, sp, #20
900155ce:	f006 fbf5 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
900155d2:	f9b8 6000 	ldrsh.w	r6, [r8]
900155d6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900155da:	2300      	movs	r3, #0
900155dc:	4432      	add	r2, r6
900155de:	9306      	str	r3, [sp, #24]
900155e0:	b292      	uxth	r2, r2
900155e2:	fa0f fc82 	sxth.w	ip, r2
900155e6:	459c      	cmp	ip, r3
900155e8:	dd52      	ble.n	90015690 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900155ea:	42b7      	cmp	r7, r6
900155ec:	dd50      	ble.n	90015690 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900155ee:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900155f2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900155f6:	442b      	add	r3, r5
900155f8:	b29b      	uxth	r3, r3
900155fa:	b219      	sxth	r1, r3
900155fc:	2900      	cmp	r1, #0
900155fe:	dd47      	ble.n	90015690 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015600:	42a8      	cmp	r0, r5
90015602:	dd45      	ble.n	90015690 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015604:	4567      	cmp	r7, ip
90015606:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001560a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001560e:	bfb8      	it	lt
90015610:	b2ba      	uxthlt	r2, r7
90015612:	4288      	cmp	r0, r1
90015614:	f8ad 6018 	strh.w	r6, [sp, #24]
90015618:	bfb8      	it	lt
9001561a:	b283      	uxthlt	r3, r0
9001561c:	1b92      	subs	r2, r2, r6
9001561e:	f8ad 501a 	strh.w	r5, [sp, #26]
90015622:	1b5b      	subs	r3, r3, r5
90015624:	f8ad 201c 	strh.w	r2, [sp, #28]
90015628:	f8ad 301e 	strh.w	r3, [sp, #30]
9001562c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90015630:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015634:	429a      	cmp	r2, r3
90015636:	d026      	beq.n	90015686 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015638:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001563c:	2b00      	cmp	r3, #0
9001563e:	dd22      	ble.n	90015686 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015640:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015644:	2b00      	cmp	r3, #0
90015646:	dd1e      	ble.n	90015686 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015648:	2300      	movs	r3, #0
9001564a:	a908      	add	r1, sp, #32
9001564c:	4620      	mov	r0, r4
9001564e:	e9cd 3308 	strd	r3, r3, [sp, #32]
90015652:	6823      	ldr	r3, [r4, #0]
90015654:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015656:	4798      	blx	r3
90015658:	4b0f      	ldr	r3, [pc, #60]	@ (90015698 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9001565a:	681b      	ldr	r3, [r3, #0]
9001565c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015660:	b10a      	cbz	r2, 90015666 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90015662:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015664:	b900      	cbnz	r0, 90015668 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90015666:	6898      	ldr	r0, [r3, #8]
90015668:	2501      	movs	r5, #1
9001566a:	6801      	ldr	r1, [r0, #0]
9001566c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90015670:	9502      	str	r5, [sp, #8]
90015672:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
90015676:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001567a:	9401      	str	r4, [sp, #4]
9001567c:	ac06      	add	r4, sp, #24
9001567e:	9400      	str	r4, [sp, #0]
90015680:	688c      	ldr	r4, [r1, #8]
90015682:	a905      	add	r1, sp, #20
90015684:	47a0      	blx	r4
90015686:	b00a      	add	sp, #40	@ 0x28
90015688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001568c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
9001568e:	e797      	b.n	900155c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90015690:	2300      	movs	r3, #0
90015692:	9307      	str	r3, [sp, #28]
90015694:	e7ca      	b.n	9001562c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90015696:	bf00      	nop
90015698:	240218cc 	.word	0x240218cc

9001569c <_ZNK8touchgfx6Button17invalidateContentEv>:
9001569c:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900156a0:	b12a      	cbz	r2, 900156ae <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900156a2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900156a6:	b112      	cbz	r2, 900156ae <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900156a8:	6803      	ldr	r3, [r0, #0]
900156aa:	695b      	ldr	r3, [r3, #20]
900156ac:	4718      	bx	r3
900156ae:	4770      	bx	lr

900156b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900156b0:	4b30      	ldr	r3, [pc, #192]	@ (90015774 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900156b2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900156b6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900156b8:	b08d      	sub	sp, #52	@ 0x34
900156ba:	881b      	ldrh	r3, [r3, #0]
900156bc:	4604      	mov	r4, r0
900156be:	460f      	mov	r7, r1
900156c0:	4293      	cmp	r3, r2
900156c2:	d954      	bls.n	9001576e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900156c4:	4b2c      	ldr	r3, [pc, #176]	@ (90015778 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900156c6:	6819      	ldr	r1, [r3, #0]
900156c8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
900156cc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
900156d0:	4a2a      	ldr	r2, [pc, #168]	@ (9001577c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
900156d2:	6812      	ldr	r2, [r2, #0]
900156d4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900156d8:	2900      	cmp	r1, #0
900156da:	d048      	beq.n	9001576e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900156dc:	785a      	ldrb	r2, [r3, #1]
900156de:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900156e2:	f3c2 0801 	ubfx	r8, r2, #0, #2
900156e6:	f3c2 0281 	ubfx	r2, r2, #2, #2
900156ea:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900156ee:	4b24      	ldr	r3, [pc, #144]	@ (90015780 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900156f0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
900156f4:	681a      	ldr	r2, [r3, #0]
900156f6:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
900156fa:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
900156fe:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90015702:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90015704:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90015708:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
9001570c:	9107      	str	r1, [sp, #28]
9001570e:	f88d 8020 	strb.w	r8, [sp, #32]
90015712:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90015716:	9609      	str	r6, [sp, #36]	@ 0x24
90015718:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
9001571c:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90015720:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90015724:	b10b      	cbz	r3, 9001572a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90015726:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90015728:	b905      	cbnz	r5, 9001572c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9001572a:	6895      	ldr	r5, [r2, #8]
9001572c:	ae05      	add	r6, sp, #20
9001572e:	4621      	mov	r1, r4
90015730:	4630      	mov	r0, r6
90015732:	f003 ff95 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015736:	4b13      	ldr	r3, [pc, #76]	@ (90015784 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015738:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001573a:	6818      	ldr	r0, [r3, #0]
9001573c:	f7f0 fbae 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
90015740:	6823      	ldr	r3, [r4, #0]
90015742:	4680      	mov	r8, r0
90015744:	4620      	mov	r0, r4
90015746:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015748:	4798      	blx	r3
9001574a:	6823      	ldr	r3, [r4, #0]
9001574c:	4681      	mov	r9, r0
9001574e:	4620      	mov	r0, r4
90015750:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015754:	4798      	blx	r3
90015756:	ab07      	add	r3, sp, #28
90015758:	f8cd 8004 	str.w	r8, [sp, #4]
9001575c:	9300      	str	r3, [sp, #0]
9001575e:	463b      	mov	r3, r7
90015760:	e9cd 9002 	strd	r9, r0, [sp, #8]
90015764:	4628      	mov	r0, r5
90015766:	e896 0006 	ldmia.w	r6, {r1, r2}
9001576a:	f7f0 fb47 	bl	90005dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001576e:	b00d      	add	sp, #52	@ 0x34
90015770:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015774:	24021928 	.word	0x24021928
90015778:	24021924 	.word	0x24021924
9001577c:	2402192c 	.word	0x2402192c
90015780:	240218cc 	.word	0x240218cc
90015784:	24021930 	.word	0x24021930

90015788 <_ZN8touchgfx5ImageD1Ev>:
90015788:	4770      	bx	lr

9001578a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001578a:	b570      	push	{r4, r5, r6, lr}
9001578c:	880b      	ldrh	r3, [r1, #0]
9001578e:	460d      	mov	r5, r1
90015790:	4604      	mov	r4, r0
90015792:	84c3      	strh	r3, [r0, #38]	@ 0x26
90015794:	4608      	mov	r0, r1
90015796:	f006 fadd 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001579a:	4606      	mov	r6, r0
9001579c:	4628      	mov	r0, r5
9001579e:	f006 fb0d 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
900157a2:	6823      	ldr	r3, [r4, #0]
900157a4:	4605      	mov	r5, r0
900157a6:	4631      	mov	r1, r6
900157a8:	4620      	mov	r0, r4
900157aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900157ac:	4798      	blx	r3
900157ae:	6823      	ldr	r3, [r4, #0]
900157b0:	4629      	mov	r1, r5
900157b2:	4620      	mov	r0, r4
900157b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900157b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900157ba:	4718      	bx	r3

900157bc <_ZN8touchgfx5ImageD0Ev>:
900157bc:	b510      	push	{r4, lr}
900157be:	4604      	mov	r4, r0
900157c0:	212c      	movs	r1, #44	@ 0x2c
900157c2:	f015 fb75 	bl	9002aeb0 <_ZdlPvj>
900157c6:	4620      	mov	r0, r4
900157c8:	bd10      	pop	{r4, pc}

900157ca <_ZNK8touchgfx5Image12getSolidRectEv>:
900157ca:	b510      	push	{r4, lr}
900157cc:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900157d0:	4604      	mov	r4, r0
900157d2:	2bff      	cmp	r3, #255	@ 0xff
900157d4:	d006      	beq.n	900157e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900157d6:	2300      	movs	r3, #0
900157d8:	8003      	strh	r3, [r0, #0]
900157da:	8043      	strh	r3, [r0, #2]
900157dc:	8083      	strh	r3, [r0, #4]
900157de:	80c3      	strh	r3, [r0, #6]
900157e0:	4620      	mov	r0, r4
900157e2:	bd10      	pop	{r4, pc}
900157e4:	3126      	adds	r1, #38	@ 0x26
900157e6:	f006 fb1d 	bl	9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900157ea:	e7f9      	b.n	900157e0 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900157ec <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900157ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900157f0:	4604      	mov	r4, r0
900157f2:	b088      	sub	sp, #32
900157f4:	2500      	movs	r5, #0
900157f6:	460f      	mov	r7, r1
900157f8:	f854 3b26 	ldr.w	r3, [r4], #38
900157fc:	a904      	add	r1, sp, #16
900157fe:	4606      	mov	r6, r0
90015800:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015802:	e9cd 5504 	strd	r5, r5, [sp, #16]
90015806:	4798      	blx	r3
90015808:	4620      	mov	r0, r4
9001580a:	f006 faa3 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001580e:	4680      	mov	r8, r0
90015810:	4620      	mov	r0, r4
90015812:	f006 fad3 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90015816:	9506      	str	r5, [sp, #24]
90015818:	ad06      	add	r5, sp, #24
9001581a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001581e:	4639      	mov	r1, r7
90015820:	f8ad 801c 	strh.w	r8, [sp, #28]
90015824:	4628      	mov	r0, r5
90015826:	f7fc fb55 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001582a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001582e:	2b00      	cmp	r3, #0
90015830:	dd19      	ble.n	90015866 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90015832:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015836:	2b00      	cmp	r3, #0
90015838:	dd15      	ble.n	90015866 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001583a:	4b0c      	ldr	r3, [pc, #48]	@ (9001586c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
9001583c:	681b      	ldr	r3, [r3, #0]
9001583e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015842:	b10a      	cbz	r2, 90015848 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90015844:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015846:	b900      	cbnz	r0, 9001584a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90015848:	6898      	ldr	r0, [r3, #8]
9001584a:	2701      	movs	r7, #1
9001584c:	6801      	ldr	r1, [r0, #0]
9001584e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90015852:	9702      	str	r7, [sp, #8]
90015854:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90015858:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001585c:	e9cd 5600 	strd	r5, r6, [sp]
90015860:	688d      	ldr	r5, [r1, #8]
90015862:	4621      	mov	r1, r4
90015864:	47a8      	blx	r5
90015866:	b008      	add	sp, #32
90015868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001586c:	240218cc 	.word	0x240218cc

90015870 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90015870:	4770      	bx	lr

90015872 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90015872:	b510      	push	{r4, lr}
90015874:	4604      	mov	r4, r0
90015876:	2148      	movs	r1, #72	@ 0x48
90015878:	f015 fb1a 	bl	9002aeb0 <_ZdlPvj>
9001587c:	4620      	mov	r0, r4
9001587e:	bd10      	pop	{r4, pc}

90015880 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90015880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015884:	b08d      	sub	sp, #52	@ 0x34
90015886:	4604      	mov	r4, r0
90015888:	460f      	mov	r7, r1
9001588a:	f7ff fe8f 	bl	900155ac <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001588e:	4a55      	ldr	r2, [pc, #340]	@ (900159e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90015890:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90015892:	8812      	ldrh	r2, [r2, #0]
90015894:	429a      	cmp	r2, r3
90015896:	f240 8082 	bls.w	9001599e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001589a:	4d53      	ldr	r5, [pc, #332]	@ (900159e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
9001589c:	682a      	ldr	r2, [r5, #0]
9001589e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900158a2:	4b52      	ldr	r3, [pc, #328]	@ (900159ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900158a4:	681b      	ldr	r3, [r3, #0]
900158a6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900158aa:	2200      	movs	r2, #0
900158ac:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
900158b0:	e9cd 2203 	strd	r2, r2, [sp, #12]
900158b4:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
900158b8:	2a03      	cmp	r2, #3
900158ba:	d811      	bhi.n	900158e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900158bc:	e8df f002 	tbb	[pc, r2]
900158c0:	89727902 	.word	0x89727902
900158c4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900158c8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900158cc:	1ad2      	subs	r2, r2, r3
900158ce:	2002      	movs	r0, #2
900158d0:	f8ad 1010 	strh.w	r1, [sp, #16]
900158d4:	f8ad 3012 	strh.w	r3, [sp, #18]
900158d8:	fb92 f2f0 	sdiv	r2, r2, r0
900158dc:	f8ad 200e 	strh.w	r2, [sp, #14]
900158e0:	f10d 080c 	add.w	r8, sp, #12
900158e4:	f10d 0914 	add.w	r9, sp, #20
900158e8:	e898 0003 	ldmia.w	r8, {r0, r1}
900158ec:	e889 0003 	stmia.w	r9, {r0, r1}
900158f0:	4639      	mov	r1, r7
900158f2:	4648      	mov	r0, r9
900158f4:	f7fc faee 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900158f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900158fc:	2b00      	cmp	r3, #0
900158fe:	dd4e      	ble.n	9001599e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015900:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015904:	2b00      	cmp	r3, #0
90015906:	dd4a      	ble.n	9001599e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015908:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001590c:	4641      	mov	r1, r8
9001590e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015912:	4620      	mov	r0, r4
90015914:	1a9b      	subs	r3, r3, r2
90015916:	f8bd 200e 	ldrh.w	r2, [sp, #14]
9001591a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001591e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90015922:	1a9b      	subs	r3, r3, r2
90015924:	f8ad 3016 	strh.w	r3, [sp, #22]
90015928:	6823      	ldr	r3, [r4, #0]
9001592a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001592c:	4798      	blx	r3
9001592e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90015932:	2b00      	cmp	r3, #0
90015934:	d053      	beq.n	900159de <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90015936:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90015938:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
9001593a:	682b      	ldr	r3, [r5, #0]
9001593c:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90015940:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015944:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90015948:	785b      	ldrb	r3, [r3, #1]
9001594a:	9209      	str	r2, [sp, #36]	@ 0x24
9001594c:	f3c3 0501 	ubfx	r5, r3, #0, #2
90015950:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015954:	9607      	str	r6, [sp, #28]
90015956:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
9001595a:	2300      	movs	r3, #0
9001595c:	f88d 5020 	strb.w	r5, [sp, #32]
90015960:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90015964:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90015968:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9001596c:	4b20      	ldr	r3, [pc, #128]	@ (900159f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
9001596e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90015972:	681b      	ldr	r3, [r3, #0]
90015974:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90015978:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001597c:	b10a      	cbz	r2, 90015982 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
9001597e:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90015980:	b904      	cbnz	r4, 90015984 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90015982:	689c      	ldr	r4, [r3, #8]
90015984:	4b1b      	ldr	r3, [pc, #108]	@ (900159f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90015986:	6818      	ldr	r0, [r3, #0]
90015988:	f7f0 fa88 	bl	90005e9c <_ZNK8touchgfx5Texts7getTextEt>
9001598c:	ab07      	add	r3, sp, #28
9001598e:	9001      	str	r0, [sp, #4]
90015990:	4620      	mov	r0, r4
90015992:	9300      	str	r3, [sp, #0]
90015994:	464b      	mov	r3, r9
90015996:	e898 0006 	ldmia.w	r8, {r1, r2}
9001599a:	f7f0 fa2f 	bl	90005dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001599e:	b00d      	add	sp, #52	@ 0x34
900159a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900159a4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900159a8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900159ac:	1ad2      	subs	r2, r2, r3
900159ae:	3201      	adds	r2, #1
900159b0:	e78d      	b.n	900158ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
900159b2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900159b6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
900159ba:	1ad2      	subs	r2, r2, r3
900159bc:	3201      	adds	r2, #1
900159be:	2002      	movs	r0, #2
900159c0:	f8ad 3010 	strh.w	r3, [sp, #16]
900159c4:	f8ad 1012 	strh.w	r1, [sp, #18]
900159c8:	fb92 f2f0 	sdiv	r2, r2, r0
900159cc:	f8ad 200c 	strh.w	r2, [sp, #12]
900159d0:	e786      	b.n	900158e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900159d2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900159d6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
900159da:	1ad2      	subs	r2, r2, r3
900159dc:	e7ef      	b.n	900159be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
900159de:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
900159e0:	e7aa      	b.n	90015938 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
900159e2:	bf00      	nop
900159e4:	24021928 	.word	0x24021928
900159e8:	24021924 	.word	0x24021924
900159ec:	2402192c 	.word	0x2402192c
900159f0:	240218cc 	.word	0x240218cc
900159f4:	24021930 	.word	0x24021930

900159f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
900159f8:	2101      	movs	r1, #1
900159fa:	2200      	movs	r2, #0
900159fc:	b510      	push	{r4, lr}
900159fe:	4c13      	ldr	r4, [pc, #76]	@ (90015a4c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90015a00:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90015a04:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90015a08:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90015a0c:	6004      	str	r4, [r0, #0]
90015a0e:	4c10      	ldr	r4, [pc, #64]	@ (90015a50 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90015a10:	8082      	strh	r2, [r0, #4]
90015a12:	80c2      	strh	r2, [r0, #6]
90015a14:	8102      	strh	r2, [r0, #8]
90015a16:	8142      	strh	r2, [r0, #10]
90015a18:	8182      	strh	r2, [r0, #12]
90015a1a:	81c2      	strh	r2, [r0, #14]
90015a1c:	8202      	strh	r2, [r0, #16]
90015a1e:	8242      	strh	r2, [r0, #18]
90015a20:	61c2      	str	r2, [r0, #28]
90015a22:	8402      	strh	r2, [r0, #32]
90015a24:	8442      	strh	r2, [r0, #34]	@ 0x22
90015a26:	6282      	str	r2, [r0, #40]	@ 0x28
90015a28:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90015a2c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90015a2e:	8601      	strh	r1, [r0, #48]	@ 0x30
90015a30:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90015a34:	6344      	str	r4, [r0, #52]	@ 0x34
90015a36:	8701      	strh	r1, [r0, #56]	@ 0x38
90015a38:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90015a3c:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90015a40:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015a44:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90015a48:	bd10      	pop	{r4, pc}
90015a4a:	bf00      	nop
90015a4c:	9002f7e8 	.word	0x9002f7e8
90015a50:	9002e924 	.word	0x9002e924

90015a54 <_ZN8touchgfx7OutlineD1Ev>:
90015a54:	4770      	bx	lr

90015a56 <_ZN8touchgfx7OutlineD0Ev>:
90015a56:	b510      	push	{r4, lr}
90015a58:	4604      	mov	r4, r0
90015a5a:	2130      	movs	r1, #48	@ 0x30
90015a5c:	f015 fa28 	bl	9002aeb0 <_ZdlPvj>
90015a60:	4620      	mov	r0, r4
90015a62:	bd10      	pop	{r4, pc}

90015a64 <_ZN8touchgfx7Outline5resetEv>:
90015a64:	b510      	push	{r4, lr}
90015a66:	4604      	mov	r4, r0
90015a68:	f000 fe72 	bl	90016750 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90015a6c:	60e0      	str	r0, [r4, #12]
90015a6e:	f000 fe75 	bl	9001675c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90015a72:	68e3      	ldr	r3, [r4, #12]
90015a74:	08c0      	lsrs	r0, r0, #3
90015a76:	2200      	movs	r2, #0
90015a78:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90015a7c:	6123      	str	r3, [r4, #16]
90015a7e:	3801      	subs	r0, #1
90015a80:	60a2      	str	r2, [r4, #8]
90015a82:	6060      	str	r0, [r4, #4]
90015a84:	8019      	strh	r1, [r3, #0]
90015a86:	8059      	strh	r1, [r3, #2]
90015a88:	809a      	strh	r2, [r3, #4]
90015a8a:	80da      	strh	r2, [r3, #6]
90015a8c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015a8e:	f023 0301 	bic.w	r3, r3, #1
90015a92:	f043 0302 	orr.w	r3, r3, #2
90015a96:	6263      	str	r3, [r4, #36]	@ 0x24
90015a98:	bd10      	pop	{r4, pc}
	...

90015a9c <_ZN8touchgfx7OutlineC1Ev>:
90015a9c:	4b0a      	ldr	r3, [pc, #40]	@ (90015ac8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90015a9e:	b510      	push	{r4, lr}
90015aa0:	6003      	str	r3, [r0, #0]
90015aa2:	2300      	movs	r3, #0
90015aa4:	4604      	mov	r4, r0
90015aa6:	6243      	str	r3, [r0, #36]	@ 0x24
90015aa8:	e9c0 3301 	strd	r3, r3, [r0, #4]
90015aac:	e9c0 3303 	strd	r3, r3, [r0, #12]
90015ab0:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015ab4:	e9c0 3307 	strd	r3, r3, [r0, #28]
90015ab8:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90015abc:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90015ac0:	f7ff ffd0 	bl	90015a64 <_ZN8touchgfx7Outline5resetEv>
90015ac4:	4620      	mov	r0, r4
90015ac6:	bd10      	pop	{r4, pc}
90015ac8:	9002f85c 	.word	0x9002f85c

90015acc <_ZN8touchgfx7Outline10renderLineEiiii>:
90015acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015ad0:	b093      	sub	sp, #76	@ 0x4c
90015ad2:	1156      	asrs	r6, r2, #5
90015ad4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90015ad6:	9305      	str	r3, [sp, #20]
90015ad8:	1153      	asrs	r3, r2, #5
90015ada:	f004 051f 	and.w	r5, r4, #31
90015ade:	9303      	str	r3, [sp, #12]
90015ae0:	1163      	asrs	r3, r4, #5
90015ae2:	9504      	str	r5, [sp, #16]
90015ae4:	1165      	asrs	r5, r4, #5
90015ae6:	9306      	str	r3, [sp, #24]
90015ae8:	f002 031f 	and.w	r3, r2, #31
90015aec:	42ae      	cmp	r6, r5
90015aee:	f040 80f4 	bne.w	90015cda <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90015af2:	9c04      	ldr	r4, [sp, #16]
90015af4:	9a05      	ldr	r2, [sp, #20]
90015af6:	42a3      	cmp	r3, r4
90015af8:	ea4f 1e62 	mov.w	lr, r2, asr #5
90015afc:	6902      	ldr	r2, [r0, #16]
90015afe:	d125      	bne.n	90015b4c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90015b00:	f9b2 3000 	ldrsh.w	r3, [r2]
90015b04:	459e      	cmp	lr, r3
90015b06:	d103      	bne.n	90015b10 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90015b08:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015b0c:	429e      	cmp	r6, r3
90015b0e:	d035      	beq.n	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015b10:	88d1      	ldrh	r1, [r2, #6]
90015b12:	8893      	ldrh	r3, [r2, #4]
90015b14:	430b      	orrs	r3, r1
90015b16:	d010      	beq.n	90015b3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015b18:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015b1c:	2b00      	cmp	r3, #0
90015b1e:	db0c      	blt.n	90015b3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015b20:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90015b22:	428b      	cmp	r3, r1
90015b24:	da09      	bge.n	90015b3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015b26:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015b2a:	428b      	cmp	r3, r1
90015b2c:	f103 0301 	add.w	r3, r3, #1
90015b30:	bf38      	it	cc
90015b32:	3208      	addcc	r2, #8
90015b34:	6083      	str	r3, [r0, #8]
90015b36:	bf38      	it	cc
90015b38:	6102      	strcc	r2, [r0, #16]
90015b3a:	6903      	ldr	r3, [r0, #16]
90015b3c:	9a03      	ldr	r2, [sp, #12]
90015b3e:	f8a3 e000 	strh.w	lr, [r3]
90015b42:	805a      	strh	r2, [r3, #2]
90015b44:	2200      	movs	r2, #0
90015b46:	809a      	strh	r2, [r3, #4]
90015b48:	80da      	strh	r2, [r3, #6]
90015b4a:	e017      	b.n	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015b4c:	9c05      	ldr	r4, [sp, #20]
90015b4e:	114e      	asrs	r6, r1, #5
90015b50:	f001 0c1f 	and.w	ip, r1, #31
90015b54:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90015b58:	f004 041f 	and.w	r4, r4, #31
90015b5c:	4576      	cmp	r6, lr
90015b5e:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90015b62:	9402      	str	r4, [sp, #8]
90015b64:	9c04      	ldr	r4, [sp, #16]
90015b66:	eba4 0403 	sub.w	r4, r4, r3
90015b6a:	d10a      	bne.n	90015b82 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90015b6c:	9b02      	ldr	r3, [sp, #8]
90015b6e:	44a0      	add	r8, r4
90015b70:	449c      	add	ip, r3
90015b72:	f8a2 8004 	strh.w	r8, [r2, #4]
90015b76:	fb04 a40c 	mla	r4, r4, ip, sl
90015b7a:	80d4      	strh	r4, [r2, #6]
90015b7c:	b013      	add	sp, #76	@ 0x4c
90015b7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015b82:	9d05      	ldr	r5, [sp, #20]
90015b84:	1a69      	subs	r1, r5, r1
90015b86:	bf51      	iteee	pl
90015b88:	f1cc 0520 	rsbpl	r5, ip, #32
90015b8c:	fb04 f40c 	mulmi.w	r4, r4, ip
90015b90:	4249      	negmi	r1, r1
90015b92:	2500      	movmi	r5, #0
90015b94:	bf5d      	ittte	pl
90015b96:	436c      	mulpl	r4, r5
90015b98:	2520      	movpl	r5, #32
90015b9a:	f04f 0901 	movpl.w	r9, #1
90015b9e:	f04f 39ff 	movmi.w	r9, #4294967295
90015ba2:	9501      	str	r5, [sp, #4]
90015ba4:	9f01      	ldr	r7, [sp, #4]
90015ba6:	444e      	add	r6, r9
90015ba8:	fb94 f5f1 	sdiv	r5, r4, r1
90015bac:	fb01 4415 	mls	r4, r1, r5, r4
90015bb0:	44bc      	add	ip, r7
90015bb2:	2c00      	cmp	r4, #0
90015bb4:	bfbc      	itt	lt
90015bb6:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015bba:	1864      	addlt	r4, r4, r1
90015bbc:	44a8      	add	r8, r5
90015bbe:	fb05 ac0c 	mla	ip, r5, ip, sl
90015bc2:	f8a2 8004 	strh.w	r8, [r2, #4]
90015bc6:	f8a2 c006 	strh.w	ip, [r2, #6]
90015bca:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015bce:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015bd2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90015bd6:	ea58 0202 	orrs.w	r2, r8, r2
90015bda:	d011      	beq.n	90015c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015bdc:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015be0:	f1b8 0f00 	cmp.w	r8, #0
90015be4:	db0c      	blt.n	90015c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015be6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90015be8:	4590      	cmp	r8, r2
90015bea:	da09      	bge.n	90015c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015bec:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90015bf0:	4590      	cmp	r8, r2
90015bf2:	bf3c      	itt	cc
90015bf4:	f10c 0208 	addcc.w	r2, ip, #8
90015bf8:	6102      	strcc	r2, [r0, #16]
90015bfa:	f108 0201 	add.w	r2, r8, #1
90015bfe:	6082      	str	r2, [r0, #8]
90015c00:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015c04:	2700      	movs	r7, #0
90015c06:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90015c0a:	45b6      	cmp	lr, r6
90015c0c:	f8ac 6000 	strh.w	r6, [ip]
90015c10:	442b      	add	r3, r5
90015c12:	f8ac 2002 	strh.w	r2, [ip, #2]
90015c16:	f8ac 7004 	strh.w	r7, [ip, #4]
90015c1a:	f8ac 7006 	strh.w	r7, [ip, #6]
90015c1e:	d04b      	beq.n	90015cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90015c20:	9f04      	ldr	r7, [sp, #16]
90015c22:	1a64      	subs	r4, r4, r1
90015c24:	f04f 0a00 	mov.w	sl, #0
90015c28:	1aff      	subs	r7, r7, r3
90015c2a:	443d      	add	r5, r7
90015c2c:	016d      	lsls	r5, r5, #5
90015c2e:	fb95 f8f1 	sdiv	r8, r5, r1
90015c32:	fb01 5518 	mls	r5, r1, r8, r5
90015c36:	2d00      	cmp	r5, #0
90015c38:	bfbc      	itt	lt
90015c3a:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015c3e:	186d      	addlt	r5, r5, r1
90015c40:	f108 0701 	add.w	r7, r8, #1
90015c44:	9703      	str	r7, [sp, #12]
90015c46:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015c4a:	1964      	adds	r4, r4, r5
90015c4c:	444e      	add	r6, r9
90015c4e:	bf54      	ite	pl
90015c50:	9f03      	ldrpl	r7, [sp, #12]
90015c52:	4647      	movmi	r7, r8
90015c54:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015c58:	bf58      	it	pl
90015c5a:	1a64      	subpl	r4, r4, r1
90015c5c:	443b      	add	r3, r7
90015c5e:	44bb      	add	fp, r7
90015c60:	f8ac b004 	strh.w	fp, [ip, #4]
90015c64:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015c68:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015c6c:	f8ac b006 	strh.w	fp, [ip, #6]
90015c70:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015c74:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015c78:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015c7c:	ea5b 0707 	orrs.w	r7, fp, r7
90015c80:	d011      	beq.n	90015ca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c82:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90015c86:	f1bb 0f00 	cmp.w	fp, #0
90015c8a:	db0c      	blt.n	90015ca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c8c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015c8e:	45bb      	cmp	fp, r7
90015c90:	da09      	bge.n	90015ca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c92:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015c96:	45bb      	cmp	fp, r7
90015c98:	bf3c      	itt	cc
90015c9a:	f10c 0708 	addcc.w	r7, ip, #8
90015c9e:	6107      	strcc	r7, [r0, #16]
90015ca0:	f10b 0701 	add.w	r7, fp, #1
90015ca4:	6087      	str	r7, [r0, #8]
90015ca6:	6907      	ldr	r7, [r0, #16]
90015ca8:	45b6      	cmp	lr, r6
90015caa:	803e      	strh	r6, [r7, #0]
90015cac:	807a      	strh	r2, [r7, #2]
90015cae:	f8a7 a004 	strh.w	sl, [r7, #4]
90015cb2:	f8a7 a006 	strh.w	sl, [r7, #6]
90015cb6:	d1c6      	bne.n	90015c46 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90015cb8:	9a04      	ldr	r2, [sp, #16]
90015cba:	1ad3      	subs	r3, r2, r3
90015cbc:	6902      	ldr	r2, [r0, #16]
90015cbe:	8891      	ldrh	r1, [r2, #4]
90015cc0:	88d6      	ldrh	r6, [r2, #6]
90015cc2:	4419      	add	r1, r3
90015cc4:	8091      	strh	r1, [r2, #4]
90015cc6:	9902      	ldr	r1, [sp, #8]
90015cc8:	f101 0c20 	add.w	ip, r1, #32
90015ccc:	9901      	ldr	r1, [sp, #4]
90015cce:	ebac 0c01 	sub.w	ip, ip, r1
90015cd2:	fb03 630c 	mla	r3, r3, ip, r6
90015cd6:	80d3      	strh	r3, [r2, #6]
90015cd8:	e750      	b.n	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015cda:	9d05      	ldr	r5, [sp, #20]
90015cdc:	1aa2      	subs	r2, r4, r2
90015cde:	eba5 0501 	sub.w	r5, r5, r1
90015ce2:	9202      	str	r2, [sp, #8]
90015ce4:	9508      	str	r5, [sp, #32]
90015ce6:	f140 8128 	bpl.w	90015f3a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90015cea:	9a03      	ldr	r2, [sp, #12]
90015cec:	2a00      	cmp	r2, #0
90015cee:	f6ff af45 	blt.w	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015cf2:	9a02      	ldr	r2, [sp, #8]
90015cf4:	f04f 34ff 	mov.w	r4, #4294967295
90015cf8:	4252      	negs	r2, r2
90015cfa:	940b      	str	r4, [sp, #44]	@ 0x2c
90015cfc:	2400      	movs	r4, #0
90015cfe:	9202      	str	r2, [sp, #8]
90015d00:	9a06      	ldr	r2, [sp, #24]
90015d02:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90015d06:	9206      	str	r2, [sp, #24]
90015d08:	462a      	mov	r2, r5
90015d0a:	435a      	muls	r2, r3
90015d0c:	9401      	str	r4, [sp, #4]
90015d0e:	9c02      	ldr	r4, [sp, #8]
90015d10:	9d02      	ldr	r5, [sp, #8]
90015d12:	fb92 f4f4 	sdiv	r4, r2, r4
90015d16:	fb05 2214 	mls	r2, r5, r4, r2
90015d1a:	2a00      	cmp	r2, #0
90015d1c:	9207      	str	r2, [sp, #28]
90015d1e:	bfbc      	itt	lt
90015d20:	1952      	addlt	r2, r2, r5
90015d22:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015d26:	6905      	ldr	r5, [r0, #16]
90015d28:	bfb8      	it	lt
90015d2a:	9207      	strlt	r2, [sp, #28]
90015d2c:	eb04 0901 	add.w	r9, r4, r1
90015d30:	9a01      	ldr	r2, [sp, #4]
90015d32:	ea4f 1669 	mov.w	r6, r9, asr #5
90015d36:	429a      	cmp	r2, r3
90015d38:	f040 8111 	bne.w	90015f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90015d3c:	f9b5 3000 	ldrsh.w	r3, [r5]
90015d40:	429e      	cmp	r6, r3
90015d42:	d104      	bne.n	90015d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90015d44:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015d48:	9a03      	ldr	r2, [sp, #12]
90015d4a:	429a      	cmp	r2, r3
90015d4c:	d01b      	beq.n	90015d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015d4e:	88ea      	ldrh	r2, [r5, #6]
90015d50:	88ab      	ldrh	r3, [r5, #4]
90015d52:	4313      	orrs	r3, r2
90015d54:	d010      	beq.n	90015d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015d56:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015d5a:	2a00      	cmp	r2, #0
90015d5c:	db0c      	blt.n	90015d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015d5e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015d60:	429a      	cmp	r2, r3
90015d62:	da09      	bge.n	90015d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015d64:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90015d68:	429a      	cmp	r2, r3
90015d6a:	f102 0201 	add.w	r2, r2, #1
90015d6e:	bf38      	it	cc
90015d70:	3508      	addcc	r5, #8
90015d72:	6082      	str	r2, [r0, #8]
90015d74:	bf38      	it	cc
90015d76:	6105      	strcc	r5, [r0, #16]
90015d78:	6903      	ldr	r3, [r0, #16]
90015d7a:	9a03      	ldr	r2, [sp, #12]
90015d7c:	801e      	strh	r6, [r3, #0]
90015d7e:	805a      	strh	r2, [r3, #2]
90015d80:	2200      	movs	r2, #0
90015d82:	809a      	strh	r2, [r3, #4]
90015d84:	80da      	strh	r2, [r3, #6]
90015d86:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90015d88:	9a03      	ldr	r2, [sp, #12]
90015d8a:	6901      	ldr	r1, [r0, #16]
90015d8c:	441a      	add	r2, r3
90015d8e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015d92:	42b3      	cmp	r3, r6
90015d94:	d103      	bne.n	90015d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90015d96:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90015d9a:	429a      	cmp	r2, r3
90015d9c:	d01a      	beq.n	90015dd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90015d9e:	88cc      	ldrh	r4, [r1, #6]
90015da0:	888b      	ldrh	r3, [r1, #4]
90015da2:	4323      	orrs	r3, r4
90015da4:	d010      	beq.n	90015dc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015da6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015daa:	2c00      	cmp	r4, #0
90015dac:	db0c      	blt.n	90015dc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015dae:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015db0:	429c      	cmp	r4, r3
90015db2:	da09      	bge.n	90015dc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015db4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015db8:	429c      	cmp	r4, r3
90015dba:	f104 0401 	add.w	r4, r4, #1
90015dbe:	bf38      	it	cc
90015dc0:	3108      	addcc	r1, #8
90015dc2:	6084      	str	r4, [r0, #8]
90015dc4:	bf38      	it	cc
90015dc6:	6101      	strcc	r1, [r0, #16]
90015dc8:	6903      	ldr	r3, [r0, #16]
90015dca:	2100      	movs	r1, #0
90015dcc:	801e      	strh	r6, [r3, #0]
90015dce:	805a      	strh	r2, [r3, #2]
90015dd0:	8099      	strh	r1, [r3, #4]
90015dd2:	80d9      	strh	r1, [r3, #6]
90015dd4:	9b06      	ldr	r3, [sp, #24]
90015dd6:	4293      	cmp	r3, r2
90015dd8:	f000 8082 	beq.w	90015ee0 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90015ddc:	9b08      	ldr	r3, [sp, #32]
90015dde:	9902      	ldr	r1, [sp, #8]
90015de0:	015b      	lsls	r3, r3, #5
90015de2:	9c02      	ldr	r4, [sp, #8]
90015de4:	fb93 f1f1 	sdiv	r1, r3, r1
90015de8:	fb04 3311 	mls	r3, r4, r1, r3
90015dec:	9103      	str	r1, [sp, #12]
90015dee:	2b00      	cmp	r3, #0
90015df0:	9308      	str	r3, [sp, #32]
90015df2:	da04      	bge.n	90015dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90015df4:	1e4b      	subs	r3, r1, #1
90015df6:	9303      	str	r3, [sp, #12]
90015df8:	9b08      	ldr	r3, [sp, #32]
90015dfa:	4423      	add	r3, r4
90015dfc:	9308      	str	r3, [sp, #32]
90015dfe:	9b07      	ldr	r3, [sp, #28]
90015e00:	464f      	mov	r7, r9
90015e02:	9902      	ldr	r1, [sp, #8]
90015e04:	2600      	movs	r6, #0
90015e06:	1a5b      	subs	r3, r3, r1
90015e08:	9307      	str	r3, [sp, #28]
90015e0a:	9b01      	ldr	r3, [sp, #4]
90015e0c:	f1c3 0320 	rsb	r3, r3, #32
90015e10:	930e      	str	r3, [sp, #56]	@ 0x38
90015e12:	990e      	ldr	r1, [sp, #56]	@ 0x38
90015e14:	9b01      	ldr	r3, [sp, #4]
90015e16:	1a5b      	subs	r3, r3, r1
90015e18:	930a      	str	r3, [sp, #40]	@ 0x28
90015e1a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90015e1e:	185b      	adds	r3, r3, r1
90015e20:	bf58      	it	pl
90015e22:	9902      	ldrpl	r1, [sp, #8]
90015e24:	9307      	str	r3, [sp, #28]
90015e26:	bf57      	itett	pl
90015e28:	1a5b      	subpl	r3, r3, r1
90015e2a:	9903      	ldrmi	r1, [sp, #12]
90015e2c:	9307      	strpl	r3, [sp, #28]
90015e2e:	9b03      	ldrpl	r3, [sp, #12]
90015e30:	bf58      	it	pl
90015e32:	1c59      	addpl	r1, r3, #1
90015e34:	2a00      	cmp	r2, #0
90015e36:	4489      	add	r9, r1
90015e38:	ea4f 1a69 	mov.w	sl, r9, asr #5
90015e3c:	db2e      	blt.n	90015e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015e3e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015e40:	4293      	cmp	r3, r2
90015e42:	dd2b      	ble.n	90015e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015e44:	9c01      	ldr	r4, [sp, #4]
90015e46:	6905      	ldr	r5, [r0, #16]
90015e48:	46a0      	mov	r8, r4
90015e4a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90015e4c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90015e50:	45a0      	cmp	r8, r4
90015e52:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90015e56:	f040 814c 	bne.w	900160f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90015e5a:	f9b5 1000 	ldrsh.w	r1, [r5]
90015e5e:	4551      	cmp	r1, sl
90015e60:	d103      	bne.n	90015e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90015e62:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015e66:	4291      	cmp	r1, r2
90015e68:	d018      	beq.n	90015e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015e6a:	ea5c 010e 	orrs.w	r1, ip, lr
90015e6e:	d00f      	beq.n	90015e90 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015e70:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015e74:	2900      	cmp	r1, #0
90015e76:	db0b      	blt.n	90015e90 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015e78:	428b      	cmp	r3, r1
90015e7a:	dd09      	ble.n	90015e90 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015e7c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90015e80:	4299      	cmp	r1, r3
90015e82:	f101 0101 	add.w	r1, r1, #1
90015e86:	bf38      	it	cc
90015e88:	3508      	addcc	r5, #8
90015e8a:	6081      	str	r1, [r0, #8]
90015e8c:	bf38      	it	cc
90015e8e:	6105      	strcc	r5, [r0, #16]
90015e90:	6903      	ldr	r3, [r0, #16]
90015e92:	f8a3 a000 	strh.w	sl, [r3]
90015e96:	805a      	strh	r2, [r3, #2]
90015e98:	809e      	strh	r6, [r3, #4]
90015e9a:	80de      	strh	r6, [r3, #6]
90015e9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90015e9e:	6901      	ldr	r1, [r0, #16]
90015ea0:	441a      	add	r2, r3
90015ea2:	88cc      	ldrh	r4, [r1, #6]
90015ea4:	888b      	ldrh	r3, [r1, #4]
90015ea6:	4323      	orrs	r3, r4
90015ea8:	d010      	beq.n	90015ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015eaa:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015eae:	2c00      	cmp	r4, #0
90015eb0:	db0c      	blt.n	90015ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015eb2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90015eb4:	429c      	cmp	r4, r3
90015eb6:	da09      	bge.n	90015ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015eb8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015ebc:	429c      	cmp	r4, r3
90015ebe:	f104 0401 	add.w	r4, r4, #1
90015ec2:	bf38      	it	cc
90015ec4:	3108      	addcc	r1, #8
90015ec6:	6084      	str	r4, [r0, #8]
90015ec8:	bf38      	it	cc
90015eca:	6101      	strcc	r1, [r0, #16]
90015ecc:	6903      	ldr	r3, [r0, #16]
90015ece:	464f      	mov	r7, r9
90015ed0:	f8a3 a000 	strh.w	sl, [r3]
90015ed4:	805a      	strh	r2, [r3, #2]
90015ed6:	809e      	strh	r6, [r3, #4]
90015ed8:	80de      	strh	r6, [r3, #6]
90015eda:	9b06      	ldr	r3, [sp, #24]
90015edc:	4293      	cmp	r3, r2
90015ede:	d19c      	bne.n	90015e1a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90015ee0:	9b01      	ldr	r3, [sp, #4]
90015ee2:	6907      	ldr	r7, [r0, #16]
90015ee4:	f1c3 0620 	rsb	r6, r3, #32
90015ee8:	9b05      	ldr	r3, [sp, #20]
90015eea:	ea4f 1e63 	mov.w	lr, r3, asr #5
90015eee:	9b04      	ldr	r3, [sp, #16]
90015ef0:	429e      	cmp	r6, r3
90015ef2:	f040 81c7 	bne.w	90016284 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90015ef6:	f9b7 3000 	ldrsh.w	r3, [r7]
90015efa:	459e      	cmp	lr, r3
90015efc:	d104      	bne.n	90015f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90015efe:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015f02:	429a      	cmp	r2, r3
90015f04:	f43f ae3a 	beq.w	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015f08:	88f9      	ldrh	r1, [r7, #6]
90015f0a:	88bb      	ldrh	r3, [r7, #4]
90015f0c:	430b      	orrs	r3, r1
90015f0e:	d010      	beq.n	90015f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f10:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015f14:	2b00      	cmp	r3, #0
90015f16:	db0c      	blt.n	90015f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f18:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90015f1a:	428b      	cmp	r3, r1
90015f1c:	da09      	bge.n	90015f32 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f1e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015f22:	428b      	cmp	r3, r1
90015f24:	f103 0301 	add.w	r3, r3, #1
90015f28:	bf38      	it	cc
90015f2a:	3708      	addcc	r7, #8
90015f2c:	6083      	str	r3, [r0, #8]
90015f2e:	bf38      	it	cc
90015f30:	6107      	strcc	r7, [r0, #16]
90015f32:	6903      	ldr	r3, [r0, #16]
90015f34:	f8a3 e000 	strh.w	lr, [r3]
90015f38:	e603      	b.n	90015b42 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90015f3a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90015f3c:	9c03      	ldr	r4, [sp, #12]
90015f3e:	42a2      	cmp	r2, r4
90015f40:	f6ff ae1c 	blt.w	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015f44:	9c06      	ldr	r4, [sp, #24]
90015f46:	42a2      	cmp	r2, r4
90015f48:	9c08      	ldr	r4, [sp, #32]
90015f4a:	bfbc      	itt	lt
90015f4c:	3201      	addlt	r2, #1
90015f4e:	9206      	strlt	r2, [sp, #24]
90015f50:	f1c3 0220 	rsb	r2, r3, #32
90015f54:	4362      	muls	r2, r4
90015f56:	2401      	movs	r4, #1
90015f58:	940b      	str	r4, [sp, #44]	@ 0x2c
90015f5a:	2420      	movs	r4, #32
90015f5c:	e6d6      	b.n	90015d0c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90015f5e:	ea4f 1861 	mov.w	r8, r1, asr #5
90015f62:	f009 021f 	and.w	r2, r9, #31
90015f66:	f001 011f 	and.w	r1, r1, #31
90015f6a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90015f6e:	920c      	str	r2, [sp, #48]	@ 0x30
90015f70:	45b0      	cmp	r8, r6
90015f72:	9a01      	ldr	r2, [sp, #4]
90015f74:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90015f78:	eba2 0203 	sub.w	r2, r2, r3
90015f7c:	d108      	bne.n	90015f90 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90015f7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015f80:	4496      	add	lr, r2
90015f82:	4419      	add	r1, r3
90015f84:	f8a5 e004 	strh.w	lr, [r5, #4]
90015f88:	fb02 a101 	mla	r1, r2, r1, sl
90015f8c:	80e9      	strh	r1, [r5, #6]
90015f8e:	e6fa      	b.n	90015d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015f90:	2c00      	cmp	r4, #0
90015f92:	f2c0 80a7 	blt.w	900160e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90015f96:	2701      	movs	r7, #1
90015f98:	f1c1 0c20 	rsb	ip, r1, #32
90015f9c:	970a      	str	r7, [sp, #40]	@ 0x28
90015f9e:	2720      	movs	r7, #32
90015fa0:	fb02 f20c 	mul.w	r2, r2, ip
90015fa4:	9709      	str	r7, [sp, #36]	@ 0x24
90015fa6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90015fa8:	fb92 fcf4 	sdiv	ip, r2, r4
90015fac:	fb04 221c 	mls	r2, r4, ip, r2
90015fb0:	4439      	add	r1, r7
90015fb2:	2a00      	cmp	r2, #0
90015fb4:	bfbc      	itt	lt
90015fb6:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90015fba:	1912      	addlt	r2, r2, r4
90015fbc:	fb0c a101 	mla	r1, ip, r1, sl
90015fc0:	44e6      	add	lr, ip
90015fc2:	80e9      	strh	r1, [r5, #6]
90015fc4:	990a      	ldr	r1, [sp, #40]	@ 0x28
90015fc6:	f8a5 e004 	strh.w	lr, [r5, #4]
90015fca:	eb08 0501 	add.w	r5, r8, r1
90015fce:	6901      	ldr	r1, [r0, #16]
90015fd0:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90015fd4:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90015fd8:	ea58 070e 	orrs.w	r7, r8, lr
90015fdc:	d010      	beq.n	90016000 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015fde:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90015fe2:	f1be 0f00 	cmp.w	lr, #0
90015fe6:	db0b      	blt.n	90016000 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015fe8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015fea:	45be      	cmp	lr, r7
90015fec:	da08      	bge.n	90016000 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015fee:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90015ff2:	45be      	cmp	lr, r7
90015ff4:	bf3c      	itt	cc
90015ff6:	3108      	addcc	r1, #8
90015ff8:	6101      	strcc	r1, [r0, #16]
90015ffa:	f10e 0101 	add.w	r1, lr, #1
90015ffe:	6081      	str	r1, [r0, #8]
90016000:	6901      	ldr	r1, [r0, #16]
90016002:	f04f 0e00 	mov.w	lr, #0
90016006:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001600a:	42ae      	cmp	r6, r5
9001600c:	800d      	strh	r5, [r1, #0]
9001600e:	4463      	add	r3, ip
90016010:	f8a1 8002 	strh.w	r8, [r1, #2]
90016014:	f8a1 e004 	strh.w	lr, [r1, #4]
90016018:	f8a1 e006 	strh.w	lr, [r1, #6]
9001601c:	d053      	beq.n	900160c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001601e:	9901      	ldr	r1, [sp, #4]
90016020:	1b12      	subs	r2, r2, r4
90016022:	1ac9      	subs	r1, r1, r3
90016024:	4461      	add	r1, ip
90016026:	0149      	lsls	r1, r1, #5
90016028:	fb91 fef4 	sdiv	lr, r1, r4
9001602c:	fb04 111e 	mls	r1, r4, lr, r1
90016030:	2900      	cmp	r1, #0
90016032:	bfbc      	itt	lt
90016034:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90016038:	1909      	addlt	r1, r1, r4
9001603a:	f10e 0701 	add.w	r7, lr, #1
9001603e:	970d      	str	r7, [sp, #52]	@ 0x34
90016040:	f8d0 a010 	ldr.w	sl, [r0, #16]
90016044:	1852      	adds	r2, r2, r1
90016046:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90016048:	bf54      	ite	pl
9001604a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
9001604e:	46f4      	movmi	ip, lr
90016050:	f8ba b004 	ldrh.w	fp, [sl, #4]
90016054:	bf58      	it	pl
90016056:	1b12      	subpl	r2, r2, r4
90016058:	4463      	add	r3, ip
9001605a:	443d      	add	r5, r7
9001605c:	44e3      	add	fp, ip
9001605e:	f8aa b004 	strh.w	fp, [sl, #4]
90016062:	f8ba b006 	ldrh.w	fp, [sl, #6]
90016066:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
9001606a:	f8aa b006 	strh.w	fp, [sl, #6]
9001606e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016072:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016076:	f8bc a004 	ldrh.w	sl, [ip, #4]
9001607a:	ea5b 070a 	orrs.w	r7, fp, sl
9001607e:	d014      	beq.n	900160aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016080:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016084:	f1ba 0f00 	cmp.w	sl, #0
90016088:	db0f      	blt.n	900160aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001608a:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001608c:	45ba      	cmp	sl, r7
9001608e:	da0c      	bge.n	900160aa <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016090:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90016094:	45ba      	cmp	sl, r7
90016096:	f10a 0a01 	add.w	sl, sl, #1
9001609a:	bf38      	it	cc
9001609c:	f10c 0c08 	addcc.w	ip, ip, #8
900160a0:	f8c0 a008 	str.w	sl, [r0, #8]
900160a4:	bf38      	it	cc
900160a6:	f8c0 c010 	strcc.w	ip, [r0, #16]
900160aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900160ae:	f04f 0700 	mov.w	r7, #0
900160b2:	42ae      	cmp	r6, r5
900160b4:	f8ac 5000 	strh.w	r5, [ip]
900160b8:	f8ac 8002 	strh.w	r8, [ip, #2]
900160bc:	f8ac 7004 	strh.w	r7, [ip, #4]
900160c0:	f8ac 7006 	strh.w	r7, [ip, #6]
900160c4:	d1bc      	bne.n	90016040 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900160c6:	6904      	ldr	r4, [r0, #16]
900160c8:	9a01      	ldr	r2, [sp, #4]
900160ca:	990c      	ldr	r1, [sp, #48]	@ 0x30
900160cc:	1ad3      	subs	r3, r2, r3
900160ce:	88a2      	ldrh	r2, [r4, #4]
900160d0:	3120      	adds	r1, #32
900160d2:	441a      	add	r2, r3
900160d4:	80a2      	strh	r2, [r4, #4]
900160d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900160d8:	1a89      	subs	r1, r1, r2
900160da:	88e2      	ldrh	r2, [r4, #6]
900160dc:	fb03 2301 	mla	r3, r3, r1, r2
900160e0:	80e3      	strh	r3, [r4, #6]
900160e2:	e650      	b.n	90015d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900160e4:	f04f 37ff 	mov.w	r7, #4294967295
900160e8:	434a      	muls	r2, r1
900160ea:	4264      	negs	r4, r4
900160ec:	970a      	str	r7, [sp, #40]	@ 0x28
900160ee:	2700      	movs	r7, #0
900160f0:	e758      	b.n	90015fa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900160f2:	ea4f 1867 	mov.w	r8, r7, asr #5
900160f6:	f009 031f 	and.w	r3, r9, #31
900160fa:	f007 071f 	and.w	r7, r7, #31
900160fe:	fa1f fc8c 	uxth.w	ip, ip
90016102:	45d0      	cmp	r8, sl
90016104:	930f      	str	r3, [sp, #60]	@ 0x3c
90016106:	fa1f fe8e 	uxth.w	lr, lr
9001610a:	d10a      	bne.n	90016122 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
9001610c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001610e:	449c      	add	ip, r3
90016110:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016112:	441f      	add	r7, r3
90016114:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90016116:	f8a5 c004 	strh.w	ip, [r5, #4]
9001611a:	fb03 e707 	mla	r7, r3, r7, lr
9001611e:	80ef      	strh	r7, [r5, #6]
90016120:	e6bc      	b.n	90015e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016122:	2900      	cmp	r1, #0
90016124:	f2c0 80a6 	blt.w	90016274 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90016128:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001612a:	f1c7 0320 	rsb	r3, r7, #32
9001612e:	4363      	muls	r3, r4
90016130:	2401      	movs	r4, #1
90016132:	940d      	str	r4, [sp, #52]	@ 0x34
90016134:	2420      	movs	r4, #32
90016136:	940c      	str	r4, [sp, #48]	@ 0x30
90016138:	fb93 f4f1 	sdiv	r4, r3, r1
9001613c:	fb01 3b14 	mls	fp, r1, r4, r3
90016140:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016142:	f1bb 0f00 	cmp.w	fp, #0
90016146:	441f      	add	r7, r3
90016148:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001614a:	bfbc      	itt	lt
9001614c:	f104 34ff 	addlt.w	r4, r4, #4294967295
90016150:	448b      	addlt	fp, r1
90016152:	fb04 e707 	mla	r7, r4, r7, lr
90016156:	44a4      	add	ip, r4
90016158:	80ef      	strh	r7, [r5, #6]
9001615a:	f8a5 c004 	strh.w	ip, [r5, #4]
9001615e:	eb08 0503 	add.w	r5, r8, r3
90016162:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016166:	f8bc e006 	ldrh.w	lr, [ip, #6]
9001616a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001616e:	ea5e 0307 	orrs.w	r3, lr, r7
90016172:	d011      	beq.n	90016198 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016174:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90016178:	f1be 0f00 	cmp.w	lr, #0
9001617c:	db0c      	blt.n	90016198 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001617e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016180:	45be      	cmp	lr, r7
90016182:	da09      	bge.n	90016198 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016184:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016188:	45be      	cmp	lr, r7
9001618a:	bf3c      	itt	cc
9001618c:	f10c 0708 	addcc.w	r7, ip, #8
90016190:	6107      	strcc	r7, [r0, #16]
90016192:	f10e 0701 	add.w	r7, lr, #1
90016196:	6087      	str	r7, [r0, #8]
90016198:	6907      	ldr	r7, [r0, #16]
9001619a:	b213      	sxth	r3, r2
9001619c:	4555      	cmp	r5, sl
9001619e:	9310      	str	r3, [sp, #64]	@ 0x40
900161a0:	807b      	strh	r3, [r7, #2]
900161a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900161a4:	803d      	strh	r5, [r7, #0]
900161a6:	80be      	strh	r6, [r7, #4]
900161a8:	eb04 0c03 	add.w	ip, r4, r3
900161ac:	80fe      	strh	r6, [r7, #6]
900161ae:	d050      	beq.n	90016252 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900161b0:	9b01      	ldr	r3, [sp, #4]
900161b2:	eba3 070c 	sub.w	r7, r3, ip
900161b6:	ebab 0301 	sub.w	r3, fp, r1
900161ba:	443c      	add	r4, r7
900161bc:	9309      	str	r3, [sp, #36]	@ 0x24
900161be:	0164      	lsls	r4, r4, #5
900161c0:	fb94 f8f1 	sdiv	r8, r4, r1
900161c4:	fb01 4418 	mls	r4, r1, r8, r4
900161c8:	2c00      	cmp	r4, #0
900161ca:	bfbc      	itt	lt
900161cc:	f108 38ff 	addlt.w	r8, r8, #4294967295
900161d0:	1864      	addlt	r4, r4, r1
900161d2:	f108 0701 	add.w	r7, r8, #1
900161d6:	9711      	str	r7, [sp, #68]	@ 0x44
900161d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900161da:	f8d0 e010 	ldr.w	lr, [r0, #16]
900161de:	191b      	adds	r3, r3, r4
900161e0:	f8be b004 	ldrh.w	fp, [lr, #4]
900161e4:	bf54      	ite	pl
900161e6:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900161e8:	4647      	movmi	r7, r8
900161ea:	9309      	str	r3, [sp, #36]	@ 0x24
900161ec:	bf58      	it	pl
900161ee:	1a5b      	subpl	r3, r3, r1
900161f0:	44bb      	add	fp, r7
900161f2:	44bc      	add	ip, r7
900161f4:	bf58      	it	pl
900161f6:	9309      	strpl	r3, [sp, #36]	@ 0x24
900161f8:	f8ae b004 	strh.w	fp, [lr, #4]
900161fc:	f8be b006 	ldrh.w	fp, [lr, #6]
90016200:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016204:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90016206:	f8ae b006 	strh.w	fp, [lr, #6]
9001620a:	443d      	add	r5, r7
9001620c:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016210:	f8be b006 	ldrh.w	fp, [lr, #6]
90016214:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016218:	ea5b 0307 	orrs.w	r3, fp, r7
9001621c:	d011      	beq.n	90016242 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001621e:	f9be b002 	ldrsh.w	fp, [lr, #2]
90016222:	f1bb 0f00 	cmp.w	fp, #0
90016226:	db0c      	blt.n	90016242 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016228:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001622a:	45bb      	cmp	fp, r7
9001622c:	da09      	bge.n	90016242 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001622e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90016232:	45bb      	cmp	fp, r7
90016234:	bf3c      	itt	cc
90016236:	f10e 0708 	addcc.w	r7, lr, #8
9001623a:	6107      	strcc	r7, [r0, #16]
9001623c:	f10b 0701 	add.w	r7, fp, #1
90016240:	6087      	str	r7, [r0, #8]
90016242:	6907      	ldr	r7, [r0, #16]
90016244:	4555      	cmp	r5, sl
90016246:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90016248:	803d      	strh	r5, [r7, #0]
9001624a:	807b      	strh	r3, [r7, #2]
9001624c:	80be      	strh	r6, [r7, #4]
9001624e:	80fe      	strh	r6, [r7, #6]
90016250:	d1c2      	bne.n	900161d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90016252:	9b01      	ldr	r3, [sp, #4]
90016254:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90016256:	eba3 0c0c 	sub.w	ip, r3, ip
9001625a:	6903      	ldr	r3, [r0, #16]
9001625c:	3720      	adds	r7, #32
9001625e:	8899      	ldrh	r1, [r3, #4]
90016260:	4461      	add	r1, ip
90016262:	8099      	strh	r1, [r3, #4]
90016264:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016266:	1a7f      	subs	r7, r7, r1
90016268:	88d9      	ldrh	r1, [r3, #6]
9001626a:	fb0c 1c07 	mla	ip, ip, r7, r1
9001626e:	f8a3 c006 	strh.w	ip, [r3, #6]
90016272:	e613      	b.n	90015e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016274:	f04f 34ff 	mov.w	r4, #4294967295
90016278:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001627a:	4249      	negs	r1, r1
9001627c:	940d      	str	r4, [sp, #52]	@ 0x34
9001627e:	2400      	movs	r4, #0
90016280:	437b      	muls	r3, r7
90016282:	e758      	b.n	90016136 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90016284:	9905      	ldr	r1, [sp, #20]
90016286:	ea4f 1b69 	mov.w	fp, r9, asr #5
9001628a:	f009 0c1f 	and.w	ip, r9, #31
9001628e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90016292:	f001 011f 	and.w	r1, r1, #31
90016296:	45f3      	cmp	fp, lr
90016298:	f8b7 a006 	ldrh.w	sl, [r7, #6]
9001629c:	9102      	str	r1, [sp, #8]
9001629e:	9904      	ldr	r1, [sp, #16]
900162a0:	eba1 0406 	sub.w	r4, r1, r6
900162a4:	d108      	bne.n	900162b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900162a6:	9b02      	ldr	r3, [sp, #8]
900162a8:	44a0      	add	r8, r4
900162aa:	449c      	add	ip, r3
900162ac:	f8a7 8004 	strh.w	r8, [r7, #4]
900162b0:	fb04 a40c 	mla	r4, r4, ip, sl
900162b4:	80fc      	strh	r4, [r7, #6]
900162b6:	e461      	b.n	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900162b8:	9905      	ldr	r1, [sp, #20]
900162ba:	ebb1 0109 	subs.w	r1, r1, r9
900162be:	bf51      	iteee	pl
900162c0:	f1cc 0520 	rsbpl	r5, ip, #32
900162c4:	fb04 f40c 	mulmi.w	r4, r4, ip
900162c8:	4249      	negmi	r1, r1
900162ca:	2500      	movmi	r5, #0
900162cc:	bf5d      	ittte	pl
900162ce:	436c      	mulpl	r4, r5
900162d0:	2520      	movpl	r5, #32
900162d2:	f04f 0901 	movpl.w	r9, #1
900162d6:	f04f 39ff 	movmi.w	r9, #4294967295
900162da:	9501      	str	r5, [sp, #4]
900162dc:	9b01      	ldr	r3, [sp, #4]
900162de:	fb94 f5f1 	sdiv	r5, r4, r1
900162e2:	fb01 4415 	mls	r4, r1, r5, r4
900162e6:	449c      	add	ip, r3
900162e8:	eb0b 0309 	add.w	r3, fp, r9
900162ec:	2c00      	cmp	r4, #0
900162ee:	bfbc      	itt	lt
900162f0:	f105 35ff 	addlt.w	r5, r5, #4294967295
900162f4:	1864      	addlt	r4, r4, r1
900162f6:	44a8      	add	r8, r5
900162f8:	fb05 ac0c 	mla	ip, r5, ip, sl
900162fc:	f8a7 8004 	strh.w	r8, [r7, #4]
90016300:	f8a7 c006 	strh.w	ip, [r7, #6]
90016304:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016308:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001630c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016310:	ea58 0707 	orrs.w	r7, r8, r7
90016314:	d011      	beq.n	9001633a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016316:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001631a:	f1b8 0f00 	cmp.w	r8, #0
9001631e:	db0c      	blt.n	9001633a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016320:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016322:	45b8      	cmp	r8, r7
90016324:	da09      	bge.n	9001633a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016326:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
9001632a:	45b8      	cmp	r8, r7
9001632c:	bf3c      	itt	cc
9001632e:	f10c 0708 	addcc.w	r7, ip, #8
90016332:	6107      	strcc	r7, [r0, #16]
90016334:	f108 0701 	add.w	r7, r8, #1
90016338:	6087      	str	r7, [r0, #8]
9001633a:	6907      	ldr	r7, [r0, #16]
9001633c:	f04f 0c00 	mov.w	ip, #0
90016340:	b212      	sxth	r2, r2
90016342:	459e      	cmp	lr, r3
90016344:	803b      	strh	r3, [r7, #0]
90016346:	442e      	add	r6, r5
90016348:	807a      	strh	r2, [r7, #2]
9001634a:	f8a7 c004 	strh.w	ip, [r7, #4]
9001634e:	f8a7 c006 	strh.w	ip, [r7, #6]
90016352:	d04b      	beq.n	900163ec <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90016354:	9f04      	ldr	r7, [sp, #16]
90016356:	1a64      	subs	r4, r4, r1
90016358:	f04f 0a00 	mov.w	sl, #0
9001635c:	1bbf      	subs	r7, r7, r6
9001635e:	443d      	add	r5, r7
90016360:	016d      	lsls	r5, r5, #5
90016362:	fb95 f8f1 	sdiv	r8, r5, r1
90016366:	fb01 5518 	mls	r5, r1, r8, r5
9001636a:	4565      	cmp	r5, ip
9001636c:	bfbc      	itt	lt
9001636e:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016372:	186d      	addlt	r5, r5, r1
90016374:	f108 0701 	add.w	r7, r8, #1
90016378:	9703      	str	r7, [sp, #12]
9001637a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001637e:	1964      	adds	r4, r4, r5
90016380:	444b      	add	r3, r9
90016382:	bf54      	ite	pl
90016384:	9f03      	ldrpl	r7, [sp, #12]
90016386:	4647      	movmi	r7, r8
90016388:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001638c:	bf58      	it	pl
9001638e:	1a64      	subpl	r4, r4, r1
90016390:	443e      	add	r6, r7
90016392:	44bb      	add	fp, r7
90016394:	f8ac b004 	strh.w	fp, [ip, #4]
90016398:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001639c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900163a0:	f8ac b006 	strh.w	fp, [ip, #6]
900163a4:	f8d0 c010 	ldr.w	ip, [r0, #16]
900163a8:	f8bc b006 	ldrh.w	fp, [ip, #6]
900163ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900163b0:	ea5b 0707 	orrs.w	r7, fp, r7
900163b4:	d011      	beq.n	900163da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900163b6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900163ba:	f1bb 0f00 	cmp.w	fp, #0
900163be:	db0c      	blt.n	900163da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900163c0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900163c2:	45bb      	cmp	fp, r7
900163c4:	da09      	bge.n	900163da <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900163c6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900163ca:	45bb      	cmp	fp, r7
900163cc:	bf3c      	itt	cc
900163ce:	f10c 0708 	addcc.w	r7, ip, #8
900163d2:	6107      	strcc	r7, [r0, #16]
900163d4:	f10b 0701 	add.w	r7, fp, #1
900163d8:	6087      	str	r7, [r0, #8]
900163da:	6907      	ldr	r7, [r0, #16]
900163dc:	459e      	cmp	lr, r3
900163de:	803b      	strh	r3, [r7, #0]
900163e0:	807a      	strh	r2, [r7, #2]
900163e2:	f8a7 a004 	strh.w	sl, [r7, #4]
900163e6:	f8a7 a006 	strh.w	sl, [r7, #6]
900163ea:	d1c6      	bne.n	9001637a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900163ec:	9b04      	ldr	r3, [sp, #16]
900163ee:	1b9e      	subs	r6, r3, r6
900163f0:	6903      	ldr	r3, [r0, #16]
900163f2:	889a      	ldrh	r2, [r3, #4]
900163f4:	4432      	add	r2, r6
900163f6:	809a      	strh	r2, [r3, #4]
900163f8:	9a02      	ldr	r2, [sp, #8]
900163fa:	f102 0c20 	add.w	ip, r2, #32
900163fe:	9a01      	ldr	r2, [sp, #4]
90016400:	ebac 0c02 	sub.w	ip, ip, r2
90016404:	88da      	ldrh	r2, [r3, #6]
90016406:	fb06 260c 	mla	r6, r6, ip, r2
9001640a:	80de      	strh	r6, [r3, #6]
9001640c:	f7ff bbb6 	b.w	90015b7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016410 <_ZN8touchgfx7Outline6lineToEii>:
90016410:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90016412:	079b      	lsls	r3, r3, #30
90016414:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90016416:	460e      	mov	r6, r1
90016418:	4615      	mov	r5, r2
9001641a:	d511      	bpl.n	90016440 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001641c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90016420:	ea86 0701 	eor.w	r7, r6, r1
90016424:	ea85 0302 	eor.w	r3, r5, r2
90016428:	433b      	orrs	r3, r7
9001642a:	d009      	beq.n	90016440 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001642c:	4633      	mov	r3, r6
9001642e:	9500      	str	r5, [sp, #0]
90016430:	f7ff fb4c 	bl	90015acc <_ZN8touchgfx7Outline10renderLineEiiii>
90016434:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90016436:	f043 0301 	orr.w	r3, r3, #1
9001643a:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001643e:	6243      	str	r3, [r0, #36]	@ 0x24
90016440:	b003      	add	sp, #12
90016442:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016444 <_ZN8touchgfx7Outline6moveToEii>:
90016444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016446:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90016448:	4615      	mov	r5, r2
9001644a:	4604      	mov	r4, r0
9001644c:	460e      	mov	r6, r1
9001644e:	079a      	lsls	r2, r3, #30
90016450:	d401      	bmi.n	90016456 <_ZN8touchgfx7Outline6moveToEii+0x12>
90016452:	f7ff fb07 	bl	90015a64 <_ZN8touchgfx7Outline5resetEv>
90016456:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016458:	07db      	lsls	r3, r3, #31
9001645a:	d504      	bpl.n	90016466 <_ZN8touchgfx7Outline6moveToEii+0x22>
9001645c:	4620      	mov	r0, r4
9001645e:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90016462:	f7ff ffd5 	bl	90016410 <_ZN8touchgfx7Outline6lineToEii>
90016466:	6923      	ldr	r3, [r4, #16]
90016468:	1170      	asrs	r0, r6, #5
9001646a:	1169      	asrs	r1, r5, #5
9001646c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016470:	4290      	cmp	r0, r2
90016472:	d103      	bne.n	9001647c <_ZN8touchgfx7Outline6moveToEii+0x38>
90016474:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016478:	4291      	cmp	r1, r2
9001647a:	d01a      	beq.n	900164b2 <_ZN8touchgfx7Outline6moveToEii+0x6e>
9001647c:	88df      	ldrh	r7, [r3, #6]
9001647e:	889a      	ldrh	r2, [r3, #4]
90016480:	433a      	orrs	r2, r7
90016482:	d010      	beq.n	900164a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016484:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016488:	2a00      	cmp	r2, #0
9001648a:	db0c      	blt.n	900164a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001648c:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
9001648e:	42ba      	cmp	r2, r7
90016490:	da09      	bge.n	900164a6 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016492:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90016496:	42ba      	cmp	r2, r7
90016498:	f102 0201 	add.w	r2, r2, #1
9001649c:	bf38      	it	cc
9001649e:	3308      	addcc	r3, #8
900164a0:	60a2      	str	r2, [r4, #8]
900164a2:	bf38      	it	cc
900164a4:	6123      	strcc	r3, [r4, #16]
900164a6:	6923      	ldr	r3, [r4, #16]
900164a8:	2200      	movs	r2, #0
900164aa:	8018      	strh	r0, [r3, #0]
900164ac:	8059      	strh	r1, [r3, #2]
900164ae:	809a      	strh	r2, [r3, #4]
900164b0:	80da      	strh	r2, [r3, #6]
900164b2:	6166      	str	r6, [r4, #20]
900164b4:	6225      	str	r5, [r4, #32]
900164b6:	e9c4 5606 	strd	r5, r6, [r4, #24]
900164ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900164bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900164bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900164c0:	b0d0      	sub	sp, #320	@ 0x140
900164c2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900164c6:	466c      	mov	r4, sp
900164c8:	4627      	mov	r7, r4
900164ca:	1a0d      	subs	r5, r1, r0
900164cc:	f100 0308 	add.w	r3, r0, #8
900164d0:	2d48      	cmp	r5, #72	@ 0x48
900164d2:	f340 80d5 	ble.w	90016680 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900164d6:	112d      	asrs	r5, r5, #4
900164d8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900164dc:	f9b0 9000 	ldrsh.w	r9, [r0]
900164e0:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900164e4:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900164e8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900164ec:	6816      	ldr	r6, [r2, #0]
900164ee:	6006      	str	r6, [r0, #0]
900164f0:	6856      	ldr	r6, [r2, #4]
900164f2:	6046      	str	r6, [r0, #4]
900164f4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900164f8:	f8a2 8002 	strh.w	r8, [r2, #2]
900164fc:	f8a2 e004 	strh.w	lr, [r2, #4]
90016500:	f8a2 c006 	strh.w	ip, [r2, #6]
90016504:	f1a1 0208 	sub.w	r2, r1, #8
90016508:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001650c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016510:	4565      	cmp	r5, ip
90016512:	db06      	blt.n	90016522 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90016514:	d119      	bne.n	9001654a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016516:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001651a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001651e:	42ae      	cmp	r6, r5
90016520:	dd13      	ble.n	9001654a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016522:	460e      	mov	r6, r1
90016524:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90016528:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
9001652c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90016530:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90016534:	601d      	str	r5, [r3, #0]
90016536:	6875      	ldr	r5, [r6, #4]
90016538:	605d      	str	r5, [r3, #4]
9001653a:	f821 9c08 	strh.w	r9, [r1, #-8]
9001653e:	f821 cc06 	strh.w	ip, [r1, #-6]
90016542:	f821 8c04 	strh.w	r8, [r1, #-4]
90016546:	f821 ec02 	strh.w	lr, [r1, #-2]
9001654a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001654e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90016552:	42ae      	cmp	r6, r5
90016554:	db06      	blt.n	90016564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90016556:	d116      	bne.n	90016586 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016558:	f9b0 c000 	ldrsh.w	ip, [r0]
9001655c:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90016560:	45ac      	cmp	ip, r5
90016562:	da10      	bge.n	90016586 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016564:	681d      	ldr	r5, [r3, #0]
90016566:	f9b0 8000 	ldrsh.w	r8, [r0]
9001656a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001656e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90016572:	6005      	str	r5, [r0, #0]
90016574:	685d      	ldr	r5, [r3, #4]
90016576:	f8a0 8008 	strh.w	r8, [r0, #8]
9001657a:	6045      	str	r5, [r0, #4]
9001657c:	8146      	strh	r6, [r0, #10]
9001657e:	f8a0 e00c 	strh.w	lr, [r0, #12]
90016582:	f8a0 c00e 	strh.w	ip, [r0, #14]
90016586:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001658a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001658e:	4565      	cmp	r5, ip
90016590:	db06      	blt.n	900165a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90016592:	d119      	bne.n	900165c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016594:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016598:	f9b0 5000 	ldrsh.w	r5, [r0]
9001659c:	42ae      	cmp	r6, r5
9001659e:	da13      	bge.n	900165c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900165a0:	460e      	mov	r6, r1
900165a2:	f9b0 9000 	ldrsh.w	r9, [r0]
900165a6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900165aa:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900165ae:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900165b2:	6005      	str	r5, [r0, #0]
900165b4:	6875      	ldr	r5, [r6, #4]
900165b6:	6045      	str	r5, [r0, #4]
900165b8:	f821 9c08 	strh.w	r9, [r1, #-8]
900165bc:	f821 cc06 	strh.w	ip, [r1, #-6]
900165c0:	f821 8c04 	strh.w	r8, [r1, #-4]
900165c4:	f821 ec02 	strh.w	lr, [r1, #-2]
900165c8:	3308      	adds	r3, #8
900165ca:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900165ce:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900165d2:	45e6      	cmp	lr, ip
900165d4:	dbf8      	blt.n	900165c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900165d6:	d105      	bne.n	900165e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900165d8:	f9b3 6000 	ldrsh.w	r6, [r3]
900165dc:	f9b0 5000 	ldrsh.w	r5, [r0]
900165e0:	42ae      	cmp	r6, r5
900165e2:	dbf1      	blt.n	900165c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900165e4:	4615      	mov	r5, r2
900165e6:	3a08      	subs	r2, #8
900165e8:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900165ec:	45b4      	cmp	ip, r6
900165ee:	dbf9      	blt.n	900165e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900165f0:	d105      	bne.n	900165fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900165f2:	f9b0 8000 	ldrsh.w	r8, [r0]
900165f6:	f9b2 6000 	ldrsh.w	r6, [r2]
900165fa:	45b0      	cmp	r8, r6
900165fc:	dbf2      	blt.n	900165e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900165fe:	4293      	cmp	r3, r2
90016600:	f1a5 0608 	sub.w	r6, r5, #8
90016604:	d816      	bhi.n	90016634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90016606:	f8d6 c000 	ldr.w	ip, [r6]
9001660a:	f9b3 a000 	ldrsh.w	sl, [r3]
9001660e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90016612:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90016616:	f8c3 c000 	str.w	ip, [r3]
9001661a:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001661e:	f8c3 c004 	str.w	ip, [r3, #4]
90016622:	f825 ac08 	strh.w	sl, [r5, #-8]
90016626:	f825 ec06 	strh.w	lr, [r5, #-6]
9001662a:	f825 9c04 	strh.w	r9, [r5, #-4]
9001662e:	f825 8c02 	strh.w	r8, [r5, #-2]
90016632:	e7c9      	b.n	900165c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016634:	f8d6 e000 	ldr.w	lr, [r6]
90016638:	f9b0 a000 	ldrsh.w	sl, [r0]
9001663c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90016640:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90016644:	f8c0 e000 	str.w	lr, [r0]
90016648:	f8d6 e004 	ldr.w	lr, [r6, #4]
9001664c:	1a16      	subs	r6, r2, r0
9001664e:	f8c0 e004 	str.w	lr, [r0, #4]
90016652:	f825 ac08 	strh.w	sl, [r5, #-8]
90016656:	f825 cc06 	strh.w	ip, [r5, #-6]
9001665a:	f825 9c04 	strh.w	r9, [r5, #-4]
9001665e:	f825 8c02 	strh.w	r8, [r5, #-2]
90016662:	1acd      	subs	r5, r1, r3
90016664:	10ed      	asrs	r5, r5, #3
90016666:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
9001666a:	bfb5      	itete	lt
9001666c:	e9c4 0200 	strdlt	r0, r2, [r4]
90016670:	e9c4 3100 	strdge	r3, r1, [r4]
90016674:	460a      	movlt	r2, r1
90016676:	4603      	movge	r3, r0
90016678:	3408      	adds	r4, #8
9001667a:	4618      	mov	r0, r3
9001667c:	4611      	mov	r1, r2
9001667e:	e724      	b.n	900164ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016680:	4299      	cmp	r1, r3
90016682:	d927      	bls.n	900166d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90016684:	f1a3 0210 	sub.w	r2, r3, #16
90016688:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
9001668c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016690:	45ac      	cmp	ip, r5
90016692:	db06      	blt.n	900166a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90016694:	d11c      	bne.n	900166d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016696:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001669a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001669e:	42ae      	cmp	r6, r5
900166a0:	da16      	bge.n	900166d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900166a2:	4615      	mov	r5, r2
900166a4:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900166a8:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900166ac:	3a08      	subs	r2, #8
900166ae:	f855 6f08 	ldr.w	r6, [r5, #8]!
900166b2:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900166b6:	6196      	str	r6, [r2, #24]
900166b8:	42a8      	cmp	r0, r5
900166ba:	686e      	ldr	r6, [r5, #4]
900166bc:	f8a2 9010 	strh.w	r9, [r2, #16]
900166c0:	61d6      	str	r6, [r2, #28]
900166c2:	f8a2 c012 	strh.w	ip, [r2, #18]
900166c6:	f8a2 8014 	strh.w	r8, [r2, #20]
900166ca:	f8a2 e016 	strh.w	lr, [r2, #22]
900166ce:	d1db      	bne.n	90016688 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900166d0:	3308      	adds	r3, #8
900166d2:	e7d5      	b.n	90016680 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900166d4:	42bc      	cmp	r4, r7
900166d6:	d903      	bls.n	900166e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900166d8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900166dc:	3c08      	subs	r4, #8
900166de:	e6f4      	b.n	900164ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900166e0:	b050      	add	sp, #320	@ 0x140
900166e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900166e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900166e6:	b510      	push	{r4, lr}
900166e8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900166ea:	4604      	mov	r4, r0
900166ec:	07da      	lsls	r2, r3, #31
900166ee:	d507      	bpl.n	90016700 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900166f0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900166f4:	f7ff fe8c 	bl	90016410 <_ZN8touchgfx7Outline6lineToEii>
900166f8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900166fa:	f023 0301 	bic.w	r3, r3, #1
900166fe:	6243      	str	r3, [r0, #36]	@ 0x24
90016700:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016702:	079b      	lsls	r3, r3, #30
90016704:	d521      	bpl.n	9001674a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90016706:	6923      	ldr	r3, [r4, #16]
90016708:	88d9      	ldrh	r1, [r3, #6]
9001670a:	889a      	ldrh	r2, [r3, #4]
9001670c:	430a      	orrs	r2, r1
9001670e:	d010      	beq.n	90016732 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016710:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016714:	2a00      	cmp	r2, #0
90016716:	db0c      	blt.n	90016732 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016718:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9001671a:	428a      	cmp	r2, r1
9001671c:	da09      	bge.n	90016732 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001671e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90016722:	4291      	cmp	r1, r2
90016724:	f102 0201 	add.w	r2, r2, #1
90016728:	bf88      	it	hi
9001672a:	3308      	addhi	r3, #8
9001672c:	60a2      	str	r2, [r4, #8]
9001672e:	bf88      	it	hi
90016730:	6123      	strhi	r3, [r4, #16]
90016732:	68a1      	ldr	r1, [r4, #8]
90016734:	b129      	cbz	r1, 90016742 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016736:	6863      	ldr	r3, [r4, #4]
90016738:	4299      	cmp	r1, r3
9001673a:	d802      	bhi.n	90016742 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001673c:	68e0      	ldr	r0, [r4, #12]
9001673e:	f7ff febd 	bl	900164bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90016742:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016744:	f023 0302 	bic.w	r3, r3, #2
90016748:	6263      	str	r3, [r4, #36]	@ 0x24
9001674a:	68e0      	ldr	r0, [r4, #12]
9001674c:	bd10      	pop	{r4, pc}
	...

90016750 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90016750:	4b01      	ldr	r3, [pc, #4]	@ (90016758 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90016752:	6818      	ldr	r0, [r3, #0]
90016754:	4770      	bx	lr
90016756:	bf00      	nop
90016758:	240218d4 	.word	0x240218d4

9001675c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
9001675c:	4b01      	ldr	r3, [pc, #4]	@ (90016764 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001675e:	6818      	ldr	r0, [r3, #0]
90016760:	4770      	bx	lr
90016762:	bf00      	nop
90016764:	240218d8 	.word	0x240218d8

90016768 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016768:	b510      	push	{r4, lr}
9001676a:	6803      	ldr	r3, [r0, #0]
9001676c:	460c      	mov	r4, r1
9001676e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016770:	4798      	blx	r3
90016772:	1b03      	subs	r3, r0, r4
90016774:	4258      	negs	r0, r3
90016776:	4158      	adcs	r0, r3
90016778:	bd10      	pop	{r4, pc}
	...

9001677c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
9001677c:	4b01      	ldr	r3, [pc, #4]	@ (90016784 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
9001677e:	6019      	str	r1, [r3, #0]
90016780:	4770      	bx	lr
90016782:	bf00      	nop
90016784:	240218dc 	.word	0x240218dc

90016788 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001678c:	4696      	mov	lr, r2
9001678e:	b097      	sub	sp, #92	@ 0x5c
90016790:	4605      	mov	r5, r0
90016792:	4614      	mov	r4, r2
90016794:	460e      	mov	r6, r1
90016796:	461f      	mov	r7, r3
90016798:	f10d 0c1c 	add.w	ip, sp, #28
9001679c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
900167a0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
900167a4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
900167a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900167ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167b0:	f8de 3000 	ldr.w	r3, [lr]
900167b4:	f104 0e14 	add.w	lr, r4, #20
900167b8:	f8cc 3000 	str.w	r3, [ip]
900167bc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900167c0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900167c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167c8:	f8de 3000 	ldr.w	r3, [lr]
900167cc:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900167d0:	f8cc 3000 	str.w	r3, [ip]
900167d4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900167d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900167dc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167e0:	f8de 3000 	ldr.w	r3, [lr]
900167e4:	4631      	mov	r1, r6
900167e6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900167e8:	4628      	mov	r0, r5
900167ea:	f8cc 3000 	str.w	r3, [ip]
900167ee:	682b      	ldr	r3, [r5, #0]
900167f0:	9201      	str	r2, [sp, #4]
900167f2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900167f4:	f8cd 8008 	str.w	r8, [sp, #8]
900167f8:	9200      	str	r2, [sp, #0]
900167fa:	aa07      	add	r2, sp, #28
900167fc:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016800:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90016804:	463b      	mov	r3, r7
90016806:	47d8      	blx	fp
90016808:	46a6      	mov	lr, r4
9001680a:	f10d 0c1c 	add.w	ip, sp, #28
9001680e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016812:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016816:	f8de 3000 	ldr.w	r3, [lr]
9001681a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001681e:	343c      	adds	r4, #60	@ 0x3c
90016820:	f8cc 3000 	str.w	r3, [ip]
90016824:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016828:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001682c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016830:	f8de 3000 	ldr.w	r3, [lr]
90016834:	f8cc 3000 	str.w	r3, [ip]
90016838:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
9001683c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001683e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016842:	6823      	ldr	r3, [r4, #0]
90016844:	4631      	mov	r1, r6
90016846:	4628      	mov	r0, r5
90016848:	f8cc 3000 	str.w	r3, [ip]
9001684c:	682b      	ldr	r3, [r5, #0]
9001684e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90016852:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90016854:	f8cd 8008 	str.w	r8, [sp, #8]
90016858:	9201      	str	r2, [sp, #4]
9001685a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001685c:	9200      	str	r2, [sp, #0]
9001685e:	aa07      	add	r2, sp, #28
90016860:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90016862:	463b      	mov	r3, r7
90016864:	47a0      	blx	r4
90016866:	b017      	add	sp, #92	@ 0x5c
90016868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001686c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
9001686c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016870:	b08d      	sub	sp, #52	@ 0x34
90016872:	4688      	mov	r8, r1
90016874:	f8d3 c000 	ldr.w	ip, [r3]
90016878:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001687a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
9001687e:	680f      	ldr	r7, [r1, #0]
90016880:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90016884:	eba7 070c 	sub.w	r7, r7, ip
90016888:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
9001688c:	edd3 6a07 	vldr	s13, [r3, #28]
90016890:	42bc      	cmp	r4, r7
90016892:	9918      	ldr	r1, [sp, #96]	@ 0x60
90016894:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90016898:	bfa8      	it	ge
9001689a:	463c      	movge	r4, r7
9001689c:	f9b1 9000 	ldrsh.w	r9, [r1]
900168a0:	f9ba 1000 	ldrsh.w	r1, [sl]
900168a4:	ee07 4a90 	vmov	s15, r4
900168a8:	eb09 0e0c 	add.w	lr, r9, ip
900168ac:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
900168b0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900168b4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
900168b8:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
900168bc:	4571      	cmp	r1, lr
900168be:	ee25 4a04 	vmul.f32	s8, s10, s8
900168c2:	ee65 4a24 	vmul.f32	s9, s10, s9
900168c6:	ee25 5a27 	vmul.f32	s10, s10, s15
900168ca:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
900168ce:	ee71 0aa4 	vadd.f32	s1, s3, s9
900168d2:	ee32 1a05 	vadd.f32	s2, s4, s10
900168d6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900168da:	ee36 0a84 	vadd.f32	s0, s13, s8
900168de:	ee61 1a87 	vmul.f32	s3, s3, s14
900168e2:	ee22 2a07 	vmul.f32	s4, s4, s14
900168e6:	f340 808c 	ble.w	90016a02 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
900168ea:	eba1 060e 	sub.w	r6, r1, lr
900168ee:	fb96 f5f4 	sdiv	r5, r6, r4
900168f2:	ee07 5a10 	vmov	s14, r5
900168f6:	2d00      	cmp	r5, #0
900168f8:	fb04 6615 	mls	r6, r4, r5, r6
900168fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90016900:	eea7 0a04 	vfma.f32	s0, s14, s8
90016904:	eee7 0a24 	vfma.f32	s1, s14, s9
90016908:	eea7 1a05 	vfma.f32	s2, s14, s10
9001690c:	dd12      	ble.n	90016934 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001690e:	ee70 6a44 	vsub.f32	s13, s0, s8
90016912:	ee70 1ae4 	vsub.f32	s3, s1, s9
90016916:	ee31 2a45 	vsub.f32	s4, s2, s10
9001691a:	eef5 6a40 	vcmp.f32	s13, #0.0
9001691e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016922:	bf14      	ite	ne
90016924:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90016928:	eeb0 7a67 	vmoveq.f32	s14, s15
9001692c:	ee61 1a87 	vmul.f32	s3, s3, s14
90016930:	ee22 2a07 	vmul.f32	s4, s4, s14
90016934:	fb05 f204 	mul.w	r2, r5, r4
90016938:	1abf      	subs	r7, r7, r2
9001693a:	4494      	add	ip, r2
9001693c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90016940:	4411      	add	r1, r2
90016942:	eb09 020c 	add.w	r2, r9, ip
90016946:	b209      	sxth	r1, r1
90016948:	443a      	add	r2, r7
9001694a:	428a      	cmp	r2, r1
9001694c:	bfc4      	itt	gt
9001694e:	eba1 0209 	subgt.w	r2, r1, r9
90016952:	eba2 070c 	subgt.w	r7, r2, ip
90016956:	2f00      	cmp	r7, #0
90016958:	dd50      	ble.n	900169fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9001695a:	fb97 f1f4 	sdiv	r1, r7, r4
9001695e:	fb04 7211 	mls	r2, r4, r1, r7
90016962:	b90a      	cbnz	r2, 90016968 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90016964:	3901      	subs	r1, #1
90016966:	4622      	mov	r2, r4
90016968:	eec7 3a80 	vdiv.f32	s7, s15, s0
9001696c:	6840      	ldr	r0, [r0, #4]
9001696e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90016972:	44b6      	add	lr, r6
90016974:	f8d0 a000 	ldr.w	sl, [r0]
90016978:	2900      	cmp	r1, #0
9001697a:	bfcc      	ite	gt
9001697c:	46a1      	movgt	r9, r4
9001697e:	4691      	movle	r9, r2
90016980:	900b      	str	r0, [sp, #44]	@ 0x2c
90016982:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90016984:	fb04 e505 	mla	r5, r4, r5, lr
90016988:	eef0 6a42 	vmov.f32	s13, s4
9001698c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90016990:	9008      	str	r0, [sp, #32]
90016992:	eeb0 7a61 	vmov.f32	s14, s3
90016996:	9818      	ldr	r0, [sp, #96]	@ 0x60
90016998:	695b      	ldr	r3, [r3, #20]
9001699a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001699e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
900169a2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
900169a6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900169a8:	445b      	add	r3, fp
900169aa:	9307      	str	r3, [sp, #28]
900169ac:	ee16 3a90 	vmov	r3, s13
900169b0:	e9cd 8505 	strd	r8, r5, [sp, #20]
900169b4:	ee60 2aa3 	vmul.f32	s5, s1, s7
900169b8:	ee21 3a23 	vmul.f32	s6, s2, s7
900169bc:	ee72 7ae1 	vsub.f32	s15, s5, s3
900169c0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900169c4:	ee17 7a90 	vmov	r7, s15
900169c8:	ee73 7a42 	vsub.f32	s15, s6, s4
900169cc:	fb97 f7f4 	sdiv	r7, r7, r4
900169d0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900169d4:	ee17 ca90 	vmov	ip, s15
900169d8:	fb9c fcf4 	sdiv	ip, ip, r4
900169dc:	fb0c 3306 	mla	r3, ip, r6, r3
900169e0:	9302      	str	r3, [sp, #8]
900169e2:	ee17 3a10 	vmov	r3, s14
900169e6:	e9cd 7c03 	strd	r7, ip, [sp, #12]
900169ea:	fb07 3706 	mla	r7, r7, r6, r3
900169ee:	eba9 0306 	sub.w	r3, r9, r6
900169f2:	e9cd 4700 	strd	r4, r7, [sp]
900169f6:	f8da 4008 	ldr.w	r4, [sl, #8]
900169fa:	47a0      	blx	r4
900169fc:	b00d      	add	sp, #52	@ 0x34
900169fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016a02:	2500      	movs	r5, #0
90016a04:	462e      	mov	r6, r5
90016a06:	e799      	b.n	9001693c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90016a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016a0c:	b0db      	sub	sp, #364	@ 0x16c
90016a0e:	461d      	mov	r5, r3
90016a10:	4614      	mov	r4, r2
90016a12:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90016a16:	910f      	str	r1, [sp, #60]	@ 0x3c
90016a18:	4629      	mov	r1, r5
90016a1a:	930a      	str	r3, [sp, #40]	@ 0x28
90016a1c:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90016a20:	9009      	str	r0, [sp, #36]	@ 0x24
90016a22:	930b      	str	r3, [sp, #44]	@ 0x2c
90016a24:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90016a28:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90016a2c:	9310      	str	r3, [sp, #64]	@ 0x40
90016a2e:	6803      	ldr	r3, [r0, #0]
90016a30:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90016a32:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90016a36:	47b8      	blx	r7
90016a38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016a3a:	6058      	str	r0, [r3, #4]
90016a3c:	2800      	cmp	r0, #0
90016a3e:	f000 83a1 	beq.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a42:	682b      	ldr	r3, [r5, #0]
90016a44:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90016a48:	ed94 7a02 	vldr	s14, [r4, #8]
90016a4c:	9314      	str	r3, [sp, #80]	@ 0x50
90016a4e:	686b      	ldr	r3, [r5, #4]
90016a50:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016a54:	9315      	str	r3, [sp, #84]	@ 0x54
90016a56:	4bc1      	ldr	r3, [pc, #772]	@ (90016d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90016a58:	7819      	ldrb	r1, [r3, #0]
90016a5a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90016a5e:	2900      	cmp	r1, #0
90016a60:	bf16      	itet	ne
90016a62:	4619      	movne	r1, r3
90016a64:	4611      	moveq	r1, r2
90016a66:	4613      	movne	r3, r2
90016a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a6c:	9116      	str	r1, [sp, #88]	@ 0x58
90016a6e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90016a72:	f240 8387 	bls.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a76:	ed94 7a07 	vldr	s14, [r4, #28]
90016a7a:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a82:	f240 837f 	bls.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a86:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90016a8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016a8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a92:	f240 8377 	bls.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a96:	6822      	ldr	r2, [r4, #0]
90016a98:	4bb1      	ldr	r3, [pc, #708]	@ (90016d60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90016a9a:	429a      	cmp	r2, r3
90016a9c:	f2c0 8372 	blt.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016aa0:	49b0      	ldr	r1, [pc, #704]	@ (90016d64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90016aa2:	6963      	ldr	r3, [r4, #20]
90016aa4:	428a      	cmp	r2, r1
90016aa6:	f300 836d 	bgt.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016aaa:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90016aae:	48ae      	ldr	r0, [pc, #696]	@ (90016d68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90016ab0:	33ff      	adds	r3, #255	@ 0xff
90016ab2:	4283      	cmp	r3, r0
90016ab4:	f200 8366 	bhi.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016ab8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90016aba:	4dac      	ldr	r5, [pc, #688]	@ (90016d6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90016abc:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90016ac0:	33ff      	adds	r3, #255	@ 0xff
90016ac2:	42ab      	cmp	r3, r5
90016ac4:	f200 835e 	bhi.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016ac8:	6862      	ldr	r2, [r4, #4]
90016aca:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90016ace:	33ff      	adds	r3, #255	@ 0xff
90016ad0:	4283      	cmp	r3, r0
90016ad2:	f200 8357 	bhi.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016ad6:	69a1      	ldr	r1, [r4, #24]
90016ad8:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90016adc:	33ff      	adds	r3, #255	@ 0xff
90016ade:	4283      	cmp	r3, r0
90016ae0:	f200 8350 	bhi.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016ae4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016ae6:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90016aea:	30ff      	adds	r0, #255	@ 0xff
90016aec:	42a8      	cmp	r0, r5
90016aee:	f200 8349 	bhi.w	90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016af2:	428a      	cmp	r2, r1
90016af4:	f280 8110 	bge.w	90016d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90016af8:	429a      	cmp	r2, r3
90016afa:	f300 8119 	bgt.w	90016d30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90016afe:	4299      	cmp	r1, r3
90016b00:	f280 811d 	bge.w	90016d3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90016b04:	2502      	movs	r5, #2
90016b06:	2701      	movs	r7, #1
90016b08:	46a9      	mov	r9, r5
90016b0a:	46b8      	mov	r8, r7
90016b0c:	f04f 0a00 	mov.w	sl, #0
90016b10:	4621      	mov	r1, r4
90016b12:	a849      	add	r0, sp, #292	@ 0x124
90016b14:	f004 fadc 	bl	9001b0d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90016b18:	4622      	mov	r2, r4
90016b1a:	4653      	mov	r3, sl
90016b1c:	a949      	add	r1, sp, #292	@ 0x124
90016b1e:	f8cd 9000 	str.w	r9, [sp]
90016b22:	a819      	add	r0, sp, #100	@ 0x64
90016b24:	f004 fc04 	bl	9001b330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016b28:	4622      	mov	r2, r4
90016b2a:	4653      	mov	r3, sl
90016b2c:	a949      	add	r1, sp, #292	@ 0x124
90016b2e:	f8cd 8000 	str.w	r8, [sp]
90016b32:	a829      	add	r0, sp, #164	@ 0xa4
90016b34:	f004 fbfc 	bl	9001b330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016b38:	4643      	mov	r3, r8
90016b3a:	4622      	mov	r2, r4
90016b3c:	a949      	add	r1, sp, #292	@ 0x124
90016b3e:	f8cd 9000 	str.w	r9, [sp]
90016b42:	a839      	add	r0, sp, #228	@ 0xe4
90016b44:	f004 fbf4 	bl	9001b330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016b48:	42af      	cmp	r7, r5
90016b4a:	af12      	add	r7, sp, #72	@ 0x48
90016b4c:	bfb7      	itett	lt
90016b4e:	2300      	movlt	r3, #0
90016b50:	2301      	movge	r3, #1
90016b52:	ad29      	addlt	r5, sp, #164	@ 0xa4
90016b54:	ac19      	addlt	r4, sp, #100	@ 0x64
90016b56:	bfb1      	iteee	lt
90016b58:	930e      	strlt	r3, [sp, #56]	@ 0x38
90016b5a:	ad19      	addge	r5, sp, #100	@ 0x64
90016b5c:	930e      	strge	r3, [sp, #56]	@ 0x38
90016b5e:	ac29      	addge	r4, sp, #164	@ 0xa4
90016b60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016b62:	e893 0003 	ldmia.w	r3, {r0, r1}
90016b66:	e887 0003 	stmia.w	r7, {r0, r1}
90016b6a:	b928      	cbnz	r0, 90016b78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90016b6c:	4b80      	ldr	r3, [pc, #512]	@ (90016d70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90016b6e:	6818      	ldr	r0, [r3, #0]
90016b70:	6803      	ldr	r3, [r0, #0]
90016b72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016b74:	4798      	blx	r3
90016b76:	6038      	str	r0, [r7, #0]
90016b78:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016b7a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016b7e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016b82:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90016b84:	930c      	str	r3, [sp, #48]	@ 0x30
90016b86:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016b88:	6963      	ldr	r3, [r4, #20]
90016b8a:	440b      	add	r3, r1
90016b8c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016b90:	4408      	add	r0, r1
90016b92:	b200      	sxth	r0, r0
90016b94:	4283      	cmp	r3, r0
90016b96:	900d      	str	r0, [sp, #52]	@ 0x34
90016b98:	f280 80dd 	bge.w	90016d56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90016b9c:	428b      	cmp	r3, r1
90016b9e:	da08      	bge.n	90016bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016ba0:	2a00      	cmp	r2, #0
90016ba2:	dd06      	ble.n	90016bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016ba4:	1acb      	subs	r3, r1, r3
90016ba6:	429a      	cmp	r2, r3
90016ba8:	f2c0 80e4 	blt.w	90016d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90016bac:	2b00      	cmp	r3, #0
90016bae:	f300 80e2 	bgt.w	90016d76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90016bb2:	6967      	ldr	r7, [r4, #20]
90016bb4:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90016bb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016bba:	443b      	add	r3, r7
90016bbc:	461f      	mov	r7, r3
90016bbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016bc0:	1bdf      	subs	r7, r3, r7
90016bc2:	4297      	cmp	r7, r2
90016bc4:	bfa8      	it	ge
90016bc6:	4617      	movge	r7, r2
90016bc8:	2f00      	cmp	r7, #0
90016bca:	f340 8166 	ble.w	90016e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90016bce:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016bd0:	6829      	ldr	r1, [r5, #0]
90016bd2:	f9b3 2000 	ldrsh.w	r2, [r3]
90016bd6:	f9bb 3000 	ldrsh.w	r3, [fp]
90016bda:	4411      	add	r1, r2
90016bdc:	6820      	ldr	r0, [r4, #0]
90016bde:	4299      	cmp	r1, r3
90016be0:	dd1a      	ble.n	90016c18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016be2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016be6:	4402      	add	r2, r0
90016be8:	440b      	add	r3, r1
90016bea:	b21b      	sxth	r3, r3
90016bec:	429a      	cmp	r2, r3
90016bee:	dc13      	bgt.n	90016c18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016bf0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016bf2:	a912      	add	r1, sp, #72	@ 0x48
90016bf4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016bf6:	9809      	ldr	r0, [sp, #36]	@ 0x24
90016bf8:	681b      	ldr	r3, [r3, #0]
90016bfa:	9206      	str	r2, [sp, #24]
90016bfc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90016bfe:	9500      	str	r5, [sp, #0]
90016c00:	9205      	str	r2, [sp, #20]
90016c02:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90016c04:	e9cd b203 	strd	fp, r2, [sp, #12]
90016c08:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90016c0a:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016c0e:	aa49      	add	r2, sp, #292	@ 0x124
90016c10:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90016c14:	4623      	mov	r3, r4
90016c16:	47c8      	blx	r9
90016c18:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90016c1c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90016c20:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90016c24:	ee37 7a27 	vadd.f32	s14, s14, s15
90016c28:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90016c2c:	68a1      	ldr	r1, [r4, #8]
90016c2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016c32:	ed94 6a08 	vldr	s12, [r4, #32]
90016c36:	edd4 6a07 	vldr	s13, [r4, #28]
90016c3a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016c3e:	ee76 6a86 	vadd.f32	s13, s13, s12
90016c42:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016c46:	e9d4 2300 	ldrd	r2, r3, [r4]
90016c4a:	edc4 6a07 	vstr	s13, [r4, #28]
90016c4e:	441a      	add	r2, r3
90016c50:	6963      	ldr	r3, [r4, #20]
90016c52:	3301      	adds	r3, #1
90016c54:	6022      	str	r2, [r4, #0]
90016c56:	6163      	str	r3, [r4, #20]
90016c58:	69a3      	ldr	r3, [r4, #24]
90016c5a:	3b01      	subs	r3, #1
90016c5c:	61a3      	str	r3, [r4, #24]
90016c5e:	6923      	ldr	r3, [r4, #16]
90016c60:	440b      	add	r3, r1
90016c62:	68e1      	ldr	r1, [r4, #12]
90016c64:	428b      	cmp	r3, r1
90016c66:	6123      	str	r3, [r4, #16]
90016c68:	db15      	blt.n	90016c96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90016c6a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90016c6e:	3201      	adds	r2, #1
90016c70:	1a5b      	subs	r3, r3, r1
90016c72:	ee76 6a26 	vadd.f32	s13, s12, s13
90016c76:	6022      	str	r2, [r4, #0]
90016c78:	6123      	str	r3, [r4, #16]
90016c7a:	edc4 6a07 	vstr	s13, [r4, #28]
90016c7e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90016c82:	ee36 7a87 	vadd.f32	s14, s13, s14
90016c86:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016c8a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90016c8e:	ee77 7a27 	vadd.f32	s15, s14, s15
90016c92:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016c96:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90016c9a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90016c9e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90016ca2:	ee37 7a27 	vadd.f32	s14, s14, s15
90016ca6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90016caa:	68a9      	ldr	r1, [r5, #8]
90016cac:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016cb0:	ed95 6a08 	vldr	s12, [r5, #32]
90016cb4:	edd5 6a07 	vldr	s13, [r5, #28]
90016cb8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016cbc:	ee76 6a86 	vadd.f32	s13, s13, s12
90016cc0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016cc4:	e9d5 2300 	ldrd	r2, r3, [r5]
90016cc8:	edc5 6a07 	vstr	s13, [r5, #28]
90016ccc:	441a      	add	r2, r3
90016cce:	696b      	ldr	r3, [r5, #20]
90016cd0:	3301      	adds	r3, #1
90016cd2:	602a      	str	r2, [r5, #0]
90016cd4:	616b      	str	r3, [r5, #20]
90016cd6:	69ab      	ldr	r3, [r5, #24]
90016cd8:	3b01      	subs	r3, #1
90016cda:	61ab      	str	r3, [r5, #24]
90016cdc:	692b      	ldr	r3, [r5, #16]
90016cde:	440b      	add	r3, r1
90016ce0:	68e9      	ldr	r1, [r5, #12]
90016ce2:	428b      	cmp	r3, r1
90016ce4:	612b      	str	r3, [r5, #16]
90016ce6:	db15      	blt.n	90016d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90016ce8:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90016cec:	3201      	adds	r2, #1
90016cee:	1a5b      	subs	r3, r3, r1
90016cf0:	ee76 6a26 	vadd.f32	s13, s12, s13
90016cf4:	602a      	str	r2, [r5, #0]
90016cf6:	612b      	str	r3, [r5, #16]
90016cf8:	edc5 6a07 	vstr	s13, [r5, #28]
90016cfc:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90016d00:	ee36 7a87 	vadd.f32	s14, s13, s14
90016d04:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016d08:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90016d0c:	ee77 7a27 	vadd.f32	s15, s14, s15
90016d10:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016d14:	3f01      	subs	r7, #1
90016d16:	e757      	b.n	90016bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90016d18:	4299      	cmp	r1, r3
90016d1a:	dc13      	bgt.n	90016d44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90016d1c:	429a      	cmp	r2, r3
90016d1e:	da14      	bge.n	90016d4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90016d20:	2502      	movs	r5, #2
90016d22:	2703      	movs	r7, #3
90016d24:	f04f 0800 	mov.w	r8, #0
90016d28:	46a9      	mov	r9, r5
90016d2a:	f04f 0a01 	mov.w	sl, #1
90016d2e:	e6ef      	b.n	90016b10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016d30:	2501      	movs	r5, #1
90016d32:	2700      	movs	r7, #0
90016d34:	46a9      	mov	r9, r5
90016d36:	46b8      	mov	r8, r7
90016d38:	f04f 0a02 	mov.w	sl, #2
90016d3c:	e6e8      	b.n	90016b10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016d3e:	2501      	movs	r5, #1
90016d40:	2702      	movs	r7, #2
90016d42:	e6e1      	b.n	90016b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90016d44:	2500      	movs	r5, #0
90016d46:	2701      	movs	r7, #1
90016d48:	e7f4      	b.n	90016d34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90016d4a:	2702      	movs	r7, #2
90016d4c:	2503      	movs	r5, #3
90016d4e:	f04f 0900 	mov.w	r9, #0
90016d52:	46b8      	mov	r8, r7
90016d54:	e7e9      	b.n	90016d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90016d56:	4613      	mov	r3, r2
90016d58:	e728      	b.n	90016bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90016d5a:	bf00      	nop
90016d5c:	240218c4 	.word	0x240218c4
90016d60:	fffd8f01 	.word	0xfffd8f01
90016d64:	00027100 	.word	0x00027100
90016d68:	0004e1ff 	.word	0x0004e1ff
90016d6c:	0004e1fe 	.word	0x0004e1fe
90016d70:	240218cc 	.word	0x240218cc
90016d74:	4613      	mov	r3, r2
90016d76:	992b      	ldr	r1, [sp, #172]	@ 0xac
90016d78:	469e      	mov	lr, r3
90016d7a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90016d7c:	469c      	mov	ip, r3
90016d7e:	9111      	str	r1, [sp, #68]	@ 0x44
90016d80:	f04f 0900 	mov.w	r9, #0
90016d84:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90016d88:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90016d8c:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90016d90:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90016d94:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90016d98:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90016d9c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90016da0:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90016da4:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90016da8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90016dac:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90016db0:	f1bc 0f00 	cmp.w	ip, #0
90016db4:	d147      	bne.n	90016e46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90016db6:	eb03 0c07 	add.w	ip, r3, r7
90016dba:	1ad7      	subs	r7, r2, r3
90016dbc:	f1b9 0f00 	cmp.w	r9, #0
90016dc0:	d009      	beq.n	90016dd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90016dc2:	9029      	str	r0, [sp, #164]	@ 0xa4
90016dc4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90016dc8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90016dcc:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90016dd0:	912d      	str	r1, [sp, #180]	@ 0xb4
90016dd2:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90016dd6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90016dd8:	f04f 0800 	mov.w	r8, #0
90016ddc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90016de0:	9111      	str	r1, [sp, #68]	@ 0x44
90016de2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90016de6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90016dea:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90016dee:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90016df2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90016df6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90016dfa:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90016dfe:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90016e02:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90016e06:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90016e0a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90016e0e:	f1be 0f00 	cmp.w	lr, #0
90016e12:	d031      	beq.n	90016e78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90016e14:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90016e16:	4450      	add	r0, sl
90016e18:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016e1c:	4431      	add	r1, r6
90016e1e:	ee37 7a04 	vadd.f32	s14, s14, s8
90016e22:	ee77 7aa3 	vadd.f32	s15, s15, s7
90016e26:	4549      	cmp	r1, r9
90016e28:	db08      	blt.n	90016e3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90016e2a:	ee77 7a85 	vadd.f32	s15, s15, s10
90016e2e:	3001      	adds	r0, #1
90016e30:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016e34:	eba1 0109 	sub.w	r1, r1, r9
90016e38:	ee37 7a06 	vadd.f32	s14, s14, s12
90016e3c:	f10e 3eff 	add.w	lr, lr, #4294967295
90016e40:	f04f 0801 	mov.w	r8, #1
90016e44:	e7e3      	b.n	90016e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90016e46:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90016e48:	4450      	add	r0, sl
90016e4a:	ee37 7a24 	vadd.f32	s14, s14, s9
90016e4e:	4431      	add	r1, r6
90016e50:	ee77 7a84 	vadd.f32	s15, s15, s8
90016e54:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016e58:	4541      	cmp	r1, r8
90016e5a:	db08      	blt.n	90016e6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90016e5c:	ee76 6a85 	vadd.f32	s13, s13, s10
90016e60:	3001      	adds	r0, #1
90016e62:	ee37 7a25 	vadd.f32	s14, s14, s11
90016e66:	eba1 0108 	sub.w	r1, r1, r8
90016e6a:	ee77 7a86 	vadd.f32	s15, s15, s12
90016e6e:	f10c 3cff 	add.w	ip, ip, #4294967295
90016e72:	f04f 0901 	mov.w	r9, #1
90016e76:	e79b      	b.n	90016db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90016e78:	449c      	add	ip, r3
90016e7a:	1aff      	subs	r7, r7, r3
90016e7c:	f1b8 0f00 	cmp.w	r8, #0
90016e80:	d009      	beq.n	90016e96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90016e82:	9019      	str	r0, [sp, #100]	@ 0x64
90016e84:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90016e88:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90016e8c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90016e90:	911d      	str	r1, [sp, #116]	@ 0x74
90016e92:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90016e96:	1ad2      	subs	r2, r2, r3
90016e98:	e68b      	b.n	90016bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016e9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90016e9c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90016e9e:	2b00      	cmp	r3, #0
90016ea0:	f000 80d1 	beq.w	90017046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90016ea4:	ad19      	add	r5, sp, #100	@ 0x64
90016ea6:	ac39      	add	r4, sp, #228	@ 0xe4
90016ea8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016eaa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016eae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016eb2:	930c      	str	r3, [sp, #48]	@ 0x30
90016eb4:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016eb6:	6963      	ldr	r3, [r4, #20]
90016eb8:	440b      	add	r3, r1
90016eba:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016ebe:	4408      	add	r0, r1
90016ec0:	b200      	sxth	r0, r0
90016ec2:	4283      	cmp	r3, r0
90016ec4:	900d      	str	r0, [sp, #52]	@ 0x34
90016ec6:	f280 80c1 	bge.w	9001704c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90016eca:	428b      	cmp	r3, r1
90016ecc:	da08      	bge.n	90016ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016ece:	2a00      	cmp	r2, #0
90016ed0:	dd06      	ble.n	90016ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016ed2:	1acb      	subs	r3, r1, r3
90016ed4:	429a      	cmp	r2, r3
90016ed6:	f2c0 80bb 	blt.w	90017050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90016eda:	2b00      	cmp	r3, #0
90016edc:	f300 80b9 	bgt.w	90017052 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90016ee0:	6967      	ldr	r7, [r4, #20]
90016ee2:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90016ee6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016ee8:	443b      	add	r3, r7
90016eea:	461f      	mov	r7, r3
90016eec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016eee:	1bdf      	subs	r7, r3, r7
90016ef0:	4297      	cmp	r7, r2
90016ef2:	bfa8      	it	ge
90016ef4:	4617      	movge	r7, r2
90016ef6:	2f00      	cmp	r7, #0
90016ef8:	f340 813c 	ble.w	90017174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90016efc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90016efe:	6829      	ldr	r1, [r5, #0]
90016f00:	f9b3 2000 	ldrsh.w	r2, [r3]
90016f04:	f9bb 3000 	ldrsh.w	r3, [fp]
90016f08:	4411      	add	r1, r2
90016f0a:	6820      	ldr	r0, [r4, #0]
90016f0c:	4299      	cmp	r1, r3
90016f0e:	dd1a      	ble.n	90016f46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016f10:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016f14:	4402      	add	r2, r0
90016f16:	440b      	add	r3, r1
90016f18:	b21b      	sxth	r3, r3
90016f1a:	429a      	cmp	r2, r3
90016f1c:	dc13      	bgt.n	90016f46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016f1e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90016f20:	a912      	add	r1, sp, #72	@ 0x48
90016f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016f24:	9809      	ldr	r0, [sp, #36]	@ 0x24
90016f26:	681b      	ldr	r3, [r3, #0]
90016f28:	9206      	str	r2, [sp, #24]
90016f2a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90016f2c:	9500      	str	r5, [sp, #0]
90016f2e:	9205      	str	r2, [sp, #20]
90016f30:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90016f32:	e9cd b203 	strd	fp, r2, [sp, #12]
90016f36:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90016f38:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016f3c:	aa49      	add	r2, sp, #292	@ 0x124
90016f3e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90016f42:	4623      	mov	r3, r4
90016f44:	47c8      	blx	r9
90016f46:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90016f4a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90016f4e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90016f52:	ee37 7a27 	vadd.f32	s14, s14, s15
90016f56:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90016f5a:	68a1      	ldr	r1, [r4, #8]
90016f5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016f60:	ed94 6a08 	vldr	s12, [r4, #32]
90016f64:	edd4 6a07 	vldr	s13, [r4, #28]
90016f68:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016f6c:	ee76 6a86 	vadd.f32	s13, s13, s12
90016f70:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016f74:	e9d4 2300 	ldrd	r2, r3, [r4]
90016f78:	edc4 6a07 	vstr	s13, [r4, #28]
90016f7c:	441a      	add	r2, r3
90016f7e:	6963      	ldr	r3, [r4, #20]
90016f80:	3301      	adds	r3, #1
90016f82:	6022      	str	r2, [r4, #0]
90016f84:	6163      	str	r3, [r4, #20]
90016f86:	69a3      	ldr	r3, [r4, #24]
90016f88:	3b01      	subs	r3, #1
90016f8a:	61a3      	str	r3, [r4, #24]
90016f8c:	6923      	ldr	r3, [r4, #16]
90016f8e:	440b      	add	r3, r1
90016f90:	68e1      	ldr	r1, [r4, #12]
90016f92:	428b      	cmp	r3, r1
90016f94:	6123      	str	r3, [r4, #16]
90016f96:	db15      	blt.n	90016fc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90016f98:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90016f9c:	3201      	adds	r2, #1
90016f9e:	1a5b      	subs	r3, r3, r1
90016fa0:	ee76 6a26 	vadd.f32	s13, s12, s13
90016fa4:	6022      	str	r2, [r4, #0]
90016fa6:	6123      	str	r3, [r4, #16]
90016fa8:	edc4 6a07 	vstr	s13, [r4, #28]
90016fac:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90016fb0:	ee36 7a87 	vadd.f32	s14, s13, s14
90016fb4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90016fb8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90016fbc:	ee77 7a27 	vadd.f32	s15, s14, s15
90016fc0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90016fc4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90016fc8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90016fcc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90016fd0:	ee37 7a27 	vadd.f32	s14, s14, s15
90016fd4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90016fd8:	68a9      	ldr	r1, [r5, #8]
90016fda:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016fde:	ed95 6a08 	vldr	s12, [r5, #32]
90016fe2:	edd5 6a07 	vldr	s13, [r5, #28]
90016fe6:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90016fea:	ee76 6a86 	vadd.f32	s13, s13, s12
90016fee:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90016ff2:	e9d5 2300 	ldrd	r2, r3, [r5]
90016ff6:	edc5 6a07 	vstr	s13, [r5, #28]
90016ffa:	441a      	add	r2, r3
90016ffc:	696b      	ldr	r3, [r5, #20]
90016ffe:	3301      	adds	r3, #1
90017000:	602a      	str	r2, [r5, #0]
90017002:	616b      	str	r3, [r5, #20]
90017004:	69ab      	ldr	r3, [r5, #24]
90017006:	3b01      	subs	r3, #1
90017008:	61ab      	str	r3, [r5, #24]
9001700a:	692b      	ldr	r3, [r5, #16]
9001700c:	440b      	add	r3, r1
9001700e:	68e9      	ldr	r1, [r5, #12]
90017010:	428b      	cmp	r3, r1
90017012:	612b      	str	r3, [r5, #16]
90017014:	db15      	blt.n	90017042 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90017016:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001701a:	3201      	adds	r2, #1
9001701c:	1a5b      	subs	r3, r3, r1
9001701e:	ee76 6a26 	vadd.f32	s13, s12, s13
90017022:	602a      	str	r2, [r5, #0]
90017024:	612b      	str	r3, [r5, #16]
90017026:	edc5 6a07 	vstr	s13, [r5, #28]
9001702a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001702e:	ee36 7a87 	vadd.f32	s14, s13, s14
90017032:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017036:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001703a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001703e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017042:	3f01      	subs	r7, #1
90017044:	e757      	b.n	90016ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90017046:	ad39      	add	r5, sp, #228	@ 0xe4
90017048:	ac19      	add	r4, sp, #100	@ 0x64
9001704a:	e72d      	b.n	90016ea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9001704c:	4613      	mov	r3, r2
9001704e:	e744      	b.n	90016eda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90017050:	4613      	mov	r3, r2
90017052:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90017054:	469e      	mov	lr, r3
90017056:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001705a:	461f      	mov	r7, r3
9001705c:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90017060:	f04f 0900 	mov.w	r9, #0
90017064:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90017068:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
9001706c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90017070:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90017074:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90017078:	993d      	ldr	r1, [sp, #244]	@ 0xf4
9001707a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
9001707e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90017082:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90017086:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
9001708a:	960e      	str	r6, [sp, #56]	@ 0x38
9001708c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90017090:	2f00      	cmp	r7, #0
90017092:	d146      	bne.n	90017122 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90017094:	449c      	add	ip, r3
90017096:	1ad7      	subs	r7, r2, r3
90017098:	f1b9 0f00 	cmp.w	r9, #0
9001709c:	d009      	beq.n	900170b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
9001709e:	9039      	str	r0, [sp, #228]	@ 0xe4
900170a0:	913d      	str	r1, [sp, #244]	@ 0xf4
900170a2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900170a6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900170aa:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900170ae:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900170b2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900170b4:	f04f 0800 	mov.w	r8, #0
900170b8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900170bc:	910e      	str	r1, [sp, #56]	@ 0x38
900170be:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900170c2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900170c6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900170ca:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900170ce:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900170d2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900170d6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900170da:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900170de:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900170e2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900170e6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900170ea:	f1be 0f00 	cmp.w	lr, #0
900170ee:	d030      	beq.n	90017152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900170f0:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900170f2:	4450      	add	r0, sl
900170f4:	ee76 6aa4 	vadd.f32	s13, s13, s9
900170f8:	4431      	add	r1, r6
900170fa:	ee37 7a04 	vadd.f32	s14, s14, s8
900170fe:	ee77 7aa3 	vadd.f32	s15, s15, s7
90017102:	4549      	cmp	r1, r9
90017104:	db08      	blt.n	90017118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90017106:	ee77 7a85 	vadd.f32	s15, s15, s10
9001710a:	3001      	adds	r0, #1
9001710c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017110:	eba1 0109 	sub.w	r1, r1, r9
90017114:	ee37 7a06 	vadd.f32	s14, s14, s12
90017118:	f10e 3eff 	add.w	lr, lr, #4294967295
9001711c:	f04f 0801 	mov.w	r8, #1
90017120:	e7e3      	b.n	900170ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90017122:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90017124:	4450      	add	r0, sl
90017126:	ee37 7a24 	vadd.f32	s14, s14, s9
9001712a:	4431      	add	r1, r6
9001712c:	ee77 7a84 	vadd.f32	s15, s15, s8
90017130:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017134:	4541      	cmp	r1, r8
90017136:	db08      	blt.n	9001714a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90017138:	ee76 6a85 	vadd.f32	s13, s13, s10
9001713c:	3001      	adds	r0, #1
9001713e:	ee37 7a25 	vadd.f32	s14, s14, s11
90017142:	eba1 0108 	sub.w	r1, r1, r8
90017146:	ee77 7a86 	vadd.f32	s15, s15, s12
9001714a:	3f01      	subs	r7, #1
9001714c:	f04f 0901 	mov.w	r9, #1
90017150:	e79e      	b.n	90017090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90017152:	449c      	add	ip, r3
90017154:	1aff      	subs	r7, r7, r3
90017156:	f1b8 0f00 	cmp.w	r8, #0
9001715a:	d009      	beq.n	90017170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9001715c:	9019      	str	r0, [sp, #100]	@ 0x64
9001715e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90017162:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90017166:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001716a:	911d      	str	r1, [sp, #116]	@ 0x74
9001716c:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90017170:	1ad2      	subs	r2, r2, r3
90017172:	e6b5      	b.n	90016ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90017174:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90017176:	681b      	ldr	r3, [r3, #0]
90017178:	b923      	cbnz	r3, 90017184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001717a:	4b04      	ldr	r3, [pc, #16]	@ (9001718c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9001717c:	6818      	ldr	r0, [r3, #0]
9001717e:	6803      	ldr	r3, [r0, #0]
90017180:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90017182:	4798      	blx	r3
90017184:	b05b      	add	sp, #364	@ 0x16c
90017186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001718a:	bf00      	nop
9001718c:	240218cc 	.word	0x240218cc

90017190 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90017190:	b570      	push	{r4, r5, r6, lr}
90017192:	4604      	mov	r4, r0
90017194:	2500      	movs	r5, #0
90017196:	9805      	ldr	r0, [sp, #20]
90017198:	f89d 601c 	ldrb.w	r6, [sp, #28]
9001719c:	6061      	str	r1, [r4, #4]
9001719e:	8263      	strh	r3, [r4, #18]
900171a0:	f89d 1010 	ldrb.w	r1, [sp, #16]
900171a4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900171a8:	8025      	strh	r5, [r4, #0]
900171aa:	7221      	strb	r1, [r4, #8]
900171ac:	7266      	strb	r6, [r4, #9]
900171ae:	60e0      	str	r0, [r4, #12]
900171b0:	8222      	strh	r2, [r4, #16]
900171b2:	82a3      	strh	r3, [r4, #20]
900171b4:	82e5      	strh	r5, [r4, #22]
900171b6:	8325      	strh	r5, [r4, #24]
900171b8:	8365      	strh	r5, [r4, #26]
900171ba:	83a5      	strh	r5, [r4, #28]
900171bc:	83e5      	strh	r5, [r4, #30]
900171be:	8425      	strh	r5, [r4, #32]
900171c0:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900171c4:	b32e      	cbz	r6, 90017212 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900171c6:	6803      	ldr	r3, [r0, #0]
900171c8:	695b      	ldr	r3, [r3, #20]
900171ca:	4798      	blx	r3
900171cc:	4606      	mov	r6, r0
900171ce:	b300      	cbz	r0, 90017212 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900171d0:	68e0      	ldr	r0, [r4, #12]
900171d2:	4631      	mov	r1, r6
900171d4:	6803      	ldr	r3, [r0, #0]
900171d6:	68db      	ldr	r3, [r3, #12]
900171d8:	4798      	blx	r3
900171da:	4605      	mov	r5, r0
900171dc:	b1c8      	cbz	r0, 90017212 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900171de:	7b43      	ldrb	r3, [r0, #13]
900171e0:	7a82      	ldrb	r2, [r0, #10]
900171e2:	005b      	lsls	r3, r3, #1
900171e4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900171e8:	4313      	orrs	r3, r2
900171ea:	8423      	strh	r3, [r4, #32]
900171ec:	7a63      	ldrb	r3, [r4, #9]
900171ee:	2b06      	cmp	r3, #6
900171f0:	d10f      	bne.n	90017212 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900171f2:	68e0      	ldr	r0, [r4, #12]
900171f4:	462a      	mov	r2, r5
900171f6:	4631      	mov	r1, r6
900171f8:	6803      	ldr	r3, [r0, #0]
900171fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900171fc:	4798      	blx	r3
900171fe:	7b6b      	ldrb	r3, [r5, #13]
90017200:	005b      	lsls	r3, r3, #1
90017202:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017206:	7aab      	ldrb	r3, [r5, #10]
90017208:	4313      	orrs	r3, r2
9001720a:	4418      	add	r0, r3
9001720c:	8c23      	ldrh	r3, [r4, #32]
9001720e:	4418      	add	r0, r3
90017210:	8420      	strh	r0, [r4, #32]
90017212:	4620      	mov	r0, r4
90017214:	bd70      	pop	{r4, r5, r6, pc}

90017216 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90017216:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001721a:	2400      	movs	r4, #0
9001721c:	b085      	sub	sp, #20
9001721e:	4681      	mov	r9, r0
90017220:	4688      	mov	r8, r1
90017222:	4692      	mov	sl, r2
90017224:	469b      	mov	fp, r3
90017226:	4627      	mov	r7, r4
90017228:	4625      	mov	r5, r4
9001722a:	4626      	mov	r6, r4
9001722c:	4554      	cmp	r4, sl
9001722e:	da2a      	bge.n	90017286 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017230:	2300      	movs	r3, #0
90017232:	9303      	str	r3, [sp, #12]
90017234:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017238:	429d      	cmp	r5, r3
9001723a:	d004      	beq.n	90017246 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001723c:	f242 030b 	movw	r3, #8203	@ 0x200b
90017240:	429d      	cmp	r5, r3
90017242:	bf18      	it	ne
90017244:	462f      	movne	r7, r5
90017246:	ab03      	add	r3, sp, #12
90017248:	4642      	mov	r2, r8
9001724a:	4659      	mov	r1, fp
9001724c:	4648      	mov	r0, r9
9001724e:	f003 fd55 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017252:	4605      	mov	r5, r0
90017254:	b1b8      	cbz	r0, 90017286 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017256:	280a      	cmp	r0, #10
90017258:	d015      	beq.n	90017286 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001725a:	9a03      	ldr	r2, [sp, #12]
9001725c:	b18a      	cbz	r2, 90017282 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001725e:	7b50      	ldrb	r0, [r2, #13]
90017260:	4639      	mov	r1, r7
90017262:	7a93      	ldrb	r3, [r2, #10]
90017264:	0040      	lsls	r0, r0, #1
90017266:	8895      	ldrh	r5, [r2, #4]
90017268:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001726c:	4303      	orrs	r3, r0
9001726e:	4640      	mov	r0, r8
90017270:	9301      	str	r3, [sp, #4]
90017272:	f8d8 3000 	ldr.w	r3, [r8]
90017276:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017278:	4798      	blx	r3
9001727a:	9b01      	ldr	r3, [sp, #4]
9001727c:	4418      	add	r0, r3
9001727e:	4406      	add	r6, r0
90017280:	b2b6      	uxth	r6, r6
90017282:	3401      	adds	r4, #1
90017284:	e7d2      	b.n	9001722c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90017286:	4630      	mov	r0, r6
90017288:	b005      	add	sp, #20
9001728a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001728e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
9001728e:	2a02      	cmp	r2, #2
90017290:	b530      	push	{r4, r5, lr}
90017292:	d011      	beq.n	900172b8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90017294:	2a03      	cmp	r2, #3
90017296:	d01c      	beq.n	900172d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90017298:	2a01      	cmp	r2, #1
9001729a:	d10c      	bne.n	900172b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001729c:	888b      	ldrh	r3, [r1, #4]
9001729e:	8801      	ldrh	r1, [r0, #0]
900172a0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900172a4:	1a5b      	subs	r3, r3, r1
900172a6:	8844      	ldrh	r4, [r0, #2]
900172a8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900172ac:	1a9b      	subs	r3, r3, r2
900172ae:	8004      	strh	r4, [r0, #0]
900172b0:	8081      	strh	r1, [r0, #4]
900172b2:	8043      	strh	r3, [r0, #2]
900172b4:	80c2      	strh	r2, [r0, #6]
900172b6:	bd30      	pop	{r4, r5, pc}
900172b8:	88cb      	ldrh	r3, [r1, #6]
900172ba:	8842      	ldrh	r2, [r0, #2]
900172bc:	1a9b      	subs	r3, r3, r2
900172be:	88c2      	ldrh	r2, [r0, #6]
900172c0:	1a9b      	subs	r3, r3, r2
900172c2:	888a      	ldrh	r2, [r1, #4]
900172c4:	8801      	ldrh	r1, [r0, #0]
900172c6:	8043      	strh	r3, [r0, #2]
900172c8:	1a52      	subs	r2, r2, r1
900172ca:	8881      	ldrh	r1, [r0, #4]
900172cc:	1a52      	subs	r2, r2, r1
900172ce:	8002      	strh	r2, [r0, #0]
900172d0:	e7f1      	b.n	900172b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900172d2:	88cb      	ldrh	r3, [r1, #6]
900172d4:	8841      	ldrh	r1, [r0, #2]
900172d6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900172da:	1a5b      	subs	r3, r3, r1
900172dc:	f9b0 5000 	ldrsh.w	r5, [r0]
900172e0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
900172e4:	1a9b      	subs	r3, r3, r2
900172e6:	8045      	strh	r5, [r0, #2]
900172e8:	8082      	strh	r2, [r0, #4]
900172ea:	8003      	strh	r3, [r0, #0]
900172ec:	80c4      	strh	r4, [r0, #6]
900172ee:	e7e2      	b.n	900172b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900172f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900172f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900172f4:	b09f      	sub	sp, #124	@ 0x7c
900172f6:	920f      	str	r2, [sp, #60]	@ 0x3c
900172f8:	9312      	str	r3, [sp, #72]	@ 0x48
900172fa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900172fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900172fe:	8812      	ldrh	r2, [r2, #0]
90017300:	889b      	ldrh	r3, [r3, #4]
90017302:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90017304:	4413      	add	r3, r2
90017306:	900e      	str	r0, [sp, #56]	@ 0x38
90017308:	6828      	ldr	r0, [r5, #0]
9001730a:	b21b      	sxth	r3, r3
9001730c:	9117      	str	r1, [sp, #92]	@ 0x5c
9001730e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90017312:	9311      	str	r3, [sp, #68]	@ 0x44
90017314:	6803      	ldr	r3, [r0, #0]
90017316:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
9001731a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001731c:	4798      	blx	r3
9001731e:	682b      	ldr	r3, [r5, #0]
90017320:	9013      	str	r0, [sp, #76]	@ 0x4c
90017322:	7b1a      	ldrb	r2, [r3, #12]
90017324:	7adb      	ldrb	r3, [r3, #11]
90017326:	9215      	str	r2, [sp, #84]	@ 0x54
90017328:	9316      	str	r3, [sp, #88]	@ 0x58
9001732a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001732e:	2c00      	cmp	r4, #0
90017330:	d067      	beq.n	90017402 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90017332:	7c2b      	ldrb	r3, [r5, #16]
90017334:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90017336:	2b06      	cmp	r3, #6
90017338:	bf14      	ite	ne
9001733a:	2301      	movne	r3, #1
9001733c:	2302      	moveq	r3, #2
9001733e:	4413      	add	r3, r2
90017340:	f04f 0900 	mov.w	r9, #0
90017344:	9310      	str	r3, [sp, #64]	@ 0x40
90017346:	464c      	mov	r4, r9
90017348:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
9001734c:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90017350:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017352:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90017354:	4293      	cmp	r3, r2
90017356:	f280 808b 	bge.w	90017470 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001735a:	2300      	movs	r3, #0
9001735c:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90017360:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90017364:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017368:	429c      	cmp	r4, r3
9001736a:	d006      	beq.n	9001737a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001736c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001736e:	f242 020b 	movw	r2, #8203	@ 0x200b
90017372:	4294      	cmp	r4, r2
90017374:	bf18      	it	ne
90017376:	4623      	movne	r3, r4
90017378:	930c      	str	r3, [sp, #48]	@ 0x30
9001737a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001737c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
9001737e:	682a      	ldr	r2, [r5, #0]
90017380:	428b      	cmp	r3, r1
90017382:	db40      	blt.n	90017406 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90017384:	6813      	ldr	r3, [r2, #0]
90017386:	4610      	mov	r0, r2
90017388:	695b      	ldr	r3, [r3, #20]
9001738a:	4798      	blx	r3
9001738c:	4604      	mov	r4, r0
9001738e:	6828      	ldr	r0, [r5, #0]
90017390:	aa1d      	add	r2, sp, #116	@ 0x74
90017392:	4621      	mov	r1, r4
90017394:	6803      	ldr	r3, [r0, #0]
90017396:	689f      	ldr	r7, [r3, #8]
90017398:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001739c:	47b8      	blx	r7
9001739e:	901c      	str	r0, [sp, #112]	@ 0x70
900173a0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900173a4:	429c      	cmp	r4, r3
900173a6:	f000 80eb 	beq.w	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900173aa:	f242 030b 	movw	r3, #8203	@ 0x200b
900173ae:	429c      	cmp	r4, r3
900173b0:	f000 80e6 	beq.w	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900173b4:	2c00      	cmp	r4, #0
900173b6:	f000 810d 	beq.w	900175d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900173ba:	2c0a      	cmp	r4, #10
900173bc:	d05e      	beq.n	9001747c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900173be:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900173c0:	b36a      	cbz	r2, 9001741e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900173c2:	8894      	ldrh	r4, [r2, #4]
900173c4:	f1bb 0f00 	cmp.w	fp, #0
900173c8:	d03a      	beq.n	90017440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900173ca:	f892 900d 	ldrb.w	r9, [r2, #13]
900173ce:	f1bb 0f01 	cmp.w	fp, #1
900173d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900173d6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900173da:	f892 900a 	ldrb.w	r9, [r2, #10]
900173de:	ea49 0903 	orr.w	r9, r9, r3
900173e2:	d133      	bne.n	9001744c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
900173e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900173e6:	eba6 0609 	sub.w	r6, r6, r9
900173ea:	2b00      	cmp	r3, #0
900173ec:	d14d      	bne.n	9001748a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900173ee:	9a15      	ldr	r2, [sp, #84]	@ 0x54
900173f0:	eb09 0306 	add.w	r3, r9, r6
900173f4:	4413      	add	r3, r2
900173f6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900173f8:	f9b2 2000 	ldrsh.w	r2, [r2]
900173fc:	4293      	cmp	r3, r2
900173fe:	da4e      	bge.n	9001749e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017400:	e036      	b.n	90017470 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90017402:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90017404:	e79c      	b.n	90017340 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90017406:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001740a:	4659      	mov	r1, fp
9001740c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001740e:	9301      	str	r3, [sp, #4]
90017410:	ab1d      	add	r3, sp, #116	@ 0x74
90017412:	9300      	str	r3, [sp, #0]
90017414:	ab1c      	add	r3, sp, #112	@ 0x70
90017416:	f003 fcba 	bl	9001ad8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001741a:	4604      	mov	r4, r0
9001741c:	e7c0      	b.n	900173a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001741e:	6828      	ldr	r0, [r5, #0]
90017420:	6803      	ldr	r3, [r0, #0]
90017422:	691b      	ldr	r3, [r3, #16]
90017424:	4798      	blx	r3
90017426:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001742a:	4298      	cmp	r0, r3
9001742c:	f000 80a8 	beq.w	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017430:	f242 030b 	movw	r3, #8203	@ 0x200b
90017434:	4298      	cmp	r0, r3
90017436:	f000 80a3 	beq.w	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001743a:	f1bb 0f00 	cmp.w	fp, #0
9001743e:	d100      	bne.n	90017442 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90017440:	444e      	add	r6, r9
90017442:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90017444:	2a00      	cmp	r2, #0
90017446:	d1c0      	bne.n	900173ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90017448:	4691      	mov	r9, r2
9001744a:	e099      	b.n	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001744c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001744e:	2b00      	cmp	r3, #0
90017450:	f000 80c2 	beq.w	900175d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90017454:	f1bb 0f00 	cmp.w	fp, #0
90017458:	d117      	bne.n	9001748a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001745a:	6828      	ldr	r0, [r5, #0]
9001745c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001745e:	6803      	ldr	r3, [r0, #0]
90017460:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017462:	4798      	blx	r3
90017464:	4406      	add	r6, r0
90017466:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90017468:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001746a:	1af3      	subs	r3, r6, r3
9001746c:	4293      	cmp	r3, r2
9001746e:	dd16      	ble.n	9001749e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017470:	2c00      	cmp	r4, #0
90017472:	f000 80af 	beq.w	900175d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90017476:	2c0a      	cmp	r4, #10
90017478:	f040 809d 	bne.w	900175b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
9001747c:	240a      	movs	r4, #10
9001747e:	fab4 f084 	clz	r0, r4
90017482:	0940      	lsrs	r0, r0, #5
90017484:	b01f      	add	sp, #124	@ 0x7c
90017486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001748a:	6828      	ldr	r0, [r5, #0]
9001748c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001748e:	6803      	ldr	r3, [r0, #0]
90017490:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017492:	4798      	blx	r3
90017494:	f1bb 0f01 	cmp.w	fp, #1
90017498:	eba6 0600 	sub.w	r6, r6, r0
9001749c:	d0a7      	beq.n	900173ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001749e:	981c      	ldr	r0, [sp, #112]	@ 0x70
900174a0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900174a2:	f990 1009 	ldrsb.w	r1, [r0, #9]
900174a6:	f9b3 8000 	ldrsh.w	r8, [r3]
900174aa:	7b43      	ldrb	r3, [r0, #13]
900174ac:	4431      	add	r1, r6
900174ae:	015b      	lsls	r3, r3, #5
900174b0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900174b4:	7983      	ldrb	r3, [r0, #6]
900174b6:	4313      	orrs	r3, r2
900174b8:	440b      	add	r3, r1
900174ba:	4543      	cmp	r3, r8
900174bc:	db60      	blt.n	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900174be:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900174c0:	4299      	cmp	r1, r3
900174c2:	da5d      	bge.n	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900174c4:	6828      	ldr	r0, [r5, #0]
900174c6:	45b0      	cmp	r8, r6
900174c8:	6803      	ldr	r3, [r0, #0]
900174ca:	bfcc      	ite	gt
900174cc:	eba8 0806 	subgt.w	r8, r8, r6
900174d0:	f04f 0800 	movle.w	r8, #0
900174d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900174d6:	bfc8      	it	gt
900174d8:	fa1f f888 	uxthgt.w	r8, r8
900174dc:	4798      	blx	r3
900174de:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900174e0:	7b53      	ldrb	r3, [r2, #13]
900174e2:	00d9      	lsls	r1, r3, #3
900174e4:	f401 7780 	and.w	r7, r1, #256	@ 0x100
900174e8:	7a11      	ldrb	r1, [r2, #8]
900174ea:	4339      	orrs	r1, r7
900174ec:	065f      	lsls	r7, r3, #25
900174ee:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900174f0:	bf48      	it	mi
900174f2:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
900174f6:	4407      	add	r7, r0
900174f8:	bf48      	it	mi
900174fa:	b209      	sxthmi	r1, r1
900174fc:	1a7f      	subs	r7, r7, r1
900174fe:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90017500:	b2bf      	uxth	r7, r7
90017502:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90017506:	fa0f fa87 	sxth.w	sl, r7
9001750a:	4551      	cmp	r1, sl
9001750c:	dd3c      	ble.n	90017588 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001750e:	011b      	lsls	r3, r3, #4
90017510:	79d0      	ldrb	r0, [r2, #7]
90017512:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017516:	4303      	orrs	r3, r0
90017518:	449a      	add	sl, r3
9001751a:	4551      	cmp	r1, sl
9001751c:	dc30      	bgt.n	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001751e:	1bcf      	subs	r7, r1, r7
90017520:	468a      	mov	sl, r1
90017522:	b23f      	sxth	r7, r7
90017524:	9219      	str	r2, [sp, #100]	@ 0x64
90017526:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90017528:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9001752a:	6828      	ldr	r0, [r5, #0]
9001752c:	2a00      	cmp	r2, #0
9001752e:	d12d      	bne.n	9001758c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90017530:	9318      	str	r3, [sp, #96]	@ 0x60
90017532:	b2bf      	uxth	r7, r7
90017534:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90017536:	6819      	ldr	r1, [r3, #0]
90017538:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
9001753a:	6801      	ldr	r1, [r0, #0]
9001753c:	9314      	str	r3, [sp, #80]	@ 0x50
9001753e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90017540:	4788      	blx	r1
90017542:	79a9      	ldrb	r1, [r5, #6]
90017544:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90017546:	910b      	str	r1, [sp, #44]	@ 0x2c
90017548:	7ba9      	ldrb	r1, [r5, #14]
9001754a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
9001754c:	910a      	str	r1, [sp, #40]	@ 0x28
9001754e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90017552:	9109      	str	r1, [sp, #36]	@ 0x24
90017554:	68a9      	ldr	r1, [r5, #8]
90017556:	9306      	str	r3, [sp, #24]
90017558:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001755a:	9205      	str	r2, [sp, #20]
9001755c:	9304      	str	r3, [sp, #16]
9001755e:	f8cd a004 	str.w	sl, [sp, #4]
90017562:	e9cd 8702 	strd	r8, r7, [sp, #8]
90017566:	44b0      	add	r8, r6
90017568:	9f14      	ldr	r7, [sp, #80]	@ 0x50
9001756a:	fa0f f388 	sxth.w	r3, r8
9001756e:	9300      	str	r3, [sp, #0]
90017570:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90017572:	e9cd 0107 	strd	r0, r1, [sp, #28]
90017576:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90017578:	681a      	ldr	r2, [r3, #0]
9001757a:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001757c:	685b      	ldr	r3, [r3, #4]
9001757e:	47b8      	blx	r7
90017580:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017582:	3301      	adds	r3, #1
90017584:	930d      	str	r3, [sp, #52]	@ 0x34
90017586:	e6e3      	b.n	90017350 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90017588:	2700      	movs	r7, #0
9001758a:	e7cb      	b.n	90017524 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
9001758c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001758e:	f8d2 c008 	ldr.w	ip, [r2, #8]
90017592:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90017594:	f8dc 1000 	ldr.w	r1, [ip]
90017598:	e9cd 6204 	strd	r6, r2, [sp, #16]
9001759c:	79aa      	ldrb	r2, [r5, #6]
9001759e:	9203      	str	r2, [sp, #12]
900175a0:	7baa      	ldrb	r2, [r5, #14]
900175a2:	9202      	str	r2, [sp, #8]
900175a4:	68aa      	ldr	r2, [r5, #8]
900175a6:	e9cd 0200 	strd	r0, r2, [sp]
900175aa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900175ac:	4660      	mov	r0, ip
900175ae:	688f      	ldr	r7, [r1, #8]
900175b0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900175b2:	47b8      	blx	r7
900175b4:	e7e4      	b.n	90017580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900175b6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900175b8:	3501      	adds	r5, #1
900175ba:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900175bc:	429d      	cmp	r5, r3
900175be:	f6bf af5e 	bge.w	9001747e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900175c2:	4659      	mov	r1, fp
900175c4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900175c6:	f7ee fbc7 	bl	90005d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900175ca:	4604      	mov	r4, r0
900175cc:	b110      	cbz	r0, 900175d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900175ce:	280a      	cmp	r0, #10
900175d0:	d1f2      	bne.n	900175b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900175d2:	e753      	b.n	9001747c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900175d4:	2400      	movs	r4, #0
900175d6:	e752      	b.n	9001747e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900175d8:	f1bb 0f00 	cmp.w	fp, #0
900175dc:	f43f af43 	beq.w	90017466 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
900175e0:	e75d      	b.n	9001749e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900175e2:	b530      	push	{r4, r5, lr}
900175e4:	8ac4      	ldrh	r4, [r0, #22]
900175e6:	8b45      	ldrh	r5, [r0, #26]
900175e8:	8343      	strh	r3, [r0, #26]
900175ea:	442c      	add	r4, r5
900175ec:	1ae4      	subs	r4, r4, r3
900175ee:	8b83      	ldrh	r3, [r0, #28]
900175f0:	82c4      	strh	r4, [r0, #22]
900175f2:	8b04      	ldrh	r4, [r0, #24]
900175f4:	4422      	add	r2, r4
900175f6:	440c      	add	r4, r1
900175f8:	1a59      	subs	r1, r3, r1
900175fa:	83c2      	strh	r2, [r0, #30]
900175fc:	8304      	strh	r4, [r0, #24]
900175fe:	8381      	strh	r1, [r0, #28]
90017600:	bd30      	pop	{r4, r5, pc}

90017602 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017602:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017606:	4604      	mov	r4, r0
90017608:	8a47      	ldrh	r7, [r0, #18]
9001760a:	68c0      	ldr	r0, [r0, #12]
9001760c:	b085      	sub	sp, #20
9001760e:	6803      	ldr	r3, [r0, #0]
90017610:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90017612:	4798      	blx	r3
90017614:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017618:	7a63      	ldrb	r3, [r4, #9]
9001761a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001761e:	3b01      	subs	r3, #1
90017620:	42b7      	cmp	r7, r6
90017622:	bfac      	ite	ge
90017624:	f04f 0900 	movge.w	r9, #0
90017628:	f04f 0901 	movlt.w	r9, #1
9001762c:	2b05      	cmp	r3, #5
9001762e:	d804      	bhi.n	9001763a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90017630:	e8df f003 	tbb	[pc, r3]
90017634:	470f0854 	.word	0x470f0854
90017638:	4c4c      	.short	0x4c4c
9001763a:	2500      	movs	r5, #0
9001763c:	46a9      	mov	r9, r5
9001763e:	462e      	mov	r6, r5
90017640:	462f      	mov	r7, r5
90017642:	e00e      	b.n	90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017644:	42b7      	cmp	r7, r6
90017646:	f04f 0500 	mov.w	r5, #0
9001764a:	bfb4      	ite	lt
9001764c:	2600      	movlt	r6, #0
9001764e:	2601      	movge	r6, #1
90017650:	e7f6      	b.n	90017640 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017652:	42b7      	cmp	r7, r6
90017654:	464d      	mov	r5, r9
90017656:	f04f 0900 	mov.w	r9, #0
9001765a:	bfb4      	ite	lt
9001765c:	2600      	movlt	r6, #0
9001765e:	2601      	movge	r6, #1
90017660:	464f      	mov	r7, r9
90017662:	f04f 0800 	mov.w	r8, #0
90017666:	f8a4 8016 	strh.w	r8, [r4, #22]
9001766a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001766e:	f8cd 8004 	str.w	r8, [sp, #4]
90017672:	2300      	movs	r3, #0
90017674:	9303      	str	r3, [sp, #12]
90017676:	8823      	ldrh	r3, [r4, #0]
90017678:	2b20      	cmp	r3, #32
9001767a:	d033      	beq.n	900176e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001767c:	f242 010b 	movw	r1, #8203	@ 0x200b
90017680:	1a5a      	subs	r2, r3, r1
90017682:	f1d2 0a00 	rsbs	sl, r2, #0
90017686:	eb4a 0a02 	adc.w	sl, sl, r2
9001768a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001768e:	4293      	cmp	r3, r2
90017690:	d008      	beq.n	900176a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017692:	428b      	cmp	r3, r1
90017694:	9a01      	ldr	r2, [sp, #4]
90017696:	bf0e      	itee	eq
90017698:	f04f 0a01 	moveq.w	sl, #1
9001769c:	461a      	movne	r2, r3
9001769e:	f04f 0a00 	movne.w	sl, #0
900176a2:	9201      	str	r2, [sp, #4]
900176a4:	ab03      	add	r3, sp, #12
900176a6:	68e2      	ldr	r2, [r4, #12]
900176a8:	7a21      	ldrb	r1, [r4, #8]
900176aa:	6860      	ldr	r0, [r4, #4]
900176ac:	f003 fb26 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900176b0:	8020      	strh	r0, [r4, #0]
900176b2:	b9d8      	cbnz	r0, 900176ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900176b4:	8ba2      	ldrh	r2, [r4, #28]
900176b6:	2300      	movs	r3, #0
900176b8:	4611      	mov	r1, r2
900176ba:	4620      	mov	r0, r4
900176bc:	f7ff ff91 	bl	900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900176c0:	e06e      	b.n	900177a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900176c2:	2500      	movs	r5, #0
900176c4:	2701      	movs	r7, #1
900176c6:	46a9      	mov	r9, r5
900176c8:	462e      	mov	r6, r5
900176ca:	e7ca      	b.n	90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900176cc:	42b7      	cmp	r7, r6
900176ce:	f04f 0500 	mov.w	r5, #0
900176d2:	bfb4      	ite	lt
900176d4:	2700      	movlt	r7, #0
900176d6:	2701      	movge	r7, #1
900176d8:	462e      	mov	r6, r5
900176da:	e7c2      	b.n	90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900176dc:	2500      	movs	r5, #0
900176de:	2601      	movs	r6, #1
900176e0:	46a9      	mov	r9, r5
900176e2:	e7ad      	b.n	90017640 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900176e4:	9301      	str	r3, [sp, #4]
900176e6:	f04f 0a01 	mov.w	sl, #1
900176ea:	e7db      	b.n	900176a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900176ec:	8b63      	ldrh	r3, [r4, #26]
900176ee:	280a      	cmp	r0, #10
900176f0:	f103 0301 	add.w	r3, r3, #1
900176f4:	8363      	strh	r3, [r4, #26]
900176f6:	d0dd      	beq.n	900176b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900176f8:	9a03      	ldr	r2, [sp, #12]
900176fa:	bb62      	cbnz	r2, 90017756 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900176fc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017700:	4298      	cmp	r0, r3
90017702:	d003      	beq.n	9001770c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017704:	f242 030b 	movw	r3, #8203	@ 0x200b
90017708:	4298      	cmp	r0, r3
9001770a:	d1b2      	bne.n	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001770c:	8823      	ldrh	r3, [r4, #0]
9001770e:	8ba1      	ldrh	r1, [r4, #28]
90017710:	2b20      	cmp	r3, #32
90017712:	d003      	beq.n	9001771c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017714:	f242 000b 	movw	r0, #8203	@ 0x200b
90017718:	4283      	cmp	r3, r0
9001771a:	d131      	bne.n	90017780 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001771c:	f1ba 0f00 	cmp.w	sl, #0
90017720:	bf0a      	itet	eq
90017722:	4688      	moveq	r8, r1
90017724:	4650      	movne	r0, sl
90017726:	2001      	moveq	r0, #1
90017728:	440a      	add	r2, r1
9001772a:	8b23      	ldrh	r3, [r4, #24]
9001772c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90017730:	b292      	uxth	r2, r2
90017732:	83a2      	strh	r2, [r4, #28]
90017734:	4413      	add	r3, r2
90017736:	f1b9 0f00 	cmp.w	r9, #0
9001773a:	d102      	bne.n	90017742 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001773c:	2d00      	cmp	r5, #0
9001773e:	d042      	beq.n	900177c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90017740:	b300      	cbz	r0, 90017784 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90017742:	8c21      	ldrh	r1, [r4, #32]
90017744:	4419      	add	r1, r3
90017746:	458c      	cmp	ip, r1
90017748:	da37      	bge.n	900177ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001774a:	8ae1      	ldrh	r1, [r4, #22]
9001774c:	2900      	cmp	r1, #0
9001774e:	d034      	beq.n	900177ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017750:	4563      	cmp	r3, ip
90017752:	dd8e      	ble.n	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017754:	e01d      	b.n	90017792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90017756:	8893      	ldrh	r3, [r2, #4]
90017758:	9901      	ldr	r1, [sp, #4]
9001775a:	8023      	strh	r3, [r4, #0]
9001775c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90017760:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90017764:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90017768:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001776c:	ea4b 0b00 	orr.w	fp, fp, r0
90017770:	68e0      	ldr	r0, [r4, #12]
90017772:	6803      	ldr	r3, [r0, #0]
90017774:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017776:	4798      	blx	r3
90017778:	eb0b 0200 	add.w	r2, fp, r0
9001777c:	b292      	uxth	r2, r2
9001777e:	e7c5      	b.n	9001770c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017780:	2000      	movs	r0, #0
90017782:	e7d1      	b.n	90017728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017784:	4563      	cmp	r3, ip
90017786:	f77f af74 	ble.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001778a:	8ae3      	ldrh	r3, [r4, #22]
9001778c:	2b00      	cmp	r3, #0
9001778e:	f43f af70 	beq.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017792:	2301      	movs	r3, #1
90017794:	8c22      	ldrh	r2, [r4, #32]
90017796:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
9001779a:	8be3      	ldrh	r3, [r4, #30]
9001779c:	4413      	add	r3, r2
9001779e:	83e3      	strh	r3, [r4, #30]
900177a0:	68e0      	ldr	r0, [r4, #12]
900177a2:	6803      	ldr	r3, [r0, #0]
900177a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900177a6:	4798      	blx	r3
900177a8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900177ac:	4418      	add	r0, r3
900177ae:	8a63      	ldrh	r3, [r4, #18]
900177b0:	1a18      	subs	r0, r3, r0
900177b2:	8260      	strh	r0, [r4, #18]
900177b4:	b005      	add	sp, #20
900177b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900177ba:	2300      	movs	r3, #0
900177bc:	4611      	mov	r1, r2
900177be:	4620      	mov	r0, r4
900177c0:	f7ff ff0f 	bl	900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900177c4:	e755      	b.n	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177c6:	4563      	cmp	r3, ip
900177c8:	dd14      	ble.n	900177f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900177ca:	b117      	cbz	r7, 900177d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900177cc:	2301      	movs	r3, #1
900177ce:	460a      	mov	r2, r1
900177d0:	e772      	b.n	900176b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900177d2:	2e00      	cmp	r6, #0
900177d4:	f43f af4d 	beq.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177d8:	2800      	cmp	r0, #0
900177da:	f47f af4a 	bne.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177de:	f1ba 0f00 	cmp.w	sl, #0
900177e2:	d002      	beq.n	900177ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
900177e4:	2301      	movs	r3, #1
900177e6:	4642      	mov	r2, r8
900177e8:	e767      	b.n	900176ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
900177ea:	8ae3      	ldrh	r3, [r4, #22]
900177ec:	2b00      	cmp	r3, #0
900177ee:	f43f af40 	beq.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177f2:	e7d5      	b.n	900177a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900177f4:	2800      	cmp	r0, #0
900177f6:	f47f af3c 	bne.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177fa:	f1ba 0f00 	cmp.w	sl, #0
900177fe:	f43f af38 	beq.w	90017672 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017802:	2301      	movs	r3, #1
90017804:	4642      	mov	r2, r8
90017806:	e7da      	b.n	900177be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90017808 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90017808:	b5f0      	push	{r4, r5, r6, r7, lr}
9001780a:	4605      	mov	r5, r0
9001780c:	b08f      	sub	sp, #60	@ 0x3c
9001780e:	4617      	mov	r7, r2
90017810:	461c      	mov	r4, r3
90017812:	460e      	mov	r6, r1
90017814:	b1d1      	cbz	r1, 9001784c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90017816:	681b      	ldr	r3, [r3, #0]
90017818:	4620      	mov	r0, r4
9001781a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001781c:	4798      	blx	r3
9001781e:	4240      	negs	r0, r0
90017820:	9603      	str	r6, [sp, #12]
90017822:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90017826:	b200      	sxth	r0, r0
90017828:	9700      	str	r7, [sp, #0]
9001782a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001782e:	4629      	mov	r1, r5
90017830:	e9cd 4001 	strd	r4, r0, [sp, #4]
90017834:	2401      	movs	r4, #1
90017836:	a805      	add	r0, sp, #20
90017838:	f7ff fcaa 	bl	90017190 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001783c:	a805      	add	r0, sp, #20
9001783e:	f7ff fee0 	bl	90017602 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017842:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90017846:	b163      	cbz	r3, 90017862 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90017848:	3401      	adds	r4, #1
9001784a:	e7f7      	b.n	9001783c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001784c:	2401      	movs	r4, #1
9001784e:	f003 fb21 	bl	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017852:	280a      	cmp	r0, #10
90017854:	4628      	mov	r0, r5
90017856:	bf08      	it	eq
90017858:	3401      	addeq	r4, #1
9001785a:	f003 fb1b 	bl	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001785e:	2800      	cmp	r0, #0
90017860:	d1f7      	bne.n	90017852 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90017862:	b2a0      	uxth	r0, r4
90017864:	b00f      	add	sp, #60	@ 0x3c
90017866:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90017868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001786c:	b0e3      	sub	sp, #396	@ 0x18c
9001786e:	461c      	mov	r4, r3
90017870:	4683      	mov	fp, r0
90017872:	4688      	mov	r8, r1
90017874:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90017876:	2b00      	cmp	r3, #0
90017878:	f000 8112 	beq.w	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001787c:	6823      	ldr	r3, [r4, #0]
9001787e:	2b00      	cmp	r3, #0
90017880:	f000 810e 	beq.w	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017884:	7ba3      	ldrb	r3, [r4, #14]
90017886:	2b00      	cmp	r3, #0
90017888:	f000 810a 	beq.w	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001788c:	ad0a      	add	r5, sp, #40	@ 0x28
9001788e:	6810      	ldr	r0, [r2, #0]
90017890:	6851      	ldr	r1, [r2, #4]
90017892:	462b      	mov	r3, r5
90017894:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90017898:	c303      	stmia	r3!, {r0, r1}
9001789a:	2100      	movs	r1, #0
9001789c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900178a0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900178a4:	4628      	mov	r0, r5
900178a6:	910c      	str	r1, [sp, #48]	@ 0x30
900178a8:	a90c      	add	r1, sp, #48	@ 0x30
900178aa:	79a2      	ldrb	r2, [r4, #6]
900178ac:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900178b0:	f7ff fced 	bl	9001728e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900178b4:	a90c      	add	r1, sp, #48	@ 0x30
900178b6:	79a2      	ldrb	r2, [r4, #6]
900178b8:	4608      	mov	r0, r1
900178ba:	f7ff fce8 	bl	9001728e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900178be:	a817      	add	r0, sp, #92	@ 0x5c
900178c0:	f002 fe8d 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
900178c4:	6820      	ldr	r0, [r4, #0]
900178c6:	6803      	ldr	r3, [r0, #0]
900178c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900178ca:	4798      	blx	r3
900178cc:	4606      	mov	r6, r0
900178ce:	6820      	ldr	r0, [r4, #0]
900178d0:	6803      	ldr	r3, [r0, #0]
900178d2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900178d4:	4798      	blx	r3
900178d6:	4633      	mov	r3, r6
900178d8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
900178da:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
900178dc:	9000      	str	r0, [sp, #0]
900178de:	a817      	add	r0, sp, #92	@ 0x5c
900178e0:	f002 fed8 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900178e4:	6820      	ldr	r0, [r4, #0]
900178e6:	f894 a004 	ldrb.w	sl, [r4, #4]
900178ea:	6803      	ldr	r3, [r0, #0]
900178ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900178ee:	4798      	blx	r3
900178f0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
900178f4:	6823      	ldr	r3, [r4, #0]
900178f6:	4607      	mov	r7, r0
900178f8:	4406      	add	r6, r0
900178fa:	a830      	add	r0, sp, #192	@ 0xc0
900178fc:	f893 9009 	ldrb.w	r9, [r3, #9]
90017900:	f002 fe6d 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
90017904:	7c23      	ldrb	r3, [r4, #16]
90017906:	b17b      	cbz	r3, 90017928 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90017908:	6820      	ldr	r0, [r4, #0]
9001790a:	6803      	ldr	r3, [r0, #0]
9001790c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001790e:	4798      	blx	r3
90017910:	9009      	str	r0, [sp, #36]	@ 0x24
90017912:	6820      	ldr	r0, [r4, #0]
90017914:	6802      	ldr	r2, [r0, #0]
90017916:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90017918:	4790      	blx	r2
9001791a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001791c:	9000      	str	r0, [sp, #0]
9001791e:	a830      	add	r0, sp, #192	@ 0xc0
90017920:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90017922:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90017924:	f002 feb6 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017928:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001792c:	a80e      	add	r0, sp, #56	@ 0x38
9001792e:	7be2      	ldrb	r2, [r4, #15]
90017930:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90017934:	1a8a      	subs	r2, r1, r2
90017936:	7c21      	ldrb	r1, [r4, #16]
90017938:	9103      	str	r1, [sp, #12]
9001793a:	b292      	uxth	r2, r2
9001793c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90017940:	9102      	str	r1, [sp, #8]
90017942:	6821      	ldr	r1, [r4, #0]
90017944:	9101      	str	r1, [sp, #4]
90017946:	7961      	ldrb	r1, [r4, #5]
90017948:	9100      	str	r1, [sp, #0]
9001794a:	a930      	add	r1, sp, #192	@ 0xc0
9001794c:	f7ff fc20 	bl	90017190 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90017950:	2e00      	cmp	r6, #0
90017952:	dc5b      	bgt.n	90017a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90017954:	af17      	add	r7, sp, #92	@ 0x5c
90017956:	f04f 0900 	mov.w	r9, #0
9001795a:	7c23      	ldrb	r3, [r4, #16]
9001795c:	2b00      	cmp	r3, #0
9001795e:	f000 80b1 	beq.w	90017ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90017962:	a80e      	add	r0, sp, #56	@ 0x38
90017964:	f7ff fe4d 	bl	90017602 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017968:	f1ba 0f00 	cmp.w	sl, #0
9001796c:	f000 80a5 	beq.w	90017aba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017970:	7c23      	ldrb	r3, [r4, #16]
90017972:	2264      	movs	r2, #100	@ 0x64
90017974:	4639      	mov	r1, r7
90017976:	a849      	add	r0, sp, #292	@ 0x124
90017978:	9309      	str	r3, [sp, #36]	@ 0x24
9001797a:	f014 f9ec 	bl	9002bd56 <memcpy>
9001797e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017980:	2b00      	cmp	r3, #0
90017982:	f000 80a7 	beq.w	90017ad4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90017986:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
9001798a:	7922      	ldrb	r2, [r4, #4]
9001798c:	2a01      	cmp	r2, #1
9001798e:	f040 808a 	bne.w	90017aa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90017992:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90017996:	1ac0      	subs	r0, r0, r3
90017998:	2302      	movs	r3, #2
9001799a:	fb90 f0f3 	sdiv	r0, r0, r3
9001799e:	b200      	sxth	r0, r0
900179a0:	7c23      	ldrb	r3, [r4, #16]
900179a2:	2b00      	cmp	r3, #0
900179a4:	f000 808b 	beq.w	90017abe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900179a8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
900179ac:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
900179b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900179b4:	e9cd 2105 	strd	r2, r1, [sp, #20]
900179b8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
900179bc:	2100      	movs	r1, #0
900179be:	4410      	add	r0, r2
900179c0:	4642      	mov	r2, r8
900179c2:	b200      	sxth	r0, r0
900179c4:	e9cd 9703 	strd	r9, r7, [sp, #12]
900179c8:	9000      	str	r0, [sp, #0]
900179ca:	4658      	mov	r0, fp
900179cc:	e9cd 5401 	strd	r5, r4, [sp, #4]
900179d0:	f7ff fc8e 	bl	900172f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
900179d4:	2800      	cmp	r0, #0
900179d6:	d163      	bne.n	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900179d8:	b2b2      	uxth	r2, r6
900179da:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900179de:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
900179e2:	4413      	add	r3, r2
900179e4:	1a8a      	subs	r2, r1, r2
900179e6:	b21b      	sxth	r3, r3
900179e8:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
900179ec:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
900179f0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900179f4:	2a00      	cmp	r2, #0
900179f6:	d153      	bne.n	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900179f8:	6822      	ldr	r2, [r4, #0]
900179fa:	8869      	ldrh	r1, [r5, #2]
900179fc:	7a12      	ldrb	r2, [r2, #8]
900179fe:	1a9b      	subs	r3, r3, r2
90017a00:	88ea      	ldrh	r2, [r5, #6]
90017a02:	440a      	add	r2, r1
90017a04:	b212      	sxth	r2, r2
90017a06:	4293      	cmp	r3, r2
90017a08:	dda7      	ble.n	9001795a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90017a0a:	e049      	b.n	90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a0c:	7c23      	ldrb	r3, [r4, #16]
90017a0e:	444f      	add	r7, r9
90017a10:	b1c3      	cbz	r3, 90017a44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90017a12:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90017a16:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90017a1a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017a1e:	443b      	add	r3, r7
90017a20:	4293      	cmp	r3, r2
90017a22:	da97      	bge.n	90017954 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017a24:	a80e      	add	r0, sp, #56	@ 0x38
90017a26:	f7ff fdec 	bl	90017602 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017a2a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90017a2e:	3b01      	subs	r3, #1
90017a30:	b29b      	uxth	r3, r3
90017a32:	454b      	cmp	r3, r9
90017a34:	9309      	str	r3, [sp, #36]	@ 0x24
90017a36:	d021      	beq.n	90017a7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90017a38:	7961      	ldrb	r1, [r4, #5]
90017a3a:	a817      	add	r0, sp, #92	@ 0x5c
90017a3c:	f7ee f98c 	bl	90005d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017a40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017a42:	e7f4      	b.n	90017a2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90017a44:	fa1f f986 	uxth.w	r9, r6
90017a48:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90017a4c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017a50:	443b      	add	r3, r7
90017a52:	4293      	cmp	r3, r2
90017a54:	f6bf af7e 	bge.w	90017954 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017a58:	a817      	add	r0, sp, #92	@ 0x5c
90017a5a:	f003 fa1b 	bl	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017a5e:	b1f8      	cbz	r0, 90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a60:	280a      	cmp	r0, #10
90017a62:	d1f1      	bne.n	90017a48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017a64:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017a68:	444b      	add	r3, r9
90017a6a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017a6e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90017a72:	eba3 0309 	sub.w	r3, r3, r9
90017a76:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90017a7a:	e7e5      	b.n	90017a48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017a7c:	b2b3      	uxth	r3, r6
90017a7e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90017a82:	441a      	add	r2, r3
90017a84:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90017a88:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90017a8c:	1ad3      	subs	r3, r2, r3
90017a8e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90017a92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017a96:	b11b      	cbz	r3, 90017aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a98:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90017a9c:	2b00      	cmp	r3, #0
90017a9e:	d0ba      	beq.n	90017a16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90017aa0:	b063      	add	sp, #396	@ 0x18c
90017aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017aa6:	2a02      	cmp	r2, #2
90017aa8:	d105      	bne.n	90017ab6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90017aaa:	7be2      	ldrb	r2, [r4, #15]
90017aac:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90017ab0:	1a80      	subs	r0, r0, r2
90017ab2:	1ac0      	subs	r0, r0, r3
90017ab4:	e773      	b.n	9001799e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90017ab6:	2000      	movs	r0, #0
90017ab8:	e772      	b.n	900179a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017aba:	7be0      	ldrb	r0, [r4, #15]
90017abc:	e770      	b.n	900179a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017abe:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90017ac2:	e773      	b.n	900179ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90017ac4:	f1ba 0f00 	cmp.w	sl, #0
90017ac8:	d0f7      	beq.n	90017aba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017aca:	2264      	movs	r2, #100	@ 0x64
90017acc:	4639      	mov	r1, r7
90017ace:	a849      	add	r0, sp, #292	@ 0x124
90017ad0:	f014 f941 	bl	9002bd56 <memcpy>
90017ad4:	2300      	movs	r3, #0
90017ad6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90017ada:	6821      	ldr	r1, [r4, #0]
90017adc:	a849      	add	r0, sp, #292	@ 0x124
90017ade:	f7ff fb9a 	bl	90017216 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017ae2:	b203      	sxth	r3, r0
90017ae4:	e751      	b.n	9001798a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90017ae6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90017ae6:	2b03      	cmp	r3, #3
90017ae8:	d818      	bhi.n	90017b1c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90017aea:	e8df f003 	tbb	[pc, r3]
90017aee:	0602      	.short	0x0602
90017af0:	130d      	.short	0x130d
90017af2:	f9b0 2000 	ldrsh.w	r2, [r0]
90017af6:	1850      	adds	r0, r2, r1
90017af8:	4770      	bx	lr
90017afa:	8803      	ldrh	r3, [r0, #0]
90017afc:	8880      	ldrh	r0, [r0, #4]
90017afe:	4418      	add	r0, r3
90017b00:	b200      	sxth	r0, r0
90017b02:	1a80      	subs	r0, r0, r2
90017b04:	3801      	subs	r0, #1
90017b06:	4770      	bx	lr
90017b08:	8803      	ldrh	r3, [r0, #0]
90017b0a:	8880      	ldrh	r0, [r0, #4]
90017b0c:	4418      	add	r0, r3
90017b0e:	b200      	sxth	r0, r0
90017b10:	1a40      	subs	r0, r0, r1
90017b12:	e7f7      	b.n	90017b04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90017b14:	f9b0 0000 	ldrsh.w	r0, [r0]
90017b18:	4410      	add	r0, r2
90017b1a:	4770      	bx	lr
90017b1c:	2000      	movs	r0, #0
90017b1e:	4770      	bx	lr

90017b20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90017b20:	2b03      	cmp	r3, #3
90017b22:	d817      	bhi.n	90017b54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90017b24:	e8df f003 	tbb	[pc, r3]
90017b28:	10090602 	.word	0x10090602
90017b2c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017b30:	1850      	adds	r0, r2, r1
90017b32:	4770      	bx	lr
90017b34:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017b38:	e7fa      	b.n	90017b30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90017b3a:	8843      	ldrh	r3, [r0, #2]
90017b3c:	88c0      	ldrh	r0, [r0, #6]
90017b3e:	4418      	add	r0, r3
90017b40:	b200      	sxth	r0, r0
90017b42:	1a80      	subs	r0, r0, r2
90017b44:	3801      	subs	r0, #1
90017b46:	4770      	bx	lr
90017b48:	8843      	ldrh	r3, [r0, #2]
90017b4a:	88c0      	ldrh	r0, [r0, #6]
90017b4c:	4418      	add	r0, r3
90017b4e:	b200      	sxth	r0, r0
90017b50:	1a40      	subs	r0, r0, r1
90017b52:	e7f7      	b.n	90017b44 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90017b54:	2000      	movs	r0, #0
90017b56:	4770      	bx	lr

90017b58 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90017b58:	4b01      	ldr	r3, [pc, #4]	@ (90017b60 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90017b5a:	2200      	movs	r2, #0
90017b5c:	601a      	str	r2, [r3, #0]
90017b5e:	4770      	bx	lr
90017b60:	240218dc 	.word	0x240218dc

90017b64 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90017b64:	4603      	mov	r3, r0
90017b66:	b1c8      	cbz	r0, 90017b9c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90017b68:	0c02      	lsrs	r2, r0, #16
90017b6a:	0412      	lsls	r2, r2, #16
90017b6c:	b9a2      	cbnz	r2, 90017b98 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90017b6e:	0403      	lsls	r3, r0, #16
90017b70:	2010      	movs	r0, #16
90017b72:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90017b76:	bf04      	itt	eq
90017b78:	021b      	lsleq	r3, r3, #8
90017b7a:	3008      	addeq	r0, #8
90017b7c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90017b80:	bf04      	itt	eq
90017b82:	011b      	lsleq	r3, r3, #4
90017b84:	3004      	addeq	r0, #4
90017b86:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90017b8a:	bf04      	itt	eq
90017b8c:	009b      	lsleq	r3, r3, #2
90017b8e:	3002      	addeq	r0, #2
90017b90:	2b00      	cmp	r3, #0
90017b92:	db04      	blt.n	90017b9e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90017b94:	3001      	adds	r0, #1
90017b96:	4770      	bx	lr
90017b98:	2000      	movs	r0, #0
90017b9a:	e7ea      	b.n	90017b72 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90017b9c:	2020      	movs	r0, #32
90017b9e:	4770      	bx	lr

90017ba0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90017ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017ba4:	b087      	sub	sp, #28
90017ba6:	460d      	mov	r5, r1
90017ba8:	4616      	mov	r6, r2
90017baa:	4698      	mov	r8, r3
90017bac:	4601      	mov	r1, r0
90017bae:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90017bb2:	b120      	cbz	r0, 90017bbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017bb4:	b11a      	cbz	r2, 90017bbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017bb6:	2d1f      	cmp	r5, #31
90017bb8:	d801      	bhi.n	90017bbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017bba:	2b1f      	cmp	r3, #31
90017bbc:	d904      	bls.n	90017bc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90017bbe:	2000      	movs	r0, #0
90017bc0:	6038      	str	r0, [r7, #0]
90017bc2:	b007      	add	sp, #28
90017bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017bc8:	b97d      	cbnz	r5, 90017bea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90017bca:	b143      	cbz	r3, 90017bde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90017bcc:	4602      	mov	r2, r0
90017bce:	462b      	mov	r3, r5
90017bd0:	4641      	mov	r1, r8
90017bd2:	4630      	mov	r0, r6
90017bd4:	e9cd 4700 	strd	r4, r7, [sp]
90017bd8:	f7ff ffe2 	bl	90017ba0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017bdc:	e7f1      	b.n	90017bc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017bde:	f04f 33ff 	mov.w	r3, #4294967295
90017be2:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90017be6:	603b      	str	r3, [r7, #0]
90017be8:	e7eb      	b.n	90017bc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017bea:	fa32 fa05 	lsrs.w	sl, r2, r5
90017bee:	d106      	bne.n	90017bfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90017bf0:	4346      	muls	r6, r0
90017bf2:	fbb6 f0f4 	udiv	r0, r6, r4
90017bf6:	fb04 6610 	mls	r6, r4, r0, r6
90017bfa:	603e      	str	r6, [r7, #0]
90017bfc:	e7e1      	b.n	90017bc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017bfe:	2201      	movs	r2, #1
90017c00:	fa00 fb05 	lsl.w	fp, r0, r5
90017c04:	40aa      	lsls	r2, r5
90017c06:	fbbb f9f4 	udiv	r9, fp, r4
90017c0a:	3a01      	subs	r2, #1
90017c0c:	fb0a f309 	mul.w	r3, sl, r9
90017c10:	fb04 b919 	mls	r9, r4, r9, fp
90017c14:	4016      	ands	r6, r2
90017c16:	9303      	str	r3, [sp, #12]
90017c18:	4630      	mov	r0, r6
90017c1a:	f7ff ffa3 	bl	90017b64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017c1e:	462b      	mov	r3, r5
90017c20:	460a      	mov	r2, r1
90017c22:	4601      	mov	r1, r0
90017c24:	4630      	mov	r0, r6
90017c26:	e9cd 4700 	strd	r4, r7, [sp]
90017c2a:	f7ff ffb9 	bl	90017ba0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017c2e:	4606      	mov	r6, r0
90017c30:	4648      	mov	r0, r9
90017c32:	eb05 0108 	add.w	r1, r5, r8
90017c36:	f7ff ff95 	bl	90017b64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017c3a:	ab05      	add	r3, sp, #20
90017c3c:	464a      	mov	r2, r9
90017c3e:	e9cd 4300 	strd	r4, r3, [sp]
90017c42:	4603      	mov	r3, r0
90017c44:	4650      	mov	r0, sl
90017c46:	f7ff ffab 	bl	90017ba0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017c4a:	6839      	ldr	r1, [r7, #0]
90017c4c:	9a05      	ldr	r2, [sp, #20]
90017c4e:	9b03      	ldr	r3, [sp, #12]
90017c50:	4411      	add	r1, r2
90017c52:	fbb1 f2f4 	udiv	r2, r1, r4
90017c56:	18d3      	adds	r3, r2, r3
90017c58:	fb04 1412 	mls	r4, r4, r2, r1
90017c5c:	441e      	add	r6, r3
90017c5e:	603c      	str	r4, [r7, #0]
90017c60:	4430      	add	r0, r6
90017c62:	e7ae      	b.n	90017bc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90017c64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90017c64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017c68:	b085      	sub	sp, #20
90017c6a:	f1b0 0900 	subs.w	r9, r0, #0
90017c6e:	461d      	mov	r5, r3
90017c70:	4617      	mov	r7, r2
90017c72:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90017c74:	bfbb      	ittet	lt
90017c76:	f1c9 0900 	rsblt	r9, r9, #0
90017c7a:	f04f 36ff 	movlt.w	r6, #4294967295
90017c7e:	2601      	movge	r6, #1
90017c80:	6823      	ldrlt	r3, [r4, #0]
90017c82:	bfbc      	itt	lt
90017c84:	425b      	neglt	r3, r3
90017c86:	6023      	strlt	r3, [r4, #0]
90017c88:	2a00      	cmp	r2, #0
90017c8a:	da04      	bge.n	90017c96 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90017c8c:	6823      	ldr	r3, [r4, #0]
90017c8e:	4257      	negs	r7, r2
90017c90:	4276      	negs	r6, r6
90017c92:	425b      	negs	r3, r3
90017c94:	6023      	str	r3, [r4, #0]
90017c96:	2d00      	cmp	r5, #0
90017c98:	4638      	mov	r0, r7
90017c9a:	bfba      	itte	lt
90017c9c:	426d      	neglt	r5, r5
90017c9e:	f04f 38ff 	movlt.w	r8, #4294967295
90017ca2:	f04f 0801 	movge.w	r8, #1
90017ca6:	f7ff ff5d 	bl	90017b64 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017caa:	ab03      	add	r3, sp, #12
90017cac:	463a      	mov	r2, r7
90017cae:	e9cd 5300 	strd	r5, r3, [sp]
90017cb2:	4603      	mov	r3, r0
90017cb4:	4648      	mov	r0, r9
90017cb6:	f7ff ff73 	bl	90017ba0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017cba:	6823      	ldr	r3, [r4, #0]
90017cbc:	9a03      	ldr	r2, [sp, #12]
90017cbe:	4546      	cmp	r6, r8
90017cc0:	441a      	add	r2, r3
90017cc2:	fb92 f3f5 	sdiv	r3, r2, r5
90017cc6:	4418      	add	r0, r3
90017cc8:	fb05 2313 	mls	r3, r5, r3, r2
90017ccc:	bf18      	it	ne
90017cce:	4240      	negne	r0, r0
90017cd0:	1c72      	adds	r2, r6, #1
90017cd2:	6023      	str	r3, [r4, #0]
90017cd4:	d105      	bne.n	90017ce2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90017cd6:	2b00      	cmp	r3, #0
90017cd8:	f1c3 0200 	rsb	r2, r3, #0
90017cdc:	db0b      	blt.n	90017cf6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017cde:	6022      	str	r2, [r4, #0]
90017ce0:	e006      	b.n	90017cf0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017ce2:	2e01      	cmp	r6, #1
90017ce4:	d104      	bne.n	90017cf0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017ce6:	2b00      	cmp	r3, #0
90017ce8:	da02      	bge.n	90017cf0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017cea:	442b      	add	r3, r5
90017cec:	3801      	subs	r0, #1
90017cee:	6023      	str	r3, [r4, #0]
90017cf0:	b005      	add	sp, #20
90017cf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017cf6:	3801      	subs	r0, #1
90017cf8:	1b52      	subs	r2, r2, r5
90017cfa:	e7f0      	b.n	90017cde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90017cfc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90017cfc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90017d00:	4c1c      	ldr	r4, [pc, #112]	@ (90017d74 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90017d02:	4605      	mov	r5, r0
90017d04:	6807      	ldr	r7, [r0, #0]
90017d06:	69a3      	ldr	r3, [r4, #24]
90017d08:	b92b      	cbnz	r3, 90017d16 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90017d0a:	6840      	ldr	r0, [r0, #4]
90017d0c:	e9c5 7000 	strd	r7, r0, [r5]
90017d10:	b004      	add	sp, #16
90017d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017d16:	f04f 0802 	mov.w	r8, #2
90017d1a:	68a2      	ldr	r2, [r4, #8]
90017d1c:	ae04      	add	r6, sp, #16
90017d1e:	6820      	ldr	r0, [r4, #0]
90017d20:	fb93 f1f8 	sdiv	r1, r3, r8
90017d24:	440a      	add	r2, r1
90017d26:	69e1      	ldr	r1, [r4, #28]
90017d28:	f846 2d04 	str.w	r2, [r6, #-4]!
90017d2c:	463a      	mov	r2, r7
90017d2e:	9600      	str	r6, [sp, #0]
90017d30:	f7ff ff98 	bl	90017c64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017d34:	69a3      	ldr	r3, [r4, #24]
90017d36:	4607      	mov	r7, r0
90017d38:	686a      	ldr	r2, [r5, #4]
90017d3a:	6a21      	ldr	r1, [r4, #32]
90017d3c:	9600      	str	r6, [sp, #0]
90017d3e:	6860      	ldr	r0, [r4, #4]
90017d40:	f7ff ff90 	bl	90017c64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017d44:	69a3      	ldr	r3, [r4, #24]
90017d46:	6962      	ldr	r2, [r4, #20]
90017d48:	4407      	add	r7, r0
90017d4a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90017d4c:	9600      	str	r6, [sp, #0]
90017d4e:	68e0      	ldr	r0, [r4, #12]
90017d50:	fb93 f8f8 	sdiv	r8, r3, r8
90017d54:	4442      	add	r2, r8
90017d56:	9203      	str	r2, [sp, #12]
90017d58:	682a      	ldr	r2, [r5, #0]
90017d5a:	f7ff ff83 	bl	90017c64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017d5e:	4680      	mov	r8, r0
90017d60:	9600      	str	r6, [sp, #0]
90017d62:	69a3      	ldr	r3, [r4, #24]
90017d64:	686a      	ldr	r2, [r5, #4]
90017d66:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90017d68:	6920      	ldr	r0, [r4, #16]
90017d6a:	f7ff ff7b 	bl	90017c64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017d6e:	4440      	add	r0, r8
90017d70:	e7cc      	b.n	90017d0c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90017d72:	bf00      	nop
90017d74:	240218e0 	.word	0x240218e0

90017d78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90017d78:	4b07      	ldr	r3, [pc, #28]	@ (90017d98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90017d7a:	781b      	ldrb	r3, [r3, #0]
90017d7c:	2b01      	cmp	r3, #1
90017d7e:	d109      	bne.n	90017d94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90017d80:	f9b1 3000 	ldrsh.w	r3, [r1]
90017d84:	f9b0 2000 	ldrsh.w	r2, [r0]
90017d88:	8003      	strh	r3, [r0, #0]
90017d8a:	4b04      	ldr	r3, [pc, #16]	@ (90017d9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90017d8c:	881b      	ldrh	r3, [r3, #0]
90017d8e:	3b01      	subs	r3, #1
90017d90:	1a9b      	subs	r3, r3, r2
90017d92:	800b      	strh	r3, [r1, #0]
90017d94:	4770      	bx	lr
90017d96:	bf00      	nop
90017d98:	240218c4 	.word	0x240218c4
90017d9c:	240218c0 	.word	0x240218c0

90017da0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90017da0:	4b07      	ldr	r3, [pc, #28]	@ (90017dc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90017da2:	b510      	push	{r4, lr}
90017da4:	781b      	ldrb	r3, [r3, #0]
90017da6:	2b01      	cmp	r3, #1
90017da8:	d108      	bne.n	90017dbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90017daa:	4b06      	ldr	r3, [pc, #24]	@ (90017dc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90017dac:	880c      	ldrh	r4, [r1, #0]
90017dae:	881b      	ldrh	r3, [r3, #0]
90017db0:	f9b0 2000 	ldrsh.w	r2, [r0]
90017db4:	3b01      	subs	r3, #1
90017db6:	1b1b      	subs	r3, r3, r4
90017db8:	8003      	strh	r3, [r0, #0]
90017dba:	800a      	strh	r2, [r1, #0]
90017dbc:	bd10      	pop	{r4, pc}
90017dbe:	bf00      	nop
90017dc0:	240218c4 	.word	0x240218c4
90017dc4:	240218c0 	.word	0x240218c0

90017dc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90017dc8:	4b0a      	ldr	r3, [pc, #40]	@ (90017df4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90017dca:	b510      	push	{r4, lr}
90017dcc:	781b      	ldrb	r3, [r3, #0]
90017dce:	2b01      	cmp	r3, #1
90017dd0:	d10e      	bne.n	90017df0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90017dd2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017dd6:	8843      	ldrh	r3, [r0, #2]
90017dd8:	f9b0 4000 	ldrsh.w	r4, [r0]
90017ddc:	18ca      	adds	r2, r1, r3
90017dde:	4b06      	ldr	r3, [pc, #24]	@ (90017df8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90017de0:	8044      	strh	r4, [r0, #2]
90017de2:	881b      	ldrh	r3, [r3, #0]
90017de4:	1a9b      	subs	r3, r3, r2
90017de6:	8003      	strh	r3, [r0, #0]
90017de8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017dec:	8081      	strh	r1, [r0, #4]
90017dee:	80c3      	strh	r3, [r0, #6]
90017df0:	bd10      	pop	{r4, pc}
90017df2:	bf00      	nop
90017df4:	240218c4 	.word	0x240218c4
90017df8:	240218c0 	.word	0x240218c0

90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90017dfc:	4b08      	ldr	r3, [pc, #32]	@ (90017e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90017dfe:	781b      	ldrb	r3, [r3, #0]
90017e00:	2b01      	cmp	r3, #1
90017e02:	d10c      	bne.n	90017e1e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90017e04:	8803      	ldrh	r3, [r0, #0]
90017e06:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90017e0a:	8842      	ldrh	r2, [r0, #2]
90017e0c:	8002      	strh	r2, [r0, #0]
90017e0e:	185a      	adds	r2, r3, r1
90017e10:	4b04      	ldr	r3, [pc, #16]	@ (90017e24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90017e12:	881b      	ldrh	r3, [r3, #0]
90017e14:	1a9b      	subs	r3, r3, r2
90017e16:	8043      	strh	r3, [r0, #2]
90017e18:	88c3      	ldrh	r3, [r0, #6]
90017e1a:	80c1      	strh	r1, [r0, #6]
90017e1c:	8083      	strh	r3, [r0, #4]
90017e1e:	4770      	bx	lr
90017e20:	240218c4 	.word	0x240218c4
90017e24:	240218c0 	.word	0x240218c0

90017e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90017e28:	4b07      	ldr	r3, [pc, #28]	@ (90017e48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90017e2a:	b510      	push	{r4, lr}
90017e2c:	781b      	ldrb	r3, [r3, #0]
90017e2e:	2b01      	cmp	r3, #1
90017e30:	d108      	bne.n	90017e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90017e32:	f9b1 3000 	ldrsh.w	r3, [r1]
90017e36:	f9b0 4000 	ldrsh.w	r4, [r0]
90017e3a:	8003      	strh	r3, [r0, #0]
90017e3c:	8893      	ldrh	r3, [r2, #4]
90017e3e:	3b01      	subs	r3, #1
90017e40:	1b1b      	subs	r3, r3, r4
90017e42:	800b      	strh	r3, [r1, #0]
90017e44:	bd10      	pop	{r4, pc}
90017e46:	bf00      	nop
90017e48:	240218c4 	.word	0x240218c4

90017e4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90017e4c:	4b0b      	ldr	r3, [pc, #44]	@ (90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90017e4e:	781b      	ldrb	r3, [r3, #0]
90017e50:	2b01      	cmp	r3, #1
90017e52:	d111      	bne.n	90017e78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90017e54:	680b      	ldr	r3, [r1, #0]
90017e56:	ed90 7a00 	vldr	s14, [r0]
90017e5a:	6003      	str	r3, [r0, #0]
90017e5c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90017e60:	eddf 6a07 	vldr	s13, [pc, #28]	@ 90017e80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90017e64:	ee07 3a90 	vmov	s15, r3
90017e68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017e6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
90017e70:	ee77 7ac7 	vsub.f32	s15, s15, s14
90017e74:	edc1 7a00 	vstr	s15, [r1]
90017e78:	4770      	bx	lr
90017e7a:	bf00      	nop
90017e7c:	240218c4 	.word	0x240218c4
90017e80:	38d1b717 	.word	0x38d1b717

90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90017e84:	4b0a      	ldr	r3, [pc, #40]	@ (90017eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90017e86:	460a      	mov	r2, r1
90017e88:	b510      	push	{r4, lr}
90017e8a:	781b      	ldrb	r3, [r3, #0]
90017e8c:	2b01      	cmp	r3, #1
90017e8e:	d10d      	bne.n	90017eac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90017e90:	8881      	ldrh	r1, [r0, #4]
90017e92:	8803      	ldrh	r3, [r0, #0]
90017e94:	440b      	add	r3, r1
90017e96:	4601      	mov	r1, r0
90017e98:	3b01      	subs	r3, #1
90017e9a:	f821 3b02 	strh.w	r3, [r1], #2
90017e9e:	f7ff ffc3 	bl	90017e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90017ea2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017ea6:	88c2      	ldrh	r2, [r0, #6]
90017ea8:	80c3      	strh	r3, [r0, #6]
90017eaa:	8082      	strh	r2, [r0, #4]
90017eac:	bd10      	pop	{r4, pc}
90017eae:	bf00      	nop
90017eb0:	240218c4 	.word	0x240218c4

90017eb4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90017eb4:	4770      	bx	lr
	...

90017eb8 <_ZN8touchgfx11Application13requestRedrawEv>:
90017eb8:	4b06      	ldr	r3, [pc, #24]	@ (90017ed4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90017eba:	2100      	movs	r1, #0
90017ebc:	f9b3 2000 	ldrsh.w	r2, [r3]
90017ec0:	4b05      	ldr	r3, [pc, #20]	@ (90017ed8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90017ec2:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90017ec6:	f9b3 3000 	ldrsh.w	r3, [r3]
90017eca:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90017ece:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90017ed2:	4770      	bx	lr
90017ed4:	240218c0 	.word	0x240218c0
90017ed8:	240218c2 	.word	0x240218c2

90017edc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90017edc:	4b03      	ldr	r3, [pc, #12]	@ (90017eec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90017ede:	6818      	ldr	r0, [r3, #0]
90017ee0:	b110      	cbz	r0, 90017ee8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90017ee2:	6803      	ldr	r3, [r0, #0]
90017ee4:	699b      	ldr	r3, [r3, #24]
90017ee6:	4718      	bx	r3
90017ee8:	4770      	bx	lr
90017eea:	bf00      	nop
90017eec:	24021910 	.word	0x24021910

90017ef0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90017ef0:	4770      	bx	lr
	...

90017ef4 <_ZN8touchgfx11Application4drawEv>:
90017ef4:	4b09      	ldr	r3, [pc, #36]	@ (90017f1c <_ZN8touchgfx11Application4drawEv+0x28>)
90017ef6:	b507      	push	{r0, r1, r2, lr}
90017ef8:	f9b3 2000 	ldrsh.w	r2, [r3]
90017efc:	2100      	movs	r1, #0
90017efe:	4b08      	ldr	r3, [pc, #32]	@ (90017f20 <_ZN8touchgfx11Application4drawEv+0x2c>)
90017f00:	9100      	str	r1, [sp, #0]
90017f02:	4669      	mov	r1, sp
90017f04:	f9b3 3000 	ldrsh.w	r3, [r3]
90017f08:	f8ad 2004 	strh.w	r2, [sp, #4]
90017f0c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017f10:	6803      	ldr	r3, [r0, #0]
90017f12:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017f14:	4798      	blx	r3
90017f16:	b003      	add	sp, #12
90017f18:	f85d fb04 	ldr.w	pc, [sp], #4
90017f1c:	240218c0 	.word	0x240218c0
90017f20:	240218c2 	.word	0x240218c2

90017f24 <_ZN8touchgfx11Application10invalidateEv>:
90017f24:	4b09      	ldr	r3, [pc, #36]	@ (90017f4c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90017f26:	b082      	sub	sp, #8
90017f28:	2100      	movs	r1, #0
90017f2a:	f9b3 2000 	ldrsh.w	r2, [r3]
90017f2e:	4b08      	ldr	r3, [pc, #32]	@ (90017f50 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90017f30:	f8ad 2004 	strh.w	r2, [sp, #4]
90017f34:	aa02      	add	r2, sp, #8
90017f36:	f9b3 3000 	ldrsh.w	r3, [r3]
90017f3a:	9100      	str	r1, [sp, #0]
90017f3c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017f40:	6803      	ldr	r3, [r0, #0]
90017f42:	e912 0006 	ldmdb	r2, {r1, r2}
90017f46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017f48:	b002      	add	sp, #8
90017f4a:	4718      	bx	r3
90017f4c:	240218c0 	.word	0x240218c0
90017f50:	240218c2 	.word	0x240218c2

90017f54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90017f54:	4b03      	ldr	r3, [pc, #12]	@ (90017f64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90017f56:	6818      	ldr	r0, [r3, #0]
90017f58:	b110      	cbz	r0, 90017f60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90017f5a:	6803      	ldr	r3, [r0, #0]
90017f5c:	69db      	ldr	r3, [r3, #28]
90017f5e:	4718      	bx	r3
90017f60:	4770      	bx	lr
90017f62:	bf00      	nop
90017f64:	24021910 	.word	0x24021910

90017f68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90017f68:	4b03      	ldr	r3, [pc, #12]	@ (90017f78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90017f6a:	6818      	ldr	r0, [r3, #0]
90017f6c:	b110      	cbz	r0, 90017f74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90017f6e:	6803      	ldr	r3, [r0, #0]
90017f70:	6a1b      	ldr	r3, [r3, #32]
90017f72:	4718      	bx	r3
90017f74:	4770      	bx	lr
90017f76:	bf00      	nop
90017f78:	24021910 	.word	0x24021910

90017f7c <_ZN8touchgfx11Application16clearCachedAreasEv>:
90017f7c:	2300      	movs	r3, #0
90017f7e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90017f82:	4770      	bx	lr

90017f84 <_ZN8touchgfx11Application14handleKeyEventEh>:
90017f84:	4b03      	ldr	r3, [pc, #12]	@ (90017f94 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90017f86:	6818      	ldr	r0, [r3, #0]
90017f88:	b110      	cbz	r0, 90017f90 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90017f8a:	6803      	ldr	r3, [r0, #0]
90017f8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017f8e:	4718      	bx	r3
90017f90:	4770      	bx	lr
90017f92:	bf00      	nop
90017f94:	24021910 	.word	0x24021910

90017f98 <_ZN8touchgfx11ApplicationD1Ev>:
90017f98:	4770      	bx	lr

90017f9a <_ZN8touchgfx11ApplicationD0Ev>:
90017f9a:	b510      	push	{r4, lr}
90017f9c:	4604      	mov	r4, r0
90017f9e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90017fa2:	f012 ff85 	bl	9002aeb0 <_ZdlPvj>
90017fa6:	4620      	mov	r0, r4
90017fa8:	bd10      	pop	{r4, pc}

90017faa <_ZNK8touchgfx4Rect9intersectERKS0_>:
90017faa:	b510      	push	{r4, lr}
90017fac:	f9b1 4000 	ldrsh.w	r4, [r1]
90017fb0:	888a      	ldrh	r2, [r1, #4]
90017fb2:	f9b0 3000 	ldrsh.w	r3, [r0]
90017fb6:	4422      	add	r2, r4
90017fb8:	b212      	sxth	r2, r2
90017fba:	4293      	cmp	r3, r2
90017fbc:	da15      	bge.n	90017fea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017fbe:	8882      	ldrh	r2, [r0, #4]
90017fc0:	4413      	add	r3, r2
90017fc2:	b21b      	sxth	r3, r3
90017fc4:	429c      	cmp	r4, r3
90017fc6:	da10      	bge.n	90017fea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017fc8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90017fcc:	88c9      	ldrh	r1, [r1, #6]
90017fce:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017fd2:	4419      	add	r1, r3
90017fd4:	b209      	sxth	r1, r1
90017fd6:	428a      	cmp	r2, r1
90017fd8:	da07      	bge.n	90017fea <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017fda:	88c0      	ldrh	r0, [r0, #6]
90017fdc:	4410      	add	r0, r2
90017fde:	b200      	sxth	r0, r0
90017fe0:	4283      	cmp	r3, r0
90017fe2:	bfac      	ite	ge
90017fe4:	2000      	movge	r0, #0
90017fe6:	2001      	movlt	r0, #1
90017fe8:	bd10      	pop	{r4, pc}
90017fea:	2000      	movs	r0, #0
90017fec:	e7fc      	b.n	90017fe8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90017fee <_ZN8touchgfx4Rect10restrictToEss>:
90017fee:	f9b0 3000 	ldrsh.w	r3, [r0]
90017ff2:	2b00      	cmp	r3, #0
90017ff4:	b510      	push	{r4, lr}
90017ff6:	da04      	bge.n	90018002 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90017ff8:	8884      	ldrh	r4, [r0, #4]
90017ffa:	4423      	add	r3, r4
90017ffc:	8083      	strh	r3, [r0, #4]
90017ffe:	2300      	movs	r3, #0
90018000:	8003      	strh	r3, [r0, #0]
90018002:	f9b0 4000 	ldrsh.w	r4, [r0]
90018006:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001800a:	1b09      	subs	r1, r1, r4
9001800c:	428b      	cmp	r3, r1
9001800e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90018012:	bfc8      	it	gt
90018014:	8081      	strhgt	r1, [r0, #4]
90018016:	2b00      	cmp	r3, #0
90018018:	da04      	bge.n	90018024 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001801a:	88c1      	ldrh	r1, [r0, #6]
9001801c:	440b      	add	r3, r1
9001801e:	80c3      	strh	r3, [r0, #6]
90018020:	2300      	movs	r3, #0
90018022:	8043      	strh	r3, [r0, #2]
90018024:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018028:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
9001802c:	1a52      	subs	r2, r2, r1
9001802e:	4293      	cmp	r3, r2
90018030:	bfc8      	it	gt
90018032:	80c2      	strhgt	r2, [r0, #6]
90018034:	bd10      	pop	{r4, pc}
	...

90018038 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90018038:	4b10      	ldr	r3, [pc, #64]	@ (9001807c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001803a:	b510      	push	{r4, lr}
9001803c:	460c      	mov	r4, r1
9001803e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018042:	4b0f      	ldr	r3, [pc, #60]	@ (90018080 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90018044:	4620      	mov	r0, r4
90018046:	f9b3 1000 	ldrsh.w	r1, [r3]
9001804a:	f7ff ffd0 	bl	90017fee <_ZN8touchgfx4Rect10restrictToEss>
9001804e:	4b0d      	ldr	r3, [pc, #52]	@ (90018084 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90018050:	6818      	ldr	r0, [r3, #0]
90018052:	b190      	cbz	r0, 9001807a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90018054:	6803      	ldr	r3, [r0, #0]
90018056:	4621      	mov	r1, r4
90018058:	689b      	ldr	r3, [r3, #8]
9001805a:	4798      	blx	r3
9001805c:	4b0a      	ldr	r3, [pc, #40]	@ (90018088 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001805e:	6818      	ldr	r0, [r3, #0]
90018060:	b118      	cbz	r0, 9001806a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90018062:	6803      	ldr	r3, [r0, #0]
90018064:	4621      	mov	r1, r4
90018066:	689b      	ldr	r3, [r3, #8]
90018068:	4798      	blx	r3
9001806a:	4b08      	ldr	r3, [pc, #32]	@ (9001808c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
9001806c:	4621      	mov	r1, r4
9001806e:	6818      	ldr	r0, [r3, #0]
90018070:	6803      	ldr	r3, [r0, #0]
90018072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018076:	69db      	ldr	r3, [r3, #28]
90018078:	4718      	bx	r3
9001807a:	bd10      	pop	{r4, pc}
9001807c:	240218c2 	.word	0x240218c2
90018080:	240218c0 	.word	0x240218c0
90018084:	24021910 	.word	0x24021910
90018088:	2402190c 	.word	0x2402190c
9001808c:	240218cc 	.word	0x240218cc

90018090 <_ZNK8touchgfx4Rect8includesERKS0_>:
90018090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018092:	4606      	mov	r6, r0
90018094:	4608      	mov	r0, r1
90018096:	460f      	mov	r7, r1
90018098:	f7f9 ff5f 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
9001809c:	b9e8      	cbnz	r0, 900180da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001809e:	f9b7 5000 	ldrsh.w	r5, [r7]
900180a2:	f9b6 4000 	ldrsh.w	r4, [r6]
900180a6:	42a5      	cmp	r5, r4
900180a8:	db17      	blt.n	900180da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900180aa:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900180ae:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900180b2:	429a      	cmp	r2, r3
900180b4:	db11      	blt.n	900180da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900180b6:	88b9      	ldrh	r1, [r7, #4]
900180b8:	440d      	add	r5, r1
900180ba:	88b1      	ldrh	r1, [r6, #4]
900180bc:	440c      	add	r4, r1
900180be:	b22d      	sxth	r5, r5
900180c0:	b224      	sxth	r4, r4
900180c2:	42a5      	cmp	r5, r4
900180c4:	dc09      	bgt.n	900180da <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900180c6:	88f8      	ldrh	r0, [r7, #6]
900180c8:	4410      	add	r0, r2
900180ca:	88f2      	ldrh	r2, [r6, #6]
900180cc:	4413      	add	r3, r2
900180ce:	b200      	sxth	r0, r0
900180d0:	b21b      	sxth	r3, r3
900180d2:	4298      	cmp	r0, r3
900180d4:	bfcc      	ite	gt
900180d6:	2000      	movgt	r0, #0
900180d8:	2001      	movle	r0, #1
900180da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900180dc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900180dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900180de:	4604      	mov	r4, r0
900180e0:	4608      	mov	r0, r1
900180e2:	460d      	mov	r5, r1
900180e4:	f7f9 ff39 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900180e8:	b978      	cbnz	r0, 9001810a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900180ea:	4620      	mov	r0, r4
900180ec:	f7f9 ff35 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900180f0:	f9b5 6000 	ldrsh.w	r6, [r5]
900180f4:	b150      	cbz	r0, 9001810c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900180f6:	8026      	strh	r6, [r4, #0]
900180f8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900180fc:	8063      	strh	r3, [r4, #2]
900180fe:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90018102:	80a3      	strh	r3, [r4, #4]
90018104:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90018108:	80e3      	strh	r3, [r4, #6]
9001810a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001810c:	f9b4 1000 	ldrsh.w	r1, [r4]
90018110:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018114:	42b1      	cmp	r1, r6
90018116:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001811a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001811e:	460f      	mov	r7, r1
90018120:	88ed      	ldrh	r5, [r5, #6]
90018122:	bfa8      	it	ge
90018124:	4637      	movge	r7, r6
90018126:	4293      	cmp	r3, r2
90018128:	4618      	mov	r0, r3
9001812a:	4466      	add	r6, ip
9001812c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018130:	bfa8      	it	ge
90018132:	4610      	movge	r0, r2
90018134:	442a      	add	r2, r5
90018136:	88e5      	ldrh	r5, [r4, #6]
90018138:	4461      	add	r1, ip
9001813a:	b236      	sxth	r6, r6
9001813c:	8027      	strh	r7, [r4, #0]
9001813e:	442b      	add	r3, r5
90018140:	b209      	sxth	r1, r1
90018142:	b212      	sxth	r2, r2
90018144:	8060      	strh	r0, [r4, #2]
90018146:	b21b      	sxth	r3, r3
90018148:	428e      	cmp	r6, r1
9001814a:	bfac      	ite	ge
9001814c:	ebc7 0106 	rsbge	r1, r7, r6
90018150:	ebc7 0101 	rsblt	r1, r7, r1
90018154:	429a      	cmp	r2, r3
90018156:	bfac      	ite	ge
90018158:	ebc0 0202 	rsbge	r2, r0, r2
9001815c:	ebc0 0203 	rsblt	r2, r0, r3
90018160:	80a1      	strh	r1, [r4, #4]
90018162:	80e2      	strh	r2, [r4, #6]
90018164:	e7d1      	b.n	9001810a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90018168 <_ZN8touchgfx11Application11getInstanceEv>:
90018168:	4b01      	ldr	r3, [pc, #4]	@ (90018170 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001816a:	6818      	ldr	r0, [r3, #0]
9001816c:	4770      	bx	lr
9001816e:	bf00      	nop
90018170:	24021920 	.word	0x24021920

90018174 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
90018174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018176:	4b10      	ldr	r3, [pc, #64]	@ (900181b8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
90018178:	4605      	mov	r5, r0
9001817a:	781b      	ldrb	r3, [r3, #0]
9001817c:	b1d3      	cbz	r3, 900181b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
9001817e:	4b0f      	ldr	r3, [pc, #60]	@ (900181bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
90018180:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
90018184:	4f0e      	ldr	r7, [pc, #56]	@ (900181c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90018186:	881c      	ldrh	r4, [r3, #0]
90018188:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
9001818c:	42a3      	cmp	r3, r4
9001818e:	d90e      	bls.n	900181ae <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90018190:	683b      	ldr	r3, [r7, #0]
90018192:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90018196:	b10a      	cbz	r2, 9001819c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90018198:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001819a:	b900      	cbnz	r0, 9001819e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
9001819c:	6898      	ldr	r0, [r3, #8]
9001819e:	6803      	ldr	r3, [r0, #0]
900181a0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
900181a4:	3401      	adds	r4, #1
900181a6:	69db      	ldr	r3, [r3, #28]
900181a8:	4798      	blx	r3
900181aa:	b2a4      	uxth	r4, r4
900181ac:	e7ec      	b.n	90018188 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
900181ae:	2300      	movs	r3, #0
900181b0:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
900181b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900181b6:	bf00      	nop
900181b8:	240218ca 	.word	0x240218ca
900181bc:	24000088 	.word	0x24000088
900181c0:	240218cc 	.word	0x240218cc

900181c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900181c4:	2300      	movs	r3, #0
900181c6:	b510      	push	{r4, lr}
900181c8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900181cc:	4604      	mov	r4, r0
900181ce:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900181d2:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900181d6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900181da:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900181de:	429a      	cmp	r2, r3
900181e0:	d90e      	bls.n	90018200 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900181e2:	18e2      	adds	r2, r4, r3
900181e4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900181e8:	b122      	cbz	r2, 900181f4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900181ea:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900181ee:	6803      	ldr	r3, [r0, #0]
900181f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900181f2:	4798      	blx	r3
900181f4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900181f8:	3301      	adds	r3, #1
900181fa:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900181fe:	e7ea      	b.n	900181d6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90018200:	bd10      	pop	{r4, pc}

90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90018202:	2300      	movs	r3, #0
90018204:	f100 0284 	add.w	r2, r0, #132	@ 0x84
90018208:	30a4      	adds	r0, #164	@ 0xa4
9001820a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001820e:	f802 3b01 	strb.w	r3, [r2], #1
90018212:	4282      	cmp	r2, r0
90018214:	d1fb      	bne.n	9001820e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90018216:	4770      	bx	lr

90018218 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90018218:	b570      	push	{r4, r5, r6, lr}
9001821a:	4c0b      	ldr	r4, [pc, #44]	@ (90018248 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001821c:	4605      	mov	r5, r0
9001821e:	460e      	mov	r6, r1
90018220:	6820      	ldr	r0, [r4, #0]
90018222:	b110      	cbz	r0, 9001822a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90018224:	6803      	ldr	r3, [r0, #0]
90018226:	695b      	ldr	r3, [r3, #20]
90018228:	4798      	blx	r3
9001822a:	1d28      	adds	r0, r5, #4
9001822c:	f7ff ffe9 	bl	90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90018230:	6026      	str	r6, [r4, #0]
90018232:	6833      	ldr	r3, [r6, #0]
90018234:	4630      	mov	r0, r6
90018236:	68db      	ldr	r3, [r3, #12]
90018238:	4798      	blx	r3
9001823a:	682b      	ldr	r3, [r5, #0]
9001823c:	4628      	mov	r0, r5
9001823e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018240:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018244:	4718      	bx	r3
90018246:	bf00      	nop
90018248:	24021910 	.word	0x24021910

9001824c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001824c:	2300      	movs	r3, #0
9001824e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90018252:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
90018256:	461a      	mov	r2, r3
90018258:	b5f0      	push	{r4, r5, r6, r7, lr}
9001825a:	461c      	mov	r4, r3
9001825c:	461d      	mov	r5, r3
9001825e:	459c      	cmp	ip, r3
90018260:	dd1a      	ble.n	90018298 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90018262:	18c6      	adds	r6, r0, r3
90018264:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90018268:	b16e      	cbz	r6, 90018286 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001826a:	429a      	cmp	r2, r3
9001826c:	d008      	beq.n	90018280 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001826e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90018272:	fa1f fe82 	uxth.w	lr, r2
90018276:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001827a:	1887      	adds	r7, r0, r2
9001827c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90018280:	3201      	adds	r2, #1
90018282:	3301      	adds	r3, #1
90018284:	e7eb      	b.n	9001825e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90018286:	4299      	cmp	r1, r3
90018288:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
9001828c:	bfa8      	it	ge
9001828e:	3501      	addge	r5, #1
90018290:	429e      	cmp	r6, r3
90018292:	bfc8      	it	gt
90018294:	3401      	addgt	r4, #1
90018296:	e7f4      	b.n	90018282 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018298:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
9001829c:	1b49      	subs	r1, r1, r5
9001829e:	1b1b      	subs	r3, r3, r4
900182a0:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900182a4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900182a8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900182ac:	4293      	cmp	r3, r2
900182ae:	dd03      	ble.n	900182b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900182b0:	3b01      	subs	r3, #1
900182b2:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900182b6:	e7f7      	b.n	900182a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900182b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900182bc <_ZN8touchgfx11Application15handleTickEventEv>:
900182bc:	b570      	push	{r4, r5, r6, lr}
900182be:	4d16      	ldr	r5, [pc, #88]	@ (90018318 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900182c0:	4604      	mov	r4, r0
900182c2:	6828      	ldr	r0, [r5, #0]
900182c4:	b140      	cbz	r0, 900182d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900182c6:	7a03      	ldrb	r3, [r0, #8]
900182c8:	b933      	cbnz	r3, 900182d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900182ca:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900182ce:	6803      	ldr	r3, [r0, #0]
900182d0:	689b      	ldr	r3, [r3, #8]
900182d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900182d6:	4718      	bx	r3
900182d8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900182dc:	4e0f      	ldr	r6, [pc, #60]	@ (9001831c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900182de:	b973      	cbnz	r3, 900182fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900182e0:	b168      	cbz	r0, 900182fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900182e2:	7a03      	ldrb	r3, [r0, #8]
900182e4:	b15b      	cbz	r3, 900182fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900182e6:	6830      	ldr	r0, [r6, #0]
900182e8:	b110      	cbz	r0, 900182f0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900182ea:	6803      	ldr	r3, [r0, #0]
900182ec:	691b      	ldr	r3, [r3, #16]
900182ee:	4798      	blx	r3
900182f0:	6828      	ldr	r0, [r5, #0]
900182f2:	6803      	ldr	r3, [r0, #0]
900182f4:	68db      	ldr	r3, [r3, #12]
900182f6:	4798      	blx	r3
900182f8:	2301      	movs	r3, #1
900182fa:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900182fe:	3404      	adds	r4, #4
90018300:	4620      	mov	r0, r4
90018302:	f7ff ff5f 	bl	900181c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90018306:	4620      	mov	r0, r4
90018308:	f7ff ffa0 	bl	9001824c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001830c:	6830      	ldr	r0, [r6, #0]
9001830e:	b110      	cbz	r0, 90018316 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90018310:	6803      	ldr	r3, [r0, #0]
90018312:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90018314:	e7dd      	b.n	900182d2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90018316:	bd70      	pop	{r4, r5, r6, pc}
90018318:	24021914 	.word	0x24021914
9001831c:	24021910 	.word	0x24021910

90018320 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90018320:	4603      	mov	r3, r0
90018322:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90018326:	2200      	movs	r2, #0
90018328:	801a      	strh	r2, [r3, #0]
9001832a:	3308      	adds	r3, #8
9001832c:	f823 2c06 	strh.w	r2, [r3, #-6]
90018330:	f823 2c04 	strh.w	r2, [r3, #-4]
90018334:	f823 2c02 	strh.w	r2, [r3, #-2]
90018338:	428b      	cmp	r3, r1
9001833a:	d1f5      	bne.n	90018328 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001833c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90018340:	4770      	bx	lr
	...

90018344 <_ZN8touchgfx11ApplicationC1Ev>:
90018344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018346:	4b1d      	ldr	r3, [pc, #116]	@ (900183bc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90018348:	4606      	mov	r6, r0
9001834a:	4604      	mov	r4, r0
9001834c:	2500      	movs	r5, #0
9001834e:	f846 3b04 	str.w	r3, [r6], #4
90018352:	22a8      	movs	r2, #168	@ 0xa8
90018354:	2100      	movs	r1, #0
90018356:	4630      	mov	r0, r6
90018358:	f013 fbbe 	bl	9002bad8 <memset>
9001835c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90018360:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90018364:	4f16      	ldr	r7, [pc, #88]	@ (900183c0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90018366:	f7ff ffdb 	bl	90018320 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001836a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001836e:	f7ff ffd7 	bl	90018320 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018372:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
90018376:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
9001837a:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
9001837e:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
90018382:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
90018386:	490f      	ldr	r1, [pc, #60]	@ (900183c4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018388:	480f      	ldr	r0, [pc, #60]	@ (900183c8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001838a:	f011 ff01 	bl	9002a190 <CRC_Lock>
9001838e:	4b0f      	ldr	r3, [pc, #60]	@ (900183cc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018390:	b158      	cbz	r0, 900183aa <_ZN8touchgfx11ApplicationC1Ev+0x66>
90018392:	801d      	strh	r5, [r3, #0]
90018394:	2300      	movs	r3, #0
90018396:	4a0e      	ldr	r2, [pc, #56]	@ (900183d0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018398:	4630      	mov	r0, r6
9001839a:	6013      	str	r3, [r2, #0]
9001839c:	4a0d      	ldr	r2, [pc, #52]	@ (900183d4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001839e:	603b      	str	r3, [r7, #0]
900183a0:	6013      	str	r3, [r2, #0]
900183a2:	f7ff ff2e 	bl	90018202 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900183a6:	4620      	mov	r0, r4
900183a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900183aa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
900183ae:	2002      	movs	r0, #2
900183b0:	801a      	strh	r2, [r3, #0]
900183b2:	6038      	str	r0, [r7, #0]
900183b4:	f001 ff66 	bl	9001a284 <_ZN8touchgfx6Screen4drawEv>
900183b8:	e7ec      	b.n	90018394 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900183ba:	bf00      	nop
900183bc:	9002f86c 	.word	0x9002f86c
900183c0:	24021910 	.word	0x24021910
900183c4:	b5e8b5cd 	.word	0xb5e8b5cd
900183c8:	f407a5c2 	.word	0xf407a5c2
900183cc:	24000088 	.word	0x24000088
900183d0:	24021920 	.word	0x24021920
900183d4:	24021914 	.word	0x24021914

900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900183d8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
900183dc:	3b01      	subs	r3, #1
900183de:	b29b      	uxth	r3, r3
900183e0:	428b      	cmp	r3, r1
900183e2:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
900183e6:	b510      	push	{r4, lr}
900183e8:	d908      	bls.n	900183fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900183ea:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900183ee:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900183f2:	681a      	ldr	r2, [r3, #0]
900183f4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900183f8:	685a      	ldr	r2, [r3, #4]
900183fa:	6062      	str	r2, [r4, #4]
900183fc:	bd10      	pop	{r4, pc}
	...

90018400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018404:	b08f      	sub	sp, #60	@ 0x3c
90018406:	4b92      	ldr	r3, [pc, #584]	@ (90018650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
90018408:	4683      	mov	fp, r0
9001840a:	ac0a      	add	r4, sp, #40	@ 0x28
9001840c:	e884 0006 	stmia.w	r4, {r1, r2}
90018410:	f9b3 2000 	ldrsh.w	r2, [r3]
90018414:	4620      	mov	r0, r4
90018416:	4b8f      	ldr	r3, [pc, #572]	@ (90018654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
90018418:	f9b3 1000 	ldrsh.w	r1, [r3]
9001841c:	f7ff fde7 	bl	90017fee <_ZN8touchgfx4Rect10restrictToEss>
90018420:	4620      	mov	r0, r4
90018422:	f7f9 fd9a 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90018426:	2800      	cmp	r0, #0
90018428:	d170      	bne.n	9001850c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001842a:	4b8b      	ldr	r3, [pc, #556]	@ (90018658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
9001842c:	681b      	ldr	r3, [r3, #0]
9001842e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90018432:	2b02      	cmp	r3, #2
90018434:	d06a      	beq.n	9001850c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90018436:	9403      	str	r4, [sp, #12]
90018438:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
9001843c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90018440:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90018444:	9301      	str	r3, [sp, #4]
90018446:	35a4      	adds	r5, #164	@ 0xa4
90018448:	b15c      	cbz	r4, 90018462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
9001844a:	4629      	mov	r1, r5
9001844c:	9803      	ldr	r0, [sp, #12]
9001844e:	f7ff fe1f 	bl	90018090 <_ZNK8touchgfx4Rect8includesERKS0_>
90018452:	3c01      	subs	r4, #1
90018454:	b118      	cbz	r0, 9001845e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
90018456:	b2a1      	uxth	r1, r4
90018458:	9801      	ldr	r0, [sp, #4]
9001845a:	f7ff ffbd 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001845e:	3d08      	subs	r5, #8
90018460:	e7f2      	b.n	90018448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
90018462:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
90018466:	f10a 33ff 	add.w	r3, sl, #4294967295
9001846a:	f8cd a010 	str.w	sl, [sp, #16]
9001846e:	9302      	str	r3, [sp, #8]
90018470:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90018474:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90018478:	9306      	str	r3, [sp, #24]
9001847a:	445c      	add	r4, fp
9001847c:	2500      	movs	r5, #0
9001847e:	4626      	mov	r6, r4
90018480:	f8cd a014 	str.w	sl, [sp, #20]
90018484:	462f      	mov	r7, r5
90018486:	9b05      	ldr	r3, [sp, #20]
90018488:	2b00      	cmp	r3, #0
9001848a:	d073      	beq.n	90018574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
9001848c:	9903      	ldr	r1, [sp, #12]
9001848e:	4630      	mov	r0, r6
90018490:	f7ff fd8b 	bl	90017faa <_ZNK8touchgfx4Rect9intersectERKS0_>
90018494:	b350      	cbz	r0, 900184ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
90018496:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
9001849a:	f9b6 c000 	ldrsh.w	ip, [r6]
9001849e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900184a2:	45e6      	cmp	lr, ip
900184a4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900184a8:	db33      	blt.n	90018512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
900184aa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900184ae:	88b3      	ldrh	r3, [r6, #4]
900184b0:	4472      	add	r2, lr
900184b2:	4463      	add	r3, ip
900184b4:	b212      	sxth	r2, r2
900184b6:	b21b      	sxth	r3, r3
900184b8:	429a      	cmp	r2, r3
900184ba:	dc2a      	bgt.n	90018512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
900184bc:	fa1f f289 	uxth.w	r2, r9
900184c0:	88f3      	ldrh	r3, [r6, #6]
900184c2:	45c8      	cmp	r8, r9
900184c4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900184c8:	4413      	add	r3, r2
900184ca:	fa1f fc88 	uxth.w	ip, r8
900184ce:	b29b      	uxth	r3, r3
900184d0:	fa0f fe83 	sxth.w	lr, r3
900184d4:	db0f      	blt.n	900184f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
900184d6:	eba3 030c 	sub.w	r3, r3, ip
900184da:	1ac9      	subs	r1, r1, r3
900184dc:	b209      	sxth	r1, r1
900184de:	2900      	cmp	r1, #0
900184e0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900184e4:	dd12      	ble.n	9001850c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900184e6:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
900184ea:	4605      	mov	r5, r0
900184ec:	9b05      	ldr	r3, [sp, #20]
900184ee:	3e08      	subs	r6, #8
900184f0:	3b01      	subs	r3, #1
900184f2:	9305      	str	r3, [sp, #20]
900184f4:	e7c7      	b.n	90018486 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
900184f6:	4461      	add	r1, ip
900184f8:	b209      	sxth	r1, r1
900184fa:	4571      	cmp	r1, lr
900184fc:	dc38      	bgt.n	90018570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900184fe:	eba2 020c 	sub.w	r2, r2, ip
90018502:	b212      	sxth	r2, r2
90018504:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90018508:	2a00      	cmp	r2, #0
9001850a:	dcee      	bgt.n	900184ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001850c:	b00f      	add	sp, #60	@ 0x3c
9001850e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018512:	45c8      	cmp	r8, r9
90018514:	db2c      	blt.n	90018570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90018516:	88f3      	ldrh	r3, [r6, #6]
90018518:	4499      	add	r9, r3
9001851a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
9001851e:	4498      	add	r8, r3
90018520:	fa0f f989 	sxth.w	r9, r9
90018524:	fa0f f888 	sxth.w	r8, r8
90018528:	45c1      	cmp	r9, r8
9001852a:	db21      	blt.n	90018570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001852c:	fa1f f28c 	uxth.w	r2, ip
90018530:	88b3      	ldrh	r3, [r6, #4]
90018532:	45e6      	cmp	lr, ip
90018534:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90018538:	4413      	add	r3, r2
9001853a:	fa1f f88e 	uxth.w	r8, lr
9001853e:	b29b      	uxth	r3, r3
90018540:	fa0f f983 	sxth.w	r9, r3
90018544:	db0a      	blt.n	9001855c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
90018546:	eba3 0308 	sub.w	r3, r3, r8
9001854a:	1ac9      	subs	r1, r1, r3
9001854c:	b209      	sxth	r1, r1
9001854e:	2900      	cmp	r1, #0
90018550:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90018554:	ddda      	ble.n	9001850c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90018556:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001855a:	e7c6      	b.n	900184ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001855c:	4441      	add	r1, r8
9001855e:	b209      	sxth	r1, r1
90018560:	4549      	cmp	r1, r9
90018562:	dc05      	bgt.n	90018570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90018564:	eba2 0208 	sub.w	r2, r2, r8
90018568:	b212      	sxth	r2, r2
9001856a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
9001856e:	e7cb      	b.n	90018508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
90018570:	4607      	mov	r7, r0
90018572:	e7bb      	b.n	900184ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
90018574:	2d00      	cmp	r5, #0
90018576:	d181      	bne.n	9001847c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
90018578:	2f00      	cmp	r7, #0
9001857a:	f000 81df 	beq.w	9001893c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
9001857e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90018582:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90018586:	b2b3      	uxth	r3, r6
90018588:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
9001858c:	9305      	str	r3, [sp, #20]
9001858e:	9a05      	ldr	r2, [sp, #20]
90018590:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90018594:	4413      	add	r3, r2
90018596:	b2ba      	uxth	r2, r7
90018598:	4492      	add	sl, r2
9001859a:	b29b      	uxth	r3, r3
9001859c:	fa1f fa8a 	uxth.w	sl, sl
900185a0:	fa0f f883 	sxth.w	r8, r3
900185a4:	fa0f f98a 	sxth.w	r9, sl
900185a8:	e9cd 2307 	strd	r2, r3, [sp, #28]
900185ac:	9b04      	ldr	r3, [sp, #16]
900185ae:	2b00      	cmp	r3, #0
900185b0:	d054      	beq.n	9001865c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
900185b2:	9903      	ldr	r1, [sp, #12]
900185b4:	4620      	mov	r0, r4
900185b6:	f7ff fcf8 	bl	90017faa <_ZNK8touchgfx4Rect9intersectERKS0_>
900185ba:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900185be:	b1c0      	cbz	r0, 900185f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900185c0:	f9b4 e000 	ldrsh.w	lr, [r4]
900185c4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900185c8:	4576      	cmp	r6, lr
900185ca:	dc22      	bgt.n	90018612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900185cc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900185d0:	44f4      	add	ip, lr
900185d2:	fa0f fc8c 	sxth.w	ip, ip
900185d6:	45e0      	cmp	r8, ip
900185d8:	db1b      	blt.n	90018612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
900185da:	428f      	cmp	r7, r1
900185dc:	fa1f fc81 	uxth.w	ip, r1
900185e0:	88e1      	ldrh	r1, [r4, #6]
900185e2:	dc0d      	bgt.n	90018600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
900185e4:	ebaa 0c0c 	sub.w	ip, sl, ip
900185e8:	f8a4 9002 	strh.w	r9, [r4, #2]
900185ec:	eba1 010c 	sub.w	r1, r1, ip
900185f0:	80e1      	strh	r1, [r4, #6]
900185f2:	4628      	mov	r0, r5
900185f4:	9904      	ldr	r1, [sp, #16]
900185f6:	3c08      	subs	r4, #8
900185f8:	4605      	mov	r5, r0
900185fa:	3901      	subs	r1, #1
900185fc:	9104      	str	r1, [sp, #16]
900185fe:	e7d3      	b.n	900185a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90018600:	4461      	add	r1, ip
90018602:	b209      	sxth	r1, r1
90018604:	4549      	cmp	r1, r9
90018606:	dcf5      	bgt.n	900185f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018608:	eba2 0c0c 	sub.w	ip, r2, ip
9001860c:	f8a4 c006 	strh.w	ip, [r4, #6]
90018610:	e7ef      	b.n	900185f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90018612:	428f      	cmp	r7, r1
90018614:	dcee      	bgt.n	900185f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018616:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001861a:	4461      	add	r1, ip
9001861c:	b209      	sxth	r1, r1
9001861e:	4589      	cmp	r9, r1
90018620:	dbe8      	blt.n	900185f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018622:	4576      	cmp	r6, lr
90018624:	fa1f fc8e 	uxth.w	ip, lr
90018628:	88a1      	ldrh	r1, [r4, #4]
9001862a:	dc07      	bgt.n	9001863c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
9001862c:	eba3 0c0c 	sub.w	ip, r3, ip
90018630:	f8a4 8000 	strh.w	r8, [r4]
90018634:	eba1 010c 	sub.w	r1, r1, ip
90018638:	80a1      	strh	r1, [r4, #4]
9001863a:	e7da      	b.n	900185f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001863c:	4461      	add	r1, ip
9001863e:	b209      	sxth	r1, r1
90018640:	4588      	cmp	r8, r1
90018642:	dbd7      	blt.n	900185f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018644:	9905      	ldr	r1, [sp, #20]
90018646:	eba1 0c0c 	sub.w	ip, r1, ip
9001864a:	f8a4 c004 	strh.w	ip, [r4, #4]
9001864e:	e7d0      	b.n	900185f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90018650:	240218c2 	.word	0x240218c2
90018654:	240218c0 	.word	0x240218c0
90018658:	240218cc 	.word	0x240218cc
9001865c:	2d00      	cmp	r5, #0
9001865e:	f000 816d 	beq.w	9001893c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018662:	9b06      	ldr	r3, [sp, #24]
90018664:	445b      	add	r3, fp
90018666:	461c      	mov	r4, r3
90018668:	9b02      	ldr	r3, [sp, #8]
9001866a:	3301      	adds	r3, #1
9001866c:	f000 8166 	beq.w	9001893c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018670:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90018674:	9803      	ldr	r0, [sp, #12]
90018676:	4629      	mov	r1, r5
90018678:	f7ff fd0a 	bl	90018090 <_ZNK8touchgfx4Rect8includesERKS0_>
9001867c:	b120      	cbz	r0, 90018688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
9001867e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90018682:	9801      	ldr	r0, [sp, #4]
90018684:	f7ff fea8 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018688:	9903      	ldr	r1, [sp, #12]
9001868a:	4628      	mov	r0, r5
9001868c:	f7ff fc8d 	bl	90017faa <_ZNK8touchgfx4Rect9intersectERKS0_>
90018690:	2800      	cmp	r0, #0
90018692:	f000 809c 	beq.w	900187ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90018696:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
9001869a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001869e:	fa1f f189 	uxth.w	r1, r9
900186a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900186a6:	9309      	str	r3, [sp, #36]	@ 0x24
900186a8:	eb01 0c03 	add.w	ip, r1, r3
900186ac:	b283      	uxth	r3, r0
900186ae:	4548      	cmp	r0, r9
900186b0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
900186b4:	fa1f fa8c 	uxth.w	sl, ip
900186b8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
900186bc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
900186c0:	eb03 050c 	add.w	r5, r3, ip
900186c4:	b2ad      	uxth	r5, r5
900186c6:	9505      	str	r5, [sp, #20]
900186c8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900186cc:	9504      	str	r5, [sp, #16]
900186ce:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
900186d2:	f340 8099 	ble.w	90018808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
900186d6:	1a5b      	subs	r3, r3, r1
900186d8:	4596      	cmp	lr, r2
900186da:	fa0f f08a 	sxth.w	r0, sl
900186de:	b29b      	uxth	r3, r3
900186e0:	b21e      	sxth	r6, r3
900186e2:	dd2e      	ble.n	90018742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
900186e4:	9f02      	ldr	r7, [sp, #8]
900186e6:	fa1f fe8e 	uxth.w	lr, lr
900186ea:	b292      	uxth	r2, r2
900186ec:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
900186f0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900186f4:	9f04      	ldr	r7, [sp, #16]
900186f6:	ebae 0102 	sub.w	r1, lr, r2
900186fa:	44a6      	add	lr, r4
900186fc:	1a3f      	subs	r7, r7, r0
900186fe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90018702:	b289      	uxth	r1, r1
90018704:	4402      	add	r2, r0
90018706:	fa0f fe8e 	sxth.w	lr, lr
9001870a:	b20d      	sxth	r5, r1
9001870c:	b212      	sxth	r2, r2
9001870e:	436f      	muls	r7, r5
90018710:	ebae 0202 	sub.w	r2, lr, r2
90018714:	4372      	muls	r2, r6
90018716:	4297      	cmp	r7, r2
90018718:	db09      	blt.n	9001872e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
9001871a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
9001871e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90018722:	449c      	add	ip, r3
90018724:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90018728:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001872c:	e684      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001872e:	4421      	add	r1, r4
90018730:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90018734:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90018738:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001873c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90018740:	e67a      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90018742:	9f04      	ldr	r7, [sp, #16]
90018744:	42b8      	cmp	r0, r7
90018746:	da27      	bge.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
90018748:	9902      	ldr	r1, [sp, #8]
9001874a:	1a3f      	subs	r7, r7, r0
9001874c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90018750:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90018754:	eb05 010e 	add.w	r1, r5, lr
90018758:	fa1f f881 	uxth.w	r8, r1
9001875c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90018760:	4411      	add	r1, r2
90018762:	fa0f f988 	sxth.w	r9, r8
90018766:	eba2 020e 	sub.w	r2, r2, lr
9001876a:	eba1 0108 	sub.w	r1, r1, r8
9001876e:	4372      	muls	r2, r6
90018770:	b289      	uxth	r1, r1
90018772:	fa0f f881 	sxth.w	r8, r1
90018776:	fb08 f707 	mul.w	r7, r8, r7
9001877a:	42ba      	cmp	r2, r7
9001877c:	dc06      	bgt.n	9001878c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
9001877e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90018782:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90018786:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
9001878a:	e7ca      	b.n	90018722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
9001878c:	4429      	add	r1, r5
9001878e:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90018792:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90018796:	e64f      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90018798:	9805      	ldr	r0, [sp, #20]
9001879a:	2d06      	cmp	r5, #6
9001879c:	ebaa 0000 	sub.w	r0, sl, r0
900187a0:	b280      	uxth	r0, r0
900187a2:	fa0f fe80 	sxth.w	lr, r0
900187a6:	d817      	bhi.n	900187d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
900187a8:	9b04      	ldr	r3, [sp, #16]
900187aa:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
900187ae:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900187b2:	1c6b      	adds	r3, r5, #1
900187b4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
900187b8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900187bc:	9b01      	ldr	r3, [sp, #4]
900187be:	9801      	ldr	r0, [sp, #4]
900187c0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900187c4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900187c8:	805a      	strh	r2, [r3, #2]
900187ca:	809e      	strh	r6, [r3, #4]
900187cc:	80d9      	strh	r1, [r3, #6]
900187ce:	9b02      	ldr	r3, [sp, #8]
900187d0:	3c08      	subs	r4, #8
900187d2:	3b01      	subs	r3, #1
900187d4:	9302      	str	r3, [sp, #8]
900187d6:	e747      	b.n	90018668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
900187d8:	9a02      	ldr	r2, [sp, #8]
900187da:	45b6      	cmp	lr, r6
900187dc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900187e0:	db0d      	blt.n	900187fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
900187e2:	449c      	add	ip, r3
900187e4:	445a      	add	r2, fp
900187e6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900187ea:	fa1f fc8c 	uxth.w	ip, ip
900187ee:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
900187f2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900187f6:	448c      	add	ip, r1
900187f8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
900187fc:	e61c      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900187fe:	445a      	add	r2, fp
90018800:	4484      	add	ip, r0
90018802:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90018806:	e78f      	b.n	90018728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90018808:	fa1f f18e 	uxth.w	r1, lr
9001880c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90018810:	b293      	uxth	r3, r2
90018812:	4596      	cmp	lr, r2
90018814:	eb01 0806 	add.w	r8, r1, r6
90018818:	9306      	str	r3, [sp, #24]
9001881a:	fa1f f888 	uxth.w	r8, r8
9001881e:	9f06      	ldr	r7, [sp, #24]
90018820:	fa0f f388 	sxth.w	r3, r8
90018824:	9307      	str	r3, [sp, #28]
90018826:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001882a:	443b      	add	r3, r7
9001882c:	b29b      	uxth	r3, r3
9001882e:	9308      	str	r3, [sp, #32]
90018830:	da24      	bge.n	9001887c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
90018832:	9905      	ldr	r1, [sp, #20]
90018834:	eba3 0308 	sub.w	r3, r3, r8
90018838:	eba2 020e 	sub.w	r2, r2, lr
9001883c:	eba9 0000 	sub.w	r0, r9, r0
90018840:	ebaa 0401 	sub.w	r4, sl, r1
90018844:	b29b      	uxth	r3, r3
90018846:	b2a4      	uxth	r4, r4
90018848:	b219      	sxth	r1, r3
9001884a:	b225      	sxth	r5, r4
9001884c:	4348      	muls	r0, r1
9001884e:	436a      	muls	r2, r5
90018850:	4282      	cmp	r2, r0
90018852:	9a02      	ldr	r2, [sp, #8]
90018854:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018858:	445a      	add	r2, fp
9001885a:	dc06      	bgt.n	9001886a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
9001885c:	9b07      	ldr	r3, [sp, #28]
9001885e:	44a4      	add	ip, r4
90018860:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90018864:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90018868:	e75e      	b.n	90018728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001886a:	9904      	ldr	r1, [sp, #16]
9001886c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90018870:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90018874:	4433      	add	r3, r6
90018876:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
9001887a:	e5dd      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
9001887c:	9f06      	ldr	r7, [sp, #24]
9001887e:	9b04      	ldr	r3, [sp, #16]
90018880:	1bc9      	subs	r1, r1, r7
90018882:	fa0f f78a 	sxth.w	r7, sl
90018886:	b289      	uxth	r1, r1
90018888:	429f      	cmp	r7, r3
9001888a:	fa0f fe81 	sxth.w	lr, r1
9001888e:	dd23      	ble.n	900188d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
90018890:	9a05      	ldr	r2, [sp, #20]
90018892:	eba9 0000 	sub.w	r0, r9, r0
90018896:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001889a:	ebaa 0202 	sub.w	r2, sl, r2
9001889e:	9d07      	ldr	r5, [sp, #28]
900188a0:	fb0e f000 	mul.w	r0, lr, r0
900188a4:	b292      	uxth	r2, r2
900188a6:	eba5 0a03 	sub.w	sl, r5, r3
900188aa:	9b02      	ldr	r3, [sp, #8]
900188ac:	b214      	sxth	r4, r2
900188ae:	00db      	lsls	r3, r3, #3
900188b0:	fb04 fa0a 	mul.w	sl, r4, sl
900188b4:	445b      	add	r3, fp
900188b6:	4550      	cmp	r0, sl
900188b8:	db03      	blt.n	900188c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
900188ba:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
900188be:	4494      	add	ip, r2
900188c0:	e732      	b.n	90018728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900188c2:	9a04      	ldr	r2, [sp, #16]
900188c4:	4431      	add	r1, r6
900188c6:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
900188ca:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
900188ce:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
900188d2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900188d6:	e75c      	b.n	90018792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
900188d8:	9b08      	ldr	r3, [sp, #32]
900188da:	2d06      	cmp	r5, #6
900188dc:	eba3 0308 	sub.w	r3, r3, r8
900188e0:	b29b      	uxth	r3, r3
900188e2:	b218      	sxth	r0, r3
900188e4:	d813      	bhi.n	9001890e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
900188e6:	9b07      	ldr	r3, [sp, #28]
900188e8:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
900188ec:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
900188f0:	1c6b      	adds	r3, r5, #1
900188f2:	9901      	ldr	r1, [sp, #4]
900188f4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900188f8:	9b01      	ldr	r3, [sp, #4]
900188fa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900188fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018902:	805a      	strh	r2, [r3, #2]
90018904:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90018906:	f8a3 e006 	strh.w	lr, [r3, #6]
9001890a:	809a      	strh	r2, [r3, #4]
9001890c:	e75f      	b.n	900187ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
9001890e:	9c02      	ldr	r4, [sp, #8]
90018910:	4570      	cmp	r0, lr
90018912:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90018916:	db0d      	blt.n	90018934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90018918:	4431      	add	r1, r6
9001891a:	9b06      	ldr	r3, [sp, #24]
9001891c:	445c      	add	r4, fp
9001891e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90018922:	b289      	uxth	r1, r1
90018924:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90018928:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001892c:	4419      	add	r1, r3
9001892e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90018932:	e581      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90018934:	445c      	add	r4, fp
90018936:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
9001893a:	e79b      	b.n	90018874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
9001893c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90018940:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90018944:	1e65      	subs	r5, r4, #1
90018946:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001894a:	b2ad      	uxth	r5, r5
9001894c:	42b5      	cmp	r5, r6
9001894e:	d044      	beq.n	900189da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
90018950:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90018954:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90018958:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001895c:	4282      	cmp	r2, r0
9001895e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90018962:	d11f      	bne.n	900189a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90018964:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90018968:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
9001896c:	459c      	cmp	ip, r3
9001896e:	d119      	bne.n	900189a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
90018970:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90018974:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90018978:	19d8      	adds	r0, r3, r7
9001897a:	b200      	sxth	r0, r0
9001897c:	4288      	cmp	r0, r1
9001897e:	d109      	bne.n	90018994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90018980:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90018984:	4413      	add	r3, r2
90018986:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001898a:	4629      	mov	r1, r5
9001898c:	9801      	ldr	r0, [sp, #4]
9001898e:	f7ff fd23 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018992:	e003      	b.n	9001899c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90018994:	4411      	add	r1, r2
90018996:	b209      	sxth	r1, r1
90018998:	42b9      	cmp	r1, r7
9001899a:	d0f3      	beq.n	90018984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
9001899c:	3d01      	subs	r5, #1
9001899e:	3c08      	subs	r4, #8
900189a0:	b2ad      	uxth	r5, r5
900189a2:	e7d3      	b.n	9001894c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
900189a4:	42b9      	cmp	r1, r7
900189a6:	d1f9      	bne.n	9001899c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900189a8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
900189ac:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900189b0:	4299      	cmp	r1, r3
900189b2:	d1f3      	bne.n	9001899c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900189b4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
900189b8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900189bc:	181f      	adds	r7, r3, r0
900189be:	b23f      	sxth	r7, r7
900189c0:	42ba      	cmp	r2, r7
900189c2:	d105      	bne.n	900189d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
900189c4:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
900189c8:	440b      	add	r3, r1
900189ca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900189ce:	e7dc      	b.n	9001898a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
900189d0:	440a      	add	r2, r1
900189d2:	b212      	sxth	r2, r2
900189d4:	4290      	cmp	r0, r2
900189d6:	d1e1      	bne.n	9001899c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900189d8:	e7f6      	b.n	900189c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
900189da:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
900189de:	2e07      	cmp	r6, #7
900189e0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900189e4:	d812      	bhi.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
900189e6:	1c75      	adds	r5, r6, #1
900189e8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900189ec:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900189f0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
900189f4:	9d01      	ldr	r5, [sp, #4]
900189f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900189fa:	442c      	add	r4, r5
900189fc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90018a00:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90018a04:	8061      	strh	r1, [r4, #2]
90018a06:	80a2      	strh	r2, [r4, #4]
90018a08:	80e3      	strh	r3, [r4, #6]
90018a0a:	e57f      	b.n	9001850c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90018a0c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90018a10:	3e01      	subs	r6, #1
90018a12:	445c      	add	r4, fp
90018a14:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90018a18:	f04f 37ff 	mov.w	r7, #4294967295
90018a1c:	2500      	movs	r5, #0
90018a1e:	9305      	str	r3, [sp, #20]
90018a20:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90018a24:	1e72      	subs	r2, r6, #1
90018a26:	9302      	str	r3, [sp, #8]
90018a28:	4691      	mov	r9, r2
90018a2a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90018a2e:	9304      	str	r3, [sp, #16]
90018a30:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90018a34:	f1b9 3fff 	cmp.w	r9, #4294967295
90018a38:	6818      	ldr	r0, [r3, #0]
90018a3a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90018a3e:	9207      	str	r2, [sp, #28]
90018a40:	bf16      	itet	ne
90018a42:	9905      	ldrne	r1, [sp, #20]
90018a44:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90018a48:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90018a4c:	9306      	str	r3, [sp, #24]
90018a4e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90018a52:	f8be 8004 	ldrh.w	r8, [lr, #4]
90018a56:	fb18 f801 	smulbb	r8, r8, r1
90018a5a:	6859      	ldr	r1, [r3, #4]
90018a5c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018a60:	4671      	mov	r1, lr
90018a62:	a80c      	add	r0, sp, #48	@ 0x30
90018a64:	f7ff fb3a 	bl	900180dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018a68:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90018a6c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90018a70:	f04f 0c08 	mov.w	ip, #8
90018a74:	9b04      	ldr	r3, [sp, #16]
90018a76:	9a02      	ldr	r2, [sp, #8]
90018a78:	fb10 f001 	smulbb	r0, r0, r1
90018a7c:	fb02 8803 	mla	r8, r2, r3, r8
90018a80:	eba0 0108 	sub.w	r1, r0, r8
90018a84:	fb90 f0fc 	sdiv	r0, r0, ip
90018a88:	4288      	cmp	r0, r1
90018a8a:	dc20      	bgt.n	90018ace <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90018a8c:	4551      	cmp	r1, sl
90018a8e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90018a92:	da03      	bge.n	90018a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90018a94:	b1d9      	cbz	r1, 90018ace <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90018a96:	468a      	mov	sl, r1
90018a98:	464f      	mov	r7, r9
90018a9a:	4635      	mov	r5, r6
90018a9c:	f109 39ff 	add.w	r9, r9, #4294967295
90018aa0:	f119 0f02 	cmn.w	r9, #2
90018aa4:	d1c6      	bne.n	90018a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90018aa6:	4616      	mov	r6, r2
90018aa8:	3201      	adds	r2, #1
90018aaa:	f1a4 0408 	sub.w	r4, r4, #8
90018aae:	d1b7      	bne.n	90018a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90018ab0:	9b01      	ldr	r3, [sp, #4]
90018ab2:	b2ac      	uxth	r4, r5
90018ab4:	00ed      	lsls	r5, r5, #3
90018ab6:	1958      	adds	r0, r3, r5
90018ab8:	1c7b      	adds	r3, r7, #1
90018aba:	d10b      	bne.n	90018ad4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90018abc:	4601      	mov	r1, r0
90018abe:	9803      	ldr	r0, [sp, #12]
90018ac0:	f7ff fb0c 	bl	900180dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018ac4:	4621      	mov	r1, r4
90018ac6:	9801      	ldr	r0, [sp, #4]
90018ac8:	f7ff fc86 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018acc:	e4b4      	b.n	90018438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90018ace:	464f      	mov	r7, r9
90018ad0:	4635      	mov	r5, r6
90018ad2:	e7ed      	b.n	90018ab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90018ad4:	9b01      	ldr	r3, [sp, #4]
90018ad6:	00ff      	lsls	r7, r7, #3
90018ad8:	445d      	add	r5, fp
90018ada:	19d9      	adds	r1, r3, r7
90018adc:	445f      	add	r7, fp
90018ade:	f7ff fafd 	bl	900180dc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018ae2:	9b03      	ldr	r3, [sp, #12]
90018ae4:	cb03      	ldmia	r3!, {r0, r1}
90018ae6:	9b03      	ldr	r3, [sp, #12]
90018ae8:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90018aec:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90018af0:	f855 0fac 	ldr.w	r0, [r5, #172]!
90018af4:	6869      	ldr	r1, [r5, #4]
90018af6:	c303      	stmia	r3!, {r0, r1}
90018af8:	e7e4      	b.n	90018ac4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90018afa:	bf00      	nop

90018afc <_ZN8touchgfx11Application15drawCachedAreasEv>:
90018afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b00:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90018b04:	b0a1      	sub	sp, #132	@ 0x84
90018b06:	4604      	mov	r4, r0
90018b08:	4630      	mov	r0, r6
90018b0a:	f7f9 fa26 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90018b0e:	4605      	mov	r5, r0
90018b10:	b948      	cbnz	r0, 90018b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90018b12:	6823      	ldr	r3, [r4, #0]
90018b14:	4620      	mov	r0, r4
90018b16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018b18:	e896 0006 	ldmia.w	r6, {r1, r2}
90018b1c:	4798      	blx	r3
90018b1e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90018b22:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90018b26:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018b2a:	2b00      	cmp	r3, #0
90018b2c:	d149      	bne.n	90018bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90018b2e:	4bb2      	ldr	r3, [pc, #712]	@ (90018df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90018b30:	681b      	ldr	r3, [r3, #0]
90018b32:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90018b36:	1ebb      	subs	r3, r7, #2
90018b38:	425f      	negs	r7, r3
90018b3a:	415f      	adcs	r7, r3
90018b3c:	4baf      	ldr	r3, [pc, #700]	@ (90018dfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90018b3e:	681b      	ldr	r3, [r3, #0]
90018b40:	2b00      	cmp	r3, #0
90018b42:	d040      	beq.n	90018bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90018b44:	4dae      	ldr	r5, [pc, #696]	@ (90018e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90018b46:	4628      	mov	r0, r5
90018b48:	f7f9 fa07 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90018b4c:	4606      	mov	r6, r0
90018b4e:	2800      	cmp	r0, #0
90018b50:	d139      	bne.n	90018bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90018b52:	4628      	mov	r0, r5
90018b54:	f7ff f938 	bl	90017dc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018b58:	6823      	ldr	r3, [r4, #0]
90018b5a:	6829      	ldr	r1, [r5, #0]
90018b5c:	4620      	mov	r0, r4
90018b5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018b60:	686a      	ldr	r2, [r5, #4]
90018b62:	4798      	blx	r3
90018b64:	802e      	strh	r6, [r5, #0]
90018b66:	806e      	strh	r6, [r5, #2]
90018b68:	80ae      	strh	r6, [r5, #4]
90018b6a:	80ee      	strh	r6, [r5, #6]
90018b6c:	af0f      	add	r7, sp, #60	@ 0x3c
90018b6e:	4ea5      	ldr	r6, [pc, #660]	@ (90018e04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90018b70:	4638      	mov	r0, r7
90018b72:	f7ff fbd5 	bl	90018320 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018b76:	8835      	ldrh	r5, [r6, #0]
90018b78:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90018b7c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90018b80:	462b      	mov	r3, r5
90018b82:	4563      	cmp	r3, ip
90018b84:	d224      	bcs.n	90018bd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90018b86:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90018b8a:	2907      	cmp	r1, #7
90018b8c:	d816      	bhi.n	90018bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018b8e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018b92:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90018b96:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90018b9a:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90018b9e:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90018ba2:	1c4a      	adds	r2, r1, #1
90018ba4:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90018ba8:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90018bac:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90018bb0:	f8a2 a002 	strh.w	sl, [r2, #2]
90018bb4:	f8a2 8004 	strh.w	r8, [r2, #4]
90018bb8:	f8a2 e006 	strh.w	lr, [r2, #6]
90018bbc:	3301      	adds	r3, #1
90018bbe:	b29b      	uxth	r3, r3
90018bc0:	e7df      	b.n	90018b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90018bc2:	2701      	movs	r7, #1
90018bc4:	e7ba      	b.n	90018b3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90018bc6:	2f00      	cmp	r7, #0
90018bc8:	d1d0      	bne.n	90018b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90018bca:	b021      	add	sp, #132	@ 0x84
90018bcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018bd0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90018bd4:	42ab      	cmp	r3, r5
90018bd6:	d90c      	bls.n	90018bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90018bd8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90018bdc:	6822      	ldr	r2, [r4, #0]
90018bde:	3501      	adds	r5, #1
90018be0:	4620      	mov	r0, r4
90018be2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90018be4:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90018be8:	b2ad      	uxth	r5, r5
90018bea:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90018bee:	47b8      	blx	r7
90018bf0:	e7ee      	b.n	90018bd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90018bf2:	4d81      	ldr	r5, [pc, #516]	@ (90018df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90018bf4:	6828      	ldr	r0, [r5, #0]
90018bf6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90018bfa:	2b01      	cmp	r3, #1
90018bfc:	f040 813d 	bne.w	90018e7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90018c00:	4a81      	ldr	r2, [pc, #516]	@ (90018e08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90018c02:	8833      	ldrh	r3, [r6, #0]
90018c04:	7812      	ldrb	r2, [r2, #0]
90018c06:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90018c0a:	2a01      	cmp	r2, #1
90018c0c:	d014      	beq.n	90018c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90018c0e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90018c12:	f04f 0900 	mov.w	r9, #0
90018c16:	32ae      	adds	r2, #174	@ 0xae
90018c18:	4283      	cmp	r3, r0
90018c1a:	f102 0208 	add.w	r2, r2, #8
90018c1e:	f280 8083 	bge.w	90018d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90018c22:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90018c26:	3301      	adds	r3, #1
90018c28:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90018c2c:	4439      	add	r1, r7
90018c2e:	b209      	sxth	r1, r1
90018c30:	4589      	cmp	r9, r1
90018c32:	bfb8      	it	lt
90018c34:	4689      	movlt	r9, r1
90018c36:	e7ef      	b.n	90018c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90018c38:	4f74      	ldr	r7, [pc, #464]	@ (90018e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90018c3a:	883a      	ldrh	r2, [r7, #0]
90018c3c:	4693      	mov	fp, r2
90018c3e:	4283      	cmp	r3, r0
90018c40:	da08      	bge.n	90018c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90018c42:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90018c46:	3301      	adds	r3, #1
90018c48:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90018c4c:	458b      	cmp	fp, r1
90018c4e:	bfa8      	it	ge
90018c50:	468b      	movge	fp, r1
90018c52:	e7f4      	b.n	90018c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90018c54:	2a0f      	cmp	r2, #15
90018c56:	f04f 0300 	mov.w	r3, #0
90018c5a:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90018e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90018c5e:	bf8c      	ite	hi
90018c60:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90018c64:	f04f 0801 	movls.w	r8, #1
90018c68:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90018c6c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90018c70:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90018c74:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90018c78:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90018c7c:	6828      	ldr	r0, [r5, #0]
90018c7e:	455b      	cmp	r3, fp
90018c80:	f340 80c8 	ble.w	90018e14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018c84:	6803      	ldr	r3, [r0, #0]
90018c86:	f8b7 a000 	ldrh.w	sl, [r7]
90018c8a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018c8e:	4798      	blx	r3
90018c90:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90018c94:	ebaa 0000 	sub.w	r0, sl, r0
90018c98:	682b      	ldr	r3, [r5, #0]
90018c9a:	ebac 0e08 	sub.w	lr, ip, r8
90018c9e:	b280      	uxth	r0, r0
90018ca0:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90018ca4:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90018ca8:	4570      	cmp	r0, lr
90018caa:	dd05      	ble.n	90018cb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90018cac:	4558      	cmp	r0, fp
90018cae:	dd03      	ble.n	90018cb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90018cb0:	b901      	cbnz	r1, 90018cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90018cb2:	b392      	cbz	r2, 90018d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90018cb4:	4658      	mov	r0, fp
90018cb6:	e006      	b.n	90018cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90018cb8:	2900      	cmp	r1, #0
90018cba:	d1fb      	bne.n	90018cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90018cbc:	2a00      	cmp	r2, #0
90018cbe:	d1f9      	bne.n	90018cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90018cc0:	4558      	cmp	r0, fp
90018cc2:	bfb8      	it	lt
90018cc4:	4658      	movlt	r0, fp
90018cc6:	f9b9 3000 	ldrsh.w	r3, [r9]
90018cca:	2200      	movs	r2, #0
90018ccc:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90018cd0:	ebac 0000 	sub.w	r0, ip, r0
90018cd4:	f8b6 a000 	ldrh.w	sl, [r6]
90018cd8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90018cdc:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90018ce0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90018ce4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018ce8:	4553      	cmp	r3, sl
90018cea:	ddc5      	ble.n	90018c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90018cec:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90018cf0:	ab0d      	add	r3, sp, #52	@ 0x34
90018cf2:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018cf6:	6851      	ldr	r1, [r2, #4]
90018cf8:	c303      	stmia	r3!, {r0, r1}
90018cfa:	a80d      	add	r0, sp, #52	@ 0x34
90018cfc:	a90b      	add	r1, sp, #44	@ 0x2c
90018cfe:	f7f9 f8e9 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90018d02:	a80d      	add	r0, sp, #52	@ 0x34
90018d04:	f7f9 f929 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90018d08:	b920      	cbnz	r0, 90018d14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90018d0a:	6823      	ldr	r3, [r4, #0]
90018d0c:	a90d      	add	r1, sp, #52	@ 0x34
90018d0e:	4620      	mov	r0, r4
90018d10:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018d12:	4798      	blx	r3
90018d14:	f10a 0a01 	add.w	sl, sl, #1
90018d18:	e7e4      	b.n	90018ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90018d1a:	681a      	ldr	r2, [r3, #0]
90018d1c:	2101      	movs	r1, #1
90018d1e:	4618      	mov	r0, r3
90018d20:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90018d24:	4790      	blx	r2
90018d26:	e7a7      	b.n	90018c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90018d28:	4b39      	ldr	r3, [pc, #228]	@ (90018e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90018d2a:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90018e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90018d2e:	881f      	ldrh	r7, [r3, #0]
90018d30:	2300      	movs	r3, #0
90018d32:	2f0f      	cmp	r7, #15
90018d34:	bf8c      	ite	hi
90018d36:	08ff      	lsrhi	r7, r7, #3
90018d38:	2701      	movls	r7, #1
90018d3a:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90018d3e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018d42:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90018d46:	6828      	ldr	r0, [r5, #0]
90018d48:	4413      	add	r3, r2
90018d4a:	b21b      	sxth	r3, r3
90018d4c:	454b      	cmp	r3, r9
90018d4e:	da61      	bge.n	90018e14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018d50:	6803      	ldr	r3, [r0, #0]
90018d52:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018d56:	4798      	blx	r3
90018d58:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90018d5c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018d60:	682a      	ldr	r2, [r5, #0]
90018d62:	4473      	add	r3, lr
90018d64:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90018d68:	b21b      	sxth	r3, r3
90018d6a:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90018d6e:	eb03 0e07 	add.w	lr, r3, r7
90018d72:	4570      	cmp	r0, lr
90018d74:	da0d      	bge.n	90018d92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90018d76:	4548      	cmp	r0, r9
90018d78:	da0b      	bge.n	90018d92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90018d7a:	f1bc 0f00 	cmp.w	ip, #0
90018d7e:	d138      	bne.n	90018df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90018d80:	2900      	cmp	r1, #0
90018d82:	d136      	bne.n	90018df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90018d84:	6813      	ldr	r3, [r2, #0]
90018d86:	2101      	movs	r1, #1
90018d88:	4610      	mov	r0, r2
90018d8a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90018d8e:	4798      	blx	r3
90018d90:	e7d5      	b.n	90018d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90018d92:	f1bc 0f00 	cmp.w	ip, #0
90018d96:	d12c      	bne.n	90018df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90018d98:	bb59      	cbnz	r1, 90018df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90018d9a:	4548      	cmp	r0, r9
90018d9c:	bfa8      	it	ge
90018d9e:	4648      	movge	r0, r9
90018da0:	f9b8 2000 	ldrsh.w	r2, [r8]
90018da4:	2100      	movs	r1, #0
90018da6:	1ac0      	subs	r0, r0, r3
90018da8:	f8b6 a000 	ldrh.w	sl, [r6]
90018dac:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90018db0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90018db4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90018db8:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90018dbc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90018dc0:	4553      	cmp	r3, sl
90018dc2:	ddbc      	ble.n	90018d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90018dc4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90018dc8:	ab0d      	add	r3, sp, #52	@ 0x34
90018dca:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018dce:	6851      	ldr	r1, [r2, #4]
90018dd0:	c303      	stmia	r3!, {r0, r1}
90018dd2:	a80d      	add	r0, sp, #52	@ 0x34
90018dd4:	a90b      	add	r1, sp, #44	@ 0x2c
90018dd6:	f7f9 f87d 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90018dda:	a80d      	add	r0, sp, #52	@ 0x34
90018ddc:	f7f9 f8bd 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90018de0:	b920      	cbnz	r0, 90018dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90018de2:	6823      	ldr	r3, [r4, #0]
90018de4:	a90d      	add	r1, sp, #52	@ 0x34
90018de6:	4620      	mov	r0, r4
90018de8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018dea:	4798      	blx	r3
90018dec:	f10a 0a01 	add.w	sl, sl, #1
90018df0:	e7e4      	b.n	90018dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90018df2:	4648      	mov	r0, r9
90018df4:	e7d4      	b.n	90018da0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90018df6:	bf00      	nop
90018df8:	240218cc 	.word	0x240218cc
90018dfc:	2402190c 	.word	0x2402190c
90018e00:	24021918 	.word	0x24021918
90018e04:	24000088 	.word	0x24000088
90018e08:	240218c4 	.word	0x240218c4
90018e0c:	240218c0 	.word	0x240218c0
90018e10:	240218c2 	.word	0x240218c2
90018e14:	6828      	ldr	r0, [r5, #0]
90018e16:	6803      	ldr	r3, [r0, #0]
90018e18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90018e1a:	4798      	blx	r3
90018e1c:	4ba4      	ldr	r3, [pc, #656]	@ (900190b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90018e1e:	781b      	ldrb	r3, [r3, #0]
90018e20:	2b00      	cmp	r3, #0
90018e22:	f43f aed2 	beq.w	90018bca <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90018e26:	2300      	movs	r3, #0
90018e28:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90018e2c:	a80f      	add	r0, sp, #60	@ 0x3c
90018e2e:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90018e32:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90018e36:	4b9f      	ldr	r3, [pc, #636]	@ (900190b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90018e38:	881b      	ldrh	r3, [r3, #0]
90018e3a:	42b3      	cmp	r3, r6
90018e3c:	f4bf aec5 	bcs.w	90018bca <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90018e40:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90018e44:	2907      	cmp	r1, #7
90018e46:	d815      	bhi.n	90018e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90018e48:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018e4c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90018e50:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90018e54:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90018e58:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90018e5c:	1c4a      	adds	r2, r1, #1
90018e5e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90018e62:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90018e66:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90018e6a:	f8a2 e002 	strh.w	lr, [r2, #2]
90018e6e:	f8a2 c004 	strh.w	ip, [r2, #4]
90018e72:	80d7      	strh	r7, [r2, #6]
90018e74:	3301      	adds	r3, #1
90018e76:	b29b      	uxth	r3, r3
90018e78:	e7df      	b.n	90018e3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90018e7a:	2b02      	cmp	r3, #2
90018e7c:	f040 80ce 	bne.w	9001901c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90018e80:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90018e84:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90018e88:	9308      	str	r3, [sp, #32]
90018e8a:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90018e8e:	f10b 37ff 	add.w	r7, fp, #4294967295
90018e92:	9307      	str	r3, [sp, #28]
90018e94:	b2bf      	uxth	r7, r7
90018e96:	6803      	ldr	r3, [r0, #0]
90018e98:	fa0f f887 	sxth.w	r8, r7
90018e9c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018ea0:	4798      	blx	r3
90018ea2:	4b85      	ldr	r3, [pc, #532]	@ (900190b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90018ea4:	4682      	mov	sl, r0
90018ea6:	2000      	movs	r0, #0
90018ea8:	881b      	ldrh	r3, [r3, #0]
90018eaa:	9302      	str	r3, [sp, #8]
90018eac:	4b83      	ldr	r3, [pc, #524]	@ (900190bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90018eae:	881e      	ldrh	r6, [r3, #0]
90018eb0:	4b83      	ldr	r3, [pc, #524]	@ (900190c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90018eb2:	781b      	ldrb	r3, [r3, #0]
90018eb4:	2b01      	cmp	r3, #1
90018eb6:	bf1e      	ittt	ne
90018eb8:	9b02      	ldrne	r3, [sp, #8]
90018eba:	9602      	strne	r6, [sp, #8]
90018ebc:	461e      	movne	r6, r3
90018ebe:	f7e7 feeb 	bl	90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90018ec2:	fb96 fbfb 	sdiv	fp, r6, fp
90018ec6:	fb0b f808 	mul.w	r8, fp, r8
90018eca:	45c2      	cmp	sl, r8
90018ecc:	da0c      	bge.n	90018ee8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90018ece:	6828      	ldr	r0, [r5, #0]
90018ed0:	210a      	movs	r1, #10
90018ed2:	6803      	ldr	r3, [r0, #0]
90018ed4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90018ed8:	4798      	blx	r3
90018eda:	6828      	ldr	r0, [r5, #0]
90018edc:	6803      	ldr	r3, [r0, #0]
90018ede:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018ee2:	4798      	blx	r3
90018ee4:	4682      	mov	sl, r0
90018ee6:	e7f0      	b.n	90018eca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90018ee8:	2000      	movs	r0, #0
90018eea:	f04f 0800 	mov.w	r8, #0
90018eee:	f7e7 feef 	bl	90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90018ef2:	fa1f f38b 	uxth.w	r3, fp
90018ef6:	4645      	mov	r5, r8
90018ef8:	fb17 f703 	smulbb	r7, r7, r3
90018efc:	9304      	str	r3, [sp, #16]
90018efe:	b2bb      	uxth	r3, r7
90018f00:	4f70      	ldr	r7, [pc, #448]	@ (900190c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90018f02:	9305      	str	r3, [sp, #20]
90018f04:	0973      	lsrs	r3, r6, #5
90018f06:	9306      	str	r3, [sp, #24]
90018f08:	42b5      	cmp	r5, r6
90018f0a:	d087      	beq.n	90018e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90018f0c:	6838      	ldr	r0, [r7, #0]
90018f0e:	6803      	ldr	r3, [r0, #0]
90018f10:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90018f14:	4798      	blx	r3
90018f16:	4582      	cmp	sl, r0
90018f18:	4681      	mov	r9, r0
90018f1a:	d907      	bls.n	90018f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90018f1c:	f1b8 0f00 	cmp.w	r8, #0
90018f20:	d007      	beq.n	90018f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90018f22:	6838      	ldr	r0, [r7, #0]
90018f24:	6803      	ldr	r3, [r0, #0]
90018f26:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90018f2a:	e776      	b.n	90018e1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90018f2c:	f1b8 0f00 	cmp.w	r8, #0
90018f30:	d003      	beq.n	90018f3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90018f32:	454d      	cmp	r5, r9
90018f34:	d3f5      	bcc.n	90018f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90018f36:	f04f 0801 	mov.w	r8, #1
90018f3a:	9a04      	ldr	r2, [sp, #16]
90018f3c:	fb95 f3fb 	sdiv	r3, r5, fp
90018f40:	9303      	str	r3, [sp, #12]
90018f42:	3301      	adds	r3, #1
90018f44:	fb13 f302 	smulbb	r3, r3, r2
90018f48:	b299      	uxth	r1, r3
90018f4a:	f1b8 0f00 	cmp.w	r8, #0
90018f4e:	d04d      	beq.n	90018fec <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90018f50:	eb09 030b 	add.w	r3, r9, fp
90018f54:	42b3      	cmp	r3, r6
90018f56:	bfa8      	it	ge
90018f58:	4633      	movge	r3, r6
90018f5a:	b29b      	uxth	r3, r3
90018f5c:	9807      	ldr	r0, [sp, #28]
90018f5e:	428b      	cmp	r3, r1
90018f60:	bf94      	ite	ls
90018f62:	ebc5 0203 	rsbls	r2, r5, r3
90018f66:	ebc5 0201 	rsbhi	r2, r5, r1
90018f6a:	4282      	cmp	r2, r0
90018f6c:	bfa8      	it	ge
90018f6e:	4602      	movge	r2, r0
90018f70:	9808      	ldr	r0, [sp, #32]
90018f72:	fa1f fa82 	uxth.w	sl, r2
90018f76:	4582      	cmp	sl, r0
90018f78:	d205      	bcs.n	90018f86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90018f7a:	fa15 f082 	uxtah	r0, r5, r2
90018f7e:	4286      	cmp	r6, r0
90018f80:	d001      	beq.n	90018f86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90018f82:	4299      	cmp	r1, r3
90018f84:	d23f      	bcs.n	90019006 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90018f86:	2001      	movs	r0, #1
90018f88:	9209      	str	r2, [sp, #36]	@ 0x24
90018f8a:	f7e7 fe85 	bl	90000c98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90018f8e:	6838      	ldr	r0, [r7, #0]
90018f90:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
90018f94:	6803      	ldr	r3, [r0, #0]
90018f96:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90018f9a:	4798      	blx	r3
90018f9c:	4b48      	ldr	r3, [pc, #288]	@ (900190c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90018f9e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90018fa0:	2000      	movs	r0, #0
90018fa2:	781b      	ldrb	r3, [r3, #0]
90018fa4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90018fa8:	b212      	sxth	r2, r2
90018faa:	2b01      	cmp	r3, #1
90018fac:	d122      	bne.n	90018ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90018fae:	1b73      	subs	r3, r6, r5
90018fb0:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
90018fb4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90018fb8:	eba3 030a 	sub.w	r3, r3, sl
90018fbc:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90018fc0:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90018fc4:	6823      	ldr	r3, [r4, #0]
90018fc6:	a90d      	add	r1, sp, #52	@ 0x34
90018fc8:	4620      	mov	r0, r4
90018fca:	4455      	add	r5, sl
90018fcc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018fce:	4798      	blx	r3
90018fd0:	6838      	ldr	r0, [r7, #0]
90018fd2:	9b03      	ldr	r3, [sp, #12]
90018fd4:	b2ad      	uxth	r5, r5
90018fd6:	4259      	negs	r1, r3
90018fd8:	6803      	ldr	r3, [r0, #0]
90018fda:	b209      	sxth	r1, r1
90018fdc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90018fe0:	4798      	blx	r3
90018fe2:	2001      	movs	r0, #1
90018fe4:	f7e7 fe74 	bl	90000cd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90018fe8:	46ca      	mov	sl, r9
90018fea:	e78d      	b.n	90018f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90018fec:	9b05      	ldr	r3, [sp, #20]
90018fee:	eba9 0303 	sub.w	r3, r9, r3
90018ff2:	e7b2      	b.n	90018f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90018ff4:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90018ff8:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90018ffc:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90019000:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90019004:	e7de      	b.n	90018fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90019006:	6838      	ldr	r0, [r7, #0]
90019008:	6803      	ldr	r3, [r0, #0]
9001900a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001900c:	4798      	blx	r3
9001900e:	6838      	ldr	r0, [r7, #0]
90019010:	9906      	ldr	r1, [sp, #24]
90019012:	6803      	ldr	r3, [r0, #0]
90019014:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90019018:	4798      	blx	r3
9001901a:	e7e5      	b.n	90018fe8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
9001901c:	2b03      	cmp	r3, #3
9001901e:	f040 8133 	bne.w	90019288 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90019022:	4b27      	ldr	r3, [pc, #156]	@ (900190c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90019024:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90019028:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
9001902c:	781b      	ldrb	r3, [r3, #0]
9001902e:	2b01      	cmp	r3, #1
90019030:	f000 8095 	beq.w	9001915e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90019034:	8832      	ldrh	r2, [r6, #0]
90019036:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
9001903a:	3201      	adds	r2, #1
9001903c:	b292      	uxth	r2, r2
9001903e:	2900      	cmp	r1, #0
90019040:	f43f aeec 	beq.w	90018e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90019044:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90019048:	4694      	mov	ip, r2
9001904a:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
9001904e:	f04f 0800 	mov.w	r8, #0
90019052:	441d      	add	r5, r3
90019054:	b22d      	sxth	r5, r5
90019056:	fa1f f38c 	uxth.w	r3, ip
9001905a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001905e:	4299      	cmp	r1, r3
90019060:	f240 80bc 	bls.w	900191dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
90019064:	4427      	add	r7, r4
90019066:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
9001906a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
9001906e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90019072:	4283      	cmp	r3, r0
90019074:	f340 809e 	ble.w	900191b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
90019078:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
9001907c:	46e0      	mov	r8, ip
9001907e:	4405      	add	r5, r0
90019080:	b22d      	sxth	r5, r5
90019082:	429d      	cmp	r5, r3
90019084:	bfa8      	it	ge
90019086:	461d      	movge	r5, r3
90019088:	f10c 0c01 	add.w	ip, ip, #1
9001908c:	e7e3      	b.n	90019056 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
9001908e:	d10a      	bne.n	900190a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
90019090:	4562      	cmp	r2, ip
90019092:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
90019096:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
9001909a:	bfb8      	it	lt
9001909c:	4662      	movlt	r2, ip
9001909e:	4288      	cmp	r0, r1
900190a0:	bfb8      	it	lt
900190a2:	4698      	movlt	r8, r3
900190a4:	e084      	b.n	900191b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
900190a6:	428a      	cmp	r2, r1
900190a8:	bfb8      	it	lt
900190aa:	460a      	movlt	r2, r1
900190ac:	e080      	b.n	900191b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
900190ae:	bf00      	nop
900190b0:	240218ca 	.word	0x240218ca
900190b4:	24000088 	.word	0x24000088
900190b8:	240218c2 	.word	0x240218c2
900190bc:	240218c0 	.word	0x240218c0
900190c0:	240218c4 	.word	0x240218c4
900190c4:	240218cc 	.word	0x240218cc
900190c8:	19e1      	adds	r1, r4, r7
900190ca:	ab0d      	add	r3, sp, #52	@ 0x34
900190cc:	f851 0fac 	ldr.w	r0, [r1, #172]!
900190d0:	6849      	ldr	r1, [r1, #4]
900190d2:	c303      	stmia	r3!, {r0, r1}
900190d4:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
900190d8:	a80d      	add	r0, sp, #52	@ 0x34
900190da:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900190de:	454b      	cmp	r3, r9
900190e0:	440b      	add	r3, r1
900190e2:	bfb8      	it	lt
900190e4:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
900190e8:	1a9b      	subs	r3, r3, r2
900190ea:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900190ee:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900190f2:	f7fe fe83 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900190f6:	a80d      	add	r0, sp, #52	@ 0x34
900190f8:	f7f8 ff2f 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900190fc:	bb78      	cbnz	r0, 9001915e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
900190fe:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
90019102:	4427      	add	r7, r4
90019104:	6828      	ldr	r0, [r5, #0]
90019106:	45cc      	cmp	ip, r9
90019108:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001910c:	f8d0 e000 	ldr.w	lr, [r0]
90019110:	bfd8      	it	le
90019112:	fa1f fc8c 	uxthle.w	ip, ip
90019116:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
9001911a:	bfc8      	it	gt
9001911c:	fa1f fc89 	uxthgt.w	ip, r9
90019120:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90019124:	f8cd c000 	str.w	ip, [sp]
90019128:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
9001912c:	47d8      	blx	fp
9001912e:	4683      	mov	fp, r0
90019130:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90019134:	a80d      	add	r0, sp, #52	@ 0x34
90019136:	f7fe fe47 	bl	90017dc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001913a:	6823      	ldr	r3, [r4, #0]
9001913c:	4620      	mov	r0, r4
9001913e:	a90d      	add	r1, sp, #52	@ 0x34
90019140:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019142:	4798      	blx	r3
90019144:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
90019148:	eba0 000b 	sub.w	r0, r0, fp
9001914c:	b200      	sxth	r0, r0
9001914e:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
90019152:	b920      	cbnz	r0, 9001915e <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90019154:	fa1f f188 	uxth.w	r1, r8
90019158:	4650      	mov	r0, sl
9001915a:	f7ff f93d 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001915e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
90019162:	f1bb 0f00 	cmp.w	fp, #0
90019166:	f43f ae59 	beq.w	90018e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001916a:	8833      	ldrh	r3, [r6, #0]
9001916c:	f04f 0800 	mov.w	r8, #0
90019170:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
90019174:	3301      	adds	r3, #1
90019176:	b29b      	uxth	r3, r3
90019178:	b299      	uxth	r1, r3
9001917a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001917e:	458b      	cmp	fp, r1
90019180:	d9a2      	bls.n	900190c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
90019182:	4427      	add	r7, r4
90019184:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90019188:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
9001918c:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
90019190:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90019194:	4408      	add	r0, r1
90019196:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001919a:	4461      	add	r1, ip
9001919c:	b200      	sxth	r0, r0
9001919e:	b209      	sxth	r1, r1
900191a0:	4288      	cmp	r0, r1
900191a2:	f6bf af74 	bge.w	9001908e <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
900191a6:	4584      	cmp	ip, r0
900191a8:	4662      	mov	r2, ip
900191aa:	4698      	mov	r8, r3
900191ac:	bfb8      	it	lt
900191ae:	4602      	movlt	r2, r0
900191b0:	3301      	adds	r3, #1
900191b2:	e7e1      	b.n	90019178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
900191b4:	d10e      	bne.n	900191d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
900191b6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
900191ba:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
900191be:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
900191c2:	4473      	add	r3, lr
900191c4:	b21b      	sxth	r3, r3
900191c6:	429d      	cmp	r5, r3
900191c8:	bfa8      	it	ge
900191ca:	461d      	movge	r5, r3
900191cc:	4287      	cmp	r7, r0
900191ce:	bfb8      	it	lt
900191d0:	46e0      	movlt	r8, ip
900191d2:	e759      	b.n	90019088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900191d4:	4285      	cmp	r5, r0
900191d6:	bfa8      	it	ge
900191d8:	4605      	movge	r5, r0
900191da:	e755      	b.n	90019088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
900191dc:	eb0a 0007 	add.w	r0, sl, r7
900191e0:	4427      	add	r7, r4
900191e2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
900191e6:	45cb      	cmp	fp, r9
900191e8:	bfbc      	itt	lt
900191ea:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
900191ee:	445d      	addlt	r5, fp
900191f0:	e9cd 2102 	strd	r2, r1, [sp, #8]
900191f4:	bfb8      	it	lt
900191f6:	b22d      	sxthlt	r5, r5
900191f8:	f7f8 feaf 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900191fc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90019200:	2800      	cmp	r0, #0
90019202:	f47f af1c 	bne.w	9001903e <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
90019206:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001920a:	fa1f fb8b 	uxth.w	fp, fp
9001920e:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90019212:	1aad      	subs	r5, r5, r2
90019214:	4829      	ldr	r0, [pc, #164]	@ (900192bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
90019216:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001921a:	454d      	cmp	r5, r9
9001921c:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90019220:	6800      	ldr	r0, [r0, #0]
90019222:	bfa8      	it	ge
90019224:	464d      	movge	r5, r9
90019226:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
9001922a:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001922e:	b289      	uxth	r1, r1
90019230:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90019234:	b2ad      	uxth	r5, r5
90019236:	f8d0 c000 	ldr.w	ip, [r0]
9001923a:	b292      	uxth	r2, r2
9001923c:	455d      	cmp	r5, fp
9001923e:	bf94      	ite	ls
90019240:	9500      	strls	r5, [sp, #0]
90019242:	f8cd b000 	strhi.w	fp, [sp]
90019246:	b29b      	uxth	r3, r3
90019248:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
9001924c:	47a8      	blx	r5
9001924e:	6823      	ldr	r3, [r4, #0]
90019250:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90019254:	a90d      	add	r1, sp, #52	@ 0x34
90019256:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019258:	4620      	mov	r0, r4
9001925a:	4798      	blx	r3
9001925c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
90019260:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
90019264:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
90019268:	1a5b      	subs	r3, r3, r1
9001926a:	440a      	add	r2, r1
9001926c:	b21b      	sxth	r3, r3
9001926e:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
90019272:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
90019276:	2b00      	cmp	r3, #0
90019278:	f47f aedc 	bne.w	90019034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
9001927c:	fa1f f188 	uxth.w	r1, r8
90019280:	4650      	mov	r0, sl
90019282:	f7ff f8a9 	bl	900183d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019286:	e6d5      	b.n	90019034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90019288:	8835      	ldrh	r5, [r6, #0]
9001928a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001928e:	42ab      	cmp	r3, r5
90019290:	f67f adc4 	bls.w	90018e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90019294:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
90019298:	ab0d      	add	r3, sp, #52	@ 0x34
9001929a:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001929e:	6851      	ldr	r1, [r2, #4]
900192a0:	c303      	stmia	r3!, {r0, r1}
900192a2:	a80d      	add	r0, sp, #52	@ 0x34
900192a4:	f7f8 fe59 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
900192a8:	b920      	cbnz	r0, 900192b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
900192aa:	6823      	ldr	r3, [r4, #0]
900192ac:	a90d      	add	r1, sp, #52	@ 0x34
900192ae:	4620      	mov	r0, r4
900192b0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900192b2:	4798      	blx	r3
900192b4:	3501      	adds	r5, #1
900192b6:	b2ad      	uxth	r5, r5
900192b8:	e7e7      	b.n	9001928a <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
900192ba:	bf00      	nop
900192bc:	240218cc 	.word	0x240218cc

900192c0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
900192c0:	4b03      	ldr	r3, [pc, #12]	@ (900192d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
900192c2:	2200      	movs	r2, #0
900192c4:	801a      	strh	r2, [r3, #0]
900192c6:	805a      	strh	r2, [r3, #2]
900192c8:	809a      	strh	r2, [r3, #4]
900192ca:	80da      	strh	r2, [r3, #6]
900192cc:	4770      	bx	lr
900192ce:	bf00      	nop
900192d0:	24021918 	.word	0x24021918

900192d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900192d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900192d8:	b09d      	sub	sp, #116	@ 0x74
900192da:	4606      	mov	r6, r0
900192dc:	4614      	mov	r4, r2
900192de:	468a      	mov	sl, r1
900192e0:	a803      	add	r0, sp, #12
900192e2:	461d      	mov	r5, r3
900192e4:	f001 f97b 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
900192e8:	6833      	ldr	r3, [r6, #0]
900192ea:	4630      	mov	r0, r6
900192ec:	f242 0b0b 	movw	fp, #8203	@ 0x200b
900192f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900192f2:	4798      	blx	r3
900192f4:	6833      	ldr	r3, [r6, #0]
900192f6:	4607      	mov	r7, r0
900192f8:	4630      	mov	r0, r6
900192fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900192fc:	4798      	blx	r3
900192fe:	462a      	mov	r2, r5
90019300:	2500      	movs	r5, #0
90019302:	4621      	mov	r1, r4
90019304:	9000      	str	r0, [sp, #0]
90019306:	463b      	mov	r3, r7
90019308:	462c      	mov	r4, r5
9001930a:	46a9      	mov	r9, r5
9001930c:	46a8      	mov	r8, r5
9001930e:	a803      	add	r0, sp, #12
90019310:	f001 f9c0 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019314:	2300      	movs	r3, #0
90019316:	9302      	str	r3, [sp, #8]
90019318:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001931c:	429c      	cmp	r4, r3
9001931e:	d002      	beq.n	90019326 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90019320:	455c      	cmp	r4, fp
90019322:	bf18      	it	ne
90019324:	4625      	movne	r5, r4
90019326:	ab02      	add	r3, sp, #8
90019328:	4632      	mov	r2, r6
9001932a:	4651      	mov	r1, sl
9001932c:	a803      	add	r0, sp, #12
9001932e:	f001 fce5 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019332:	4604      	mov	r4, r0
90019334:	b108      	cbz	r0, 9001933a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90019336:	280a      	cmp	r0, #10
90019338:	d10a      	bne.n	90019350 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001933a:	45c1      	cmp	r9, r8
9001933c:	bf38      	it	cc
9001933e:	46c1      	movcc	r9, r8
90019340:	f04f 0800 	mov.w	r8, #0
90019344:	2c00      	cmp	r4, #0
90019346:	d1e5      	bne.n	90019314 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019348:	4648      	mov	r0, r9
9001934a:	b01d      	add	sp, #116	@ 0x74
9001934c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019350:	9a02      	ldr	r2, [sp, #8]
90019352:	2a00      	cmp	r2, #0
90019354:	d0de      	beq.n	90019314 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019356:	7b57      	ldrb	r7, [r2, #13]
90019358:	4629      	mov	r1, r5
9001935a:	6833      	ldr	r3, [r6, #0]
9001935c:	007f      	lsls	r7, r7, #1
9001935e:	8894      	ldrh	r4, [r2, #4]
90019360:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019362:	f407 7080 	and.w	r0, r7, #256	@ 0x100
90019366:	7a97      	ldrb	r7, [r2, #10]
90019368:	4307      	orrs	r7, r0
9001936a:	4630      	mov	r0, r6
9001936c:	4798      	blx	r3
9001936e:	4438      	add	r0, r7
90019370:	4480      	add	r8, r0
90019372:	fa1f f888 	uxth.w	r8, r8
90019376:	e7e5      	b.n	90019344 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90019378 <_ZNK8touchgfx4Font12getCharWidthEt>:
90019378:	b508      	push	{r3, lr}
9001937a:	6803      	ldr	r3, [r0, #0]
9001937c:	68db      	ldr	r3, [r3, #12]
9001937e:	4798      	blx	r3
90019380:	b128      	cbz	r0, 9001938e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90019382:	7b43      	ldrb	r3, [r0, #13]
90019384:	7a80      	ldrb	r0, [r0, #10]
90019386:	005b      	lsls	r3, r3, #1
90019388:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001938c:	4318      	orrs	r0, r3
9001938e:	bd08      	pop	{r3, pc}

90019390 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90019390:	b40e      	push	{r1, r2, r3}
90019392:	b5f0      	push	{r4, r5, r6, r7, lr}
90019394:	b09e      	sub	sp, #120	@ 0x78
90019396:	4605      	mov	r5, r0
90019398:	ab23      	add	r3, sp, #140	@ 0x8c
9001939a:	a805      	add	r0, sp, #20
9001939c:	f853 4b04 	ldr.w	r4, [r3], #4
900193a0:	9303      	str	r3, [sp, #12]
900193a2:	f001 f91c 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
900193a6:	682b      	ldr	r3, [r5, #0]
900193a8:	4628      	mov	r0, r5
900193aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900193ac:	4798      	blx	r3
900193ae:	682b      	ldr	r3, [r5, #0]
900193b0:	4606      	mov	r6, r0
900193b2:	4628      	mov	r0, r5
900193b4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900193b6:	4798      	blx	r3
900193b8:	4633      	mov	r3, r6
900193ba:	4621      	mov	r1, r4
900193bc:	ae1e      	add	r6, sp, #120	@ 0x78
900193be:	2400      	movs	r4, #0
900193c0:	9000      	str	r0, [sp, #0]
900193c2:	9a03      	ldr	r2, [sp, #12]
900193c4:	a805      	add	r0, sp, #20
900193c6:	f001 f965 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900193ca:	f846 4d68 	str.w	r4, [r6, #-104]!
900193ce:	462a      	mov	r2, r5
900193d0:	4633      	mov	r3, r6
900193d2:	4621      	mov	r1, r4
900193d4:	a805      	add	r0, sp, #20
900193d6:	f001 fc91 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900193da:	b300      	cbz	r0, 9001941e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900193dc:	280a      	cmp	r0, #10
900193de:	d01a      	beq.n	90019416 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900193e0:	9f04      	ldr	r7, [sp, #16]
900193e2:	b1c7      	cbz	r7, 90019416 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900193e4:	7b78      	ldrb	r0, [r7, #13]
900193e6:	7a3b      	ldrb	r3, [r7, #8]
900193e8:	00c1      	lsls	r1, r0, #3
900193ea:	88ea      	ldrh	r2, [r5, #6]
900193ec:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900193f0:	4319      	orrs	r1, r3
900193f2:	0643      	lsls	r3, r0, #25
900193f4:	ea4f 1000 	mov.w	r0, r0, lsl #4
900193f8:	bf48      	it	mi
900193fa:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
900193fe:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90019402:	bf48      	it	mi
90019404:	b219      	sxthmi	r1, r3
90019406:	79fb      	ldrb	r3, [r7, #7]
90019408:	4303      	orrs	r3, r0
9001940a:	4413      	add	r3, r2
9001940c:	1a5b      	subs	r3, r3, r1
9001940e:	b21b      	sxth	r3, r3
90019410:	429c      	cmp	r4, r3
90019412:	bfb8      	it	lt
90019414:	461c      	movlt	r4, r3
90019416:	4633      	mov	r3, r6
90019418:	462a      	mov	r2, r5
9001941a:	2100      	movs	r1, #0
9001941c:	e7da      	b.n	900193d4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001941e:	b2a0      	uxth	r0, r4
90019420:	b01e      	add	sp, #120	@ 0x78
90019422:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019426:	b003      	add	sp, #12
90019428:	4770      	bx	lr

9001942a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001942a:	7a43      	ldrb	r3, [r0, #9]
9001942c:	8880      	ldrh	r0, [r0, #4]
9001942e:	4418      	add	r0, r3
90019430:	b280      	uxth	r0, r0
90019432:	4770      	bx	lr

90019434 <_ZNK8touchgfx4Font13getFontHeightEv>:
90019434:	6803      	ldr	r3, [r0, #0]
90019436:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90019438:	4718      	bx	r3

9001943a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001943a:	b40e      	push	{r1, r2, r3}
9001943c:	b570      	push	{r4, r5, r6, lr}
9001943e:	b09d      	sub	sp, #116	@ 0x74
90019440:	4604      	mov	r4, r0
90019442:	ab21      	add	r3, sp, #132	@ 0x84
90019444:	a803      	add	r0, sp, #12
90019446:	f853 5b04 	ldr.w	r5, [r3], #4
9001944a:	9302      	str	r3, [sp, #8]
9001944c:	f001 f8c7 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
90019450:	6823      	ldr	r3, [r4, #0]
90019452:	4620      	mov	r0, r4
90019454:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90019456:	4798      	blx	r3
90019458:	6823      	ldr	r3, [r4, #0]
9001945a:	4606      	mov	r6, r0
9001945c:	4620      	mov	r0, r4
9001945e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90019460:	2401      	movs	r4, #1
90019462:	4798      	blx	r3
90019464:	4633      	mov	r3, r6
90019466:	9000      	str	r0, [sp, #0]
90019468:	4629      	mov	r1, r5
9001946a:	9a02      	ldr	r2, [sp, #8]
9001946c:	a803      	add	r0, sp, #12
9001946e:	f001 f911 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019472:	a803      	add	r0, sp, #12
90019474:	f001 fd0e 	bl	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
90019478:	b2a3      	uxth	r3, r4
9001947a:	b138      	cbz	r0, 9001948c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001947c:	280a      	cmp	r0, #10
9001947e:	a803      	add	r0, sp, #12
90019480:	bf04      	itt	eq
90019482:	3301      	addeq	r3, #1
90019484:	b21c      	sxtheq	r4, r3
90019486:	f001 fd05 	bl	9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001948a:	e7f5      	b.n	90019478 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001948c:	4618      	mov	r0, r3
9001948e:	b01d      	add	sp, #116	@ 0x74
90019490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019494:	b003      	add	sp, #12
90019496:	4770      	bx	lr

90019498 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90019498:	b40e      	push	{r1, r2, r3}
9001949a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001949c:	b09e      	sub	sp, #120	@ 0x78
9001949e:	4604      	mov	r4, r0
900194a0:	ab23      	add	r3, sp, #140	@ 0x8c
900194a2:	a805      	add	r0, sp, #20
900194a4:	f853 5b04 	ldr.w	r5, [r3], #4
900194a8:	9303      	str	r3, [sp, #12]
900194aa:	f001 f898 	bl	9001a5de <_ZN8touchgfx12TextProviderC1Ev>
900194ae:	6823      	ldr	r3, [r4, #0]
900194b0:	4620      	mov	r0, r4
900194b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900194b4:	4798      	blx	r3
900194b6:	6823      	ldr	r3, [r4, #0]
900194b8:	4606      	mov	r6, r0
900194ba:	4620      	mov	r0, r4
900194bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900194be:	4798      	blx	r3
900194c0:	4633      	mov	r3, r6
900194c2:	4629      	mov	r1, r5
900194c4:	9000      	str	r0, [sp, #0]
900194c6:	9a03      	ldr	r2, [sp, #12]
900194c8:	a805      	add	r0, sp, #20
900194ca:	f001 f8e3 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900194ce:	ad1e      	add	r5, sp, #120	@ 0x78
900194d0:	2100      	movs	r1, #0
900194d2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900194d6:	4622      	mov	r2, r4
900194d8:	a805      	add	r0, sp, #20
900194da:	f845 1d68 	str.w	r1, [r5, #-104]!
900194de:	462b      	mov	r3, r5
900194e0:	f001 fc0c 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900194e4:	b1d8      	cbz	r0, 9001951e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900194e6:	280a      	cmp	r0, #10
900194e8:	d012      	beq.n	90019510 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900194ea:	9804      	ldr	r0, [sp, #16]
900194ec:	b180      	cbz	r0, 90019510 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900194ee:	7b47      	ldrb	r7, [r0, #13]
900194f0:	88e2      	ldrh	r2, [r4, #6]
900194f2:	00fb      	lsls	r3, r7, #3
900194f4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900194f8:	7a03      	ldrb	r3, [r0, #8]
900194fa:	430b      	orrs	r3, r1
900194fc:	0679      	lsls	r1, r7, #25
900194fe:	bf44      	itt	mi
90019500:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019504:	b21b      	sxthmi	r3, r3
90019506:	1ad3      	subs	r3, r2, r3
90019508:	b21b      	sxth	r3, r3
9001950a:	429e      	cmp	r6, r3
9001950c:	bfa8      	it	ge
9001950e:	461e      	movge	r6, r3
90019510:	462b      	mov	r3, r5
90019512:	4622      	mov	r2, r4
90019514:	2100      	movs	r1, #0
90019516:	a805      	add	r0, sp, #20
90019518:	f001 fbf0 	bl	9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001951c:	e7e2      	b.n	900194e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001951e:	4630      	mov	r0, r6
90019520:	b01e      	add	sp, #120	@ 0x78
90019522:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019526:	b003      	add	sp, #12
90019528:	4770      	bx	lr

9001952a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001952a:	b513      	push	{r0, r1, r4, lr}
9001952c:	6803      	ldr	r3, [r0, #0]
9001952e:	2400      	movs	r4, #0
90019530:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90019534:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019538:	f8ad 1004 	strh.w	r1, [sp, #4]
9001953c:	4669      	mov	r1, sp
9001953e:	691b      	ldr	r3, [r3, #16]
90019540:	9400      	str	r4, [sp, #0]
90019542:	f8ad 2006 	strh.w	r2, [sp, #6]
90019546:	4798      	blx	r3
90019548:	b002      	add	sp, #8
9001954a:	bd10      	pop	{r4, pc}

9001954c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001954c:	b538      	push	{r3, r4, r5, lr}
9001954e:	680b      	ldr	r3, [r1, #0]
90019550:	460c      	mov	r4, r1
90019552:	4605      	mov	r5, r0
90019554:	68db      	ldr	r3, [r3, #12]
90019556:	4798      	blx	r3
90019558:	6823      	ldr	r3, [r4, #0]
9001955a:	4620      	mov	r0, r4
9001955c:	4629      	mov	r1, r5
9001955e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019560:	4798      	blx	r3
90019562:	4628      	mov	r0, r5
90019564:	bd38      	pop	{r3, r4, r5, pc}

90019566 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90019566:	b410      	push	{r4}
90019568:	880a      	ldrh	r2, [r1, #0]
9001956a:	8884      	ldrh	r4, [r0, #4]
9001956c:	4422      	add	r2, r4
9001956e:	800a      	strh	r2, [r1, #0]
90019570:	884a      	ldrh	r2, [r1, #2]
90019572:	88c4      	ldrh	r4, [r0, #6]
90019574:	4422      	add	r2, r4
90019576:	804a      	strh	r2, [r1, #2]
90019578:	6940      	ldr	r0, [r0, #20]
9001957a:	b120      	cbz	r0, 90019586 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001957c:	6803      	ldr	r3, [r0, #0]
9001957e:	f85d 4b04 	ldr.w	r4, [sp], #4
90019582:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019584:	4718      	bx	r3
90019586:	f85d 4b04 	ldr.w	r4, [sp], #4
9001958a:	4770      	bx	lr

9001958c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001958c:	b570      	push	{r4, r5, r6, lr}
9001958e:	8882      	ldrh	r2, [r0, #4]
90019590:	460c      	mov	r4, r1
90019592:	880b      	ldrh	r3, [r1, #0]
90019594:	4605      	mov	r5, r0
90019596:	4413      	add	r3, r2
90019598:	800b      	strh	r3, [r1, #0]
9001959a:	884b      	ldrh	r3, [r1, #2]
9001959c:	88c2      	ldrh	r2, [r0, #6]
9001959e:	4413      	add	r3, r2
900195a0:	804b      	strh	r3, [r1, #2]
900195a2:	1d01      	adds	r1, r0, #4
900195a4:	4620      	mov	r0, r4
900195a6:	f7f8 fc95 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900195aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900195ae:	2b00      	cmp	r3, #0
900195b0:	dd0b      	ble.n	900195ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900195b6:	2b00      	cmp	r3, #0
900195b8:	dd07      	ble.n	900195ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195ba:	6968      	ldr	r0, [r5, #20]
900195bc:	b128      	cbz	r0, 900195ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900195be:	6803      	ldr	r3, [r0, #0]
900195c0:	4621      	mov	r1, r4
900195c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900195c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900195c8:	4718      	bx	r3
900195ca:	bd70      	pop	{r4, r5, r6, pc}

900195cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900195cc:	b570      	push	{r4, r5, r6, lr}
900195ce:	8882      	ldrh	r2, [r0, #4]
900195d0:	460c      	mov	r4, r1
900195d2:	880b      	ldrh	r3, [r1, #0]
900195d4:	4605      	mov	r5, r0
900195d6:	4413      	add	r3, r2
900195d8:	800b      	strh	r3, [r1, #0]
900195da:	884b      	ldrh	r3, [r1, #2]
900195dc:	88c2      	ldrh	r2, [r0, #6]
900195de:	4413      	add	r3, r2
900195e0:	804b      	strh	r3, [r1, #2]
900195e2:	1d01      	adds	r1, r0, #4
900195e4:	4620      	mov	r0, r4
900195e6:	f7f8 fc75 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
900195ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900195ee:	2b00      	cmp	r3, #0
900195f0:	dd19      	ble.n	90019626 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900195f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900195f6:	2b00      	cmp	r3, #0
900195f8:	dd15      	ble.n	90019626 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900195fa:	6968      	ldr	r0, [r5, #20]
900195fc:	b128      	cbz	r0, 9001960a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900195fe:	6803      	ldr	r3, [r0, #0]
90019600:	4621      	mov	r1, r4
90019602:	691b      	ldr	r3, [r3, #16]
90019604:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019608:	4718      	bx	r3
9001960a:	4b07      	ldr	r3, [pc, #28]	@ (90019628 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001960c:	681b      	ldr	r3, [r3, #0]
9001960e:	3304      	adds	r3, #4
90019610:	429d      	cmp	r5, r3
90019612:	d108      	bne.n	90019626 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019614:	f7fe fda8 	bl	90018168 <_ZN8touchgfx11Application11getInstanceEv>
90019618:	6803      	ldr	r3, [r0, #0]
9001961a:	6821      	ldr	r1, [r4, #0]
9001961c:	6862      	ldr	r2, [r4, #4]
9001961e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90019620:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019624:	4718      	bx	r3
90019626:	bd70      	pop	{r4, r5, r6, pc}
90019628:	24021910 	.word	0x24021910

9001962c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001962c:	b570      	push	{r4, r5, r6, lr}
9001962e:	4604      	mov	r4, r0
90019630:	4616      	mov	r6, r2
90019632:	460d      	mov	r5, r1
90019634:	b901      	cbnz	r1, 90019638 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90019636:	b192      	cbz	r2, 9001965e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90019638:	6823      	ldr	r3, [r4, #0]
9001963a:	4620      	mov	r0, r4
9001963c:	699b      	ldr	r3, [r3, #24]
9001963e:	4798      	blx	r3
90019640:	88e2      	ldrh	r2, [r4, #6]
90019642:	88a1      	ldrh	r1, [r4, #4]
90019644:	4620      	mov	r0, r4
90019646:	4432      	add	r2, r6
90019648:	4429      	add	r1, r5
9001964a:	b212      	sxth	r2, r2
9001964c:	b209      	sxth	r1, r1
9001964e:	f7f8 ff25 	bl	9001249c <_ZN8touchgfx8Drawable5setXYEss>
90019652:	6823      	ldr	r3, [r4, #0]
90019654:	4620      	mov	r0, r4
90019656:	699b      	ldr	r3, [r3, #24]
90019658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001965c:	4718      	bx	r3
9001965e:	bd70      	pop	{r4, r5, r6, pc}

90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90019660:	b510      	push	{r4, lr}
90019662:	2300      	movs	r3, #0
90019664:	4604      	mov	r4, r0
90019666:	4608      	mov	r0, r1
90019668:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001966c:	8023      	strh	r3, [r4, #0]
9001966e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019672:	8063      	strh	r3, [r4, #2]
90019674:	6803      	ldr	r3, [r0, #0]
90019676:	80a1      	strh	r1, [r4, #4]
90019678:	4621      	mov	r1, r4
9001967a:	80e2      	strh	r2, [r4, #6]
9001967c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001967e:	4798      	blx	r3
90019680:	4620      	mov	r0, r4
90019682:	bd10      	pop	{r4, pc}

90019684 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90019684:	4770      	bx	lr

90019686 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90019686:	b510      	push	{r4, lr}
90019688:	4604      	mov	r4, r0
9001968a:	211c      	movs	r1, #28
9001968c:	f011 fc10 	bl	9002aeb0 <_ZdlPvj>
90019690:	4620      	mov	r0, r4
90019692:	bd10      	pop	{r4, pc}

90019694 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90019694:	4a04      	ldr	r2, [pc, #16]	@ (900196a8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90019696:	6002      	str	r2, [r0, #0]
90019698:	2200      	movs	r2, #0
9001969a:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001969e:	e9c0 2203 	strd	r2, r2, [r0, #12]
900196a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
900196a6:	4770      	bx	lr
900196a8:	9002f8c0 	.word	0x9002f8c0

900196ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
900196ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900196b0:	4604      	mov	r4, r0
900196b2:	b087      	sub	sp, #28
900196b4:	8b45      	ldrh	r5, [r0, #26]
900196b6:	f8b2 c000 	ldrh.w	ip, [r2]
900196ba:	9105      	str	r1, [sp, #20]
900196bc:	1c68      	adds	r0, r5, #1
900196be:	68e1      	ldr	r1, [r4, #12]
900196c0:	9203      	str	r2, [sp, #12]
900196c2:	b280      	uxth	r0, r0
900196c4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900196c8:	f01c 0501 	ands.w	r5, ip, #1
900196cc:	f9b3 2000 	ldrsh.w	r2, [r3]
900196d0:	9502      	str	r5, [sp, #8]
900196d2:	d07d      	beq.n	900197d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
900196d4:	ee07 2a90 	vmov	s15, r2
900196d8:	8360      	strh	r0, [r4, #26]
900196da:	f04f 0e00 	mov.w	lr, #0
900196de:	eef8 6ae7 	vcvt.f32.s32	s13, s15
900196e2:	ee06 ea10 	vmov	s12, lr
900196e6:	edc1 6a00 	vstr	s13, [r1]
900196ea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900196ee:	8b61      	ldrh	r1, [r4, #26]
900196f0:	ee07 2a10 	vmov	s14, r2
900196f4:	68e2      	ldr	r2, [r4, #12]
900196f6:	1c48      	adds	r0, r1, #1
900196f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900196fc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90019700:	8360      	strh	r0, [r4, #26]
90019702:	ed82 7a00 	vstr	s14, [r2]
90019706:	8b21      	ldrh	r1, [r4, #24]
90019708:	2501      	movs	r5, #1
9001970a:	68a2      	ldr	r2, [r4, #8]
9001970c:	3304      	adds	r3, #4
9001970e:	1c48      	adds	r0, r1, #1
90019710:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90019714:	9300      	str	r3, [sp, #0]
90019716:	46aa      	mov	sl, r5
90019718:	8320      	strh	r0, [r4, #24]
9001971a:	462e      	mov	r6, r5
9001971c:	5455      	strb	r5, [r2, r1]
9001971e:	2200      	movs	r2, #0
90019720:	ee07 2a90 	vmov	s15, r2
90019724:	4613      	mov	r3, r2
90019726:	4611      	mov	r1, r2
90019728:	9201      	str	r2, [sp, #4]
9001972a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001972e:	9805      	ldr	r0, [sp, #20]
90019730:	f108 0701 	add.w	r7, r8, #1
90019734:	f8d4 b008 	ldr.w	fp, [r4, #8]
90019738:	42a8      	cmp	r0, r5
9001973a:	b2bf      	uxth	r7, r7
9001973c:	eb0b 0908 	add.w	r9, fp, r8
90019740:	f340 80db 	ble.w	900198fa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
90019744:	fa4c f906 	asr.w	r9, ip, r6
90019748:	f009 0901 	and.w	r9, r9, #1
9001974c:	fa5f f389 	uxtb.w	r3, r9
90019750:	9304      	str	r3, [sp, #16]
90019752:	9b00      	ldr	r3, [sp, #0]
90019754:	f9b3 1000 	ldrsh.w	r1, [r3]
90019758:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001975c:	f1b9 0f00 	cmp.w	r9, #0
90019760:	d07d      	beq.n	9001985e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
90019762:	ee05 1a10 	vmov	s10, r1
90019766:	8327      	strh	r7, [r4, #24]
90019768:	eef8 4ac5 	vcvt.f32.s32	s9, s10
9001976c:	ee05 3a10 	vmov	s10, r3
90019770:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90019774:	f1ba 0f00 	cmp.w	sl, #0
90019778:	d050      	beq.n	9001981c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
9001977a:	f04f 0002 	mov.w	r0, #2
9001977e:	f80b 0008 	strb.w	r0, [fp, r8]
90019782:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019786:	68e7      	ldr	r7, [r4, #12]
90019788:	f108 0901 	add.w	r9, r8, #1
9001978c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019790:	f8a4 901a 	strh.w	r9, [r4, #26]
90019794:	edc7 4a00 	vstr	s9, [r7]
90019798:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001979c:	68e7      	ldr	r7, [r4, #12]
9001979e:	f108 0901 	add.w	r9, r8, #1
900197a2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900197a6:	f8a4 901a 	strh.w	r9, [r4, #26]
900197aa:	ed87 5a00 	vstr	s10, [r7]
900197ae:	3601      	adds	r6, #1
900197b0:	2e10      	cmp	r6, #16
900197b2:	d106      	bne.n	900197c2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
900197b4:	9e01      	ldr	r6, [sp, #4]
900197b6:	9803      	ldr	r0, [sp, #12]
900197b8:	3601      	adds	r6, #1
900197ba:	9601      	str	r6, [sp, #4]
900197bc:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
900197c0:	2600      	movs	r6, #0
900197c2:	9800      	ldr	r0, [sp, #0]
900197c4:	3501      	adds	r5, #1
900197c6:	f8dd a010 	ldr.w	sl, [sp, #16]
900197ca:	3004      	adds	r0, #4
900197cc:	9000      	str	r0, [sp, #0]
900197ce:	e7ac      	b.n	9001972a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
900197d0:	ee06 2a10 	vmov	s12, r2
900197d4:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
900197d8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900197dc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900197e0:	ee16 5a10 	vmov	r5, s12
900197e4:	442a      	add	r2, r5
900197e6:	ee06 2a90 	vmov	s13, r2
900197ea:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
900197ee:	8360      	strh	r0, [r4, #26]
900197f0:	4472      	add	r2, lr
900197f2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900197f6:	ee07 2a10 	vmov	s14, r2
900197fa:	ee66 6aa7 	vmul.f32	s13, s13, s15
900197fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019802:	edc1 6a00 	vstr	s13, [r1]
90019806:	8b61      	ldrh	r1, [r4, #26]
90019808:	ee27 7a27 	vmul.f32	s14, s14, s15
9001980c:	68e2      	ldr	r2, [r4, #12]
9001980e:	1c48      	adds	r0, r1, #1
90019810:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90019814:	8360      	strh	r0, [r4, #26]
90019816:	ed82 7a00 	vstr	s14, [r2]
9001981a:	e774      	b.n	90019706 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
9001981c:	f04f 0005 	mov.w	r0, #5
90019820:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
90019824:	f80b 0008 	strb.w	r0, [fp, r8]
90019828:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001982c:	68e7      	ldr	r7, [r4, #12]
9001982e:	f108 0901 	add.w	r9, r8, #1
90019832:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019836:	f8a4 901a 	strh.w	r9, [r4, #26]
9001983a:	ed87 4a00 	vstr	s8, [r7]
9001983e:	ee04 2a10 	vmov	s8, r2
90019842:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90019846:	68e7      	ldr	r7, [r4, #12]
90019848:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
9001984c:	f108 0901 	add.w	r9, r8, #1
90019850:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019854:	f8a4 901a 	strh.w	r9, [r4, #26]
90019858:	ed87 4a00 	vstr	s8, [r7]
9001985c:	e791      	b.n	90019782 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
9001985e:	f1ba 0f00 	cmp.w	sl, #0
90019862:	d146      	bne.n	900198f2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
90019864:	f04f 0005 	mov.w	r0, #5
90019868:	8327      	strh	r7, [r4, #24]
9001986a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001986e:	f80b 0008 	strb.w	r0, [fp, r8]
90019872:	ee17 0a90 	vmov	r0, s15
90019876:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001987a:	68e7      	ldr	r7, [r4, #12]
9001987c:	4408      	add	r0, r1
9001987e:	f108 0901 	add.w	r9, r8, #1
90019882:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90019886:	ee07 0a90 	vmov	s15, r0
9001988a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001988e:	ed87 5a00 	vstr	s10, [r7]
90019892:	ee05 2a10 	vmov	s10, r2
90019896:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001989a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001989e:	68e7      	ldr	r7, [r4, #12]
900198a0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900198a4:	f108 0901 	add.w	r9, r8, #1
900198a8:	441a      	add	r2, r3
900198aa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900198ae:	ee67 7aa5 	vmul.f32	s15, s15, s11
900198b2:	f8a4 901a 	strh.w	r9, [r4, #26]
900198b6:	ed87 5a00 	vstr	s10, [r7]
900198ba:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900198be:	68e7      	ldr	r7, [r4, #12]
900198c0:	f108 0901 	add.w	r9, r8, #1
900198c4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900198c8:	f8a4 901a 	strh.w	r9, [r4, #26]
900198cc:	edc7 7a00 	vstr	s15, [r7]
900198d0:	ee07 2a90 	vmov	s15, r2
900198d4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900198d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900198dc:	68e7      	ldr	r7, [r4, #12]
900198de:	f108 0901 	add.w	r9, r8, #1
900198e2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900198e6:	ee67 7aa5 	vmul.f32	s15, s15, s11
900198ea:	f8a4 901a 	strh.w	r9, [r4, #26]
900198ee:	edc7 7a00 	vstr	s15, [r7]
900198f2:	461a      	mov	r2, r3
900198f4:	ee07 1a90 	vmov	s15, r1
900198f8:	e759      	b.n	900197ae <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
900198fa:	f1ba 0f00 	cmp.w	sl, #0
900198fe:	d045      	beq.n	9001998c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90019900:	ee05 1a90 	vmov	s11, r1
90019904:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90019908:	eef4 5a66 	vcmp.f32	s11, s13
9001990c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019910:	d108      	bne.n	90019924 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
90019912:	ee05 3a90 	vmov	s11, r3
90019916:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001991a:	eef4 5a47 	vcmp.f32	s11, s14
9001991e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019922:	d033      	beq.n	9001998c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90019924:	9b02      	ldr	r3, [sp, #8]
90019926:	8327      	strh	r7, [r4, #24]
90019928:	b1b3      	cbz	r3, 90019958 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
9001992a:	2302      	movs	r3, #2
9001992c:	f889 3000 	strb.w	r3, [r9]
90019930:	8b62      	ldrh	r2, [r4, #26]
90019932:	68e3      	ldr	r3, [r4, #12]
90019934:	1c51      	adds	r1, r2, #1
90019936:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001993a:	8361      	strh	r1, [r4, #26]
9001993c:	edc3 6a00 	vstr	s13, [r3]
90019940:	8b62      	ldrh	r2, [r4, #26]
90019942:	68e3      	ldr	r3, [r4, #12]
90019944:	1c51      	adds	r1, r2, #1
90019946:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001994a:	8361      	strh	r1, [r4, #26]
9001994c:	ed83 7a00 	vstr	s14, [r3]
90019950:	9800      	ldr	r0, [sp, #0]
90019952:	b007      	add	sp, #28
90019954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019958:	2305      	movs	r3, #5
9001995a:	f889 3000 	strb.w	r3, [r9]
9001995e:	8b62      	ldrh	r2, [r4, #26]
90019960:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90019964:	68e3      	ldr	r3, [r4, #12]
90019966:	ee07 ea90 	vmov	s15, lr
9001996a:	1c51      	adds	r1, r2, #1
9001996c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90019970:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019974:	8361      	strh	r1, [r4, #26]
90019976:	ed83 6a00 	vstr	s12, [r3]
9001997a:	8b62      	ldrh	r2, [r4, #26]
9001997c:	68e3      	ldr	r3, [r4, #12]
9001997e:	1c51      	adds	r1, r2, #1
90019980:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90019984:	8361      	strh	r1, [r4, #26]
90019986:	edc3 7a00 	vstr	s15, [r3]
9001998a:	e7d1      	b.n	90019930 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
9001998c:	ee05 2a90 	vmov	s11, r2
90019990:	2305      	movs	r3, #5
90019992:	9902      	ldr	r1, [sp, #8]
90019994:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90019998:	8327      	strh	r7, [r4, #24]
9001999a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001999e:	f889 3000 	strb.w	r3, [r9]
900199a2:	b181      	cbz	r1, 900199c6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
900199a4:	8b62      	ldrh	r2, [r4, #26]
900199a6:	68e3      	ldr	r3, [r4, #12]
900199a8:	1c51      	adds	r1, r2, #1
900199aa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900199ae:	8361      	strh	r1, [r4, #26]
900199b0:	ed83 5a00 	vstr	s10, [r3]
900199b4:	8b62      	ldrh	r2, [r4, #26]
900199b6:	68e3      	ldr	r3, [r4, #12]
900199b8:	1c51      	adds	r1, r2, #1
900199ba:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900199be:	8361      	strh	r1, [r4, #26]
900199c0:	edc3 5a00 	vstr	s11, [r3]
900199c4:	e7b4      	b.n	90019930 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
900199c6:	8b65      	ldrh	r5, [r4, #26]
900199c8:	ee17 0a90 	vmov	r0, s15
900199cc:	68e1      	ldr	r1, [r4, #12]
900199ce:	4472      	add	r2, lr
900199d0:	1c6e      	adds	r6, r5, #1
900199d2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900199d6:	8366      	strh	r6, [r4, #26]
900199d8:	ed81 5a00 	vstr	s10, [r1]
900199dc:	8b65      	ldrh	r5, [r4, #26]
900199de:	68e1      	ldr	r1, [r4, #12]
900199e0:	1c6e      	adds	r6, r5, #1
900199e2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900199e6:	8366      	strh	r6, [r4, #26]
900199e8:	edc1 5a00 	vstr	s11, [r1]
900199ec:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
900199f0:	8b65      	ldrh	r5, [r4, #26]
900199f2:	68e1      	ldr	r1, [r4, #12]
900199f4:	1c6e      	adds	r6, r5, #1
900199f6:	eb01 0185 	add.w	r1, r1, r5, lsl #2
900199fa:	ee16 5a10 	vmov	r5, s12
900199fe:	8366      	strh	r6, [r4, #26]
90019a00:	4428      	add	r0, r5
90019a02:	ee07 0a90 	vmov	s15, r0
90019a06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019a0a:	ee67 7aa5 	vmul.f32	s15, s15, s11
90019a0e:	edc1 7a00 	vstr	s15, [r1]
90019a12:	ee07 2a90 	vmov	s15, r2
90019a16:	8b61      	ldrh	r1, [r4, #26]
90019a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019a1c:	68e5      	ldr	r5, [r4, #12]
90019a1e:	1c4e      	adds	r6, r1, #1
90019a20:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90019a24:	ee67 7aa5 	vmul.f32	s15, s15, s11
90019a28:	8366      	strh	r6, [r4, #26]
90019a2a:	edc1 7a00 	vstr	s15, [r1]
90019a2e:	8b22      	ldrh	r2, [r4, #24]
90019a30:	68a1      	ldr	r1, [r4, #8]
90019a32:	1c55      	adds	r5, r2, #1
90019a34:	8325      	strh	r5, [r4, #24]
90019a36:	548b      	strb	r3, [r1, r2]
90019a38:	e791      	b.n	9001995e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90019a3c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90019a3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019a40:	4604      	mov	r4, r0
90019a42:	b08e      	sub	sp, #56	@ 0x38
90019a44:	4699      	mov	r9, r3
90019a46:	4688      	mov	r8, r1
90019a48:	4615      	mov	r5, r2
90019a4a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90019a4c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90019a50:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90019a52:	f7e9 fd51 	bl	900034f8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90019a56:	6060      	str	r0, [r4, #4]
90019a58:	f1b9 0f00 	cmp.w	r9, #0
90019a5c:	f000 80e8 	beq.w	90019c30 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90019a60:	2800      	cmp	r0, #0
90019a62:	f000 80e5 	beq.w	90019c30 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90019a66:	a805      	add	r0, sp, #20
90019a68:	f000 f8f9 	bl	90019c5e <_ZN8touchgfx9Matrix3x3C1Ev>
90019a6c:	6833      	ldr	r3, [r6, #0]
90019a6e:	4630      	mov	r0, r6
90019a70:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90019a72:	4798      	blx	r3
90019a74:	a805      	add	r0, sp, #20
90019a76:	eef0 0a40 	vmov.f32	s1, s0
90019a7a:	f000 f8f4 	bl	90019c66 <_ZN8touchgfx9Matrix3x35scaleEff>
90019a7e:	6860      	ldr	r0, [r4, #4]
90019a80:	f1ba 0f03 	cmp.w	sl, #3
90019a84:	d83b      	bhi.n	90019afe <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90019a86:	e8df f00a 	tbb	[pc, sl]
90019a8a:	1002      	.short	0x1002
90019a8c:	9f71      	.short	0x9f71
90019a8e:	6803      	ldr	r3, [r0, #0]
90019a90:	462a      	mov	r2, r5
90019a92:	4641      	mov	r1, r8
90019a94:	689b      	ldr	r3, [r3, #8]
90019a96:	4798      	blx	r3
90019a98:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90019a9c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90019aa0:	ee07 7a90 	vmov	s15, r7
90019aa4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90019aa8:	e026      	b.n	90019af8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90019aaa:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90019aae:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90019ab2:	8869      	ldrh	r1, [r5, #2]
90019ab4:	1a9b      	subs	r3, r3, r2
90019ab6:	f8ad 2010 	strh.w	r2, [sp, #16]
90019aba:	aa03      	add	r2, sp, #12
90019abc:	1a5b      	subs	r3, r3, r1
90019abe:	4641      	mov	r1, r8
90019ac0:	f8ad 300c 	strh.w	r3, [sp, #12]
90019ac4:	882b      	ldrh	r3, [r5, #0]
90019ac6:	f8ad 300e 	strh.w	r3, [sp, #14]
90019aca:	88ab      	ldrh	r3, [r5, #4]
90019acc:	f8ad 3012 	strh.w	r3, [sp, #18]
90019ad0:	6803      	ldr	r3, [r0, #0]
90019ad2:	689b      	ldr	r3, [r3, #8]
90019ad4:	4798      	blx	r3
90019ad6:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90019c38 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90019ada:	a805      	add	r0, sp, #20
90019adc:	f000 f8e8 	bl	90019cb0 <_ZN8touchgfx9Matrix3x36rotateEf>
90019ae0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90019ae4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90019ae6:	ee07 7a90 	vmov	s15, r7
90019aea:	1a9b      	subs	r3, r3, r2
90019aec:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90019af0:	ee00 3a10 	vmov	s0, r3
90019af4:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90019af8:	a805      	add	r0, sp, #20
90019afa:	f000 f927 	bl	90019d4c <_ZN8touchgfx9Matrix3x39translateEff>
90019afe:	6860      	ldr	r0, [r4, #4]
90019b00:	a905      	add	r1, sp, #20
90019b02:	2500      	movs	r5, #0
90019b04:	f109 0602 	add.w	r6, r9, #2
90019b08:	6803      	ldr	r3, [r0, #0]
90019b0a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90019b0c:	4798      	blx	r3
90019b0e:	6860      	ldr	r0, [r4, #4]
90019b10:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90019b12:	6803      	ldr	r3, [r0, #0]
90019b14:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90019b18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019b1a:	4798      	blx	r3
90019b1c:	6860      	ldr	r0, [r4, #4]
90019b1e:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90019b22:	6803      	ldr	r3, [r0, #0]
90019b24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019b26:	4798      	blx	r3
90019b28:	6860      	ldr	r0, [r4, #4]
90019b2a:	2101      	movs	r1, #1
90019b2c:	6803      	ldr	r3, [r0, #0]
90019b2e:	68db      	ldr	r3, [r3, #12]
90019b30:	4798      	blx	r3
90019b32:	f8b9 7000 	ldrh.w	r7, [r9]
90019b36:	f104 0310 	add.w	r3, r4, #16
90019b3a:	61a5      	str	r5, [r4, #24]
90019b3c:	f104 0208 	add.w	r2, r4, #8
90019b40:	f104 0114 	add.w	r1, r4, #20
90019b44:	f104 000c 	add.w	r0, r4, #12
90019b48:	f7ec f9ca 	bl	90005ee0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90019b4c:	42af      	cmp	r7, r5
90019b4e:	dd60      	ble.n	90019c12 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90019b50:	8831      	ldrh	r1, [r6, #0]
90019b52:	1cb2      	adds	r2, r6, #2
90019b54:	4620      	mov	r0, r4
90019b56:	3501      	adds	r5, #1
90019b58:	f101 030f 	add.w	r3, r1, #15
90019b5c:	f3c3 1307 	ubfx	r3, r3, #4, #8
90019b60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90019b64:	f7ff fda2 	bl	900196ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90019b68:	4606      	mov	r6, r0
90019b6a:	e7ef      	b.n	90019b4c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90019b6c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90019b70:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90019b74:	8829      	ldrh	r1, [r5, #0]
90019b76:	1a9b      	subs	r3, r3, r2
90019b78:	f8ad 2010 	strh.w	r2, [sp, #16]
90019b7c:	aa03      	add	r2, sp, #12
90019b7e:	1a5b      	subs	r3, r3, r1
90019b80:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019b84:	886d      	ldrh	r5, [r5, #2]
90019b86:	f8ad 300c 	strh.w	r3, [sp, #12]
90019b8a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90019b8e:	f8ad 1012 	strh.w	r1, [sp, #18]
90019b92:	1a5b      	subs	r3, r3, r1
90019b94:	4641      	mov	r1, r8
90019b96:	1b5b      	subs	r3, r3, r5
90019b98:	f8ad 300e 	strh.w	r3, [sp, #14]
90019b9c:	6803      	ldr	r3, [r0, #0]
90019b9e:	689b      	ldr	r3, [r3, #8]
90019ba0:	4798      	blx	r3
90019ba2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90019c3c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90019ba6:	a805      	add	r0, sp, #20
90019ba8:	f000 f882 	bl	90019cb0 <_ZN8touchgfx9Matrix3x36rotateEf>
90019bac:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90019bb0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90019bb2:	1a9b      	subs	r3, r3, r2
90019bb4:	ee00 3a90 	vmov	s1, r3
90019bb8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90019bbc:	1bdb      	subs	r3, r3, r7
90019bbe:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90019bc2:	ee00 3a10 	vmov	s0, r3
90019bc6:	e795      	b.n	90019af4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90019bc8:	886b      	ldrh	r3, [r5, #2]
90019bca:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90019bce:	f8ad 300c 	strh.w	r3, [sp, #12]
90019bd2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90019bd6:	8829      	ldrh	r1, [r5, #0]
90019bd8:	1a9b      	subs	r3, r3, r2
90019bda:	f8ad 2012 	strh.w	r2, [sp, #18]
90019bde:	aa03      	add	r2, sp, #12
90019be0:	1a5b      	subs	r3, r3, r1
90019be2:	4641      	mov	r1, r8
90019be4:	f8ad 300e 	strh.w	r3, [sp, #14]
90019be8:	88eb      	ldrh	r3, [r5, #6]
90019bea:	f8ad 3010 	strh.w	r3, [sp, #16]
90019bee:	6803      	ldr	r3, [r0, #0]
90019bf0:	689b      	ldr	r3, [r3, #8]
90019bf2:	4798      	blx	r3
90019bf4:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90019c40 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90019bf8:	a805      	add	r0, sp, #20
90019bfa:	f000 f859 	bl	90019cb0 <_ZN8touchgfx9Matrix3x36rotateEf>
90019bfe:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90019c02:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90019c06:	1bdb      	subs	r3, r3, r7
90019c08:	ee00 3a90 	vmov	s1, r3
90019c0c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90019c10:	e748      	b.n	90019aa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90019c12:	6860      	ldr	r0, [r4, #4]
90019c14:	2100      	movs	r1, #0
90019c16:	8b22      	ldrh	r2, [r4, #24]
90019c18:	6803      	ldr	r3, [r0, #0]
90019c1a:	9101      	str	r1, [sp, #4]
90019c1c:	8b61      	ldrh	r1, [r4, #26]
90019c1e:	9100      	str	r1, [sp, #0]
90019c20:	6a1d      	ldr	r5, [r3, #32]
90019c22:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90019c26:	47a8      	blx	r5
90019c28:	6860      	ldr	r0, [r4, #4]
90019c2a:	6803      	ldr	r3, [r0, #0]
90019c2c:	69db      	ldr	r3, [r3, #28]
90019c2e:	4798      	blx	r3
90019c30:	b00e      	add	sp, #56	@ 0x38
90019c32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019c36:	bf00      	nop
90019c38:	42b40000 	.word	0x42b40000
90019c3c:	43340000 	.word	0x43340000
90019c40:	43870000 	.word	0x43870000

90019c44 <_ZN8touchgfx9Matrix3x35resetEv>:
90019c44:	2300      	movs	r3, #0
90019c46:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90019c4a:	6043      	str	r3, [r0, #4]
90019c4c:	6002      	str	r2, [r0, #0]
90019c4e:	6083      	str	r3, [r0, #8]
90019c50:	60c3      	str	r3, [r0, #12]
90019c52:	6102      	str	r2, [r0, #16]
90019c54:	6143      	str	r3, [r0, #20]
90019c56:	6183      	str	r3, [r0, #24]
90019c58:	61c3      	str	r3, [r0, #28]
90019c5a:	6202      	str	r2, [r0, #32]
90019c5c:	4770      	bx	lr

90019c5e <_ZN8touchgfx9Matrix3x3C1Ev>:
90019c5e:	b508      	push	{r3, lr}
90019c60:	f7ff fff0 	bl	90019c44 <_ZN8touchgfx9Matrix3x35resetEv>
90019c64:	bd08      	pop	{r3, pc}

90019c66 <_ZN8touchgfx9Matrix3x35scaleEff>:
90019c66:	edd0 7a00 	vldr	s15, [r0]
90019c6a:	ee67 7a80 	vmul.f32	s15, s15, s0
90019c6e:	edc0 7a00 	vstr	s15, [r0]
90019c72:	edd0 7a01 	vldr	s15, [r0, #4]
90019c76:	ee67 7a80 	vmul.f32	s15, s15, s0
90019c7a:	edc0 7a01 	vstr	s15, [r0, #4]
90019c7e:	edd0 7a02 	vldr	s15, [r0, #8]
90019c82:	ee27 0a80 	vmul.f32	s0, s15, s0
90019c86:	edd0 7a03 	vldr	s15, [r0, #12]
90019c8a:	ee67 7aa0 	vmul.f32	s15, s15, s1
90019c8e:	ed80 0a02 	vstr	s0, [r0, #8]
90019c92:	edc0 7a03 	vstr	s15, [r0, #12]
90019c96:	edd0 7a04 	vldr	s15, [r0, #16]
90019c9a:	ee67 7aa0 	vmul.f32	s15, s15, s1
90019c9e:	edc0 7a04 	vstr	s15, [r0, #16]
90019ca2:	edd0 7a05 	vldr	s15, [r0, #20]
90019ca6:	ee67 0aa0 	vmul.f32	s1, s15, s1
90019caa:	edc0 0a05 	vstr	s1, [r0, #20]
90019cae:	4770      	bx	lr

90019cb0 <_ZN8touchgfx9Matrix3x36rotateEf>:
90019cb0:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90019d44 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90019cb4:	ee20 0a27 	vmul.f32	s0, s0, s15
90019cb8:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90019d48 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90019cbc:	b510      	push	{r4, lr}
90019cbe:	ed2d 8b02 	vpush	{d8}
90019cc2:	eec0 8a27 	vdiv.f32	s17, s0, s15
90019cc6:	4604      	mov	r4, r0
90019cc8:	eeb0 0a68 	vmov.f32	s0, s17
90019ccc:	f011 fa28 	bl	9002b120 <cosf>
90019cd0:	eeb0 8a40 	vmov.f32	s16, s0
90019cd4:	eeb0 0a68 	vmov.f32	s0, s17
90019cd8:	f011 f95e 	bl	9002af98 <sinf>
90019cdc:	edd4 6a03 	vldr	s13, [r4, #12]
90019ce0:	edd4 4a00 	vldr	s9, [r4]
90019ce4:	ee60 7a66 	vnmul.f32	s15, s0, s13
90019ce8:	ed94 7a04 	vldr	s14, [r4, #16]
90019cec:	ed94 5a01 	vldr	s10, [r4, #4]
90019cf0:	ee66 6a88 	vmul.f32	s13, s13, s16
90019cf4:	edd4 5a02 	vldr	s11, [r4, #8]
90019cf8:	eee8 7a24 	vfma.f32	s15, s16, s9
90019cfc:	eee0 6a24 	vfma.f32	s13, s0, s9
90019d00:	edc4 7a00 	vstr	s15, [r4]
90019d04:	ee60 7a47 	vnmul.f32	s15, s0, s14
90019d08:	ee27 7a08 	vmul.f32	s14, s14, s16
90019d0c:	edc4 6a03 	vstr	s13, [r4, #12]
90019d10:	eee8 7a05 	vfma.f32	s15, s16, s10
90019d14:	eea0 7a05 	vfma.f32	s14, s0, s10
90019d18:	edc4 7a01 	vstr	s15, [r4, #4]
90019d1c:	edd4 7a05 	vldr	s15, [r4, #20]
90019d20:	ed84 7a04 	vstr	s14, [r4, #16]
90019d24:	ee20 6a67 	vnmul.f32	s12, s0, s15
90019d28:	ee67 7a88 	vmul.f32	s15, s15, s16
90019d2c:	eea8 6a25 	vfma.f32	s12, s16, s11
90019d30:	eee0 7a25 	vfma.f32	s15, s0, s11
90019d34:	ecbd 8b02 	vpop	{d8}
90019d38:	ed84 6a02 	vstr	s12, [r4, #8]
90019d3c:	edc4 7a05 	vstr	s15, [r4, #20]
90019d40:	bd10      	pop	{r4, pc}
90019d42:	bf00      	nop
90019d44:	40490fdb 	.word	0x40490fdb
90019d48:	43340000 	.word	0x43340000

90019d4c <_ZN8touchgfx9Matrix3x39translateEff>:
90019d4c:	ed90 6a06 	vldr	s12, [r0, #24]
90019d50:	edd0 7a00 	vldr	s15, [r0]
90019d54:	edd0 6a07 	vldr	s13, [r0, #28]
90019d58:	eee6 7a00 	vfma.f32	s15, s12, s0
90019d5c:	ed90 7a08 	vldr	s14, [r0, #32]
90019d60:	edc0 7a00 	vstr	s15, [r0]
90019d64:	edd0 7a01 	vldr	s15, [r0, #4]
90019d68:	eee6 7a80 	vfma.f32	s15, s13, s0
90019d6c:	edc0 7a01 	vstr	s15, [r0, #4]
90019d70:	edd0 7a02 	vldr	s15, [r0, #8]
90019d74:	eee7 7a00 	vfma.f32	s15, s14, s0
90019d78:	edc0 7a02 	vstr	s15, [r0, #8]
90019d7c:	edd0 7a03 	vldr	s15, [r0, #12]
90019d80:	eee6 7a20 	vfma.f32	s15, s12, s1
90019d84:	edc0 7a03 	vstr	s15, [r0, #12]
90019d88:	edd0 7a04 	vldr	s15, [r0, #16]
90019d8c:	eee6 7aa0 	vfma.f32	s15, s13, s1
90019d90:	edc0 7a04 	vstr	s15, [r0, #16]
90019d94:	edd0 7a05 	vldr	s15, [r0, #20]
90019d98:	eee7 7a20 	vfma.f32	s15, s14, s1
90019d9c:	edc0 7a05 	vstr	s15, [r0, #20]
90019da0:	4770      	bx	lr

90019da2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90019da2:	edd0 6a01 	vldr	s13, [r0, #4]
90019da6:	b084      	sub	sp, #16
90019da8:	edd0 7a04 	vldr	s15, [r0, #16]
90019dac:	ed90 7a03 	vldr	s14, [r0, #12]
90019db0:	ee60 7aa7 	vmul.f32	s15, s1, s15
90019db4:	ee60 0aa6 	vmul.f32	s1, s1, s13
90019db8:	edd0 6a00 	vldr	s13, [r0]
90019dbc:	eee7 7a00 	vfma.f32	s15, s14, s0
90019dc0:	ed90 7a05 	vldr	s14, [r0, #20]
90019dc4:	eee6 0a80 	vfma.f32	s1, s13, s0
90019dc8:	ed90 0a02 	vldr	s0, [r0, #8]
90019dcc:	ee30 0a80 	vadd.f32	s0, s1, s0
90019dd0:	ee77 0a87 	vadd.f32	s1, s15, s14
90019dd4:	b004      	add	sp, #16
90019dd6:	4770      	bx	lr

90019dd8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019dd8:	b530      	push	{r4, r5, lr}
90019dda:	8083      	strh	r3, [r0, #4]
90019ddc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90019de0:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019de4:	80c3      	strh	r3, [r0, #6]
90019de6:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019dea:	6141      	str	r1, [r0, #20]
90019dec:	7203      	strb	r3, [r0, #8]
90019dee:	f89d 3014 	ldrb.w	r3, [sp, #20]
90019df2:	8302      	strh	r2, [r0, #24]
90019df4:	7243      	strb	r3, [r0, #9]
90019df6:	7a83      	ldrb	r3, [r0, #10]
90019df8:	f365 0306 	bfi	r3, r5, #0, #7
90019dfc:	f89d 501c 	ldrb.w	r5, [sp, #28]
90019e00:	f365 13c7 	bfi	r3, r5, #7, #1
90019e04:	7283      	strb	r3, [r0, #10]
90019e06:	f89d 3020 	ldrb.w	r3, [sp, #32]
90019e0a:	72c3      	strb	r3, [r0, #11]
90019e0c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90019e10:	7303      	strb	r3, [r0, #12]
90019e12:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90019e16:	81c3      	strh	r3, [r0, #14]
90019e18:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90019e1c:	8203      	strh	r3, [r0, #16]
90019e1e:	4b01      	ldr	r3, [pc, #4]	@ (90019e24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90019e20:	6003      	str	r3, [r0, #0]
90019e22:	bd30      	pop	{r4, r5, pc}
90019e24:	9002f8d4 	.word	0x9002f8d4

90019e28 <_ZNK8touchgfx9ConstFont4findEt>:
90019e28:	b5f0      	push	{r4, r5, r6, r7, lr}
90019e2a:	6944      	ldr	r4, [r0, #20]
90019e2c:	b3bc      	cbz	r4, 90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e2e:	88a3      	ldrh	r3, [r4, #4]
90019e30:	8b02      	ldrh	r2, [r0, #24]
90019e32:	1acb      	subs	r3, r1, r3
90019e34:	f102 32ff 	add.w	r2, r2, #4294967295
90019e38:	d431      	bmi.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e3a:	4293      	cmp	r3, r2
90019e3c:	dd0c      	ble.n	90019e58 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90019e3e:	230e      	movs	r3, #14
90019e40:	fb03 4302 	mla	r3, r3, r2, r4
90019e44:	889b      	ldrh	r3, [r3, #4]
90019e46:	1a5b      	subs	r3, r3, r1
90019e48:	1ad3      	subs	r3, r2, r3
90019e4a:	429a      	cmp	r2, r3
90019e4c:	db27      	blt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e4e:	2b00      	cmp	r3, #0
90019e50:	bfbc      	itt	lt
90019e52:	2302      	movlt	r3, #2
90019e54:	fb92 f3f3 	sdivlt	r3, r2, r3
90019e58:	2500      	movs	r5, #0
90019e5a:	260e      	movs	r6, #14
90019e5c:	4295      	cmp	r5, r2
90019e5e:	dc1e      	bgt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e60:	fb06 4003 	mla	r0, r6, r3, r4
90019e64:	8887      	ldrh	r7, [r0, #4]
90019e66:	42b9      	cmp	r1, r7
90019e68:	d01a      	beq.n	90019ea0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019e6a:	d20d      	bcs.n	90019e88 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019e6c:	1e5a      	subs	r2, r3, #1
90019e6e:	4295      	cmp	r5, r2
90019e70:	dc15      	bgt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e72:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90019e76:	1a5b      	subs	r3, r3, r1
90019e78:	1ad3      	subs	r3, r2, r3
90019e7a:	429a      	cmp	r2, r3
90019e7c:	db0f      	blt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e7e:	429d      	cmp	r5, r3
90019e80:	ddec      	ble.n	90019e5c <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019e82:	1953      	adds	r3, r2, r5
90019e84:	105b      	asrs	r3, r3, #1
90019e86:	e7e9      	b.n	90019e5c <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019e88:	1c5d      	adds	r5, r3, #1
90019e8a:	42aa      	cmp	r2, r5
90019e8c:	db07      	blt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e8e:	8a43      	ldrh	r3, [r0, #18]
90019e90:	1acb      	subs	r3, r1, r3
90019e92:	442b      	add	r3, r5
90019e94:	429d      	cmp	r5, r3
90019e96:	dc02      	bgt.n	90019e9e <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019e98:	429a      	cmp	r2, r3
90019e9a:	dadf      	bge.n	90019e5c <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019e9c:	e7f1      	b.n	90019e82 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90019e9e:	2000      	movs	r0, #0
90019ea0:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019ea2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90019ea2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019ea4:	4604      	mov	r4, r0
90019ea6:	4617      	mov	r7, r2
90019ea8:	461e      	mov	r6, r3
90019eaa:	b911      	cbnz	r1, 90019eb2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90019eac:	2500      	movs	r5, #0
90019eae:	4628      	mov	r0, r5
90019eb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019eb2:	290a      	cmp	r1, #10
90019eb4:	d0fa      	beq.n	90019eac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019eb6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90019eba:	4291      	cmp	r1, r2
90019ebc:	d0f6      	beq.n	90019eac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019ebe:	f242 020b 	movw	r2, #8203	@ 0x200b
90019ec2:	4291      	cmp	r1, r2
90019ec4:	d0f2      	beq.n	90019eac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019ec6:	f7ff ffaf 	bl	90019e28 <_ZNK8touchgfx9ConstFont4findEt>
90019eca:	4605      	mov	r5, r0
90019ecc:	b950      	cbnz	r0, 90019ee4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90019ece:	6823      	ldr	r3, [r4, #0]
90019ed0:	4620      	mov	r0, r4
90019ed2:	691b      	ldr	r3, [r3, #16]
90019ed4:	4798      	blx	r3
90019ed6:	4601      	mov	r1, r0
90019ed8:	4620      	mov	r0, r4
90019eda:	f7ff ffa5 	bl	90019e28 <_ZNK8touchgfx9ConstFont4findEt>
90019ede:	4605      	mov	r5, r0
90019ee0:	2800      	cmp	r0, #0
90019ee2:	d0e3      	beq.n	90019eac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019ee4:	6823      	ldr	r3, [r4, #0]
90019ee6:	4629      	mov	r1, r5
90019ee8:	4620      	mov	r0, r4
90019eea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90019eec:	4798      	blx	r3
90019eee:	6038      	str	r0, [r7, #0]
90019ef0:	6823      	ldr	r3, [r4, #0]
90019ef2:	4620      	mov	r0, r4
90019ef4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90019ef6:	4798      	blx	r3
90019ef8:	7030      	strb	r0, [r6, #0]
90019efa:	e7d8      	b.n	90019eae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90019efc <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90019efc:	b538      	push	{r3, r4, r5, lr}
90019efe:	4605      	mov	r5, r0
90019f00:	f002 f89e 	bl	9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>
90019f04:	4604      	mov	r4, r0
90019f06:	4628      	mov	r0, r5
90019f08:	f001 ffde 	bl	9001bec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019f0c:	2800      	cmp	r0, #0
90019f0e:	bf14      	ite	ne
90019f10:	2002      	movne	r0, #2
90019f12:	2000      	moveq	r0, #0
90019f14:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019f18:	b280      	uxth	r0, r0
90019f1a:	bd38      	pop	{r3, r4, r5, pc}

90019f1c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90019f1c:	b538      	push	{r3, r4, r5, lr}
90019f1e:	4605      	mov	r5, r0
90019f20:	f002 f88e 	bl	9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>
90019f24:	4604      	mov	r4, r0
90019f26:	4628      	mov	r0, r5
90019f28:	f001 ffce 	bl	9001bec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019f2c:	2800      	cmp	r0, #0
90019f2e:	bf14      	ite	ne
90019f30:	2002      	movne	r0, #2
90019f32:	2000      	moveq	r0, #0
90019f34:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019f38:	f040 0001 	orr.w	r0, r0, #1
90019f3c:	b280      	uxth	r0, r0
90019f3e:	bd38      	pop	{r3, r4, r5, pc}

90019f40 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019f40:	2000      	movs	r0, #0
90019f42:	4770      	bx	lr

90019f44 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90019f44:	2001      	movs	r0, #1
90019f46:	4770      	bx	lr

90019f48 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90019f48:	2002      	movs	r0, #2
90019f4a:	4770      	bx	lr

90019f4c <_ZN8touchgfx6ScreenD1Ev>:
90019f4c:	4770      	bx	lr

90019f4e <_ZN8touchgfx6Screen11setupScreenEv>:
90019f4e:	4770      	bx	lr

90019f50 <_ZN8touchgfx12GestureEventD1Ev>:
90019f50:	4770      	bx	lr

90019f52 <_ZN8touchgfx9DragEventD1Ev>:
90019f52:	4770      	bx	lr

90019f54 <_ZN8touchgfx10ClickEventD1Ev>:
90019f54:	4770      	bx	lr

90019f56 <_ZN8touchgfx10ClickEventD0Ev>:
90019f56:	b510      	push	{r4, lr}
90019f58:	4604      	mov	r4, r0
90019f5a:	210c      	movs	r1, #12
90019f5c:	f010 ffa8 	bl	9002aeb0 <_ZdlPvj>
90019f60:	4620      	mov	r0, r4
90019f62:	bd10      	pop	{r4, pc}

90019f64 <_ZN8touchgfx9DragEventD0Ev>:
90019f64:	b510      	push	{r4, lr}
90019f66:	4604      	mov	r4, r0
90019f68:	2110      	movs	r1, #16
90019f6a:	f010 ffa1 	bl	9002aeb0 <_ZdlPvj>
90019f6e:	4620      	mov	r0, r4
90019f70:	bd10      	pop	{r4, pc}

90019f72 <_ZN8touchgfx12GestureEventD0Ev>:
90019f72:	b510      	push	{r4, lr}
90019f74:	4604      	mov	r4, r0
90019f76:	210c      	movs	r1, #12
90019f78:	f010 ff9a 	bl	9002aeb0 <_ZdlPvj>
90019f7c:	4620      	mov	r0, r4
90019f7e:	bd10      	pop	{r4, pc}

90019f80 <_ZN8touchgfx6ScreenD0Ev>:
90019f80:	b510      	push	{r4, lr}
90019f82:	4604      	mov	r4, r0
90019f84:	213c      	movs	r1, #60	@ 0x3c
90019f86:	f010 ff93 	bl	9002aeb0 <_ZdlPvj>
90019f8a:	4620      	mov	r0, r4
90019f8c:	bd10      	pop	{r4, pc}
	...

90019f90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90019f90:	b530      	push	{r4, r5, lr}
90019f92:	460d      	mov	r5, r1
90019f94:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90019f96:	b087      	sub	sp, #28
90019f98:	4604      	mov	r4, r0
90019f9a:	b301      	cbz	r1, 90019fde <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90019f9c:	a801      	add	r0, sp, #4
90019f9e:	f7ff fb5f 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019fa2:	892a      	ldrh	r2, [r5, #8]
90019fa4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90019fa8:	7928      	ldrb	r0, [r5, #4]
90019faa:	1ad2      	subs	r2, r2, r3
90019fac:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90019fae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019fb2:	441a      	add	r2, r3
90019fb4:	896b      	ldrh	r3, [r5, #10]
90019fb6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90019fba:	f88d 0010 	strb.w	r0, [sp, #16]
90019fbe:	1b5b      	subs	r3, r3, r5
90019fc0:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90019fc2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90019fc4:	442b      	add	r3, r5
90019fc6:	4d07      	ldr	r5, [pc, #28]	@ (90019fe4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90019fc8:	f8ad 1012 	strh.w	r1, [sp, #18]
90019fcc:	a903      	add	r1, sp, #12
90019fce:	9503      	str	r5, [sp, #12]
90019fd0:	f8ad 2014 	strh.w	r2, [sp, #20]
90019fd4:	f8ad 3016 	strh.w	r3, [sp, #22]
90019fd8:	6803      	ldr	r3, [r0, #0]
90019fda:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019fdc:	4798      	blx	r3
90019fde:	b007      	add	sp, #28
90019fe0:	bd30      	pop	{r4, r5, pc}
90019fe2:	bf00      	nop
90019fe4:	9002f964 	.word	0x9002f964

90019fe8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90019fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019fec:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90019fee:	b08a      	sub	sp, #40	@ 0x28
90019ff0:	4604      	mov	r4, r0
90019ff2:	460d      	mov	r5, r1
90019ff4:	b113      	cbz	r3, 90019ffc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90019ff6:	790b      	ldrb	r3, [r1, #4]
90019ff8:	2b00      	cmp	r3, #0
90019ffa:	d044      	beq.n	9001a086 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019ffc:	f104 0804 	add.w	r8, r4, #4
9001a000:	a803      	add	r0, sp, #12
9001a002:	4641      	mov	r1, r8
9001a004:	f7ff fb2c 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a008:	792b      	ldrb	r3, [r5, #4]
9001a00a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001a00e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001a012:	b983      	cbnz	r3, 9001a036 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001a014:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001a018:	892a      	ldrh	r2, [r5, #8]
9001a01a:	88e9      	ldrh	r1, [r5, #6]
9001a01c:	4640      	mov	r0, r8
9001a01e:	1b92      	subs	r2, r2, r6
9001a020:	9301      	str	r3, [sp, #4]
9001a022:	1bc9      	subs	r1, r1, r7
9001a024:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001a028:	b212      	sxth	r2, r2
9001a02a:	9300      	str	r3, [sp, #0]
9001a02c:	b209      	sxth	r1, r1
9001a02e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001a032:	f7f7 fe6d 	bl	90011d10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001a036:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001a038:	b329      	cbz	r1, 9001a086 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001a03a:	a805      	add	r0, sp, #20
9001a03c:	f7ff fb10 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a040:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001a044:	792b      	ldrb	r3, [r5, #4]
9001a046:	a907      	add	r1, sp, #28
9001a048:	1abf      	subs	r7, r7, r2
9001a04a:	88ea      	ldrh	r2, [r5, #6]
9001a04c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001a04e:	4417      	add	r7, r2
9001a050:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001a052:	f88d 3020 	strb.w	r3, [sp, #32]
9001a056:	4417      	add	r7, r2
9001a058:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001a05c:	1ab6      	subs	r6, r6, r2
9001a05e:	892a      	ldrh	r2, [r5, #8]
9001a060:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001a064:	4416      	add	r6, r2
9001a066:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001a068:	4416      	add	r6, r2
9001a06a:	4a08      	ldr	r2, [pc, #32]	@ (9001a08c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001a06c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001a070:	2600      	movs	r6, #0
9001a072:	9207      	str	r2, [sp, #28]
9001a074:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001a078:	6803      	ldr	r3, [r0, #0]
9001a07a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a07c:	4798      	blx	r3
9001a07e:	792b      	ldrb	r3, [r5, #4]
9001a080:	b10b      	cbz	r3, 9001a086 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001a082:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001a086:	b00a      	add	sp, #40	@ 0x28
9001a088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a08c:	9002f93c 	.word	0x9002f93c

9001a090 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001a090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a094:	460c      	mov	r4, r1
9001a096:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001a098:	b088      	sub	sp, #32
9001a09a:	4605      	mov	r5, r0
9001a09c:	2900      	cmp	r1, #0
9001a09e:	d06d      	beq.n	9001a17c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001a0a0:	4668      	mov	r0, sp
9001a0a2:	f7ff fadd 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a0a6:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001a0a8:	88e3      	ldrh	r3, [r4, #6]
9001a0aa:	f9bd 8000 	ldrsh.w	r8, [sp]
9001a0ae:	440b      	add	r3, r1
9001a0b0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001a0b4:	b21b      	sxth	r3, r3
9001a0b6:	4543      	cmp	r3, r8
9001a0b8:	db31      	blt.n	9001a11e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0ba:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001a0be:	44c4      	add	ip, r8
9001a0c0:	fa0f fc8c 	sxth.w	ip, ip
9001a0c4:	4563      	cmp	r3, ip
9001a0c6:	da2a      	bge.n	9001a11e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0c8:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001a0ca:	8926      	ldrh	r6, [r4, #8]
9001a0cc:	4416      	add	r6, r2
9001a0ce:	b236      	sxth	r6, r6
9001a0d0:	42be      	cmp	r6, r7
9001a0d2:	db24      	blt.n	9001a11e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0d4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001a0d8:	4438      	add	r0, r7
9001a0da:	b200      	sxth	r0, r0
9001a0dc:	4286      	cmp	r6, r0
9001a0de:	da1e      	bge.n	9001a11e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0e0:	8963      	ldrh	r3, [r4, #10]
9001a0e2:	4419      	add	r1, r3
9001a0e4:	b209      	sxth	r1, r1
9001a0e6:	4541      	cmp	r1, r8
9001a0e8:	db08      	blt.n	9001a0fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0ea:	4561      	cmp	r1, ip
9001a0ec:	da06      	bge.n	9001a0fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0ee:	89a3      	ldrh	r3, [r4, #12]
9001a0f0:	441a      	add	r2, r3
9001a0f2:	b212      	sxth	r2, r2
9001a0f4:	42ba      	cmp	r2, r7
9001a0f6:	db01      	blt.n	9001a0fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a0f8:	4282      	cmp	r2, r0
9001a0fa:	db10      	blt.n	9001a11e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a0fc:	4b21      	ldr	r3, [pc, #132]	@ (9001a184 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001a0fe:	a904      	add	r1, sp, #16
9001a100:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001a102:	9304      	str	r3, [sp, #16]
9001a104:	2302      	movs	r3, #2
9001a106:	f88d 3014 	strb.w	r3, [sp, #20]
9001a10a:	2300      	movs	r3, #0
9001a10c:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a110:	f8ad 3018 	strh.w	r3, [sp, #24]
9001a114:	f8ad 301a 	strh.w	r3, [sp, #26]
9001a118:	6803      	ldr	r3, [r0, #0]
9001a11a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a11c:	4798      	blx	r3
9001a11e:	1d29      	adds	r1, r5, #4
9001a120:	a802      	add	r0, sp, #8
9001a122:	f7ff fa9d 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a126:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a12a:	88e0      	ldrh	r0, [r4, #6]
9001a12c:	eba3 0808 	sub.w	r8, r3, r8
9001a130:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a134:	7921      	ldrb	r1, [r4, #4]
9001a136:	fa1f f888 	uxth.w	r8, r8
9001a13a:	1bdf      	subs	r7, r3, r7
9001a13c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001a140:	b2bb      	uxth	r3, r7
9001a142:	4440      	add	r0, r8
9001a144:	8922      	ldrh	r2, [r4, #8]
9001a146:	8967      	ldrh	r7, [r4, #10]
9001a148:	4460      	add	r0, ip
9001a14a:	89a4      	ldrh	r4, [r4, #12]
9001a14c:	441a      	add	r2, r3
9001a14e:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001a150:	44b8      	add	r8, r7
9001a152:	4423      	add	r3, r4
9001a154:	f8ad 0016 	strh.w	r0, [sp, #22]
9001a158:	4432      	add	r2, r6
9001a15a:	44e0      	add	r8, ip
9001a15c:	4433      	add	r3, r6
9001a15e:	4c0a      	ldr	r4, [pc, #40]	@ (9001a188 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001a160:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001a162:	f88d 1014 	strb.w	r1, [sp, #20]
9001a166:	a904      	add	r1, sp, #16
9001a168:	9404      	str	r4, [sp, #16]
9001a16a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001a16e:	f8ad 801a 	strh.w	r8, [sp, #26]
9001a172:	f8ad 301c 	strh.w	r3, [sp, #28]
9001a176:	6803      	ldr	r3, [r0, #0]
9001a178:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a17a:	4798      	blx	r3
9001a17c:	b008      	add	sp, #32
9001a17e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a182:	bf00      	nop
9001a184:	9002f93c 	.word	0x9002f93c
9001a188:	9002f950 	.word	0x9002f950

9001a18c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001a18c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001a18e:	4604      	mov	r4, r0
9001a190:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001a194:	3201      	adds	r2, #1
9001a196:	d112      	bne.n	9001a1be <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001a198:	2500      	movs	r5, #0
9001a19a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a19e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a1a2:	6803      	ldr	r3, [r0, #0]
9001a1a4:	9500      	str	r5, [sp, #0]
9001a1a6:	466d      	mov	r5, sp
9001a1a8:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a1ac:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a1b0:	4629      	mov	r1, r5
9001a1b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001a1b4:	4798      	blx	r3
9001a1b6:	e895 0003 	ldmia.w	r5, {r0, r1}
9001a1ba:	e884 0003 	stmia.w	r4, {r0, r1}
9001a1be:	4620      	mov	r0, r4
9001a1c0:	b003      	add	sp, #12
9001a1c2:	bd30      	pop	{r4, r5, pc}

9001a1c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001a1c4:	b513      	push	{r0, r1, r4, lr}
9001a1c6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001a1ca:	4604      	mov	r4, r0
9001a1cc:	3301      	adds	r3, #1
9001a1ce:	d109      	bne.n	9001a1e4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001a1d0:	4601      	mov	r1, r0
9001a1d2:	4668      	mov	r0, sp
9001a1d4:	f7ff fa44 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a1d8:	f8bd 3000 	ldrh.w	r3, [sp]
9001a1dc:	8423      	strh	r3, [r4, #32]
9001a1de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a1e2:	8463      	strh	r3, [r4, #34]	@ 0x22
9001a1e4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001a1e8:	b002      	add	sp, #8
9001a1ea:	bd10      	pop	{r4, pc}

9001a1ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001a1ec:	b513      	push	{r0, r1, r4, lr}
9001a1ee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001a1f2:	4604      	mov	r4, r0
9001a1f4:	3301      	adds	r3, #1
9001a1f6:	d109      	bne.n	9001a20c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001a1f8:	4601      	mov	r1, r0
9001a1fa:	4668      	mov	r0, sp
9001a1fc:	f7ff fa30 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a200:	f8bd 3000 	ldrh.w	r3, [sp]
9001a204:	8423      	strh	r3, [r4, #32]
9001a206:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a20a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001a20c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001a210:	b002      	add	sp, #8
9001a212:	bd10      	pop	{r4, pc}

9001a214 <_ZN8touchgfx6ScreenC1Ev>:
9001a214:	b570      	push	{r4, r5, r6, lr}
9001a216:	4b17      	ldr	r3, [pc, #92]	@ (9001a274 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001a218:	4605      	mov	r5, r0
9001a21a:	4a17      	ldr	r2, [pc, #92]	@ (9001a278 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001a21c:	2101      	movs	r1, #1
9001a21e:	f845 3b04 	str.w	r3, [r5], #4
9001a222:	2300      	movs	r3, #0
9001a224:	6042      	str	r2, [r0, #4]
9001a226:	4604      	mov	r4, r0
9001a228:	8103      	strh	r3, [r0, #8]
9001a22a:	8143      	strh	r3, [r0, #10]
9001a22c:	8183      	strh	r3, [r0, #12]
9001a22e:	81c3      	strh	r3, [r0, #14]
9001a230:	8203      	strh	r3, [r0, #16]
9001a232:	8243      	strh	r3, [r0, #18]
9001a234:	8283      	strh	r3, [r0, #20]
9001a236:	82c3      	strh	r3, [r0, #22]
9001a238:	6203      	str	r3, [r0, #32]
9001a23a:	8483      	strh	r3, [r0, #36]	@ 0x24
9001a23c:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001a23e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001a242:	6343      	str	r3, [r0, #52]	@ 0x34
9001a244:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001a248:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001a24c:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001a250:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001a254:	4b09      	ldr	r3, [pc, #36]	@ (9001a27c <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001a256:	4628      	mov	r0, r5
9001a258:	f9b3 6000 	ldrsh.w	r6, [r3]
9001a25c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001a25e:	4a08      	ldr	r2, [pc, #32]	@ (9001a280 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001a260:	f9b2 1000 	ldrsh.w	r1, [r2]
9001a264:	4798      	blx	r3
9001a266:	6863      	ldr	r3, [r4, #4]
9001a268:	4628      	mov	r0, r5
9001a26a:	4631      	mov	r1, r6
9001a26c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001a26e:	4798      	blx	r3
9001a270:	4620      	mov	r0, r4
9001a272:	bd70      	pop	{r4, r5, r6, pc}
9001a274:	9002f978 	.word	0x9002f978
9001a278:	9002f420 	.word	0x9002f420
9001a27c:	240218c2 	.word	0x240218c2
9001a280:	240218c0 	.word	0x240218c0

9001a284 <_ZN8touchgfx6Screen4drawEv>:
9001a284:	4b09      	ldr	r3, [pc, #36]	@ (9001a2ac <_ZN8touchgfx6Screen4drawEv+0x28>)
9001a286:	b507      	push	{r0, r1, r2, lr}
9001a288:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a28c:	2100      	movs	r1, #0
9001a28e:	4b08      	ldr	r3, [pc, #32]	@ (9001a2b0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001a290:	9100      	str	r1, [sp, #0]
9001a292:	4669      	mov	r1, sp
9001a294:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a298:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a29c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a2a0:	6803      	ldr	r3, [r0, #0]
9001a2a2:	689b      	ldr	r3, [r3, #8]
9001a2a4:	4798      	blx	r3
9001a2a6:	b003      	add	sp, #12
9001a2a8:	f85d fb04 	ldr.w	pc, [sp], #4
9001a2ac:	240218c0 	.word	0x240218c0
9001a2b0:	240218c2 	.word	0x240218c2

9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001a2b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a2b8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001a2bc:	b089      	sub	sp, #36	@ 0x24
9001a2be:	4680      	mov	r8, r0
9001a2c0:	460c      	mov	r4, r1
9001a2c2:	2b00      	cmp	r3, #0
9001a2c4:	4615      	mov	r5, r2
9001a2c6:	dd0e      	ble.n	9001a2e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a2c8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001a2cc:	2b00      	cmp	r3, #0
9001a2ce:	dd0a      	ble.n	9001a2e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a2d0:	4628      	mov	r0, r5
9001a2d2:	f7ff ff5b 	bl	9001a18c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a2d6:	4621      	mov	r1, r4
9001a2d8:	f7fd fe67 	bl	90017faa <_ZNK8touchgfx4Rect9intersectERKS0_>
9001a2dc:	69eb      	ldr	r3, [r5, #28]
9001a2de:	b928      	cbnz	r0, 9001a2ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001a2e0:	461d      	mov	r5, r3
9001a2e2:	2b00      	cmp	r3, #0
9001a2e4:	d1f4      	bne.n	9001a2d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001a2e6:	b009      	add	sp, #36	@ 0x24
9001a2e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a2ec:	ae04      	add	r6, sp, #16
9001a2ee:	2b00      	cmp	r3, #0
9001a2f0:	f000 80b5 	beq.w	9001a45e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a2f4:	682b      	ldr	r3, [r5, #0]
9001a2f6:	4629      	mov	r1, r5
9001a2f8:	a802      	add	r0, sp, #8
9001a2fa:	68db      	ldr	r3, [r3, #12]
9001a2fc:	4798      	blx	r3
9001a2fe:	4628      	mov	r0, r5
9001a300:	f7ff ff60 	bl	9001a1c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a304:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001a308:	4407      	add	r7, r0
9001a30a:	4628      	mov	r0, r5
9001a30c:	f7ff ff6e 	bl	9001a1ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a310:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a314:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001a318:	b23f      	sxth	r7, r7
9001a31a:	4418      	add	r0, r3
9001a31c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001a320:	4621      	mov	r1, r4
9001a322:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a326:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a32a:	4630      	mov	r0, r6
9001a32c:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a330:	f8ad 7010 	strh.w	r7, [sp, #16]
9001a334:	f7f7 fdce 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001a338:	4628      	mov	r0, r5
9001a33a:	f7ff ff27 	bl	9001a18c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a33e:	ab06      	add	r3, sp, #24
9001a340:	4602      	mov	r2, r0
9001a342:	e896 0003 	ldmia.w	r6, {r0, r1}
9001a346:	e883 0003 	stmia.w	r3, {r0, r1}
9001a34a:	4611      	mov	r1, r2
9001a34c:	4618      	mov	r0, r3
9001a34e:	f7f7 fdc1 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001a352:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001a356:	f9b4 1000 	ldrsh.w	r1, [r4]
9001a35a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001a35e:	4299      	cmp	r1, r3
9001a360:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001a364:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001a368:	d10b      	bne.n	9001a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a36a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a36e:	4552      	cmp	r2, sl
9001a370:	d107      	bne.n	9001a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a372:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001a376:	455a      	cmp	r2, fp
9001a378:	d103      	bne.n	9001a382 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a37a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001a37e:	454a      	cmp	r2, r9
9001a380:	d06d      	beq.n	9001a45e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a382:	f1bb 0f00 	cmp.w	fp, #0
9001a386:	dd65      	ble.n	9001a454 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a388:	f1b9 0f00 	cmp.w	r9, #0
9001a38c:	dd62      	ble.n	9001a454 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a38e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a392:	fa1f f08a 	uxth.w	r0, sl
9001a396:	4552      	cmp	r2, sl
9001a398:	9000      	str	r0, [sp, #0]
9001a39a:	da12      	bge.n	9001a3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001a39c:	9301      	str	r3, [sp, #4]
9001a39e:	9b00      	ldr	r3, [sp, #0]
9001a3a0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a3a4:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a3a8:	1a9a      	subs	r2, r3, r2
9001a3aa:	f8ad 1010 	strh.w	r1, [sp, #16]
9001a3ae:	4631      	mov	r1, r6
9001a3b0:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a3b4:	4640      	mov	r0, r8
9001a3b6:	f8ad 2016 	strh.w	r2, [sp, #22]
9001a3ba:	69ea      	ldr	r2, [r5, #28]
9001a3bc:	f7ff ff7a 	bl	9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a3c0:	9b01      	ldr	r3, [sp, #4]
9001a3c2:	f9b4 2000 	ldrsh.w	r2, [r4]
9001a3c6:	b29f      	uxth	r7, r3
9001a3c8:	429a      	cmp	r2, r3
9001a3ca:	da0d      	bge.n	9001a3e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001a3cc:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a3d0:	1aba      	subs	r2, r7, r2
9001a3d2:	f8ad a012 	strh.w	sl, [sp, #18]
9001a3d6:	4631      	mov	r1, r6
9001a3d8:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a3dc:	4640      	mov	r0, r8
9001a3de:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a3e2:	69ea      	ldr	r2, [r5, #28]
9001a3e4:	f7ff ff66 	bl	9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a3e8:	8822      	ldrh	r2, [r4, #0]
9001a3ea:	445f      	add	r7, fp
9001a3ec:	88a3      	ldrh	r3, [r4, #4]
9001a3ee:	b2bf      	uxth	r7, r7
9001a3f0:	4413      	add	r3, r2
9001a3f2:	b23a      	sxth	r2, r7
9001a3f4:	b29b      	uxth	r3, r3
9001a3f6:	b219      	sxth	r1, r3
9001a3f8:	4291      	cmp	r1, r2
9001a3fa:	dd0d      	ble.n	9001a418 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001a3fc:	1bdb      	subs	r3, r3, r7
9001a3fe:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a402:	f8ad a012 	strh.w	sl, [sp, #18]
9001a406:	4631      	mov	r1, r6
9001a408:	f8ad 3014 	strh.w	r3, [sp, #20]
9001a40c:	4640      	mov	r0, r8
9001a40e:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a412:	69ea      	ldr	r2, [r5, #28]
9001a414:	f7ff ff4e 	bl	9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a418:	88e2      	ldrh	r2, [r4, #6]
9001a41a:	8863      	ldrh	r3, [r4, #2]
9001a41c:	4413      	add	r3, r2
9001a41e:	9a00      	ldr	r2, [sp, #0]
9001a420:	444a      	add	r2, r9
9001a422:	b29b      	uxth	r3, r3
9001a424:	fa1f f982 	uxth.w	r9, r2
9001a428:	b219      	sxth	r1, r3
9001a42a:	fa0f f289 	sxth.w	r2, r9
9001a42e:	428a      	cmp	r2, r1
9001a430:	da15      	bge.n	9001a45e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a432:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001a436:	eba3 0309 	sub.w	r3, r3, r9
9001a43a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001a43e:	f8ad 1014 	strh.w	r1, [sp, #20]
9001a442:	4631      	mov	r1, r6
9001a444:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a448:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a44c:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a450:	69ea      	ldr	r2, [r5, #28]
9001a452:	e001      	b.n	9001a458 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001a454:	69ea      	ldr	r2, [r5, #28]
9001a456:	4621      	mov	r1, r4
9001a458:	4640      	mov	r0, r8
9001a45a:	f7ff ff2b 	bl	9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a45e:	4628      	mov	r0, r5
9001a460:	f7ff fe94 	bl	9001a18c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a464:	6861      	ldr	r1, [r4, #4]
9001a466:	4602      	mov	r2, r0
9001a468:	4633      	mov	r3, r6
9001a46a:	6820      	ldr	r0, [r4, #0]
9001a46c:	c303      	stmia	r3!, {r0, r1}
9001a46e:	4611      	mov	r1, r2
9001a470:	4630      	mov	r0, r6
9001a472:	f7f7 fd2f 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001a476:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001a47a:	2b00      	cmp	r3, #0
9001a47c:	f77f af33 	ble.w	9001a2e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a480:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001a484:	2b00      	cmp	r3, #0
9001a486:	f77f af2e 	ble.w	9001a2e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a48a:	4628      	mov	r0, r5
9001a48c:	f7ff fe9a 	bl	9001a1c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a490:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001a494:	1a18      	subs	r0, r3, r0
9001a496:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a49a:	4628      	mov	r0, r5
9001a49c:	f7ff fea6 	bl	9001a1ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a4a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001a4a4:	4631      	mov	r1, r6
9001a4a6:	1a18      	subs	r0, r3, r0
9001a4a8:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a4ac:	4628      	mov	r0, r5
9001a4ae:	682b      	ldr	r3, [r5, #0]
9001a4b0:	689b      	ldr	r3, [r3, #8]
9001a4b2:	4798      	blx	r3
9001a4b4:	e717      	b.n	9001a2e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001a4b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001a4b6:	b570      	push	{r4, r5, r6, lr}
9001a4b8:	1d06      	adds	r6, r0, #4
9001a4ba:	b086      	sub	sp, #24
9001a4bc:	460c      	mov	r4, r1
9001a4be:	2300      	movs	r3, #0
9001a4c0:	4631      	mov	r1, r6
9001a4c2:	4605      	mov	r5, r0
9001a4c4:	a802      	add	r0, sp, #8
9001a4c6:	9301      	str	r3, [sp, #4]
9001a4c8:	f7ff f8ca 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a4cc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a4d0:	8822      	ldrh	r2, [r4, #0]
9001a4d2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001a4d6:	1ad2      	subs	r2, r2, r3
9001a4d8:	8863      	ldrh	r3, [r4, #2]
9001a4da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a4de:	1a5b      	subs	r3, r3, r1
9001a4e0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001a4e4:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a4e8:	aa01      	add	r2, sp, #4
9001a4ea:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a4ee:	4630      	mov	r0, r6
9001a4f0:	f8ad 1016 	strh.w	r1, [sp, #22]
9001a4f4:	a904      	add	r1, sp, #16
9001a4f6:	f8ad 3012 	strh.w	r3, [sp, #18]
9001a4fa:	f7f7 fdc3 	bl	90012084 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001a4fe:	9a01      	ldr	r2, [sp, #4]
9001a500:	b11a      	cbz	r2, 9001a50a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001a502:	4621      	mov	r1, r4
9001a504:	4628      	mov	r0, r5
9001a506:	f7ff fed5 	bl	9001a2b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a50a:	b006      	add	sp, #24
9001a50c:	bd70      	pop	{r4, r5, r6, pc}

9001a50e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001a50e:	4602      	mov	r2, r0
9001a510:	b530      	push	{r4, r5, lr}
9001a512:	4604      	mov	r4, r0
9001a514:	b085      	sub	sp, #20
9001a516:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001a51a:	460d      	mov	r5, r1
9001a51c:	466b      	mov	r3, sp
9001a51e:	6851      	ldr	r1, [r2, #4]
9001a520:	c303      	stmia	r3!, {r0, r1}
9001a522:	4629      	mov	r1, r5
9001a524:	4668      	mov	r0, sp
9001a526:	f7f7 fcd5 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
9001a52a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001a52e:	b12b      	cbz	r3, 9001a53c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001a530:	4669      	mov	r1, sp
9001a532:	4620      	mov	r0, r4
9001a534:	f7ff ffbf 	bl	9001a4b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001a538:	b005      	add	sp, #20
9001a53a:	bd30      	pop	{r4, r5, pc}
9001a53c:	3404      	adds	r4, #4
9001a53e:	a802      	add	r0, sp, #8
9001a540:	4621      	mov	r1, r4
9001a542:	f7ff f88d 	bl	90019660 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a546:	f8bd 3000 	ldrh.w	r3, [sp]
9001a54a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001a54e:	4669      	mov	r1, sp
9001a550:	4620      	mov	r0, r4
9001a552:	1a9b      	subs	r3, r3, r2
9001a554:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001a558:	f8ad 3000 	strh.w	r3, [sp]
9001a55c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a560:	1a9b      	subs	r3, r3, r2
9001a562:	f8ad 3002 	strh.w	r3, [sp, #2]
9001a566:	f7f7 fd54 	bl	90012012 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001a56a:	e7e5      	b.n	9001a538 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001a56c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001a56c:	460b      	mov	r3, r1
9001a56e:	680a      	ldr	r2, [r1, #0]
9001a570:	1d01      	adds	r1, r0, #4
9001a572:	6992      	ldr	r2, [r2, #24]
9001a574:	4618      	mov	r0, r3
9001a576:	4710      	bx	r2

9001a578 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001a578:	4298      	cmp	r0, r3
9001a57a:	d200      	bcs.n	9001a57e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001a57c:	b913      	cbnz	r3, 9001a584 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001a57e:	440a      	add	r2, r1
9001a580:	b210      	sxth	r0, r2
9001a582:	4770      	bx	lr
9001a584:	ee07 0a90 	vmov	s15, r0
9001a588:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001a58c:	ee07 3a90 	vmov	s15, r3
9001a590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a594:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001a598:	ee07 2a90 	vmov	s15, r2
9001a59c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a5a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001a5a4:	ee07 1a90 	vmov	s15, r1
9001a5a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a5ac:	ee37 7a66 	vsub.f32	s14, s14, s13
9001a5b0:	ee67 5a07 	vmul.f32	s11, s14, s14
9001a5b4:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a5b8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001a5bc:	eee6 7a26 	vfma.f32	s15, s12, s13
9001a5c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a5c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a5c8:	bfcc      	ite	gt
9001a5ca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001a5ce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001a5d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001a5d6:	ee17 3a90 	vmov	r3, s15
9001a5da:	b218      	sxth	r0, r3
9001a5dc:	4770      	bx	lr

9001a5de <_ZN8touchgfx12TextProviderC1Ev>:
9001a5de:	b538      	push	{r3, r4, r5, lr}
9001a5e0:	2500      	movs	r5, #0
9001a5e2:	2302      	movs	r3, #2
9001a5e4:	4604      	mov	r4, r0
9001a5e6:	220e      	movs	r2, #14
9001a5e8:	7403      	strb	r3, [r0, #16]
9001a5ea:	4629      	mov	r1, r5
9001a5ec:	6145      	str	r5, [r0, #20]
9001a5ee:	7605      	strb	r5, [r0, #24]
9001a5f0:	83c5      	strh	r5, [r0, #30]
9001a5f2:	8405      	strh	r5, [r0, #32]
9001a5f4:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001a5f6:	8705      	strh	r5, [r0, #56]	@ 0x38
9001a5f8:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001a5fa:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001a5fe:	e9c0 5500 	strd	r5, r5, [r0]
9001a602:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001a606:	304c      	adds	r0, #76	@ 0x4c
9001a608:	f011 fa66 	bl	9002bad8 <memset>
9001a60c:	2301      	movs	r3, #1
9001a60e:	4620      	mov	r0, r4
9001a610:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001a614:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001a618:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001a61c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001a620:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001a624:	f7eb fbe8 	bl	90005df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001a628:	4620      	mov	r0, r4
9001a62a:	bd38      	pop	{r3, r4, r5, pc}

9001a62c <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001a62c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001a62e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a632:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
9001a634:	fab0 f080 	clz	r0, r0
9001a638:	0940      	lsrs	r0, r0, #5
9001a63a:	4770      	bx	lr

9001a63c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001a63c:	b530      	push	{r4, r5, lr}
9001a63e:	2500      	movs	r5, #0
9001a640:	2401      	movs	r4, #1
9001a642:	6843      	ldr	r3, [r0, #4]
9001a644:	b913      	cbnz	r3, 9001a64c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001a646:	6803      	ldr	r3, [r0, #0]
9001a648:	b313      	cbz	r3, 9001a690 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a64a:	6043      	str	r3, [r0, #4]
9001a64c:	7e03      	ldrb	r3, [r0, #24]
9001a64e:	b143      	cbz	r3, 9001a662 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001a650:	6943      	ldr	r3, [r0, #20]
9001a652:	b12b      	cbz	r3, 9001a660 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a654:	881a      	ldrh	r2, [r3, #0]
9001a656:	b11a      	cbz	r2, 9001a660 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a658:	1c9a      	adds	r2, r3, #2
9001a65a:	6142      	str	r2, [r0, #20]
9001a65c:	8818      	ldrh	r0, [r3, #0]
9001a65e:	bd30      	pop	{r4, r5, pc}
9001a660:	7605      	strb	r5, [r0, #24]
9001a662:	6843      	ldr	r3, [r0, #4]
9001a664:	8819      	ldrh	r1, [r3, #0]
9001a666:	b199      	cbz	r1, 9001a690 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a668:	1c9a      	adds	r2, r3, #2
9001a66a:	2902      	cmp	r1, #2
9001a66c:	6042      	str	r2, [r0, #4]
9001a66e:	d1f5      	bne.n	9001a65c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001a670:	7c03      	ldrb	r3, [r0, #16]
9001a672:	2b01      	cmp	r3, #1
9001a674:	d8e5      	bhi.n	9001a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a676:	1c5a      	adds	r2, r3, #1
9001a678:	3302      	adds	r3, #2
9001a67a:	7402      	strb	r2, [r0, #16]
9001a67c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001a680:	6143      	str	r3, [r0, #20]
9001a682:	2b00      	cmp	r3, #0
9001a684:	d0dd      	beq.n	9001a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a686:	881b      	ldrh	r3, [r3, #0]
9001a688:	2b00      	cmp	r3, #0
9001a68a:	d0da      	beq.n	9001a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a68c:	7604      	strb	r4, [r0, #24]
9001a68e:	e7d8      	b.n	9001a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a690:	2000      	movs	r0, #0
9001a692:	e7e4      	b.n	9001a65e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001a694:	6001      	str	r1, [r0, #0]
9001a696:	2100      	movs	r1, #0
9001a698:	b430      	push	{r4, r5}
9001a69a:	6041      	str	r1, [r0, #4]
9001a69c:	6815      	ldr	r5, [r2, #0]
9001a69e:	6085      	str	r5, [r0, #8]
9001a6a0:	6852      	ldr	r2, [r2, #4]
9001a6a2:	6443      	str	r3, [r0, #68]	@ 0x44
9001a6a4:	9b02      	ldr	r3, [sp, #8]
9001a6a6:	60c2      	str	r2, [r0, #12]
9001a6a8:	7401      	strb	r1, [r0, #16]
9001a6aa:	6141      	str	r1, [r0, #20]
9001a6ac:	7601      	strb	r1, [r0, #24]
9001a6ae:	8701      	strh	r1, [r0, #56]	@ 0x38
9001a6b0:	8401      	strh	r1, [r0, #32]
9001a6b2:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001a6b6:	6483      	str	r3, [r0, #72]	@ 0x48
9001a6b8:	bc30      	pop	{r4, r5}
9001a6ba:	f7eb bb9d 	b.w	90005df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001a6be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001a6be:	b408      	push	{r3}
9001a6c0:	b510      	push	{r4, lr}
9001a6c2:	b085      	sub	sp, #20
9001a6c4:	ac07      	add	r4, sp, #28
9001a6c6:	f854 3b04 	ldr.w	r3, [r4], #4
9001a6ca:	9300      	str	r3, [sp, #0]
9001a6cc:	4613      	mov	r3, r2
9001a6ce:	4622      	mov	r2, r4
9001a6d0:	9403      	str	r4, [sp, #12]
9001a6d2:	f7ff ffdf 	bl	9001a694 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a6d6:	b005      	add	sp, #20
9001a6d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a6dc:	b001      	add	sp, #4
9001a6de:	4770      	bx	lr

9001a6e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001a6e0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a6e2:	4605      	mov	r5, r0
9001a6e4:	4608      	mov	r0, r1
9001a6e6:	b1f1      	cbz	r1, 9001a726 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001a6e8:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001a6ec:	460b      	mov	r3, r1
9001a6ee:	f101 0708 	add.w	r7, r1, #8
9001a6f2:	4622      	mov	r2, r4
9001a6f4:	6818      	ldr	r0, [r3, #0]
9001a6f6:	3308      	adds	r3, #8
9001a6f8:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a6fc:	4626      	mov	r6, r4
9001a6fe:	42bb      	cmp	r3, r7
9001a700:	c603      	stmia	r6!, {r0, r1}
9001a702:	4634      	mov	r4, r6
9001a704:	d1f6      	bne.n	9001a6f4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001a706:	6818      	ldr	r0, [r3, #0]
9001a708:	6030      	str	r0, [r6, #0]
9001a70a:	4610      	mov	r0, r2
9001a70c:	889b      	ldrh	r3, [r3, #4]
9001a70e:	80b3      	strh	r3, [r6, #4]
9001a710:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001a714:	015b      	lsls	r3, r3, #5
9001a716:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001a71a:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001a71e:	430b      	orrs	r3, r1
9001a720:	425b      	negs	r3, r3
9001a722:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001a726:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a728 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001a728:	b538      	push	{r3, r4, r5, lr}
9001a72a:	460c      	mov	r4, r1
9001a72c:	6811      	ldr	r1, [r2, #0]
9001a72e:	4610      	mov	r0, r2
9001a730:	68cd      	ldr	r5, [r1, #12]
9001a732:	4619      	mov	r1, r3
9001a734:	47a8      	blx	r5
9001a736:	2800      	cmp	r0, #0
9001a738:	bf08      	it	eq
9001a73a:	4620      	moveq	r0, r4
9001a73c:	bd38      	pop	{r3, r4, r5, pc}
	...

9001a740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001a740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a744:	468c      	mov	ip, r1
9001a746:	4605      	mov	r5, r0
9001a748:	4614      	mov	r4, r2
9001a74a:	b942      	cbnz	r2, 9001a75e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
9001a74c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001a750:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
9001a754:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
9001a758:	4620      	mov	r0, r4
9001a75a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a75e:	7b50      	ldrb	r0, [r2, #13]
9001a760:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
9001a764:	8893      	ldrh	r3, [r2, #4]
9001a766:	0106      	lsls	r6, r0, #4
9001a768:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001a76c:	79e6      	ldrb	r6, [r4, #7]
9001a76e:	4316      	orrs	r6, r2
9001a770:	185a      	adds	r2, r3, r1
9001a772:	b291      	uxth	r1, r2
9001a774:	b2b7      	uxth	r7, r6
9001a776:	291d      	cmp	r1, #29
9001a778:	d87f      	bhi.n	9001a87a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001a77a:	2201      	movs	r2, #1
9001a77c:	10f6      	asrs	r6, r6, #3
9001a77e:	408a      	lsls	r2, r1
9001a780:	498b      	ldr	r1, [pc, #556]	@ (9001a9b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001a782:	420a      	tst	r2, r1
9001a784:	d12e      	bne.n	9001a7e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001a786:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001a78a:	d076      	beq.n	9001a87a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001a78c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001a790:	4623      	mov	r3, r4
9001a792:	f104 0e08 	add.w	lr, r4, #8
9001a796:	4614      	mov	r4, r2
9001a798:	6818      	ldr	r0, [r3, #0]
9001a79a:	3308      	adds	r3, #8
9001a79c:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a7a0:	4694      	mov	ip, r2
9001a7a2:	4573      	cmp	r3, lr
9001a7a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001a7a8:	4662      	mov	r2, ip
9001a7aa:	d1f5      	bne.n	9001a798 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001a7ac:	6818      	ldr	r0, [r3, #0]
9001a7ae:	f8cc 0000 	str.w	r0, [ip]
9001a7b2:	889b      	ldrh	r3, [r3, #4]
9001a7b4:	f8ac 3004 	strh.w	r3, [ip, #4]
9001a7b8:	b2b3      	uxth	r3, r6
9001a7ba:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001a7be:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001a7c2:	1aca      	subs	r2, r1, r3
9001a7c4:	1bcf      	subs	r7, r1, r7
9001a7c6:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001a7ca:	b292      	uxth	r2, r2
9001a7cc:	1afb      	subs	r3, r7, r3
9001a7ce:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
9001a7d2:	10d2      	asrs	r2, r2, #3
9001a7d4:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001a7d8:	4302      	orrs	r2, r0
9001a7da:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
9001a7de:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
9001a7e2:	e7b9      	b.n	9001a758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001a7e4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001a7e8:	4623      	mov	r3, r4
9001a7ea:	f104 0808 	add.w	r8, r4, #8
9001a7ee:	4614      	mov	r4, r2
9001a7f0:	6818      	ldr	r0, [r3, #0]
9001a7f2:	3308      	adds	r3, #8
9001a7f4:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a7f8:	4696      	mov	lr, r2
9001a7fa:	4543      	cmp	r3, r8
9001a7fc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001a800:	4672      	mov	r2, lr
9001a802:	d1f5      	bne.n	9001a7f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
9001a804:	6818      	ldr	r0, [r3, #0]
9001a806:	f8ce 0000 	str.w	r0, [lr]
9001a80a:	889b      	ldrh	r3, [r3, #4]
9001a80c:	f8ae 3004 	strh.w	r3, [lr, #4]
9001a810:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
9001a812:	eb05 0343 	add.w	r3, r5, r3, lsl #1
9001a816:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001a818:	f640 6333 	movw	r3, #3635	@ 0xe33
9001a81c:	4299      	cmp	r1, r3
9001a81e:	d111      	bne.n	9001a844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
9001a820:	f8dc 3000 	ldr.w	r3, [ip]
9001a824:	4660      	mov	r0, ip
9001a826:	68db      	ldr	r3, [r3, #12]
9001a828:	4798      	blx	r3
9001a82a:	7b41      	ldrb	r1, [r0, #13]
9001a82c:	00cb      	lsls	r3, r1, #3
9001a82e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a832:	7a03      	ldrb	r3, [r0, #8]
9001a834:	4313      	orrs	r3, r2
9001a836:	064a      	lsls	r2, r1, #25
9001a838:	bf44      	itt	mi
9001a83a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a83e:	b21b      	sxthmi	r3, r3
9001a840:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001a844:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
9001a848:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
9001a84c:	443b      	add	r3, r7
9001a84e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001a852:	4433      	add	r3, r6
9001a854:	b29b      	uxth	r3, r3
9001a856:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001a85a:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001a85e:	10db      	asrs	r3, r3, #3
9001a860:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001a864:	4313      	orrs	r3, r2
9001a866:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
9001a86a:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001a86e:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001a872:	1a9b      	subs	r3, r3, r2
9001a874:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001a878:	e76e      	b.n	9001a758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001a87a:	f023 0204 	bic.w	r2, r3, #4
9001a87e:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001a882:	428a      	cmp	r2, r1
9001a884:	d003      	beq.n	9001a88e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001a886:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001a88a:	4293      	cmp	r3, r2
9001a88c:	d138      	bne.n	9001a900 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001a88e:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001a892:	4622      	mov	r2, r4
9001a894:	f104 0808 	add.w	r8, r4, #8
9001a898:	4634      	mov	r4, r6
9001a89a:	6810      	ldr	r0, [r2, #0]
9001a89c:	3208      	adds	r2, #8
9001a89e:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001a8a2:	46b6      	mov	lr, r6
9001a8a4:	4542      	cmp	r2, r8
9001a8a6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001a8aa:	4676      	mov	r6, lr
9001a8ac:	d1f5      	bne.n	9001a89a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001a8ae:	6810      	ldr	r0, [r2, #0]
9001a8b0:	3b01      	subs	r3, #1
9001a8b2:	4621      	mov	r1, r4
9001a8b4:	f8ce 0000 	str.w	r0, [lr]
9001a8b8:	b29b      	uxth	r3, r3
9001a8ba:	8892      	ldrh	r2, [r2, #4]
9001a8bc:	4628      	mov	r0, r5
9001a8be:	f8ae 2004 	strh.w	r2, [lr, #4]
9001a8c2:	4662      	mov	r2, ip
9001a8c4:	f7ff ff30 	bl	9001a728 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a8c8:	7b41      	ldrb	r1, [r0, #13]
9001a8ca:	00cb      	lsls	r3, r1, #3
9001a8cc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a8d0:	7a03      	ldrb	r3, [r0, #8]
9001a8d2:	0648      	lsls	r0, r1, #25
9001a8d4:	ea43 0302 	orr.w	r3, r3, r2
9001a8d8:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
9001a8dc:	bf44      	itt	mi
9001a8de:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a8e2:	b21b      	sxthmi	r3, r3
9001a8e4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001a8e8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001a8ec:	005b      	lsls	r3, r3, #1
9001a8ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a8f2:	4313      	orrs	r3, r2
9001a8f4:	115a      	asrs	r2, r3, #5
9001a8f6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a8fa:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
9001a8fe:	e047      	b.n	9001a990 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
9001a900:	00c2      	lsls	r2, r0, #3
9001a902:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001a906:	7a22      	ldrb	r2, [r4, #8]
9001a908:	430a      	orrs	r2, r1
9001a90a:	0641      	lsls	r1, r0, #25
9001a90c:	f640 6109 	movw	r1, #3593	@ 0xe09
9001a910:	bf44      	itt	mi
9001a912:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001a916:	b212      	sxthmi	r2, r2
9001a918:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001a91c:	f023 0210 	bic.w	r2, r3, #16
9001a920:	428a      	cmp	r2, r1
9001a922:	d003      	beq.n	9001a92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
9001a924:	f640 6213 	movw	r2, #3603	@ 0xe13
9001a928:	4293      	cmp	r3, r2
9001a92a:	d13e      	bne.n	9001a9aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
9001a92c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001a930:	f104 0808 	add.w	r8, r4, #8
9001a934:	4696      	mov	lr, r2
9001a936:	6820      	ldr	r0, [r4, #0]
9001a938:	3408      	adds	r4, #8
9001a93a:	f854 1c04 	ldr.w	r1, [r4, #-4]
9001a93e:	4616      	mov	r6, r2
9001a940:	4544      	cmp	r4, r8
9001a942:	c603      	stmia	r6!, {r0, r1}
9001a944:	4632      	mov	r2, r6
9001a946:	d1f6      	bne.n	9001a936 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
9001a948:	6820      	ldr	r0, [r4, #0]
9001a94a:	6030      	str	r0, [r6, #0]
9001a94c:	4628      	mov	r0, r5
9001a94e:	88a1      	ldrh	r1, [r4, #4]
9001a950:	4674      	mov	r4, lr
9001a952:	80b1      	strh	r1, [r6, #4]
9001a954:	4671      	mov	r1, lr
9001a956:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
9001a95a:	0076      	lsls	r6, r6, #1
9001a95c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001a960:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
9001a964:	4316      	orrs	r6, r2
9001a966:	f640 6213 	movw	r2, #3603	@ 0xe13
9001a96a:	4293      	cmp	r3, r2
9001a96c:	4662      	mov	r2, ip
9001a96e:	bf16      	itet	ne
9001a970:	f103 33ff 	addne.w	r3, r3, #4294967295
9001a974:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001a978:	b29b      	uxthne	r3, r3
9001a97a:	f7ff fed5 	bl	9001a728 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a97e:	7b43      	ldrb	r3, [r0, #13]
9001a980:	7a82      	ldrb	r2, [r0, #10]
9001a982:	005b      	lsls	r3, r3, #1
9001a984:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a988:	4313      	orrs	r3, r2
9001a98a:	1af6      	subs	r6, r6, r3
9001a98c:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
9001a990:	7b61      	ldrb	r1, [r4, #13]
9001a992:	00cb      	lsls	r3, r1, #3
9001a994:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001a998:	7a23      	ldrb	r3, [r4, #8]
9001a99a:	4313      	orrs	r3, r2
9001a99c:	064a      	lsls	r2, r1, #25
9001a99e:	bf44      	itt	mi
9001a9a0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a9a4:	b21b      	sxthmi	r3, r3
9001a9a6:	1bdb      	subs	r3, r3, r7
9001a9a8:	e719      	b.n	9001a7de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a9aa:	2300      	movs	r3, #0
9001a9ac:	e7a5      	b.n	9001a8fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a9ae:	bf00      	nop
9001a9b0:	3fc00079 	.word	0x3fc00079

9001a9b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a9b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a9b8:	4604      	mov	r4, r0
9001a9ba:	b942      	cbnz	r2, 9001a9ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a9bc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a9c0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001a9c4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001a9c8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001a9cc:	e047      	b.n	9001aa5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a9ce:	7b51      	ldrb	r1, [r2, #13]
9001a9d0:	8893      	ldrh	r3, [r2, #4]
9001a9d2:	010d      	lsls	r5, r1, #4
9001a9d4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001a9d8:	79d5      	ldrb	r5, [r2, #7]
9001a9da:	4305      	orrs	r5, r0
9001a9dc:	2d04      	cmp	r5, #4
9001a9de:	bfcc      	ite	gt
9001a9e0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a9e4:	f04f 0e01 	movle.w	lr, #1
9001a9e8:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001a9ec:	f200 80ab 	bhi.w	9001ab46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a9f0:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001a9f4:	4283      	cmp	r3, r0
9001a9f6:	d216      	bcs.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a9f8:	f240 605b 	movw	r0, #1627	@ 0x65b
9001a9fc:	4283      	cmp	r3, r0
9001a9fe:	d859      	bhi.n	9001aab4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001aa00:	f240 6057 	movw	r0, #1623	@ 0x657
9001aa04:	4283      	cmp	r3, r0
9001aa06:	d20e      	bcs.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa08:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001aa0c:	d24a      	bcs.n	9001aaa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001aa0e:	f240 604e 	movw	r0, #1614	@ 0x64e
9001aa12:	4283      	cmp	r3, r0
9001aa14:	d207      	bcs.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa16:	f240 601a 	movw	r0, #1562	@ 0x61a
9001aa1a:	4283      	cmp	r3, r0
9001aa1c:	d02a      	beq.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa1e:	d821      	bhi.n	9001aa64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001aa20:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001aa24:	d35b      	bcc.n	9001aade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001aa26:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001aa2a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001aa2e:	f040 80d0 	bne.w	9001abd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001aa32:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001aa36:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001aa3a:	f040 80ca 	bne.w	9001abd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001aa3e:	00cb      	lsls	r3, r1, #3
9001aa40:	0649      	lsls	r1, r1, #25
9001aa42:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001aa46:	7a13      	ldrb	r3, [r2, #8]
9001aa48:	ea43 0300 	orr.w	r3, r3, r0
9001aa4c:	bf44      	itt	mi
9001aa4e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001aa52:	b21b      	sxthmi	r3, r3
9001aa54:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001aa58:	1b5d      	subs	r5, r3, r5
9001aa5a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001aa5e:	4610      	mov	r0, r2
9001aa60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001aa64:	f240 604b 	movw	r0, #1611	@ 0x64b
9001aa68:	4283      	cmp	r3, r0
9001aa6a:	d338      	bcc.n	9001aade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001aa6c:	f240 604c 	movw	r0, #1612	@ 0x64c
9001aa70:	4283      	cmp	r3, r0
9001aa72:	d9d8      	bls.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa74:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001aa78:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001aa7c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001aa80:	f040 80f3 	bne.w	9001ac6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001aa84:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001aa88:	f040 80ef 	bne.w	9001ac6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001aa8c:	00cb      	lsls	r3, r1, #3
9001aa8e:	064e      	lsls	r6, r1, #25
9001aa90:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001aa94:	7a13      	ldrb	r3, [r2, #8]
9001aa96:	ea43 0300 	orr.w	r3, r3, r0
9001aa9a:	bf44      	itt	mi
9001aa9c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001aaa0:	b21b      	sxthmi	r3, r3
9001aaa2:	e7d9      	b.n	9001aa58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001aaa4:	f240 6054 	movw	r0, #1620	@ 0x654
9001aaa8:	4283      	cmp	r3, r0
9001aaaa:	d8e3      	bhi.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aaac:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001aab0:	d9e0      	bls.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aab2:	e7b8      	b.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aab4:	f240 6074 	movw	r0, #1652	@ 0x674
9001aab8:	4283      	cmp	r3, r0
9001aaba:	d0b4      	beq.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aabc:	d82d      	bhi.n	9001ab1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001aabe:	f240 605e 	movw	r0, #1630	@ 0x65e
9001aac2:	4283      	cmp	r3, r0
9001aac4:	d804      	bhi.n	9001aad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001aac6:	f240 605d 	movw	r0, #1629	@ 0x65d
9001aaca:	4283      	cmp	r3, r0
9001aacc:	d3d2      	bcc.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aace:	e7aa      	b.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aad0:	f240 605f 	movw	r0, #1631	@ 0x65f
9001aad4:	4283      	cmp	r3, r0
9001aad6:	d0cd      	beq.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aad8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001aadc:	d0a3      	beq.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aade:	00cb      	lsls	r3, r1, #3
9001aae0:	0649      	lsls	r1, r1, #25
9001aae2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001aae6:	7a13      	ldrb	r3, [r2, #8]
9001aae8:	ea43 0300 	orr.w	r3, r3, r0
9001aaec:	bf44      	itt	mi
9001aaee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001aaf2:	b21b      	sxthmi	r3, r3
9001aaf4:	1b5d      	subs	r5, r3, r5
9001aaf6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001aafa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001aafe:	7b53      	ldrb	r3, [r2, #13]
9001ab00:	015b      	lsls	r3, r3, #5
9001ab02:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001ab06:	7993      	ldrb	r3, [r2, #6]
9001ab08:	430b      	orrs	r3, r1
9001ab0a:	2105      	movs	r1, #5
9001ab0c:	005b      	lsls	r3, r3, #1
9001ab0e:	fb93 f3f1 	sdiv	r3, r3, r1
9001ab12:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001ab16:	440b      	add	r3, r1
9001ab18:	e756      	b.n	9001a9c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001ab1a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001ab1e:	4283      	cmp	r3, r0
9001ab20:	d809      	bhi.n	9001ab36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001ab22:	f240 60df 	movw	r0, #1759	@ 0x6df
9001ab26:	4283      	cmp	r3, r0
9001ab28:	f4bf af7d 	bcs.w	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ab2c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001ab30:	2b05      	cmp	r3, #5
9001ab32:	d8d4      	bhi.n	9001aade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001ab34:	e777      	b.n	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ab36:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001ab3a:	4283      	cmp	r3, r0
9001ab3c:	d09a      	beq.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ab3e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001ab42:	4283      	cmp	r3, r0
9001ab44:	e7ca      	b.n	9001aadc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001ab46:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001ab4a:	d22b      	bcs.n	9001aba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001ab4c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001ab50:	4283      	cmp	r3, r0
9001ab52:	d28f      	bcs.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ab54:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001ab58:	4283      	cmp	r3, r0
9001ab5a:	d816      	bhi.n	9001ab8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001ab5c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001ab60:	4283      	cmp	r3, r0
9001ab62:	f4bf af60 	bcs.w	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ab66:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001ab6a:	4283      	cmp	r3, r0
9001ab6c:	d80a      	bhi.n	9001ab84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001ab6e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001ab72:	4283      	cmp	r3, r0
9001ab74:	f4bf af57 	bcs.w	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ab78:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001ab7c:	4283      	cmp	r3, r0
9001ab7e:	f43f af79 	beq.w	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ab82:	e7ac      	b.n	9001aade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001ab84:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001ab88:	e7f8      	b.n	9001ab7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001ab8a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001ab8e:	4283      	cmp	r3, r0
9001ab90:	d802      	bhi.n	9001ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001ab92:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001ab96:	e798      	b.n	9001aaca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001ab98:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001ab9c:	4283      	cmp	r3, r0
9001ab9e:	f47f af42 	bne.w	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aba2:	e767      	b.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aba4:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001aba8:	4283      	cmp	r3, r0
9001abaa:	f43f af63 	beq.w	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001abae:	d802      	bhi.n	9001abb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001abb0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001abb4:	e7f2      	b.n	9001ab9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001abb6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001abba:	4283      	cmp	r3, r0
9001abbc:	d805      	bhi.n	9001abca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001abbe:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001abc2:	4283      	cmp	r3, r0
9001abc4:	f4ff af2f 	bcc.w	9001aa26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001abc8:	e754      	b.n	9001aa74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001abca:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001abce:	4283      	cmp	r3, r0
9001abd0:	e7af      	b.n	9001ab32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001abd2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001abd6:	4617      	mov	r7, r2
9001abd8:	f102 0808 	add.w	r8, r2, #8
9001abdc:	4666      	mov	r6, ip
9001abde:	6838      	ldr	r0, [r7, #0]
9001abe0:	3708      	adds	r7, #8
9001abe2:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001abe6:	46e6      	mov	lr, ip
9001abe8:	4547      	cmp	r7, r8
9001abea:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001abee:	46f4      	mov	ip, lr
9001abf0:	d1f5      	bne.n	9001abde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001abf2:	6838      	ldr	r0, [r7, #0]
9001abf4:	f8ce 0000 	str.w	r0, [lr]
9001abf8:	88b9      	ldrh	r1, [r7, #4]
9001abfa:	f8ae 1004 	strh.w	r1, [lr, #4]
9001abfe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001ac02:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001ac06:	d009      	beq.n	9001ac1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001ac08:	7b51      	ldrb	r1, [r2, #13]
9001ac0a:	7992      	ldrb	r2, [r2, #6]
9001ac0c:	0149      	lsls	r1, r1, #5
9001ac0e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001ac12:	4311      	orrs	r1, r2
9001ac14:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001ac18:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001ac1c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001ac20:	b2ad      	uxth	r5, r5
9001ac22:	d00d      	beq.n	9001ac40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001ac24:	442b      	add	r3, r5
9001ac26:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001ac2a:	b29b      	uxth	r3, r3
9001ac2c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001ac30:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001ac34:	10db      	asrs	r3, r3, #3
9001ac36:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001ac3a:	4313      	orrs	r3, r2
9001ac3c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001ac40:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001ac44:	00cb      	lsls	r3, r1, #3
9001ac46:	064f      	lsls	r7, r1, #25
9001ac48:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ac4c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001ac50:	ea43 0302 	orr.w	r3, r3, r2
9001ac54:	bf44      	itt	mi
9001ac56:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ac5a:	b21b      	sxthmi	r3, r3
9001ac5c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ac60:	1b5b      	subs	r3, r3, r5
9001ac62:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001ac66:	4632      	mov	r2, r6
9001ac68:	e6f9      	b.n	9001aa5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001ac6a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001ac6e:	4617      	mov	r7, r2
9001ac70:	f102 0908 	add.w	r9, r2, #8
9001ac74:	4666      	mov	r6, ip
9001ac76:	6838      	ldr	r0, [r7, #0]
9001ac78:	3708      	adds	r7, #8
9001ac7a:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001ac7e:	46e0      	mov	r8, ip
9001ac80:	454f      	cmp	r7, r9
9001ac82:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001ac86:	46c4      	mov	ip, r8
9001ac88:	d1f5      	bne.n	9001ac76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001ac8a:	6838      	ldr	r0, [r7, #0]
9001ac8c:	f8c8 0000 	str.w	r0, [r8]
9001ac90:	88b9      	ldrh	r1, [r7, #4]
9001ac92:	f8a8 1004 	strh.w	r1, [r8, #4]
9001ac96:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001ac9a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001ac9e:	d009      	beq.n	9001acb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001aca0:	7b51      	ldrb	r1, [r2, #13]
9001aca2:	7992      	ldrb	r2, [r2, #6]
9001aca4:	0149      	lsls	r1, r1, #5
9001aca6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001acaa:	4311      	orrs	r1, r2
9001acac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001acb0:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001acb4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001acb8:	d00e      	beq.n	9001acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001acba:	eba3 030e 	sub.w	r3, r3, lr
9001acbe:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001acc2:	b29b      	uxth	r3, r3
9001acc4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001acc8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001accc:	10db      	asrs	r3, r3, #3
9001acce:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001acd2:	4313      	orrs	r3, r2
9001acd4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001acd8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001acdc:	00cb      	lsls	r3, r1, #3
9001acde:	0648      	lsls	r0, r1, #25
9001ace0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ace4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001ace8:	ea43 0302 	orr.w	r3, r3, r2
9001acec:	bf44      	itt	mi
9001acee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001acf2:	b21b      	sxthmi	r3, r3
9001acf4:	1b5d      	subs	r5, r3, r5
9001acf6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001acfa:	e7b4      	b.n	9001ac66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001acfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001acfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001ad00:	461e      	mov	r6, r3
9001ad02:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ad04:	4604      	mov	r4, r0
9001ad06:	4617      	mov	r7, r2
9001ad08:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ad0c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001ad10:	f7eb f822 	bl	90005d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001ad14:	4605      	mov	r5, r0
9001ad16:	b918      	cbnz	r0, 9001ad20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001ad18:	6030      	str	r0, [r6, #0]
9001ad1a:	4628      	mov	r0, r5
9001ad1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001ad20:	683b      	ldr	r3, [r7, #0]
9001ad22:	4601      	mov	r1, r0
9001ad24:	4638      	mov	r0, r7
9001ad26:	68db      	ldr	r3, [r3, #12]
9001ad28:	4798      	blx	r3
9001ad2a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001ad2e:	4602      	mov	r2, r0
9001ad30:	6030      	str	r0, [r6, #0]
9001ad32:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001ad36:	d213      	bcs.n	9001ad60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001ad38:	4643      	mov	r3, r8
9001ad3a:	4639      	mov	r1, r7
9001ad3c:	4620      	mov	r0, r4
9001ad3e:	f7ff fe39 	bl	9001a9b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001ad42:	6030      	str	r0, [r6, #0]
9001ad44:	6833      	ldr	r3, [r6, #0]
9001ad46:	b143      	cbz	r3, 9001ad5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001ad48:	7b5a      	ldrb	r2, [r3, #13]
9001ad4a:	7a9b      	ldrb	r3, [r3, #10]
9001ad4c:	0052      	lsls	r2, r2, #1
9001ad4e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001ad52:	4313      	orrs	r3, r2
9001ad54:	bf0c      	ite	eq
9001ad56:	2301      	moveq	r3, #1
9001ad58:	2300      	movne	r3, #0
9001ad5a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001ad5e:	e7dc      	b.n	9001ad1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001ad60:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001ad64:	b29b      	uxth	r3, r3
9001ad66:	2b7f      	cmp	r3, #127	@ 0x7f
9001ad68:	d804      	bhi.n	9001ad74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001ad6a:	4639      	mov	r1, r7
9001ad6c:	4620      	mov	r0, r4
9001ad6e:	f7ff fce7 	bl	9001a740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001ad72:	e7e6      	b.n	9001ad42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001ad74:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001ad78:	2b00      	cmp	r3, #0
9001ad7a:	d0e3      	beq.n	9001ad44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001ad7c:	f640 1302 	movw	r3, #2306	@ 0x902
9001ad80:	429d      	cmp	r5, r3
9001ad82:	d1df      	bne.n	9001ad44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001ad84:	4601      	mov	r1, r0
9001ad86:	4620      	mov	r0, r4
9001ad88:	f7ff fcaa 	bl	9001a6e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001ad8c:	e7d9      	b.n	9001ad42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001ad8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001ad8e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001ad92:	461e      	mov	r6, r3
9001ad94:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ad96:	4604      	mov	r4, r0
9001ad98:	4617      	mov	r7, r2
9001ad9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ad9e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001ada2:	f7ea ffd9 	bl	90005d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001ada6:	4605      	mov	r5, r0
9001ada8:	b918      	cbnz	r0, 9001adb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001adaa:	6030      	str	r0, [r6, #0]
9001adac:	4628      	mov	r0, r5
9001adae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001adb2:	683b      	ldr	r3, [r7, #0]
9001adb4:	4601      	mov	r1, r0
9001adb6:	4638      	mov	r0, r7
9001adb8:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001adbc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001adc0:	47c8      	blx	r9
9001adc2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001adc6:	4602      	mov	r2, r0
9001adc8:	6030      	str	r0, [r6, #0]
9001adca:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001adce:	d213      	bcs.n	9001adf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001add0:	4643      	mov	r3, r8
9001add2:	4639      	mov	r1, r7
9001add4:	4620      	mov	r0, r4
9001add6:	f7ff fded 	bl	9001a9b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001adda:	6030      	str	r0, [r6, #0]
9001addc:	6833      	ldr	r3, [r6, #0]
9001adde:	b143      	cbz	r3, 9001adf2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001ade0:	7b5a      	ldrb	r2, [r3, #13]
9001ade2:	7a9b      	ldrb	r3, [r3, #10]
9001ade4:	0052      	lsls	r2, r2, #1
9001ade6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001adea:	4313      	orrs	r3, r2
9001adec:	bf0c      	ite	eq
9001adee:	2301      	moveq	r3, #1
9001adf0:	2300      	movne	r3, #0
9001adf2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001adf6:	e7d9      	b.n	9001adac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001adf8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001adfc:	b29b      	uxth	r3, r3
9001adfe:	2b7f      	cmp	r3, #127	@ 0x7f
9001ae00:	d804      	bhi.n	9001ae0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001ae02:	4639      	mov	r1, r7
9001ae04:	4620      	mov	r0, r4
9001ae06:	f7ff fc9b 	bl	9001a740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001ae0a:	e7e6      	b.n	9001adda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001ae0c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001ae10:	2b00      	cmp	r3, #0
9001ae12:	d0e3      	beq.n	9001addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001ae14:	f640 1302 	movw	r3, #2306	@ 0x902
9001ae18:	429d      	cmp	r5, r3
9001ae1a:	d1df      	bne.n	9001addc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001ae1c:	4601      	mov	r1, r0
9001ae1e:	4620      	mov	r0, r4
9001ae20:	f7ff fc5e 	bl	9001a6e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001ae24:	e7d9      	b.n	9001adda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001ae26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001ae26:	b510      	push	{r4, lr}
9001ae28:	4604      	mov	r4, r0
9001ae2a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001ae2e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001ae30:	b1e1      	cbz	r1, 9001ae6c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001ae32:	2b0a      	cmp	r3, #10
9001ae34:	d02d      	beq.n	9001ae92 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001ae36:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001ae38:	3901      	subs	r1, #1
9001ae3a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001ae3e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001ae40:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001ae44:	1c51      	adds	r1, r2, #1
9001ae46:	b289      	uxth	r1, r1
9001ae48:	2901      	cmp	r1, #1
9001ae4a:	bf8a      	itet	hi
9001ae4c:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001ae50:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001ae52:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001ae54:	1c5a      	adds	r2, r3, #1
9001ae56:	8722      	strh	r2, [r4, #56]	@ 0x38
9001ae58:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001ae5a:	4413      	add	r3, r2
9001ae5c:	b29b      	uxth	r3, r3
9001ae5e:	2b09      	cmp	r3, #9
9001ae60:	bf88      	it	hi
9001ae62:	3b0a      	subhi	r3, #10
9001ae64:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ae68:	8458      	strh	r0, [r3, #34]	@ 0x22
9001ae6a:	e7de      	b.n	9001ae2a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001ae6c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001ae6e:	2b0a      	cmp	r3, #10
9001ae70:	d00f      	beq.n	9001ae92 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001ae72:	4620      	mov	r0, r4
9001ae74:	f7ff fbe2 	bl	9001a63c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001ae78:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001ae7a:	1c5a      	adds	r2, r3, #1
9001ae7c:	8722      	strh	r2, [r4, #56]	@ 0x38
9001ae7e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001ae80:	4413      	add	r3, r2
9001ae82:	b29b      	uxth	r3, r3
9001ae84:	2b09      	cmp	r3, #9
9001ae86:	bf88      	it	hi
9001ae88:	3b0a      	subhi	r3, #10
9001ae8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ae8e:	8458      	strh	r0, [r3, #34]	@ 0x22
9001ae90:	e7ec      	b.n	9001ae6c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001ae92:	bd10      	pop	{r4, pc}

9001ae94 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001ae94:	b538      	push	{r3, r4, r5, lr}
9001ae96:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001ae98:	4604      	mov	r4, r0
9001ae9a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001ae9e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001aea0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001aea2:	3a01      	subs	r2, #1
9001aea4:	8702      	strh	r2, [r0, #56]	@ 0x38
9001aea6:	1c5a      	adds	r2, r3, #1
9001aea8:	b292      	uxth	r2, r2
9001aeaa:	2a09      	cmp	r2, #9
9001aeac:	bf8a      	itet	hi
9001aeae:	3b09      	subhi	r3, #9
9001aeb0:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001aeb2:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001aeb4:	f7ff ffb7 	bl	9001ae26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001aeb8:	8c23      	ldrh	r3, [r4, #32]
9001aeba:	2b01      	cmp	r3, #1
9001aebc:	bf9c      	itt	ls
9001aebe:	3301      	addls	r3, #1
9001aec0:	8423      	strhls	r3, [r4, #32]
9001aec2:	8be3      	ldrh	r3, [r4, #30]
9001aec4:	b90b      	cbnz	r3, 9001aeca <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001aec6:	2302      	movs	r3, #2
9001aec8:	83e3      	strh	r3, [r4, #30]
9001aeca:	8be3      	ldrh	r3, [r4, #30]
9001aecc:	4628      	mov	r0, r5
9001aece:	3b01      	subs	r3, #1
9001aed0:	b29b      	uxth	r3, r3
9001aed2:	83e3      	strh	r3, [r4, #30]
9001aed4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aed8:	8365      	strh	r5, [r4, #26]
9001aeda:	bd38      	pop	{r3, r4, r5, pc}

9001aedc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001aedc:	428a      	cmp	r2, r1
9001aede:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001aee2:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001aee4:	d932      	bls.n	9001af4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001aee6:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001aee8:	1a54      	subs	r4, r2, r1
9001aeea:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001aeee:	19ee      	adds	r6, r5, r7
9001aef0:	fa1f fe84 	uxth.w	lr, r4
9001aef4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001aef8:	3e01      	subs	r6, #1
9001aefa:	b2b4      	uxth	r4, r6
9001aefc:	eba4 090e 	sub.w	r9, r4, lr
9001af00:	fa1f f989 	uxth.w	r9, r9
9001af04:	2c09      	cmp	r4, #9
9001af06:	4626      	mov	r6, r4
9001af08:	bf88      	it	hi
9001af0a:	f1a4 060a 	subhi.w	r6, r4, #10
9001af0e:	f1bc 0f00 	cmp.w	ip, #0
9001af12:	f104 34ff 	add.w	r4, r4, #4294967295
9001af16:	bf08      	it	eq
9001af18:	f04f 0c02 	moveq.w	ip, #2
9001af1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001af20:	b2a4      	uxth	r4, r4
9001af22:	f10c 3cff 	add.w	ip, ip, #4294967295
9001af26:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001af2a:	454c      	cmp	r4, r9
9001af2c:	fa1f fc8c 	uxth.w	ip, ip
9001af30:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001af34:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001af38:	d1e4      	bne.n	9001af04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001af3a:	eba5 050e 	sub.w	r5, r5, lr
9001af3e:	eb0e 0408 	add.w	r4, lr, r8
9001af42:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001af46:	8705      	strh	r5, [r0, #56]	@ 0x38
9001af48:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001af4c:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001af4e:	250a      	movs	r5, #10
9001af50:	1a64      	subs	r4, r4, r1
9001af52:	4439      	add	r1, r7
9001af54:	b289      	uxth	r1, r1
9001af56:	8704      	strh	r4, [r0, #56]	@ 0x38
9001af58:	2909      	cmp	r1, #9
9001af5a:	bf88      	it	hi
9001af5c:	390a      	subhi	r1, #10
9001af5e:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001af60:	b18a      	cbz	r2, 9001af86 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001af62:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001af64:	3a01      	subs	r2, #1
9001af66:	3101      	adds	r1, #1
9001af68:	b292      	uxth	r2, r2
9001af6a:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001af6e:	8701      	strh	r1, [r0, #56]	@ 0x38
9001af70:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001af72:	b901      	cbnz	r1, 9001af76 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001af74:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001af76:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001af78:	3901      	subs	r1, #1
9001af7a:	b289      	uxth	r1, r1
9001af7c:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001af7e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001af82:	844c      	strh	r4, [r1, #34]	@ 0x22
9001af84:	e7ec      	b.n	9001af60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001af86:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001af8a:	f7ff bf4c 	b.w	9001ae26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001af8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001af8e:	b570      	push	{r4, r5, r6, lr}
9001af90:	2500      	movs	r5, #0
9001af92:	4295      	cmp	r5, r2
9001af94:	d011      	beq.n	9001afba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001af96:	8bc4      	ldrh	r4, [r0, #30]
9001af98:	f831 6b02 	ldrh.w	r6, [r1], #2
9001af9c:	4414      	add	r4, r2
9001af9e:	3c01      	subs	r4, #1
9001afa0:	1b64      	subs	r4, r4, r5
9001afa2:	b2a4      	uxth	r4, r4
9001afa4:	2c01      	cmp	r4, #1
9001afa6:	bf88      	it	hi
9001afa8:	3c02      	subhi	r4, #2
9001afaa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001afae:	8b64      	ldrh	r4, [r4, #26]
9001afb0:	42b4      	cmp	r4, r6
9001afb2:	d117      	bne.n	9001afe4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001afb4:	3501      	adds	r5, #1
9001afb6:	b2ad      	uxth	r5, r5
9001afb8:	e7eb      	b.n	9001af92 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001afba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001afbe:	2400      	movs	r4, #0
9001afc0:	4413      	add	r3, r2
9001afc2:	b2a2      	uxth	r2, r4
9001afc4:	429a      	cmp	r2, r3
9001afc6:	da0f      	bge.n	9001afe8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001afc8:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001afca:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001afce:	3401      	adds	r4, #1
9001afd0:	4432      	add	r2, r6
9001afd2:	b292      	uxth	r2, r2
9001afd4:	2a09      	cmp	r2, #9
9001afd6:	bf88      	it	hi
9001afd8:	3a0a      	subhi	r2, #10
9001afda:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001afde:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001afe0:	42aa      	cmp	r2, r5
9001afe2:	d0ee      	beq.n	9001afc2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001afe4:	2000      	movs	r0, #0
9001afe6:	bd70      	pop	{r4, r5, r6, pc}
9001afe8:	2001      	movs	r0, #1
9001afea:	e7fc      	b.n	9001afe6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001afec <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001afec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aff0:	4605      	mov	r5, r0
9001aff2:	4616      	mov	r6, r2
9001aff4:	1c8c      	adds	r4, r1, #2
9001aff6:	8809      	ldrh	r1, [r1, #0]
9001aff8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001affc:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001b000:	42b3      	cmp	r3, r6
9001b002:	d124      	bne.n	9001b04e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001b004:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001b008:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001b00c:	f001 070f 	and.w	r7, r1, #15
9001b010:	4652      	mov	r2, sl
9001b012:	f8cd 8000 	str.w	r8, [sp]
9001b016:	464b      	mov	r3, r9
9001b018:	4621      	mov	r1, r4
9001b01a:	4628      	mov	r0, r5
9001b01c:	f7ff ffb7 	bl	9001af8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001b020:	4683      	mov	fp, r0
9001b022:	b168      	cbz	r0, 9001b040 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001b024:	eb0a 0109 	add.w	r1, sl, r9
9001b028:	463a      	mov	r2, r7
9001b02a:	4628      	mov	r0, r5
9001b02c:	4441      	add	r1, r8
9001b02e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001b032:	4649      	mov	r1, r9
9001b034:	f7ff ff52 	bl	9001aedc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001b038:	4658      	mov	r0, fp
9001b03a:	b003      	add	sp, #12
9001b03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b040:	eb07 010a 	add.w	r1, r7, sl
9001b044:	4449      	add	r1, r9
9001b046:	4441      	add	r1, r8
9001b048:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001b04c:	e7d2      	b.n	9001aff4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001b04e:	f04f 0b00 	mov.w	fp, #0
9001b052:	e7f1      	b.n	9001b038 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001b054 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001b054:	b570      	push	{r4, r5, r6, lr}
9001b056:	8810      	ldrh	r0, [r2, #0]
9001b058:	4298      	cmp	r0, r3
9001b05a:	d817      	bhi.n	9001b08c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001b05c:	1e48      	subs	r0, r1, #1
9001b05e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001b062:	4298      	cmp	r0, r3
9001b064:	d312      	bcc.n	9001b08c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001b066:	2400      	movs	r4, #0
9001b068:	428c      	cmp	r4, r1
9001b06a:	d20f      	bcs.n	9001b08c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001b06c:	1860      	adds	r0, r4, r1
9001b06e:	1040      	asrs	r0, r0, #1
9001b070:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001b074:	0085      	lsls	r5, r0, #2
9001b076:	42b3      	cmp	r3, r6
9001b078:	d902      	bls.n	9001b080 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001b07a:	3001      	adds	r0, #1
9001b07c:	b284      	uxth	r4, r0
9001b07e:	e7f3      	b.n	9001b068 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001b080:	d201      	bcs.n	9001b086 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001b082:	b281      	uxth	r1, r0
9001b084:	e7f0      	b.n	9001b068 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001b086:	442a      	add	r2, r5
9001b088:	8850      	ldrh	r0, [r2, #2]
9001b08a:	bd70      	pop	{r4, r5, r6, pc}
9001b08c:	2000      	movs	r0, #0
9001b08e:	e7fc      	b.n	9001b08a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001b090 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001b090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b094:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001b096:	4604      	mov	r4, r0
9001b098:	260b      	movs	r6, #11
9001b09a:	886f      	ldrh	r7, [r5, #2]
9001b09c:	087f      	lsrs	r7, r7, #1
9001b09e:	3e01      	subs	r6, #1
9001b0a0:	d013      	beq.n	9001b0ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001b0a2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001b0a4:	462a      	mov	r2, r5
9001b0a6:	4639      	mov	r1, r7
9001b0a8:	4620      	mov	r0, r4
9001b0aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001b0ae:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001b0b2:	4643      	mov	r3, r8
9001b0b4:	f7ff ffce 	bl	9001b054 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001b0b8:	b138      	cbz	r0, 9001b0ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001b0ba:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001b0be:	4642      	mov	r2, r8
9001b0c0:	4620      	mov	r0, r4
9001b0c2:	f7ff ff93 	bl	9001afec <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001b0c6:	2800      	cmp	r0, #0
9001b0c8:	d1e9      	bne.n	9001b09e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001b0ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001b0d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001b0d0:	b570      	push	{r4, r5, r6, lr}
9001b0d2:	694a      	ldr	r2, [r1, #20]
9001b0d4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001b0d6:	684b      	ldr	r3, [r1, #4]
9001b0d8:	1b54      	subs	r4, r2, r5
9001b0da:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001b0dc:	f000 8106 	beq.w	9001b2ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001b0e0:	1b9b      	subs	r3, r3, r6
9001b0e2:	d003      	beq.n	9001b0ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001b0e4:	4363      	muls	r3, r4
9001b0e6:	2210      	movs	r2, #16
9001b0e8:	fb93 f3f2 	sdiv	r3, r3, r2
9001b0ec:	680c      	ldr	r4, [r1, #0]
9001b0ee:	698a      	ldr	r2, [r1, #24]
9001b0f0:	1b65      	subs	r5, r4, r5
9001b0f2:	f000 80fd 	beq.w	9001b2f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001b0f6:	1b92      	subs	r2, r2, r6
9001b0f8:	d003      	beq.n	9001b102 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001b0fa:	436a      	muls	r2, r5
9001b0fc:	2410      	movs	r4, #16
9001b0fe:	fb92 f2f4 	sdiv	r2, r2, r4
9001b102:	1a9b      	subs	r3, r3, r2
9001b104:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001b32c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001b108:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b10c:	460a      	mov	r2, r1
9001b10e:	ee07 3a90 	vmov	s15, r3
9001b112:	f100 040c 	add.w	r4, r0, #12
9001b116:	4603      	mov	r3, r0
9001b118:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b11c:	ee67 7a84 	vmul.f32	s15, s15, s8
9001b120:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001b124:	eeb1 6a43 	vneg.f32	s12, s6
9001b128:	edd2 7a02 	vldr	s15, [r2, #8]
9001b12c:	3214      	adds	r2, #20
9001b12e:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001b132:	ece3 6a01 	vstmia	r3!, {s13}
9001b136:	429c      	cmp	r4, r3
9001b138:	ed52 7a02 	vldr	s15, [r2, #-8]
9001b13c:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b140:	edc3 7a02 	vstr	s15, [r3, #8]
9001b144:	ed52 7a01 	vldr	s15, [r2, #-4]
9001b148:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b14c:	edc3 7a05 	vstr	s15, [r3, #20]
9001b150:	d1ea      	bne.n	9001b128 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001b152:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b154:	698b      	ldr	r3, [r1, #24]
9001b156:	edd0 4a02 	vldr	s9, [r0, #8]
9001b15a:	1a9b      	subs	r3, r3, r2
9001b15c:	edd0 3a00 	vldr	s7, [r0]
9001b160:	edd0 6a01 	vldr	s13, [r0, #4]
9001b164:	ee07 3a90 	vmov	s15, r3
9001b168:	684b      	ldr	r3, [r1, #4]
9001b16a:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001b16e:	ed90 5a05 	vldr	s10, [r0, #20]
9001b172:	1a9b      	subs	r3, r3, r2
9001b174:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b178:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001b17c:	ed90 2a03 	vldr	s4, [r0, #12]
9001b180:	ee07 3a10 	vmov	s14, r3
9001b184:	edd0 5a04 	vldr	s11, [r0, #16]
9001b188:	ee67 7a84 	vmul.f32	s15, s15, s8
9001b18c:	ed90 1a07 	vldr	s2, [r0, #28]
9001b190:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b194:	edd0 2a06 	vldr	s5, [r0, #24]
9001b198:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001b19c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001b1a0:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b1a4:	ee32 5a45 	vsub.f32	s10, s4, s10
9001b1a8:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b1ac:	ee67 7a83 	vmul.f32	s15, s15, s6
9001b1b0:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001b1b4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b1b6:	694a      	ldr	r2, [r1, #20]
9001b1b8:	1b13      	subs	r3, r2, r4
9001b1ba:	ee07 3a10 	vmov	s14, r3
9001b1be:	680b      	ldr	r3, [r1, #0]
9001b1c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b1c4:	1b1b      	subs	r3, r3, r4
9001b1c6:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b1ca:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001b1ce:	ee07 3a10 	vmov	s14, r3
9001b1d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b1d6:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b1da:	eee6 4a87 	vfma.f32	s9, s13, s14
9001b1de:	ee64 4a86 	vmul.f32	s9, s9, s12
9001b1e2:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001b1e6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b1e8:	698b      	ldr	r3, [r1, #24]
9001b1ea:	1a9b      	subs	r3, r3, r2
9001b1ec:	ee06 3a90 	vmov	s13, r3
9001b1f0:	684b      	ldr	r3, [r1, #4]
9001b1f2:	1a9b      	subs	r3, r3, r2
9001b1f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b1f8:	ee07 3a10 	vmov	s14, r3
9001b1fc:	ee66 6a84 	vmul.f32	s13, s13, s8
9001b200:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b204:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001b208:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b20c:	eee5 6a87 	vfma.f32	s13, s11, s14
9001b210:	ee66 6a83 	vmul.f32	s13, s13, s6
9001b214:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001b218:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b21a:	694a      	ldr	r2, [r1, #20]
9001b21c:	1b13      	subs	r3, r2, r4
9001b21e:	ee07 3a10 	vmov	s14, r3
9001b222:	680b      	ldr	r3, [r1, #0]
9001b224:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b228:	1b1b      	subs	r3, r3, r4
9001b22a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b22e:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001b232:	ee07 3a10 	vmov	s14, r3
9001b236:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b23a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b23e:	eea5 5a87 	vfma.f32	s10, s11, s14
9001b242:	edd0 5a08 	vldr	s11, [r0, #32]
9001b246:	ee31 1a65 	vsub.f32	s2, s2, s11
9001b24a:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001b24e:	ee25 5a06 	vmul.f32	s10, s10, s12
9001b252:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001b256:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b258:	698b      	ldr	r3, [r1, #24]
9001b25a:	1a9b      	subs	r3, r3, r2
9001b25c:	ee07 3a10 	vmov	s14, r3
9001b260:	684b      	ldr	r3, [r1, #4]
9001b262:	1a9b      	subs	r3, r3, r2
9001b264:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b268:	ee01 3a90 	vmov	s3, r3
9001b26c:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b270:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001b274:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001b278:	ee61 1a84 	vmul.f32	s3, s3, s8
9001b27c:	eea1 7a21 	vfma.f32	s14, s2, s3
9001b280:	ee27 7a03 	vmul.f32	s14, s14, s6
9001b284:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001b288:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001b28a:	694a      	ldr	r2, [r1, #20]
9001b28c:	1b13      	subs	r3, r2, r4
9001b28e:	ee03 3a10 	vmov	s6, r3
9001b292:	680b      	ldr	r3, [r1, #0]
9001b294:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b298:	1b1b      	subs	r3, r3, r4
9001b29a:	ee23 3a04 	vmul.f32	s6, s6, s8
9001b29e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001b2a2:	ee03 3a10 	vmov	s6, r3
9001b2a6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b2aa:	ee23 4a04 	vmul.f32	s8, s6, s8
9001b2ae:	eee1 5a04 	vfma.f32	s11, s2, s8
9001b2b2:	ee25 6a86 	vmul.f32	s12, s11, s12
9001b2b6:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001b2ba:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001b2be:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001b2c2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001b2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b2ca:	dd13      	ble.n	9001b2f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001b2cc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001b2d0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001b2d4:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001b2d6:	eee3 7a87 	vfma.f32	s15, s7, s14
9001b2da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001b2de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b2e2:	dd15      	ble.n	9001b310 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001b2e4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001b2e8:	6403      	str	r3, [r0, #64]	@ 0x40
9001b2ea:	bd70      	pop	{r4, r5, r6, pc}
9001b2ec:	4623      	mov	r3, r4
9001b2ee:	e6fd      	b.n	9001b0ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001b2f0:	462a      	mov	r2, r5
9001b2f2:	e706      	b.n	9001b102 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001b2f4:	d502      	bpl.n	9001b2fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001b2f6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001b2fa:	e7e9      	b.n	9001b2d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001b2fc:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001b300:	eea3 2a85 	vfma.f32	s4, s7, s10
9001b304:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001b308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b30c:	dade      	bge.n	9001b2cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001b30e:	e7f2      	b.n	9001b2f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001b310:	d502      	bpl.n	9001b318 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001b312:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001b316:	e7e7      	b.n	9001b2e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001b318:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001b31c:	eee3 4a86 	vfma.f32	s9, s7, s12
9001b320:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001b324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b328:	dadc      	bge.n	9001b2e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001b32a:	e7f2      	b.n	9001b312 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001b32c:	3d800000 	.word	0x3d800000

9001b330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001b330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001b334:	2714      	movs	r7, #20
9001b336:	435f      	muls	r7, r3
9001b338:	eb02 0c07 	add.w	ip, r2, r7
9001b33c:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001b340:	f115 0e0f 	adds.w	lr, r5, #15
9001b344:	f100 80a2 	bmi.w	9001b48c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001b348:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001b34c:	9c08      	ldr	r4, [sp, #32]
9001b34e:	2614      	movs	r6, #20
9001b350:	f8c0 e014 	str.w	lr, [r0, #20]
9001b354:	4366      	muls	r6, r4
9001b356:	eb02 0806 	add.w	r8, r2, r6
9001b35a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001b35e:	f115 040f 	adds.w	r4, r5, #15
9001b362:	f100 809f 	bmi.w	9001b4a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001b366:	1124      	asrs	r4, r4, #4
9001b368:	eba4 040e 	sub.w	r4, r4, lr
9001b36c:	6184      	str	r4, [r0, #24]
9001b36e:	2c00      	cmp	r4, #0
9001b370:	f000 808a 	beq.w	9001b488 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001b374:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001b378:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001b37c:	5995      	ldr	r5, [r2, r6]
9001b37e:	eba4 0809 	sub.w	r8, r4, r9
9001b382:	59d4      	ldr	r4, [r2, r7]
9001b384:	eba5 0a04 	sub.w	sl, r5, r4
9001b388:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001b38c:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001b390:	fb0e fe05 	mul.w	lr, lr, r5
9001b394:	fb0a ee19 	mls	lr, sl, r9, lr
9001b398:	fb08 e404 	mla	r4, r8, r4, lr
9001b39c:	3c01      	subs	r4, #1
9001b39e:	19a4      	adds	r4, r4, r6
9001b3a0:	f100 808c 	bmi.w	9001b4bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001b3a4:	fb94 fef6 	sdiv	lr, r4, r6
9001b3a8:	fb06 441e 	mls	r4, r6, lr, r4
9001b3ac:	f8c0 e000 	str.w	lr, [r0]
9001b3b0:	6104      	str	r4, [r0, #16]
9001b3b2:	2d00      	cmp	r5, #0
9001b3b4:	f2c0 8095 	blt.w	9001b4e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001b3b8:	fb95 f4f6 	sdiv	r4, r5, r6
9001b3bc:	fb06 5514 	mls	r5, r6, r4, r5
9001b3c0:	6044      	str	r4, [r0, #4]
9001b3c2:	6085      	str	r5, [r0, #8]
9001b3c4:	60c6      	str	r6, [r0, #12]
9001b3c6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b3ca:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001b3ce:	6945      	ldr	r5, [r0, #20]
9001b3d0:	59d2      	ldr	r2, [r2, r7]
9001b3d2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001b3d6:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001b504 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001b3da:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001b3de:	ee07 4a10 	vmov	s14, r4
9001b3e2:	6804      	ldr	r4, [r0, #0]
9001b3e4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001b3e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b3ec:	ee07 2a90 	vmov	s15, r2
9001b3f0:	ee27 7a26 	vmul.f32	s14, s14, s13
9001b3f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b3f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b3fc:	edd3 6a00 	vldr	s13, [r3]
9001b400:	eee6 6a07 	vfma.f32	s13, s12, s14
9001b404:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001b408:	eee6 6a27 	vfma.f32	s13, s12, s15
9001b40c:	edc0 6a07 	vstr	s13, [r0, #28]
9001b410:	edd0 6a01 	vldr	s13, [r0, #4]
9001b414:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001b418:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b41c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001b420:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b424:	ed80 6a08 	vstr	s12, [r0, #32]
9001b428:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001b42a:	6242      	str	r2, [r0, #36]	@ 0x24
9001b42c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001b430:	ed93 6a03 	vldr	s12, [r3, #12]
9001b434:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b438:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001b43c:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001b440:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001b444:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001b448:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001b44c:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b450:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001b454:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001b456:	6302      	str	r2, [r0, #48]	@ 0x30
9001b458:	ed93 6a06 	vldr	s12, [r3, #24]
9001b45c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001b460:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b464:	eeb0 7a46 	vmov.f32	s14, s12
9001b468:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001b46c:	eea6 7a27 	vfma.f32	s14, s12, s15
9001b470:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001b474:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001b478:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001b47c:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b480:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001b484:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001b486:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001b488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b48c:	2410      	movs	r4, #16
9001b48e:	f1c5 0501 	rsb	r5, r5, #1
9001b492:	fb9e fef4 	sdiv	lr, lr, r4
9001b496:	f015 050f 	ands.w	r5, r5, #15
9001b49a:	bf18      	it	ne
9001b49c:	2501      	movne	r5, #1
9001b49e:	ebae 0e05 	sub.w	lr, lr, r5
9001b4a2:	e753      	b.n	9001b34c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001b4a4:	f04f 0910 	mov.w	r9, #16
9001b4a8:	f1c5 0501 	rsb	r5, r5, #1
9001b4ac:	fb94 f4f9 	sdiv	r4, r4, r9
9001b4b0:	f015 050f 	ands.w	r5, r5, #15
9001b4b4:	bf18      	it	ne
9001b4b6:	2501      	movne	r5, #1
9001b4b8:	1b64      	subs	r4, r4, r5
9001b4ba:	e755      	b.n	9001b368 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001b4bc:	4264      	negs	r4, r4
9001b4be:	fb94 fef6 	sdiv	lr, r4, r6
9001b4c2:	f1ce 0800 	rsb	r8, lr, #0
9001b4c6:	fb06 441e 	mls	r4, r6, lr, r4
9001b4ca:	f8c0 8000 	str.w	r8, [r0]
9001b4ce:	6104      	str	r4, [r0, #16]
9001b4d0:	2c00      	cmp	r4, #0
9001b4d2:	f43f af6e 	beq.w	9001b3b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001b4d6:	ea6f 0e0e 	mvn.w	lr, lr
9001b4da:	1b34      	subs	r4, r6, r4
9001b4dc:	f8c0 e000 	str.w	lr, [r0]
9001b4e0:	e766      	b.n	9001b3b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001b4e2:	426d      	negs	r5, r5
9001b4e4:	fb95 f4f6 	sdiv	r4, r5, r6
9001b4e8:	f1c4 0e00 	rsb	lr, r4, #0
9001b4ec:	fb06 5514 	mls	r5, r6, r4, r5
9001b4f0:	f8c0 e004 	str.w	lr, [r0, #4]
9001b4f4:	6085      	str	r5, [r0, #8]
9001b4f6:	2d00      	cmp	r5, #0
9001b4f8:	f43f af64 	beq.w	9001b3c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001b4fc:	43e4      	mvns	r4, r4
9001b4fe:	1b75      	subs	r5, r6, r5
9001b500:	6044      	str	r4, [r0, #4]
9001b502:	e75e      	b.n	9001b3c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001b504:	3d800000 	.word	0x3d800000

9001b508 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001b508:	4602      	mov	r2, r0
9001b50a:	b148      	cbz	r0, 9001b520 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001b50c:	2300      	movs	r3, #0
9001b50e:	b298      	uxth	r0, r3
9001b510:	3301      	adds	r3, #1
9001b512:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001b516:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001b51a:	2900      	cmp	r1, #0
9001b51c:	d1f7      	bne.n	9001b50e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001b51e:	4770      	bx	lr
9001b520:	4770      	bx	lr

9001b522 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001b522:	b530      	push	{r4, r5, lr}
9001b524:	4604      	mov	r4, r0
9001b526:	b159      	cbz	r1, 9001b540 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001b528:	b148      	cbz	r0, 9001b53e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b52a:	2300      	movs	r3, #0
9001b52c:	b298      	uxth	r0, r3
9001b52e:	4282      	cmp	r2, r0
9001b530:	d905      	bls.n	9001b53e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b532:	5ccd      	ldrb	r5, [r1, r3]
9001b534:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001b538:	3301      	adds	r3, #1
9001b53a:	2d00      	cmp	r5, #0
9001b53c:	d1f6      	bne.n	9001b52c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001b53e:	bd30      	pop	{r4, r5, pc}
9001b540:	4608      	mov	r0, r1
9001b542:	e7fc      	b.n	9001b53e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001b544 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001b544:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b546:	b08b      	sub	sp, #44	@ 0x2c
9001b548:	468c      	mov	ip, r1
9001b54a:	4604      	mov	r4, r0
9001b54c:	2100      	movs	r1, #0
9001b54e:	261f      	movs	r6, #31
9001b550:	af01      	add	r7, sp, #4
9001b552:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001b556:	1e71      	subs	r1, r6, #1
9001b558:	fb94 fef3 	sdiv	lr, r4, r3
9001b55c:	fb03 441e 	mls	r4, r3, lr, r4
9001b560:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001b564:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001b568:	b2ec      	uxtb	r4, r5
9001b56a:	2d09      	cmp	r5, #9
9001b56c:	bfd4      	ite	le
9001b56e:	3430      	addle	r4, #48	@ 0x30
9001b570:	3457      	addgt	r4, #87	@ 0x57
9001b572:	b2e4      	uxtb	r4, r4
9001b574:	55bc      	strb	r4, [r7, r6]
9001b576:	4674      	mov	r4, lr
9001b578:	b974      	cbnz	r4, 9001b598 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001b57a:	2800      	cmp	r0, #0
9001b57c:	da05      	bge.n	9001b58a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001b57e:	ab0a      	add	r3, sp, #40	@ 0x28
9001b580:	4419      	add	r1, r3
9001b582:	232d      	movs	r3, #45	@ 0x2d
9001b584:	f801 3c24 	strb.w	r3, [r1, #-36]
9001b588:	1eb1      	subs	r1, r6, #2
9001b58a:	3101      	adds	r1, #1
9001b58c:	4660      	mov	r0, ip
9001b58e:	4439      	add	r1, r7
9001b590:	f7ff ffc7 	bl	9001b522 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b594:	b00b      	add	sp, #44	@ 0x2c
9001b596:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b598:	460e      	mov	r6, r1
9001b59a:	e7dc      	b.n	9001b556 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001b59c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001b59c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b59e:	468c      	mov	ip, r1
9001b5a0:	b08b      	sub	sp, #44	@ 0x2c
9001b5a2:	2100      	movs	r1, #0
9001b5a4:	ae01      	add	r6, sp, #4
9001b5a6:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001b5aa:	211f      	movs	r1, #31
9001b5ac:	fbb0 f7f3 	udiv	r7, r0, r3
9001b5b0:	fb03 0517 	mls	r5, r3, r7, r0
9001b5b4:	4638      	mov	r0, r7
9001b5b6:	b2ec      	uxtb	r4, r5
9001b5b8:	2d09      	cmp	r5, #9
9001b5ba:	bfd4      	ite	le
9001b5bc:	3430      	addle	r4, #48	@ 0x30
9001b5be:	3457      	addgt	r4, #87	@ 0x57
9001b5c0:	b2e4      	uxtb	r4, r4
9001b5c2:	558c      	strb	r4, [r1, r6]
9001b5c4:	1e4c      	subs	r4, r1, #1
9001b5c6:	b92f      	cbnz	r7, 9001b5d4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001b5c8:	4431      	add	r1, r6
9001b5ca:	4660      	mov	r0, ip
9001b5cc:	f7ff ffa9 	bl	9001b522 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b5d0:	b00b      	add	sp, #44	@ 0x2c
9001b5d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b5d4:	4621      	mov	r1, r4
9001b5d6:	e7e9      	b.n	9001b5ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001b5d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001b5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b5dc:	b085      	sub	sp, #20
9001b5de:	4691      	mov	r9, r2
9001b5e0:	6802      	ldr	r2, [r0, #0]
9001b5e2:	4688      	mov	r8, r1
9001b5e4:	461c      	mov	r4, r3
9001b5e6:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001b5ea:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001b5ee:	4683      	mov	fp, r0
9001b5f0:	4610      	mov	r0, r2
9001b5f2:	9103      	str	r1, [sp, #12]
9001b5f4:	9302      	str	r3, [sp, #8]
9001b5f6:	9201      	str	r2, [sp, #4]
9001b5f8:	f7ff ff86 	bl	9001b508 <_ZN8touchgfx7Unicode6strlenEPKt>
9001b5fc:	f1b8 0f00 	cmp.w	r8, #0
9001b600:	bf0c      	ite	eq
9001b602:	4684      	moveq	ip, r0
9001b604:	f100 0c01 	addne.w	ip, r0, #1
9001b608:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001b60c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001b610:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001b612:	fa1f fc8c 	uxth.w	ip, ip
9001b616:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b618:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001b61c:	9903      	ldr	r1, [sp, #12]
9001b61e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001b622:	d041      	beq.n	9001b6a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b624:	d834      	bhi.n	9001b690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001b626:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001b62a:	d059      	beq.n	9001b6e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001b62c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001b630:	d03a      	beq.n	9001b6a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b632:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001b636:	d034      	beq.n	9001b6a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b638:	2400      	movs	r4, #0
9001b63a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001b63e:	3a01      	subs	r2, #1
9001b640:	b169      	cbz	r1, 9001b65e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b642:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001b644:	458c      	cmp	ip, r1
9001b646:	da09      	bge.n	9001b65c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b648:	eba1 010c 	sub.w	r1, r1, ip
9001b64c:	b289      	uxth	r1, r1
9001b64e:	b933      	cbnz	r3, 9001b65e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b650:	2e00      	cmp	r6, #0
9001b652:	d051      	beq.n	9001b6f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b654:	2800      	cmp	r0, #0
9001b656:	d04f      	beq.n	9001b6f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b658:	440c      	add	r4, r1
9001b65a:	b2a4      	uxth	r4, r4
9001b65c:	2100      	movs	r1, #0
9001b65e:	682b      	ldr	r3, [r5, #0]
9001b660:	4293      	cmp	r3, r2
9001b662:	da07      	bge.n	9001b674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b664:	f1b8 0f00 	cmp.w	r8, #0
9001b668:	d004      	beq.n	9001b674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b66a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001b66e:	682b      	ldr	r3, [r5, #0]
9001b670:	3301      	adds	r3, #1
9001b672:	602b      	str	r3, [r5, #0]
9001b674:	2730      	movs	r7, #48	@ 0x30
9001b676:	2c00      	cmp	r4, #0
9001b678:	d04e      	beq.n	9001b718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b67a:	682e      	ldr	r6, [r5, #0]
9001b67c:	3c01      	subs	r4, #1
9001b67e:	42b2      	cmp	r2, r6
9001b680:	b2a4      	uxth	r4, r4
9001b682:	dd49      	ble.n	9001b718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b684:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b688:	682b      	ldr	r3, [r5, #0]
9001b68a:	3301      	adds	r3, #1
9001b68c:	602b      	str	r3, [r5, #0]
9001b68e:	e7f2      	b.n	9001b676 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001b690:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001b694:	d01d      	beq.n	9001b6d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001b696:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001b69a:	d002      	beq.n	9001b6a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b69c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001b6a0:	e7c9      	b.n	9001b636 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001b6a2:	4684      	mov	ip, r0
9001b6a4:	f04f 0800 	mov.w	r8, #0
9001b6a8:	2c00      	cmp	r4, #0
9001b6aa:	d0c6      	beq.n	9001b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b6ac:	b947      	cbnz	r7, 9001b6c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b6ae:	2801      	cmp	r0, #1
9001b6b0:	d106      	bne.n	9001b6c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b6b2:	8814      	ldrh	r4, [r2, #0]
9001b6b4:	2c30      	cmp	r4, #48	@ 0x30
9001b6b6:	bf02      	ittt	eq
9001b6b8:	3202      	addeq	r2, #2
9001b6ba:	4638      	moveq	r0, r7
9001b6bc:	f8cb 2000 	streq.w	r2, [fp]
9001b6c0:	45bc      	cmp	ip, r7
9001b6c2:	da14      	bge.n	9001b6ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001b6c4:	b2bf      	uxth	r7, r7
9001b6c6:	eba7 040c 	sub.w	r4, r7, ip
9001b6ca:	46bc      	mov	ip, r7
9001b6cc:	b2a4      	uxth	r4, r4
9001b6ce:	2600      	movs	r6, #0
9001b6d0:	e7b3      	b.n	9001b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b6d2:	4684      	mov	ip, r0
9001b6d4:	b16c      	cbz	r4, 9001b6f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001b6d6:	42b8      	cmp	r0, r7
9001b6d8:	dd00      	ble.n	9001b6dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001b6da:	b2b8      	uxth	r0, r7
9001b6dc:	2400      	movs	r4, #0
9001b6de:	e003      	b.n	9001b6e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001b6e0:	f04f 0c01 	mov.w	ip, #1
9001b6e4:	2400      	movs	r4, #0
9001b6e6:	4660      	mov	r0, ip
9001b6e8:	4626      	mov	r6, r4
9001b6ea:	46a0      	mov	r8, r4
9001b6ec:	e7a5      	b.n	9001b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b6ee:	2400      	movs	r4, #0
9001b6f0:	e7ed      	b.n	9001b6ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001b6f2:	4626      	mov	r6, r4
9001b6f4:	46a0      	mov	r8, r4
9001b6f6:	e7a0      	b.n	9001b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b6f8:	2900      	cmp	r1, #0
9001b6fa:	d0b0      	beq.n	9001b65e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b6fc:	2720      	movs	r7, #32
9001b6fe:	682e      	ldr	r6, [r5, #0]
9001b700:	2900      	cmp	r1, #0
9001b702:	d0ac      	beq.n	9001b65e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b704:	3901      	subs	r1, #1
9001b706:	4296      	cmp	r6, r2
9001b708:	b289      	uxth	r1, r1
9001b70a:	daa7      	bge.n	9001b65c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b70c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b710:	682b      	ldr	r3, [r5, #0]
9001b712:	3301      	adds	r3, #1
9001b714:	602b      	str	r3, [r5, #0]
9001b716:	e7f2      	b.n	9001b6fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001b718:	b188      	cbz	r0, 9001b73e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b71a:	682b      	ldr	r3, [r5, #0]
9001b71c:	3801      	subs	r0, #1
9001b71e:	429a      	cmp	r2, r3
9001b720:	b280      	uxth	r0, r0
9001b722:	dd0c      	ble.n	9001b73e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b724:	f8db 3000 	ldr.w	r3, [fp]
9001b728:	1c9c      	adds	r4, r3, #2
9001b72a:	f8cb 4000 	str.w	r4, [fp]
9001b72e:	881c      	ldrh	r4, [r3, #0]
9001b730:	682b      	ldr	r3, [r5, #0]
9001b732:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001b736:	682b      	ldr	r3, [r5, #0]
9001b738:	3301      	adds	r3, #1
9001b73a:	602b      	str	r3, [r5, #0]
9001b73c:	e7ec      	b.n	9001b718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b73e:	2620      	movs	r6, #32
9001b740:	b151      	cbz	r1, 9001b758 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b742:	6828      	ldr	r0, [r5, #0]
9001b744:	3901      	subs	r1, #1
9001b746:	4282      	cmp	r2, r0
9001b748:	b289      	uxth	r1, r1
9001b74a:	dd05      	ble.n	9001b758 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b74c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001b750:	682b      	ldr	r3, [r5, #0]
9001b752:	3301      	adds	r3, #1
9001b754:	602b      	str	r3, [r5, #0]
9001b756:	e7f3      	b.n	9001b740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001b758:	b005      	add	sp, #20
9001b75a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b75e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001b75e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001b762:	2400      	movs	r4, #0
9001b764:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001b768:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001b76c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001b770:	8014      	strh	r4, [r2, #0]
9001b772:	701c      	strb	r4, [r3, #0]
9001b774:	f888 4000 	strb.w	r4, [r8]
9001b778:	f88c 4000 	strb.w	r4, [ip]
9001b77c:	f88e 4000 	strb.w	r4, [lr]
9001b780:	703c      	strb	r4, [r7, #0]
9001b782:	6804      	ldr	r4, [r0, #0]
9001b784:	b1a4      	cbz	r4, 9001b7b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001b786:	8824      	ldrh	r4, [r4, #0]
9001b788:	f04f 0901 	mov.w	r9, #1
9001b78c:	b314      	cbz	r4, 9001b7d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b78e:	2c2b      	cmp	r4, #43	@ 0x2b
9001b790:	d001      	beq.n	9001b796 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001b792:	2c20      	cmp	r4, #32
9001b794:	d110      	bne.n	9001b7b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001b796:	8014      	strh	r4, [r2, #0]
9001b798:	6804      	ldr	r4, [r0, #0]
9001b79a:	b10c      	cbz	r4, 9001b7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001b79c:	3402      	adds	r4, #2
9001b79e:	6004      	str	r4, [r0, #0]
9001b7a0:	680c      	ldr	r4, [r1, #0]
9001b7a2:	b10c      	cbz	r4, 9001b7a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001b7a4:	3401      	adds	r4, #1
9001b7a6:	600c      	str	r4, [r1, #0]
9001b7a8:	6804      	ldr	r4, [r0, #0]
9001b7aa:	b17c      	cbz	r4, 9001b7cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001b7ac:	8824      	ldrh	r4, [r4, #0]
9001b7ae:	e7ed      	b.n	9001b78c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b7b0:	680c      	ldr	r4, [r1, #0]
9001b7b2:	b17c      	cbz	r4, 9001b7d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b7b4:	7824      	ldrb	r4, [r4, #0]
9001b7b6:	e7e7      	b.n	9001b788 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001b7b8:	2c2d      	cmp	r4, #45	@ 0x2d
9001b7ba:	d102      	bne.n	9001b7c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001b7bc:	f883 9000 	strb.w	r9, [r3]
9001b7c0:	e7ea      	b.n	9001b798 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b7c2:	2c23      	cmp	r4, #35	@ 0x23
9001b7c4:	d107      	bne.n	9001b7d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001b7c6:	f888 9000 	strb.w	r9, [r8]
9001b7ca:	e7e5      	b.n	9001b798 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b7cc:	680c      	ldr	r4, [r1, #0]
9001b7ce:	b10c      	cbz	r4, 9001b7d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b7d0:	7824      	ldrb	r4, [r4, #0]
9001b7d2:	e7db      	b.n	9001b78c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b7d4:	2400      	movs	r4, #0
9001b7d6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001b7da:	2b09      	cmp	r3, #9
9001b7dc:	d901      	bls.n	9001b7e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001b7de:	2c2a      	cmp	r4, #42	@ 0x2a
9001b7e0:	d122      	bne.n	9001b828 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b7e2:	2301      	movs	r3, #1
9001b7e4:	2c30      	cmp	r4, #48	@ 0x30
9001b7e6:	f88e 3000 	strb.w	r3, [lr]
9001b7ea:	d10d      	bne.n	9001b808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b7ec:	f88c 3000 	strb.w	r3, [ip]
9001b7f0:	6803      	ldr	r3, [r0, #0]
9001b7f2:	b10b      	cbz	r3, 9001b7f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001b7f4:	3302      	adds	r3, #2
9001b7f6:	6003      	str	r3, [r0, #0]
9001b7f8:	680b      	ldr	r3, [r1, #0]
9001b7fa:	b10b      	cbz	r3, 9001b800 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001b7fc:	3301      	adds	r3, #1
9001b7fe:	600b      	str	r3, [r1, #0]
9001b800:	6803      	ldr	r3, [r0, #0]
9001b802:	2b00      	cmp	r3, #0
9001b804:	d02f      	beq.n	9001b866 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001b806:	881c      	ldrh	r4, [r3, #0]
9001b808:	2c2a      	cmp	r4, #42	@ 0x2a
9001b80a:	d135      	bne.n	9001b878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b80c:	f04f 33ff 	mov.w	r3, #4294967295
9001b810:	6033      	str	r3, [r6, #0]
9001b812:	6803      	ldr	r3, [r0, #0]
9001b814:	b10b      	cbz	r3, 9001b81a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001b816:	3302      	adds	r3, #2
9001b818:	6003      	str	r3, [r0, #0]
9001b81a:	680b      	ldr	r3, [r1, #0]
9001b81c:	b10b      	cbz	r3, 9001b822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001b81e:	3301      	adds	r3, #1
9001b820:	600b      	str	r3, [r1, #0]
9001b822:	6803      	ldr	r3, [r0, #0]
9001b824:	b31b      	cbz	r3, 9001b86e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001b826:	881c      	ldrh	r4, [r3, #0]
9001b828:	2c2e      	cmp	r4, #46	@ 0x2e
9001b82a:	d11a      	bne.n	9001b862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b82c:	2301      	movs	r3, #1
9001b82e:	703b      	strb	r3, [r7, #0]
9001b830:	6803      	ldr	r3, [r0, #0]
9001b832:	b10b      	cbz	r3, 9001b838 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001b834:	3302      	adds	r3, #2
9001b836:	6003      	str	r3, [r0, #0]
9001b838:	680b      	ldr	r3, [r1, #0]
9001b83a:	b10b      	cbz	r3, 9001b840 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001b83c:	3301      	adds	r3, #1
9001b83e:	600b      	str	r3, [r1, #0]
9001b840:	6803      	ldr	r3, [r0, #0]
9001b842:	2b00      	cmp	r3, #0
9001b844:	d036      	beq.n	9001b8b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001b846:	881b      	ldrh	r3, [r3, #0]
9001b848:	2b2a      	cmp	r3, #42	@ 0x2a
9001b84a:	d137      	bne.n	9001b8bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b84c:	f04f 33ff 	mov.w	r3, #4294967295
9001b850:	602b      	str	r3, [r5, #0]
9001b852:	6803      	ldr	r3, [r0, #0]
9001b854:	b10b      	cbz	r3, 9001b85a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001b856:	3302      	adds	r3, #2
9001b858:	6003      	str	r3, [r0, #0]
9001b85a:	680b      	ldr	r3, [r1, #0]
9001b85c:	b10b      	cbz	r3, 9001b862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b85e:	3301      	adds	r3, #1
9001b860:	600b      	str	r3, [r1, #0]
9001b862:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b866:	680c      	ldr	r4, [r1, #0]
9001b868:	b134      	cbz	r4, 9001b878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b86a:	7824      	ldrb	r4, [r4, #0]
9001b86c:	e7cc      	b.n	9001b808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b86e:	680b      	ldr	r3, [r1, #0]
9001b870:	2b00      	cmp	r3, #0
9001b872:	d0f6      	beq.n	9001b862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b874:	781c      	ldrb	r4, [r3, #0]
9001b876:	e7d7      	b.n	9001b828 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b878:	2300      	movs	r3, #0
9001b87a:	220a      	movs	r2, #10
9001b87c:	6033      	str	r3, [r6, #0]
9001b87e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001b882:	fa1f f38c 	uxth.w	r3, ip
9001b886:	2b09      	cmp	r3, #9
9001b888:	d8ce      	bhi.n	9001b828 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b88a:	6833      	ldr	r3, [r6, #0]
9001b88c:	fb02 c303 	mla	r3, r2, r3, ip
9001b890:	6033      	str	r3, [r6, #0]
9001b892:	6803      	ldr	r3, [r0, #0]
9001b894:	b10b      	cbz	r3, 9001b89a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001b896:	3302      	adds	r3, #2
9001b898:	6003      	str	r3, [r0, #0]
9001b89a:	680b      	ldr	r3, [r1, #0]
9001b89c:	b10b      	cbz	r3, 9001b8a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001b89e:	3301      	adds	r3, #1
9001b8a0:	600b      	str	r3, [r1, #0]
9001b8a2:	6803      	ldr	r3, [r0, #0]
9001b8a4:	b10b      	cbz	r3, 9001b8aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001b8a6:	881c      	ldrh	r4, [r3, #0]
9001b8a8:	e7e9      	b.n	9001b87e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b8aa:	680c      	ldr	r4, [r1, #0]
9001b8ac:	2c00      	cmp	r4, #0
9001b8ae:	d0e6      	beq.n	9001b87e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b8b0:	7824      	ldrb	r4, [r4, #0]
9001b8b2:	e7e4      	b.n	9001b87e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b8b4:	680b      	ldr	r3, [r1, #0]
9001b8b6:	b10b      	cbz	r3, 9001b8bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b8b8:	781b      	ldrb	r3, [r3, #0]
9001b8ba:	e7c5      	b.n	9001b848 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001b8bc:	2200      	movs	r2, #0
9001b8be:	240a      	movs	r4, #10
9001b8c0:	602a      	str	r2, [r5, #0]
9001b8c2:	3b30      	subs	r3, #48	@ 0x30
9001b8c4:	682a      	ldr	r2, [r5, #0]
9001b8c6:	b29e      	uxth	r6, r3
9001b8c8:	2e09      	cmp	r6, #9
9001b8ca:	d813      	bhi.n	9001b8f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001b8cc:	fb04 3302 	mla	r3, r4, r2, r3
9001b8d0:	602b      	str	r3, [r5, #0]
9001b8d2:	6803      	ldr	r3, [r0, #0]
9001b8d4:	b10b      	cbz	r3, 9001b8da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001b8d6:	3302      	adds	r3, #2
9001b8d8:	6003      	str	r3, [r0, #0]
9001b8da:	680b      	ldr	r3, [r1, #0]
9001b8dc:	b10b      	cbz	r3, 9001b8e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001b8de:	3301      	adds	r3, #1
9001b8e0:	600b      	str	r3, [r1, #0]
9001b8e2:	6803      	ldr	r3, [r0, #0]
9001b8e4:	b10b      	cbz	r3, 9001b8ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001b8e6:	881b      	ldrh	r3, [r3, #0]
9001b8e8:	e7eb      	b.n	9001b8c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b8ea:	680b      	ldr	r3, [r1, #0]
9001b8ec:	2b00      	cmp	r3, #0
9001b8ee:	d0e8      	beq.n	9001b8c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b8f0:	781b      	ldrb	r3, [r3, #0]
9001b8f2:	e7e6      	b.n	9001b8c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b8f4:	2a06      	cmp	r2, #6
9001b8f6:	bfa8      	it	ge
9001b8f8:	2206      	movge	r2, #6
9001b8fa:	602a      	str	r2, [r5, #0]
9001b8fc:	e7b1      	b.n	9001b862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001b8fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001b8fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b902:	b0a3      	sub	sp, #140	@ 0x8c
9001b904:	2600      	movs	r6, #0
9001b906:	4607      	mov	r7, r0
9001b908:	4688      	mov	r8, r1
9001b90a:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001b90e:	4631      	mov	r1, r6
9001b910:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001b912:	4648      	mov	r0, r9
9001b914:	960d      	str	r6, [sp, #52]	@ 0x34
9001b916:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b91a:	2242      	movs	r2, #66	@ 0x42
9001b91c:	f010 f8dc 	bl	9002bad8 <memset>
9001b920:	b15f      	cbz	r7, 9001b93a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b922:	f108 3aff 	add.w	sl, r8, #4294967295
9001b926:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001b928:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b92a:	b152      	cbz	r2, 9001b942 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b92c:	8812      	ldrh	r2, [r2, #0]
9001b92e:	b10a      	cbz	r2, 9001b934 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b930:	459a      	cmp	sl, r3
9001b932:	dc2e      	bgt.n	9001b992 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b934:	2200      	movs	r2, #0
9001b936:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b93a:	4638      	mov	r0, r7
9001b93c:	b023      	add	sp, #140	@ 0x8c
9001b93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b942:	9a08      	ldr	r2, [sp, #32]
9001b944:	2a00      	cmp	r2, #0
9001b946:	d0f5      	beq.n	9001b934 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b948:	7812      	ldrb	r2, [r2, #0]
9001b94a:	e7f0      	b.n	9001b92e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b94c:	2d00      	cmp	r5, #0
9001b94e:	d0ea      	beq.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b950:	782a      	ldrb	r2, [r5, #0]
9001b952:	b142      	cbz	r2, 9001b966 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b954:	2a25      	cmp	r2, #37	@ 0x25
9001b956:	d001      	beq.n	9001b95c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b958:	459a      	cmp	sl, r3
9001b95a:	dc08      	bgt.n	9001b96e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b95c:	f1bb 0f00 	cmp.w	fp, #0
9001b960:	d121      	bne.n	9001b9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b962:	2d00      	cmp	r5, #0
9001b964:	d0df      	beq.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b966:	782a      	ldrb	r2, [r5, #0]
9001b968:	f04f 0b00 	mov.w	fp, #0
9001b96c:	e01d      	b.n	9001b9aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b96e:	f1bb 0f00 	cmp.w	fp, #0
9001b972:	d077      	beq.n	9001ba64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b974:	f8bb 2000 	ldrh.w	r2, [fp]
9001b978:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b97c:	f1bb 0f00 	cmp.w	fp, #0
9001b980:	d002      	beq.n	9001b988 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b982:	f10b 0202 	add.w	r2, fp, #2
9001b986:	9209      	str	r2, [sp, #36]	@ 0x24
9001b988:	b10d      	cbz	r5, 9001b98e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b98a:	3501      	adds	r5, #1
9001b98c:	9508      	str	r5, [sp, #32]
9001b98e:	3301      	adds	r3, #1
9001b990:	930d      	str	r3, [sp, #52]	@ 0x34
9001b992:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b994:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b998:	f1bb 0f00 	cmp.w	fp, #0
9001b99c:	d0d6      	beq.n	9001b94c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b99e:	f8bb 2000 	ldrh.w	r2, [fp]
9001b9a2:	2a00      	cmp	r2, #0
9001b9a4:	d1d6      	bne.n	9001b954 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b9a6:	f8bb 2000 	ldrh.w	r2, [fp]
9001b9aa:	2a00      	cmp	r2, #0
9001b9ac:	d0bb      	beq.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b9ae:	459a      	cmp	sl, r3
9001b9b0:	ddb9      	ble.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b9b2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001b9b6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001b9ba:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001b9be:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001b9c2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001b9c6:	960e      	str	r6, [sp, #56]	@ 0x38
9001b9c8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001b9cc:	960f      	str	r6, [sp, #60]	@ 0x3c
9001b9ce:	f1bb 0f00 	cmp.w	fp, #0
9001b9d2:	d002      	beq.n	9001b9da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b9d4:	f10b 0302 	add.w	r3, fp, #2
9001b9d8:	9309      	str	r3, [sp, #36]	@ 0x24
9001b9da:	b10d      	cbz	r5, 9001b9e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b9dc:	1c6b      	adds	r3, r5, #1
9001b9de:	9308      	str	r3, [sp, #32]
9001b9e0:	ab0f      	add	r3, sp, #60	@ 0x3c
9001b9e2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001b9e6:	a908      	add	r1, sp, #32
9001b9e8:	a809      	add	r0, sp, #36	@ 0x24
9001b9ea:	9305      	str	r3, [sp, #20]
9001b9ec:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001b9f0:	9304      	str	r3, [sp, #16]
9001b9f2:	ab0e      	add	r3, sp, #56	@ 0x38
9001b9f4:	9303      	str	r3, [sp, #12]
9001b9f6:	ab0c      	add	r3, sp, #48	@ 0x30
9001b9f8:	9302      	str	r3, [sp, #8]
9001b9fa:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001b9fe:	9301      	str	r3, [sp, #4]
9001ba00:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001ba04:	9300      	str	r3, [sp, #0]
9001ba06:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001ba0a:	f7ff fea8 	bl	9001b75e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001ba0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ba10:	2b00      	cmp	r3, #0
9001ba12:	bfbf      	itttt	lt
9001ba14:	6823      	ldrlt	r3, [r4, #0]
9001ba16:	3404      	addlt	r4, #4
9001ba18:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001ba1c:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001ba1e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001ba20:	2b00      	cmp	r3, #0
9001ba22:	bfbe      	ittt	lt
9001ba24:	6823      	ldrlt	r3, [r4, #0]
9001ba26:	3404      	addlt	r4, #4
9001ba28:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001ba2c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001ba30:	bfb8      	it	lt
9001ba32:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001ba34:	b1d9      	cbz	r1, 9001ba6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001ba36:	880b      	ldrh	r3, [r1, #0]
9001ba38:	2b69      	cmp	r3, #105	@ 0x69
9001ba3a:	d01f      	beq.n	9001ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ba3c:	d82f      	bhi.n	9001ba9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001ba3e:	2b58      	cmp	r3, #88	@ 0x58
9001ba40:	d01c      	beq.n	9001ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ba42:	d818      	bhi.n	9001ba76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001ba44:	2b25      	cmp	r3, #37	@ 0x25
9001ba46:	d034      	beq.n	9001bab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001ba48:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ba4a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001ba4e:	f1bb 0f00 	cmp.w	fp, #0
9001ba52:	f000 80b7 	beq.w	9001bbc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001ba56:	f8bb 5000 	ldrh.w	r5, [fp]
9001ba5a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001ba5e:	3301      	adds	r3, #1
9001ba60:	930d      	str	r3, [sp, #52]	@ 0x34
9001ba62:	e029      	b.n	9001bab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001ba64:	b10d      	cbz	r5, 9001ba6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001ba66:	782a      	ldrb	r2, [r5, #0]
9001ba68:	e786      	b.n	9001b978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001ba6a:	462a      	mov	r2, r5
9001ba6c:	e784      	b.n	9001b978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001ba6e:	2a00      	cmp	r2, #0
9001ba70:	d0ea      	beq.n	9001ba48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ba72:	7813      	ldrb	r3, [r2, #0]
9001ba74:	e7e0      	b.n	9001ba38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001ba76:	3b63      	subs	r3, #99	@ 0x63
9001ba78:	2b01      	cmp	r3, #1
9001ba7a:	d8e5      	bhi.n	9001ba48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ba7c:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001ba80:	b329      	cbz	r1, 9001bace <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001ba82:	880b      	ldrh	r3, [r1, #0]
9001ba84:	2b69      	cmp	r3, #105	@ 0x69
9001ba86:	d063      	beq.n	9001bb50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ba88:	d825      	bhi.n	9001bad6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001ba8a:	2b63      	cmp	r3, #99	@ 0x63
9001ba8c:	d038      	beq.n	9001bb00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001ba8e:	2b64      	cmp	r3, #100	@ 0x64
9001ba90:	d05e      	beq.n	9001bb50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ba92:	2b58      	cmp	r3, #88	@ 0x58
9001ba94:	d07a      	beq.n	9001bb8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001ba96:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001ba9a:	4625      	mov	r5, r4
9001ba9c:	e036      	b.n	9001bb0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba9e:	2b73      	cmp	r3, #115	@ 0x73
9001baa0:	d0ec      	beq.n	9001ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001baa2:	d802      	bhi.n	9001baaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001baa4:	2b6f      	cmp	r3, #111	@ 0x6f
9001baa6:	d1cf      	bne.n	9001ba48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001baa8:	e7e8      	b.n	9001ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001baaa:	2b75      	cmp	r3, #117	@ 0x75
9001baac:	d0e6      	beq.n	9001ba7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001baae:	2b78      	cmp	r3, #120	@ 0x78
9001bab0:	e7f9      	b.n	9001baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001bab2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bab4:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001bab8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001baba:	b10b      	cbz	r3, 9001bac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001babc:	3302      	adds	r3, #2
9001babe:	9309      	str	r3, [sp, #36]	@ 0x24
9001bac0:	9b08      	ldr	r3, [sp, #32]
9001bac2:	2b00      	cmp	r3, #0
9001bac4:	f43f af2f 	beq.w	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001bac8:	3301      	adds	r3, #1
9001baca:	9308      	str	r3, [sp, #32]
9001bacc:	e72b      	b.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001bace:	2a00      	cmp	r2, #0
9001bad0:	d0e1      	beq.n	9001ba96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001bad2:	7813      	ldrb	r3, [r2, #0]
9001bad4:	e7d6      	b.n	9001ba84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001bad6:	2b73      	cmp	r3, #115	@ 0x73
9001bad8:	d036      	beq.n	9001bb48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001bada:	d807      	bhi.n	9001baec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001badc:	2b6f      	cmp	r3, #111	@ 0x6f
9001bade:	d1da      	bne.n	9001ba96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001bae0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bae2:	1d25      	adds	r5, r4, #4
9001bae4:	2308      	movs	r3, #8
9001bae6:	eba8 0202 	sub.w	r2, r8, r2
9001baea:	e049      	b.n	9001bb80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001baec:	2b75      	cmp	r3, #117	@ 0x75
9001baee:	d042      	beq.n	9001bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001baf0:	2b78      	cmp	r3, #120	@ 0x78
9001baf2:	d1d0      	bne.n	9001ba96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001baf4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001baf6:	1d25      	adds	r5, r4, #4
9001baf8:	2310      	movs	r3, #16
9001bafa:	eba8 0202 	sub.w	r2, r8, r2
9001bafe:	e03f      	b.n	9001bb80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001bb00:	6823      	ldr	r3, [r4, #0]
9001bb02:	1d25      	adds	r5, r4, #4
9001bb04:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001bb08:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001bb0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001bb0e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001bb12:	2b00      	cmp	r3, #0
9001bb14:	d051      	beq.n	9001bbba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001bb16:	881a      	ldrh	r2, [r3, #0]
9001bb18:	a80d      	add	r0, sp, #52	@ 0x34
9001bb1a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001bb1e:	462c      	mov	r4, r5
9001bb20:	9005      	str	r0, [sp, #20]
9001bb22:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001bb26:	9004      	str	r0, [sp, #16]
9001bb28:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001bb2a:	9003      	str	r0, [sp, #12]
9001bb2c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001bb30:	9002      	str	r0, [sp, #8]
9001bb32:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001bb34:	9001      	str	r0, [sp, #4]
9001bb36:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001bb3a:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001bb3e:	9000      	str	r0, [sp, #0]
9001bb40:	a810      	add	r0, sp, #64	@ 0x40
9001bb42:	f7ff fd49 	bl	9001b5d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001bb46:	e7b7      	b.n	9001bab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001bb48:	1d25      	adds	r5, r4, #4
9001bb4a:	6823      	ldr	r3, [r4, #0]
9001bb4c:	9310      	str	r3, [sp, #64]	@ 0x40
9001bb4e:	e7dd      	b.n	9001bb0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bb50:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bb52:	230a      	movs	r3, #10
9001bb54:	4649      	mov	r1, r9
9001bb56:	6820      	ldr	r0, [r4, #0]
9001bb58:	eba8 0202 	sub.w	r2, r8, r2
9001bb5c:	1d25      	adds	r5, r4, #4
9001bb5e:	b292      	uxth	r2, r2
9001bb60:	f7ff fcf0 	bl	9001b544 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001bb64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001bb68:	2b2d      	cmp	r3, #45	@ 0x2d
9001bb6a:	d1cf      	bne.n	9001bb0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bb6c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001bb70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bb72:	3302      	adds	r3, #2
9001bb74:	e7ea      	b.n	9001bb4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001bb76:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bb78:	1d25      	adds	r5, r4, #4
9001bb7a:	230a      	movs	r3, #10
9001bb7c:	eba8 0202 	sub.w	r2, r8, r2
9001bb80:	b292      	uxth	r2, r2
9001bb82:	4649      	mov	r1, r9
9001bb84:	6820      	ldr	r0, [r4, #0]
9001bb86:	f7ff fd09 	bl	9001b59c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001bb8a:	e7bf      	b.n	9001bb0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bb8c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001bb8e:	2310      	movs	r3, #16
9001bb90:	4649      	mov	r1, r9
9001bb92:	6820      	ldr	r0, [r4, #0]
9001bb94:	eba8 0202 	sub.w	r2, r8, r2
9001bb98:	1d25      	adds	r5, r4, #4
9001bb9a:	b292      	uxth	r2, r2
9001bb9c:	f7ff fcfe 	bl	9001b59c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001bba0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001bba4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001bba8:	2b00      	cmp	r3, #0
9001bbaa:	d0af      	beq.n	9001bb0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001bbac:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001bbb0:	2919      	cmp	r1, #25
9001bbb2:	d8f7      	bhi.n	9001bba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001bbb4:	3b20      	subs	r3, #32
9001bbb6:	8013      	strh	r3, [r2, #0]
9001bbb8:	e7f4      	b.n	9001bba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001bbba:	9a08      	ldr	r2, [sp, #32]
9001bbbc:	2a00      	cmp	r2, #0
9001bbbe:	d0ab      	beq.n	9001bb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001bbc0:	7812      	ldrb	r2, [r2, #0]
9001bbc2:	e7a9      	b.n	9001bb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001bbc4:	2d00      	cmp	r5, #0
9001bbc6:	f43f af48 	beq.w	9001ba5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001bbca:	782d      	ldrb	r5, [r5, #0]
9001bbcc:	e745      	b.n	9001ba5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001bbce <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001bbce:	b507      	push	{r0, r1, r2, lr}
9001bbd0:	9300      	str	r3, [sp, #0]
9001bbd2:	4613      	mov	r3, r2
9001bbd4:	2200      	movs	r2, #0
9001bbd6:	f7ff fe92 	bl	9001b8fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001bbda:	b003      	add	sp, #12
9001bbdc:	f85d fb04 	ldr.w	pc, [sp], #4

9001bbe0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001bbe0:	b40c      	push	{r2, r3}
9001bbe2:	b507      	push	{r0, r1, r2, lr}
9001bbe4:	ab04      	add	r3, sp, #16
9001bbe6:	f853 2b04 	ldr.w	r2, [r3], #4
9001bbea:	9301      	str	r3, [sp, #4]
9001bbec:	f7ff ffef 	bl	9001bbce <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001bbf0:	b003      	add	sp, #12
9001bbf2:	f85d eb04 	ldr.w	lr, [sp], #4
9001bbf6:	b002      	add	sp, #8
9001bbf8:	4770      	bx	lr
	...

9001bbfc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001bbfc:	4b01      	ldr	r3, [pc, #4]	@ (9001bc04 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001bbfe:	6018      	str	r0, [r3, #0]
9001bc00:	4770      	bx	lr
9001bc02:	bf00      	nop
9001bc04:	24021934 	.word	0x24021934

9001bc08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001bc08:	4b06      	ldr	r3, [pc, #24]	@ (9001bc24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001bc0a:	881a      	ldrh	r2, [r3, #0]
9001bc0c:	4282      	cmp	r2, r0
9001bc0e:	d807      	bhi.n	9001bc20 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001bc10:	4b05      	ldr	r3, [pc, #20]	@ (9001bc28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001bc12:	881b      	ldrh	r3, [r3, #0]
9001bc14:	4413      	add	r3, r2
9001bc16:	4298      	cmp	r0, r3
9001bc18:	bfac      	ite	ge
9001bc1a:	2000      	movge	r0, #0
9001bc1c:	2001      	movlt	r0, #1
9001bc1e:	4770      	bx	lr
9001bc20:	2000      	movs	r0, #0
9001bc22:	4770      	bx	lr
9001bc24:	24021954 	.word	0x24021954
9001bc28:	24021958 	.word	0x24021958

9001bc2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001bc2c:	b508      	push	{r3, lr}
9001bc2e:	4601      	mov	r1, r0
9001bc30:	f7ff ffea 	bl	9001bc08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001bc34:	b118      	cbz	r0, 9001bc3e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001bc36:	4b02      	ldr	r3, [pc, #8]	@ (9001bc40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001bc38:	681b      	ldr	r3, [r3, #0]
9001bc3a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001bc3e:	bd08      	pop	{r3, pc}
9001bc40:	24021938 	.word	0x24021938

9001bc44 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001bc44:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bc46:	4c24      	ldr	r4, [pc, #144]	@ (9001bcd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001bc48:	6823      	ldr	r3, [r4, #0]
9001bc4a:	2b00      	cmp	r3, #0
9001bc4c:	d042      	beq.n	9001bcd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bc4e:	4a23      	ldr	r2, [pc, #140]	@ (9001bcdc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001bc50:	4d23      	ldr	r5, [pc, #140]	@ (9001bce0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001bc52:	8811      	ldrh	r1, [r2, #0]
9001bc54:	f8b5 c000 	ldrh.w	ip, [r5]
9001bc58:	4822      	ldr	r0, [pc, #136]	@ (9001bce4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001bc5a:	4461      	add	r1, ip
9001bc5c:	1c4a      	adds	r2, r1, #1
9001bc5e:	008f      	lsls	r7, r1, #2
9001bc60:	f022 0201 	bic.w	r2, r2, #1
9001bc64:	19de      	adds	r6, r3, r7
9001bc66:	0412      	lsls	r2, r2, #16
9001bc68:	6006      	str	r6, [r0, #0]
9001bc6a:	4e1f      	ldr	r6, [pc, #124]	@ (9001bce8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001bc6c:	0c12      	lsrs	r2, r2, #16
9001bc6e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001bc72:	19da      	adds	r2, r3, r7
9001bc74:	6032      	str	r2, [r6, #0]
9001bc76:	220e      	movs	r2, #14
9001bc78:	fb02 f20c 	mul.w	r2, r2, ip
9001bc7c:	3203      	adds	r2, #3
9001bc7e:	f022 0203 	bic.w	r2, r2, #3
9001bc82:	443a      	add	r2, r7
9001bc84:	4f19      	ldr	r7, [pc, #100]	@ (9001bcec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001bc86:	4413      	add	r3, r2
9001bc88:	603b      	str	r3, [r7, #0]
9001bc8a:	2300      	movs	r3, #0
9001bc8c:	4f18      	ldr	r7, [pc, #96]	@ (9001bcf0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001bc8e:	469c      	mov	ip, r3
9001bc90:	803b      	strh	r3, [r7, #0]
9001bc92:	4f18      	ldr	r7, [pc, #96]	@ (9001bcf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001bc94:	683f      	ldr	r7, [r7, #0]
9001bc96:	1aba      	subs	r2, r7, r2
9001bc98:	4f17      	ldr	r7, [pc, #92]	@ (9001bcf8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001bc9a:	603a      	str	r2, [r7, #0]
9001bc9c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001bca0:	4a16      	ldr	r2, [pc, #88]	@ (9001bcfc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001bca2:	8013      	strh	r3, [r2, #0]
9001bca4:	428b      	cmp	r3, r1
9001bca6:	d10d      	bne.n	9001bcc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001bca8:	882d      	ldrh	r5, [r5, #0]
9001bcaa:	2300      	movs	r3, #0
9001bcac:	6830      	ldr	r0, [r6, #0]
9001bcae:	240e      	movs	r4, #14
9001bcb0:	429d      	cmp	r5, r3
9001bcb2:	d90f      	bls.n	9001bcd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bcb4:	fb04 0203 	mla	r2, r4, r3, r0
9001bcb8:	3301      	adds	r3, #1
9001bcba:	7b11      	ldrb	r1, [r2, #12]
9001bcbc:	f36f 1145 	bfc	r1, #5, #1
9001bcc0:	7311      	strb	r1, [r2, #12]
9001bcc2:	e7f5      	b.n	9001bcb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001bcc4:	6822      	ldr	r2, [r4, #0]
9001bcc6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001bcca:	6802      	ldr	r2, [r0, #0]
9001bccc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001bcd0:	3301      	adds	r3, #1
9001bcd2:	e7e7      	b.n	9001bca4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001bcd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001bcd6:	bf00      	nop
9001bcd8:	24021938 	.word	0x24021938
9001bcdc:	24021954 	.word	0x24021954
9001bce0:	24021958 	.word	0x24021958
9001bce4:	2402194c 	.word	0x2402194c
9001bce8:	2402193c 	.word	0x2402193c
9001bcec:	24021944 	.word	0x24021944
9001bcf0:	24021956 	.word	0x24021956
9001bcf4:	24021940 	.word	0x24021940
9001bcf8:	24021950 	.word	0x24021950
9001bcfc:	24021948 	.word	0x24021948

9001bd00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001bd00:	4b06      	ldr	r3, [pc, #24]	@ (9001bd1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001bd02:	681b      	ldr	r3, [r3, #0]
9001bd04:	b943      	cbnz	r3, 9001bd18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bd06:	b139      	cbz	r1, 9001bd18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bd08:	4b05      	ldr	r3, [pc, #20]	@ (9001bd20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001bd0a:	801a      	strh	r2, [r3, #0]
9001bd0c:	4b05      	ldr	r3, [pc, #20]	@ (9001bd24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001bd0e:	6019      	str	r1, [r3, #0]
9001bd10:	4b05      	ldr	r3, [pc, #20]	@ (9001bd28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001bd12:	6018      	str	r0, [r3, #0]
9001bd14:	f7ff bf96 	b.w	9001bc44 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001bd18:	4770      	bx	lr
9001bd1a:	bf00      	nop
9001bd1c:	24021944 	.word	0x24021944
9001bd20:	24021958 	.word	0x24021958
9001bd24:	24021940 	.word	0x24021940
9001bd28:	24021938 	.word	0x24021938

9001bd2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001bd2c:	b470      	push	{r4, r5, r6}
9001bd2e:	4c07      	ldr	r4, [pc, #28]	@ (9001bd4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001bd30:	4605      	mov	r5, r0
9001bd32:	4610      	mov	r0, r2
9001bd34:	9a03      	ldr	r2, [sp, #12]
9001bd36:	6826      	ldr	r6, [r4, #0]
9001bd38:	b936      	cbnz	r6, 9001bd48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001bd3a:	6025      	str	r5, [r4, #0]
9001bd3c:	4c04      	ldr	r4, [pc, #16]	@ (9001bd50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001bd3e:	8021      	strh	r1, [r4, #0]
9001bd40:	4619      	mov	r1, r3
9001bd42:	bc70      	pop	{r4, r5, r6}
9001bd44:	f7ff bfdc 	b.w	9001bd00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001bd48:	bc70      	pop	{r4, r5, r6}
9001bd4a:	4770      	bx	lr
9001bd4c:	2402195c 	.word	0x2402195c
9001bd50:	24021954 	.word	0x24021954

9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001bd54:	4a12      	ldr	r2, [pc, #72]	@ (9001bda0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001bd56:	8803      	ldrh	r3, [r0, #0]
9001bd58:	8812      	ldrh	r2, [r2, #0]
9001bd5a:	4293      	cmp	r3, r2
9001bd5c:	d207      	bcs.n	9001bd6e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001bd5e:	4a11      	ldr	r2, [pc, #68]	@ (9001bda4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001bd60:	2114      	movs	r1, #20
9001bd62:	6812      	ldr	r2, [r2, #0]
9001bd64:	fb01 2303 	mla	r3, r1, r3, r2
9001bd68:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001bd6c:	4770      	bx	lr
9001bd6e:	490e      	ldr	r1, [pc, #56]	@ (9001bda8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001bd70:	8809      	ldrh	r1, [r1, #0]
9001bd72:	4411      	add	r1, r2
9001bd74:	428b      	cmp	r3, r1
9001bd76:	da04      	bge.n	9001bd82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001bd78:	1a9b      	subs	r3, r3, r2
9001bd7a:	4a0c      	ldr	r2, [pc, #48]	@ (9001bdac <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001bd7c:	210e      	movs	r1, #14
9001bd7e:	6812      	ldr	r2, [r2, #0]
9001bd80:	e7f0      	b.n	9001bd64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001bd82:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bd86:	4293      	cmp	r3, r2
9001bd88:	d108      	bne.n	9001bd9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001bd8a:	4b09      	ldr	r3, [pc, #36]	@ (9001bdb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001bd8c:	781b      	ldrb	r3, [r3, #0]
9001bd8e:	b91b      	cbnz	r3, 9001bd98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001bd90:	4b08      	ldr	r3, [pc, #32]	@ (9001bdb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001bd92:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bd96:	4770      	bx	lr
9001bd98:	4b07      	ldr	r3, [pc, #28]	@ (9001bdb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001bd9a:	e7fa      	b.n	9001bd92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001bd9c:	2000      	movs	r0, #0
9001bd9e:	4770      	bx	lr
9001bda0:	24021954 	.word	0x24021954
9001bda4:	2402195c 	.word	0x2402195c
9001bda8:	24021958 	.word	0x24021958
9001bdac:	2402193c 	.word	0x2402193c
9001bdb0:	240218c4 	.word	0x240218c4
9001bdb4:	240218c6 	.word	0x240218c6
9001bdb8:	240218c8 	.word	0x240218c8

9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001bdbc:	4a12      	ldr	r2, [pc, #72]	@ (9001be08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001bdbe:	8803      	ldrh	r3, [r0, #0]
9001bdc0:	8812      	ldrh	r2, [r2, #0]
9001bdc2:	4293      	cmp	r3, r2
9001bdc4:	d207      	bcs.n	9001bdd6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001bdc6:	4a11      	ldr	r2, [pc, #68]	@ (9001be0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001bdc8:	2114      	movs	r1, #20
9001bdca:	6812      	ldr	r2, [r2, #0]
9001bdcc:	fb01 2303 	mla	r3, r1, r3, r2
9001bdd0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001bdd4:	4770      	bx	lr
9001bdd6:	490e      	ldr	r1, [pc, #56]	@ (9001be10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001bdd8:	8809      	ldrh	r1, [r1, #0]
9001bdda:	4411      	add	r1, r2
9001bddc:	428b      	cmp	r3, r1
9001bdde:	da04      	bge.n	9001bdea <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001bde0:	1a9b      	subs	r3, r3, r2
9001bde2:	4a0c      	ldr	r2, [pc, #48]	@ (9001be14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001bde4:	210e      	movs	r1, #14
9001bde6:	6812      	ldr	r2, [r2, #0]
9001bde8:	e7f0      	b.n	9001bdcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001bdea:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bdee:	4293      	cmp	r3, r2
9001bdf0:	d108      	bne.n	9001be04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001bdf2:	4b09      	ldr	r3, [pc, #36]	@ (9001be18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001bdf4:	781b      	ldrb	r3, [r3, #0]
9001bdf6:	b91b      	cbnz	r3, 9001be00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001bdf8:	4b08      	ldr	r3, [pc, #32]	@ (9001be1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001bdfa:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bdfe:	4770      	bx	lr
9001be00:	4b07      	ldr	r3, [pc, #28]	@ (9001be20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001be02:	e7fa      	b.n	9001bdfa <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001be04:	2000      	movs	r0, #0
9001be06:	4770      	bx	lr
9001be08:	24021954 	.word	0x24021954
9001be0c:	2402195c 	.word	0x2402195c
9001be10:	24021958 	.word	0x24021958
9001be14:	2402193c 	.word	0x2402193c
9001be18:	240218c4 	.word	0x240218c4
9001be1c:	240218c8 	.word	0x240218c8
9001be20:	240218c6 	.word	0x240218c6

9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001be24:	4a22      	ldr	r2, [pc, #136]	@ (9001beb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001be26:	b530      	push	{r4, r5, lr}
9001be28:	880b      	ldrh	r3, [r1, #0]
9001be2a:	8812      	ldrh	r2, [r2, #0]
9001be2c:	4293      	cmp	r3, r2
9001be2e:	d213      	bcs.n	9001be58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001be30:	4a20      	ldr	r2, [pc, #128]	@ (9001beb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001be32:	2114      	movs	r1, #20
9001be34:	6812      	ldr	r2, [r2, #0]
9001be36:	fb01 2303 	mla	r3, r1, r3, r2
9001be3a:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001be3e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001be42:	8a1a      	ldrh	r2, [r3, #16]
9001be44:	8a5b      	ldrh	r3, [r3, #18]
9001be46:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001be4a:	8004      	strh	r4, [r0, #0]
9001be4c:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001be50:	8041      	strh	r1, [r0, #2]
9001be52:	8082      	strh	r2, [r0, #4]
9001be54:	80c3      	strh	r3, [r0, #6]
9001be56:	e024      	b.n	9001bea2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001be58:	4917      	ldr	r1, [pc, #92]	@ (9001beb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001be5a:	8809      	ldrh	r1, [r1, #0]
9001be5c:	4411      	add	r1, r2
9001be5e:	428b      	cmp	r3, r1
9001be60:	da10      	bge.n	9001be84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001be62:	1a9b      	subs	r3, r3, r2
9001be64:	220e      	movs	r2, #14
9001be66:	4353      	muls	r3, r2
9001be68:	4a14      	ldr	r2, [pc, #80]	@ (9001bebc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001be6a:	6811      	ldr	r1, [r2, #0]
9001be6c:	18ca      	adds	r2, r1, r3
9001be6e:	5ecd      	ldrsh	r5, [r1, r3]
9001be70:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001be74:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001be78:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001be7c:	8005      	strh	r5, [r0, #0]
9001be7e:	8044      	strh	r4, [r0, #2]
9001be80:	8081      	strh	r1, [r0, #4]
9001be82:	e7e7      	b.n	9001be54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001be84:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001be88:	4293      	cmp	r3, r2
9001be8a:	d10b      	bne.n	9001bea4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001be8c:	4b0c      	ldr	r3, [pc, #48]	@ (9001bec0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001be8e:	f9b3 1000 	ldrsh.w	r1, [r3]
9001be92:	4b0c      	ldr	r3, [pc, #48]	@ (9001bec4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001be94:	8081      	strh	r1, [r0, #4]
9001be96:	f9b3 2000 	ldrsh.w	r2, [r3]
9001be9a:	2300      	movs	r3, #0
9001be9c:	80c2      	strh	r2, [r0, #6]
9001be9e:	8003      	strh	r3, [r0, #0]
9001bea0:	8043      	strh	r3, [r0, #2]
9001bea2:	bd30      	pop	{r4, r5, pc}
9001bea4:	2300      	movs	r3, #0
9001bea6:	8003      	strh	r3, [r0, #0]
9001bea8:	8043      	strh	r3, [r0, #2]
9001beaa:	8083      	strh	r3, [r0, #4]
9001beac:	e7d2      	b.n	9001be54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001beae:	bf00      	nop
9001beb0:	24021954 	.word	0x24021954
9001beb4:	2402195c 	.word	0x2402195c
9001beb8:	24021958 	.word	0x24021958
9001bebc:	2402193c 	.word	0x2402193c
9001bec0:	240218c0 	.word	0x240218c0
9001bec4:	240218c2 	.word	0x240218c2

9001bec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001bec8:	4a17      	ldr	r2, [pc, #92]	@ (9001bf28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001beca:	8803      	ldrh	r3, [r0, #0]
9001becc:	8812      	ldrh	r2, [r2, #0]
9001bece:	4293      	cmp	r3, r2
9001bed0:	d213      	bcs.n	9001befa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001bed2:	4a16      	ldr	r2, [pc, #88]	@ (9001bf2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001bed4:	2114      	movs	r1, #20
9001bed6:	6812      	ldr	r2, [r2, #0]
9001bed8:	fb01 2303 	mla	r3, r1, r3, r2
9001bedc:	8a1a      	ldrh	r2, [r3, #16]
9001bede:	8919      	ldrh	r1, [r3, #8]
9001bee0:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001bee4:	428a      	cmp	r2, r1
9001bee6:	db1d      	blt.n	9001bf24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001bee8:	8a58      	ldrh	r0, [r3, #18]
9001beea:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001beee:	895b      	ldrh	r3, [r3, #10]
9001bef0:	4298      	cmp	r0, r3
9001bef2:	bfac      	ite	ge
9001bef4:	2000      	movge	r0, #0
9001bef6:	2001      	movlt	r0, #1
9001bef8:	4770      	bx	lr
9001befa:	490d      	ldr	r1, [pc, #52]	@ (9001bf30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001befc:	8809      	ldrh	r1, [r1, #0]
9001befe:	4411      	add	r1, r2
9001bf00:	428b      	cmp	r3, r1
9001bf02:	da0d      	bge.n	9001bf20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001bf04:	1a9b      	subs	r3, r3, r2
9001bf06:	4a0b      	ldr	r2, [pc, #44]	@ (9001bf34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001bf08:	210e      	movs	r1, #14
9001bf0a:	6812      	ldr	r2, [r2, #0]
9001bf0c:	fb01 2303 	mla	r3, r1, r3, r2
9001bf10:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001bf14:	891a      	ldrh	r2, [r3, #8]
9001bf16:	4291      	cmp	r1, r2
9001bf18:	db04      	blt.n	9001bf24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001bf1a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001bf1e:	e7e6      	b.n	9001beee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001bf20:	2000      	movs	r0, #0
9001bf22:	4770      	bx	lr
9001bf24:	2001      	movs	r0, #1
9001bf26:	4770      	bx	lr
9001bf28:	24021954 	.word	0x24021954
9001bf2c:	2402195c 	.word	0x2402195c
9001bf30:	24021958 	.word	0x24021958
9001bf34:	2402193c 	.word	0x2402193c

9001bf38 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001bf38:	4a12      	ldr	r2, [pc, #72]	@ (9001bf84 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001bf3a:	8803      	ldrh	r3, [r0, #0]
9001bf3c:	8811      	ldrh	r1, [r2, #0]
9001bf3e:	428b      	cmp	r3, r1
9001bf40:	d20b      	bcs.n	9001bf5a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001bf42:	4a11      	ldr	r2, [pc, #68]	@ (9001bf88 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001bf44:	6812      	ldr	r2, [r2, #0]
9001bf46:	b112      	cbz	r2, 9001bf4e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001bf48:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001bf4c:	b9c0      	cbnz	r0, 9001bf80 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001bf4e:	4a0f      	ldr	r2, [pc, #60]	@ (9001bf8c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001bf50:	6811      	ldr	r1, [r2, #0]
9001bf52:	2214      	movs	r2, #20
9001bf54:	4353      	muls	r3, r2
9001bf56:	58c8      	ldr	r0, [r1, r3]
9001bf58:	4770      	bx	lr
9001bf5a:	4a0d      	ldr	r2, [pc, #52]	@ (9001bf90 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001bf5c:	8812      	ldrh	r2, [r2, #0]
9001bf5e:	440a      	add	r2, r1
9001bf60:	4293      	cmp	r3, r2
9001bf62:	da04      	bge.n	9001bf6e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001bf64:	4a08      	ldr	r2, [pc, #32]	@ (9001bf88 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001bf66:	6812      	ldr	r2, [r2, #0]
9001bf68:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001bf6c:	4770      	bx	lr
9001bf6e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001bf72:	4293      	cmp	r3, r2
9001bf74:	d103      	bne.n	9001bf7e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001bf76:	4b07      	ldr	r3, [pc, #28]	@ (9001bf94 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001bf78:	681b      	ldr	r3, [r3, #0]
9001bf7a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001bf7c:	4770      	bx	lr
9001bf7e:	2000      	movs	r0, #0
9001bf80:	4770      	bx	lr
9001bf82:	bf00      	nop
9001bf84:	24021954 	.word	0x24021954
9001bf88:	24021938 	.word	0x24021938
9001bf8c:	2402195c 	.word	0x2402195c
9001bf90:	24021958 	.word	0x24021958
9001bf94:	240218cc 	.word	0x240218cc

9001bf98 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001bf98:	4b24      	ldr	r3, [pc, #144]	@ (9001c02c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001bf9a:	8802      	ldrh	r2, [r0, #0]
9001bf9c:	8818      	ldrh	r0, [r3, #0]
9001bf9e:	4282      	cmp	r2, r0
9001bfa0:	d221      	bcs.n	9001bfe6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001bfa2:	4b23      	ldr	r3, [pc, #140]	@ (9001c030 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001bfa4:	6819      	ldr	r1, [r3, #0]
9001bfa6:	2314      	movs	r3, #20
9001bfa8:	fb03 1302 	mla	r3, r3, r2, r1
9001bfac:	6858      	ldr	r0, [r3, #4]
9001bfae:	2800      	cmp	r0, #0
9001bfb0:	d03a      	beq.n	9001c028 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001bfb2:	4920      	ldr	r1, [pc, #128]	@ (9001c034 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001bfb4:	6809      	ldr	r1, [r1, #0]
9001bfb6:	2900      	cmp	r1, #0
9001bfb8:	d036      	beq.n	9001c028 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001bfba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001bfbe:	2900      	cmp	r1, #0
9001bfc0:	d032      	beq.n	9001c028 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001bfc2:	891a      	ldrh	r2, [r3, #8]
9001bfc4:	8958      	ldrh	r0, [r3, #10]
9001bfc6:	4350      	muls	r0, r2
9001bfc8:	7c5a      	ldrb	r2, [r3, #17]
9001bfca:	7cdb      	ldrb	r3, [r3, #19]
9001bfcc:	0952      	lsrs	r2, r2, #5
9001bfce:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001bfd2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001bfd6:	2b0b      	cmp	r3, #11
9001bfd8:	bf18      	it	ne
9001bfda:	0040      	lslne	r0, r0, #1
9001bfdc:	3003      	adds	r0, #3
9001bfde:	f020 0003 	bic.w	r0, r0, #3
9001bfe2:	4408      	add	r0, r1
9001bfe4:	4770      	bx	lr
9001bfe6:	4b14      	ldr	r3, [pc, #80]	@ (9001c038 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001bfe8:	881b      	ldrh	r3, [r3, #0]
9001bfea:	4403      	add	r3, r0
9001bfec:	429a      	cmp	r2, r3
9001bfee:	da1a      	bge.n	9001c026 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001bff0:	4b12      	ldr	r3, [pc, #72]	@ (9001c03c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001bff2:	1a10      	subs	r0, r2, r0
9001bff4:	210e      	movs	r1, #14
9001bff6:	681b      	ldr	r3, [r3, #0]
9001bff8:	fb01 3000 	mla	r0, r1, r0, r3
9001bffc:	7b03      	ldrb	r3, [r0, #12]
9001bffe:	f003 031f 	and.w	r3, r3, #31
9001c002:	2b0b      	cmp	r3, #11
9001c004:	d10b      	bne.n	9001c01e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001c006:	8903      	ldrh	r3, [r0, #8]
9001c008:	8940      	ldrh	r0, [r0, #10]
9001c00a:	4358      	muls	r0, r3
9001c00c:	4b09      	ldr	r3, [pc, #36]	@ (9001c034 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001c00e:	3003      	adds	r0, #3
9001c010:	6819      	ldr	r1, [r3, #0]
9001c012:	f020 0303 	bic.w	r3, r0, #3
9001c016:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001c01a:	4418      	add	r0, r3
9001c01c:	4770      	bx	lr
9001c01e:	2b0d      	cmp	r3, #13
9001c020:	d101      	bne.n	9001c026 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001c022:	300d      	adds	r0, #13
9001c024:	4770      	bx	lr
9001c026:	2000      	movs	r0, #0
9001c028:	4770      	bx	lr
9001c02a:	bf00      	nop
9001c02c:	24021954 	.word	0x24021954
9001c030:	2402195c 	.word	0x2402195c
9001c034:	24021938 	.word	0x24021938
9001c038:	24021958 	.word	0x24021958
9001c03c:	2402193c 	.word	0x2402193c

9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001c040:	4b1f      	ldr	r3, [pc, #124]	@ (9001c0c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001c042:	b510      	push	{r4, lr}
9001c044:	8802      	ldrh	r2, [r0, #0]
9001c046:	881b      	ldrh	r3, [r3, #0]
9001c048:	429a      	cmp	r2, r3
9001c04a:	d21a      	bcs.n	9001c082 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001c04c:	4b1d      	ldr	r3, [pc, #116]	@ (9001c0c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001c04e:	2114      	movs	r1, #20
9001c050:	681b      	ldr	r3, [r3, #0]
9001c052:	fb01 3102 	mla	r1, r1, r2, r3
9001c056:	7c4b      	ldrb	r3, [r1, #17]
9001c058:	0958      	lsrs	r0, r3, #5
9001c05a:	7ccb      	ldrb	r3, [r1, #19]
9001c05c:	491a      	ldr	r1, [pc, #104]	@ (9001c0c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001c05e:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001c062:	6809      	ldr	r1, [r1, #0]
9001c064:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001c068:	b2d8      	uxtb	r0, r3
9001c06a:	b149      	cbz	r1, 9001c080 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001c06c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001c070:	b132      	cbz	r2, 9001c080 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001c072:	2b0e      	cmp	r3, #14
9001c074:	d021      	beq.n	9001c0ba <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001c076:	280f      	cmp	r0, #15
9001c078:	d01d      	beq.n	9001c0b6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001c07a:	2810      	cmp	r0, #16
9001c07c:	bf08      	it	eq
9001c07e:	2002      	moveq	r0, #2
9001c080:	bd10      	pop	{r4, pc}
9001c082:	4912      	ldr	r1, [pc, #72]	@ (9001c0cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001c084:	8809      	ldrh	r1, [r1, #0]
9001c086:	4419      	add	r1, r3
9001c088:	428a      	cmp	r2, r1
9001c08a:	da09      	bge.n	9001c0a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001c08c:	1ad3      	subs	r3, r2, r3
9001c08e:	4a10      	ldr	r2, [pc, #64]	@ (9001c0d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001c090:	210e      	movs	r1, #14
9001c092:	6812      	ldr	r2, [r2, #0]
9001c094:	fb01 2303 	mla	r3, r1, r3, r2
9001c098:	7b18      	ldrb	r0, [r3, #12]
9001c09a:	f000 001f 	and.w	r0, r0, #31
9001c09e:	e7ef      	b.n	9001c080 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001c0a0:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001c0a4:	429a      	cmp	r2, r3
9001c0a6:	d108      	bne.n	9001c0ba <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001c0a8:	f7f6 fa06 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
9001c0ac:	6803      	ldr	r3, [r0, #0]
9001c0ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001c0b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c0b4:	4718      	bx	r3
9001c0b6:	2001      	movs	r0, #1
9001c0b8:	e7e2      	b.n	9001c080 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001c0ba:	2000      	movs	r0, #0
9001c0bc:	e7e0      	b.n	9001c080 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001c0be:	bf00      	nop
9001c0c0:	24021954 	.word	0x24021954
9001c0c4:	2402195c 	.word	0x2402195c
9001c0c8:	24021938 	.word	0x24021938
9001c0cc:	24021958 	.word	0x24021958
9001c0d0:	2402193c 	.word	0x2402193c

9001c0d4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001c0d4:	2010      	movs	r0, #16
9001c0d6:	4770      	bx	lr

9001c0d8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001c0d8:	4b02      	ldr	r3, [pc, #8]	@ (9001c0e4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001c0da:	8818      	ldrh	r0, [r3, #0]
9001c0dc:	0040      	lsls	r0, r0, #1
9001c0de:	b280      	uxth	r0, r0
9001c0e0:	4770      	bx	lr
9001c0e2:	bf00      	nop
9001c0e4:	240218c6 	.word	0x240218c6

9001c0e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001c0e8:	2bff      	cmp	r3, #255	@ 0xff
9001c0ea:	d05e      	beq.n	9001c1aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001c0ec:	2a0b      	cmp	r2, #11
9001c0ee:	d058      	beq.n	9001c1a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001c0f0:	d80e      	bhi.n	9001c110 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001c0f2:	2a03      	cmp	r2, #3
9001c0f4:	d04d      	beq.n	9001c192 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001c0f6:	d804      	bhi.n	9001c102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001c0f8:	2a01      	cmp	r2, #1
9001c0fa:	d04c      	beq.n	9001c196 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001c0fc:	d94d      	bls.n	9001c19a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001c0fe:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001c100:	e031      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c102:	2a09      	cmp	r2, #9
9001c104:	d04d      	beq.n	9001c1a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001c106:	d84a      	bhi.n	9001c19e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001c108:	2a08      	cmp	r2, #8
9001c10a:	d048      	beq.n	9001c19e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001c10c:	2300      	movs	r3, #0
9001c10e:	e02a      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c110:	2a2f      	cmp	r2, #47	@ 0x2f
9001c112:	d02c      	beq.n	9001c16e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001c114:	d811      	bhi.n	9001c13a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001c116:	2a2d      	cmp	r2, #45	@ 0x2d
9001c118:	d018      	beq.n	9001c14c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001c11a:	d831      	bhi.n	9001c180 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001c11c:	2a2c      	cmp	r2, #44	@ 0x2c
9001c11e:	d1f5      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c120:	684a      	ldr	r2, [r1, #4]
9001c122:	7813      	ldrb	r3, [r2, #0]
9001c124:	7852      	ldrb	r2, [r2, #1]
9001c126:	2a00      	cmp	r2, #0
9001c128:	d1f0      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c12a:	2b01      	cmp	r3, #1
9001c12c:	d01d      	beq.n	9001c16a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001c12e:	2b00      	cmp	r3, #0
9001c130:	d02d      	beq.n	9001c18e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001c132:	2b02      	cmp	r3, #2
9001c134:	d1ea      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c136:	68c3      	ldr	r3, [r0, #12]
9001c138:	e015      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c13a:	2a31      	cmp	r2, #49	@ 0x31
9001c13c:	d004      	beq.n	9001c148 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001c13e:	d332      	bcc.n	9001c1a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001c140:	2a32      	cmp	r2, #50	@ 0x32
9001c142:	d030      	beq.n	9001c1a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001c144:	2a33      	cmp	r2, #51	@ 0x33
9001c146:	d1e1      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c148:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001c14a:	e00c      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c14c:	684a      	ldr	r2, [r1, #4]
9001c14e:	7813      	ldrb	r3, [r2, #0]
9001c150:	7852      	ldrb	r2, [r2, #1]
9001c152:	2a00      	cmp	r2, #0
9001c154:	d1da      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c156:	2b01      	cmp	r3, #1
9001c158:	d004      	beq.n	9001c164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001c15a:	d30f      	bcc.n	9001c17c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001c15c:	2b02      	cmp	r3, #2
9001c15e:	d1d5      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c160:	6943      	ldr	r3, [r0, #20]
9001c162:	e000      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c164:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001c166:	4618      	mov	r0, r3
9001c168:	4770      	bx	lr
9001c16a:	69c3      	ldr	r3, [r0, #28]
9001c16c:	e7fb      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c16e:	684b      	ldr	r3, [r1, #4]
9001c170:	781a      	ldrb	r2, [r3, #0]
9001c172:	785b      	ldrb	r3, [r3, #1]
9001c174:	2b00      	cmp	r3, #0
9001c176:	d1c9      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c178:	2a00      	cmp	r2, #0
9001c17a:	d1f4      	bne.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c17c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001c17e:	e7f2      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c180:	684b      	ldr	r3, [r1, #4]
9001c182:	781a      	ldrb	r2, [r3, #0]
9001c184:	785b      	ldrb	r3, [r3, #1]
9001c186:	2b00      	cmp	r3, #0
9001c188:	d1c0      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c18a:	2a00      	cmp	r2, #0
9001c18c:	d1eb      	bne.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c18e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001c190:	e7e9      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c192:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001c194:	e7e7      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c196:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001c198:	e7e5      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c19a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001c19c:	e7e3      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c19e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001c1a0:	e7e1      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1a2:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001c1a4:	e7df      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1a6:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001c1a8:	e7dd      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1aa:	2a0b      	cmp	r2, #11
9001c1ac:	d059      	beq.n	9001c262 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001c1ae:	d80e      	bhi.n	9001c1ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001c1b0:	2a03      	cmp	r2, #3
9001c1b2:	d050      	beq.n	9001c256 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001c1b4:	d804      	bhi.n	9001c1c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001c1b6:	2a01      	cmp	r2, #1
9001c1b8:	d04f      	beq.n	9001c25a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001c1ba:	d950      	bls.n	9001c25e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001c1bc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001c1be:	e7d2      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1c0:	2a09      	cmp	r2, #9
9001c1c2:	d04e      	beq.n	9001c262 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001c1c4:	d801      	bhi.n	9001c1ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001c1c6:	2a08      	cmp	r2, #8
9001c1c8:	d1a0      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c1ca:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001c1cc:	e7cb      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1ce:	2a2f      	cmp	r2, #47	@ 0x2f
9001c1d0:	d02d      	beq.n	9001c22e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001c1d2:	d811      	bhi.n	9001c1f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001c1d4:	2a2d      	cmp	r2, #45	@ 0x2d
9001c1d6:	d018      	beq.n	9001c20a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001c1d8:	d833      	bhi.n	9001c242 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001c1da:	2a2c      	cmp	r2, #44	@ 0x2c
9001c1dc:	d196      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c1de:	684a      	ldr	r2, [r1, #4]
9001c1e0:	7813      	ldrb	r3, [r2, #0]
9001c1e2:	7852      	ldrb	r2, [r2, #1]
9001c1e4:	2a00      	cmp	r2, #0
9001c1e6:	d191      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c1e8:	2b01      	cmp	r3, #1
9001c1ea:	d01e      	beq.n	9001c22a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001c1ec:	2b00      	cmp	r3, #0
9001c1ee:	d030      	beq.n	9001c252 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001c1f0:	2b02      	cmp	r3, #2
9001c1f2:	d18b      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c1f4:	6903      	ldr	r3, [r0, #16]
9001c1f6:	e7b6      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c1f8:	2a31      	cmp	r2, #49	@ 0x31
9001c1fa:	d004      	beq.n	9001c206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001c1fc:	d333      	bcc.n	9001c266 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001c1fe:	2a32      	cmp	r2, #50	@ 0x32
9001c200:	d031      	beq.n	9001c266 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001c202:	2a33      	cmp	r2, #51	@ 0x33
9001c204:	d182      	bne.n	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c206:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001c208:	e7ad      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c20a:	684a      	ldr	r2, [r1, #4]
9001c20c:	7813      	ldrb	r3, [r2, #0]
9001c20e:	7852      	ldrb	r2, [r2, #1]
9001c210:	2a00      	cmp	r2, #0
9001c212:	f47f af7b 	bne.w	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c216:	2b01      	cmp	r3, #1
9001c218:	d005      	beq.n	9001c226 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001c21a:	d310      	bcc.n	9001c23e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001c21c:	2b02      	cmp	r3, #2
9001c21e:	f47f af75 	bne.w	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c222:	6983      	ldr	r3, [r0, #24]
9001c224:	e79f      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c226:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001c228:	e79d      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c22a:	6a03      	ldr	r3, [r0, #32]
9001c22c:	e79b      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c22e:	684b      	ldr	r3, [r1, #4]
9001c230:	781a      	ldrb	r2, [r3, #0]
9001c232:	785b      	ldrb	r3, [r3, #1]
9001c234:	2b00      	cmp	r3, #0
9001c236:	f47f af69 	bne.w	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c23a:	2a00      	cmp	r2, #0
9001c23c:	d193      	bne.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c23e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001c240:	e791      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c242:	684b      	ldr	r3, [r1, #4]
9001c244:	781a      	ldrb	r2, [r3, #0]
9001c246:	785b      	ldrb	r3, [r3, #1]
9001c248:	2b00      	cmp	r3, #0
9001c24a:	f47f af5f 	bne.w	9001c10c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c24e:	2a00      	cmp	r2, #0
9001c250:	d189      	bne.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c252:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001c254:	e787      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c256:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001c258:	e785      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c25a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001c25c:	e783      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c25e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001c260:	e781      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c262:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001c264:	e77f      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001c266:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001c268:	e77d      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001c26a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c26a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c26e:	b087      	sub	sp, #28
9001c270:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c272:	9205      	str	r2, [sp, #20]
9001c274:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c278:	9101      	str	r1, [sp, #4]
9001c27a:	9202      	str	r2, [sp, #8]
9001c27c:	6841      	ldr	r1, [r0, #4]
9001c27e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001c282:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c286:	fb01 2404 	mla	r4, r1, r4, r2
9001c28a:	6802      	ldr	r2, [r0, #0]
9001c28c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c290:	f8de 2000 	ldr.w	r2, [lr]
9001c294:	9203      	str	r2, [sp, #12]
9001c296:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c29a:	3204      	adds	r2, #4
9001c29c:	9204      	str	r2, [sp, #16]
9001c29e:	9a02      	ldr	r2, [sp, #8]
9001c2a0:	43d6      	mvns	r6, r2
9001c2a2:	b2f6      	uxtb	r6, r6
9001c2a4:	9a01      	ldr	r2, [sp, #4]
9001c2a6:	2a00      	cmp	r2, #0
9001c2a8:	dc03      	bgt.n	9001c2b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c2aa:	9a05      	ldr	r2, [sp, #20]
9001c2ac:	2a00      	cmp	r2, #0
9001c2ae:	f340 8129 	ble.w	9001c504 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c2b2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c2b4:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c2b8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c2bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c2be:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c2c2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c2c6:	2b00      	cmp	r3, #0
9001c2c8:	dd0e      	ble.n	9001c2e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c2ca:	1408      	asrs	r0, r1, #16
9001c2cc:	d405      	bmi.n	9001c2da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c2ce:	4560      	cmp	r0, ip
9001c2d0:	da03      	bge.n	9001c2da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c2d2:	1410      	asrs	r0, r2, #16
9001c2d4:	d401      	bmi.n	9001c2da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c2d6:	42b8      	cmp	r0, r7
9001c2d8:	db07      	blt.n	9001c2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c2da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c2dc:	3b01      	subs	r3, #1
9001c2de:	3402      	adds	r4, #2
9001c2e0:	4401      	add	r1, r0
9001c2e2:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c2e4:	4402      	add	r2, r0
9001c2e6:	e7ee      	b.n	9001c2c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c2e8:	d071      	beq.n	9001c3ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c2ea:	1e58      	subs	r0, r3, #1
9001c2ec:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c2ee:	fb05 1500 	mla	r5, r5, r0, r1
9001c2f2:	142d      	asrs	r5, r5, #16
9001c2f4:	d45f      	bmi.n	9001c3b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c2f6:	4565      	cmp	r5, ip
9001c2f8:	da5d      	bge.n	9001c3b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c2fa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c2fc:	fb05 2000 	mla	r0, r5, r0, r2
9001c300:	1400      	asrs	r0, r0, #16
9001c302:	d458      	bmi.n	9001c3b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c304:	42b8      	cmp	r0, r7
9001c306:	da56      	bge.n	9001c3b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c308:	4699      	mov	r9, r3
9001c30a:	46a2      	mov	sl, r4
9001c30c:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001c310:	f1b9 0f00 	cmp.w	r9, #0
9001c314:	dd57      	ble.n	9001c3c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001c316:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001c31a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c31e:	9803      	ldr	r0, [sp, #12]
9001c320:	140d      	asrs	r5, r1, #16
9001c322:	f109 39ff 	add.w	r9, r9, #4294967295
9001c326:	fb07 000c 	mla	r0, r7, ip, r0
9001c32a:	5d40      	ldrb	r0, [r0, r5]
9001c32c:	9d04      	ldr	r5, [sp, #16]
9001c32e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c332:	f8ba 5000 	ldrh.w	r5, [sl]
9001c336:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c33a:	122f      	asrs	r7, r5, #8
9001c33c:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c340:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c344:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c348:	00ed      	lsls	r5, r5, #3
9001c34a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001c34e:	fb17 f706 	smulbb	r7, r7, r6
9001c352:	b2ed      	uxtb	r5, r5
9001c354:	fb18 f806 	smulbb	r8, r8, r6
9001c358:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c35c:	10c7      	asrs	r7, r0, #3
9001c35e:	fb15 f506 	smulbb	r5, r5, r6
9001c362:	00c0      	lsls	r0, r0, #3
9001c364:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c368:	fa1f fc8c 	uxth.w	ip, ip
9001c36c:	b2c0      	uxtb	r0, r0
9001c36e:	fb07 870b 	mla	r7, r7, fp, r8
9001c372:	fb00 500b 	mla	r0, r0, fp, r5
9001c376:	f10c 0501 	add.w	r5, ip, #1
9001c37a:	b2bf      	uxth	r7, r7
9001c37c:	b280      	uxth	r0, r0
9001c37e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c382:	f107 0801 	add.w	r8, r7, #1
9001c386:	1c45      	adds	r5, r0, #1
9001c388:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001c38c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c390:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c394:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c396:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c39a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c39e:	4401      	add	r1, r0
9001c3a0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001c3a4:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c3a6:	ea45 0c0c 	orr.w	ip, r5, ip
9001c3aa:	4402      	add	r2, r0
9001c3ac:	ea4c 0c08 	orr.w	ip, ip, r8
9001c3b0:	f82a cb02 	strh.w	ip, [sl], #2
9001c3b4:	e7ac      	b.n	9001c310 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c3b6:	f04f 0800 	mov.w	r8, #0
9001c3ba:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001c3be:	eb03 0008 	add.w	r0, r3, r8
9001c3c2:	2800      	cmp	r0, #0
9001c3c4:	dc41      	bgt.n	9001c44a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001c3c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c3ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c3ce:	9b01      	ldr	r3, [sp, #4]
9001c3d0:	2b00      	cmp	r3, #0
9001c3d2:	f340 8097 	ble.w	9001c504 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c3d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c3da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c3dc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c3e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c3e4:	eef0 6a62 	vmov.f32	s13, s5
9001c3e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c3ec:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c3f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c3f4:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001c3f8:	eef0 6a43 	vmov.f32	s13, s6
9001c3fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c400:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001c404:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c408:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c40c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c410:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c414:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c418:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c41c:	ee12 2a90 	vmov	r2, s5
9001c420:	eef0 2a47 	vmov.f32	s5, s14
9001c424:	fb92 f3f3 	sdiv	r3, r2, r3
9001c428:	ee13 2a10 	vmov	r2, s6
9001c42c:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c42e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c430:	eeb0 3a67 	vmov.f32	s6, s15
9001c434:	fb92 f3f3 	sdiv	r3, r2, r3
9001c438:	9314      	str	r3, [sp, #80]	@ 0x50
9001c43a:	9b01      	ldr	r3, [sp, #4]
9001c43c:	9a05      	ldr	r2, [sp, #20]
9001c43e:	3b01      	subs	r3, #1
9001c440:	9301      	str	r3, [sp, #4]
9001c442:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c444:	bf08      	it	eq
9001c446:	4613      	moveq	r3, r2
9001c448:	e72c      	b.n	9001c2a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c44a:	140f      	asrs	r7, r1, #16
9001c44c:	d453      	bmi.n	9001c4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c44e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c452:	42bd      	cmp	r5, r7
9001c454:	dd4f      	ble.n	9001c4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c456:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c45a:	d44c      	bmi.n	9001c4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c45c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c460:	4560      	cmp	r0, ip
9001c462:	dd48      	ble.n	9001c4f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c464:	9803      	ldr	r0, [sp, #12]
9001c466:	b22d      	sxth	r5, r5
9001c468:	fb0c 0505 	mla	r5, ip, r5, r0
9001c46c:	5de8      	ldrb	r0, [r5, r7]
9001c46e:	9d04      	ldr	r5, [sp, #16]
9001c470:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c474:	f06f 0501 	mvn.w	r5, #1
9001c478:	fb05 fb08 	mul.w	fp, r5, r8
9001c47c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c480:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c484:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c488:	122f      	asrs	r7, r5, #8
9001c48a:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c48e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c492:	00ed      	lsls	r5, r5, #3
9001c494:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c498:	fb17 f706 	smulbb	r7, r7, r6
9001c49c:	b2ed      	uxtb	r5, r5
9001c49e:	fb19 f906 	smulbb	r9, r9, r6
9001c4a2:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c4a6:	10c7      	asrs	r7, r0, #3
9001c4a8:	fb15 f506 	smulbb	r5, r5, r6
9001c4ac:	00c0      	lsls	r0, r0, #3
9001c4ae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c4b2:	fa1f fc8c 	uxth.w	ip, ip
9001c4b6:	b2c0      	uxtb	r0, r0
9001c4b8:	fb07 970a 	mla	r7, r7, sl, r9
9001c4bc:	fb00 500a 	mla	r0, r0, sl, r5
9001c4c0:	f10c 0501 	add.w	r5, ip, #1
9001c4c4:	b2bf      	uxth	r7, r7
9001c4c6:	b280      	uxth	r0, r0
9001c4c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c4cc:	f107 0901 	add.w	r9, r7, #1
9001c4d0:	1c45      	adds	r5, r0, #1
9001c4d2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c4d6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c4da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c4de:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c4e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c4e6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c4ea:	ea45 0c0c 	orr.w	ip, r5, ip
9001c4ee:	ea4c 0c09 	orr.w	ip, ip, r9
9001c4f2:	f824 c00b 	strh.w	ip, [r4, fp]
9001c4f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c4f8:	f108 38ff 	add.w	r8, r8, #4294967295
9001c4fc:	4401      	add	r1, r0
9001c4fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c500:	4402      	add	r2, r0
9001c502:	e75c      	b.n	9001c3be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001c504:	b007      	add	sp, #28
9001c506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c50a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c50a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c50e:	b085      	sub	sp, #20
9001c510:	4693      	mov	fp, r2
9001c512:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c516:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c518:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c51a:	6870      	ldr	r0, [r6, #4]
9001c51c:	9100      	str	r1, [sp, #0]
9001c51e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c522:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001c526:	fb00 2404 	mla	r4, r0, r4, r2
9001c52a:	6832      	ldr	r2, [r6, #0]
9001c52c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c530:	682a      	ldr	r2, [r5, #0]
9001c532:	9201      	str	r2, [sp, #4]
9001c534:	686a      	ldr	r2, [r5, #4]
9001c536:	3204      	adds	r2, #4
9001c538:	9202      	str	r2, [sp, #8]
9001c53a:	9a00      	ldr	r2, [sp, #0]
9001c53c:	2a00      	cmp	r2, #0
9001c53e:	dc03      	bgt.n	9001c548 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c540:	f1bb 0f00 	cmp.w	fp, #0
9001c544:	f340 80a0 	ble.w	9001c688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c548:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c54a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c54e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c552:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c554:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c558:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c55c:	2b00      	cmp	r3, #0
9001c55e:	dd0c      	ble.n	9001c57a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c560:	1406      	asrs	r6, r0, #16
9001c562:	d405      	bmi.n	9001c570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c564:	454e      	cmp	r6, r9
9001c566:	da03      	bge.n	9001c570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c568:	1416      	asrs	r6, r2, #16
9001c56a:	d401      	bmi.n	9001c570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c56c:	4546      	cmp	r6, r8
9001c56e:	db05      	blt.n	9001c57c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c570:	4470      	add	r0, lr
9001c572:	4462      	add	r2, ip
9001c574:	3b01      	subs	r3, #1
9001c576:	3402      	adds	r4, #2
9001c578:	e7f0      	b.n	9001c55c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c57a:	d00f      	beq.n	9001c59c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c57c:	1e5e      	subs	r6, r3, #1
9001c57e:	fb0e 0706 	mla	r7, lr, r6, r0
9001c582:	143f      	asrs	r7, r7, #16
9001c584:	d541      	bpl.n	9001c60a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001c586:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c58a:	4698      	mov	r8, r3
9001c58c:	9603      	str	r6, [sp, #12]
9001c58e:	f1b8 0f00 	cmp.w	r8, #0
9001c592:	dc59      	bgt.n	9001c648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c594:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c598:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c59c:	9b00      	ldr	r3, [sp, #0]
9001c59e:	2b00      	cmp	r3, #0
9001c5a0:	dd72      	ble.n	9001c688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c5a2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c5a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c5a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c5ac:	eeb0 6a62 	vmov.f32	s12, s5
9001c5b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c5b4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c5b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c5bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c5c0:	eeb0 6a43 	vmov.f32	s12, s6
9001c5c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c5c8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c5cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c5d0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c5d4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c5d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c5dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c5e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c5e4:	ee12 2a90 	vmov	r2, s5
9001c5e8:	eef0 2a47 	vmov.f32	s5, s14
9001c5ec:	fb92 fef3 	sdiv	lr, r2, r3
9001c5f0:	ee13 2a10 	vmov	r2, s6
9001c5f4:	eeb0 3a67 	vmov.f32	s6, s15
9001c5f8:	fb92 fcf3 	sdiv	ip, r2, r3
9001c5fc:	9b00      	ldr	r3, [sp, #0]
9001c5fe:	3b01      	subs	r3, #1
9001c600:	9300      	str	r3, [sp, #0]
9001c602:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c604:	bf08      	it	eq
9001c606:	465b      	moveq	r3, fp
9001c608:	e797      	b.n	9001c53a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c60a:	454f      	cmp	r7, r9
9001c60c:	dabb      	bge.n	9001c586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c60e:	fb0c 2606 	mla	r6, ip, r6, r2
9001c612:	1436      	asrs	r6, r6, #16
9001c614:	d4b7      	bmi.n	9001c586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c616:	4546      	cmp	r6, r8
9001c618:	dab5      	bge.n	9001c586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c61a:	461e      	mov	r6, r3
9001c61c:	46a0      	mov	r8, r4
9001c61e:	2e00      	cmp	r6, #0
9001c620:	ddb8      	ble.n	9001c594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c622:	1417      	asrs	r7, r2, #16
9001c624:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c628:	9901      	ldr	r1, [sp, #4]
9001c62a:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c62e:	4462      	add	r2, ip
9001c630:	4470      	add	r0, lr
9001c632:	fb0a 1707 	mla	r7, sl, r7, r1
9001c636:	9902      	ldr	r1, [sp, #8]
9001c638:	3e01      	subs	r6, #1
9001c63a:	f817 7009 	ldrb.w	r7, [r7, r9]
9001c63e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c642:	f828 7b02 	strh.w	r7, [r8], #2
9001c646:	e7ea      	b.n	9001c61e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001c648:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c64c:	d417      	bmi.n	9001c67e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c64e:	68ae      	ldr	r6, [r5, #8]
9001c650:	454e      	cmp	r6, r9
9001c652:	dd14      	ble.n	9001c67e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c654:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c658:	d411      	bmi.n	9001c67e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c65a:	68ef      	ldr	r7, [r5, #12]
9001c65c:	4557      	cmp	r7, sl
9001c65e:	dd0e      	ble.n	9001c67e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c660:	9f01      	ldr	r7, [sp, #4]
9001c662:	b236      	sxth	r6, r6
9001c664:	f06f 0101 	mvn.w	r1, #1
9001c668:	fb0a 7606 	mla	r6, sl, r6, r7
9001c66c:	9f02      	ldr	r7, [sp, #8]
9001c66e:	f816 6009 	ldrb.w	r6, [r6, r9]
9001c672:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c676:	fb01 f608 	mul.w	r6, r1, r8
9001c67a:	9903      	ldr	r1, [sp, #12]
9001c67c:	538f      	strh	r7, [r1, r6]
9001c67e:	4470      	add	r0, lr
9001c680:	4462      	add	r2, ip
9001c682:	f108 38ff 	add.w	r8, r8, #4294967295
9001c686:	e782      	b.n	9001c58e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c688:	b005      	add	sp, #20
9001c68a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c68e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c68e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c692:	b087      	sub	sp, #28
9001c694:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001c696:	9205      	str	r2, [sp, #20]
9001c698:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c69c:	9102      	str	r1, [sp, #8]
9001c69e:	9203      	str	r2, [sp, #12]
9001c6a0:	6861      	ldr	r1, [r4, #4]
9001c6a2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001c6a6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001c6aa:	fb01 2000 	mla	r0, r1, r0, r2
9001c6ae:	6822      	ldr	r2, [r4, #0]
9001c6b0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001c6b4:	9200      	str	r2, [sp, #0]
9001c6b6:	f8dc 2000 	ldr.w	r2, [ip]
9001c6ba:	9204      	str	r2, [sp, #16]
9001c6bc:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c6c0:	3204      	adds	r2, #4
9001c6c2:	9201      	str	r2, [sp, #4]
9001c6c4:	9a03      	ldr	r2, [sp, #12]
9001c6c6:	43d5      	mvns	r5, r2
9001c6c8:	b2ed      	uxtb	r5, r5
9001c6ca:	9a02      	ldr	r2, [sp, #8]
9001c6cc:	2a00      	cmp	r2, #0
9001c6ce:	dc03      	bgt.n	9001c6d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c6d0:	9a05      	ldr	r2, [sp, #20]
9001c6d2:	2a00      	cmp	r2, #0
9001c6d4:	f340 812c 	ble.w	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c6d8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c6da:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001c6de:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c6e2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c6e4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001c6e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c6ec:	2b00      	cmp	r3, #0
9001c6ee:	dd10      	ble.n	9001c712 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c6f0:	140c      	asrs	r4, r1, #16
9001c6f2:	d405      	bmi.n	9001c700 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c6f4:	4574      	cmp	r4, lr
9001c6f6:	da03      	bge.n	9001c700 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c6f8:	1414      	asrs	r4, r2, #16
9001c6fa:	d401      	bmi.n	9001c700 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c6fc:	42bc      	cmp	r4, r7
9001c6fe:	db09      	blt.n	9001c714 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001c700:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c702:	3b01      	subs	r3, #1
9001c704:	9800      	ldr	r0, [sp, #0]
9001c706:	4421      	add	r1, r4
9001c708:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c70a:	3002      	adds	r0, #2
9001c70c:	4422      	add	r2, r4
9001c70e:	9000      	str	r0, [sp, #0]
9001c710:	e7ec      	b.n	9001c6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c712:	d071      	beq.n	9001c7f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001c714:	1e5c      	subs	r4, r3, #1
9001c716:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c718:	fb06 1604 	mla	r6, r6, r4, r1
9001c71c:	1436      	asrs	r6, r6, #16
9001c71e:	d45d      	bmi.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c720:	4576      	cmp	r6, lr
9001c722:	da5b      	bge.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c724:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001c726:	fb06 2404 	mla	r4, r6, r4, r2
9001c72a:	1424      	asrs	r4, r4, #16
9001c72c:	d456      	bmi.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c72e:	42bc      	cmp	r4, r7
9001c730:	da54      	bge.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c732:	4698      	mov	r8, r3
9001c734:	f8dd 9000 	ldr.w	r9, [sp]
9001c738:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001c73c:	f1b8 0f00 	cmp.w	r8, #0
9001c740:	dd54      	ble.n	9001c7ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c742:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c746:	1414      	asrs	r4, r2, #16
9001c748:	9804      	ldr	r0, [sp, #16]
9001c74a:	140e      	asrs	r6, r1, #16
9001c74c:	f108 38ff 	add.w	r8, r8, #4294967295
9001c750:	fb07 0404 	mla	r4, r7, r4, r0
9001c754:	9801      	ldr	r0, [sp, #4]
9001c756:	f814 e006 	ldrb.w	lr, [r4, r6]
9001c75a:	f8b9 4000 	ldrh.w	r4, [r9]
9001c75e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c762:	1227      	asrs	r7, r4, #8
9001c764:	eb00 0b0e 	add.w	fp, r0, lr
9001c768:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001c76c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c770:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c772:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c776:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c77a:	4401      	add	r1, r0
9001c77c:	fb16 f60a 	smulbb	r6, r6, sl
9001c780:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c782:	fb1b fb0a 	smulbb	fp, fp, sl
9001c786:	fb07 6705 	mla	r7, r7, r5, r6
9001c78a:	10e6      	asrs	r6, r4, #3
9001c78c:	00e4      	lsls	r4, r4, #3
9001c78e:	4402      	add	r2, r0
9001c790:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c794:	b2bf      	uxth	r7, r7
9001c796:	b2e4      	uxtb	r4, r4
9001c798:	fb06 b605 	mla	r6, r6, r5, fp
9001c79c:	fb14 f405 	smulbb	r4, r4, r5
9001c7a0:	b2b6      	uxth	r6, r6
9001c7a2:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001c7a6:	1c7c      	adds	r4, r7, #1
9001c7a8:	f106 0b01 	add.w	fp, r6, #1
9001c7ac:	fa1f fe8e 	uxth.w	lr, lr
9001c7b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c7b4:	f10e 0401 	add.w	r4, lr, #1
9001c7b8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c7bc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c7c0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001c7c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c7c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c7cc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001c7d0:	4327      	orrs	r7, r4
9001c7d2:	ea47 070b 	orr.w	r7, r7, fp
9001c7d6:	f829 7b02 	strh.w	r7, [r9], #2
9001c7da:	e7af      	b.n	9001c73c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001c7dc:	f04f 0e00 	mov.w	lr, #0
9001c7e0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001c7e4:	eb03 040e 	add.w	r4, r3, lr
9001c7e8:	2c00      	cmp	r4, #0
9001c7ea:	dc43      	bgt.n	9001c874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001c7ec:	9a00      	ldr	r2, [sp, #0]
9001c7ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c7f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c7f6:	9300      	str	r3, [sp, #0]
9001c7f8:	9b02      	ldr	r3, [sp, #8]
9001c7fa:	2b00      	cmp	r3, #0
9001c7fc:	f340 8098 	ble.w	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c800:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c804:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c806:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c80a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c80e:	eef0 6a62 	vmov.f32	s13, s5
9001c812:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c816:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c81a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c81e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001c822:	eef0 6a43 	vmov.f32	s13, s6
9001c826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c82a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001c82e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c832:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c836:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c83a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c83e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c842:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c846:	ee12 2a90 	vmov	r2, s5
9001c84a:	eef0 2a47 	vmov.f32	s5, s14
9001c84e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c852:	ee13 2a10 	vmov	r2, s6
9001c856:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c858:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c85a:	eeb0 3a67 	vmov.f32	s6, s15
9001c85e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c862:	9314      	str	r3, [sp, #80]	@ 0x50
9001c864:	9b02      	ldr	r3, [sp, #8]
9001c866:	9a05      	ldr	r2, [sp, #20]
9001c868:	3b01      	subs	r3, #1
9001c86a:	9302      	str	r3, [sp, #8]
9001c86c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c86e:	bf08      	it	eq
9001c870:	4613      	moveq	r3, r2
9001c872:	e72a      	b.n	9001c6ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c874:	140f      	asrs	r7, r1, #16
9001c876:	d454      	bmi.n	9001c922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c878:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001c87c:	42be      	cmp	r6, r7
9001c87e:	dd50      	ble.n	9001c922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c880:	ea5f 4822 	movs.w	r8, r2, asr #16
9001c884:	d44d      	bmi.n	9001c922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c886:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001c88a:	4544      	cmp	r4, r8
9001c88c:	dd49      	ble.n	9001c922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c88e:	9c04      	ldr	r4, [sp, #16]
9001c890:	b236      	sxth	r6, r6
9001c892:	f06f 0001 	mvn.w	r0, #1
9001c896:	fb08 4606 	mla	r6, r8, r6, r4
9001c89a:	9c01      	ldr	r4, [sp, #4]
9001c89c:	fb00 fa0e 	mul.w	sl, r0, lr
9001c8a0:	9800      	ldr	r0, [sp, #0]
9001c8a2:	f816 8007 	ldrb.w	r8, [r6, r7]
9001c8a6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001c8aa:	eb04 0b08 	add.w	fp, r4, r8
9001c8ae:	f830 400a 	ldrh.w	r4, [r0, sl]
9001c8b2:	9801      	ldr	r0, [sp, #4]
9001c8b4:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c8b8:	1227      	asrs	r7, r4, #8
9001c8ba:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c8be:	fb16 f609 	smulbb	r6, r6, r9
9001c8c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c8c6:	f810 8008 	ldrb.w	r8, [r0, r8]
9001c8ca:	fb1b fb09 	smulbb	fp, fp, r9
9001c8ce:	fb07 6705 	mla	r7, r7, r5, r6
9001c8d2:	10e6      	asrs	r6, r4, #3
9001c8d4:	00e4      	lsls	r4, r4, #3
9001c8d6:	9800      	ldr	r0, [sp, #0]
9001c8d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c8dc:	b2bf      	uxth	r7, r7
9001c8de:	b2e4      	uxtb	r4, r4
9001c8e0:	fb06 b605 	mla	r6, r6, r5, fp
9001c8e4:	fb14 f405 	smulbb	r4, r4, r5
9001c8e8:	b2b6      	uxth	r6, r6
9001c8ea:	fb08 4809 	mla	r8, r8, r9, r4
9001c8ee:	1c7c      	adds	r4, r7, #1
9001c8f0:	f106 0b01 	add.w	fp, r6, #1
9001c8f4:	fa1f f888 	uxth.w	r8, r8
9001c8f8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c8fc:	f108 0401 	add.w	r4, r8, #1
9001c900:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c904:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c908:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001c90c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c910:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c914:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001c918:	4327      	orrs	r7, r4
9001c91a:	ea47 070b 	orr.w	r7, r7, fp
9001c91e:	f820 700a 	strh.w	r7, [r0, sl]
9001c922:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c924:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c928:	4401      	add	r1, r0
9001c92a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001c92c:	4402      	add	r2, r0
9001c92e:	e759      	b.n	9001c7e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c930:	b007      	add	sp, #28
9001c932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c938 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c93c:	b085      	sub	sp, #20
9001c93e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c942:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c944:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c946:	9203      	str	r2, [sp, #12]
9001c948:	6870      	ldr	r0, [r6, #4]
9001c94a:	686f      	ldr	r7, [r5, #4]
9001c94c:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001c950:	3704      	adds	r7, #4
9001c952:	9101      	str	r1, [sp, #4]
9001c954:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c958:	fb00 2404 	mla	r4, r0, r4, r2
9001c95c:	6832      	ldr	r2, [r6, #0]
9001c95e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c962:	682a      	ldr	r2, [r5, #0]
9001c964:	9202      	str	r2, [sp, #8]
9001c966:	9a01      	ldr	r2, [sp, #4]
9001c968:	2a00      	cmp	r2, #0
9001c96a:	dc03      	bgt.n	9001c974 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c96c:	9a03      	ldr	r2, [sp, #12]
9001c96e:	2a00      	cmp	r2, #0
9001c970:	f340 80cc 	ble.w	9001cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c974:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c976:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c97a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c97e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c980:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c984:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c988:	2b00      	cmp	r3, #0
9001c98a:	dd0d      	ble.n	9001c9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c98c:	1406      	asrs	r6, r0, #16
9001c98e:	d405      	bmi.n	9001c99c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c990:	454e      	cmp	r6, r9
9001c992:	da03      	bge.n	9001c99c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c994:	1416      	asrs	r6, r2, #16
9001c996:	d401      	bmi.n	9001c99c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c998:	4546      	cmp	r6, r8
9001c99a:	db06      	blt.n	9001c9aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c99c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001c99e:	4460      	add	r0, ip
9001c9a0:	3b01      	subs	r3, #1
9001c9a2:	3402      	adds	r4, #2
9001c9a4:	4432      	add	r2, r6
9001c9a6:	e7ef      	b.n	9001c988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c9a8:	d00f      	beq.n	9001c9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c9aa:	1e5e      	subs	r6, r3, #1
9001c9ac:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c9b0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c9b4:	d543      	bpl.n	9001ca3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c9b6:	4698      	mov	r8, r3
9001c9b8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c9bc:	f1b8 0f00 	cmp.w	r8, #0
9001c9c0:	dc71      	bgt.n	9001caa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c9c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c9c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c9ca:	9b01      	ldr	r3, [sp, #4]
9001c9cc:	2b00      	cmp	r3, #0
9001c9ce:	f340 809d 	ble.w	9001cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c9d2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c9d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c9d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c9dc:	eeb0 6a62 	vmov.f32	s12, s5
9001c9e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c9e4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c9e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c9ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c9f0:	eeb0 6a43 	vmov.f32	s12, s6
9001c9f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c9f8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c9fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ca00:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ca04:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ca08:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ca0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ca10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ca14:	ee12 2a90 	vmov	r2, s5
9001ca18:	eef0 2a47 	vmov.f32	s5, s14
9001ca1c:	fb92 fcf3 	sdiv	ip, r2, r3
9001ca20:	ee13 2a10 	vmov	r2, s6
9001ca24:	eeb0 3a67 	vmov.f32	s6, s15
9001ca28:	fb92 f3f3 	sdiv	r3, r2, r3
9001ca2c:	9312      	str	r3, [sp, #72]	@ 0x48
9001ca2e:	9b01      	ldr	r3, [sp, #4]
9001ca30:	9a03      	ldr	r2, [sp, #12]
9001ca32:	3b01      	subs	r3, #1
9001ca34:	9301      	str	r3, [sp, #4]
9001ca36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ca38:	bf08      	it	eq
9001ca3a:	4613      	moveq	r3, r2
9001ca3c:	e793      	b.n	9001c966 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001ca3e:	45ce      	cmp	lr, r9
9001ca40:	dab9      	bge.n	9001c9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ca42:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001ca44:	fb01 2606 	mla	r6, r1, r6, r2
9001ca48:	1436      	asrs	r6, r6, #16
9001ca4a:	d4b4      	bmi.n	9001c9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ca4c:	4546      	cmp	r6, r8
9001ca4e:	dab2      	bge.n	9001c9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ca50:	4698      	mov	r8, r3
9001ca52:	46a2      	mov	sl, r4
9001ca54:	f1b8 0f00 	cmp.w	r8, #0
9001ca58:	ddb3      	ble.n	9001c9c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001ca5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001ca5e:	1416      	asrs	r6, r2, #16
9001ca60:	9902      	ldr	r1, [sp, #8]
9001ca62:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001ca66:	f108 38ff 	add.w	r8, r8, #4294967295
9001ca6a:	4460      	add	r0, ip
9001ca6c:	fb09 1606 	mla	r6, r9, r6, r1
9001ca70:	4928      	ldr	r1, [pc, #160]	@ (9001cb14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001ca72:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001ca76:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001ca7a:	eb07 0b0e 	add.w	fp, r7, lr
9001ca7e:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001ca82:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001ca86:	00f6      	lsls	r6, r6, #3
9001ca88:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001ca8c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001ca8e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ca92:	440a      	add	r2, r1
9001ca94:	ea49 0606 	orr.w	r6, r9, r6
9001ca98:	f817 900e 	ldrb.w	r9, [r7, lr]
9001ca9c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001caa0:	f82a 6b02 	strh.w	r6, [sl], #2
9001caa4:	e7d6      	b.n	9001ca54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001caa6:	ea5f 4920 	movs.w	r9, r0, asr #16
9001caaa:	d429      	bmi.n	9001cb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001caac:	68ae      	ldr	r6, [r5, #8]
9001caae:	454e      	cmp	r6, r9
9001cab0:	dd26      	ble.n	9001cb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001cab2:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001cab6:	d423      	bmi.n	9001cb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001cab8:	68e9      	ldr	r1, [r5, #12]
9001caba:	4559      	cmp	r1, fp
9001cabc:	dd20      	ble.n	9001cb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001cabe:	fa0f fe86 	sxth.w	lr, r6
9001cac2:	9902      	ldr	r1, [sp, #8]
9001cac4:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001cac8:	f06f 0101 	mvn.w	r1, #1
9001cacc:	f81e e009 	ldrb.w	lr, [lr, r9]
9001cad0:	fb01 f908 	mul.w	r9, r1, r8
9001cad4:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001cad8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001cadc:	eb07 060e 	add.w	r6, r7, lr
9001cae0:	f896 b002 	ldrb.w	fp, [r6, #2]
9001cae4:	7876      	ldrb	r6, [r6, #1]
9001cae6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001caea:	00f6      	lsls	r6, r6, #3
9001caec:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001caf0:	ea4b 0606 	orr.w	r6, fp, r6
9001caf4:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001caf8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001cafc:	f82a 6009 	strh.w	r6, [sl, r9]
9001cb00:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001cb02:	4460      	add	r0, ip
9001cb04:	f108 38ff 	add.w	r8, r8, #4294967295
9001cb08:	440a      	add	r2, r1
9001cb0a:	e757      	b.n	9001c9bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001cb0c:	b005      	add	sp, #20
9001cb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cb12:	bf00      	nop
9001cb14:	fffff800 	.word	0xfffff800

9001cb18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cb18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb1c:	b087      	sub	sp, #28
9001cb1e:	468b      	mov	fp, r1
9001cb20:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cb24:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001cb26:	9204      	str	r2, [sp, #16]
9001cb28:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cb2c:	6841      	ldr	r1, [r0, #4]
9001cb2e:	9205      	str	r2, [sp, #20]
9001cb30:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001cb34:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001cb38:	fb01 2404 	mla	r4, r1, r4, r2
9001cb3c:	6802      	ldr	r2, [r0, #0]
9001cb3e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cb42:	f8dc 2000 	ldr.w	r2, [ip]
9001cb46:	9201      	str	r2, [sp, #4]
9001cb48:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001cb4c:	3204      	adds	r2, #4
9001cb4e:	9202      	str	r2, [sp, #8]
9001cb50:	f1bb 0f00 	cmp.w	fp, #0
9001cb54:	dc03      	bgt.n	9001cb5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001cb56:	9a04      	ldr	r2, [sp, #16]
9001cb58:	2a00      	cmp	r2, #0
9001cb5a:	f340 8138 	ble.w	9001cdce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001cb5e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cb60:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001cb64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001cb68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cb6a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001cb6e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cb72:	2b00      	cmp	r3, #0
9001cb74:	dd0e      	ble.n	9001cb94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001cb76:	1402      	asrs	r2, r0, #16
9001cb78:	d405      	bmi.n	9001cb86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001cb7a:	42ba      	cmp	r2, r7
9001cb7c:	da03      	bge.n	9001cb86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001cb7e:	140a      	asrs	r2, r1, #16
9001cb80:	d401      	bmi.n	9001cb86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001cb82:	42b2      	cmp	r2, r6
9001cb84:	db07      	blt.n	9001cb96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001cb86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cb88:	3b01      	subs	r3, #1
9001cb8a:	3402      	adds	r4, #2
9001cb8c:	4410      	add	r0, r2
9001cb8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cb90:	4411      	add	r1, r2
9001cb92:	e7ee      	b.n	9001cb72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001cb94:	d019      	beq.n	9001cbca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001cb96:	1e5a      	subs	r2, r3, #1
9001cb98:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001cb9a:	fb05 0502 	mla	r5, r5, r2, r0
9001cb9e:	142d      	asrs	r5, r5, #16
9001cba0:	d409      	bmi.n	9001cbb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cba2:	42bd      	cmp	r5, r7
9001cba4:	da07      	bge.n	9001cbb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cba6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001cba8:	fb05 1202 	mla	r2, r5, r2, r1
9001cbac:	1412      	asrs	r2, r2, #16
9001cbae:	d402      	bmi.n	9001cbb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cbb0:	42b2      	cmp	r2, r6
9001cbb2:	f2c0 80ac 	blt.w	9001cd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001cbb6:	f04f 0e00 	mov.w	lr, #0
9001cbba:	eb03 020e 	add.w	r2, r3, lr
9001cbbe:	2a00      	cmp	r2, #0
9001cbc0:	dc3e      	bgt.n	9001cc40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001cbc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cbc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cbca:	f1bb 0f00 	cmp.w	fp, #0
9001cbce:	f340 80fe 	ble.w	9001cdce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001cbd2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cbd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cbd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cbdc:	f1bb 0b01 	subs.w	fp, fp, #1
9001cbe0:	eeb0 6a62 	vmov.f32	s12, s5
9001cbe4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cbe8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cbec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbf0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001cbf4:	eeb0 6a43 	vmov.f32	s12, s6
9001cbf8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbfc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001cc00:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cc04:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cc08:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cc0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cc10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cc14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cc18:	ee12 2a90 	vmov	r2, s5
9001cc1c:	eef0 2a47 	vmov.f32	s5, s14
9001cc20:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc24:	ee13 2a10 	vmov	r2, s6
9001cc28:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cc2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cc2c:	eeb0 3a67 	vmov.f32	s6, s15
9001cc30:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc34:	9a04      	ldr	r2, [sp, #16]
9001cc36:	9314      	str	r3, [sp, #80]	@ 0x50
9001cc38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cc3a:	bf08      	it	eq
9001cc3c:	4613      	moveq	r3, r2
9001cc3e:	e787      	b.n	9001cb50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cc40:	1406      	asrs	r6, r0, #16
9001cc42:	d45d      	bmi.n	9001cd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cc44:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001cc48:	42b5      	cmp	r5, r6
9001cc4a:	dd59      	ble.n	9001cd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cc4c:	140f      	asrs	r7, r1, #16
9001cc4e:	d457      	bmi.n	9001cd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cc50:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001cc54:	42ba      	cmp	r2, r7
9001cc56:	dd53      	ble.n	9001cd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cc58:	9a01      	ldr	r2, [sp, #4]
9001cc5a:	b22d      	sxth	r5, r5
9001cc5c:	fb07 2505 	mla	r5, r7, r5, r2
9001cc60:	5daa      	ldrb	r2, [r5, r6]
9001cc62:	9d02      	ldr	r5, [sp, #8]
9001cc64:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001cc68:	0e2e      	lsrs	r6, r5, #24
9001cc6a:	d049      	beq.n	9001cd00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cc6c:	f06f 0201 	mvn.w	r2, #1
9001cc70:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cc74:	fb02 f20e 	mul.w	r2, r2, lr
9001cc78:	f834 8002 	ldrh.w	r8, [r4, r2]
9001cc7c:	9203      	str	r2, [sp, #12]
9001cc7e:	9a05      	ldr	r2, [sp, #20]
9001cc80:	ea4f 2728 	mov.w	r7, r8, asr #8
9001cc84:	4356      	muls	r6, r2
9001cc86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cc8a:	1c72      	adds	r2, r6, #1
9001cc8c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cc90:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cc94:	b2ed      	uxtb	r5, r5
9001cc96:	1212      	asrs	r2, r2, #8
9001cc98:	fa1f f982 	uxth.w	r9, r2
9001cc9c:	43d2      	mvns	r2, r2
9001cc9e:	fb16 f609 	smulbb	r6, r6, r9
9001cca2:	b2d2      	uxtb	r2, r2
9001cca4:	fb15 f509 	smulbb	r5, r5, r9
9001cca8:	fb07 6702 	mla	r7, r7, r2, r6
9001ccac:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ccb0:	fb1a fa09 	smulbb	sl, sl, r9
9001ccb4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ccb8:	b2bf      	uxth	r7, r7
9001ccba:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ccbe:	fa5f f888 	uxtb.w	r8, r8
9001ccc2:	fb06 a602 	mla	r6, r6, r2, sl
9001ccc6:	fb08 5502 	mla	r5, r8, r2, r5
9001ccca:	1c7a      	adds	r2, r7, #1
9001cccc:	b2b6      	uxth	r6, r6
9001ccce:	b2ad      	uxth	r5, r5
9001ccd0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ccd4:	9a03      	ldr	r2, [sp, #12]
9001ccd6:	f105 0a01 	add.w	sl, r5, #1
9001ccda:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ccde:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cce2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cce6:	ea4a 0707 	orr.w	r7, sl, r7
9001ccea:	f106 0a01 	add.w	sl, r6, #1
9001ccee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ccf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ccf6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ccfa:	ea47 070a 	orr.w	r7, r7, sl
9001ccfe:	52a7      	strh	r7, [r4, r2]
9001cd00:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cd02:	f10e 3eff 	add.w	lr, lr, #4294967295
9001cd06:	4410      	add	r0, r2
9001cd08:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cd0a:	4411      	add	r1, r2
9001cd0c:	e755      	b.n	9001cbba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cd0e:	f04f 0800 	mov.w	r8, #0
9001cd12:	eba3 0208 	sub.w	r2, r3, r8
9001cd16:	2a00      	cmp	r2, #0
9001cd18:	f77f af53 	ble.w	9001cbc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001cd1c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001cd20:	140a      	asrs	r2, r1, #16
9001cd22:	9f01      	ldr	r7, [sp, #4]
9001cd24:	1405      	asrs	r5, r0, #16
9001cd26:	fb06 7202 	mla	r2, r6, r2, r7
9001cd2a:	5d52      	ldrb	r2, [r2, r5]
9001cd2c:	9d02      	ldr	r5, [sp, #8]
9001cd2e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001cd32:	0e2e      	lsrs	r6, r5, #24
9001cd34:	d044      	beq.n	9001cdc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001cd36:	9a05      	ldr	r2, [sp, #20]
9001cd38:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cd3c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001cd40:	4356      	muls	r6, r2
9001cd42:	ea4f 272e 	mov.w	r7, lr, asr #8
9001cd46:	1c72      	adds	r2, r6, #1
9001cd48:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cd4c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cd50:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cd54:	b2ed      	uxtb	r5, r5
9001cd56:	1212      	asrs	r2, r2, #8
9001cd58:	fa1f f982 	uxth.w	r9, r2
9001cd5c:	43d2      	mvns	r2, r2
9001cd5e:	fb16 f609 	smulbb	r6, r6, r9
9001cd62:	b2d2      	uxtb	r2, r2
9001cd64:	fb15 f509 	smulbb	r5, r5, r9
9001cd68:	fb07 6702 	mla	r7, r7, r2, r6
9001cd6c:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cd70:	fb1a fa09 	smulbb	sl, sl, r9
9001cd74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cd78:	b2bf      	uxth	r7, r7
9001cd7a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cd7e:	fa5f fe8e 	uxtb.w	lr, lr
9001cd82:	fb06 a602 	mla	r6, r6, r2, sl
9001cd86:	fb0e 5502 	mla	r5, lr, r2, r5
9001cd8a:	1c7a      	adds	r2, r7, #1
9001cd8c:	b2b6      	uxth	r6, r6
9001cd8e:	b2ad      	uxth	r5, r5
9001cd90:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cd94:	f105 0a01 	add.w	sl, r5, #1
9001cd98:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cd9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cda0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cda4:	ea4a 0707 	orr.w	r7, sl, r7
9001cda8:	f106 0a01 	add.w	sl, r6, #1
9001cdac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cdb0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cdb4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cdb8:	ea47 070a 	orr.w	r7, r7, sl
9001cdbc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001cdc0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cdc2:	f108 0801 	add.w	r8, r8, #1
9001cdc6:	4410      	add	r0, r2
9001cdc8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cdca:	4411      	add	r1, r2
9001cdcc:	e7a1      	b.n	9001cd12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001cdce:	b007      	add	sp, #28
9001cdd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cdd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cdd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cdd8:	b085      	sub	sp, #20
9001cdda:	468b      	mov	fp, r1
9001cddc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cde0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cde2:	9203      	str	r2, [sp, #12]
9001cde4:	6841      	ldr	r1, [r0, #4]
9001cde6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001cdea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cdee:	fb01 2404 	mla	r4, r1, r4, r2
9001cdf2:	6802      	ldr	r2, [r0, #0]
9001cdf4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cdf8:	f8de 2000 	ldr.w	r2, [lr]
9001cdfc:	9200      	str	r2, [sp, #0]
9001cdfe:	f8de 2004 	ldr.w	r2, [lr, #4]
9001ce02:	3204      	adds	r2, #4
9001ce04:	9201      	str	r2, [sp, #4]
9001ce06:	f1bb 0f00 	cmp.w	fp, #0
9001ce0a:	dc03      	bgt.n	9001ce14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001ce0c:	9a03      	ldr	r2, [sp, #12]
9001ce0e:	2a00      	cmp	r2, #0
9001ce10:	f340 8153 	ble.w	9001d0ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ce14:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ce16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ce1a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ce1e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ce20:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001ce24:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ce28:	2b00      	cmp	r3, #0
9001ce2a:	dd0e      	ble.n	9001ce4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ce2c:	1408      	asrs	r0, r1, #16
9001ce2e:	d405      	bmi.n	9001ce3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce30:	42b8      	cmp	r0, r7
9001ce32:	da03      	bge.n	9001ce3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce34:	1410      	asrs	r0, r2, #16
9001ce36:	d401      	bmi.n	9001ce3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce38:	42b0      	cmp	r0, r6
9001ce3a:	db07      	blt.n	9001ce4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ce3c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ce3e:	3b01      	subs	r3, #1
9001ce40:	3402      	adds	r4, #2
9001ce42:	4401      	add	r1, r0
9001ce44:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ce46:	4402      	add	r2, r0
9001ce48:	e7ee      	b.n	9001ce28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ce4a:	d017      	beq.n	9001ce7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ce4c:	1e58      	subs	r0, r3, #1
9001ce4e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ce50:	fb05 1500 	mla	r5, r5, r0, r1
9001ce54:	142d      	asrs	r5, r5, #16
9001ce56:	d409      	bmi.n	9001ce6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ce58:	42bd      	cmp	r5, r7
9001ce5a:	da07      	bge.n	9001ce6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ce5c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ce5e:	fb05 2000 	mla	r0, r5, r0, r2
9001ce62:	1400      	asrs	r0, r0, #16
9001ce64:	d402      	bmi.n	9001ce6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ce66:	42b0      	cmp	r0, r6
9001ce68:	f2c0 80bc 	blt.w	9001cfe4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001ce6c:	2600      	movs	r6, #0
9001ce6e:	1998      	adds	r0, r3, r6
9001ce70:	2800      	cmp	r0, #0
9001ce72:	dc3e      	bgt.n	9001cef2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001ce74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ce78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ce7c:	f1bb 0f00 	cmp.w	fp, #0
9001ce80:	f340 811b 	ble.w	9001d0ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ce84:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ce88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ce8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ce8e:	f1bb 0b01 	subs.w	fp, fp, #1
9001ce92:	eeb0 6a62 	vmov.f32	s12, s5
9001ce96:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ce9a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ce9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cea2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001cea6:	eeb0 6a43 	vmov.f32	s12, s6
9001ceaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ceae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ceb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ceb6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ceba:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ceca:	ee12 2a90 	vmov	r2, s5
9001cece:	eef0 2a47 	vmov.f32	s5, s14
9001ced2:	fb92 f3f3 	sdiv	r3, r2, r3
9001ced6:	ee13 2a10 	vmov	r2, s6
9001ceda:	9311      	str	r3, [sp, #68]	@ 0x44
9001cedc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cede:	eeb0 3a67 	vmov.f32	s6, s15
9001cee2:	fb92 f3f3 	sdiv	r3, r2, r3
9001cee6:	9a03      	ldr	r2, [sp, #12]
9001cee8:	9312      	str	r3, [sp, #72]	@ 0x48
9001ceea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ceec:	bf08      	it	eq
9001ceee:	4613      	moveq	r3, r2
9001cef0:	e789      	b.n	9001ce06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001cef2:	140f      	asrs	r7, r1, #16
9001cef4:	d426      	bmi.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cef6:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cefa:	42bd      	cmp	r5, r7
9001cefc:	dd22      	ble.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cefe:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cf02:	d41f      	bmi.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cf04:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cf08:	4560      	cmp	r0, ip
9001cf0a:	dd1b      	ble.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cf0c:	9800      	ldr	r0, [sp, #0]
9001cf0e:	b22d      	sxth	r5, r5
9001cf10:	fb0c 0505 	mla	r5, ip, r5, r0
9001cf14:	5de8      	ldrb	r0, [r5, r7]
9001cf16:	9d01      	ldr	r5, [sp, #4]
9001cf18:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001cf1c:	0e07      	lsrs	r7, r0, #24
9001cf1e:	2fff      	cmp	r7, #255	@ 0xff
9001cf20:	d116      	bne.n	9001cf50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001cf22:	f06f 0501 	mvn.w	r5, #1
9001cf26:	fb05 f706 	mul.w	r7, r5, r6
9001cf2a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001cf2e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001cf32:	0945      	lsrs	r5, r0, #5
9001cf34:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001cf38:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cf3c:	ea4c 0505 	orr.w	r5, ip, r5
9001cf40:	4305      	orrs	r5, r0
9001cf42:	53e5      	strh	r5, [r4, r7]
9001cf44:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cf46:	3e01      	subs	r6, #1
9001cf48:	4401      	add	r1, r0
9001cf4a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cf4c:	4402      	add	r2, r0
9001cf4e:	e78e      	b.n	9001ce6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001cf50:	b2fd      	uxtb	r5, r7
9001cf52:	2f00      	cmp	r7, #0
9001cf54:	d0f6      	beq.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cf56:	f06f 0701 	mvn.w	r7, #1
9001cf5a:	fa1f f985 	uxth.w	r9, r5
9001cf5e:	43ed      	mvns	r5, r5
9001cf60:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001cf64:	4377      	muls	r7, r6
9001cf66:	fb1a fa09 	smulbb	sl, sl, r9
9001cf6a:	b2ed      	uxtb	r5, r5
9001cf6c:	f834 8007 	ldrh.w	r8, [r4, r7]
9001cf70:	9702      	str	r7, [sp, #8]
9001cf72:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001cf76:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001cf7a:	fb17 f709 	smulbb	r7, r7, r9
9001cf7e:	b2c0      	uxtb	r0, r0
9001cf80:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cf84:	fb10 f009 	smulbb	r0, r0, r9
9001cf88:	fb0c 7c05 	mla	ip, ip, r5, r7
9001cf8c:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001cf90:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cf94:	fa1f fc8c 	uxth.w	ip, ip
9001cf98:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cf9c:	fa5f f888 	uxtb.w	r8, r8
9001cfa0:	fb07 a705 	mla	r7, r7, r5, sl
9001cfa4:	fb08 0005 	mla	r0, r8, r5, r0
9001cfa8:	f10c 0501 	add.w	r5, ip, #1
9001cfac:	b2bf      	uxth	r7, r7
9001cfae:	b280      	uxth	r0, r0
9001cfb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cfb4:	f100 0a01 	add.w	sl, r0, #1
9001cfb8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cfbc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001cfc0:	9802      	ldr	r0, [sp, #8]
9001cfc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cfc6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cfca:	f107 0a01 	add.w	sl, r7, #1
9001cfce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001cfd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cfd6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cfda:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cfde:	f824 c000 	strh.w	ip, [r4, r0]
9001cfe2:	e7af      	b.n	9001cf44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cfe4:	f04f 0800 	mov.w	r8, #0
9001cfe8:	eba3 0008 	sub.w	r0, r3, r8
9001cfec:	2800      	cmp	r0, #0
9001cfee:	f77f af41 	ble.w	9001ce74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cff2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001cff6:	1410      	asrs	r0, r2, #16
9001cff8:	9f00      	ldr	r7, [sp, #0]
9001cffa:	140d      	asrs	r5, r1, #16
9001cffc:	fb06 7000 	mla	r0, r6, r0, r7
9001d000:	5d40      	ldrb	r0, [r0, r5]
9001d002:	9d01      	ldr	r5, [sp, #4]
9001d004:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001d008:	0e2e      	lsrs	r6, r5, #24
9001d00a:	2eff      	cmp	r6, #255	@ 0xff
9001d00c:	d112      	bne.n	9001d034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001d00e:	482c      	ldr	r0, [pc, #176]	@ (9001d0c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001d010:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001d014:	0968      	lsrs	r0, r5, #5
9001d016:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d01a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001d01e:	4330      	orrs	r0, r6
9001d020:	4328      	orrs	r0, r5
9001d022:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001d026:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d028:	f108 0801 	add.w	r8, r8, #1
9001d02c:	4401      	add	r1, r0
9001d02e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d030:	4402      	add	r2, r0
9001d032:	e7d9      	b.n	9001cfe8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d034:	b2f0      	uxtb	r0, r6
9001d036:	2e00      	cmp	r6, #0
9001d038:	d0f5      	beq.n	9001d026 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001d03a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001d03e:	fa1f f980 	uxth.w	r9, r0
9001d042:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d046:	43c0      	mvns	r0, r0
9001d048:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d04c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d050:	fb16 f609 	smulbb	r6, r6, r9
9001d054:	b2c0      	uxtb	r0, r0
9001d056:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d05a:	b2ed      	uxtb	r5, r5
9001d05c:	fb1a fa09 	smulbb	sl, sl, r9
9001d060:	fb07 6700 	mla	r7, r7, r0, r6
9001d064:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d068:	fb15 f509 	smulbb	r5, r5, r9
9001d06c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d070:	b2bf      	uxth	r7, r7
9001d072:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d076:	fa5f fc8c 	uxtb.w	ip, ip
9001d07a:	fb06 a600 	mla	r6, r6, r0, sl
9001d07e:	fb0c 5500 	mla	r5, ip, r0, r5
9001d082:	1c78      	adds	r0, r7, #1
9001d084:	b2b6      	uxth	r6, r6
9001d086:	b2ad      	uxth	r5, r5
9001d088:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001d08c:	f105 0a01 	add.w	sl, r5, #1
9001d090:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d094:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d098:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d09c:	ea4a 0707 	orr.w	r7, sl, r7
9001d0a0:	f106 0a01 	add.w	sl, r6, #1
9001d0a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d0a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d0ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d0b0:	ea47 070a 	orr.w	r7, r7, sl
9001d0b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001d0b8:	e7b5      	b.n	9001d026 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001d0ba:	b005      	add	sp, #20
9001d0bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d0c0:	fffff800 	.word	0xfffff800

9001d0c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d0c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d0c8:	b087      	sub	sp, #28
9001d0ca:	468b      	mov	fp, r1
9001d0cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d0d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001d0d2:	9204      	str	r2, [sp, #16]
9001d0d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d0d8:	6861      	ldr	r1, [r4, #4]
9001d0da:	9205      	str	r2, [sp, #20]
9001d0dc:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001d0e0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001d0e4:	fb01 2000 	mla	r0, r1, r0, r2
9001d0e8:	6822      	ldr	r2, [r4, #0]
9001d0ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001d0ee:	f8de 2000 	ldr.w	r2, [lr]
9001d0f2:	9201      	str	r2, [sp, #4]
9001d0f4:	f8de 2004 	ldr.w	r2, [lr, #4]
9001d0f8:	9202      	str	r2, [sp, #8]
9001d0fa:	f1bb 0f00 	cmp.w	fp, #0
9001d0fe:	dc03      	bgt.n	9001d108 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001d100:	9a04      	ldr	r2, [sp, #16]
9001d102:	2a00      	cmp	r2, #0
9001d104:	f340 8142 	ble.w	9001d38c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001d108:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d10a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d10e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d112:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d114:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001d118:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d11c:	2b00      	cmp	r3, #0
9001d11e:	dd0e      	ble.n	9001d13e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001d120:	140c      	asrs	r4, r1, #16
9001d122:	d405      	bmi.n	9001d130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d124:	42bc      	cmp	r4, r7
9001d126:	da03      	bge.n	9001d130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d128:	1414      	asrs	r4, r2, #16
9001d12a:	d401      	bmi.n	9001d130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d12c:	42b4      	cmp	r4, r6
9001d12e:	db07      	blt.n	9001d140 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d130:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d132:	3b01      	subs	r3, #1
9001d134:	3002      	adds	r0, #2
9001d136:	4421      	add	r1, r4
9001d138:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d13a:	4422      	add	r2, r4
9001d13c:	e7ee      	b.n	9001d11c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001d13e:	d019      	beq.n	9001d174 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001d140:	1e5c      	subs	r4, r3, #1
9001d142:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d144:	fb05 1504 	mla	r5, r5, r4, r1
9001d148:	142d      	asrs	r5, r5, #16
9001d14a:	d409      	bmi.n	9001d160 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d14c:	42bd      	cmp	r5, r7
9001d14e:	da07      	bge.n	9001d160 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d150:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d152:	fb05 2404 	mla	r4, r5, r4, r2
9001d156:	1424      	asrs	r4, r4, #16
9001d158:	d402      	bmi.n	9001d160 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001d15a:	42b4      	cmp	r4, r6
9001d15c:	f2c0 80b1 	blt.w	9001d2c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001d160:	f04f 0800 	mov.w	r8, #0
9001d164:	eb03 0408 	add.w	r4, r3, r8
9001d168:	2c00      	cmp	r4, #0
9001d16a:	dc3e      	bgt.n	9001d1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001d16c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d170:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d174:	f1bb 0f00 	cmp.w	fp, #0
9001d178:	f340 8108 	ble.w	9001d38c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001d17c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d182:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d186:	f1bb 0b01 	subs.w	fp, fp, #1
9001d18a:	eeb0 6a62 	vmov.f32	s12, s5
9001d18e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d192:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d196:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d19a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d19e:	eeb0 6a43 	vmov.f32	s12, s6
9001d1a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d1a6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d1aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d1ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d1b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d1b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d1ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d1be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d1c2:	ee12 2a90 	vmov	r2, s5
9001d1c6:	eef0 2a47 	vmov.f32	s5, s14
9001d1ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001d1ce:	ee13 2a10 	vmov	r2, s6
9001d1d2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d1d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d1d6:	eeb0 3a67 	vmov.f32	s6, s15
9001d1da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d1de:	9a04      	ldr	r2, [sp, #16]
9001d1e0:	9314      	str	r3, [sp, #80]	@ 0x50
9001d1e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d1e4:	bf08      	it	eq
9001d1e6:	4613      	moveq	r3, r2
9001d1e8:	e787      	b.n	9001d0fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001d1ea:	140e      	asrs	r6, r1, #16
9001d1ec:	d462      	bmi.n	9001d2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d1ee:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d1f2:	42b5      	cmp	r5, r6
9001d1f4:	dd5e      	ble.n	9001d2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d1f6:	1417      	asrs	r7, r2, #16
9001d1f8:	d45c      	bmi.n	9001d2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d1fa:	f8de 400c 	ldr.w	r4, [lr, #12]
9001d1fe:	42bc      	cmp	r4, r7
9001d200:	dd58      	ble.n	9001d2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d202:	b22d      	sxth	r5, r5
9001d204:	9c02      	ldr	r4, [sp, #8]
9001d206:	fb07 6505 	mla	r5, r7, r5, r6
9001d20a:	5d66      	ldrb	r6, [r4, r5]
9001d20c:	2e00      	cmp	r6, #0
9001d20e:	d051      	beq.n	9001d2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d210:	9c01      	ldr	r4, [sp, #4]
9001d212:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001d216:	f06f 0401 	mvn.w	r4, #1
9001d21a:	fb04 f408 	mul.w	r4, r4, r8
9001d21e:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001d222:	5b05      	ldrh	r5, [r0, r4]
9001d224:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d228:	9403      	str	r4, [sp, #12]
9001d22a:	9c05      	ldr	r4, [sp, #20]
9001d22c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d230:	4366      	muls	r6, r4
9001d232:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d236:	1c74      	adds	r4, r6, #1
9001d238:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d23c:	122e      	asrs	r6, r5, #8
9001d23e:	1224      	asrs	r4, r4, #8
9001d240:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d244:	00ed      	lsls	r5, r5, #3
9001d246:	b2a7      	uxth	r7, r4
9001d248:	43e4      	mvns	r4, r4
9001d24a:	b2ed      	uxtb	r5, r5
9001d24c:	b2e4      	uxtb	r4, r4
9001d24e:	fb16 f604 	smulbb	r6, r6, r4
9001d252:	fb15 f504 	smulbb	r5, r5, r4
9001d256:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d25a:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001d25e:	fb1a fa04 	smulbb	sl, sl, r4
9001d262:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d266:	fa1f fc8c 	uxth.w	ip, ip
9001d26a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d26e:	fa5f f989 	uxtb.w	r9, r9
9001d272:	fb06 a607 	mla	r6, r6, r7, sl
9001d276:	f10c 0401 	add.w	r4, ip, #1
9001d27a:	fb09 5507 	mla	r5, r9, r7, r5
9001d27e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d282:	9c03      	ldr	r4, [sp, #12]
9001d284:	b2ad      	uxth	r5, r5
9001d286:	b2b6      	uxth	r6, r6
9001d288:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d28c:	f105 0a01 	add.w	sl, r5, #1
9001d290:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d294:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d298:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d29c:	f106 0a01 	add.w	sl, r6, #1
9001d2a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d2a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d2a8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d2ac:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d2b0:	f820 c004 	strh.w	ip, [r0, r4]
9001d2b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d2b6:	f108 38ff 	add.w	r8, r8, #4294967295
9001d2ba:	4421      	add	r1, r4
9001d2bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d2be:	4422      	add	r2, r4
9001d2c0:	e750      	b.n	9001d164 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d2c2:	f04f 0900 	mov.w	r9, #0
9001d2c6:	eba3 0409 	sub.w	r4, r3, r9
9001d2ca:	2c00      	cmp	r4, #0
9001d2cc:	f77f af4e 	ble.w	9001d16c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d2d0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001d2d4:	140d      	asrs	r5, r1, #16
9001d2d6:	1414      	asrs	r4, r2, #16
9001d2d8:	fb06 5404 	mla	r4, r6, r4, r5
9001d2dc:	9d02      	ldr	r5, [sp, #8]
9001d2de:	5d2e      	ldrb	r6, [r5, r4]
9001d2e0:	2e00      	cmp	r6, #0
9001d2e2:	d04c      	beq.n	9001d37e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001d2e4:	9d01      	ldr	r5, [sp, #4]
9001d2e6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001d2ea:	9c05      	ldr	r4, [sp, #20]
9001d2ec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d2f0:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001d2f4:	4366      	muls	r6, r4
9001d2f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d2fa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d2fe:	1c74      	adds	r4, r6, #1
9001d300:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d304:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d308:	122e      	asrs	r6, r5, #8
9001d30a:	1224      	asrs	r4, r4, #8
9001d30c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d310:	00ed      	lsls	r5, r5, #3
9001d312:	b2a7      	uxth	r7, r4
9001d314:	43e4      	mvns	r4, r4
9001d316:	b2ed      	uxtb	r5, r5
9001d318:	b2e4      	uxtb	r4, r4
9001d31a:	fb16 f604 	smulbb	r6, r6, r4
9001d31e:	fb15 f504 	smulbb	r5, r5, r4
9001d322:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d326:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001d32a:	fb1a fa04 	smulbb	sl, sl, r4
9001d32e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d332:	fa1f fc8c 	uxth.w	ip, ip
9001d336:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d33a:	fa5f f888 	uxtb.w	r8, r8
9001d33e:	fb06 a607 	mla	r6, r6, r7, sl
9001d342:	f10c 0401 	add.w	r4, ip, #1
9001d346:	fb08 5507 	mla	r5, r8, r7, r5
9001d34a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d34e:	b2ad      	uxth	r5, r5
9001d350:	b2b6      	uxth	r6, r6
9001d352:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d356:	f105 0a01 	add.w	sl, r5, #1
9001d35a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d35e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d362:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d366:	f106 0a01 	add.w	sl, r6, #1
9001d36a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d36e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d372:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d376:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d37a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d37e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d380:	f109 0901 	add.w	r9, r9, #1
9001d384:	4421      	add	r1, r4
9001d386:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d388:	4422      	add	r2, r4
9001d38a:	e79c      	b.n	9001d2c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001d38c:	b007      	add	sp, #28
9001d38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d392 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d396:	b085      	sub	sp, #20
9001d398:	468b      	mov	fp, r1
9001d39a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d39e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d3a0:	9203      	str	r2, [sp, #12]
9001d3a2:	6861      	ldr	r1, [r4, #4]
9001d3a4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001d3a8:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001d3ac:	fb01 2000 	mla	r0, r1, r0, r2
9001d3b0:	6822      	ldr	r2, [r4, #0]
9001d3b2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001d3b6:	f8d8 2000 	ldr.w	r2, [r8]
9001d3ba:	9200      	str	r2, [sp, #0]
9001d3bc:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001d3c0:	9201      	str	r2, [sp, #4]
9001d3c2:	f1bb 0f00 	cmp.w	fp, #0
9001d3c6:	dc03      	bgt.n	9001d3d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d3c8:	9a03      	ldr	r2, [sp, #12]
9001d3ca:	2a00      	cmp	r2, #0
9001d3cc:	f340 8146 	ble.w	9001d65c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d3d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d3d2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d3d6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d3da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d3dc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d3e0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d3e4:	2b00      	cmp	r3, #0
9001d3e6:	dd0e      	ble.n	9001d406 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d3e8:	140c      	asrs	r4, r1, #16
9001d3ea:	d405      	bmi.n	9001d3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3ec:	42bc      	cmp	r4, r7
9001d3ee:	da03      	bge.n	9001d3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3f0:	1414      	asrs	r4, r2, #16
9001d3f2:	d401      	bmi.n	9001d3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d3f4:	42b4      	cmp	r4, r6
9001d3f6:	db07      	blt.n	9001d408 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d3f8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d3fa:	3b01      	subs	r3, #1
9001d3fc:	3002      	adds	r0, #2
9001d3fe:	4421      	add	r1, r4
9001d400:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d402:	4422      	add	r2, r4
9001d404:	e7ee      	b.n	9001d3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d406:	d017      	beq.n	9001d438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d408:	1e5c      	subs	r4, r3, #1
9001d40a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d40c:	fb05 1504 	mla	r5, r5, r4, r1
9001d410:	142d      	asrs	r5, r5, #16
9001d412:	d409      	bmi.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d414:	42bd      	cmp	r5, r7
9001d416:	da07      	bge.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d418:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d41a:	fb05 2404 	mla	r4, r5, r4, r2
9001d41e:	1424      	asrs	r4, r4, #16
9001d420:	d402      	bmi.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d422:	42b4      	cmp	r4, r6
9001d424:	f2c0 80b3 	blt.w	9001d58e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001d428:	2600      	movs	r6, #0
9001d42a:	199c      	adds	r4, r3, r6
9001d42c:	2c00      	cmp	r4, #0
9001d42e:	dc3e      	bgt.n	9001d4ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d430:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d434:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d438:	f1bb 0f00 	cmp.w	fp, #0
9001d43c:	f340 810e 	ble.w	9001d65c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d440:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d444:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d446:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d44a:	f1bb 0b01 	subs.w	fp, fp, #1
9001d44e:	eeb0 6a62 	vmov.f32	s12, s5
9001d452:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d456:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d45a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d45e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d462:	eeb0 6a43 	vmov.f32	s12, s6
9001d466:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d46a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d46e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d472:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d476:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d47a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d47e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d482:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d486:	ee12 2a90 	vmov	r2, s5
9001d48a:	eef0 2a47 	vmov.f32	s5, s14
9001d48e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d492:	ee13 2a10 	vmov	r2, s6
9001d496:	9311      	str	r3, [sp, #68]	@ 0x44
9001d498:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d49a:	eeb0 3a67 	vmov.f32	s6, s15
9001d49e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4a2:	9a03      	ldr	r2, [sp, #12]
9001d4a4:	9312      	str	r3, [sp, #72]	@ 0x48
9001d4a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d4a8:	bf08      	it	eq
9001d4aa:	4613      	moveq	r3, r2
9001d4ac:	e789      	b.n	9001d3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d4ae:	140f      	asrs	r7, r1, #16
9001d4b0:	d418      	bmi.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d4b2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d4b6:	42bd      	cmp	r5, r7
9001d4b8:	dd14      	ble.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d4ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d4be:	d411      	bmi.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d4c0:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001d4c4:	4564      	cmp	r4, ip
9001d4c6:	dd0d      	ble.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d4c8:	b22d      	sxth	r5, r5
9001d4ca:	9c01      	ldr	r4, [sp, #4]
9001d4cc:	fb0c 7505 	mla	r5, ip, r5, r7
9001d4d0:	5d64      	ldrb	r4, [r4, r5]
9001d4d2:	2cff      	cmp	r4, #255	@ 0xff
9001d4d4:	d10c      	bne.n	9001d4f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d4d6:	9c00      	ldr	r4, [sp, #0]
9001d4d8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001d4dc:	f06f 0401 	mvn.w	r4, #1
9001d4e0:	4374      	muls	r4, r6
9001d4e2:	5305      	strh	r5, [r0, r4]
9001d4e4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d4e6:	3e01      	subs	r6, #1
9001d4e8:	4421      	add	r1, r4
9001d4ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d4ec:	4422      	add	r2, r4
9001d4ee:	e79c      	b.n	9001d42a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d4f0:	2c00      	cmp	r4, #0
9001d4f2:	d0f7      	beq.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d4f4:	9f00      	ldr	r7, [sp, #0]
9001d4f6:	fa1f fc84 	uxth.w	ip, r4
9001d4fa:	43e4      	mvns	r4, r4
9001d4fc:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001d500:	f06f 0501 	mvn.w	r5, #1
9001d504:	b2e4      	uxtb	r4, r4
9001d506:	4375      	muls	r5, r6
9001d508:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001d50c:	9502      	str	r5, [sp, #8]
9001d50e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001d512:	5b45      	ldrh	r5, [r0, r5]
9001d514:	122f      	asrs	r7, r5, #8
9001d516:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d51a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d51e:	00ed      	lsls	r5, r5, #3
9001d520:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d524:	fb17 f704 	smulbb	r7, r7, r4
9001d528:	b2ed      	uxtb	r5, r5
9001d52a:	fb1a fa04 	smulbb	sl, sl, r4
9001d52e:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001d532:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001d536:	fb15 f504 	smulbb	r5, r5, r4
9001d53a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d53e:	fa1f fe8e 	uxth.w	lr, lr
9001d542:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d546:	fa5f f989 	uxtb.w	r9, r9
9001d54a:	fb07 a70c 	mla	r7, r7, ip, sl
9001d54e:	f10e 0401 	add.w	r4, lr, #1
9001d552:	fb09 550c 	mla	r5, r9, ip, r5
9001d556:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001d55a:	9c02      	ldr	r4, [sp, #8]
9001d55c:	b2ad      	uxth	r5, r5
9001d55e:	b2bf      	uxth	r7, r7
9001d560:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001d564:	f105 0a01 	add.w	sl, r5, #1
9001d568:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d56c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d570:	ea4a 0e0e 	orr.w	lr, sl, lr
9001d574:	f107 0a01 	add.w	sl, r7, #1
9001d578:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d57c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d580:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d584:	ea4e 0e0a 	orr.w	lr, lr, sl
9001d588:	f820 e004 	strh.w	lr, [r0, r4]
9001d58c:	e7aa      	b.n	9001d4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d58e:	f04f 0900 	mov.w	r9, #0
9001d592:	eba3 0409 	sub.w	r4, r3, r9
9001d596:	2c00      	cmp	r4, #0
9001d598:	f77f af4a 	ble.w	9001d430 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d59c:	1414      	asrs	r4, r2, #16
9001d59e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d5a2:	140d      	asrs	r5, r1, #16
9001d5a4:	fb06 5504 	mla	r5, r6, r4, r5
9001d5a8:	9c01      	ldr	r4, [sp, #4]
9001d5aa:	5d64      	ldrb	r4, [r4, r5]
9001d5ac:	2cff      	cmp	r4, #255	@ 0xff
9001d5ae:	d10b      	bne.n	9001d5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d5b0:	9c00      	ldr	r4, [sp, #0]
9001d5b2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001d5b6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001d5ba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001d5bc:	f109 0901 	add.w	r9, r9, #1
9001d5c0:	4421      	add	r1, r4
9001d5c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d5c4:	4422      	add	r2, r4
9001d5c6:	e7e4      	b.n	9001d592 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001d5c8:	2c00      	cmp	r4, #0
9001d5ca:	d0f6      	beq.n	9001d5ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d5cc:	9e00      	ldr	r6, [sp, #0]
9001d5ce:	b2a7      	uxth	r7, r4
9001d5d0:	43e4      	mvns	r4, r4
9001d5d2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001d5d6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d5da:	b2e4      	uxtb	r4, r4
9001d5dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d5e0:	122e      	asrs	r6, r5, #8
9001d5e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d5e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d5ea:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d5ee:	00ed      	lsls	r5, r5, #3
9001d5f0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d5f4:	fb16 f604 	smulbb	r6, r6, r4
9001d5f8:	b2ed      	uxtb	r5, r5
9001d5fa:	fb1a fa04 	smulbb	sl, sl, r4
9001d5fe:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d602:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d606:	fb15 f504 	smulbb	r5, r5, r4
9001d60a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d60e:	fa1f fc8c 	uxth.w	ip, ip
9001d612:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d616:	fa5f fe8e 	uxtb.w	lr, lr
9001d61a:	fb06 a607 	mla	r6, r6, r7, sl
9001d61e:	f10c 0401 	add.w	r4, ip, #1
9001d622:	fb0e 5507 	mla	r5, lr, r7, r5
9001d626:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d62a:	b2ad      	uxth	r5, r5
9001d62c:	b2b6      	uxth	r6, r6
9001d62e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d632:	f105 0a01 	add.w	sl, r5, #1
9001d636:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d63a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d63e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d642:	f106 0a01 	add.w	sl, r6, #1
9001d646:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d64a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d64e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d652:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d656:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d65a:	e7ae      	b.n	9001d5ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d65c:	b005      	add	sp, #20
9001d65e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d662 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d662:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d666:	b085      	sub	sp, #20
9001d668:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d66a:	9203      	str	r2, [sp, #12]
9001d66c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001d670:	9100      	str	r1, [sp, #0]
9001d672:	9201      	str	r2, [sp, #4]
9001d674:	6841      	ldr	r1, [r0, #4]
9001d676:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001d67a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d67e:	fb01 2404 	mla	r4, r1, r4, r2
9001d682:	6802      	ldr	r2, [r0, #0]
9001d684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d688:	f8de 2000 	ldr.w	r2, [lr]
9001d68c:	9202      	str	r2, [sp, #8]
9001d68e:	9a01      	ldr	r2, [sp, #4]
9001d690:	43d6      	mvns	r6, r2
9001d692:	b2f6      	uxtb	r6, r6
9001d694:	9a00      	ldr	r2, [sp, #0]
9001d696:	2a00      	cmp	r2, #0
9001d698:	dc03      	bgt.n	9001d6a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001d69a:	9a03      	ldr	r2, [sp, #12]
9001d69c:	2a00      	cmp	r2, #0
9001d69e:	f340 8124 	ble.w	9001d8ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d6a2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d6a4:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001d6a8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d6ac:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d6ae:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001d6b2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d6b6:	2b00      	cmp	r3, #0
9001d6b8:	dd0e      	ble.n	9001d6d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d6ba:	1408      	asrs	r0, r1, #16
9001d6bc:	d405      	bmi.n	9001d6ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d6be:	4560      	cmp	r0, ip
9001d6c0:	da03      	bge.n	9001d6ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d6c2:	1410      	asrs	r0, r2, #16
9001d6c4:	d401      	bmi.n	9001d6ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d6c6:	42b8      	cmp	r0, r7
9001d6c8:	db07      	blt.n	9001d6da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d6ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d6cc:	3b01      	subs	r3, #1
9001d6ce:	3402      	adds	r4, #2
9001d6d0:	4401      	add	r1, r0
9001d6d2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d6d4:	4402      	add	r2, r0
9001d6d6:	e7ee      	b.n	9001d6b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001d6d8:	d06e      	beq.n	9001d7b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d6da:	1e58      	subs	r0, r3, #1
9001d6dc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d6de:	fb05 1500 	mla	r5, r5, r0, r1
9001d6e2:	142d      	asrs	r5, r5, #16
9001d6e4:	d45c      	bmi.n	9001d7a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d6e6:	4565      	cmp	r5, ip
9001d6e8:	da5a      	bge.n	9001d7a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d6ea:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d6ec:	fb05 2000 	mla	r0, r5, r0, r2
9001d6f0:	1400      	asrs	r0, r0, #16
9001d6f2:	d455      	bmi.n	9001d7a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d6f4:	42b8      	cmp	r0, r7
9001d6f6:	da53      	bge.n	9001d7a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d6f8:	4699      	mov	r9, r3
9001d6fa:	46a2      	mov	sl, r4
9001d6fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001d700:	f1b9 0f00 	cmp.w	r9, #0
9001d704:	dd54      	ble.n	9001d7b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d706:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d70a:	140d      	asrs	r5, r1, #16
9001d70c:	1410      	asrs	r0, r2, #16
9001d70e:	f109 39ff 	add.w	r9, r9, #4294967295
9001d712:	fb07 5000 	mla	r0, r7, r0, r5
9001d716:	9d02      	ldr	r5, [sp, #8]
9001d718:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d71c:	f8ba 5000 	ldrh.w	r5, [sl]
9001d720:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d724:	122f      	asrs	r7, r5, #8
9001d726:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001d72a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d72e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d732:	00ed      	lsls	r5, r5, #3
9001d734:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001d738:	fb17 f706 	smulbb	r7, r7, r6
9001d73c:	b2ed      	uxtb	r5, r5
9001d73e:	fb18 f806 	smulbb	r8, r8, r6
9001d742:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001d746:	10c7      	asrs	r7, r0, #3
9001d748:	fb15 f506 	smulbb	r5, r5, r6
9001d74c:	00c0      	lsls	r0, r0, #3
9001d74e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d752:	fa1f fc8c 	uxth.w	ip, ip
9001d756:	b2c0      	uxtb	r0, r0
9001d758:	fb07 870b 	mla	r7, r7, fp, r8
9001d75c:	fb00 500b 	mla	r0, r0, fp, r5
9001d760:	f10c 0501 	add.w	r5, ip, #1
9001d764:	b2bf      	uxth	r7, r7
9001d766:	b280      	uxth	r0, r0
9001d768:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d76c:	f107 0801 	add.w	r8, r7, #1
9001d770:	1c45      	adds	r5, r0, #1
9001d772:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001d776:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d77a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d77e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d780:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d784:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d788:	4401      	add	r1, r0
9001d78a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001d78e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d790:	ea45 0c0c 	orr.w	ip, r5, ip
9001d794:	4402      	add	r2, r0
9001d796:	ea4c 0c08 	orr.w	ip, ip, r8
9001d79a:	f82a cb02 	strh.w	ip, [sl], #2
9001d79e:	e7af      	b.n	9001d700 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d7a0:	f04f 0800 	mov.w	r8, #0
9001d7a4:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001d7a8:	eb03 0008 	add.w	r0, r3, r8
9001d7ac:	2800      	cmp	r0, #0
9001d7ae:	dc41      	bgt.n	9001d834 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001d7b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d7b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d7b8:	9b00      	ldr	r3, [sp, #0]
9001d7ba:	2b00      	cmp	r3, #0
9001d7bc:	f340 8095 	ble.w	9001d8ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d7c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d7c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d7c6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d7ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d7ce:	eef0 6a62 	vmov.f32	s13, s5
9001d7d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d7d6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d7da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d7de:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001d7e2:	eef0 6a43 	vmov.f32	s13, s6
9001d7e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d7ea:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001d7ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d7f2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d7f6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d7fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d7fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d802:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d806:	ee12 2a90 	vmov	r2, s5
9001d80a:	eef0 2a47 	vmov.f32	s5, s14
9001d80e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d812:	ee13 2a10 	vmov	r2, s6
9001d816:	9311      	str	r3, [sp, #68]	@ 0x44
9001d818:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d81a:	eeb0 3a67 	vmov.f32	s6, s15
9001d81e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d822:	9312      	str	r3, [sp, #72]	@ 0x48
9001d824:	9b00      	ldr	r3, [sp, #0]
9001d826:	9a03      	ldr	r2, [sp, #12]
9001d828:	3b01      	subs	r3, #1
9001d82a:	9300      	str	r3, [sp, #0]
9001d82c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d82e:	bf08      	it	eq
9001d830:	4613      	moveq	r3, r2
9001d832:	e72f      	b.n	9001d694 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d834:	140f      	asrs	r7, r1, #16
9001d836:	d451      	bmi.n	9001d8dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d838:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d83c:	42bd      	cmp	r5, r7
9001d83e:	dd4d      	ble.n	9001d8dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d840:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d844:	d44a      	bmi.n	9001d8dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d846:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d84a:	4560      	cmp	r0, ip
9001d84c:	dd46      	ble.n	9001d8dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d84e:	b22d      	sxth	r5, r5
9001d850:	9802      	ldr	r0, [sp, #8]
9001d852:	fb0c 7505 	mla	r5, ip, r5, r7
9001d856:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001d85a:	f06f 0501 	mvn.w	r5, #1
9001d85e:	fb05 fb08 	mul.w	fp, r5, r8
9001d862:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d866:	f834 500b 	ldrh.w	r5, [r4, fp]
9001d86a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d86e:	122f      	asrs	r7, r5, #8
9001d870:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d874:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d878:	00ed      	lsls	r5, r5, #3
9001d87a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d87e:	fb17 f706 	smulbb	r7, r7, r6
9001d882:	b2ed      	uxtb	r5, r5
9001d884:	fb19 f906 	smulbb	r9, r9, r6
9001d888:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d88c:	10c7      	asrs	r7, r0, #3
9001d88e:	fb15 f506 	smulbb	r5, r5, r6
9001d892:	00c0      	lsls	r0, r0, #3
9001d894:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d898:	fa1f fc8c 	uxth.w	ip, ip
9001d89c:	b2c0      	uxtb	r0, r0
9001d89e:	fb07 970a 	mla	r7, r7, sl, r9
9001d8a2:	fb00 500a 	mla	r0, r0, sl, r5
9001d8a6:	f10c 0501 	add.w	r5, ip, #1
9001d8aa:	b2bf      	uxth	r7, r7
9001d8ac:	b280      	uxth	r0, r0
9001d8ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d8b2:	f107 0901 	add.w	r9, r7, #1
9001d8b6:	1c45      	adds	r5, r0, #1
9001d8b8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d8bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d8c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d8c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d8c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d8cc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d8d0:	ea45 0c0c 	orr.w	ip, r5, ip
9001d8d4:	ea4c 0c09 	orr.w	ip, ip, r9
9001d8d8:	f824 c00b 	strh.w	ip, [r4, fp]
9001d8dc:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d8de:	f108 38ff 	add.w	r8, r8, #4294967295
9001d8e2:	4401      	add	r1, r0
9001d8e4:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d8e6:	4402      	add	r2, r0
9001d8e8:	e75e      	b.n	9001d7a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001d8ea:	b005      	add	sp, #20
9001d8ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d8f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d8f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8f4:	b085      	sub	sp, #20
9001d8f6:	4693      	mov	fp, r2
9001d8f8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d8fc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d8fe:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d900:	6870      	ldr	r0, [r6, #4]
9001d902:	9101      	str	r1, [sp, #4]
9001d904:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d908:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001d90c:	fb00 2404 	mla	r4, r0, r4, r2
9001d910:	6832      	ldr	r2, [r6, #0]
9001d912:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d916:	682a      	ldr	r2, [r5, #0]
9001d918:	9202      	str	r2, [sp, #8]
9001d91a:	9a01      	ldr	r2, [sp, #4]
9001d91c:	2a00      	cmp	r2, #0
9001d91e:	dc03      	bgt.n	9001d928 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d920:	f1bb 0f00 	cmp.w	fp, #0
9001d924:	f340 809a 	ble.w	9001da5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d928:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d92a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d92e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d932:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d934:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d938:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d93c:	2b00      	cmp	r3, #0
9001d93e:	dd0c      	ble.n	9001d95a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d940:	1406      	asrs	r6, r0, #16
9001d942:	d405      	bmi.n	9001d950 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d944:	454e      	cmp	r6, r9
9001d946:	da03      	bge.n	9001d950 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d948:	1416      	asrs	r6, r2, #16
9001d94a:	d401      	bmi.n	9001d950 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d94c:	4546      	cmp	r6, r8
9001d94e:	db05      	blt.n	9001d95c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d950:	4470      	add	r0, lr
9001d952:	4462      	add	r2, ip
9001d954:	3b01      	subs	r3, #1
9001d956:	3402      	adds	r4, #2
9001d958:	e7f0      	b.n	9001d93c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d95a:	d00f      	beq.n	9001d97c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001d95c:	1e5e      	subs	r6, r3, #1
9001d95e:	fb0e 0706 	mla	r7, lr, r6, r0
9001d962:	143f      	asrs	r7, r7, #16
9001d964:	d541      	bpl.n	9001d9ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001d966:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d96a:	4698      	mov	r8, r3
9001d96c:	9603      	str	r6, [sp, #12]
9001d96e:	f1b8 0f00 	cmp.w	r8, #0
9001d972:	dc56      	bgt.n	9001da22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001d974:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d978:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d97c:	9b01      	ldr	r3, [sp, #4]
9001d97e:	2b00      	cmp	r3, #0
9001d980:	dd6c      	ble.n	9001da5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d982:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d986:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d988:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d98c:	eeb0 6a62 	vmov.f32	s12, s5
9001d990:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d994:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d998:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d99c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d9a0:	eeb0 6a43 	vmov.f32	s12, s6
9001d9a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d9a8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d9ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d9b0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d9b4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d9b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d9bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d9c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d9c4:	ee12 2a90 	vmov	r2, s5
9001d9c8:	eef0 2a47 	vmov.f32	s5, s14
9001d9cc:	fb92 fef3 	sdiv	lr, r2, r3
9001d9d0:	ee13 2a10 	vmov	r2, s6
9001d9d4:	eeb0 3a67 	vmov.f32	s6, s15
9001d9d8:	fb92 fcf3 	sdiv	ip, r2, r3
9001d9dc:	9b01      	ldr	r3, [sp, #4]
9001d9de:	3b01      	subs	r3, #1
9001d9e0:	9301      	str	r3, [sp, #4]
9001d9e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d9e4:	bf08      	it	eq
9001d9e6:	465b      	moveq	r3, fp
9001d9e8:	e797      	b.n	9001d91a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d9ea:	454f      	cmp	r7, r9
9001d9ec:	dabb      	bge.n	9001d966 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d9ee:	fb0c 2606 	mla	r6, ip, r6, r2
9001d9f2:	1436      	asrs	r6, r6, #16
9001d9f4:	d4b7      	bmi.n	9001d966 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d9f6:	4546      	cmp	r6, r8
9001d9f8:	dab5      	bge.n	9001d966 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d9fa:	461e      	mov	r6, r3
9001d9fc:	46a0      	mov	r8, r4
9001d9fe:	2e00      	cmp	r6, #0
9001da00:	ddb8      	ble.n	9001d974 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001da02:	1417      	asrs	r7, r2, #16
9001da04:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001da08:	ea4f 4920 	mov.w	r9, r0, asr #16
9001da0c:	9902      	ldr	r1, [sp, #8]
9001da0e:	4470      	add	r0, lr
9001da10:	4462      	add	r2, ip
9001da12:	fb0a 9707 	mla	r7, sl, r7, r9
9001da16:	3e01      	subs	r6, #1
9001da18:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001da1c:	f828 7b02 	strh.w	r7, [r8], #2
9001da20:	e7ed      	b.n	9001d9fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001da22:	ea5f 4920 	movs.w	r9, r0, asr #16
9001da26:	d414      	bmi.n	9001da52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001da28:	68ae      	ldr	r6, [r5, #8]
9001da2a:	454e      	cmp	r6, r9
9001da2c:	dd11      	ble.n	9001da52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001da2e:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001da32:	d40e      	bmi.n	9001da52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001da34:	68ef      	ldr	r7, [r5, #12]
9001da36:	4557      	cmp	r7, sl
9001da38:	dd0b      	ble.n	9001da52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001da3a:	b236      	sxth	r6, r6
9001da3c:	f06f 0101 	mvn.w	r1, #1
9001da40:	9f02      	ldr	r7, [sp, #8]
9001da42:	fb0a 9606 	mla	r6, sl, r6, r9
9001da46:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001da4a:	fb01 f608 	mul.w	r6, r1, r8
9001da4e:	9903      	ldr	r1, [sp, #12]
9001da50:	538f      	strh	r7, [r1, r6]
9001da52:	4470      	add	r0, lr
9001da54:	4462      	add	r2, ip
9001da56:	f108 38ff 	add.w	r8, r8, #4294967295
9001da5a:	e788      	b.n	9001d96e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001da5c:	b005      	add	sp, #20
9001da5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001da62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001da62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001da66:	b087      	sub	sp, #28
9001da68:	468b      	mov	fp, r1
9001da6a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001da6e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001da70:	9203      	str	r2, [sp, #12]
9001da72:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001da76:	6841      	ldr	r1, [r0, #4]
9001da78:	9204      	str	r2, [sp, #16]
9001da7a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001da7e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001da82:	fb01 2505 	mla	r5, r1, r5, r2
9001da86:	6802      	ldr	r2, [r0, #0]
9001da88:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001da8c:	f8d9 2000 	ldr.w	r2, [r9]
9001da90:	9201      	str	r2, [sp, #4]
9001da92:	f1bb 0f00 	cmp.w	fp, #0
9001da96:	dc03      	bgt.n	9001daa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001da98:	9a03      	ldr	r2, [sp, #12]
9001da9a:	2a00      	cmp	r2, #0
9001da9c:	f340 8158 	ble.w	9001dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001daa0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001daa2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001daa6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001daaa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001daac:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001dab0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dab4:	2b00      	cmp	r3, #0
9001dab6:	dd0e      	ble.n	9001dad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001dab8:	1402      	asrs	r2, r0, #16
9001daba:	d405      	bmi.n	9001dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001dabc:	42ba      	cmp	r2, r7
9001dabe:	da03      	bge.n	9001dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001dac0:	140a      	asrs	r2, r1, #16
9001dac2:	d401      	bmi.n	9001dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001dac4:	42b2      	cmp	r2, r6
9001dac6:	db07      	blt.n	9001dad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001dac8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001daca:	3b01      	subs	r3, #1
9001dacc:	3502      	adds	r5, #2
9001dace:	4410      	add	r0, r2
9001dad0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dad2:	4411      	add	r1, r2
9001dad4:	e7ee      	b.n	9001dab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001dad6:	d017      	beq.n	9001db08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001dad8:	1e5a      	subs	r2, r3, #1
9001dada:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001dadc:	fb04 0402 	mla	r4, r4, r2, r0
9001dae0:	1424      	asrs	r4, r4, #16
9001dae2:	d409      	bmi.n	9001daf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dae4:	42bc      	cmp	r4, r7
9001dae6:	da07      	bge.n	9001daf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dae8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001daea:	fb04 1202 	mla	r2, r4, r2, r1
9001daee:	1412      	asrs	r2, r2, #16
9001daf0:	d402      	bmi.n	9001daf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001daf2:	42b2      	cmp	r2, r6
9001daf4:	f2c0 80bf 	blt.w	9001dc76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001daf8:	2700      	movs	r7, #0
9001dafa:	19da      	adds	r2, r3, r7
9001dafc:	2a00      	cmp	r2, #0
9001dafe:	dc3e      	bgt.n	9001db7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001db00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001db04:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001db08:	f1bb 0f00 	cmp.w	fp, #0
9001db0c:	f340 8120 	ble.w	9001dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001db10:	ee30 0a04 	vadd.f32	s0, s0, s8
9001db14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001db16:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001db1a:	f1bb 0b01 	subs.w	fp, fp, #1
9001db1e:	eeb0 6a62 	vmov.f32	s12, s5
9001db22:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001db26:	ee31 1a05 	vadd.f32	s2, s2, s10
9001db2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001db2e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001db32:	eeb0 6a43 	vmov.f32	s12, s6
9001db36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001db3a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001db3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001db42:	ee61 7a27 	vmul.f32	s15, s2, s15
9001db46:	ee77 2a62 	vsub.f32	s5, s14, s5
9001db4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001db4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001db52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001db56:	ee12 2a90 	vmov	r2, s5
9001db5a:	eef0 2a47 	vmov.f32	s5, s14
9001db5e:	fb92 f3f3 	sdiv	r3, r2, r3
9001db62:	ee13 2a10 	vmov	r2, s6
9001db66:	9313      	str	r3, [sp, #76]	@ 0x4c
9001db68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001db6a:	eeb0 3a67 	vmov.f32	s6, s15
9001db6e:	fb92 f3f3 	sdiv	r3, r2, r3
9001db72:	9a03      	ldr	r2, [sp, #12]
9001db74:	9314      	str	r3, [sp, #80]	@ 0x50
9001db76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001db78:	bf08      	it	eq
9001db7a:	4613      	moveq	r3, r2
9001db7c:	e789      	b.n	9001da92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001db7e:	1406      	asrs	r6, r0, #16
9001db80:	d42d      	bmi.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001db82:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001db86:	42b4      	cmp	r4, r6
9001db88:	dd29      	ble.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001db8a:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001db8e:	d426      	bmi.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001db90:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001db94:	4562      	cmp	r2, ip
9001db96:	dd22      	ble.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001db98:	b224      	sxth	r4, r4
9001db9a:	9a01      	ldr	r2, [sp, #4]
9001db9c:	fb0c 6404 	mla	r4, ip, r4, r6
9001dba0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001dba4:	0e22      	lsrs	r2, r4, #24
9001dba6:	d01a      	beq.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001dba8:	9e04      	ldr	r6, [sp, #16]
9001dbaa:	4372      	muls	r2, r6
9001dbac:	1c56      	adds	r6, r2, #1
9001dbae:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001dbb2:	0a26      	lsrs	r6, r4, #8
9001dbb4:	1212      	asrs	r2, r2, #8
9001dbb6:	9605      	str	r6, [sp, #20]
9001dbb8:	2aff      	cmp	r2, #255	@ 0xff
9001dbba:	d116      	bne.n	9001dbea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001dbbc:	f06f 0201 	mvn.w	r2, #1
9001dbc0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001dbc4:	fb02 fc07 	mul.w	ip, r2, r7
9001dbc8:	0962      	lsrs	r2, r4, #5
9001dbca:	f026 0607 	bic.w	r6, r6, #7
9001dbce:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001dbd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001dbd6:	4316      	orrs	r6, r2
9001dbd8:	4326      	orrs	r6, r4
9001dbda:	f825 600c 	strh.w	r6, [r5, ip]
9001dbde:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dbe0:	3f01      	subs	r7, #1
9001dbe2:	4410      	add	r0, r2
9001dbe4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dbe6:	4411      	add	r1, r2
9001dbe8:	e787      	b.n	9001dafa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001dbea:	f06f 0601 	mvn.w	r6, #1
9001dbee:	fa1f fa82 	uxth.w	sl, r2
9001dbf2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001dbf6:	43d2      	mvns	r2, r2
9001dbf8:	437e      	muls	r6, r7
9001dbfa:	b2e4      	uxtb	r4, r4
9001dbfc:	fb1c fc0a 	smulbb	ip, ip, sl
9001dc00:	b2d2      	uxtb	r2, r2
9001dc02:	f835 8006 	ldrh.w	r8, [r5, r6]
9001dc06:	fb14 f40a 	smulbb	r4, r4, sl
9001dc0a:	9602      	str	r6, [sp, #8]
9001dc0c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001dc10:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001dc14:	fb16 f60a 	smulbb	r6, r6, sl
9001dc18:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001dc1c:	fb0e ce02 	mla	lr, lr, r2, ip
9001dc20:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001dc24:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001dc28:	fa1f fe8e 	uxth.w	lr, lr
9001dc2c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001dc30:	fa5f f888 	uxtb.w	r8, r8
9001dc34:	fb0c 6c02 	mla	ip, ip, r2, r6
9001dc38:	fb08 4402 	mla	r4, r8, r2, r4
9001dc3c:	f10e 0201 	add.w	r2, lr, #1
9001dc40:	fa1f fc8c 	uxth.w	ip, ip
9001dc44:	b2a4      	uxth	r4, r4
9001dc46:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001dc4a:	9a02      	ldr	r2, [sp, #8]
9001dc4c:	1c66      	adds	r6, r4, #1
9001dc4e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001dc52:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001dc56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001dc5a:	ea46 0e0e 	orr.w	lr, r6, lr
9001dc5e:	f10c 0601 	add.w	r6, ip, #1
9001dc62:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001dc66:	0976      	lsrs	r6, r6, #5
9001dc68:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001dc6c:	ea4e 0e06 	orr.w	lr, lr, r6
9001dc70:	f825 e002 	strh.w	lr, [r5, r2]
9001dc74:	e7b3      	b.n	9001dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001dc76:	f04f 0800 	mov.w	r8, #0
9001dc7a:	eba3 0208 	sub.w	r2, r3, r8
9001dc7e:	2a00      	cmp	r2, #0
9001dc80:	f77f af3e 	ble.w	9001db00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001dc84:	1404      	asrs	r4, r0, #16
9001dc86:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001dc8a:	140a      	asrs	r2, r1, #16
9001dc8c:	fb06 4202 	mla	r2, r6, r2, r4
9001dc90:	9c01      	ldr	r4, [sp, #4]
9001dc92:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001dc96:	0e22      	lsrs	r2, r4, #24
9001dc98:	d015      	beq.n	9001dcc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001dc9a:	9e04      	ldr	r6, [sp, #16]
9001dc9c:	4372      	muls	r2, r6
9001dc9e:	1c56      	adds	r6, r2, #1
9001dca0:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001dca4:	0a26      	lsrs	r6, r4, #8
9001dca6:	1212      	asrs	r2, r2, #8
9001dca8:	2aff      	cmp	r2, #255	@ 0xff
9001dcaa:	d113      	bne.n	9001dcd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001dcac:	0962      	lsrs	r2, r4, #5
9001dcae:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001dcb2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001dcb6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001dcba:	f026 0607 	bic.w	r6, r6, #7
9001dcbe:	4316      	orrs	r6, r2
9001dcc0:	4326      	orrs	r6, r4
9001dcc2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001dcc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dcc8:	f108 0801 	add.w	r8, r8, #1
9001dccc:	4410      	add	r0, r2
9001dcce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dcd0:	4411      	add	r1, r2
9001dcd2:	e7d2      	b.n	9001dc7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001dcd4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001dcd8:	fa1f fa82 	uxth.w	sl, r2
9001dcdc:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001dce0:	43d2      	mvns	r2, r2
9001dce2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001dce6:	fb17 f70a 	smulbb	r7, r7, sl
9001dcea:	b2d2      	uxtb	r2, r2
9001dcec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dcf0:	b2e4      	uxtb	r4, r4
9001dcf2:	b2f6      	uxtb	r6, r6
9001dcf4:	fb0c 7c02 	mla	ip, ip, r2, r7
9001dcf8:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001dcfc:	fb14 f40a 	smulbb	r4, r4, sl
9001dd00:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dd04:	fa1f fc8c 	uxth.w	ip, ip
9001dd08:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001dd0c:	fb16 f60a 	smulbb	r6, r6, sl
9001dd10:	fa5f fe8e 	uxtb.w	lr, lr
9001dd14:	fb0e 4402 	mla	r4, lr, r2, r4
9001dd18:	fb07 6702 	mla	r7, r7, r2, r6
9001dd1c:	f10c 0201 	add.w	r2, ip, #1
9001dd20:	b2a4      	uxth	r4, r4
9001dd22:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001dd26:	1c66      	adds	r6, r4, #1
9001dd28:	b2bf      	uxth	r7, r7
9001dd2a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001dd2e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001dd32:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001dd36:	ea46 0c0c 	orr.w	ip, r6, ip
9001dd3a:	1c7e      	adds	r6, r7, #1
9001dd3c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001dd40:	0976      	lsrs	r6, r6, #5
9001dd42:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001dd46:	ea4c 0c06 	orr.w	ip, ip, r6
9001dd4a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001dd4e:	e7ba      	b.n	9001dcc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001dd50:	b007      	add	sp, #28
9001dd52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001dd58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001dd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dd5c:	b085      	sub	sp, #20
9001dd5e:	468b      	mov	fp, r1
9001dd60:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001dd64:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001dd66:	9203      	str	r2, [sp, #12]
9001dd68:	6841      	ldr	r1, [r0, #4]
9001dd6a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001dd6e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001dd72:	fb01 2404 	mla	r4, r1, r4, r2
9001dd76:	6802      	ldr	r2, [r0, #0]
9001dd78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dd7c:	f8d8 2000 	ldr.w	r2, [r8]
9001dd80:	9201      	str	r2, [sp, #4]
9001dd82:	f1bb 0f00 	cmp.w	fp, #0
9001dd86:	dc03      	bgt.n	9001dd90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001dd88:	9a03      	ldr	r2, [sp, #12]
9001dd8a:	2a00      	cmp	r2, #0
9001dd8c:	f340 814f 	ble.w	9001e02e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001dd90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001dd92:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001dd96:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dd9a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001dd9c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001dda0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001dda4:	2b00      	cmp	r3, #0
9001dda6:	dd0e      	ble.n	9001ddc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001dda8:	1408      	asrs	r0, r1, #16
9001ddaa:	d405      	bmi.n	9001ddb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ddac:	42b8      	cmp	r0, r7
9001ddae:	da03      	bge.n	9001ddb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ddb0:	1410      	asrs	r0, r2, #16
9001ddb2:	d401      	bmi.n	9001ddb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ddb4:	42b0      	cmp	r0, r6
9001ddb6:	db07      	blt.n	9001ddc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ddb8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ddba:	3b01      	subs	r3, #1
9001ddbc:	3402      	adds	r4, #2
9001ddbe:	4401      	add	r1, r0
9001ddc0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ddc2:	4402      	add	r2, r0
9001ddc4:	e7ee      	b.n	9001dda4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ddc6:	d017      	beq.n	9001ddf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ddc8:	1e58      	subs	r0, r3, #1
9001ddca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ddcc:	fb05 1500 	mla	r5, r5, r0, r1
9001ddd0:	142d      	asrs	r5, r5, #16
9001ddd2:	d409      	bmi.n	9001dde8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ddd4:	42bd      	cmp	r5, r7
9001ddd6:	da07      	bge.n	9001dde8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ddd8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ddda:	fb05 2000 	mla	r0, r5, r0, r2
9001ddde:	1400      	asrs	r0, r0, #16
9001dde0:	d402      	bmi.n	9001dde8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dde2:	42b0      	cmp	r0, r6
9001dde4:	f2c0 80ba 	blt.w	9001df5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001dde8:	2600      	movs	r6, #0
9001ddea:	1998      	adds	r0, r3, r6
9001ddec:	2800      	cmp	r0, #0
9001ddee:	dc3e      	bgt.n	9001de6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001ddf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ddf4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ddf8:	f1bb 0f00 	cmp.w	fp, #0
9001ddfc:	f340 8117 	ble.w	9001e02e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001de00:	ee30 0a04 	vadd.f32	s0, s0, s8
9001de04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de06:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001de0a:	f1bb 0b01 	subs.w	fp, fp, #1
9001de0e:	eeb0 6a62 	vmov.f32	s12, s5
9001de12:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001de16:	ee31 1a05 	vadd.f32	s2, s2, s10
9001de1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001de1e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001de22:	eeb0 6a43 	vmov.f32	s12, s6
9001de26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001de2a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001de2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001de32:	ee61 7a27 	vmul.f32	s15, s2, s15
9001de36:	ee77 2a62 	vsub.f32	s5, s14, s5
9001de3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001de3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001de42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001de46:	ee12 2a90 	vmov	r2, s5
9001de4a:	eef0 2a47 	vmov.f32	s5, s14
9001de4e:	fb92 f3f3 	sdiv	r3, r2, r3
9001de52:	ee13 2a10 	vmov	r2, s6
9001de56:	9311      	str	r3, [sp, #68]	@ 0x44
9001de58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de5a:	eeb0 3a67 	vmov.f32	s6, s15
9001de5e:	fb92 f3f3 	sdiv	r3, r2, r3
9001de62:	9a03      	ldr	r2, [sp, #12]
9001de64:	9312      	str	r3, [sp, #72]	@ 0x48
9001de66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de68:	bf08      	it	eq
9001de6a:	4613      	moveq	r3, r2
9001de6c:	e789      	b.n	9001dd82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001de6e:	140f      	asrs	r7, r1, #16
9001de70:	d424      	bmi.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001de72:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001de76:	42bd      	cmp	r5, r7
9001de78:	dd20      	ble.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001de7a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001de7e:	d41d      	bmi.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001de80:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001de84:	4560      	cmp	r0, ip
9001de86:	dd19      	ble.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001de88:	b22d      	sxth	r5, r5
9001de8a:	9801      	ldr	r0, [sp, #4]
9001de8c:	fb0c 7505 	mla	r5, ip, r5, r7
9001de90:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001de94:	0e07      	lsrs	r7, r0, #24
9001de96:	2fff      	cmp	r7, #255	@ 0xff
9001de98:	d116      	bne.n	9001dec8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001de9a:	f06f 0501 	mvn.w	r5, #1
9001de9e:	fb05 f706 	mul.w	r7, r5, r6
9001dea2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001dea6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001deaa:	0945      	lsrs	r5, r0, #5
9001deac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001deb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001deb4:	ea4c 0505 	orr.w	r5, ip, r5
9001deb8:	4305      	orrs	r5, r0
9001deba:	53e5      	strh	r5, [r4, r7]
9001debc:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001debe:	3e01      	subs	r6, #1
9001dec0:	4401      	add	r1, r0
9001dec2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dec4:	4402      	add	r2, r0
9001dec6:	e790      	b.n	9001ddea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001dec8:	b2fd      	uxtb	r5, r7
9001deca:	2f00      	cmp	r7, #0
9001decc:	d0f6      	beq.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dece:	f06f 0701 	mvn.w	r7, #1
9001ded2:	fa1f f985 	uxth.w	r9, r5
9001ded6:	43ed      	mvns	r5, r5
9001ded8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001dedc:	4377      	muls	r7, r6
9001dede:	fb1a fa09 	smulbb	sl, sl, r9
9001dee2:	b2ed      	uxtb	r5, r5
9001dee4:	f834 e007 	ldrh.w	lr, [r4, r7]
9001dee8:	9702      	str	r7, [sp, #8]
9001deea:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001deee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001def2:	fb17 f709 	smulbb	r7, r7, r9
9001def6:	b2c0      	uxtb	r0, r0
9001def8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001defc:	fb10 f009 	smulbb	r0, r0, r9
9001df00:	fb0c 7c05 	mla	ip, ip, r5, r7
9001df04:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001df08:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001df0c:	fa1f fc8c 	uxth.w	ip, ip
9001df10:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001df14:	fa5f fe8e 	uxtb.w	lr, lr
9001df18:	fb07 a705 	mla	r7, r7, r5, sl
9001df1c:	fb0e 0005 	mla	r0, lr, r5, r0
9001df20:	f10c 0501 	add.w	r5, ip, #1
9001df24:	b2bf      	uxth	r7, r7
9001df26:	b280      	uxth	r0, r0
9001df28:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001df2c:	f100 0a01 	add.w	sl, r0, #1
9001df30:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001df34:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001df38:	9802      	ldr	r0, [sp, #8]
9001df3a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001df3e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001df42:	f107 0a01 	add.w	sl, r7, #1
9001df46:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001df4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001df4e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001df52:	ea4c 0c0a 	orr.w	ip, ip, sl
9001df56:	f824 c000 	strh.w	ip, [r4, r0]
9001df5a:	e7af      	b.n	9001debc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001df5c:	f04f 0e00 	mov.w	lr, #0
9001df60:	eba3 000e 	sub.w	r0, r3, lr
9001df64:	2800      	cmp	r0, #0
9001df66:	f77f af43 	ble.w	9001ddf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001df6a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001df6e:	140d      	asrs	r5, r1, #16
9001df70:	1410      	asrs	r0, r2, #16
9001df72:	fb06 5000 	mla	r0, r6, r0, r5
9001df76:	9d01      	ldr	r5, [sp, #4]
9001df78:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001df7c:	0e2e      	lsrs	r6, r5, #24
9001df7e:	2eff      	cmp	r6, #255	@ 0xff
9001df80:	d112      	bne.n	9001dfa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001df82:	482c      	ldr	r0, [pc, #176]	@ (9001e034 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001df84:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001df88:	0968      	lsrs	r0, r5, #5
9001df8a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001df8e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001df92:	4330      	orrs	r0, r6
9001df94:	4328      	orrs	r0, r5
9001df96:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001df9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001df9c:	f10e 0e01 	add.w	lr, lr, #1
9001dfa0:	4401      	add	r1, r0
9001dfa2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dfa4:	4402      	add	r2, r0
9001dfa6:	e7db      	b.n	9001df60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001dfa8:	b2f0      	uxtb	r0, r6
9001dfaa:	2e00      	cmp	r6, #0
9001dfac:	d0f5      	beq.n	9001df9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001dfae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001dfb2:	fa1f f980 	uxth.w	r9, r0
9001dfb6:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dfba:	43c0      	mvns	r0, r0
9001dfbc:	ea4f 272c 	mov.w	r7, ip, asr #8
9001dfc0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dfc4:	fb16 f609 	smulbb	r6, r6, r9
9001dfc8:	b2c0      	uxtb	r0, r0
9001dfca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dfce:	b2ed      	uxtb	r5, r5
9001dfd0:	fb1a fa09 	smulbb	sl, sl, r9
9001dfd4:	fb07 6700 	mla	r7, r7, r0, r6
9001dfd8:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001dfdc:	fb15 f509 	smulbb	r5, r5, r9
9001dfe0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dfe4:	b2bf      	uxth	r7, r7
9001dfe6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dfea:	fa5f fc8c 	uxtb.w	ip, ip
9001dfee:	fb06 a600 	mla	r6, r6, r0, sl
9001dff2:	fb0c 5500 	mla	r5, ip, r0, r5
9001dff6:	1c78      	adds	r0, r7, #1
9001dff8:	b2b6      	uxth	r6, r6
9001dffa:	b2ad      	uxth	r5, r5
9001dffc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e000:	f105 0a01 	add.w	sl, r5, #1
9001e004:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e008:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e00c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e010:	ea4a 0707 	orr.w	r7, sl, r7
9001e014:	f106 0a01 	add.w	sl, r6, #1
9001e018:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e01c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e020:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e024:	ea47 070a 	orr.w	r7, r7, sl
9001e028:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001e02c:	e7b5      	b.n	9001df9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001e02e:	b005      	add	sp, #20
9001e030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e034:	fffff800 	.word	0xfffff800

9001e038 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e03c:	b087      	sub	sp, #28
9001e03e:	468b      	mov	fp, r1
9001e040:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e044:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e046:	9203      	str	r2, [sp, #12]
9001e048:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e04c:	6841      	ldr	r1, [r0, #4]
9001e04e:	9204      	str	r2, [sp, #16]
9001e050:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001e054:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001e058:	fb01 2404 	mla	r4, r1, r4, r2
9001e05c:	6802      	ldr	r2, [r0, #0]
9001e05e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e062:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001e066:	3201      	adds	r2, #1
9001e068:	f022 0201 	bic.w	r2, r2, #1
9001e06c:	9200      	str	r2, [sp, #0]
9001e06e:	f8d9 2000 	ldr.w	r2, [r9]
9001e072:	9201      	str	r2, [sp, #4]
9001e074:	f1bb 0f00 	cmp.w	fp, #0
9001e078:	dc03      	bgt.n	9001e082 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001e07a:	9a03      	ldr	r2, [sp, #12]
9001e07c:	2a00      	cmp	r2, #0
9001e07e:	f340 816a 	ble.w	9001e356 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001e082:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e084:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001e088:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e08c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e08e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001e092:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e096:	2b00      	cmp	r3, #0
9001e098:	dd0e      	ble.n	9001e0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001e09a:	1402      	asrs	r2, r0, #16
9001e09c:	d405      	bmi.n	9001e0aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e09e:	42ba      	cmp	r2, r7
9001e0a0:	da03      	bge.n	9001e0aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e0a2:	140a      	asrs	r2, r1, #16
9001e0a4:	d401      	bmi.n	9001e0aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e0a6:	42b2      	cmp	r2, r6
9001e0a8:	db07      	blt.n	9001e0ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001e0aa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e0ac:	3b01      	subs	r3, #1
9001e0ae:	3402      	adds	r4, #2
9001e0b0:	4410      	add	r0, r2
9001e0b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e0b4:	4411      	add	r1, r2
9001e0b6:	e7ee      	b.n	9001e096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001e0b8:	d017      	beq.n	9001e0ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001e0ba:	1e5a      	subs	r2, r3, #1
9001e0bc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001e0be:	fb05 0502 	mla	r5, r5, r2, r0
9001e0c2:	142d      	asrs	r5, r5, #16
9001e0c4:	d409      	bmi.n	9001e0da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e0c6:	42bd      	cmp	r5, r7
9001e0c8:	da07      	bge.n	9001e0da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e0ca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001e0cc:	fb05 1202 	mla	r2, r5, r2, r1
9001e0d0:	1412      	asrs	r2, r2, #16
9001e0d2:	d402      	bmi.n	9001e0da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e0d4:	42b2      	cmp	r2, r6
9001e0d6:	f2c0 80c8 	blt.w	9001e26a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001e0da:	2700      	movs	r7, #0
9001e0dc:	19da      	adds	r2, r3, r7
9001e0de:	2a00      	cmp	r2, #0
9001e0e0:	dc3e      	bgt.n	9001e160 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001e0e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e0e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e0ea:	f1bb 0f00 	cmp.w	fp, #0
9001e0ee:	f340 8132 	ble.w	9001e356 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001e0f2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e0f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e0f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e0fc:	f1bb 0b01 	subs.w	fp, fp, #1
9001e100:	eeb0 6a62 	vmov.f32	s12, s5
9001e104:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e108:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e10c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e110:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e114:	eeb0 6a43 	vmov.f32	s12, s6
9001e118:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e11c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e120:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e124:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e128:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e12c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e130:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e134:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e138:	ee12 2a90 	vmov	r2, s5
9001e13c:	eef0 2a47 	vmov.f32	s5, s14
9001e140:	fb92 f3f3 	sdiv	r3, r2, r3
9001e144:	ee13 2a10 	vmov	r2, s6
9001e148:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e14a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e14c:	eeb0 3a67 	vmov.f32	s6, s15
9001e150:	fb92 f3f3 	sdiv	r3, r2, r3
9001e154:	9a03      	ldr	r2, [sp, #12]
9001e156:	9314      	str	r3, [sp, #80]	@ 0x50
9001e158:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e15a:	bf08      	it	eq
9001e15c:	4613      	moveq	r3, r2
9001e15e:	e789      	b.n	9001e074 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001e160:	1405      	asrs	r5, r0, #16
9001e162:	d436      	bmi.n	9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e164:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001e168:	42aa      	cmp	r2, r5
9001e16a:	dd32      	ble.n	9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e16c:	140e      	asrs	r6, r1, #16
9001e16e:	d430      	bmi.n	9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e170:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001e174:	42b2      	cmp	r2, r6
9001e176:	dd2c      	ble.n	9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e178:	9a00      	ldr	r2, [sp, #0]
9001e17a:	fb06 5502 	mla	r5, r6, r2, r5
9001e17e:	9e01      	ldr	r6, [sp, #4]
9001e180:	086a      	lsrs	r2, r5, #1
9001e182:	5cb2      	ldrb	r2, [r6, r2]
9001e184:	07ee      	lsls	r6, r5, #31
9001e186:	bf54      	ite	pl
9001e188:	f002 020f 	andpl.w	r2, r2, #15
9001e18c:	1112      	asrmi	r2, r2, #4
9001e18e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e192:	b2d2      	uxtb	r2, r2
9001e194:	b1ea      	cbz	r2, 9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e196:	9d04      	ldr	r5, [sp, #16]
9001e198:	436a      	muls	r2, r5
9001e19a:	1c55      	adds	r5, r2, #1
9001e19c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001e1a0:	4d6e      	ldr	r5, [pc, #440]	@ (9001e35c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001e1a2:	1212      	asrs	r2, r2, #8
9001e1a4:	682d      	ldr	r5, [r5, #0]
9001e1a6:	2aff      	cmp	r2, #255	@ 0xff
9001e1a8:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001e1ac:	9605      	str	r6, [sp, #20]
9001e1ae:	d116      	bne.n	9001e1de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001e1b0:	f06f 0201 	mvn.w	r2, #1
9001e1b4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e1b8:	fb02 fc07 	mul.w	ip, r2, r7
9001e1bc:	096a      	lsrs	r2, r5, #5
9001e1be:	f026 0607 	bic.w	r6, r6, #7
9001e1c2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e1c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e1ca:	4316      	orrs	r6, r2
9001e1cc:	432e      	orrs	r6, r5
9001e1ce:	f824 600c 	strh.w	r6, [r4, ip]
9001e1d2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e1d4:	3f01      	subs	r7, #1
9001e1d6:	4410      	add	r0, r2
9001e1d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e1da:	4411      	add	r1, r2
9001e1dc:	e77e      	b.n	9001e0dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001e1de:	f06f 0601 	mvn.w	r6, #1
9001e1e2:	fa1f fa82 	uxth.w	sl, r2
9001e1e6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001e1ea:	43d2      	mvns	r2, r2
9001e1ec:	437e      	muls	r6, r7
9001e1ee:	b2ed      	uxtb	r5, r5
9001e1f0:	fb1c fc0a 	smulbb	ip, ip, sl
9001e1f4:	b2d2      	uxtb	r2, r2
9001e1f6:	f834 8006 	ldrh.w	r8, [r4, r6]
9001e1fa:	fb15 f50a 	smulbb	r5, r5, sl
9001e1fe:	9602      	str	r6, [sp, #8]
9001e200:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001e204:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001e208:	fb16 f60a 	smulbb	r6, r6, sl
9001e20c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e210:	fb0e ce02 	mla	lr, lr, r2, ip
9001e214:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001e218:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e21c:	fa1f fe8e 	uxth.w	lr, lr
9001e220:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e224:	fa5f f888 	uxtb.w	r8, r8
9001e228:	fb0c 6c02 	mla	ip, ip, r2, r6
9001e22c:	fb08 5502 	mla	r5, r8, r2, r5
9001e230:	f10e 0201 	add.w	r2, lr, #1
9001e234:	fa1f fc8c 	uxth.w	ip, ip
9001e238:	b2ad      	uxth	r5, r5
9001e23a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001e23e:	9a02      	ldr	r2, [sp, #8]
9001e240:	1c6e      	adds	r6, r5, #1
9001e242:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e246:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001e24a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e24e:	ea46 0e0e 	orr.w	lr, r6, lr
9001e252:	f10c 0601 	add.w	r6, ip, #1
9001e256:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001e25a:	0976      	lsrs	r6, r6, #5
9001e25c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e260:	ea4e 0e06 	orr.w	lr, lr, r6
9001e264:	f824 e002 	strh.w	lr, [r4, r2]
9001e268:	e7b3      	b.n	9001e1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e26a:	f04f 0800 	mov.w	r8, #0
9001e26e:	eba3 0208 	sub.w	r2, r3, r8
9001e272:	2a00      	cmp	r2, #0
9001e274:	f77f af35 	ble.w	9001e0e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001e278:	1402      	asrs	r2, r0, #16
9001e27a:	9e00      	ldr	r6, [sp, #0]
9001e27c:	140d      	asrs	r5, r1, #16
9001e27e:	fb06 2505 	mla	r5, r6, r5, r2
9001e282:	9e01      	ldr	r6, [sp, #4]
9001e284:	086a      	lsrs	r2, r5, #1
9001e286:	07ed      	lsls	r5, r5, #31
9001e288:	5cb2      	ldrb	r2, [r6, r2]
9001e28a:	bf54      	ite	pl
9001e28c:	f002 020f 	andpl.w	r2, r2, #15
9001e290:	1112      	asrmi	r2, r2, #4
9001e292:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e296:	b2d2      	uxtb	r2, r2
9001e298:	b1c2      	cbz	r2, 9001e2cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e29a:	9d04      	ldr	r5, [sp, #16]
9001e29c:	436a      	muls	r2, r5
9001e29e:	1c55      	adds	r5, r2, #1
9001e2a0:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001e2a4:	4d2d      	ldr	r5, [pc, #180]	@ (9001e35c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001e2a6:	1212      	asrs	r2, r2, #8
9001e2a8:	682e      	ldr	r6, [r5, #0]
9001e2aa:	2aff      	cmp	r2, #255	@ 0xff
9001e2ac:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001e2b0:	d113      	bne.n	9001e2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001e2b2:	0972      	lsrs	r2, r6, #5
9001e2b4:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001e2b8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e2bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e2c0:	f025 0507 	bic.w	r5, r5, #7
9001e2c4:	4315      	orrs	r5, r2
9001e2c6:	4335      	orrs	r5, r6
9001e2c8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001e2cc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e2ce:	f108 0801 	add.w	r8, r8, #1
9001e2d2:	4410      	add	r0, r2
9001e2d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e2d6:	4411      	add	r1, r2
9001e2d8:	e7c9      	b.n	9001e26e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e2da:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001e2de:	fa1f fa82 	uxth.w	sl, r2
9001e2e2:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001e2e6:	43d2      	mvns	r2, r2
9001e2e8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e2ec:	fb17 f70a 	smulbb	r7, r7, sl
9001e2f0:	b2d2      	uxtb	r2, r2
9001e2f2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e2f6:	b2f6      	uxtb	r6, r6
9001e2f8:	b2ed      	uxtb	r5, r5
9001e2fa:	fb0c 7c02 	mla	ip, ip, r2, r7
9001e2fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e302:	fb16 f60a 	smulbb	r6, r6, sl
9001e306:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e30a:	fa1f fc8c 	uxth.w	ip, ip
9001e30e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e312:	fb15 f50a 	smulbb	r5, r5, sl
9001e316:	fa5f fe8e 	uxtb.w	lr, lr
9001e31a:	fb0e 6602 	mla	r6, lr, r2, r6
9001e31e:	fb07 5702 	mla	r7, r7, r2, r5
9001e322:	f10c 0201 	add.w	r2, ip, #1
9001e326:	b2b6      	uxth	r6, r6
9001e328:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e32c:	1c75      	adds	r5, r6, #1
9001e32e:	b2bf      	uxth	r7, r7
9001e330:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e334:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001e338:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e33c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e340:	1c7d      	adds	r5, r7, #1
9001e342:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001e346:	096d      	lsrs	r5, r5, #5
9001e348:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e34c:	ea4c 0c05 	orr.w	ip, ip, r5
9001e350:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001e354:	e7ba      	b.n	9001e2cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e356:	b007      	add	sp, #28
9001e358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e35c:	240218dc 	.word	0x240218dc

9001e360 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e364:	b087      	sub	sp, #28
9001e366:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e36a:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001e674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001e36e:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e370:	9101      	str	r1, [sp, #4]
9001e372:	9205      	str	r2, [sp, #20]
9001e374:	6841      	ldr	r1, [r0, #4]
9001e376:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001e37a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001e37e:	fb01 2404 	mla	r4, r1, r4, r2
9001e382:	6802      	ldr	r2, [r0, #0]
9001e384:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e388:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e38c:	3201      	adds	r2, #1
9001e38e:	f022 0201 	bic.w	r2, r2, #1
9001e392:	9202      	str	r2, [sp, #8]
9001e394:	f8db 2000 	ldr.w	r2, [fp]
9001e398:	9203      	str	r2, [sp, #12]
9001e39a:	9a01      	ldr	r2, [sp, #4]
9001e39c:	2a00      	cmp	r2, #0
9001e39e:	dc03      	bgt.n	9001e3a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001e3a0:	9a05      	ldr	r2, [sp, #20]
9001e3a2:	2a00      	cmp	r2, #0
9001e3a4:	f340 8162 	ble.w	9001e66c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e3a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e3aa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001e3ae:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e3b2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e3b4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001e3b8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e3bc:	2b00      	cmp	r3, #0
9001e3be:	dd0e      	ble.n	9001e3de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e3c0:	1402      	asrs	r2, r0, #16
9001e3c2:	d405      	bmi.n	9001e3d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e3c4:	42ba      	cmp	r2, r7
9001e3c6:	da03      	bge.n	9001e3d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e3c8:	140a      	asrs	r2, r1, #16
9001e3ca:	d401      	bmi.n	9001e3d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e3cc:	42b2      	cmp	r2, r6
9001e3ce:	db07      	blt.n	9001e3e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001e3d0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e3d2:	3b01      	subs	r3, #1
9001e3d4:	3402      	adds	r4, #2
9001e3d6:	4410      	add	r0, r2
9001e3d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e3da:	4411      	add	r1, r2
9001e3dc:	e7ee      	b.n	9001e3bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001e3de:	d017      	beq.n	9001e410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001e3e0:	1e5a      	subs	r2, r3, #1
9001e3e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001e3e4:	fb05 0502 	mla	r5, r5, r2, r0
9001e3e8:	142d      	asrs	r5, r5, #16
9001e3ea:	d409      	bmi.n	9001e400 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e3ec:	42bd      	cmp	r5, r7
9001e3ee:	da07      	bge.n	9001e400 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e3f0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001e3f2:	fb05 1202 	mla	r2, r5, r2, r1
9001e3f6:	1412      	asrs	r2, r2, #16
9001e3f8:	d402      	bmi.n	9001e400 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e3fa:	42b2      	cmp	r2, r6
9001e3fc:	f2c0 80c3 	blt.w	9001e586 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001e400:	2500      	movs	r5, #0
9001e402:	195a      	adds	r2, r3, r5
9001e404:	2a00      	cmp	r2, #0
9001e406:	dc3f      	bgt.n	9001e488 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001e408:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e40c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e410:	9b01      	ldr	r3, [sp, #4]
9001e412:	2b00      	cmp	r3, #0
9001e414:	f340 812a 	ble.w	9001e66c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e418:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e41c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e41e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e422:	eeb0 6a62 	vmov.f32	s12, s5
9001e426:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e42a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e42e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e432:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e436:	eeb0 6a43 	vmov.f32	s12, s6
9001e43a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e43e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e442:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e446:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e44a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e44e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e452:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e456:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e45a:	ee12 2a90 	vmov	r2, s5
9001e45e:	eef0 2a47 	vmov.f32	s5, s14
9001e462:	fb92 f3f3 	sdiv	r3, r2, r3
9001e466:	ee13 2a10 	vmov	r2, s6
9001e46a:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e46c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e46e:	eeb0 3a67 	vmov.f32	s6, s15
9001e472:	fb92 f3f3 	sdiv	r3, r2, r3
9001e476:	9314      	str	r3, [sp, #80]	@ 0x50
9001e478:	9b01      	ldr	r3, [sp, #4]
9001e47a:	9a05      	ldr	r2, [sp, #20]
9001e47c:	3b01      	subs	r3, #1
9001e47e:	9301      	str	r3, [sp, #4]
9001e480:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e482:	bf08      	it	eq
9001e484:	4613      	moveq	r3, r2
9001e486:	e788      	b.n	9001e39a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001e488:	1406      	asrs	r6, r0, #16
9001e48a:	d42c      	bmi.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e48c:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e490:	42b2      	cmp	r2, r6
9001e492:	dd28      	ble.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e494:	140f      	asrs	r7, r1, #16
9001e496:	d426      	bmi.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e498:	f8db 200c 	ldr.w	r2, [fp, #12]
9001e49c:	42ba      	cmp	r2, r7
9001e49e:	dd22      	ble.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e4a0:	9a02      	ldr	r2, [sp, #8]
9001e4a2:	fb07 6602 	mla	r6, r7, r2, r6
9001e4a6:	9f03      	ldr	r7, [sp, #12]
9001e4a8:	0872      	lsrs	r2, r6, #1
9001e4aa:	07f6      	lsls	r6, r6, #31
9001e4ac:	5cba      	ldrb	r2, [r7, r2]
9001e4ae:	bf54      	ite	pl
9001e4b0:	f002 020f 	andpl.w	r2, r2, #15
9001e4b4:	1112      	asrmi	r2, r2, #4
9001e4b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e4ba:	b2d2      	uxtb	r2, r2
9001e4bc:	2aff      	cmp	r2, #255	@ 0xff
9001e4be:	d118      	bne.n	9001e4f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001e4c0:	f06f 0601 	mvn.w	r6, #1
9001e4c4:	f8d8 2000 	ldr.w	r2, [r8]
9001e4c8:	fb06 f705 	mul.w	r7, r6, r5
9001e4cc:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001e4d0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001e4d4:	0956      	lsrs	r6, r2, #5
9001e4d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e4da:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e4de:	ea4c 0606 	orr.w	r6, ip, r6
9001e4e2:	4316      	orrs	r6, r2
9001e4e4:	53e6      	strh	r6, [r4, r7]
9001e4e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e4e8:	3d01      	subs	r5, #1
9001e4ea:	4410      	add	r0, r2
9001e4ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e4ee:	4411      	add	r1, r2
9001e4f0:	e787      	b.n	9001e402 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e4f2:	2a00      	cmp	r2, #0
9001e4f4:	d0f7      	beq.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e4f6:	f06f 0601 	mvn.w	r6, #1
9001e4fa:	f8d8 c000 	ldr.w	ip, [r8]
9001e4fe:	fa1f f982 	uxth.w	r9, r2
9001e502:	43d2      	mvns	r2, r2
9001e504:	436e      	muls	r6, r5
9001e506:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001e50a:	b2d2      	uxtb	r2, r2
9001e50c:	f834 e006 	ldrh.w	lr, [r4, r6]
9001e510:	fb1a fa09 	smulbb	sl, sl, r9
9001e514:	9604      	str	r6, [sp, #16]
9001e516:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001e51a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001e51e:	fb16 f609 	smulbb	r6, r6, r9
9001e522:	fa5f fc8c 	uxtb.w	ip, ip
9001e526:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e52a:	fb1c fc09 	smulbb	ip, ip, r9
9001e52e:	fb07 6702 	mla	r7, r7, r2, r6
9001e532:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e536:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e53a:	b2bf      	uxth	r7, r7
9001e53c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e540:	fa5f fe8e 	uxtb.w	lr, lr
9001e544:	fb06 a602 	mla	r6, r6, r2, sl
9001e548:	fb0e cc02 	mla	ip, lr, r2, ip
9001e54c:	1c7a      	adds	r2, r7, #1
9001e54e:	b2b6      	uxth	r6, r6
9001e550:	fa1f fc8c 	uxth.w	ip, ip
9001e554:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e558:	9a04      	ldr	r2, [sp, #16]
9001e55a:	f10c 0a01 	add.w	sl, ip, #1
9001e55e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e562:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001e566:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e56a:	ea4a 0707 	orr.w	r7, sl, r7
9001e56e:	f106 0a01 	add.w	sl, r6, #1
9001e572:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e576:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e57a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e57e:	ea47 070a 	orr.w	r7, r7, sl
9001e582:	52a7      	strh	r7, [r4, r2]
9001e584:	e7af      	b.n	9001e4e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e586:	f04f 0e00 	mov.w	lr, #0
9001e58a:	eba3 020e 	sub.w	r2, r3, lr
9001e58e:	2a00      	cmp	r2, #0
9001e590:	f77f af3a 	ble.w	9001e408 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001e594:	1402      	asrs	r2, r0, #16
9001e596:	9e02      	ldr	r6, [sp, #8]
9001e598:	140d      	asrs	r5, r1, #16
9001e59a:	fb06 2505 	mla	r5, r6, r5, r2
9001e59e:	9e03      	ldr	r6, [sp, #12]
9001e5a0:	086a      	lsrs	r2, r5, #1
9001e5a2:	07ed      	lsls	r5, r5, #31
9001e5a4:	5cb2      	ldrb	r2, [r6, r2]
9001e5a6:	bf54      	ite	pl
9001e5a8:	f002 020f 	andpl.w	r2, r2, #15
9001e5ac:	1112      	asrmi	r2, r2, #4
9001e5ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e5b2:	b2d2      	uxtb	r2, r2
9001e5b4:	2aff      	cmp	r2, #255	@ 0xff
9001e5b6:	d115      	bne.n	9001e5e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001e5b8:	f8d8 5000 	ldr.w	r5, [r8]
9001e5bc:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001e5c0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001e5c4:	096a      	lsrs	r2, r5, #5
9001e5c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e5ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e5ce:	4332      	orrs	r2, r6
9001e5d0:	432a      	orrs	r2, r5
9001e5d2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001e5d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e5d8:	f10e 0e01 	add.w	lr, lr, #1
9001e5dc:	4410      	add	r0, r2
9001e5de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e5e0:	4411      	add	r1, r2
9001e5e2:	e7d2      	b.n	9001e58a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e5e4:	2a00      	cmp	r2, #0
9001e5e6:	d0f6      	beq.n	9001e5d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e5e8:	f8d8 7000 	ldr.w	r7, [r8]
9001e5ec:	fa1f f982 	uxth.w	r9, r2
9001e5f0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001e5f4:	43d2      	mvns	r2, r2
9001e5f6:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001e5fa:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001e5fe:	ea4f 262c 	mov.w	r6, ip, asr #8
9001e602:	fb15 f509 	smulbb	r5, r5, r9
9001e606:	b2d2      	uxtb	r2, r2
9001e608:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e60c:	b2ff      	uxtb	r7, r7
9001e60e:	fb1a fa09 	smulbb	sl, sl, r9
9001e612:	fb06 5602 	mla	r6, r6, r2, r5
9001e616:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e61a:	fb17 f709 	smulbb	r7, r7, r9
9001e61e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e622:	b2b6      	uxth	r6, r6
9001e624:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e628:	fa5f fc8c 	uxtb.w	ip, ip
9001e62c:	fb05 a502 	mla	r5, r5, r2, sl
9001e630:	fb0c 7702 	mla	r7, ip, r2, r7
9001e634:	1c72      	adds	r2, r6, #1
9001e636:	b2ad      	uxth	r5, r5
9001e638:	b2bf      	uxth	r7, r7
9001e63a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001e63e:	f107 0a01 	add.w	sl, r7, #1
9001e642:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e646:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e64a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e64e:	ea4a 0606 	orr.w	r6, sl, r6
9001e652:	f105 0a01 	add.w	sl, r5, #1
9001e656:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e65a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e65e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e662:	ea46 060a 	orr.w	r6, r6, sl
9001e666:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001e66a:	e7b4      	b.n	9001e5d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e66c:	b007      	add	sp, #28
9001e66e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e672:	bf00      	nop
9001e674:	240218dc 	.word	0x240218dc

9001e678 <_ZN8touchgfx8LCD16bppD1Ev>:
9001e678:	4770      	bx	lr

9001e67a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001e67a:	4770      	bx	lr

9001e67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001e67c:	4770      	bx	lr

9001e67e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001e67e:	4770      	bx	lr

9001e680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001e680:	4770      	bx	lr

9001e682 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001e682:	4770      	bx	lr

9001e684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001e684:	4770      	bx	lr

9001e686 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001e686:	4770      	bx	lr

9001e688 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001e688:	4770      	bx	lr

9001e68a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e68a:	4770      	bx	lr

9001e68c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e68c:	4770      	bx	lr

9001e68e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e68e:	4770      	bx	lr

9001e690 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e690:	4770      	bx	lr

9001e692 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e692:	4770      	bx	lr

9001e694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e694:	4770      	bx	lr

9001e696 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e696:	4770      	bx	lr

9001e698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e698:	4770      	bx	lr

9001e69a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e69a:	4770      	bx	lr

9001e69c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e69c:	4770      	bx	lr

9001e69e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e69e:	4770      	bx	lr

9001e6a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e6a0:	4770      	bx	lr

9001e6a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e6a2:	4770      	bx	lr

9001e6a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e6a4:	4770      	bx	lr

9001e6a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e6a6:	4770      	bx	lr

9001e6a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e6a8:	4770      	bx	lr

9001e6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e6aa:	4770      	bx	lr

9001e6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001e6ac:	4770      	bx	lr

9001e6ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e6ae:	4770      	bx	lr

9001e6b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001e6b0:	4770      	bx	lr

9001e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e6b2:	4770      	bx	lr

9001e6b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e6b4:	4770      	bx	lr

9001e6b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e6b6:	4770      	bx	lr

9001e6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e6b8:	4770      	bx	lr

9001e6ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001e6ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e6be:	b088      	sub	sp, #32
9001e6c0:	4606      	mov	r6, r0
9001e6c2:	4688      	mov	r8, r1
9001e6c4:	4691      	mov	r9, r2
9001e6c6:	ac08      	add	r4, sp, #32
9001e6c8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001e6cc:	4620      	mov	r0, r4
9001e6ce:	f7fd fc33 	bl	9001bf38 <_ZNK8touchgfx6Bitmap7getDataEv>
9001e6d2:	6833      	ldr	r3, [r6, #0]
9001e6d4:	4605      	mov	r5, r0
9001e6d6:	4620      	mov	r0, r4
9001e6d8:	699f      	ldr	r7, [r3, #24]
9001e6da:	f7fd fb3b 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001e6de:	4682      	mov	sl, r0
9001e6e0:	4620      	mov	r0, r4
9001e6e2:	f7fd fb6b 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
9001e6e6:	9500      	str	r5, [sp, #0]
9001e6e8:	464b      	mov	r3, r9
9001e6ea:	4642      	mov	r2, r8
9001e6ec:	4631      	mov	r1, r6
9001e6ee:	e9cd a001 	strd	sl, r0, [sp, #4]
9001e6f2:	a806      	add	r0, sp, #24
9001e6f4:	47b8      	blx	r7
9001e6f6:	4628      	mov	r0, r5
9001e6f8:	b008      	add	sp, #32
9001e6fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001e700 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001e700:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001e704:	2300      	movs	r3, #0
9001e706:	9300      	str	r3, [sp, #0]
9001e708:	4b3d      	ldr	r3, [pc, #244]	@ (9001e800 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001e70a:	781b      	ldrb	r3, [r3, #0]
9001e70c:	2b00      	cmp	r3, #0
9001e70e:	d137      	bne.n	9001e780 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001e710:	4a3c      	ldr	r2, [pc, #240]	@ (9001e804 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e712:	f9b2 2000 	ldrsh.w	r2, [r2]
9001e716:	f8ad 2004 	strh.w	r2, [sp, #4]
9001e71a:	2b00      	cmp	r3, #0
9001e71c:	d132      	bne.n	9001e784 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001e71e:	4b3a      	ldr	r3, [pc, #232]	@ (9001e808 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e720:	f9b3 3000 	ldrsh.w	r3, [r3]
9001e724:	ac02      	add	r4, sp, #8
9001e726:	6808      	ldr	r0, [r1, #0]
9001e728:	f8ad 3006 	strh.w	r3, [sp, #6]
9001e72c:	ab02      	add	r3, sp, #8
9001e72e:	6849      	ldr	r1, [r1, #4]
9001e730:	4d36      	ldr	r5, [pc, #216]	@ (9001e80c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001e732:	c303      	stmia	r3!, {r0, r1}
9001e734:	4669      	mov	r1, sp
9001e736:	4620      	mov	r0, r4
9001e738:	f7f9 fba4 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e73c:	4668      	mov	r0, sp
9001e73e:	f7f9 fb5d 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e742:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001e746:	f8bd 2000 	ldrh.w	r2, [sp]
9001e74a:	462f      	mov	r7, r5
9001e74c:	6828      	ldr	r0, [r5, #0]
9001e74e:	4413      	add	r3, r2
9001e750:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e754:	f8ad 3008 	strh.w	r3, [sp, #8]
9001e758:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001e75c:	4413      	add	r3, r2
9001e75e:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e762:	6803      	ldr	r3, [r0, #0]
9001e764:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001e766:	4798      	blx	r3
9001e768:	f010 0f01 	tst.w	r0, #1
9001e76c:	d00c      	beq.n	9001e788 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001e76e:	6828      	ldr	r0, [r5, #0]
9001e770:	6803      	ldr	r3, [r0, #0]
9001e772:	e894 0006 	ldmia.w	r4, {r1, r2}
9001e776:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001e778:	4798      	blx	r3
9001e77a:	b004      	add	sp, #16
9001e77c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e780:	4a21      	ldr	r2, [pc, #132]	@ (9001e808 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e782:	e7c6      	b.n	9001e712 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001e784:	4b1f      	ldr	r3, [pc, #124]	@ (9001e804 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e786:	e7cb      	b.n	9001e720 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001e788:	6838      	ldr	r0, [r7, #0]
9001e78a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001e78e:	6803      	ldr	r3, [r0, #0]
9001e790:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001e794:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001e798:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001e79a:	4798      	blx	r3
9001e79c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001e7a0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e7a4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001e7a8:	fb16 3602 	smlabb	r6, r6, r2, r3
9001e7ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e7b0:	6838      	ldr	r0, [r7, #0]
9001e7b2:	6803      	ldr	r3, [r0, #0]
9001e7b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e7b6:	4798      	blx	r3
9001e7b8:	4a12      	ldr	r2, [pc, #72]	@ (9001e804 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e7ba:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001e7be:	8813      	ldrh	r3, [r2, #0]
9001e7c0:	4691      	mov	r9, r2
9001e7c2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e7c6:	435d      	muls	r5, r3
9001e7c8:	fb03 1404 	mla	r4, r3, r4, r1
9001e7cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e7d0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e7d4:	6838      	ldr	r0, [r7, #0]
9001e7d6:	42ac      	cmp	r4, r5
9001e7d8:	6803      	ldr	r3, [r0, #0]
9001e7da:	d20e      	bcs.n	9001e7fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001e7dc:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001e7e0:	4632      	mov	r2, r6
9001e7e2:	4643      	mov	r3, r8
9001e7e4:	4621      	mov	r1, r4
9001e7e6:	47d0      	blx	sl
9001e7e8:	f8b9 3000 	ldrh.w	r3, [r9]
9001e7ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e7f0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001e7f4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e7f8:	e7ec      	b.n	9001e7d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001e7fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e7fc:	4798      	blx	r3
9001e7fe:	e7bc      	b.n	9001e77a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001e800:	240218c4 	.word	0x240218c4
9001e804:	240218c6 	.word	0x240218c6
9001e808:	240218c8 	.word	0x240218c8
9001e80c:	240218cc 	.word	0x240218cc

9001e810 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001e810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e814:	b08b      	sub	sp, #44	@ 0x2c
9001e816:	460f      	mov	r7, r1
9001e818:	4616      	mov	r6, r2
9001e81a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001e81e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001e822:	f1bb 0f00 	cmp.w	fp, #0
9001e826:	d04a      	beq.n	9001e8be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e828:	6810      	ldr	r0, [r2, #0]
9001e82a:	ad06      	add	r5, sp, #24
9001e82c:	6851      	ldr	r1, [r2, #4]
9001e82e:	c503      	stmia	r5!, {r0, r1}
9001e830:	6818      	ldr	r0, [r3, #0]
9001e832:	ad08      	add	r5, sp, #32
9001e834:	6859      	ldr	r1, [r3, #4]
9001e836:	c503      	stmia	r5!, {r0, r1}
9001e838:	a806      	add	r0, sp, #24
9001e83a:	f7f9 fadf 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e83e:	4631      	mov	r1, r6
9001e840:	a808      	add	r0, sp, #32
9001e842:	f7f9 fb1f 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e846:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001e84a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001e84e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001e852:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001e856:	fb16 2103 	smlabb	r1, r6, r3, r2
9001e85a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001e85e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001e862:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001e866:	4f5f      	ldr	r7, [pc, #380]	@ (9001e9e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e868:	440a      	add	r2, r1
9001e86a:	6838      	ldr	r0, [r7, #0]
9001e86c:	46b9      	mov	r9, r7
9001e86e:	f8ad 2020 	strh.w	r2, [sp, #32]
9001e872:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001e876:	4413      	add	r3, r2
9001e878:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001e87c:	6803      	ldr	r3, [r0, #0]
9001e87e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001e880:	4798      	blx	r3
9001e882:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001e886:	d11d      	bne.n	9001e8c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001e888:	b9fc      	cbnz	r4, 9001e8ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e88a:	f010 0f01 	tst.w	r0, #1
9001e88e:	d01c      	beq.n	9001e8ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e890:	f8d9 0000 	ldr.w	r0, [r9]
9001e894:	2700      	movs	r7, #0
9001e896:	b2ad      	uxth	r5, r5
9001e898:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001e89c:	6801      	ldr	r1, [r0, #0]
9001e89e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001e8a2:	f8cd b00c 	str.w	fp, [sp, #12]
9001e8a6:	9501      	str	r5, [sp, #4]
9001e8a8:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001e8ac:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001e8b0:	9402      	str	r4, [sp, #8]
9001e8b2:	fa1f f488 	uxth.w	r4, r8
9001e8b6:	9400      	str	r4, [sp, #0]
9001e8b8:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001e8ba:	4631      	mov	r1, r6
9001e8bc:	47a0      	blx	r4
9001e8be:	b00b      	add	sp, #44	@ 0x2c
9001e8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e8c4:	f010 0f04 	tst.w	r0, #4
9001e8c8:	e7e1      	b.n	9001e88e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001e8ca:	f8d9 0000 	ldr.w	r0, [r9]
9001e8ce:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001e8d2:	6803      	ldr	r3, [r0, #0]
9001e8d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e8d6:	4798      	blx	r3
9001e8d8:	4b43      	ldr	r3, [pc, #268]	@ (9001e9e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001e8da:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001e8de:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001e8e2:	881a      	ldrh	r2, [r3, #0]
9001e8e4:	469a      	mov	sl, r3
9001e8e6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001e8ea:	fb05 f502 	mul.w	r5, r5, r2
9001e8ee:	fb02 1404 	mla	r4, r2, r4, r1
9001e8f2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e8f6:	d059      	beq.n	9001e9ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001e8f8:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001e8fc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e900:	fa1f f28b 	uxth.w	r2, fp
9001e904:	469e      	mov	lr, r3
9001e906:	fa1f f989 	uxth.w	r9, r9
9001e90a:	42ac      	cmp	r4, r5
9001e90c:	d264      	bcs.n	9001e9d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e90e:	eb04 0a07 	add.w	sl, r4, r7
9001e912:	4554      	cmp	r4, sl
9001e914:	d23d      	bcs.n	9001e992 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001e916:	8821      	ldrh	r1, [r4, #0]
9001e918:	f836 3b02 	ldrh.w	r3, [r6], #2
9001e91c:	1208      	asrs	r0, r1, #8
9001e91e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e922:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e926:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001e92a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e92e:	00c9      	lsls	r1, r1, #3
9001e930:	fb10 f009 	smulbb	r0, r0, r9
9001e934:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001e938:	b2c9      	uxtb	r1, r1
9001e93a:	fb0c 0c02 	mla	ip, ip, r2, r0
9001e93e:	10d8      	asrs	r0, r3, #3
9001e940:	fb1b fb09 	smulbb	fp, fp, r9
9001e944:	00db      	lsls	r3, r3, #3
9001e946:	fa1f fc8c 	uxth.w	ip, ip
9001e94a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001e94e:	fb11 f109 	smulbb	r1, r1, r9
9001e952:	b2db      	uxtb	r3, r3
9001e954:	fb00 b002 	mla	r0, r0, r2, fp
9001e958:	f10c 0b01 	add.w	fp, ip, #1
9001e95c:	fb03 1302 	mla	r3, r3, r2, r1
9001e960:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001e964:	b29b      	uxth	r3, r3
9001e966:	b280      	uxth	r0, r0
9001e968:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001e96c:	f103 0c01 	add.w	ip, r3, #1
9001e970:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e974:	1c43      	adds	r3, r0, #1
9001e976:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e97a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e97e:	0940      	lsrs	r0, r0, #5
9001e980:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e984:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001e988:	ea4c 0c00 	orr.w	ip, ip, r0
9001e98c:	f824 cb02 	strh.w	ip, [r4], #2
9001e990:	e7bf      	b.n	9001e912 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e992:	f8be 3000 	ldrh.w	r3, [lr]
9001e996:	eba3 0308 	sub.w	r3, r3, r8
9001e99a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e99e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e9a2:	eba3 0308 	sub.w	r3, r3, r8
9001e9a6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e9aa:	e7ae      	b.n	9001e90a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e9ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e9b0:	f8d9 0000 	ldr.w	r0, [r9]
9001e9b4:	42ac      	cmp	r4, r5
9001e9b6:	6803      	ldr	r3, [r0, #0]
9001e9b8:	d20e      	bcs.n	9001e9d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e9ba:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001e9be:	4632      	mov	r2, r6
9001e9c0:	463b      	mov	r3, r7
9001e9c2:	4621      	mov	r1, r4
9001e9c4:	47c0      	blx	r8
9001e9c6:	f8ba 3000 	ldrh.w	r3, [sl]
9001e9ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e9ce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e9d2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e9d6:	e7eb      	b.n	9001e9b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e9d8:	4b02      	ldr	r3, [pc, #8]	@ (9001e9e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e9da:	6818      	ldr	r0, [r3, #0]
9001e9dc:	6803      	ldr	r3, [r0, #0]
9001e9de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e9e0:	4798      	blx	r3
9001e9e2:	e76c      	b.n	9001e8be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e9e4:	240218cc 	.word	0x240218cc
9001e9e8:	240218c6 	.word	0x240218c6

9001e9ec <_ZN8touchgfx8LCD16bppD0Ev>:
9001e9ec:	b510      	push	{r4, lr}
9001e9ee:	4604      	mov	r4, r0
9001e9f0:	218c      	movs	r1, #140	@ 0x8c
9001e9f2:	f00c fa5d 	bl	9002aeb0 <_ZdlPvj>
9001e9f6:	4620      	mov	r0, r4
9001e9f8:	bd10      	pop	{r4, pc}

9001e9fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e9fa:	b510      	push	{r4, lr}
9001e9fc:	4604      	mov	r4, r0
9001e9fe:	2104      	movs	r1, #4
9001ea00:	f00c fa56 	bl	9002aeb0 <_ZdlPvj>
9001ea04:	4620      	mov	r0, r4
9001ea06:	bd10      	pop	{r4, pc}

9001ea08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001ea08:	b510      	push	{r4, lr}
9001ea0a:	4604      	mov	r4, r0
9001ea0c:	2104      	movs	r1, #4
9001ea0e:	f00c fa4f 	bl	9002aeb0 <_ZdlPvj>
9001ea12:	4620      	mov	r0, r4
9001ea14:	bd10      	pop	{r4, pc}

9001ea16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001ea16:	b510      	push	{r4, lr}
9001ea18:	4604      	mov	r4, r0
9001ea1a:	f640 0144 	movw	r1, #2116	@ 0x844
9001ea1e:	f00c fa47 	bl	9002aeb0 <_ZdlPvj>
9001ea22:	4620      	mov	r0, r4
9001ea24:	bd10      	pop	{r4, pc}

9001ea26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001ea26:	b510      	push	{r4, lr}
9001ea28:	4604      	mov	r4, r0
9001ea2a:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001ea2e:	f00c fa3f 	bl	9002aeb0 <_ZdlPvj>
9001ea32:	4620      	mov	r0, r4
9001ea34:	bd10      	pop	{r4, pc}

9001ea36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ea36:	b510      	push	{r4, lr}
9001ea38:	4604      	mov	r4, r0
9001ea3a:	2104      	movs	r1, #4
9001ea3c:	f00c fa38 	bl	9002aeb0 <_ZdlPvj>
9001ea40:	4620      	mov	r0, r4
9001ea42:	bd10      	pop	{r4, pc}

9001ea44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ea44:	b510      	push	{r4, lr}
9001ea46:	4604      	mov	r4, r0
9001ea48:	2104      	movs	r1, #4
9001ea4a:	f00c fa31 	bl	9002aeb0 <_ZdlPvj>
9001ea4e:	4620      	mov	r0, r4
9001ea50:	bd10      	pop	{r4, pc}

9001ea52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ea52:	b510      	push	{r4, lr}
9001ea54:	4604      	mov	r4, r0
9001ea56:	2104      	movs	r1, #4
9001ea58:	f00c fa2a 	bl	9002aeb0 <_ZdlPvj>
9001ea5c:	4620      	mov	r0, r4
9001ea5e:	bd10      	pop	{r4, pc}

9001ea60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ea60:	b510      	push	{r4, lr}
9001ea62:	4604      	mov	r4, r0
9001ea64:	2104      	movs	r1, #4
9001ea66:	f00c fa23 	bl	9002aeb0 <_ZdlPvj>
9001ea6a:	4620      	mov	r0, r4
9001ea6c:	bd10      	pop	{r4, pc}

9001ea6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ea6e:	b510      	push	{r4, lr}
9001ea70:	4604      	mov	r4, r0
9001ea72:	2104      	movs	r1, #4
9001ea74:	f00c fa1c 	bl	9002aeb0 <_ZdlPvj>
9001ea78:	4620      	mov	r0, r4
9001ea7a:	bd10      	pop	{r4, pc}

9001ea7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001ea7c:	b510      	push	{r4, lr}
9001ea7e:	4604      	mov	r4, r0
9001ea80:	2104      	movs	r1, #4
9001ea82:	f00c fa15 	bl	9002aeb0 <_ZdlPvj>
9001ea86:	4620      	mov	r0, r4
9001ea88:	bd10      	pop	{r4, pc}

9001ea8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ea8a:	b510      	push	{r4, lr}
9001ea8c:	4604      	mov	r4, r0
9001ea8e:	2104      	movs	r1, #4
9001ea90:	f00c fa0e 	bl	9002aeb0 <_ZdlPvj>
9001ea94:	4620      	mov	r0, r4
9001ea96:	bd10      	pop	{r4, pc}

9001ea98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001ea98:	b510      	push	{r4, lr}
9001ea9a:	4604      	mov	r4, r0
9001ea9c:	2104      	movs	r1, #4
9001ea9e:	f00c fa07 	bl	9002aeb0 <_ZdlPvj>
9001eaa2:	4620      	mov	r0, r4
9001eaa4:	bd10      	pop	{r4, pc}

9001eaa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001eaa6:	b510      	push	{r4, lr}
9001eaa8:	4604      	mov	r4, r0
9001eaaa:	2104      	movs	r1, #4
9001eaac:	f00c fa00 	bl	9002aeb0 <_ZdlPvj>
9001eab0:	4620      	mov	r0, r4
9001eab2:	bd10      	pop	{r4, pc}

9001eab4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001eab4:	b510      	push	{r4, lr}
9001eab6:	4604      	mov	r4, r0
9001eab8:	2104      	movs	r1, #4
9001eaba:	f00c f9f9 	bl	9002aeb0 <_ZdlPvj>
9001eabe:	4620      	mov	r0, r4
9001eac0:	bd10      	pop	{r4, pc}

9001eac2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001eac2:	b510      	push	{r4, lr}
9001eac4:	4604      	mov	r4, r0
9001eac6:	2104      	movs	r1, #4
9001eac8:	f00c f9f2 	bl	9002aeb0 <_ZdlPvj>
9001eacc:	4620      	mov	r0, r4
9001eace:	bd10      	pop	{r4, pc}

9001ead0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ead0:	b510      	push	{r4, lr}
9001ead2:	4604      	mov	r4, r0
9001ead4:	2104      	movs	r1, #4
9001ead6:	f00c f9eb 	bl	9002aeb0 <_ZdlPvj>
9001eada:	4620      	mov	r0, r4
9001eadc:	bd10      	pop	{r4, pc}

9001eade <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001eade:	b510      	push	{r4, lr}
9001eae0:	4604      	mov	r4, r0
9001eae2:	2104      	movs	r1, #4
9001eae4:	f00c f9e4 	bl	9002aeb0 <_ZdlPvj>
9001eae8:	4620      	mov	r0, r4
9001eaea:	bd10      	pop	{r4, pc}

9001eaec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001eaec:	b510      	push	{r4, lr}
9001eaee:	4604      	mov	r4, r0
9001eaf0:	2104      	movs	r1, #4
9001eaf2:	f00c f9dd 	bl	9002aeb0 <_ZdlPvj>
9001eaf6:	4620      	mov	r0, r4
9001eaf8:	bd10      	pop	{r4, pc}

9001eafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001eafa:	b510      	push	{r4, lr}
9001eafc:	4604      	mov	r4, r0
9001eafe:	2104      	movs	r1, #4
9001eb00:	f00c f9d6 	bl	9002aeb0 <_ZdlPvj>
9001eb04:	4620      	mov	r0, r4
9001eb06:	bd10      	pop	{r4, pc}

9001eb08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001eb08:	b510      	push	{r4, lr}
9001eb0a:	4604      	mov	r4, r0
9001eb0c:	2104      	movs	r1, #4
9001eb0e:	f00c f9cf 	bl	9002aeb0 <_ZdlPvj>
9001eb12:	4620      	mov	r0, r4
9001eb14:	bd10      	pop	{r4, pc}

9001eb16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001eb16:	b510      	push	{r4, lr}
9001eb18:	4604      	mov	r4, r0
9001eb1a:	2104      	movs	r1, #4
9001eb1c:	f00c f9c8 	bl	9002aeb0 <_ZdlPvj>
9001eb20:	4620      	mov	r0, r4
9001eb22:	bd10      	pop	{r4, pc}

9001eb24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001eb24:	b510      	push	{r4, lr}
9001eb26:	4604      	mov	r4, r0
9001eb28:	2104      	movs	r1, #4
9001eb2a:	f00c f9c1 	bl	9002aeb0 <_ZdlPvj>
9001eb2e:	4620      	mov	r0, r4
9001eb30:	bd10      	pop	{r4, pc}

9001eb32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001eb32:	b510      	push	{r4, lr}
9001eb34:	4604      	mov	r4, r0
9001eb36:	2104      	movs	r1, #4
9001eb38:	f00c f9ba 	bl	9002aeb0 <_ZdlPvj>
9001eb3c:	4620      	mov	r0, r4
9001eb3e:	bd10      	pop	{r4, pc}

9001eb40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001eb40:	b510      	push	{r4, lr}
9001eb42:	4604      	mov	r4, r0
9001eb44:	2104      	movs	r1, #4
9001eb46:	f00c f9b3 	bl	9002aeb0 <_ZdlPvj>
9001eb4a:	4620      	mov	r0, r4
9001eb4c:	bd10      	pop	{r4, pc}

9001eb4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001eb4e:	b510      	push	{r4, lr}
9001eb50:	4604      	mov	r4, r0
9001eb52:	2104      	movs	r1, #4
9001eb54:	f00c f9ac 	bl	9002aeb0 <_ZdlPvj>
9001eb58:	4620      	mov	r0, r4
9001eb5a:	bd10      	pop	{r4, pc}

9001eb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001eb5c:	b510      	push	{r4, lr}
9001eb5e:	4604      	mov	r4, r0
9001eb60:	2104      	movs	r1, #4
9001eb62:	f00c f9a5 	bl	9002aeb0 <_ZdlPvj>
9001eb66:	4620      	mov	r0, r4
9001eb68:	bd10      	pop	{r4, pc}

9001eb6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001eb6a:	b510      	push	{r4, lr}
9001eb6c:	4604      	mov	r4, r0
9001eb6e:	2104      	movs	r1, #4
9001eb70:	f00c f99e 	bl	9002aeb0 <_ZdlPvj>
9001eb74:	4620      	mov	r0, r4
9001eb76:	bd10      	pop	{r4, pc}

9001eb78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001eb78:	b510      	push	{r4, lr}
9001eb7a:	4604      	mov	r4, r0
9001eb7c:	2104      	movs	r1, #4
9001eb7e:	f00c f997 	bl	9002aeb0 <_ZdlPvj>
9001eb82:	4620      	mov	r0, r4
9001eb84:	bd10      	pop	{r4, pc}

9001eb86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001eb86:	b510      	push	{r4, lr}
9001eb88:	4604      	mov	r4, r0
9001eb8a:	2104      	movs	r1, #4
9001eb8c:	f00c f990 	bl	9002aeb0 <_ZdlPvj>
9001eb90:	4620      	mov	r0, r4
9001eb92:	bd10      	pop	{r4, pc}

9001eb94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001eb94:	b510      	push	{r4, lr}
9001eb96:	4604      	mov	r4, r0
9001eb98:	2104      	movs	r1, #4
9001eb9a:	f00c f989 	bl	9002aeb0 <_ZdlPvj>
9001eb9e:	4620      	mov	r0, r4
9001eba0:	bd10      	pop	{r4, pc}

9001eba2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001eba2:	b510      	push	{r4, lr}
9001eba4:	4604      	mov	r4, r0
9001eba6:	2104      	movs	r1, #4
9001eba8:	f00c f982 	bl	9002aeb0 <_ZdlPvj>
9001ebac:	4620      	mov	r0, r4
9001ebae:	bd10      	pop	{r4, pc}

9001ebb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001ebb0:	b510      	push	{r4, lr}
9001ebb2:	4604      	mov	r4, r0
9001ebb4:	2104      	movs	r1, #4
9001ebb6:	f00c f97b 	bl	9002aeb0 <_ZdlPvj>
9001ebba:	4620      	mov	r0, r4
9001ebbc:	bd10      	pop	{r4, pc}
	...

9001ebc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001ebc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebc4:	b08f      	sub	sp, #60	@ 0x3c
9001ebc6:	4616      	mov	r6, r2
9001ebc8:	4682      	mov	sl, r0
9001ebca:	460d      	mov	r5, r1
9001ebcc:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001ebd0:	9205      	str	r2, [sp, #20]
9001ebd2:	2a00      	cmp	r2, #0
9001ebd4:	f000 82b7 	beq.w	9001f146 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001ebd8:	6830      	ldr	r0, [r6, #0]
9001ebda:	ac0a      	add	r4, sp, #40	@ 0x28
9001ebdc:	6871      	ldr	r1, [r6, #4]
9001ebde:	c403      	stmia	r4!, {r0, r1}
9001ebe0:	6818      	ldr	r0, [r3, #0]
9001ebe2:	ac0c      	add	r4, sp, #48	@ 0x30
9001ebe4:	6859      	ldr	r1, [r3, #4]
9001ebe6:	c403      	stmia	r4!, {r0, r1}
9001ebe8:	a80a      	add	r0, sp, #40	@ 0x28
9001ebea:	f7f9 f907 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ebee:	4631      	mov	r1, r6
9001ebf0:	a80c      	add	r0, sp, #48	@ 0x30
9001ebf2:	f7f9 f947 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ebf6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001ebfa:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001ebfe:	bfdb      	ittet	le
9001ec00:	b293      	uxthle	r3, r2
9001ec02:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ec06:	2301      	movgt	r3, #1
9001ec08:	fb91 f3f3 	sdivle	r3, r1, r3
9001ec0c:	9300      	str	r3, [sp, #0]
9001ec0e:	f105 0308 	add.w	r3, r5, #8
9001ec12:	9900      	ldr	r1, [sp, #0]
9001ec14:	9306      	str	r3, [sp, #24]
9001ec16:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001ec1a:	440b      	add	r3, r1
9001ec1c:	3b01      	subs	r3, #1
9001ec1e:	fb93 f3f1 	sdiv	r3, r3, r1
9001ec22:	3b01      	subs	r3, #1
9001ec24:	9906      	ldr	r1, [sp, #24]
9001ec26:	b29b      	uxth	r3, r3
9001ec28:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ec2c:	9900      	ldr	r1, [sp, #0]
9001ec2e:	9307      	str	r3, [sp, #28]
9001ec30:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001ec34:	fb93 f0f1 	sdiv	r0, r3, r1
9001ec38:	b284      	uxth	r4, r0
9001ec3a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001ec3e:	9402      	str	r4, [sp, #8]
9001ec40:	9d02      	ldr	r5, [sp, #8]
9001ec42:	9c00      	ldr	r4, [sp, #0]
9001ec44:	fb05 3414 	mls	r4, r5, r4, r3
9001ec48:	fb14 f402 	smulbb	r4, r4, r2
9001ec4c:	440c      	add	r4, r1
9001ec4e:	b2a4      	uxth	r4, r4
9001ec50:	2d00      	cmp	r5, #0
9001ec52:	d06c      	beq.n	9001ed2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001ec54:	1e6a      	subs	r2, r5, #1
9001ec56:	9806      	ldr	r0, [sp, #24]
9001ec58:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001ec5c:	9a07      	ldr	r2, [sp, #28]
9001ec5e:	ba36      	rev	r6, r6
9001ec60:	4416      	add	r6, r2
9001ec62:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001ec66:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001ec6a:	4411      	add	r1, r2
9001ec6c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001ec70:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001efa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001ec74:	4413      	add	r3, r2
9001ec76:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001ec7a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001ec7e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001ec82:	9301      	str	r3, [sp, #4]
9001ec84:	4bc4      	ldr	r3, [pc, #784]	@ (9001ef98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001ec86:	6818      	ldr	r0, [r3, #0]
9001ec88:	6803      	ldr	r3, [r0, #0]
9001ec8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ec8c:	4798      	blx	r3
9001ec8e:	4bc3      	ldr	r3, [pc, #780]	@ (9001ef9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001ec90:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001ec94:	881b      	ldrh	r3, [r3, #0]
9001ec96:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001ec9a:	fb03 2808 	mla	r8, r3, r8, r2
9001ec9e:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001eca2:	436b      	muls	r3, r5
9001eca4:	2500      	movs	r5, #0
9001eca6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001ecaa:	4629      	mov	r1, r5
9001ecac:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001ecb0:	9309      	str	r3, [sp, #36]	@ 0x24
9001ecb2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001ecb6:	fb94 f3f3 	sdiv	r3, r4, r3
9001ecba:	9304      	str	r3, [sp, #16]
9001ecbc:	f10a 0304 	add.w	r3, sl, #4
9001ecc0:	4618      	mov	r0, r3
9001ecc2:	9308      	str	r3, [sp, #32]
9001ecc4:	f00c ff08 	bl	9002bad8 <memset>
9001ecc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ecca:	4543      	cmp	r3, r8
9001eccc:	f240 8236 	bls.w	9001f13c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001ecd0:	2203      	movs	r2, #3
9001ecd2:	2107      	movs	r1, #7
9001ecd4:	200b      	movs	r0, #11
9001ecd6:	2c00      	cmp	r4, #0
9001ecd8:	f000 8131 	beq.w	9001ef3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001ecdc:	7833      	ldrb	r3, [r6, #0]
9001ecde:	b2db      	uxtb	r3, r3
9001ece0:	2bfe      	cmp	r3, #254	@ 0xfe
9001ece2:	d126      	bne.n	9001ed32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001ece4:	f896 e001 	ldrb.w	lr, [r6, #1]
9001ece8:	3c01      	subs	r4, #1
9001ecea:	f896 c002 	ldrb.w	ip, [r6, #2]
9001ecee:	1d37      	adds	r7, r6, #4
9001ecf0:	fa5f fe8e 	uxtb.w	lr, lr
9001ecf4:	f896 b003 	ldrb.w	fp, [r6, #3]
9001ecf8:	fa5f fc8c 	uxtb.w	ip, ip
9001ecfc:	f36e 0507 	bfi	r5, lr, #0, #8
9001ed00:	fa5f fb8b 	uxtb.w	fp, fp
9001ed04:	b2a4      	uxth	r4, r4
9001ed06:	f36c 250f 	bfi	r5, ip, #8, #8
9001ed0a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001ed0e:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001ed12:	f36b 4517 	bfi	r5, fp, #16, #8
9001ed16:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001ed1a:	0e2b      	lsrs	r3, r5, #24
9001ed1c:	fb10 c303 	smlabb	r3, r0, r3, ip
9001ed20:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ed24:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ed28:	605d      	str	r5, [r3, #4]
9001ed2a:	463e      	mov	r6, r7
9001ed2c:	e7d3      	b.n	9001ecd6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001ed2e:	9e07      	ldr	r6, [sp, #28]
9001ed30:	e797      	b.n	9001ec62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001ed32:	2bff      	cmp	r3, #255	@ 0xff
9001ed34:	d127      	bne.n	9001ed86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001ed36:	f896 c001 	ldrb.w	ip, [r6, #1]
9001ed3a:	3c01      	subs	r4, #1
9001ed3c:	78b3      	ldrb	r3, [r6, #2]
9001ed3e:	1d77      	adds	r7, r6, #5
9001ed40:	fa5f fc8c 	uxtb.w	ip, ip
9001ed44:	f896 e003 	ldrb.w	lr, [r6, #3]
9001ed48:	b2db      	uxtb	r3, r3
9001ed4a:	f896 b004 	ldrb.w	fp, [r6, #4]
9001ed4e:	f36c 0507 	bfi	r5, ip, #0, #8
9001ed52:	fa5f fe8e 	uxtb.w	lr, lr
9001ed56:	fa5f fb8b 	uxtb.w	fp, fp
9001ed5a:	f363 250f 	bfi	r5, r3, #8, #8
9001ed5e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001ed62:	b2a4      	uxth	r4, r4
9001ed64:	fb12 330e 	smlabb	r3, r2, lr, r3
9001ed68:	f36e 4517 	bfi	r5, lr, #16, #8
9001ed6c:	fb11 330c 	smlabb	r3, r1, ip, r3
9001ed70:	f36b 651f 	bfi	r5, fp, #24, #8
9001ed74:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001ed78:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001ed7c:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001ed80:	f8cb 5004 	str.w	r5, [fp, #4]
9001ed84:	e7d1      	b.n	9001ed2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001ed86:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001ed8a:	f106 0701 	add.w	r7, r6, #1
9001ed8e:	d107      	bne.n	9001eda0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001ed90:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ed94:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ed98:	685d      	ldr	r5, [r3, #4]
9001ed9a:	3c01      	subs	r4, #1
9001ed9c:	b2a4      	uxth	r4, r4
9001ed9e:	e7c4      	b.n	9001ed2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001eda0:	f1bc 0f01 	cmp.w	ip, #1
9001eda4:	d12c      	bne.n	9001ee00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001eda6:	f003 0e03 	and.w	lr, r3, #3
9001edaa:	f003 0c0c 	and.w	ip, r3, #12
9001edae:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001edb2:	f1ae 0e02 	sub.w	lr, lr, #2
9001edb6:	f1ac 0c08 	sub.w	ip, ip, #8
9001edba:	3b02      	subs	r3, #2
9001edbc:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001edc0:	fa5f fe8e 	uxtb.w	lr, lr
9001edc4:	f36e 0507 	bfi	r5, lr, #0, #8
9001edc8:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001edcc:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001edd0:	f36c 250f 	bfi	r5, ip, #8, #8
9001edd4:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001edd8:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001eddc:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001ede0:	b2db      	uxtb	r3, r3
9001ede2:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001ede6:	f363 4517 	bfi	r5, r3, #16, #8
9001edea:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001edee:	0e2e      	lsrs	r6, r5, #24
9001edf0:	fb10 c606 	smlabb	r6, r0, r6, ip
9001edf4:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001edf8:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001edfc:	6075      	str	r5, [r6, #4]
9001edfe:	e7cc      	b.n	9001ed9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001ee00:	f1bc 0f02 	cmp.w	ip, #2
9001ee04:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ee08:	d12a      	bne.n	9001ee60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001ee0a:	1cb7      	adds	r7, r6, #2
9001ee0c:	7876      	ldrb	r6, [r6, #1]
9001ee0e:	3b20      	subs	r3, #32
9001ee10:	b2f6      	uxtb	r6, r6
9001ee12:	f006 0c0f 	and.w	ip, r6, #15
9001ee16:	1136      	asrs	r6, r6, #4
9001ee18:	f1ac 0c08 	sub.w	ip, ip, #8
9001ee1c:	3e08      	subs	r6, #8
9001ee1e:	449c      	add	ip, r3
9001ee20:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001ee24:	fa5f fc8c 	uxtb.w	ip, ip
9001ee28:	f36c 0507 	bfi	r5, ip, #0, #8
9001ee2c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001ee30:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001ee34:	4433      	add	r3, r6
9001ee36:	fa5f fe8e 	uxtb.w	lr, lr
9001ee3a:	f36e 250f 	bfi	r5, lr, #8, #8
9001ee3e:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001ee42:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ee46:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001ee4a:	b2db      	uxtb	r3, r3
9001ee4c:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001ee50:	f363 4517 	bfi	r5, r3, #16, #8
9001ee54:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001ee58:	0e2e      	lsrs	r6, r5, #24
9001ee5a:	fb10 e606 	smlabb	r6, r0, r6, lr
9001ee5e:	e7c9      	b.n	9001edf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001ee60:	1c5e      	adds	r6, r3, #1
9001ee62:	42a6      	cmp	r6, r4
9001ee64:	dd4e      	ble.n	9001ef04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001ee66:	1b36      	subs	r6, r6, r4
9001ee68:	2e00      	cmp	r6, #0
9001ee6a:	dc4e      	bgt.n	9001ef0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001ee6c:	f8dd b004 	ldr.w	fp, [sp, #4]
9001ee70:	2400      	movs	r4, #0
9001ee72:	f1bb 0f00 	cmp.w	fp, #0
9001ee76:	f340 8122 	ble.w	9001f0be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001ee7a:	1c7b      	adds	r3, r7, #1
9001ee7c:	9303      	str	r3, [sp, #12]
9001ee7e:	783b      	ldrb	r3, [r7, #0]
9001ee80:	b2db      	uxtb	r3, r3
9001ee82:	2bfe      	cmp	r3, #254	@ 0xfe
9001ee84:	d160      	bne.n	9001ef48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001ee86:	7879      	ldrb	r1, [r7, #1]
9001ee88:	1d3b      	adds	r3, r7, #4
9001ee8a:	78ba      	ldrb	r2, [r7, #2]
9001ee8c:	b2c9      	uxtb	r1, r1
9001ee8e:	78f8      	ldrb	r0, [r7, #3]
9001ee90:	b2d2      	uxtb	r2, r2
9001ee92:	9303      	str	r3, [sp, #12]
9001ee94:	f361 0507 	bfi	r5, r1, #0, #8
9001ee98:	b2c0      	uxtb	r0, r0
9001ee9a:	2303      	movs	r3, #3
9001ee9c:	f362 250f 	bfi	r5, r2, #8, #8
9001eea0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001eea4:	fb13 2200 	smlabb	r2, r3, r0, r2
9001eea8:	f360 4517 	bfi	r5, r0, #16, #8
9001eeac:	2307      	movs	r3, #7
9001eeae:	0e2e      	lsrs	r6, r5, #24
9001eeb0:	fb13 2101 	smlabb	r1, r3, r1, r2
9001eeb4:	230b      	movs	r3, #11
9001eeb6:	fb13 1306 	smlabb	r3, r3, r6, r1
9001eeba:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001eebe:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001eec2:	605d      	str	r5, [r3, #4]
9001eec4:	2601      	movs	r6, #1
9001eec6:	4637      	mov	r7, r6
9001eec8:	0e2b      	lsrs	r3, r5, #24
9001eeca:	ebab 0b07 	sub.w	fp, fp, r7
9001eece:	eba6 0607 	sub.w	r6, r6, r7
9001eed2:	f040 80d3 	bne.w	9001f07c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001eed6:	b18c      	cbz	r4, 9001eefc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001eed8:	4648      	mov	r0, r9
9001eeda:	00a1      	lsls	r1, r4, #2
9001eedc:	f7e3 fd0a 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001eee0:	9b05      	ldr	r3, [sp, #20]
9001eee2:	4622      	mov	r2, r4
9001eee4:	4649      	mov	r1, r9
9001eee6:	4640      	mov	r0, r8
9001eee8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001eeec:	f7e3 fd70 	bl	900029d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001eef0:	4b2b      	ldr	r3, [pc, #172]	@ (9001efa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001eef2:	4a2c      	ldr	r2, [pc, #176]	@ (9001efa4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001eef4:	4599      	cmp	r9, r3
9001eef6:	bf08      	it	eq
9001eef8:	4613      	moveq	r3, r2
9001eefa:	4699      	mov	r9, r3
9001eefc:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001ef00:	2400      	movs	r4, #0
9001ef02:	e0da      	b.n	9001f0ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001ef04:	1ba6      	subs	r6, r4, r6
9001ef06:	b2b4      	uxth	r4, r6
9001ef08:	e70f      	b.n	9001ed2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001ef0a:	9b01      	ldr	r3, [sp, #4]
9001ef0c:	9a01      	ldr	r2, [sp, #4]
9001ef0e:	42b3      	cmp	r3, r6
9001ef10:	bfa8      	it	ge
9001ef12:	4633      	movge	r3, r6
9001ef14:	0e2c      	lsrs	r4, r5, #24
9001ef16:	eba2 0b03 	sub.w	fp, r2, r3
9001ef1a:	eba6 0603 	sub.w	r6, r6, r3
9001ef1e:	d00b      	beq.n	9001ef38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001ef20:	f1a9 0104 	sub.w	r1, r9, #4
9001ef24:	461a      	mov	r2, r3
9001ef26:	2a00      	cmp	r2, #0
9001ef28:	dc02      	bgt.n	9001ef30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001ef2a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001ef2e:	e7a0      	b.n	9001ee72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001ef30:	f841 5f04 	str.w	r5, [r1, #4]!
9001ef34:	3a01      	subs	r2, #1
9001ef36:	e7f6      	b.n	9001ef26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001ef38:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001ef3c:	e799      	b.n	9001ee72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001ef3e:	4637      	mov	r7, r6
9001ef40:	f8dd b004 	ldr.w	fp, [sp, #4]
9001ef44:	4626      	mov	r6, r4
9001ef46:	e794      	b.n	9001ee72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001ef48:	2bff      	cmp	r3, #255	@ 0xff
9001ef4a:	d11d      	bne.n	9001ef88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001ef4c:	7878      	ldrb	r0, [r7, #1]
9001ef4e:	1d7b      	adds	r3, r7, #5
9001ef50:	78ba      	ldrb	r2, [r7, #2]
9001ef52:	b2c0      	uxtb	r0, r0
9001ef54:	78fe      	ldrb	r6, [r7, #3]
9001ef56:	b2d2      	uxtb	r2, r2
9001ef58:	9303      	str	r3, [sp, #12]
9001ef5a:	f360 0507 	bfi	r5, r0, #0, #8
9001ef5e:	793b      	ldrb	r3, [r7, #4]
9001ef60:	b2f6      	uxtb	r6, r6
9001ef62:	b2d9      	uxtb	r1, r3
9001ef64:	f362 250f 	bfi	r5, r2, #8, #8
9001ef68:	2303      	movs	r3, #3
9001ef6a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001ef6e:	f366 4517 	bfi	r5, r6, #16, #8
9001ef72:	fb13 2206 	smlabb	r2, r3, r6, r2
9001ef76:	2307      	movs	r3, #7
9001ef78:	f361 651f 	bfi	r5, r1, #24, #8
9001ef7c:	fb13 2000 	smlabb	r0, r3, r0, r2
9001ef80:	230b      	movs	r3, #11
9001ef82:	fb13 0301 	smlabb	r3, r3, r1, r0
9001ef86:	e798      	b.n	9001eeba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001ef88:	119e      	asrs	r6, r3, #6
9001ef8a:	d10d      	bne.n	9001efa8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001ef8c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ef90:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ef94:	685d      	ldr	r5, [r3, #4]
9001ef96:	e795      	b.n	9001eec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001ef98:	240218cc 	.word	0x240218cc
9001ef9c:	240218c6 	.word	0x240218c6
9001efa0:	24005b80 	.word	0x24005b80
9001efa4:	24005c80 	.word	0x24005c80
9001efa8:	2e01      	cmp	r6, #1
9001efaa:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001efae:	d12b      	bne.n	9001f008 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001efb0:	f003 0003 	and.w	r0, r3, #3
9001efb4:	f003 020c 	and.w	r2, r3, #12
9001efb8:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001efbc:	3802      	subs	r0, #2
9001efbe:	3a08      	subs	r2, #8
9001efc0:	1e9f      	subs	r7, r3, #2
9001efc2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001efc6:	b2c0      	uxtb	r0, r0
9001efc8:	f360 0507 	bfi	r5, r0, #0, #8
9001efcc:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001efd0:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001efd4:	f362 250f 	bfi	r5, r2, #8, #8
9001efd8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001efdc:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001efe0:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001efe4:	2703      	movs	r7, #3
9001efe6:	b2db      	uxtb	r3, r3
9001efe8:	fb17 2203 	smlabb	r2, r7, r3, r2
9001efec:	2707      	movs	r7, #7
9001efee:	f363 4517 	bfi	r5, r3, #16, #8
9001eff2:	230b      	movs	r3, #11
9001eff4:	fb17 2000 	smlabb	r0, r7, r0, r2
9001eff8:	fb13 0101 	smlabb	r1, r3, r1, r0
9001effc:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001f000:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001f004:	604d      	str	r5, [r1, #4]
9001f006:	e75e      	b.n	9001eec6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001f008:	2e02      	cmp	r6, #2
9001f00a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f00e:	d12f      	bne.n	9001f070 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001f010:	7878      	ldrb	r0, [r7, #1]
9001f012:	1cba      	adds	r2, r7, #2
9001f014:	3b20      	subs	r3, #32
9001f016:	b2c0      	uxtb	r0, r0
9001f018:	9203      	str	r2, [sp, #12]
9001f01a:	f000 020f 	and.w	r2, r0, #15
9001f01e:	1100      	asrs	r0, r0, #4
9001f020:	3a08      	subs	r2, #8
9001f022:	3808      	subs	r0, #8
9001f024:	441a      	add	r2, r3
9001f026:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001f02a:	b2d2      	uxtb	r2, r2
9001f02c:	f362 0507 	bfi	r5, r2, #0, #8
9001f030:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001f034:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001f038:	4403      	add	r3, r0
9001f03a:	b2f6      	uxtb	r6, r6
9001f03c:	f366 250f 	bfi	r5, r6, #8, #8
9001f040:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001f044:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001f048:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001f04c:	2003      	movs	r0, #3
9001f04e:	b2db      	uxtb	r3, r3
9001f050:	fb10 6603 	smlabb	r6, r0, r3, r6
9001f054:	2007      	movs	r0, #7
9001f056:	f363 4517 	bfi	r5, r3, #16, #8
9001f05a:	230b      	movs	r3, #11
9001f05c:	fb10 6202 	smlabb	r2, r0, r2, r6
9001f060:	fb13 2101 	smlabb	r1, r3, r1, r2
9001f064:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001f068:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001f06c:	604d      	str	r5, [r1, #4]
9001f06e:	e729      	b.n	9001eec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001f070:	1c5e      	adds	r6, r3, #1
9001f072:	465f      	mov	r7, fp
9001f074:	45b3      	cmp	fp, r6
9001f076:	bfa8      	it	ge
9001f078:	4637      	movge	r7, r6
9001f07a:	e725      	b.n	9001eec8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001f07c:	193b      	adds	r3, r7, r4
9001f07e:	2b40      	cmp	r3, #64	@ 0x40
9001f080:	dd13      	ble.n	9001f0aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001f082:	4648      	mov	r0, r9
9001f084:	00a1      	lsls	r1, r4, #2
9001f086:	f7e3 fc35 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001f08a:	4649      	mov	r1, r9
9001f08c:	9b05      	ldr	r3, [sp, #20]
9001f08e:	4622      	mov	r2, r4
9001f090:	4640      	mov	r0, r8
9001f092:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001f096:	f7e3 fc9b 	bl	900029d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001f09a:	4b2c      	ldr	r3, [pc, #176]	@ (9001f14c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001f09c:	2400      	movs	r4, #0
9001f09e:	4599      	cmp	r9, r3
9001f0a0:	bf0c      	ite	eq
9001f0a2:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001f158 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001f0a6:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001f14c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001f0aa:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001f0ae:	463b      	mov	r3, r7
9001f0b0:	3b01      	subs	r3, #1
9001f0b2:	f842 5b04 	str.w	r5, [r2], #4
9001f0b6:	d1fb      	bne.n	9001f0b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001f0b8:	443c      	add	r4, r7
9001f0ba:	9f03      	ldr	r7, [sp, #12]
9001f0bc:	e6d9      	b.n	9001ee72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001f0be:	b15c      	cbz	r4, 9001f0d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001f0c0:	00a1      	lsls	r1, r4, #2
9001f0c2:	4648      	mov	r0, r9
9001f0c4:	f7e3 fc16 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001f0c8:	4640      	mov	r0, r8
9001f0ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001f0ce:	9b05      	ldr	r3, [sp, #20]
9001f0d0:	4622      	mov	r2, r4
9001f0d2:	4649      	mov	r1, r9
9001f0d4:	f7e3 fc7c 	bl	900029d0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001f0d8:	4b1d      	ldr	r3, [pc, #116]	@ (9001f150 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001f0da:	9a01      	ldr	r2, [sp, #4]
9001f0dc:	881b      	ldrh	r3, [r3, #0]
9001f0de:	1a9b      	subs	r3, r3, r2
9001f0e0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001f0e4:	9b04      	ldr	r3, [sp, #16]
9001f0e6:	3301      	adds	r3, #1
9001f0e8:	9304      	str	r3, [sp, #16]
9001f0ea:	9a04      	ldr	r2, [sp, #16]
9001f0ec:	9b00      	ldr	r3, [sp, #0]
9001f0ee:	4293      	cmp	r3, r2
9001f0f0:	d11d      	bne.n	9001f12e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001f0f2:	9b02      	ldr	r3, [sp, #8]
9001f0f4:	2500      	movs	r5, #0
9001f0f6:	9a02      	ldr	r2, [sp, #8]
9001f0f8:	f103 0b01 	add.w	fp, r3, #1
9001f0fc:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001f100:	9b06      	ldr	r3, [sp, #24]
9001f102:	4629      	mov	r1, r5
9001f104:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001f108:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001f10c:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001f110:	1ba4      	subs	r4, r4, r6
9001f112:	9b07      	ldr	r3, [sp, #28]
9001f114:	ba3f      	rev	r7, r7
9001f116:	9808      	ldr	r0, [sp, #32]
9001f118:	b2a4      	uxth	r4, r4
9001f11a:	441f      	add	r7, r3
9001f11c:	f00c fcdc 	bl	9002bad8 <memset>
9001f120:	f8cd b008 	str.w	fp, [sp, #8]
9001f124:	9504      	str	r5, [sp, #16]
9001f126:	f7e3 fbdb 	bl	900028e0 <_ZN8touchgfx5paint8tearDownEv>
9001f12a:	463e      	mov	r6, r7
9001f12c:	e5cc      	b.n	9001ecc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001f12e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001f132:	9b01      	ldr	r3, [sp, #4]
9001f134:	1ae4      	subs	r4, r4, r3
9001f136:	1ba4      	subs	r4, r4, r6
9001f138:	b2a4      	uxth	r4, r4
9001f13a:	e7f4      	b.n	9001f126 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001f13c:	4b05      	ldr	r3, [pc, #20]	@ (9001f154 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001f13e:	6818      	ldr	r0, [r3, #0]
9001f140:	6803      	ldr	r3, [r0, #0]
9001f142:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f144:	4798      	blx	r3
9001f146:	b00f      	add	sp, #60	@ 0x3c
9001f148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f14c:	24005b80 	.word	0x24005b80
9001f150:	240218c6 	.word	0x240218c6
9001f154:	240218cc 	.word	0x240218cc
9001f158:	24005c80 	.word	0x24005c80

9001f15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001f15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f160:	b08f      	sub	sp, #60	@ 0x3c
9001f162:	461c      	mov	r4, r3
9001f164:	9205      	str	r2, [sp, #20]
9001f166:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001f16a:	9100      	str	r1, [sp, #0]
9001f16c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001f16e:	9201      	str	r2, [sp, #4]
9001f170:	2a00      	cmp	r2, #0
9001f172:	f000 8116 	beq.w	9001f3a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001f176:	6820      	ldr	r0, [r4, #0]
9001f178:	aa0a      	add	r2, sp, #40	@ 0x28
9001f17a:	6861      	ldr	r1, [r4, #4]
9001f17c:	c203      	stmia	r2!, {r0, r1}
9001f17e:	6818      	ldr	r0, [r3, #0]
9001f180:	aa0c      	add	r2, sp, #48	@ 0x30
9001f182:	6859      	ldr	r1, [r3, #4]
9001f184:	c203      	stmia	r2!, {r0, r1}
9001f186:	a80a      	add	r0, sp, #40	@ 0x28
9001f188:	f7f8 fe38 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f18c:	4621      	mov	r1, r4
9001f18e:	a80c      	add	r0, sp, #48	@ 0x30
9001f190:	f7f8 fe78 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f194:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f198:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001f19c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001f1a0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001f1a4:	bfdb      	ittet	le
9001f1a6:	b2b3      	uxthle	r3, r6
9001f1a8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001f1ac:	2301      	movgt	r3, #1
9001f1ae:	fb92 f3f3 	sdivle	r3, r2, r3
9001f1b2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f1b6:	441d      	add	r5, r3
9001f1b8:	fb92 f1f3 	sdiv	r1, r2, r3
9001f1bc:	fa1f fc81 	uxth.w	ip, r1
9001f1c0:	3d01      	subs	r5, #1
9001f1c2:	fb0c 2413 	mls	r4, ip, r3, r2
9001f1c6:	4661      	mov	r1, ip
9001f1c8:	fb14 f406 	smulbb	r4, r4, r6
9001f1cc:	4404      	add	r4, r0
9001f1ce:	fb95 f5f3 	sdiv	r5, r5, r3
9001f1d2:	b2a4      	uxth	r4, r4
9001f1d4:	b131      	cbz	r1, 9001f1e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001f1d6:	9b05      	ldr	r3, [sp, #20]
9001f1d8:	9900      	ldr	r1, [sp, #0]
9001f1da:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f1de:	ba1b      	rev	r3, r3
9001f1e0:	4419      	add	r1, r3
9001f1e2:	9100      	str	r1, [sp, #0]
9001f1e4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f1e8:	b2ad      	uxth	r5, r5
9001f1ea:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001f1ee:	4418      	add	r0, r3
9001f1f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f1f4:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f1f8:	00ad      	lsls	r5, r5, #2
9001f1fa:	441a      	add	r2, r3
9001f1fc:	4b6a      	ldr	r3, [pc, #424]	@ (9001f3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001f1fe:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001f202:	6818      	ldr	r0, [r3, #0]
9001f204:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001f208:	6803      	ldr	r3, [r0, #0]
9001f20a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f20c:	4798      	blx	r3
9001f20e:	4967      	ldr	r1, [pc, #412]	@ (9001f3ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001f210:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f214:	2c00      	cmp	r4, #0
9001f216:	880b      	ldrh	r3, [r1, #0]
9001f218:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001f21c:	bf0c      	ite	eq
9001f21e:	46c6      	moveq	lr, r8
9001f220:	f04f 0e00 	movne.w	lr, #0
9001f224:	9109      	str	r1, [sp, #36]	@ 0x24
9001f226:	fb03 c202 	mla	r2, r3, r2, ip
9001f22a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001f22e:	4373      	muls	r3, r6
9001f230:	fa1f fe8e 	uxth.w	lr, lr
9001f234:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f238:	9103      	str	r1, [sp, #12]
9001f23a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f23e:	9306      	str	r3, [sp, #24]
9001f240:	1d2b      	adds	r3, r5, #4
9001f242:	9307      	str	r3, [sp, #28]
9001f244:	9b01      	ldr	r3, [sp, #4]
9001f246:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001f24a:	2300      	movs	r3, #0
9001f24c:	b292      	uxth	r2, r2
9001f24e:	9302      	str	r3, [sp, #8]
9001f250:	9204      	str	r2, [sp, #16]
9001f252:	9a06      	ldr	r2, [sp, #24]
9001f254:	4282      	cmp	r2, r0
9001f256:	f240 809f 	bls.w	9001f398 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001f25a:	b963      	cbnz	r3, 9001f276 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001f25c:	9b00      	ldr	r3, [sp, #0]
9001f25e:	781a      	ldrb	r2, [r3, #0]
9001f260:	0993      	lsrs	r3, r2, #6
9001f262:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f266:	9202      	str	r2, [sp, #8]
9001f268:	1e5a      	subs	r2, r3, #1
9001f26a:	2a02      	cmp	r2, #2
9001f26c:	d815      	bhi.n	9001f29a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001f26e:	9a00      	ldr	r2, [sp, #0]
9001f270:	b29b      	uxth	r3, r3
9001f272:	3201      	adds	r2, #1
9001f274:	9200      	str	r2, [sp, #0]
9001f276:	b1b4      	cbz	r4, 9001f2a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001f278:	429c      	cmp	r4, r3
9001f27a:	bf91      	iteee	ls
9001f27c:	1b1c      	subls	r4, r3, r4
9001f27e:	1ae4      	subhi	r4, r4, r3
9001f280:	4671      	movhi	r1, lr
9001f282:	f04f 0a00 	movhi.w	sl, #0
9001f286:	bf9b      	ittet	ls
9001f288:	fa1f fa84 	uxthls.w	sl, r4
9001f28c:	2400      	movls	r4, #0
9001f28e:	b2a4      	uxthhi	r4, r4
9001f290:	fa1f f188 	uxthls.w	r1, r8
9001f294:	4653      	mov	r3, sl
9001f296:	468e      	mov	lr, r1
9001f298:	e7db      	b.n	9001f252 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001f29a:	9a00      	ldr	r2, [sp, #0]
9001f29c:	9b00      	ldr	r3, [sp, #0]
9001f29e:	3202      	adds	r2, #2
9001f2a0:	785b      	ldrb	r3, [r3, #1]
9001f2a2:	9200      	str	r2, [sp, #0]
9001f2a4:	e7e7      	b.n	9001f276 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001f2a6:	2202      	movs	r2, #2
9001f2a8:	9907      	ldr	r1, [sp, #28]
9001f2aa:	4573      	cmp	r3, lr
9001f2ac:	4615      	mov	r5, r2
9001f2ae:	9a02      	ldr	r2, [sp, #8]
9001f2b0:	bf24      	itt	cs
9001f2b2:	eba3 0a0e 	subcs.w	sl, r3, lr
9001f2b6:	46f1      	movcs	r9, lr
9001f2b8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f2bc:	9905      	ldr	r1, [sp, #20]
9001f2be:	bf34      	ite	cc
9001f2c0:	4699      	movcc	r9, r3
9001f2c2:	fa1f fa8a 	uxthcs.w	sl, sl
9001f2c6:	f831 c002 	ldrh.w	ip, [r1, r2]
9001f2ca:	bf38      	it	cc
9001f2cc:	ebae 0103 	subcc.w	r1, lr, r3
9001f2d0:	9a01      	ldr	r2, [sp, #4]
9001f2d2:	bf2e      	itee	cs
9001f2d4:	4621      	movcs	r1, r4
9001f2d6:	b289      	uxthcc	r1, r1
9001f2d8:	46a2      	movcc	sl, r4
9001f2da:	2aff      	cmp	r2, #255	@ 0xff
9001f2dc:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001f2e0:	d105      	bne.n	9001f2ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001f2e2:	4481      	add	r9, r0
9001f2e4:	4581      	cmp	r9, r0
9001f2e6:	d045      	beq.n	9001f374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001f2e8:	f820 cb02 	strh.w	ip, [r0], #2
9001f2ec:	e7fa      	b.n	9001f2e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001f2ee:	ea4f 222c 	mov.w	r2, ip, asr #8
9001f2f2:	9d03      	ldr	r5, [sp, #12]
9001f2f4:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f2f8:	4481      	add	r9, r0
9001f2fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f2fe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001f302:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f306:	fa5f fc8c 	uxtb.w	ip, ip
9001f30a:	436a      	muls	r2, r5
9001f30c:	fb0b fb05 	mul.w	fp, fp, r5
9001f310:	fb0c fc05 	mul.w	ip, ip, r5
9001f314:	9208      	str	r2, [sp, #32]
9001f316:	4581      	cmp	r9, r0
9001f318:	d02c      	beq.n	9001f374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001f31a:	8802      	ldrh	r2, [r0, #0]
9001f31c:	9d04      	ldr	r5, [sp, #16]
9001f31e:	1216      	asrs	r6, r2, #8
9001f320:	9f04      	ldr	r7, [sp, #16]
9001f322:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f326:	fb16 f605 	smulbb	r6, r6, r5
9001f32a:	9d08      	ldr	r5, [sp, #32]
9001f32c:	442e      	add	r6, r5
9001f32e:	10d5      	asrs	r5, r2, #3
9001f330:	00d2      	lsls	r2, r2, #3
9001f332:	b2b6      	uxth	r6, r6
9001f334:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f338:	b2d2      	uxtb	r2, r2
9001f33a:	fb15 f507 	smulbb	r5, r5, r7
9001f33e:	fb12 f207 	smulbb	r2, r2, r7
9001f342:	1c77      	adds	r7, r6, #1
9001f344:	445d      	add	r5, fp
9001f346:	4462      	add	r2, ip
9001f348:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001f34c:	b2ad      	uxth	r5, r5
9001f34e:	b292      	uxth	r2, r2
9001f350:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f354:	1c57      	adds	r7, r2, #1
9001f356:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001f35a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f35e:	4316      	orrs	r6, r2
9001f360:	1c6a      	adds	r2, r5, #1
9001f362:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001f366:	096d      	lsrs	r5, r5, #5
9001f368:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f36c:	432e      	orrs	r6, r5
9001f36e:	f820 6b02 	strh.w	r6, [r0], #2
9001f372:	e7d0      	b.n	9001f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001f374:	4573      	cmp	r3, lr
9001f376:	d38d      	bcc.n	9001f294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001f378:	fa1f f188 	uxth.w	r1, r8
9001f37c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001f380:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f382:	1a64      	subs	r4, r4, r1
9001f384:	881b      	ldrh	r3, [r3, #0]
9001f386:	b2a4      	uxth	r4, r4
9001f388:	eba3 0308 	sub.w	r3, r3, r8
9001f38c:	2c00      	cmp	r4, #0
9001f38e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f392:	bf18      	it	ne
9001f394:	2100      	movne	r1, #0
9001f396:	e77d      	b.n	9001f294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001f398:	4b03      	ldr	r3, [pc, #12]	@ (9001f3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001f39a:	6818      	ldr	r0, [r3, #0]
9001f39c:	6803      	ldr	r3, [r0, #0]
9001f39e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f3a0:	4798      	blx	r3
9001f3a2:	b00f      	add	sp, #60	@ 0x3c
9001f3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f3a8:	240218cc 	.word	0x240218cc
9001f3ac:	240218c6 	.word	0x240218c6

9001f3b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001f3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f3b4:	b09f      	sub	sp, #124	@ 0x7c
9001f3b6:	461d      	mov	r5, r3
9001f3b8:	4604      	mov	r4, r0
9001f3ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f3bc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001f3c0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001f3c4:	9209      	str	r2, [sp, #36]	@ 0x24
9001f3c6:	2a00      	cmp	r2, #0
9001f3c8:	f000 81ed 	beq.w	9001f7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001f3cc:	6828      	ldr	r0, [r5, #0]
9001f3ce:	aa1a      	add	r2, sp, #104	@ 0x68
9001f3d0:	6869      	ldr	r1, [r5, #4]
9001f3d2:	c203      	stmia	r2!, {r0, r1}
9001f3d4:	6818      	ldr	r0, [r3, #0]
9001f3d6:	aa1c      	add	r2, sp, #112	@ 0x70
9001f3d8:	6859      	ldr	r1, [r3, #4]
9001f3da:	c203      	stmia	r2!, {r0, r1}
9001f3dc:	a81a      	add	r0, sp, #104	@ 0x68
9001f3de:	f7f8 fd0d 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f3e2:	4629      	mov	r1, r5
9001f3e4:	a81c      	add	r0, sp, #112	@ 0x70
9001f3e6:	f7f8 fd4d 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f3ea:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f3ee:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001f3f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f3f6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001f3fa:	bfdb      	ittet	le
9001f3fc:	b29a      	uxthle	r2, r3
9001f3fe:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f402:	2201      	movgt	r2, #1
9001f404:	fb91 f2f2 	sdivle	r2, r1, r2
9001f408:	9202      	str	r2, [sp, #8]
9001f40a:	9802      	ldr	r0, [sp, #8]
9001f40c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001f410:	9902      	ldr	r1, [sp, #8]
9001f412:	fb92 f0f0 	sdiv	r0, r2, r0
9001f416:	b280      	uxth	r0, r0
9001f418:	4488      	add	r8, r1
9001f41a:	9010      	str	r0, [sp, #64]	@ 0x40
9001f41c:	f108 38ff 	add.w	r8, r8, #4294967295
9001f420:	9802      	ldr	r0, [sp, #8]
9001f422:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001f424:	fb05 2510 	mls	r5, r5, r0, r2
9001f428:	fb98 f8f1 	sdiv	r8, r8, r1
9001f42c:	fb15 f503 	smulbb	r5, r5, r3
9001f430:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001f434:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001f438:	f108 0801 	add.w	r8, r8, #1
9001f43c:	440d      	add	r5, r1
9001f43e:	4419      	add	r1, r3
9001f440:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001f444:	fa1f f888 	uxth.w	r8, r8
9001f448:	441a      	add	r2, r3
9001f44a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001f44e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001f452:	b2ad      	uxth	r5, r5
9001f454:	9304      	str	r3, [sp, #16]
9001f456:	4b94      	ldr	r3, [pc, #592]	@ (9001f6a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001f458:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001f45c:	6818      	ldr	r0, [r3, #0]
9001f45e:	6803      	ldr	r3, [r0, #0]
9001f460:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f462:	4798      	blx	r3
9001f464:	4b91      	ldr	r3, [pc, #580]	@ (9001f6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f466:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001f46a:	2d00      	cmp	r5, #0
9001f46c:	881a      	ldrh	r2, [r3, #0]
9001f46e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001f472:	fb02 f606 	mul.w	r6, r2, r6
9001f476:	fb02 7101 	mla	r1, r2, r1, r7
9001f47a:	9318      	str	r3, [sp, #96]	@ 0x60
9001f47c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f480:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001f484:	f04f 0100 	mov.w	r1, #0
9001f488:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001f48c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f48e:	4b88      	ldr	r3, [pc, #544]	@ (9001f6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001f490:	920a      	str	r2, [sp, #40]	@ 0x28
9001f492:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f494:	eba3 0304 	sub.w	r3, r3, r4
9001f498:	910d      	str	r1, [sp, #52]	@ 0x34
9001f49a:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001f49e:	9319      	str	r3, [sp, #100]	@ 0x64
9001f4a0:	f108 0204 	add.w	r2, r8, #4
9001f4a4:	9211      	str	r2, [sp, #68]	@ 0x44
9001f4a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f4a8:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001f4ac:	9215      	str	r2, [sp, #84]	@ 0x54
9001f4ae:	9a04      	ldr	r2, [sp, #16]
9001f4b0:	bf18      	it	ne
9001f4b2:	2200      	movne	r2, #0
9001f4b4:	b292      	uxth	r2, r2
9001f4b6:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001f4b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f4ba:	fa11 f383 	uxtah	r3, r1, r3
9001f4be:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001f4c0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001f4c4:	3304      	adds	r3, #4
9001f4c6:	9306      	str	r3, [sp, #24]
9001f4c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f4ca:	4283      	cmp	r3, r0
9001f4cc:	f240 8166 	bls.w	9001f79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001f4d0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001f4d4:	f04f 0a01 	mov.w	sl, #1
9001f4d8:	9902      	ldr	r1, [sp, #8]
9001f4da:	9e06      	ldr	r6, [sp, #24]
9001f4dc:	46d3      	mov	fp, sl
9001f4de:	4657      	mov	r7, sl
9001f4e0:	7836      	ldrb	r6, [r6, #0]
9001f4e2:	fbb5 f3f3 	udiv	r3, r5, r3
9001f4e6:	1acb      	subs	r3, r1, r3
9001f4e8:	9612      	str	r6, [sp, #72]	@ 0x48
9001f4ea:	3601      	adds	r6, #1
9001f4ec:	b29b      	uxth	r3, r3
9001f4ee:	9605      	str	r6, [sp, #20]
9001f4f0:	9316      	str	r3, [sp, #88]	@ 0x58
9001f4f2:	9b06      	ldr	r3, [sp, #24]
9001f4f4:	7859      	ldrb	r1, [r3, #1]
9001f4f6:	789b      	ldrb	r3, [r3, #2]
9001f4f8:	021b      	lsls	r3, r3, #8
9001f4fa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001f4fe:	9906      	ldr	r1, [sp, #24]
9001f500:	78c9      	ldrb	r1, [r1, #3]
9001f502:	430b      	orrs	r3, r1
9001f504:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001f506:	4419      	add	r1, r3
9001f508:	1c4e      	adds	r6, r1, #1
9001f50a:	7849      	ldrb	r1, [r1, #1]
9001f50c:	9603      	str	r6, [sp, #12]
9001f50e:	0209      	lsls	r1, r1, #8
9001f510:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001f512:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001f516:	5cf3      	ldrb	r3, [r6, r3]
9001f518:	4319      	orrs	r1, r3
9001f51a:	b28b      	uxth	r3, r1
9001f51c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001f520:	930c      	str	r3, [sp, #48]	@ 0x30
9001f522:	2300      	movs	r3, #0
9001f524:	9307      	str	r3, [sp, #28]
9001f526:	469c      	mov	ip, r3
9001f528:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001f52c:	930e      	str	r3, [sp, #56]	@ 0x38
9001f52e:	2d00      	cmp	r5, #0
9001f530:	d07e      	beq.n	9001f630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001f532:	42af      	cmp	r7, r5
9001f534:	d26e      	bcs.n	9001f614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001f536:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f538:	1bed      	subs	r5, r5, r7
9001f53a:	9201      	str	r2, [sp, #4]
9001f53c:	4283      	cmp	r3, r0
9001f53e:	b2ad      	uxth	r5, r5
9001f540:	d802      	bhi.n	9001f548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001f542:	e073      	b.n	9001f62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001f544:	2b00      	cmp	r3, #0
9001f546:	d15f      	bne.n	9001f608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001f548:	9b03      	ldr	r3, [sp, #12]
9001f54a:	f1cb 0207 	rsb	r2, fp, #7
9001f54e:	785b      	ldrb	r3, [r3, #1]
9001f550:	4093      	lsls	r3, r2
9001f552:	005b      	lsls	r3, r3, #1
9001f554:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f558:	9b03      	ldr	r3, [sp, #12]
9001f55a:	781b      	ldrb	r3, [r3, #0]
9001f55c:	fa43 f30b 	asr.w	r3, r3, fp
9001f560:	b2db      	uxtb	r3, r3
9001f562:	4313      	orrs	r3, r2
9001f564:	f10b 0201 	add.w	r2, fp, #1
9001f568:	fa5f fb82 	uxtb.w	fp, r2
9001f56c:	9a03      	ldr	r2, [sp, #12]
9001f56e:	b29f      	uxth	r7, r3
9001f570:	f1bb 0f08 	cmp.w	fp, #8
9001f574:	bf13      	iteet	ne
9001f576:	3201      	addne	r2, #1
9001f578:	3202      	addeq	r2, #2
9001f57a:	f04f 0b00 	moveq.w	fp, #0
9001f57e:	9203      	strne	r2, [sp, #12]
9001f580:	bf08      	it	eq
9001f582:	9203      	streq	r2, [sp, #12]
9001f584:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f586:	42ba      	cmp	r2, r7
9001f588:	d309      	bcc.n	9001f59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001f58a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001f58e:	2301      	movs	r3, #1
9001f590:	9a05      	ldr	r2, [sp, #20]
9001f592:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001f596:	d30e      	bcc.n	9001f5b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001f598:	469a      	mov	sl, r3
9001f59a:	2600      	movs	r6, #0
9001f59c:	e035      	b.n	9001f60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001f59e:	9b05      	ldr	r3, [sp, #20]
9001f5a0:	429f      	cmp	r7, r3
9001f5a2:	d318      	bcc.n	9001f5d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001f5a4:	eb04 030a 	add.w	r3, r4, sl
9001f5a8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001f5ac:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001f5b0:	f10a 0301 	add.w	r3, sl, #1
9001f5b4:	b29b      	uxth	r3, r3
9001f5b6:	9a05      	ldr	r2, [sp, #20]
9001f5b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001f5bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001f5c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f5c2:	7116      	strb	r6, [r2, #4]
9001f5c4:	f10a 0601 	add.w	r6, sl, #1
9001f5c8:	80d1      	strh	r1, [r2, #6]
9001f5ca:	7156      	strb	r6, [r2, #5]
9001f5cc:	9a05      	ldr	r2, [sp, #20]
9001f5ce:	3201      	adds	r2, #1
9001f5d0:	b292      	uxth	r2, r2
9001f5d2:	9205      	str	r2, [sp, #20]
9001f5d4:	e7e0      	b.n	9001f598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001f5d6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001f5da:	463a      	mov	r2, r7
9001f5dc:	795b      	ldrb	r3, [r3, #5]
9001f5de:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001f5e2:	4426      	add	r6, r4
9001f5e4:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001f5e6:	eb01 0c06 	add.w	ip, r1, r6
9001f5ea:	f1bc 0f00 	cmp.w	ip, #0
9001f5ee:	dd07      	ble.n	9001f600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001f5f0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001f5f4:	f892 c004 	ldrb.w	ip, [r2, #4]
9001f5f8:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001f5fc:	88d2      	ldrh	r2, [r2, #6]
9001f5fe:	e7f1      	b.n	9001f5e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001f600:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001f604:	b29b      	uxth	r3, r3
9001f606:	e7c3      	b.n	9001f590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001f608:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001f60a:	970c      	str	r7, [sp, #48]	@ 0x30
9001f60c:	46b4      	mov	ip, r6
9001f60e:	9a01      	ldr	r2, [sp, #4]
9001f610:	461f      	mov	r7, r3
9001f612:	e78c      	b.n	9001f52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001f614:	1b7b      	subs	r3, r7, r5
9001f616:	eb0c 0605 	add.w	r6, ip, r5
9001f61a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f61e:	b29b      	uxth	r3, r3
9001f620:	b2b6      	uxth	r6, r6
9001f622:	9201      	str	r2, [sp, #4]
9001f624:	2500      	movs	r5, #0
9001f626:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f628:	4282      	cmp	r2, r0
9001f62a:	d88b      	bhi.n	9001f544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001f62c:	9a01      	ldr	r2, [sp, #4]
9001f62e:	e74b      	b.n	9001f4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001f630:	4297      	cmp	r7, r2
9001f632:	d332      	bcc.n	9001f69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001f634:	1abb      	subs	r3, r7, r2
9001f636:	9208      	str	r2, [sp, #32]
9001f638:	9501      	str	r5, [sp, #4]
9001f63a:	b29b      	uxth	r3, r3
9001f63c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001f63e:	29ff      	cmp	r1, #255	@ 0xff
9001f640:	9908      	ldr	r1, [sp, #32]
9001f642:	eb0c 0601 	add.w	r6, ip, r1
9001f646:	d135      	bne.n	9001f6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001f648:	f1a0 0e02 	sub.w	lr, r0, #2
9001f64c:	b2b6      	uxth	r6, r6
9001f64e:	45b4      	cmp	ip, r6
9001f650:	f040 808c 	bne.w	9001f76c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001f654:	9908      	ldr	r1, [sp, #32]
9001f656:	4297      	cmp	r7, r2
9001f658:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f65c:	d3e2      	bcc.n	9001f624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001f65e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001f660:	9904      	ldr	r1, [sp, #16]
9001f662:	8812      	ldrh	r2, [r2, #0]
9001f664:	1a52      	subs	r2, r2, r1
9001f666:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001f668:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f66c:	9a07      	ldr	r2, [sp, #28]
9001f66e:	3201      	adds	r2, #1
9001f670:	428a      	cmp	r2, r1
9001f672:	9207      	str	r2, [sp, #28]
9001f674:	f040 8087 	bne.w	9001f786 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001f678:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001f67c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001f680:	9b04      	ldr	r3, [sp, #16]
9001f682:	1bed      	subs	r5, r5, r7
9001f684:	b2ad      	uxth	r5, r5
9001f686:	2d00      	cmp	r5, #0
9001f688:	bf08      	it	eq
9001f68a:	461a      	moveq	r2, r3
9001f68c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f68e:	bf18      	it	ne
9001f690:	2200      	movne	r2, #0
9001f692:	3301      	adds	r3, #1
9001f694:	b292      	uxth	r2, r2
9001f696:	930d      	str	r3, [sp, #52]	@ 0x34
9001f698:	e70d      	b.n	9001f4b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001f69a:	1bd1      	subs	r1, r2, r7
9001f69c:	9708      	str	r7, [sp, #32]
9001f69e:	b28b      	uxth	r3, r1
9001f6a0:	9301      	str	r3, [sp, #4]
9001f6a2:	462b      	mov	r3, r5
9001f6a4:	e7ca      	b.n	9001f63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001f6a6:	bf00      	nop
9001f6a8:	240218cc 	.word	0x240218cc
9001f6ac:	240218c6 	.word	0x240218c6
9001f6b0:	fffff7fb 	.word	0xfffff7fb
9001f6b4:	b2b6      	uxth	r6, r6
9001f6b6:	900b      	str	r0, [sp, #44]	@ 0x2c
9001f6b8:	45b4      	cmp	ip, r6
9001f6ba:	d0cb      	beq.n	9001f654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001f6bc:	f10c 0101 	add.w	r1, ip, #1
9001f6c0:	44a4      	add	ip, r4
9001f6c2:	9117      	str	r1, [sp, #92]	@ 0x5c
9001f6c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001f6c8:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f6ca:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001f6ce:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001f6d0:	ea4f 2825 	mov.w	r8, r5, asr #8
9001f6d4:	f8b1 c000 	ldrh.w	ip, [r1]
9001f6d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f6da:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001f6de:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001f6e2:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001f6e6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001f6ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f6ee:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001f6f2:	fb1e fe01 	smulbb	lr, lr, r1
9001f6f6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f6f8:	fa5f fc8c 	uxtb.w	ip, ip
9001f6fc:	fb08 e801 	mla	r8, r8, r1, lr
9001f700:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001f704:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f706:	00ed      	lsls	r5, r5, #3
9001f708:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001f70c:	fa1f f888 	uxth.w	r8, r8
9001f710:	fb19 f901 	smulbb	r9, r9, r1
9001f714:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f716:	b2ed      	uxtb	r5, r5
9001f718:	fb0e 9e01 	mla	lr, lr, r1, r9
9001f71c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f71e:	fb1c fc01 	smulbb	ip, ip, r1
9001f722:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001f724:	fa1f fe8e 	uxth.w	lr, lr
9001f728:	fb05 c501 	mla	r5, r5, r1, ip
9001f72c:	f108 0c01 	add.w	ip, r8, #1
9001f730:	f10e 0901 	add.w	r9, lr, #1
9001f734:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001f736:	b2ad      	uxth	r5, r5
9001f738:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001f73c:	f105 0c01 	add.w	ip, r5, #1
9001f740:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001f744:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001f748:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001f74c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f750:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f754:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f758:	ea4c 0808 	orr.w	r8, ip, r8
9001f75c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001f760:	ea48 0809 	orr.w	r8, r8, r9
9001f764:	f821 8b02 	strh.w	r8, [r1], #2
9001f768:	910b      	str	r1, [sp, #44]	@ 0x2c
9001f76a:	e7a5      	b.n	9001f6b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001f76c:	f10c 0801 	add.w	r8, ip, #1
9001f770:	44a4      	add	ip, r4
9001f772:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f774:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001f778:	fa1f fc88 	uxth.w	ip, r8
9001f77c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001f780:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001f784:	e763      	b.n	9001f64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001f786:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f78a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f78e:	1aad      	subs	r5, r5, r2
9001f790:	b2ad      	uxth	r5, r5
9001f792:	2d00      	cmp	r5, #0
9001f794:	bf18      	it	ne
9001f796:	2200      	movne	r2, #0
9001f798:	9201      	str	r2, [sp, #4]
9001f79a:	e744      	b.n	9001f626 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001f79c:	4b03      	ldr	r3, [pc, #12]	@ (9001f7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001f79e:	6818      	ldr	r0, [r3, #0]
9001f7a0:	6803      	ldr	r3, [r0, #0]
9001f7a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f7a4:	4798      	blx	r3
9001f7a6:	b01f      	add	sp, #124	@ 0x7c
9001f7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f7ac:	240218cc 	.word	0x240218cc

9001f7b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001f7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f7b4:	b093      	sub	sp, #76	@ 0x4c
9001f7b6:	4616      	mov	r6, r2
9001f7b8:	460d      	mov	r5, r1
9001f7ba:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001f7be:	9003      	str	r0, [sp, #12]
9001f7c0:	9201      	str	r2, [sp, #4]
9001f7c2:	2a00      	cmp	r2, #0
9001f7c4:	f000 8303 	beq.w	9001fdce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001f7c8:	6830      	ldr	r0, [r6, #0]
9001f7ca:	ac0e      	add	r4, sp, #56	@ 0x38
9001f7cc:	6871      	ldr	r1, [r6, #4]
9001f7ce:	c403      	stmia	r4!, {r0, r1}
9001f7d0:	6818      	ldr	r0, [r3, #0]
9001f7d2:	ac10      	add	r4, sp, #64	@ 0x40
9001f7d4:	6859      	ldr	r1, [r3, #4]
9001f7d6:	c403      	stmia	r4!, {r0, r1}
9001f7d8:	a80e      	add	r0, sp, #56	@ 0x38
9001f7da:	f7f8 fb0f 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7de:	4631      	mov	r1, r6
9001f7e0:	a810      	add	r0, sp, #64	@ 0x40
9001f7e2:	f7f8 fb4f 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f7e6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001f7ea:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001f7ee:	bfdb      	ittet	le
9001f7f0:	b293      	uxthle	r3, r2
9001f7f2:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f7f6:	2301      	movgt	r3, #1
9001f7f8:	fb91 f3f3 	sdivle	r3, r1, r3
9001f7fc:	9304      	str	r3, [sp, #16]
9001f7fe:	f105 0308 	add.w	r3, r5, #8
9001f802:	9904      	ldr	r1, [sp, #16]
9001f804:	9308      	str	r3, [sp, #32]
9001f806:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001f80a:	440b      	add	r3, r1
9001f80c:	3b01      	subs	r3, #1
9001f80e:	fb93 f3f1 	sdiv	r3, r3, r1
9001f812:	3b01      	subs	r3, #1
9001f814:	9908      	ldr	r1, [sp, #32]
9001f816:	b29b      	uxth	r3, r3
9001f818:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001f81c:	9904      	ldr	r1, [sp, #16]
9001f81e:	9309      	str	r3, [sp, #36]	@ 0x24
9001f820:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001f824:	fb93 f0f1 	sdiv	r0, r3, r1
9001f828:	b284      	uxth	r4, r0
9001f82a:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001f82e:	9405      	str	r4, [sp, #20]
9001f830:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001f834:	fb05 3914 	mls	r9, r5, r4, r3
9001f838:	fb19 f902 	smulbb	r9, r9, r2
9001f83c:	4489      	add	r9, r1
9001f83e:	fa1f f989 	uxth.w	r9, r9
9001f842:	2d00      	cmp	r5, #0
9001f844:	d05d      	beq.n	9001f902 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001f846:	1e6a      	subs	r2, r5, #1
9001f848:	9808      	ldr	r0, [sp, #32]
9001f84a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001f84e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f850:	fa9a fa8a 	rev.w	sl, sl
9001f854:	4492      	add	sl, r2
9001f856:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001f85a:	f04f 0600 	mov.w	r6, #0
9001f85e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001f862:	4411      	add	r1, r2
9001f864:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001f868:	4413      	add	r3, r2
9001f86a:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001f86e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001f872:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001f876:	9302      	str	r3, [sp, #8]
9001f878:	4bca      	ldr	r3, [pc, #808]	@ (9001fba4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001f87a:	6818      	ldr	r0, [r3, #0]
9001f87c:	6803      	ldr	r3, [r0, #0]
9001f87e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f880:	4798      	blx	r3
9001f882:	4bc9      	ldr	r3, [pc, #804]	@ (9001fba8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001f884:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001f888:	2100      	movs	r1, #0
9001f88a:	881b      	ldrh	r3, [r3, #0]
9001f88c:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001f890:	fb03 2404 	mla	r4, r3, r4, r2
9001f894:	2280      	movs	r2, #128	@ 0x80
9001f896:	436b      	muls	r3, r5
9001f898:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f89c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001f8a0:	930d      	str	r3, [sp, #52]	@ 0x34
9001f8a2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001f8a6:	fb99 f3f3 	sdiv	r3, r9, r3
9001f8aa:	9306      	str	r3, [sp, #24]
9001f8ac:	9b01      	ldr	r3, [sp, #4]
9001f8ae:	43db      	mvns	r3, r3
9001f8b0:	b2db      	uxtb	r3, r3
9001f8b2:	930a      	str	r3, [sp, #40]	@ 0x28
9001f8b4:	9b03      	ldr	r3, [sp, #12]
9001f8b6:	3304      	adds	r3, #4
9001f8b8:	4618      	mov	r0, r3
9001f8ba:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f8bc:	f00c f90c 	bl	9002bad8 <memset>
9001f8c0:	4bba      	ldr	r3, [pc, #744]	@ (9001fbac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001f8c2:	9300      	str	r3, [sp, #0]
9001f8c4:	2300      	movs	r3, #0
9001f8c6:	9307      	str	r3, [sp, #28]
9001f8c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f8ca:	42a3      	cmp	r3, r4
9001f8cc:	f240 827a 	bls.w	9001fdc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001f8d0:	f04f 0e07 	mov.w	lr, #7
9001f8d4:	f1b9 0f00 	cmp.w	r9, #0
9001f8d8:	f000 8159 	beq.w	9001fb8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001f8dc:	f89a 5000 	ldrb.w	r5, [sl]
9001f8e0:	f10a 0701 	add.w	r7, sl, #1
9001f8e4:	b2ed      	uxtb	r5, r5
9001f8e6:	11aa      	asrs	r2, r5, #6
9001f8e8:	d10e      	bne.n	9001f908 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001f8ea:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001f8ee:	9b03      	ldr	r3, [sp, #12]
9001f8f0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001f8f4:	88ae      	ldrh	r6, [r5, #4]
9001f8f6:	f109 39ff 	add.w	r9, r9, #4294967295
9001f8fa:	fa1f f989 	uxth.w	r9, r9
9001f8fe:	46ba      	mov	sl, r7
9001f900:	e7e8      	b.n	9001f8d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001f902:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001f906:	e7a6      	b.n	9001f856 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001f908:	2a01      	cmp	r2, #1
9001f90a:	d129      	bne.n	9001f960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001f90c:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001f910:	f005 0203 	and.w	r2, r5, #3
9001f914:	2103      	movs	r1, #3
9001f916:	3b02      	subs	r3, #2
9001f918:	4413      	add	r3, r2
9001f91a:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001f91e:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001f922:	f003 031f 	and.w	r3, r3, #31
9001f926:	3a02      	subs	r2, #2
9001f928:	3d02      	subs	r5, #2
9001f92a:	f363 0604 	bfi	r6, r3, #0, #5
9001f92e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001f932:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001f936:	f362 164a 	bfi	r6, r2, #5, #6
9001f93a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001f93e:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001f942:	f005 051f 	and.w	r5, r5, #31
9001f946:	fb11 2205 	smlabb	r2, r1, r5, r2
9001f94a:	f365 26cf 	bfi	r6, r5, #11, #5
9001f94e:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001f952:	9a03      	ldr	r2, [sp, #12]
9001f954:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f958:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f95c:	809e      	strh	r6, [r3, #4]
9001f95e:	e7ca      	b.n	9001f8f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001f960:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001f964:	2a02      	cmp	r2, #2
9001f966:	b2ab      	uxth	r3, r5
9001f968:	d136      	bne.n	9001f9d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001f96a:	2101      	movs	r1, #1
9001f96c:	fb12 1205 	smlabb	r2, r2, r5, r1
9001f970:	4492      	add	sl, r2
9001f972:	463a      	mov	r2, r7
9001f974:	4552      	cmp	r2, sl
9001f976:	d01c      	beq.n	9001f9b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001f978:	4694      	mov	ip, r2
9001f97a:	f04f 0b03 	mov.w	fp, #3
9001f97e:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001f982:	7852      	ldrb	r2, [r2, #1]
9001f984:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001f988:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001f98c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001f990:	f001 021f 	and.w	r2, r1, #31
9001f994:	460e      	mov	r6, r1
9001f996:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001f99a:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001f99e:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001f9a2:	9a03      	ldr	r2, [sp, #12]
9001f9a4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001f9a8:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001f9ac:	4662      	mov	r2, ip
9001f9ae:	8081      	strh	r1, [r0, #4]
9001f9b0:	e7e0      	b.n	9001f974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001f9b2:	4599      	cmp	r9, r3
9001f9b4:	d20b      	bcs.n	9001f9ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001f9b6:	eba5 0509 	sub.w	r5, r5, r9
9001f9ba:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001f9be:	2d00      	cmp	r5, #0
9001f9c0:	f300 8208 	bgt.w	9001fdd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001f9c4:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001f9c8:	2301      	movs	r3, #1
9001f9ca:	9307      	str	r3, [sp, #28]
9001f9cc:	e00c      	b.n	9001f9e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001f9ce:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001f9d2:	eba9 0903 	sub.w	r9, r9, r3
9001f9d6:	e790      	b.n	9001f8fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001f9d8:	4599      	cmp	r9, r3
9001f9da:	d2fa      	bcs.n	9001f9d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001f9dc:	eba5 0509 	sub.w	r5, r5, r9
9001f9e0:	2d00      	cmp	r5, #0
9001f9e2:	dc1d      	bgt.n	9001fa20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001f9e4:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001f9e8:	f04f 0b00 	mov.w	fp, #0
9001f9ec:	f1b8 0f00 	cmp.w	r8, #0
9001f9f0:	f340 81a0 	ble.w	9001fd34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001f9f4:	783b      	ldrb	r3, [r7, #0]
9001f9f6:	f107 0a01 	add.w	sl, r7, #1
9001f9fa:	b2db      	uxtb	r3, r3
9001f9fc:	119a      	asrs	r2, r3, #6
9001f9fe:	f040 80d7 	bne.w	9001fbb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001fa02:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fa06:	9a03      	ldr	r2, [sp, #12]
9001fa08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fa0c:	889e      	ldrh	r6, [r3, #4]
9001fa0e:	9b01      	ldr	r3, [sp, #4]
9001fa10:	2bff      	cmp	r3, #255	@ 0xff
9001fa12:	f040 81e8 	bne.w	9001fde6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001fa16:	8026      	strh	r6, [r4, #0]
9001fa18:	f108 38ff 	add.w	r8, r8, #4294967295
9001fa1c:	3402      	adds	r4, #2
9001fa1e:	e0be      	b.n	9001fb9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001fa20:	9b02      	ldr	r3, [sp, #8]
9001fa22:	9a02      	ldr	r2, [sp, #8]
9001fa24:	42ab      	cmp	r3, r5
9001fa26:	bfa8      	it	ge
9001fa28:	462b      	movge	r3, r5
9001fa2a:	eba2 0803 	sub.w	r8, r2, r3
9001fa2e:	9a07      	ldr	r2, [sp, #28]
9001fa30:	1aed      	subs	r5, r5, r3
9001fa32:	2a00      	cmp	r2, #0
9001fa34:	d05a      	beq.n	9001faec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001fa36:	9a01      	ldr	r2, [sp, #4]
9001fa38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001fa3c:	2aff      	cmp	r2, #255	@ 0xff
9001fa3e:	d049      	beq.n	9001fad4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001fa40:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001fa44:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001fa48:	42a3      	cmp	r3, r4
9001fa4a:	f240 80a5 	bls.w	9001fb98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001fa4e:	46bc      	mov	ip, r7
9001fa50:	8820      	ldrh	r0, [r4, #0]
9001fa52:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001fa56:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001fa5a:	7879      	ldrb	r1, [r7, #1]
9001fa5c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001fa60:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001fa64:	fb1a fa09 	smulbb	sl, sl, r9
9001fa68:	b212      	sxth	r2, r2
9001fa6a:	b291      	uxth	r1, r2
9001fa6c:	00d2      	lsls	r2, r2, #3
9001fa6e:	120f      	asrs	r7, r1, #8
9001fa70:	10c9      	asrs	r1, r1, #3
9001fa72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fa76:	b2d2      	uxtb	r2, r2
9001fa78:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001fa7c:	fb07 a70e 	mla	r7, r7, lr, sl
9001fa80:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001fa84:	00c0      	lsls	r0, r0, #3
9001fa86:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001fa8a:	b2bf      	uxth	r7, r7
9001fa8c:	b2c0      	uxtb	r0, r0
9001fa8e:	fb1a fa09 	smulbb	sl, sl, r9
9001fa92:	fb10 f009 	smulbb	r0, r0, r9
9001fa96:	fb01 a10e 	mla	r1, r1, lr, sl
9001fa9a:	fb02 020e 	mla	r2, r2, lr, r0
9001fa9e:	1c78      	adds	r0, r7, #1
9001faa0:	b289      	uxth	r1, r1
9001faa2:	b292      	uxth	r2, r2
9001faa4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001faa8:	f101 0a01 	add.w	sl, r1, #1
9001faac:	1c50      	adds	r0, r2, #1
9001faae:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001fab2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001fab6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001faba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fabe:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001fac2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fac6:	4307      	orrs	r7, r0
9001fac8:	ea47 070a 	orr.w	r7, r7, sl
9001facc:	f824 7b02 	strh.w	r7, [r4], #2
9001fad0:	4667      	mov	r7, ip
9001fad2:	e7b9      	b.n	9001fa48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001fad4:	42a3      	cmp	r3, r4
9001fad6:	d95f      	bls.n	9001fb98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001fad8:	463a      	mov	r2, r7
9001fada:	f812 1b02 	ldrb.w	r1, [r2], #2
9001fade:	7878      	ldrb	r0, [r7, #1]
9001fae0:	4617      	mov	r7, r2
9001fae2:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001fae6:	f824 1b02 	strh.w	r1, [r4], #2
9001faea:	e7f3      	b.n	9001fad4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001faec:	9901      	ldr	r1, [sp, #4]
9001faee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001faf2:	b2b2      	uxth	r2, r6
9001faf4:	29ff      	cmp	r1, #255	@ 0xff
9001faf6:	d044      	beq.n	9001fb82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001faf8:	ea4f 2922 	mov.w	r9, r2, asr #8
9001fafc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fb00:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001fb04:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001fb08:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001fb0c:	4608      	mov	r0, r1
9001fb0e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001fb12:	fb09 f901 	mul.w	r9, r9, r1
9001fb16:	fb0e fe01 	mul.w	lr, lr, r1
9001fb1a:	00d1      	lsls	r1, r2, #3
9001fb1c:	b2c9      	uxtb	r1, r1
9001fb1e:	4341      	muls	r1, r0
9001fb20:	429c      	cmp	r4, r3
9001fb22:	f4bf af61 	bcs.w	9001f9e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001fb26:	8822      	ldrh	r2, [r4, #0]
9001fb28:	1210      	asrs	r0, r2, #8
9001fb2a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001fb2e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001fb32:	00d2      	lsls	r2, r2, #3
9001fb34:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001fb38:	fb00 900a 	mla	r0, r0, sl, r9
9001fb3c:	b2d2      	uxtb	r2, r2
9001fb3e:	fb0c ec0a 	mla	ip, ip, sl, lr
9001fb42:	b280      	uxth	r0, r0
9001fb44:	fb02 120a 	mla	r2, r2, sl, r1
9001fb48:	fa1f fc8c 	uxth.w	ip, ip
9001fb4c:	b292      	uxth	r2, r2
9001fb4e:	f100 0b01 	add.w	fp, r0, #1
9001fb52:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001fb56:	1c50      	adds	r0, r2, #1
9001fb58:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001fb5c:	f10c 0201 	add.w	r2, ip, #1
9001fb60:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001fb64:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001fb68:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001fb6c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001fb70:	ea40 0b0b 	orr.w	fp, r0, fp
9001fb74:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001fb78:	ea4b 0b0c 	orr.w	fp, fp, ip
9001fb7c:	f824 bb02 	strh.w	fp, [r4], #2
9001fb80:	e7ce      	b.n	9001fb20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001fb82:	429c      	cmp	r4, r3
9001fb84:	f4bf af30 	bcs.w	9001f9e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001fb88:	f824 2b02 	strh.w	r2, [r4], #2
9001fb8c:	e7f9      	b.n	9001fb82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001fb8e:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001fb92:	4657      	mov	r7, sl
9001fb94:	464d      	mov	r5, r9
9001fb96:	e727      	b.n	9001f9e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001fb98:	2300      	movs	r3, #0
9001fb9a:	e716      	b.n	9001f9ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001fb9c:	44bb      	add	fp, r7
9001fb9e:	4657      	mov	r7, sl
9001fba0:	e724      	b.n	9001f9ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001fba2:	bf00      	nop
9001fba4:	240218cc 	.word	0x240218cc
9001fba8:	240218c6 	.word	0x240218c6
9001fbac:	24005b80 	.word	0x24005b80
9001fbb0:	2a01      	cmp	r2, #1
9001fbb2:	d12a      	bne.n	9001fc0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001fbb4:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001fbb8:	f003 0203 	and.w	r2, r3, #3
9001fbbc:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001fbc0:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001fbc4:	3902      	subs	r1, #2
9001fbc6:	3802      	subs	r0, #2
9001fbc8:	3b02      	subs	r3, #2
9001fbca:	4411      	add	r1, r2
9001fbcc:	f001 011f 	and.w	r1, r1, #31
9001fbd0:	f361 0604 	bfi	r6, r1, #0, #5
9001fbd4:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001fbd8:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001fbdc:	f360 164a 	bfi	r6, r0, #5, #6
9001fbe0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001fbe4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001fbe8:	f002 031f 	and.w	r3, r2, #31
9001fbec:	2203      	movs	r2, #3
9001fbee:	f363 26cf 	bfi	r6, r3, #11, #5
9001fbf2:	fb12 0303 	smlabb	r3, r2, r3, r0
9001fbf6:	2207      	movs	r2, #7
9001fbf8:	fb12 3301 	smlabb	r3, r2, r1, r3
9001fbfc:	9a03      	ldr	r2, [sp, #12]
9001fbfe:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fc02:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fc06:	809e      	strh	r6, [r3, #4]
9001fc08:	e701      	b.n	9001fa0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001fc0a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001fc0e:	4647      	mov	r7, r8
9001fc10:	45a8      	cmp	r8, r5
9001fc12:	bfa8      	it	ge
9001fc14:	462f      	movge	r7, r5
9001fc16:	2a02      	cmp	r2, #2
9001fc18:	d154      	bne.n	9001fcc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001fc1a:	9b01      	ldr	r3, [sp, #4]
9001fc1c:	2bff      	cmp	r3, #255	@ 0xff
9001fc1e:	d01a      	beq.n	9001fc56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001fc20:	eb0b 0307 	add.w	r3, fp, r7
9001fc24:	2b40      	cmp	r3, #64	@ 0x40
9001fc26:	dd16      	ble.n	9001fc56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001fc28:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001fc2c:	9800      	ldr	r0, [sp, #0]
9001fc2e:	4649      	mov	r1, r9
9001fc30:	f7e2 fe60 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001fc34:	465a      	mov	r2, fp
9001fc36:	9b01      	ldr	r3, [sp, #4]
9001fc38:	4620      	mov	r0, r4
9001fc3a:	9900      	ldr	r1, [sp, #0]
9001fc3c:	444c      	add	r4, r9
9001fc3e:	f7e2 fe9f 	bl	90002980 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001fc42:	9b00      	ldr	r3, [sp, #0]
9001fc44:	f04f 0b00 	mov.w	fp, #0
9001fc48:	461a      	mov	r2, r3
9001fc4a:	4b6a      	ldr	r3, [pc, #424]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001fc4c:	429a      	cmp	r2, r3
9001fc4e:	bf0c      	ite	eq
9001fc50:	4b69      	ldreq	r3, [pc, #420]	@ (9001fdf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001fc52:	4b68      	ldrne	r3, [pc, #416]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001fc54:	9300      	str	r3, [sp, #0]
9001fc56:	4652      	mov	r2, sl
9001fc58:	2100      	movs	r1, #0
9001fc5a:	42a9      	cmp	r1, r5
9001fc5c:	da2c      	bge.n	9001fcb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001fc5e:	4694      	mov	ip, r2
9001fc60:	f04f 0903 	mov.w	r9, #3
9001fc64:	42b9      	cmp	r1, r7
9001fc66:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001fc6a:	7852      	ldrb	r2, [r2, #1]
9001fc6c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001fc70:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001fc74:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001fc78:	f003 021f 	and.w	r2, r3, #31
9001fc7c:	461e      	mov	r6, r3
9001fc7e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001fc82:	fb19 000e 	smlabb	r0, r9, lr, r0
9001fc86:	f04f 0e07 	mov.w	lr, #7
9001fc8a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001fc8e:	9a03      	ldr	r2, [sp, #12]
9001fc90:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001fc94:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001fc98:	8083      	strh	r3, [r0, #4]
9001fc9a:	da0a      	bge.n	9001fcb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001fc9c:	9a01      	ldr	r2, [sp, #4]
9001fc9e:	2aff      	cmp	r2, #255	@ 0xff
9001fca0:	bf13      	iteet	ne
9001fca2:	9a00      	ldrne	r2, [sp, #0]
9001fca4:	8023      	strheq	r3, [r4, #0]
9001fca6:	3402      	addeq	r4, #2
9001fca8:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001fcac:	bf18      	it	ne
9001fcae:	f10b 0b01 	addne.w	fp, fp, #1
9001fcb2:	3101      	adds	r1, #1
9001fcb4:	4662      	mov	r2, ip
9001fcb6:	e7d0      	b.n	9001fc5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001fcb8:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001fcbc:	eba8 0807 	sub.w	r8, r8, r7
9001fcc0:	1bed      	subs	r5, r5, r7
9001fcc2:	e76c      	b.n	9001fb9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001fcc4:	9b01      	ldr	r3, [sp, #4]
9001fcc6:	eba8 0807 	sub.w	r8, r8, r7
9001fcca:	1bed      	subs	r5, r5, r7
9001fccc:	fa1f f986 	uxth.w	r9, r6
9001fcd0:	2bff      	cmp	r3, #255	@ 0xff
9001fcd2:	d027      	beq.n	9001fd24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001fcd4:	eb0b 0307 	add.w	r3, fp, r7
9001fcd8:	2b40      	cmp	r3, #64	@ 0x40
9001fcda:	dd18      	ble.n	9001fd0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001fcdc:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001fce0:	9800      	ldr	r0, [sp, #0]
9001fce2:	4619      	mov	r1, r3
9001fce4:	930c      	str	r3, [sp, #48]	@ 0x30
9001fce6:	f7e2 fe05 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001fcea:	465a      	mov	r2, fp
9001fcec:	9b01      	ldr	r3, [sp, #4]
9001fcee:	4620      	mov	r0, r4
9001fcf0:	9900      	ldr	r1, [sp, #0]
9001fcf2:	f04f 0b00 	mov.w	fp, #0
9001fcf6:	f7e2 fe43 	bl	90002980 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001fcfa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001fcfc:	441c      	add	r4, r3
9001fcfe:	9b00      	ldr	r3, [sp, #0]
9001fd00:	461a      	mov	r2, r3
9001fd02:	4b3c      	ldr	r3, [pc, #240]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001fd04:	429a      	cmp	r2, r3
9001fd06:	bf0c      	ite	eq
9001fd08:	4b3b      	ldreq	r3, [pc, #236]	@ (9001fdf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001fd0a:	4b3a      	ldrne	r3, [pc, #232]	@ (9001fdf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001fd0c:	9300      	str	r3, [sp, #0]
9001fd0e:	9b00      	ldr	r3, [sp, #0]
9001fd10:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001fd14:	463b      	mov	r3, r7
9001fd16:	2b00      	cmp	r3, #0
9001fd18:	f43f af40 	beq.w	9001fb9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001fd1c:	f822 9b02 	strh.w	r9, [r2], #2
9001fd20:	3b01      	subs	r3, #1
9001fd22:	e7f8      	b.n	9001fd16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001fd24:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001fd28:	42a7      	cmp	r7, r4
9001fd2a:	f67f af38 	bls.w	9001fb9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001fd2e:	f824 9b02 	strh.w	r9, [r4], #2
9001fd32:	e7f9      	b.n	9001fd28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001fd34:	f1bb 0f00 	cmp.w	fp, #0
9001fd38:	d00c      	beq.n	9001fd54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001fd3a:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001fd3e:	9800      	ldr	r0, [sp, #0]
9001fd40:	4641      	mov	r1, r8
9001fd42:	f7e2 fdd7 	bl	900028f4 <_ZN8touchgfx5paint9flushLineEPmi>
9001fd46:	4620      	mov	r0, r4
9001fd48:	4444      	add	r4, r8
9001fd4a:	9b01      	ldr	r3, [sp, #4]
9001fd4c:	465a      	mov	r2, fp
9001fd4e:	9900      	ldr	r1, [sp, #0]
9001fd50:	f7e2 fe16 	bl	90002980 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001fd54:	4b29      	ldr	r3, [pc, #164]	@ (9001fdfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001fd56:	9a02      	ldr	r2, [sp, #8]
9001fd58:	881b      	ldrh	r3, [r3, #0]
9001fd5a:	1a9b      	subs	r3, r3, r2
9001fd5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001fd60:	9b06      	ldr	r3, [sp, #24]
9001fd62:	3301      	adds	r3, #1
9001fd64:	9306      	str	r3, [sp, #24]
9001fd66:	9a06      	ldr	r2, [sp, #24]
9001fd68:	9b04      	ldr	r3, [sp, #16]
9001fd6a:	4293      	cmp	r3, r2
9001fd6c:	d120      	bne.n	9001fdb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001fd6e:	9b05      	ldr	r3, [sp, #20]
9001fd70:	2100      	movs	r1, #0
9001fd72:	9a05      	ldr	r2, [sp, #20]
9001fd74:	f04f 0600 	mov.w	r6, #0
9001fd78:	f103 0801 	add.w	r8, r3, #1
9001fd7c:	9b08      	ldr	r3, [sp, #32]
9001fd7e:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001fd82:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001fd86:	2280      	movs	r2, #128	@ 0x80
9001fd88:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001fd8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fd8e:	ba3f      	rev	r7, r7
9001fd90:	eba9 0905 	sub.w	r9, r9, r5
9001fd94:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001fd96:	441f      	add	r7, r3
9001fd98:	f00b fe9e 	bl	9002bad8 <memset>
9001fd9c:	fa1f f989 	uxth.w	r9, r9
9001fda0:	2300      	movs	r3, #0
9001fda2:	f8cd 8014 	str.w	r8, [sp, #20]
9001fda6:	9306      	str	r3, [sp, #24]
9001fda8:	f7e2 fd9a 	bl	900028e0 <_ZN8touchgfx5paint8tearDownEv>
9001fdac:	46ba      	mov	sl, r7
9001fdae:	e58b      	b.n	9001f8c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001fdb0:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001fdb4:	9b02      	ldr	r3, [sp, #8]
9001fdb6:	eba9 0903 	sub.w	r9, r9, r3
9001fdba:	eba9 0505 	sub.w	r5, r9, r5
9001fdbe:	fa1f f985 	uxth.w	r9, r5
9001fdc2:	e7f1      	b.n	9001fda8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001fdc4:	4b0e      	ldr	r3, [pc, #56]	@ (9001fe00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001fdc6:	6818      	ldr	r0, [r3, #0]
9001fdc8:	6803      	ldr	r3, [r0, #0]
9001fdca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fdcc:	4798      	blx	r3
9001fdce:	b013      	add	sp, #76	@ 0x4c
9001fdd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fdd4:	9b02      	ldr	r3, [sp, #8]
9001fdd6:	9a02      	ldr	r2, [sp, #8]
9001fdd8:	42ab      	cmp	r3, r5
9001fdda:	bfa8      	it	ge
9001fddc:	462b      	movge	r3, r5
9001fdde:	eba2 0803 	sub.w	r8, r2, r3
9001fde2:	1aed      	subs	r5, r5, r3
9001fde4:	e627      	b.n	9001fa36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001fde6:	f108 38ff 	add.w	r8, r8, #4294967295
9001fdea:	fa1f f986 	uxth.w	r9, r6
9001fdee:	2500      	movs	r5, #0
9001fdf0:	2701      	movs	r7, #1
9001fdf2:	e76f      	b.n	9001fcd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001fdf4:	24005b80 	.word	0x24005b80
9001fdf8:	24005c80 	.word	0x24005c80
9001fdfc:	240218c6 	.word	0x240218c6
9001fe00:	240218cc 	.word	0x240218cc

9001fe04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001fe04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fe08:	b08f      	sub	sp, #60	@ 0x3c
9001fe0a:	461c      	mov	r4, r3
9001fe0c:	460f      	mov	r7, r1
9001fe0e:	9203      	str	r2, [sp, #12]
9001fe10:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001fe14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fe16:	9202      	str	r2, [sp, #8]
9001fe18:	2a00      	cmp	r2, #0
9001fe1a:	f000 8128 	beq.w	9002006e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001fe1e:	6820      	ldr	r0, [r4, #0]
9001fe20:	aa0a      	add	r2, sp, #40	@ 0x28
9001fe22:	6861      	ldr	r1, [r4, #4]
9001fe24:	c203      	stmia	r2!, {r0, r1}
9001fe26:	6818      	ldr	r0, [r3, #0]
9001fe28:	aa0c      	add	r2, sp, #48	@ 0x30
9001fe2a:	6859      	ldr	r1, [r3, #4]
9001fe2c:	c203      	stmia	r2!, {r0, r1}
9001fe2e:	a80a      	add	r0, sp, #40	@ 0x28
9001fe30:	f7f7 ffe4 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe34:	4621      	mov	r1, r4
9001fe36:	a80c      	add	r0, sp, #48	@ 0x30
9001fe38:	f7f8 f824 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fe3c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001fe40:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001fe44:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001fe48:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001fe4c:	bfdb      	ittet	le
9001fe4e:	b2b3      	uxthle	r3, r6
9001fe50:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001fe54:	2301      	movgt	r3, #1
9001fe56:	fb92 f3f3 	sdivle	r3, r2, r3
9001fe5a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fe5e:	441d      	add	r5, r3
9001fe60:	fb92 f1f3 	sdiv	r1, r2, r3
9001fe64:	fa1f fc81 	uxth.w	ip, r1
9001fe68:	3d01      	subs	r5, #1
9001fe6a:	fb0c 2413 	mls	r4, ip, r3, r2
9001fe6e:	4661      	mov	r1, ip
9001fe70:	fb14 f406 	smulbb	r4, r4, r6
9001fe74:	4404      	add	r4, r0
9001fe76:	fb95 f5f3 	sdiv	r5, r5, r3
9001fe7a:	b2a4      	uxth	r4, r4
9001fe7c:	b121      	cbz	r1, 9001fe88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001fe7e:	9b03      	ldr	r3, [sp, #12]
9001fe80:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001fe84:	ba1b      	rev	r3, r3
9001fe86:	441f      	add	r7, r3
9001fe88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001fe8c:	b2ad      	uxth	r5, r5
9001fe8e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001fe92:	4418      	add	r0, r3
9001fe94:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001fe98:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001fe9c:	00ad      	lsls	r5, r5, #2
9001fe9e:	441a      	add	r2, r3
9001fea0:	4b74      	ldr	r3, [pc, #464]	@ (90020074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001fea2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001fea6:	6818      	ldr	r0, [r3, #0]
9001fea8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001feac:	6803      	ldr	r3, [r0, #0]
9001feae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001feb0:	4798      	blx	r3
9001feb2:	4a71      	ldr	r2, [pc, #452]	@ (90020078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001feb4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001feb8:	2c00      	cmp	r4, #0
9001feba:	8813      	ldrh	r3, [r2, #0]
9001febc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001fec0:	bf0c      	ite	eq
9001fec2:	46c8      	moveq	r8, r9
9001fec4:	f04f 0800 	movne.w	r8, #0
9001fec8:	9209      	str	r2, [sp, #36]	@ 0x24
9001feca:	fb03 c101 	mla	r1, r3, r1, ip
9001fece:	4373      	muls	r3, r6
9001fed0:	fa1f f888 	uxth.w	r8, r8
9001fed4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001fed8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fedc:	9304      	str	r3, [sp, #16]
9001fede:	1d2b      	adds	r3, r5, #4
9001fee0:	9305      	str	r3, [sp, #20]
9001fee2:	2300      	movs	r3, #0
9001fee4:	9301      	str	r3, [sp, #4]
9001fee6:	9a04      	ldr	r2, [sp, #16]
9001fee8:	4282      	cmp	r2, r0
9001feea:	f240 80bb 	bls.w	90020064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001feee:	b95b      	cbnz	r3, 9001ff08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001fef0:	783a      	ldrb	r2, [r7, #0]
9001fef2:	0993      	lsrs	r3, r2, #6
9001fef4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001fef8:	9201      	str	r2, [sp, #4]
9001fefa:	1e5a      	subs	r2, r3, #1
9001fefc:	2a02      	cmp	r2, #2
9001fefe:	bf8d      	iteet	hi
9001ff00:	787b      	ldrbhi	r3, [r7, #1]
9001ff02:	3701      	addls	r7, #1
9001ff04:	b29b      	uxthls	r3, r3
9001ff06:	3702      	addhi	r7, #2
9001ff08:	b184      	cbz	r4, 9001ff2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ff0a:	429c      	cmp	r4, r3
9001ff0c:	bf91      	iteee	ls
9001ff0e:	1b1c      	subls	r4, r3, r4
9001ff10:	1ae4      	subhi	r4, r4, r3
9001ff12:	46c4      	movhi	ip, r8
9001ff14:	f04f 0a00 	movhi.w	sl, #0
9001ff18:	bf9b      	ittet	ls
9001ff1a:	fa1f fa84 	uxthls.w	sl, r4
9001ff1e:	2400      	movls	r4, #0
9001ff20:	b2a4      	uxthhi	r4, r4
9001ff22:	fa1f fc89 	uxthls.w	ip, r9
9001ff26:	4653      	mov	r3, sl
9001ff28:	46e0      	mov	r8, ip
9001ff2a:	e7dc      	b.n	9001fee6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001ff2c:	2204      	movs	r2, #4
9001ff2e:	9905      	ldr	r1, [sp, #20]
9001ff30:	4543      	cmp	r3, r8
9001ff32:	4615      	mov	r5, r2
9001ff34:	9a01      	ldr	r2, [sp, #4]
9001ff36:	bf24      	itt	cs
9001ff38:	eba3 0a08 	subcs.w	sl, r3, r8
9001ff3c:	46c6      	movcs	lr, r8
9001ff3e:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ff42:	9903      	ldr	r1, [sp, #12]
9001ff44:	bf3c      	itt	cc
9001ff46:	eba8 0c03 	subcc.w	ip, r8, r3
9001ff4a:	469e      	movcc	lr, r3
9001ff4c:	588a      	ldr	r2, [r1, r2]
9001ff4e:	bf26      	itte	cs
9001ff50:	fa1f fa8a 	uxthcs.w	sl, sl
9001ff54:	46a4      	movcs	ip, r4
9001ff56:	fa1f fc8c 	uxthcc.w	ip, ip
9001ff5a:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001ff5e:	bf38      	it	cc
9001ff60:	46a2      	movcc	sl, r4
9001ff62:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001ff66:	2900      	cmp	r1, #0
9001ff68:	d066      	beq.n	90020038 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001ff6a:	29ff      	cmp	r1, #255	@ 0xff
9001ff6c:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001ff70:	d114      	bne.n	9001ff9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ff72:	9d02      	ldr	r5, [sp, #8]
9001ff74:	2dff      	cmp	r5, #255	@ 0xff
9001ff76:	d111      	bne.n	9001ff9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ff78:	0951      	lsrs	r1, r2, #5
9001ff7a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ff7e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ff82:	4486      	add	lr, r0
9001ff84:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ff88:	f026 0607 	bic.w	r6, r6, #7
9001ff8c:	430e      	orrs	r6, r1
9001ff8e:	4316      	orrs	r6, r2
9001ff90:	b2b6      	uxth	r6, r6
9001ff92:	4586      	cmp	lr, r0
9001ff94:	d051      	beq.n	9002003a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ff96:	f820 6b02 	strh.w	r6, [r0], #2
9001ff9a:	e7fa      	b.n	9001ff92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ff9c:	9d02      	ldr	r5, [sp, #8]
9001ff9e:	b2f6      	uxtb	r6, r6
9001ffa0:	4486      	add	lr, r0
9001ffa2:	4369      	muls	r1, r5
9001ffa4:	1c4d      	adds	r5, r1, #1
9001ffa6:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001ffaa:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001ffae:	b2d2      	uxtb	r2, r2
9001ffb0:	122d      	asrs	r5, r5, #8
9001ffb2:	ea6f 0b05 	mvn.w	fp, r5
9001ffb6:	b2ad      	uxth	r5, r5
9001ffb8:	fb11 f105 	smulbb	r1, r1, r5
9001ffbc:	fa5f fb8b 	uxtb.w	fp, fp
9001ffc0:	fb16 f605 	smulbb	r6, r6, r5
9001ffc4:	fb12 f205 	smulbb	r2, r2, r5
9001ffc8:	b289      	uxth	r1, r1
9001ffca:	b2b6      	uxth	r6, r6
9001ffcc:	b292      	uxth	r2, r2
9001ffce:	9106      	str	r1, [sp, #24]
9001ffd0:	9607      	str	r6, [sp, #28]
9001ffd2:	9208      	str	r2, [sp, #32]
9001ffd4:	4586      	cmp	lr, r0
9001ffd6:	d030      	beq.n	9002003a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ffd8:	8802      	ldrh	r2, [r0, #0]
9001ffda:	9906      	ldr	r1, [sp, #24]
9001ffdc:	1216      	asrs	r6, r2, #8
9001ffde:	10d5      	asrs	r5, r2, #3
9001ffe0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ffe4:	00d2      	lsls	r2, r2, #3
9001ffe6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ffea:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ffee:	b2d2      	uxtb	r2, r2
9001fff0:	fb06 160b 	mla	r6, r6, fp, r1
9001fff4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fff8:	9907      	ldr	r1, [sp, #28]
9001fffa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fffe:	b2b6      	uxth	r6, r6
90020000:	fb05 150b 	mla	r5, r5, fp, r1
90020004:	9908      	ldr	r1, [sp, #32]
90020006:	fb02 120b 	mla	r2, r2, fp, r1
9002000a:	1c71      	adds	r1, r6, #1
9002000c:	b2ad      	uxth	r5, r5
9002000e:	b292      	uxth	r2, r2
90020010:	eb01 2616 	add.w	r6, r1, r6, lsr #8
90020014:	1c51      	adds	r1, r2, #1
90020016:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9002001a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002001e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020022:	4316      	orrs	r6, r2
90020024:	1c6a      	adds	r2, r5, #1
90020026:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9002002a:	096d      	lsrs	r5, r5, #5
9002002c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020030:	432e      	orrs	r6, r5
90020032:	f820 6b02 	strh.w	r6, [r0], #2
90020036:	e7cd      	b.n	9001ffd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
90020038:	4470      	add	r0, lr
9002003a:	4543      	cmp	r3, r8
9002003c:	f4ff af73 	bcc.w	9001ff26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020040:	fa1f fc89 	uxth.w	ip, r9
90020044:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
90020048:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002004a:	eba4 040c 	sub.w	r4, r4, ip
9002004e:	881b      	ldrh	r3, [r3, #0]
90020050:	b2a4      	uxth	r4, r4
90020052:	eba3 0309 	sub.w	r3, r3, r9
90020056:	2c00      	cmp	r4, #0
90020058:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002005c:	bf18      	it	ne
9002005e:	f04f 0c00 	movne.w	ip, #0
90020062:	e760      	b.n	9001ff26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020064:	4b03      	ldr	r3, [pc, #12]	@ (90020074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
90020066:	6818      	ldr	r0, [r3, #0]
90020068:	6803      	ldr	r3, [r0, #0]
9002006a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002006c:	4798      	blx	r3
9002006e:	b00f      	add	sp, #60	@ 0x3c
90020070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020074:	240218cc 	.word	0x240218cc
90020078:	240218c6 	.word	0x240218c6

9002007c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002007c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020080:	b093      	sub	sp, #76	@ 0x4c
90020082:	461c      	mov	r4, r3
90020084:	9205      	str	r2, [sp, #20]
90020086:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9002008a:	9101      	str	r1, [sp, #4]
9002008c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002008e:	9202      	str	r2, [sp, #8]
90020090:	2a00      	cmp	r2, #0
90020092:	f000 812e 	beq.w	900202f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90020096:	6820      	ldr	r0, [r4, #0]
90020098:	aa0e      	add	r2, sp, #56	@ 0x38
9002009a:	6861      	ldr	r1, [r4, #4]
9002009c:	c203      	stmia	r2!, {r0, r1}
9002009e:	6818      	ldr	r0, [r3, #0]
900200a0:	aa10      	add	r2, sp, #64	@ 0x40
900200a2:	6859      	ldr	r1, [r3, #4]
900200a4:	c203      	stmia	r2!, {r0, r1}
900200a6:	a80e      	add	r0, sp, #56	@ 0x38
900200a8:	f7f7 fea8 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900200ac:	4621      	mov	r1, r4
900200ae:	a810      	add	r0, sp, #64	@ 0x40
900200b0:	f7f7 fee8 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900200b4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900200b8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
900200bc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
900200c0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
900200c4:	bfdb      	ittet	le
900200c6:	b2b3      	uxthle	r3, r6
900200c8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
900200cc:	2301      	movgt	r3, #1
900200ce:	fb92 f3f3 	sdivle	r3, r2, r3
900200d2:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
900200d6:	441d      	add	r5, r3
900200d8:	fb92 f1f3 	sdiv	r1, r2, r3
900200dc:	fa1f fc81 	uxth.w	ip, r1
900200e0:	3d01      	subs	r5, #1
900200e2:	fb0c 2413 	mls	r4, ip, r3, r2
900200e6:	4661      	mov	r1, ip
900200e8:	fb14 f406 	smulbb	r4, r4, r6
900200ec:	4404      	add	r4, r0
900200ee:	fb95 f5f3 	sdiv	r5, r5, r3
900200f2:	b2a4      	uxth	r4, r4
900200f4:	b131      	cbz	r1, 90020104 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
900200f6:	9b05      	ldr	r3, [sp, #20]
900200f8:	9901      	ldr	r1, [sp, #4]
900200fa:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
900200fe:	ba1b      	rev	r3, r3
90020100:	4419      	add	r1, r3
90020102:	9101      	str	r1, [sp, #4]
90020104:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020108:	b2ad      	uxth	r5, r5
9002010a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9002010e:	4418      	add	r0, r3
90020110:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
90020114:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
90020118:	00ad      	lsls	r5, r5, #2
9002011a:	441a      	add	r2, r3
9002011c:	4b76      	ldr	r3, [pc, #472]	@ (900202f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9002011e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
90020122:	6818      	ldr	r0, [r3, #0]
90020124:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
90020128:	6803      	ldr	r3, [r0, #0]
9002012a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002012c:	4798      	blx	r3
9002012e:	4973      	ldr	r1, [pc, #460]	@ (900202fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
90020130:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
90020134:	2c00      	cmp	r4, #0
90020136:	880b      	ldrh	r3, [r1, #0]
90020138:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9002013c:	910d      	str	r1, [sp, #52]	@ 0x34
9002013e:	fb03 c202 	mla	r2, r3, r2, ip
90020142:	bf08      	it	eq
90020144:	46dc      	moveq	ip, fp
90020146:	fb03 f306 	mul.w	r3, r3, r6
9002014a:	bf18      	it	ne
9002014c:	f04f 0c00 	movne.w	ip, #0
90020150:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020154:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020158:	fa1f fc8c 	uxth.w	ip, ip
9002015c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020160:	9106      	str	r1, [sp, #24]
90020162:	9308      	str	r3, [sp, #32]
90020164:	1d2b      	adds	r3, r5, #4
90020166:	9309      	str	r3, [sp, #36]	@ 0x24
90020168:	9b02      	ldr	r3, [sp, #8]
9002016a:	43da      	mvns	r2, r3
9002016c:	2300      	movs	r3, #0
9002016e:	b2d2      	uxtb	r2, r2
90020170:	9303      	str	r3, [sp, #12]
90020172:	9207      	str	r2, [sp, #28]
90020174:	9a08      	ldr	r2, [sp, #32]
90020176:	4282      	cmp	r2, r0
90020178:	f240 80b6 	bls.w	900202e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9002017c:	b963      	cbnz	r3, 90020198 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9002017e:	9b01      	ldr	r3, [sp, #4]
90020180:	781a      	ldrb	r2, [r3, #0]
90020182:	0993      	lsrs	r3, r2, #6
90020184:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020188:	9203      	str	r2, [sp, #12]
9002018a:	1e5a      	subs	r2, r3, #1
9002018c:	2a02      	cmp	r2, #2
9002018e:	d815      	bhi.n	900201bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
90020190:	9a01      	ldr	r2, [sp, #4]
90020192:	b29b      	uxth	r3, r3
90020194:	3201      	adds	r2, #1
90020196:	9201      	str	r2, [sp, #4]
90020198:	b1b4      	cbz	r4, 900201c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9002019a:	429c      	cmp	r4, r3
9002019c:	bf91      	iteee	ls
9002019e:	1b1c      	subls	r4, r3, r4
900201a0:	1ae4      	subhi	r4, r4, r3
900201a2:	4666      	movhi	r6, ip
900201a4:	f04f 0800 	movhi.w	r8, #0
900201a8:	bf9b      	ittet	ls
900201aa:	fa1f f884 	uxthls.w	r8, r4
900201ae:	2400      	movls	r4, #0
900201b0:	b2a4      	uxthhi	r4, r4
900201b2:	fa1f f68b 	uxthls.w	r6, fp
900201b6:	4643      	mov	r3, r8
900201b8:	46b4      	mov	ip, r6
900201ba:	e7db      	b.n	90020174 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
900201bc:	9a01      	ldr	r2, [sp, #4]
900201be:	9b01      	ldr	r3, [sp, #4]
900201c0:	3202      	adds	r2, #2
900201c2:	785b      	ldrb	r3, [r3, #1]
900201c4:	9201      	str	r2, [sp, #4]
900201c6:	e7e7      	b.n	90020198 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
900201c8:	2203      	movs	r2, #3
900201ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
900201cc:	4563      	cmp	r3, ip
900201ce:	4615      	mov	r5, r2
900201d0:	9a03      	ldr	r2, [sp, #12]
900201d2:	bf2c      	ite	cs
900201d4:	eba3 080c 	subcs.w	r8, r3, ip
900201d8:	ebac 0603 	subcc.w	r6, ip, r3
900201dc:	fb15 1202 	smlabb	r2, r5, r2, r1
900201e0:	9905      	ldr	r1, [sp, #20]
900201e2:	bf24      	itt	cs
900201e4:	fa1f f888 	uxthcs.w	r8, r8
900201e8:	46e1      	movcs	r9, ip
900201ea:	eb01 0502 	add.w	r5, r1, r2
900201ee:	9902      	ldr	r1, [sp, #8]
900201f0:	bf2f      	iteee	cs
900201f2:	4626      	movcs	r6, r4
900201f4:	b2b6      	uxthcc	r6, r6
900201f6:	4699      	movcc	r9, r3
900201f8:	46a0      	movcc	r8, r4
900201fa:	29ff      	cmp	r1, #255	@ 0xff
900201fc:	d04a      	beq.n	90020294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
900201fe:	9f06      	ldr	r7, [sp, #24]
90020200:	46ca      	mov	sl, r9
90020202:	78a9      	ldrb	r1, [r5, #2]
90020204:	9004      	str	r0, [sp, #16]
90020206:	4379      	muls	r1, r7
90020208:	910a      	str	r1, [sp, #40]	@ 0x28
9002020a:	7869      	ldrb	r1, [r5, #1]
9002020c:	4379      	muls	r1, r7
9002020e:	910b      	str	r1, [sp, #44]	@ 0x2c
90020210:	9905      	ldr	r1, [sp, #20]
90020212:	5c8a      	ldrb	r2, [r1, r2]
90020214:	437a      	muls	r2, r7
90020216:	920c      	str	r2, [sp, #48]	@ 0x30
90020218:	f1ba 0f00 	cmp.w	sl, #0
9002021c:	d03d      	beq.n	9002029a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9002021e:	9a04      	ldr	r2, [sp, #16]
90020220:	f10a 3aff 	add.w	sl, sl, #4294967295
90020224:	9f07      	ldr	r7, [sp, #28]
90020226:	8812      	ldrh	r2, [r2, #0]
90020228:	fa1f fa8a 	uxth.w	sl, sl
9002022c:	46be      	mov	lr, r7
9002022e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90020230:	1215      	asrs	r5, r2, #8
90020232:	10d1      	asrs	r1, r2, #3
90020234:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020238:	00d2      	lsls	r2, r2, #3
9002023a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002023e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020242:	b2d2      	uxtb	r2, r2
90020244:	fb05 750e 	mla	r5, r5, lr, r7
90020248:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9002024c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002024e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020252:	b2ad      	uxth	r5, r5
90020254:	fb01 710e 	mla	r1, r1, lr, r7
90020258:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9002025a:	fb02 720e 	mla	r2, r2, lr, r7
9002025e:	f105 0e01 	add.w	lr, r5, #1
90020262:	b289      	uxth	r1, r1
90020264:	b292      	uxth	r2, r2
90020266:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9002026a:	f102 0e01 	add.w	lr, r2, #1
9002026e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90020272:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
90020276:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002027a:	4315      	orrs	r5, r2
9002027c:	1c4a      	adds	r2, r1, #1
9002027e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020282:	9a04      	ldr	r2, [sp, #16]
90020284:	0949      	lsrs	r1, r1, #5
90020286:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002028a:	430d      	orrs	r5, r1
9002028c:	f822 5b02 	strh.w	r5, [r2], #2
90020290:	9204      	str	r2, [sp, #16]
90020292:	e7c1      	b.n	90020218 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
90020294:	4649      	mov	r1, r9
90020296:	4686      	mov	lr, r0
90020298:	b999      	cbnz	r1, 900202c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9002029a:	4563      	cmp	r3, ip
9002029c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
900202a0:	d389      	bcc.n	900201b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
900202a2:	fa1f f68b 	uxth.w	r6, fp
900202a6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
900202aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900202ac:	1ba4      	subs	r4, r4, r6
900202ae:	881b      	ldrh	r3, [r3, #0]
900202b0:	b2a4      	uxth	r4, r4
900202b2:	eba3 030b 	sub.w	r3, r3, fp
900202b6:	2c00      	cmp	r4, #0
900202b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900202bc:	bf18      	it	ne
900202be:	2600      	movne	r6, #0
900202c0:	e779      	b.n	900201b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
900202c2:	78aa      	ldrb	r2, [r5, #2]
900202c4:	3901      	subs	r1, #1
900202c6:	4f0e      	ldr	r7, [pc, #56]	@ (90020300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
900202c8:	b289      	uxth	r1, r1
900202ca:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
900202ce:	786a      	ldrb	r2, [r5, #1]
900202d0:	00d2      	lsls	r2, r2, #3
900202d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900202d6:	ea4a 0202 	orr.w	r2, sl, r2
900202da:	f895 a000 	ldrb.w	sl, [r5]
900202de:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
900202e2:	f82e 2b02 	strh.w	r2, [lr], #2
900202e6:	e7d7      	b.n	90020298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
900202e8:	4b03      	ldr	r3, [pc, #12]	@ (900202f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
900202ea:	6818      	ldr	r0, [r3, #0]
900202ec:	6803      	ldr	r3, [r0, #0]
900202ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900202f0:	4798      	blx	r3
900202f2:	b013      	add	sp, #76	@ 0x4c
900202f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900202f8:	240218cc 	.word	0x240218cc
900202fc:	240218c6 	.word	0x240218c6
90020300:	fffff800 	.word	0xfffff800

90020304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90020304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020308:	b09d      	sub	sp, #116	@ 0x74
9002030a:	461c      	mov	r4, r3
9002030c:	4683      	mov	fp, r0
9002030e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020310:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
90020314:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
90020318:	920e      	str	r2, [sp, #56]	@ 0x38
9002031a:	2a00      	cmp	r2, #0
9002031c:	f000 81e4 	beq.w	900206e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
90020320:	6820      	ldr	r0, [r4, #0]
90020322:	aa18      	add	r2, sp, #96	@ 0x60
90020324:	6861      	ldr	r1, [r4, #4]
90020326:	c203      	stmia	r2!, {r0, r1}
90020328:	6818      	ldr	r0, [r3, #0]
9002032a:	aa1a      	add	r2, sp, #104	@ 0x68
9002032c:	6859      	ldr	r1, [r3, #4]
9002032e:	c203      	stmia	r2!, {r0, r1}
90020330:	a818      	add	r0, sp, #96	@ 0x60
90020332:	f7f7 fd63 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020336:	4621      	mov	r1, r4
90020338:	a81a      	add	r0, sp, #104	@ 0x68
9002033a:	f7f7 fda3 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002033e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
90020342:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
90020346:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9002034a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9002034e:	bfdb      	ittet	le
90020350:	b29a      	uxthle	r2, r3
90020352:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90020356:	2201      	movgt	r2, #1
90020358:	fb91 f2f2 	sdivle	r2, r1, r2
9002035c:	9202      	str	r2, [sp, #8]
9002035e:	9802      	ldr	r0, [sp, #8]
90020360:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
90020364:	9902      	ldr	r1, [sp, #8]
90020366:	fb92 f0f0 	sdiv	r0, r2, r0
9002036a:	b280      	uxth	r0, r0
9002036c:	440c      	add	r4, r1
9002036e:	900f      	str	r0, [sp, #60]	@ 0x3c
90020370:	3c01      	subs	r4, #1
90020372:	9802      	ldr	r0, [sp, #8]
90020374:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90020376:	fb05 2510 	mls	r5, r5, r0, r2
9002037a:	fb94 f4f1 	sdiv	r4, r4, r1
9002037e:	fb15 f503 	smulbb	r5, r5, r3
90020382:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
90020386:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9002038a:	3401      	adds	r4, #1
9002038c:	440d      	add	r5, r1
9002038e:	4419      	add	r1, r3
90020390:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
90020394:	b2a4      	uxth	r4, r4
90020396:	441a      	add	r2, r3
90020398:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9002039c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
900203a0:	00a4      	lsls	r4, r4, #2
900203a2:	9306      	str	r3, [sp, #24]
900203a4:	b2ad      	uxth	r5, r5
900203a6:	4bb3      	ldr	r3, [pc, #716]	@ (90020674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
900203a8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
900203ac:	6818      	ldr	r0, [r3, #0]
900203ae:	6803      	ldr	r3, [r0, #0]
900203b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900203b2:	4798      	blx	r3
900203b4:	4bb0      	ldr	r3, [pc, #704]	@ (90020678 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
900203b6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
900203ba:	2d00      	cmp	r5, #0
900203bc:	881a      	ldrh	r2, [r3, #0]
900203be:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
900203c2:	fb02 f606 	mul.w	r6, r2, r6
900203c6:	fb02 7101 	mla	r1, r2, r1, r7
900203ca:	9316      	str	r3, [sp, #88]	@ 0x58
900203cc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
900203d0:	4baa      	ldr	r3, [pc, #680]	@ (9002067c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
900203d2:	bf18      	it	ne
900203d4:	2100      	movne	r1, #0
900203d6:	eb08 0246 	add.w	r2, r8, r6, lsl #1
900203da:	eba3 030b 	sub.w	r3, r3, fp
900203de:	920a      	str	r2, [sp, #40]	@ 0x28
900203e0:	f104 0204 	add.w	r2, r4, #4
900203e4:	9317      	str	r3, [sp, #92]	@ 0x5c
900203e6:	9213      	str	r2, [sp, #76]	@ 0x4c
900203e8:	9a06      	ldr	r2, [sp, #24]
900203ea:	bf08      	it	eq
900203ec:	4611      	moveq	r1, r2
900203ee:	2200      	movs	r2, #0
900203f0:	b289      	uxth	r1, r1
900203f2:	920d      	str	r2, [sp, #52]	@ 0x34
900203f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900203f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900203f8:	fa12 f383 	uxtah	r3, r2, r3
900203fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900203fe:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90020402:	3304      	adds	r3, #4
90020404:	9308      	str	r3, [sp, #32]
90020406:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020408:	4543      	cmp	r3, r8
9002040a:	f240 8168 	bls.w	900206de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9002040e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
90020412:	f04f 0e01 	mov.w	lr, #1
90020416:	9a02      	ldr	r2, [sp, #8]
90020418:	9808      	ldr	r0, [sp, #32]
9002041a:	fbb5 f3f3 	udiv	r3, r5, r3
9002041e:	1ad3      	subs	r3, r2, r3
90020420:	7800      	ldrb	r0, [r0, #0]
90020422:	b29b      	uxth	r3, r3
90020424:	9010      	str	r0, [sp, #64]	@ 0x40
90020426:	3001      	adds	r0, #1
90020428:	9314      	str	r3, [sp, #80]	@ 0x50
9002042a:	9b08      	ldr	r3, [sp, #32]
9002042c:	9007      	str	r0, [sp, #28]
9002042e:	785a      	ldrb	r2, [r3, #1]
90020430:	789b      	ldrb	r3, [r3, #2]
90020432:	021b      	lsls	r3, r3, #8
90020434:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90020438:	9a08      	ldr	r2, [sp, #32]
9002043a:	78d2      	ldrb	r2, [r2, #3]
9002043c:	4313      	orrs	r3, r2
9002043e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020440:	441a      	add	r2, r3
90020442:	1c50      	adds	r0, r2, #1
90020444:	7852      	ldrb	r2, [r2, #1]
90020446:	9005      	str	r0, [sp, #20]
90020448:	0212      	lsls	r2, r2, #8
9002044a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002044c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
90020450:	5cc3      	ldrb	r3, [r0, r3]
90020452:	431a      	orrs	r2, r3
90020454:	b293      	uxth	r3, r2
90020456:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9002045a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002045c:	2300      	movs	r3, #0
9002045e:	9309      	str	r3, [sp, #36]	@ 0x24
90020460:	2301      	movs	r3, #1
90020462:	9301      	str	r3, [sp, #4]
90020464:	9304      	str	r3, [sp, #16]
90020466:	2300      	movs	r3, #0
90020468:	9303      	str	r3, [sp, #12]
9002046a:	2d00      	cmp	r5, #0
9002046c:	d07d      	beq.n	9002056a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9002046e:	45ae      	cmp	lr, r5
90020470:	d26c      	bcs.n	9002054c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
90020472:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020474:	eba5 050e 	sub.w	r5, r5, lr
90020478:	460c      	mov	r4, r1
9002047a:	4543      	cmp	r3, r8
9002047c:	b2ad      	uxth	r5, r5
9002047e:	d802      	bhi.n	90020486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
90020480:	e071      	b.n	90020566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
90020482:	2b00      	cmp	r3, #0
90020484:	d15d      	bne.n	90020542 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
90020486:	9b05      	ldr	r3, [sp, #20]
90020488:	9a04      	ldr	r2, [sp, #16]
9002048a:	785b      	ldrb	r3, [r3, #1]
9002048c:	f1c2 0207 	rsb	r2, r2, #7
90020490:	9904      	ldr	r1, [sp, #16]
90020492:	4093      	lsls	r3, r2
90020494:	005b      	lsls	r3, r3, #1
90020496:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9002049a:	9b05      	ldr	r3, [sp, #20]
9002049c:	781b      	ldrb	r3, [r3, #0]
9002049e:	410b      	asrs	r3, r1
900204a0:	3101      	adds	r1, #1
900204a2:	b2c9      	uxtb	r1, r1
900204a4:	b2db      	uxtb	r3, r3
900204a6:	2908      	cmp	r1, #8
900204a8:	9104      	str	r1, [sp, #16]
900204aa:	9905      	ldr	r1, [sp, #20]
900204ac:	ea43 0302 	orr.w	r3, r3, r2
900204b0:	bf0c      	ite	eq
900204b2:	3102      	addeq	r1, #2
900204b4:	3101      	addne	r1, #1
900204b6:	b29a      	uxth	r2, r3
900204b8:	bf05      	ittet	eq
900204ba:	9105      	streq	r1, [sp, #20]
900204bc:	2100      	moveq	r1, #0
900204be:	9105      	strne	r1, [sp, #20]
900204c0:	9104      	streq	r1, [sp, #16]
900204c2:	9910      	ldr	r1, [sp, #64]	@ 0x40
900204c4:	4291      	cmp	r1, r2
900204c6:	d30a      	bcc.n	900204de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
900204c8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
900204cc:	2301      	movs	r3, #1
900204ce:	9907      	ldr	r1, [sp, #28]
900204d0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
900204d4:	d30f      	bcc.n	900204f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
900204d6:	2100      	movs	r1, #0
900204d8:	9301      	str	r3, [sp, #4]
900204da:	9103      	str	r1, [sp, #12]
900204dc:	e032      	b.n	90020544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
900204de:	9b07      	ldr	r3, [sp, #28]
900204e0:	429a      	cmp	r2, r3
900204e2:	d318      	bcc.n	90020516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
900204e4:	9b01      	ldr	r3, [sp, #4]
900204e6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
900204ea:	445b      	add	r3, fp
900204ec:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
900204f0:	9b01      	ldr	r3, [sp, #4]
900204f2:	3301      	adds	r3, #1
900204f4:	b29b      	uxth	r3, r3
900204f6:	9907      	ldr	r1, [sp, #28]
900204f8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
900204fc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020500:	7108      	strb	r0, [r1, #4]
90020502:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020504:	80c8      	strh	r0, [r1, #6]
90020506:	9801      	ldr	r0, [sp, #4]
90020508:	3001      	adds	r0, #1
9002050a:	7148      	strb	r0, [r1, #5]
9002050c:	9907      	ldr	r1, [sp, #28]
9002050e:	3101      	adds	r1, #1
90020510:	b289      	uxth	r1, r1
90020512:	9107      	str	r1, [sp, #28]
90020514:	e7df      	b.n	900204d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
90020516:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9002051a:	4611      	mov	r1, r2
9002051c:	795b      	ldrb	r3, [r3, #5]
9002051e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
90020522:	4458      	add	r0, fp
90020524:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
90020526:	4406      	add	r6, r0
90020528:	2e00      	cmp	r6, #0
9002052a:	dd06      	ble.n	9002053a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9002052c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020530:	790e      	ldrb	r6, [r1, #4]
90020532:	f800 6d01 	strb.w	r6, [r0, #-1]!
90020536:	88c9      	ldrh	r1, [r1, #6]
90020538:	e7f4      	b.n	90020524 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9002053a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9002053e:	b29b      	uxth	r3, r3
90020540:	e7c5      	b.n	900204ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
90020542:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020544:	4621      	mov	r1, r4
90020546:	920b      	str	r2, [sp, #44]	@ 0x2c
90020548:	469e      	mov	lr, r3
9002054a:	e78e      	b.n	9002046a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9002054c:	9a03      	ldr	r2, [sp, #12]
9002054e:	ebae 0305 	sub.w	r3, lr, r5
90020552:	f8bd 4018 	ldrh.w	r4, [sp, #24]
90020556:	442a      	add	r2, r5
90020558:	b29b      	uxth	r3, r3
9002055a:	b292      	uxth	r2, r2
9002055c:	9203      	str	r2, [sp, #12]
9002055e:	2500      	movs	r5, #0
90020560:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020562:	4542      	cmp	r2, r8
90020564:	d88d      	bhi.n	90020482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
90020566:	4621      	mov	r1, r4
90020568:	e74d      	b.n	90020406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9002056a:	458e      	cmp	lr, r1
9002056c:	f04f 0900 	mov.w	r9, #0
90020570:	bf2b      	itete	cs
90020572:	ebae 0301 	subcs.w	r3, lr, r1
90020576:	eba1 040e 	subcc.w	r4, r1, lr
9002057a:	462c      	movcs	r4, r5
9002057c:	462b      	movcc	r3, r5
9002057e:	bf27      	ittee	cs
90020580:	b29b      	uxthcs	r3, r3
90020582:	910c      	strcs	r1, [sp, #48]	@ 0x30
90020584:	b2a4      	uxthcc	r4, r4
90020586:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9002058a:	9a03      	ldr	r2, [sp, #12]
9002058c:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002058e:	444a      	add	r2, r9
90020590:	4548      	cmp	r0, r9
90020592:	b292      	uxth	r2, r2
90020594:	d074      	beq.n	90020680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
90020596:	2004      	movs	r0, #4
90020598:	445a      	add	r2, fp
9002059a:	4605      	mov	r5, r0
9002059c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
900205a0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900205a2:	fb15 0202 	smlabb	r2, r5, r2, r0
900205a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
900205a8:	5880      	ldr	r0, [r0, r2]
900205aa:	ea5f 6a10 	movs.w	sl, r0, lsr #24
900205ae:	d014      	beq.n	900205da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
900205b0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900205b4:	ea4f 2510 	mov.w	r5, r0, lsr #8
900205b8:	d112      	bne.n	900205e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
900205ba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900205bc:	2aff      	cmp	r2, #255	@ 0xff
900205be:	d10f      	bne.n	900205e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
900205c0:	0942      	lsrs	r2, r0, #5
900205c2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
900205c6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900205ca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900205ce:	f025 0507 	bic.w	r5, r5, #7
900205d2:	4315      	orrs	r5, r2
900205d4:	4305      	orrs	r5, r0
900205d6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
900205da:	f109 0901 	add.w	r9, r9, #1
900205de:	e7d4      	b.n	9002058a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
900205e0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
900205e4:	b2ed      	uxtb	r5, r5
900205e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
900205ea:	ea4f 272c 	mov.w	r7, ip, asr #8
900205ee:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
900205f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900205f6:	f3c0 4607 	ubfx	r6, r0, #16, #8
900205fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900205fe:	9215      	str	r2, [sp, #84]	@ 0x54
90020600:	fa5f fc8c 	uxtb.w	ip, ip
90020604:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90020606:	b2c0      	uxtb	r0, r0
90020608:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9002060c:	fb02 fa0a 	mul.w	sl, r2, sl
90020610:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
90020614:	f10a 0201 	add.w	r2, sl, #1
90020618:	eb02 222a 	add.w	r2, r2, sl, asr #8
9002061c:	1212      	asrs	r2, r2, #8
9002061e:	fa1f fa82 	uxth.w	sl, r2
90020622:	43d2      	mvns	r2, r2
90020624:	fb16 f60a 	smulbb	r6, r6, sl
90020628:	b2d2      	uxtb	r2, r2
9002062a:	fb10 f00a 	smulbb	r0, r0, sl
9002062e:	fb07 6702 	mla	r7, r7, r2, r6
90020632:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90020634:	fb0c 0002 	mla	r0, ip, r2, r0
90020638:	fb15 f50a 	smulbb	r5, r5, sl
9002063c:	b2bf      	uxth	r7, r7
9002063e:	b280      	uxth	r0, r0
90020640:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90020644:	fb06 5602 	mla	r6, r6, r2, r5
90020648:	1c7a      	adds	r2, r7, #1
9002064a:	1c45      	adds	r5, r0, #1
9002064c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90020650:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90020654:	b2b6      	uxth	r6, r6
90020656:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9002065a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9002065e:	432f      	orrs	r7, r5
90020660:	1c75      	adds	r5, r6, #1
90020662:	eb05 2516 	add.w	r5, r5, r6, lsr #8
90020666:	096d      	lsrs	r5, r5, #5
90020668:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002066c:	432f      	orrs	r7, r5
9002066e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
90020672:	e7b2      	b.n	900205da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
90020674:	240218cc 	.word	0x240218cc
90020678:	240218c6 	.word	0x240218c6
9002067c:	fffff7fb 	.word	0xfffff7fb
90020680:	9203      	str	r2, [sp, #12]
90020682:	458e      	cmp	lr, r1
90020684:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90020686:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9002068a:	f4ff af68 	bcc.w	9002055e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9002068e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
90020690:	9906      	ldr	r1, [sp, #24]
90020692:	8812      	ldrh	r2, [r2, #0]
90020694:	1a52      	subs	r2, r2, r1
90020696:	9914      	ldr	r1, [sp, #80]	@ 0x50
90020698:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9002069c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002069e:	3201      	adds	r2, #1
900206a0:	428a      	cmp	r2, r1
900206a2:	9209      	str	r2, [sp, #36]	@ 0x24
900206a4:	d111      	bne.n	900206ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
900206a6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
900206aa:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
900206ae:	9b06      	ldr	r3, [sp, #24]
900206b0:	eba5 0509 	sub.w	r5, r5, r9
900206b4:	b2ad      	uxth	r5, r5
900206b6:	2d00      	cmp	r5, #0
900206b8:	bf08      	it	eq
900206ba:	4619      	moveq	r1, r3
900206bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900206be:	bf18      	it	ne
900206c0:	2100      	movne	r1, #0
900206c2:	3301      	adds	r3, #1
900206c4:	b289      	uxth	r1, r1
900206c6:	930d      	str	r3, [sp, #52]	@ 0x34
900206c8:	e694      	b.n	900203f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
900206ca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
900206ce:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
900206d2:	1b2d      	subs	r5, r5, r4
900206d4:	b2ad      	uxth	r5, r5
900206d6:	2d00      	cmp	r5, #0
900206d8:	bf18      	it	ne
900206da:	2400      	movne	r4, #0
900206dc:	e740      	b.n	90020560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
900206de:	4b04      	ldr	r3, [pc, #16]	@ (900206f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
900206e0:	6818      	ldr	r0, [r3, #0]
900206e2:	6803      	ldr	r3, [r0, #0]
900206e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900206e6:	4798      	blx	r3
900206e8:	b01d      	add	sp, #116	@ 0x74
900206ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900206ee:	bf00      	nop
900206f0:	240218cc 	.word	0x240218cc

900206f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
900206f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900206f8:	b09f      	sub	sp, #124	@ 0x7c
900206fa:	461d      	mov	r5, r3
900206fc:	4604      	mov	r4, r0
900206fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020700:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
90020704:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
90020708:	920a      	str	r2, [sp, #40]	@ 0x28
9002070a:	2a00      	cmp	r2, #0
9002070c:	f000 81fe 	beq.w	90020b0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
90020710:	6828      	ldr	r0, [r5, #0]
90020712:	aa1a      	add	r2, sp, #104	@ 0x68
90020714:	6869      	ldr	r1, [r5, #4]
90020716:	c203      	stmia	r2!, {r0, r1}
90020718:	6818      	ldr	r0, [r3, #0]
9002071a:	aa1c      	add	r2, sp, #112	@ 0x70
9002071c:	6859      	ldr	r1, [r3, #4]
9002071e:	c203      	stmia	r2!, {r0, r1}
90020720:	a81a      	add	r0, sp, #104	@ 0x68
90020722:	f7f7 fb6b 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020726:	4629      	mov	r1, r5
90020728:	a81c      	add	r0, sp, #112	@ 0x70
9002072a:	f7f7 fbab 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002072e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
90020732:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
90020736:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9002073a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9002073e:	bfdb      	ittet	le
90020740:	b29a      	uxthle	r2, r3
90020742:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90020746:	2201      	movgt	r2, #1
90020748:	fb91 f2f2 	sdivle	r2, r1, r2
9002074c:	9201      	str	r2, [sp, #4]
9002074e:	9801      	ldr	r0, [sp, #4]
90020750:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
90020754:	9901      	ldr	r1, [sp, #4]
90020756:	fb92 f0f0 	sdiv	r0, r2, r0
9002075a:	b280      	uxth	r0, r0
9002075c:	440e      	add	r6, r1
9002075e:	9010      	str	r0, [sp, #64]	@ 0x40
90020760:	3e01      	subs	r6, #1
90020762:	9801      	ldr	r0, [sp, #4]
90020764:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90020766:	fb05 2510 	mls	r5, r5, r0, r2
9002076a:	fb96 f6f1 	sdiv	r6, r6, r1
9002076e:	fb15 f503 	smulbb	r5, r5, r3
90020772:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
90020776:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9002077a:	3601      	adds	r6, #1
9002077c:	440d      	add	r5, r1
9002077e:	4419      	add	r1, r3
90020780:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
90020784:	b2b6      	uxth	r6, r6
90020786:	441a      	add	r2, r3
90020788:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9002078c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
90020790:	b2ad      	uxth	r5, r5
90020792:	9304      	str	r3, [sp, #16]
90020794:	4b96      	ldr	r3, [pc, #600]	@ (900209f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
90020796:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9002079a:	6818      	ldr	r0, [r3, #0]
9002079c:	6803      	ldr	r3, [r0, #0]
9002079e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900207a0:	4798      	blx	r3
900207a2:	4b94      	ldr	r3, [pc, #592]	@ (900209f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
900207a4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
900207a8:	2d00      	cmp	r5, #0
900207aa:	881a      	ldrh	r2, [r3, #0]
900207ac:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
900207b0:	fb02 f707 	mul.w	r7, r2, r7
900207b4:	fb02 c101 	mla	r1, r2, r1, ip
900207b8:	9318      	str	r3, [sp, #96]	@ 0x60
900207ba:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
900207be:	4b8e      	ldr	r3, [pc, #568]	@ (900209f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
900207c0:	bf18      	it	ne
900207c2:	2100      	movne	r1, #0
900207c4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
900207c8:	eba3 0304 	sub.w	r3, r3, r4
900207cc:	920b      	str	r2, [sp, #44]	@ 0x2c
900207ce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900207d0:	9319      	str	r3, [sp, #100]	@ 0x64
900207d2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
900207d6:	f106 0204 	add.w	r2, r6, #4
900207da:	9206      	str	r2, [sp, #24]
900207dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900207de:	ea6f 0202 	mvn.w	r2, r2
900207e2:	b2d2      	uxtb	r2, r2
900207e4:	9215      	str	r2, [sp, #84]	@ 0x54
900207e6:	9a04      	ldr	r2, [sp, #16]
900207e8:	bf08      	it	eq
900207ea:	4611      	moveq	r1, r2
900207ec:	2200      	movs	r2, #0
900207ee:	b289      	uxth	r1, r1
900207f0:	920d      	str	r2, [sp, #52]	@ 0x34
900207f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900207f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900207f6:	fa12 f383 	uxtah	r3, r2, r3
900207fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900207fc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90020800:	3304      	adds	r3, #4
90020802:	9307      	str	r3, [sp, #28]
90020804:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020806:	455b      	cmp	r3, fp
90020808:	f240 817b 	bls.w	90020b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9002080c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
90020810:	f04f 0801 	mov.w	r8, #1
90020814:	9a01      	ldr	r2, [sp, #4]
90020816:	9807      	ldr	r0, [sp, #28]
90020818:	46c4      	mov	ip, r8
9002081a:	f8cd 8008 	str.w	r8, [sp, #8]
9002081e:	7800      	ldrb	r0, [r0, #0]
90020820:	fbb5 f3f3 	udiv	r3, r5, r3
90020824:	1ad3      	subs	r3, r2, r3
90020826:	9011      	str	r0, [sp, #68]	@ 0x44
90020828:	3001      	adds	r0, #1
9002082a:	b29b      	uxth	r3, r3
9002082c:	9005      	str	r0, [sp, #20]
9002082e:	9316      	str	r3, [sp, #88]	@ 0x58
90020830:	9b07      	ldr	r3, [sp, #28]
90020832:	785a      	ldrb	r2, [r3, #1]
90020834:	789b      	ldrb	r3, [r3, #2]
90020836:	021b      	lsls	r3, r3, #8
90020838:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9002083c:	9a07      	ldr	r2, [sp, #28]
9002083e:	78d2      	ldrb	r2, [r2, #3]
90020840:	4313      	orrs	r3, r2
90020842:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90020844:	441a      	add	r2, r3
90020846:	1c50      	adds	r0, r2, #1
90020848:	7852      	ldrb	r2, [r2, #1]
9002084a:	9003      	str	r0, [sp, #12]
9002084c:	0212      	lsls	r2, r2, #8
9002084e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90020850:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
90020854:	5cc3      	ldrb	r3, [r0, r3]
90020856:	431a      	orrs	r2, r3
90020858:	b293      	uxth	r3, r2
9002085a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9002085e:	930c      	str	r3, [sp, #48]	@ 0x30
90020860:	2300      	movs	r3, #0
90020862:	9308      	str	r3, [sp, #32]
90020864:	461a      	mov	r2, r3
90020866:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002086a:	930e      	str	r3, [sp, #56]	@ 0x38
9002086c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90020870:	930f      	str	r3, [sp, #60]	@ 0x3c
90020872:	2d00      	cmp	r5, #0
90020874:	d07d      	beq.n	90020972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
90020876:	45ac      	cmp	ip, r5
90020878:	d26d      	bcs.n	90020956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9002087a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002087c:	eba5 050c 	sub.w	r5, r5, ip
90020880:	4608      	mov	r0, r1
90020882:	455b      	cmp	r3, fp
90020884:	b2ad      	uxth	r5, r5
90020886:	d802      	bhi.n	9002088e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
90020888:	e071      	b.n	9002096e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9002088a:	2b00      	cmp	r3, #0
9002088c:	d15d      	bne.n	9002094a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9002088e:	9b03      	ldr	r3, [sp, #12]
90020890:	9a02      	ldr	r2, [sp, #8]
90020892:	785b      	ldrb	r3, [r3, #1]
90020894:	f1c2 0207 	rsb	r2, r2, #7
90020898:	9902      	ldr	r1, [sp, #8]
9002089a:	4093      	lsls	r3, r2
9002089c:	005b      	lsls	r3, r3, #1
9002089e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
900208a2:	9b03      	ldr	r3, [sp, #12]
900208a4:	781b      	ldrb	r3, [r3, #0]
900208a6:	410b      	asrs	r3, r1
900208a8:	3101      	adds	r1, #1
900208aa:	b2c9      	uxtb	r1, r1
900208ac:	b2db      	uxtb	r3, r3
900208ae:	2908      	cmp	r1, #8
900208b0:	9102      	str	r1, [sp, #8]
900208b2:	9903      	ldr	r1, [sp, #12]
900208b4:	ea43 0302 	orr.w	r3, r3, r2
900208b8:	bf0c      	ite	eq
900208ba:	3102      	addeq	r1, #2
900208bc:	3101      	addne	r1, #1
900208be:	b29a      	uxth	r2, r3
900208c0:	bf05      	ittet	eq
900208c2:	9103      	streq	r1, [sp, #12]
900208c4:	2100      	moveq	r1, #0
900208c6:	9103      	strne	r1, [sp, #12]
900208c8:	9102      	streq	r1, [sp, #8]
900208ca:	9911      	ldr	r1, [sp, #68]	@ 0x44
900208cc:	4291      	cmp	r1, r2
900208ce:	d30a      	bcc.n	900208e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
900208d0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
900208d4:	2301      	movs	r3, #1
900208d6:	9905      	ldr	r1, [sp, #20]
900208d8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
900208dc:	d30f      	bcc.n	900208fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
900208de:	2100      	movs	r1, #0
900208e0:	4698      	mov	r8, r3
900208e2:	9100      	str	r1, [sp, #0]
900208e4:	e032      	b.n	9002094c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
900208e6:	9b05      	ldr	r3, [sp, #20]
900208e8:	429a      	cmp	r2, r3
900208ea:	d318      	bcc.n	9002091e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
900208ec:	eb04 0308 	add.w	r3, r4, r8
900208f0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
900208f4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
900208f8:	f108 0301 	add.w	r3, r8, #1
900208fc:	b29b      	uxth	r3, r3
900208fe:	9905      	ldr	r1, [sp, #20]
90020900:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
90020904:	eb04 0181 	add.w	r1, r4, r1, lsl #2
90020908:	710e      	strb	r6, [r1, #4]
9002090a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002090c:	80ce      	strh	r6, [r1, #6]
9002090e:	f108 0601 	add.w	r6, r8, #1
90020912:	714e      	strb	r6, [r1, #5]
90020914:	9905      	ldr	r1, [sp, #20]
90020916:	3101      	adds	r1, #1
90020918:	b289      	uxth	r1, r1
9002091a:	9105      	str	r1, [sp, #20]
9002091c:	e7df      	b.n	900208de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9002091e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
90020922:	4611      	mov	r1, r2
90020924:	795b      	ldrb	r3, [r3, #5]
90020926:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9002092a:	4426      	add	r6, r4
9002092c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9002092e:	4437      	add	r7, r6
90020930:	2f00      	cmp	r7, #0
90020932:	dd06      	ble.n	90020942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
90020934:	eb04 0181 	add.w	r1, r4, r1, lsl #2
90020938:	790f      	ldrb	r7, [r1, #4]
9002093a:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002093e:	88c9      	ldrh	r1, [r1, #6]
90020940:	e7f4      	b.n	9002092c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
90020942:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
90020946:	b29b      	uxth	r3, r3
90020948:	e7c5      	b.n	900208d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9002094a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002094c:	920c      	str	r2, [sp, #48]	@ 0x30
9002094e:	4601      	mov	r1, r0
90020950:	9a00      	ldr	r2, [sp, #0]
90020952:	469c      	mov	ip, r3
90020954:	e78d      	b.n	90020872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
90020956:	ebac 0305 	sub.w	r3, ip, r5
9002095a:	1957      	adds	r7, r2, r5
9002095c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
90020960:	b2ba      	uxth	r2, r7
90020962:	b29b      	uxth	r3, r3
90020964:	9200      	str	r2, [sp, #0]
90020966:	2500      	movs	r5, #0
90020968:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002096a:	455a      	cmp	r2, fp
9002096c:	d88d      	bhi.n	9002088a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9002096e:	4601      	mov	r1, r0
90020970:	e748      	b.n	90020804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
90020972:	458c      	cmp	ip, r1
90020974:	bf27      	ittee	cs
90020976:	ebac 0301 	subcs.w	r3, ip, r1
9002097a:	4628      	movcs	r0, r5
9002097c:	eba1 000c 	subcc.w	r0, r1, ip
90020980:	462b      	movcc	r3, r5
90020982:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90020984:	bf27      	ittee	cs
90020986:	b29b      	uxthcs	r3, r3
90020988:	9109      	strcs	r1, [sp, #36]	@ 0x24
9002098a:	b280      	uxthcc	r0, r0
9002098c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
90020990:	2dff      	cmp	r5, #255	@ 0xff
90020992:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90020994:	eb02 0705 	add.w	r7, r2, r5
90020998:	b2bd      	uxth	r5, r7
9002099a:	9500      	str	r5, [sp, #0]
9002099c:	d12e      	bne.n	900209fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9002099e:	465e      	mov	r6, fp
900209a0:	9d00      	ldr	r5, [sp, #0]
900209a2:	42aa      	cmp	r2, r5
900209a4:	f040 8083 	bne.w	90020aae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
900209a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900209aa:	458c      	cmp	ip, r1
900209ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
900209b0:	d3d9      	bcc.n	90020966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
900209b2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900209b4:	9904      	ldr	r1, [sp, #16]
900209b6:	8812      	ldrh	r2, [r2, #0]
900209b8:	1a52      	subs	r2, r2, r1
900209ba:	9916      	ldr	r1, [sp, #88]	@ 0x58
900209bc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
900209c0:	9a08      	ldr	r2, [sp, #32]
900209c2:	3201      	adds	r2, #1
900209c4:	428a      	cmp	r2, r1
900209c6:	9208      	str	r2, [sp, #32]
900209c8:	f040 8091 	bne.w	90020aee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
900209cc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
900209d0:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
900209d4:	9b04      	ldr	r3, [sp, #16]
900209d6:	eba5 050c 	sub.w	r5, r5, ip
900209da:	b2ad      	uxth	r5, r5
900209dc:	2d00      	cmp	r5, #0
900209de:	bf08      	it	eq
900209e0:	4619      	moveq	r1, r3
900209e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900209e4:	bf18      	it	ne
900209e6:	2100      	movne	r1, #0
900209e8:	3301      	adds	r3, #1
900209ea:	b289      	uxth	r1, r1
900209ec:	930d      	str	r3, [sp, #52]	@ 0x34
900209ee:	e700      	b.n	900207f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
900209f0:	240218cc 	.word	0x240218cc
900209f4:	240218c6 	.word	0x240218c6
900209f8:	fffff7fb 	.word	0xfffff7fb
900209fc:	46d9      	mov	r9, fp
900209fe:	9d00      	ldr	r5, [sp, #0]
90020a00:	42aa      	cmp	r2, r5
90020a02:	d0d1      	beq.n	900209a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
90020a04:	1c55      	adds	r5, r2, #1
90020a06:	4422      	add	r2, r4
90020a08:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
90020a0c:	9a06      	ldr	r2, [sp, #24]
90020a0e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90020a12:	9517      	str	r5, [sp, #92]	@ 0x5c
90020a14:	4472      	add	r2, lr
90020a16:	9212      	str	r2, [sp, #72]	@ 0x48
90020a18:	f8b9 2000 	ldrh.w	r2, [r9]
90020a1c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90020a1e:	1216      	asrs	r6, r2, #8
90020a20:	f897 a002 	ldrb.w	sl, [r7, #2]
90020a24:	10d5      	asrs	r5, r2, #3
90020a26:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
90020a28:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020a2c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020a30:	00d2      	lsls	r2, r2, #3
90020a32:	fb1a fa07 	smulbb	sl, sl, r7
90020a36:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020a3a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020a3c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020a40:	b2d2      	uxtb	r2, r2
90020a42:	fb06 a607 	mla	r6, r6, r7, sl
90020a46:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90020a48:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020a4c:	f897 a001 	ldrb.w	sl, [r7, #1]
90020a50:	b2b6      	uxth	r6, r6
90020a52:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
90020a54:	fb1a fa07 	smulbb	sl, sl, r7
90020a58:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020a5a:	fb05 a507 	mla	r5, r5, r7, sl
90020a5e:	9f06      	ldr	r7, [sp, #24]
90020a60:	f106 0a01 	add.w	sl, r6, #1
90020a64:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020a68:	b2ad      	uxth	r5, r5
90020a6a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
90020a6c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020a70:	f105 0a01 	add.w	sl, r5, #1
90020a74:	fb1e fe07 	smulbb	lr, lr, r7
90020a78:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020a7a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90020a7e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020a82:	fb02 e207 	mla	r2, r2, r7, lr
90020a86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020a8a:	b292      	uxth	r2, r2
90020a8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020a90:	f102 0e01 	add.w	lr, r2, #1
90020a94:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
90020a98:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020a9c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020aa0:	ea4e 0606 	orr.w	r6, lr, r6
90020aa4:	ea46 060a 	orr.w	r6, r6, sl
90020aa8:	f829 6b02 	strh.w	r6, [r9], #2
90020aac:	e7a7      	b.n	900209fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
90020aae:	f102 0e01 	add.w	lr, r2, #1
90020ab2:	4422      	add	r2, r4
90020ab4:	9f06      	ldr	r7, [sp, #24]
90020ab6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
90020aba:	9a06      	ldr	r2, [sp, #24]
90020abc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020ac0:	eb02 0a05 	add.w	sl, r2, r5
90020ac4:	4a13      	ldr	r2, [pc, #76]	@ (90020b14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
90020ac6:	f89a 9002 	ldrb.w	r9, [sl, #2]
90020aca:	ea02 2909 	and.w	r9, r2, r9, lsl #8
90020ace:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020ad2:	00d2      	lsls	r2, r2, #3
90020ad4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020ad8:	ea49 0202 	orr.w	r2, r9, r2
90020adc:	f817 9005 	ldrb.w	r9, [r7, r5]
90020ae0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90020ae4:	f826 2b02 	strh.w	r2, [r6], #2
90020ae8:	fa1f f28e 	uxth.w	r2, lr
90020aec:	e758      	b.n	900209a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
90020aee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
90020af2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
90020af6:	1a2d      	subs	r5, r5, r0
90020af8:	b2ad      	uxth	r5, r5
90020afa:	2d00      	cmp	r5, #0
90020afc:	bf18      	it	ne
90020afe:	2000      	movne	r0, #0
90020b00:	e732      	b.n	90020968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
90020b02:	4b05      	ldr	r3, [pc, #20]	@ (90020b18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
90020b04:	6818      	ldr	r0, [r3, #0]
90020b06:	6803      	ldr	r3, [r0, #0]
90020b08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020b0a:	4798      	blx	r3
90020b0c:	b01f      	add	sp, #124	@ 0x7c
90020b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b12:	bf00      	nop
90020b14:	fffff800 	.word	0xfffff800
90020b18:	240218cc 	.word	0x240218cc

90020b1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
90020b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b20:	b091      	sub	sp, #68	@ 0x44
90020b22:	469b      	mov	fp, r3
90020b24:	4616      	mov	r6, r2
90020b26:	f9b3 2000 	ldrsh.w	r2, [r3]
90020b2a:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
90020b2e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90020b32:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
90020b36:	4604      	mov	r4, r0
90020b38:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
90020b3c:	4640      	mov	r0, r8
90020b3e:	460d      	mov	r5, r1
90020b40:	4659      	mov	r1, fp
90020b42:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90020b46:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90020b4a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
90020b4e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
90020b52:	f7f1 f9bf 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90020b56:	4631      	mov	r1, r6
90020b58:	4640      	mov	r0, r8
90020b5a:	f7f1 f9bb 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90020b5e:	4b74      	ldr	r3, [pc, #464]	@ (90020d30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
90020b60:	8818      	ldrh	r0, [r3, #0]
90020b62:	4b74      	ldr	r3, [pc, #464]	@ (90020d34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
90020b64:	b202      	sxth	r2, r0
90020b66:	8819      	ldrh	r1, [r3, #0]
90020b68:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90020b6c:	b20e      	sxth	r6, r1
90020b6e:	2b00      	cmp	r3, #0
90020b70:	da07      	bge.n	90020b82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
90020b72:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90020b76:	4463      	add	r3, ip
90020b78:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90020b7c:	2300      	movs	r3, #0
90020b7e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90020b82:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90020b86:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90020b8a:	1ad2      	subs	r2, r2, r3
90020b8c:	4594      	cmp	ip, r2
90020b8e:	bfc4      	itt	gt
90020b90:	1ac2      	subgt	r2, r0, r3
90020b92:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
90020b96:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90020b9a:	2a00      	cmp	r2, #0
90020b9c:	da07      	bge.n	90020bae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
90020b9e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
90020ba2:	4462      	add	r2, ip
90020ba4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90020ba8:	2200      	movs	r2, #0
90020baa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90020bae:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
90020bb2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90020bb6:	eba6 060a 	sub.w	r6, r6, sl
90020bba:	42b2      	cmp	r2, r6
90020bbc:	bfc4      	itt	gt
90020bbe:	eba1 020a 	subgt.w	r2, r1, sl
90020bc2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
90020bc6:	4a5c      	ldr	r2, [pc, #368]	@ (90020d38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90020bc8:	7812      	ldrb	r2, [r2, #0]
90020bca:	b9a2      	cbnz	r2, 90020bf6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
90020bcc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
90020bd0:	4286      	cmp	r6, r0
90020bd2:	4640      	mov	r0, r8
90020bd4:	9303      	str	r3, [sp, #12]
90020bd6:	bf14      	ite	ne
90020bd8:	2600      	movne	r6, #0
90020bda:	2601      	moveq	r6, #1
90020bdc:	f7f1 f9bd 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90020be0:	9b03      	ldr	r3, [sp, #12]
90020be2:	b160      	cbz	r0, 90020bfe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
90020be4:	2300      	movs	r3, #0
90020be6:	8023      	strh	r3, [r4, #0]
90020be8:	8063      	strh	r3, [r4, #2]
90020bea:	80a3      	strh	r3, [r4, #4]
90020bec:	4620      	mov	r0, r4
90020bee:	80e3      	strh	r3, [r4, #6]
90020bf0:	b011      	add	sp, #68	@ 0x44
90020bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020bf6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90020bfa:	428e      	cmp	r6, r1
90020bfc:	e7e9      	b.n	90020bd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
90020bfe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90020c02:	a90e      	add	r1, sp, #56	@ 0x38
90020c04:	900e      	str	r0, [sp, #56]	@ 0x38
90020c06:	a80c      	add	r0, sp, #48	@ 0x30
90020c08:	9205      	str	r2, [sp, #20]
90020c0a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90020c0e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
90020c12:	9206      	str	r2, [sp, #24]
90020c14:	f8bb 2000 	ldrh.w	r2, [fp]
90020c18:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
90020c1c:	1a9b      	subs	r3, r3, r2
90020c1e:	b21b      	sxth	r3, r3
90020c20:	9303      	str	r3, [sp, #12]
90020c22:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90020c26:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90020d40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90020c2a:	ebaa 0a03 	sub.w	sl, sl, r3
90020c2e:	fa0f f38a 	sxth.w	r3, sl
90020c32:	9304      	str	r3, [sp, #16]
90020c34:	9b03      	ldr	r3, [sp, #12]
90020c36:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90020c3a:	9b04      	ldr	r3, [sp, #16]
90020c3c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90020c40:	9b05      	ldr	r3, [sp, #20]
90020c42:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90020c46:	9b06      	ldr	r3, [sp, #24]
90020c48:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90020c4c:	f7f7 f91a 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020c50:	4640      	mov	r0, r8
90020c52:	f7f7 f8d3 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020c56:	a80e      	add	r0, sp, #56	@ 0x38
90020c58:	f7f7 f8d0 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020c5c:	4b37      	ldr	r3, [pc, #220]	@ (90020d3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
90020c5e:	4628      	mov	r0, r5
90020c60:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
90020c64:	881b      	ldrh	r3, [r3, #0]
90020c66:	9307      	str	r3, [sp, #28]
90020c68:	682b      	ldr	r3, [r5, #0]
90020c6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020c6c:	4798      	blx	r3
90020c6e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
90020c72:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90020c76:	4681      	mov	r9, r0
90020c78:	f8db 0000 	ldr.w	r0, [fp]
90020c7c:	fb1a 3305 	smlabb	r3, sl, r5, r3
90020c80:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90020c82:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90020c86:	6803      	ldr	r3, [r0, #0]
90020c88:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90020c8a:	4798      	blx	r3
90020c8c:	4607      	mov	r7, r0
90020c8e:	f8db 0000 	ldr.w	r0, [fp]
90020c92:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90020c96:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90020c9a:	6803      	ldr	r3, [r0, #0]
90020c9c:	9109      	str	r1, [sp, #36]	@ 0x24
90020c9e:	9208      	str	r2, [sp, #32]
90020ca0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020ca2:	4798      	blx	r3
90020ca4:	f010 0f01 	tst.w	r0, #1
90020ca8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90020cac:	d012      	beq.n	90020cd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
90020cae:	f8db 0000 	ldr.w	r0, [fp]
90020cb2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
90020cb6:	6803      	ldr	r3, [r0, #0]
90020cb8:	9200      	str	r2, [sp, #0]
90020cba:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90020cbc:	462b      	mov	r3, r5
90020cbe:	e898 0006 	ldmia.w	r8, {r1, r2}
90020cc2:	47b0      	blx	r6
90020cc4:	9b03      	ldr	r3, [sp, #12]
90020cc6:	8023      	strh	r3, [r4, #0]
90020cc8:	9b04      	ldr	r3, [sp, #16]
90020cca:	8063      	strh	r3, [r4, #2]
90020ccc:	9b05      	ldr	r3, [sp, #20]
90020cce:	80a3      	strh	r3, [r4, #4]
90020cd0:	9b06      	ldr	r3, [sp, #24]
90020cd2:	e78b      	b.n	90020bec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
90020cd4:	fb09 f202 	mul.w	r2, r9, r2
90020cd8:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
90020cdc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
90020ce0:	440f      	add	r7, r1
90020ce2:	b166      	cbz	r6, 90020cfe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90020ce4:	9a07      	ldr	r2, [sp, #28]
90020ce6:	4592      	cmp	sl, r2
90020ce8:	d109      	bne.n	90020cfe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90020cea:	f8db 0000 	ldr.w	r0, [fp]
90020cee:	fb09 f303 	mul.w	r3, r9, r3
90020cf2:	4629      	mov	r1, r5
90020cf4:	6802      	ldr	r2, [r0, #0]
90020cf6:	6b96      	ldr	r6, [r2, #56]	@ 0x38
90020cf8:	463a      	mov	r2, r7
90020cfa:	47b0      	blx	r6
90020cfc:	e7e2      	b.n	90020cc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90020cfe:	fb0a f303 	mul.w	r3, sl, r3
90020d02:	ea4f 064a 	mov.w	r6, sl, lsl #1
90020d06:	f8df b038 	ldr.w	fp, [pc, #56]	@ 90020d40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90020d0a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
90020d0e:	4545      	cmp	r5, r8
90020d10:	d2d8      	bcs.n	90020cc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90020d12:	f8db 0000 	ldr.w	r0, [fp]
90020d16:	4629      	mov	r1, r5
90020d18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020d1c:	4435      	add	r5, r6
90020d1e:	6802      	ldr	r2, [r0, #0]
90020d20:	005b      	lsls	r3, r3, #1
90020d22:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
90020d26:	463a      	mov	r2, r7
90020d28:	47d0      	blx	sl
90020d2a:	444f      	add	r7, r9
90020d2c:	e7ef      	b.n	90020d0e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
90020d2e:	bf00      	nop
90020d30:	240218c0 	.word	0x240218c0
90020d34:	240218c2 	.word	0x240218c2
90020d38:	240218c4 	.word	0x240218c4
90020d3c:	240218c6 	.word	0x240218c6
90020d40:	240218cc 	.word	0x240218cc

90020d44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
90020d44:	b5f0      	push	{r4, r5, r6, r7, lr}
90020d46:	4606      	mov	r6, r0
90020d48:	b087      	sub	sp, #28
90020d4a:	460c      	mov	r4, r1
90020d4c:	4617      	mov	r7, r2
90020d4e:	461d      	mov	r5, r3
90020d50:	b333      	cbz	r3, 90020da0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020d52:	4608      	mov	r0, r1
90020d54:	f7f1 f901 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90020d58:	bb10      	cbnz	r0, 90020da0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020d5a:	6820      	ldr	r0, [r4, #0]
90020d5c:	ab04      	add	r3, sp, #16
90020d5e:	6861      	ldr	r1, [r4, #4]
90020d60:	4c1b      	ldr	r4, [pc, #108]	@ (90020dd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
90020d62:	c303      	stmia	r3!, {r0, r1}
90020d64:	a804      	add	r0, sp, #16
90020d66:	f7f7 f849 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020d6a:	6820      	ldr	r0, [r4, #0]
90020d6c:	6803      	ldr	r3, [r0, #0]
90020d6e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020d70:	4798      	blx	r3
90020d72:	2dff      	cmp	r5, #255	@ 0xff
90020d74:	d016      	beq.n	90020da4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90020d76:	f010 0f08 	tst.w	r0, #8
90020d7a:	6820      	ldr	r0, [r4, #0]
90020d7c:	d015      	beq.n	90020daa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
90020d7e:	2400      	movs	r4, #0
90020d80:	6801      	ldr	r1, [r0, #0]
90020d82:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90020d86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020d8a:	e9cd 5402 	strd	r5, r4, [sp, #8]
90020d8e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
90020d92:	9401      	str	r4, [sp, #4]
90020d94:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90020d98:	9400      	str	r4, [sp, #0]
90020d9a:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
90020d9c:	4639      	mov	r1, r7
90020d9e:	47a0      	blx	r4
90020da0:	b007      	add	sp, #28
90020da2:	bdf0      	pop	{r4, r5, r6, r7, pc}
90020da4:	f010 0f02 	tst.w	r0, #2
90020da8:	e7e7      	b.n	90020d7a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90020daa:	6803      	ldr	r3, [r0, #0]
90020dac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020dae:	4798      	blx	r3
90020db0:	4b08      	ldr	r3, [pc, #32]	@ (90020dd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
90020db2:	4601      	mov	r1, r0
90020db4:	4630      	mov	r0, r6
90020db6:	881a      	ldrh	r2, [r3, #0]
90020db8:	6833      	ldr	r3, [r6, #0]
90020dba:	e9cd 7500 	strd	r7, r5, [sp]
90020dbe:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
90020dc0:	ab04      	add	r3, sp, #16
90020dc2:	47a8      	blx	r5
90020dc4:	6820      	ldr	r0, [r4, #0]
90020dc6:	6803      	ldr	r3, [r0, #0]
90020dc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020dca:	4798      	blx	r3
90020dcc:	e7e8      	b.n	90020da0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020dce:	bf00      	nop
90020dd0:	240218cc 	.word	0x240218cc
90020dd4:	240218c6 	.word	0x240218c6

90020dd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90020dd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020ddc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
90020de0:	4688      	mov	r8, r1
90020de2:	4614      	mov	r4, r2
90020de4:	461d      	mov	r5, r3
90020de6:	9e08      	ldr	r6, [sp, #32]
90020de8:	2f00      	cmp	r7, #0
90020dea:	f000 80ab 	beq.w	90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020dee:	4618      	mov	r0, r3
90020df0:	f7f1 f8b3 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90020df4:	2800      	cmp	r0, #0
90020df6:	f040 80a5 	bne.w	90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020dfa:	f9b5 1000 	ldrsh.w	r1, [r5]
90020dfe:	2fff      	cmp	r7, #255	@ 0xff
90020e00:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90020e04:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90020e08:	fb04 1303 	mla	r3, r4, r3, r1
90020e0c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
90020e10:	eba4 0200 	sub.w	r2, r4, r0
90020e14:	eb08 0143 	add.w	r1, r8, r3, lsl #1
90020e18:	fb04 f505 	mul.w	r5, r4, r5
90020e1c:	ea4f 2816 	mov.w	r8, r6, lsr #8
90020e20:	eb01 0545 	add.w	r5, r1, r5, lsl #1
90020e24:	d04a      	beq.n	90020ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
90020e26:	b2bc      	uxth	r4, r7
90020e28:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
90020e2c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
90020e30:	fa5f f788 	uxtb.w	r7, r8
90020e34:	b2f3      	uxtb	r3, r6
90020e36:	0040      	lsls	r0, r0, #1
90020e38:	fb0e fe04 	mul.w	lr, lr, r4
90020e3c:	4367      	muls	r7, r4
90020e3e:	ea4f 0842 	mov.w	r8, r2, lsl #1
90020e42:	4363      	muls	r3, r4
90020e44:	fa1f fc8c 	uxth.w	ip, ip
90020e48:	42a9      	cmp	r1, r5
90020e4a:	d27b      	bcs.n	90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020e4c:	eb01 0900 	add.w	r9, r1, r0
90020e50:	4549      	cmp	r1, r9
90020e52:	d231      	bcs.n	90020eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90020e54:	880a      	ldrh	r2, [r1, #0]
90020e56:	1214      	asrs	r4, r2, #8
90020e58:	10d6      	asrs	r6, r2, #3
90020e5a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90020e5e:	00d2      	lsls	r2, r2, #3
90020e60:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020e64:	b2d2      	uxtb	r2, r2
90020e66:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020e6a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020e6e:	fb14 f40c 	smulbb	r4, r4, ip
90020e72:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90020e76:	fb12 f20c 	smulbb	r2, r2, ip
90020e7a:	fb16 f60c 	smulbb	r6, r6, ip
90020e7e:	4474      	add	r4, lr
90020e80:	441a      	add	r2, r3
90020e82:	b2a4      	uxth	r4, r4
90020e84:	443e      	add	r6, r7
90020e86:	b292      	uxth	r2, r2
90020e88:	f104 0a01 	add.w	sl, r4, #1
90020e8c:	b2b6      	uxth	r6, r6
90020e8e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020e92:	f102 0a01 	add.w	sl, r2, #1
90020e96:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90020e9a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90020e9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020ea2:	4322      	orrs	r2, r4
90020ea4:	1c74      	adds	r4, r6, #1
90020ea6:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90020eaa:	0976      	lsrs	r6, r6, #5
90020eac:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020eb0:	4332      	orrs	r2, r6
90020eb2:	f821 2b02 	strh.w	r2, [r1], #2
90020eb6:	e7cb      	b.n	90020e50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90020eb8:	4441      	add	r1, r8
90020eba:	e7c5      	b.n	90020e48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90020ebc:	0973      	lsrs	r3, r6, #5
90020ebe:	4f22      	ldr	r7, [pc, #136]	@ (90020f48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90020ec0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90020ec4:	ea08 0707 	and.w	r7, r8, r7
90020ec8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020ecc:	433b      	orrs	r3, r7
90020ece:	07e7      	lsls	r7, r4, #31
90020ed0:	ea43 0306 	orr.w	r3, r3, r6
90020ed4:	b29b      	uxth	r3, r3
90020ed6:	d50b      	bpl.n	90020ef0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90020ed8:	0040      	lsls	r0, r0, #1
90020eda:	0052      	lsls	r2, r2, #1
90020edc:	42a9      	cmp	r1, r5
90020ede:	d231      	bcs.n	90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020ee0:	180c      	adds	r4, r1, r0
90020ee2:	42a1      	cmp	r1, r4
90020ee4:	d202      	bcs.n	90020eec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
90020ee6:	f821 3b02 	strh.w	r3, [r1], #2
90020eea:	e7fa      	b.n	90020ee2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90020eec:	4411      	add	r1, r2
90020eee:	e7f5      	b.n	90020edc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90020ef0:	078e      	lsls	r6, r1, #30
90020ef2:	d008      	beq.n	90020f06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90020ef4:	0066      	lsls	r6, r4, #1
90020ef6:	460a      	mov	r2, r1
90020ef8:	42aa      	cmp	r2, r5
90020efa:	d202      	bcs.n	90020f02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90020efc:	8013      	strh	r3, [r2, #0]
90020efe:	4432      	add	r2, r6
90020f00:	e7fa      	b.n	90020ef8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
90020f02:	3102      	adds	r1, #2
90020f04:	3801      	subs	r0, #1
90020f06:	07c2      	lsls	r2, r0, #31
90020f08:	d50b      	bpl.n	90020f22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
90020f0a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
90020f0e:	0066      	lsls	r6, r4, #1
90020f10:	3a01      	subs	r2, #1
90020f12:	eb01 0242 	add.w	r2, r1, r2, lsl #1
90020f16:	42aa      	cmp	r2, r5
90020f18:	d202      	bcs.n	90020f20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
90020f1a:	8013      	strh	r3, [r2, #0]
90020f1c:	4432      	add	r2, r6
90020f1e:	e7fa      	b.n	90020f16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
90020f20:	3801      	subs	r0, #1
90020f22:	b178      	cbz	r0, 90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020f24:	1040      	asrs	r0, r0, #1
90020f26:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
90020f2a:	0080      	lsls	r0, r0, #2
90020f2c:	0064      	lsls	r4, r4, #1
90020f2e:	42a9      	cmp	r1, r5
90020f30:	d208      	bcs.n	90020f44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020f32:	180e      	adds	r6, r1, r0
90020f34:	460a      	mov	r2, r1
90020f36:	42b2      	cmp	r2, r6
90020f38:	d202      	bcs.n	90020f40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
90020f3a:	f842 3b04 	str.w	r3, [r2], #4
90020f3e:	e7fa      	b.n	90020f36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
90020f40:	4421      	add	r1, r4
90020f42:	e7f4      	b.n	90020f2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90020f44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020f48:	00fff800 	.word	0x00fff800

90020f4c <_ZN8touchgfx8LCD16bppC1Ev>:
90020f4c:	2200      	movs	r2, #0
90020f4e:	4912      	ldr	r1, [pc, #72]	@ (90020f98 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
90020f50:	e9c0 2201 	strd	r2, r2, [r0, #4]
90020f54:	6001      	str	r1, [r0, #0]
90020f56:	e9c0 2203 	strd	r2, r2, [r0, #12]
90020f5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
90020f5e:	e9c0 2207 	strd	r2, r2, [r0, #28]
90020f62:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
90020f66:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
90020f6a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
90020f6e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90020f72:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
90020f76:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
90020f7a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90020f7e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90020f82:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
90020f86:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
90020f8a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
90020f8e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
90020f92:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
90020f96:	4770      	bx	lr
90020f98:	9002fc48 	.word	0x9002fc48

90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90020f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020fa0:	b08d      	sub	sp, #52	@ 0x34
90020fa2:	460d      	mov	r5, r1
90020fa4:	4604      	mov	r4, r0
90020fa6:	4699      	mov	r9, r3
90020fa8:	6808      	ldr	r0, [r1, #0]
90020faa:	ab08      	add	r3, sp, #32
90020fac:	6849      	ldr	r1, [r1, #4]
90020fae:	c303      	stmia	r3!, {r0, r1}
90020fb0:	6810      	ldr	r0, [r2, #0]
90020fb2:	ab0a      	add	r3, sp, #40	@ 0x28
90020fb4:	6851      	ldr	r1, [r2, #4]
90020fb6:	c303      	stmia	r3!, {r0, r1}
90020fb8:	a808      	add	r0, sp, #32
90020fba:	f7f6 ff1f 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020fbe:	4629      	mov	r1, r5
90020fc0:	a80a      	add	r0, sp, #40	@ 0x28
90020fc2:	4d67      	ldr	r5, [pc, #412]	@ (90021160 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020fc4:	f7f6 ff5e 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020fc8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90020fcc:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90020fd0:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90020fd4:	6828      	ldr	r0, [r5, #0]
90020fd6:	fb11 2103 	smlabb	r1, r1, r3, r2
90020fda:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
90020fde:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90020fe2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90020fe6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
90020fea:	440a      	add	r2, r1
90020fec:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90020ff0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90020ff4:	4413      	add	r3, r2
90020ff6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90020ffa:	6803      	ldr	r3, [r0, #0]
90020ffc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020ffe:	4798      	blx	r3
90021000:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021004:	d119      	bne.n	9002103a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90021006:	f010 0f20 	tst.w	r0, #32
9002100a:	6828      	ldr	r0, [r5, #0]
9002100c:	d018      	beq.n	90021040 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9002100e:	2500      	movs	r5, #0
90021010:	6801      	ldr	r1, [r0, #0]
90021012:	b2b6      	uxth	r6, r6
90021014:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90021018:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9002101c:	9601      	str	r6, [sp, #4]
9002101e:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021022:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90021026:	9502      	str	r5, [sp, #8]
90021028:	fa1f f588 	uxth.w	r5, r8
9002102c:	9500      	str	r5, [sp, #0]
9002102e:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
90021030:	4621      	mov	r1, r4
90021032:	47a8      	blx	r5
90021034:	b00d      	add	sp, #52	@ 0x34
90021036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002103a:	f010 0f40 	tst.w	r0, #64	@ 0x40
9002103e:	e7e4      	b.n	9002100a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90021040:	6803      	ldr	r3, [r0, #0]
90021042:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021044:	4798      	blx	r3
90021046:	4947      	ldr	r1, [pc, #284]	@ (90021164 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90021048:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9002104c:	880b      	ldrh	r3, [r1, #0]
9002104e:	468a      	mov	sl, r1
90021050:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
90021054:	fb03 5202 	mla	r2, r3, r2, r5
90021058:	4373      	muls	r3, r6
9002105a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002105e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021062:	9307      	str	r3, [sp, #28]
90021064:	ea4f 0348 	mov.w	r3, r8, lsl #1
90021068:	9306      	str	r3, [sp, #24]
9002106a:	9b07      	ldr	r3, [sp, #28]
9002106c:	4298      	cmp	r0, r3
9002106e:	d270      	bcs.n	90021152 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90021070:	9b06      	ldr	r3, [sp, #24]
90021072:	4621      	mov	r1, r4
90021074:	eb00 0b03 	add.w	fp, r0, r3
90021078:	4558      	cmp	r0, fp
9002107a:	d25d      	bcs.n	90021138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9002107c:	f851 4b04 	ldr.w	r4, [r1], #4
90021080:	0e23      	lsrs	r3, r4, #24
90021082:	d014      	beq.n	900210ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021084:	2bff      	cmp	r3, #255	@ 0xff
90021086:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9002108a:	d112      	bne.n	900210b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9002108c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021090:	d10f      	bne.n	900210b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021092:	0963      	lsrs	r3, r4, #5
90021094:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90021098:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9002109c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900210a0:	f02c 0c07 	bic.w	ip, ip, #7
900210a4:	ea43 0c0c 	orr.w	ip, r3, ip
900210a8:	ea4c 0404 	orr.w	r4, ip, r4
900210ac:	8004      	strh	r4, [r0, #0]
900210ae:	3002      	adds	r0, #2
900210b0:	e7e2      	b.n	90021078 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
900210b2:	fb09 f303 	mul.w	r3, r9, r3
900210b6:	8807      	ldrh	r7, [r0, #0]
900210b8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
900210bc:	fa5f fc8c 	uxtb.w	ip, ip
900210c0:	1c5a      	adds	r2, r3, #1
900210c2:	123e      	asrs	r6, r7, #8
900210c4:	10fd      	asrs	r5, r7, #3
900210c6:	eb02 2223 	add.w	r2, r2, r3, asr #8
900210ca:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900210ce:	00ff      	lsls	r7, r7, #3
900210d0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900210d4:	1212      	asrs	r2, r2, #8
900210d6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900210da:	b293      	uxth	r3, r2
900210dc:	43d2      	mvns	r2, r2
900210de:	b2ff      	uxtb	r7, r7
900210e0:	fb1e fe03 	smulbb	lr, lr, r3
900210e4:	b2d2      	uxtb	r2, r2
900210e6:	fb1c fc03 	smulbb	ip, ip, r3
900210ea:	b2e4      	uxtb	r4, r4
900210ec:	fb06 e602 	mla	r6, r6, r2, lr
900210f0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900210f4:	fb14 f403 	smulbb	r4, r4, r3
900210f8:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
900210fc:	b2b6      	uxth	r6, r6
900210fe:	fb05 c502 	mla	r5, r5, r2, ip
90021102:	fb07 4702 	mla	r7, r7, r2, r4
90021106:	f106 0e01 	add.w	lr, r6, #1
9002110a:	b2ad      	uxth	r5, r5
9002110c:	b2bf      	uxth	r7, r7
9002110e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90021112:	f105 0c01 	add.w	ip, r5, #1
90021116:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9002111a:	1c7e      	adds	r6, r7, #1
9002111c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021120:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90021124:	096d      	lsrs	r5, r5, #5
90021126:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9002112a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002112e:	ea46 060e 	orr.w	r6, r6, lr
90021132:	432e      	orrs	r6, r5
90021134:	8006      	strh	r6, [r0, #0]
90021136:	e7ba      	b.n	900210ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021138:	f8ba 3000 	ldrh.w	r3, [sl]
9002113c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
90021140:	eba3 0308 	sub.w	r3, r3, r8
90021144:	eba4 0408 	sub.w	r4, r4, r8
90021148:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002114c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
90021150:	e78b      	b.n	9002106a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90021152:	4b03      	ldr	r3, [pc, #12]	@ (90021160 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021154:	6818      	ldr	r0, [r3, #0]
90021156:	6803      	ldr	r3, [r0, #0]
90021158:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002115a:	4798      	blx	r3
9002115c:	e76a      	b.n	90021034 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9002115e:	bf00      	nop
90021160:	240218cc 	.word	0x240218cc
90021164:	240218c6 	.word	0x240218c6

90021168 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
90021168:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002116c:	b085      	sub	sp, #20
9002116e:	6810      	ldr	r0, [r2, #0]
90021170:	460c      	mov	r4, r1
90021172:	6851      	ldr	r1, [r2, #4]
90021174:	466d      	mov	r5, sp
90021176:	4616      	mov	r6, r2
90021178:	c503      	stmia	r5!, {r0, r1}
9002117a:	6818      	ldr	r0, [r3, #0]
9002117c:	6859      	ldr	r1, [r3, #4]
9002117e:	c503      	stmia	r5!, {r0, r1}
90021180:	4668      	mov	r0, sp
90021182:	4d2e      	ldr	r5, [pc, #184]	@ (9002123c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90021184:	f7f6 fe3a 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021188:	4631      	mov	r1, r6
9002118a:	a802      	add	r0, sp, #8
9002118c:	4e2c      	ldr	r6, [pc, #176]	@ (90021240 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9002118e:	f7f6 fe79 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021192:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90021196:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9002119a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9002119e:	6828      	ldr	r0, [r5, #0]
900211a0:	fb11 2103 	smlabb	r1, r1, r3, r2
900211a4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
900211a8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
900211ac:	eb04 0481 	add.w	r4, r4, r1, lsl #2
900211b0:	f8bd 1000 	ldrh.w	r1, [sp]
900211b4:	440a      	add	r2, r1
900211b6:	f8ad 2008 	strh.w	r2, [sp, #8]
900211ba:	f8bd 2002 	ldrh.w	r2, [sp, #2]
900211be:	4413      	add	r3, r2
900211c0:	f8ad 300a 	strh.w	r3, [sp, #10]
900211c4:	6803      	ldr	r3, [r0, #0]
900211c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900211c8:	4798      	blx	r3
900211ca:	8833      	ldrh	r3, [r6, #0]
900211cc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
900211d0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
900211d4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
900211d8:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90021244 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
900211dc:	fb03 1202 	mla	r2, r3, r2, r1
900211e0:	fb08 f303 	mul.w	r3, r8, r3
900211e4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900211e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900211ec:	4298      	cmp	r0, r3
900211ee:	d21d      	bcs.n	9002122c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
900211f0:	eb00 080c 	add.w	r8, r0, ip
900211f4:	4540      	cmp	r0, r8
900211f6:	d20f      	bcs.n	90021218 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
900211f8:	f854 1b04 	ldr.w	r1, [r4], #4
900211fc:	ea4f 1951 	mov.w	r9, r1, lsr #5
90021200:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90021204:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90021208:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002120c:	ea42 0209 	orr.w	r2, r2, r9
90021210:	430a      	orrs	r2, r1
90021212:	f820 2b02 	strh.w	r2, [r0], #2
90021216:	e7ed      	b.n	900211f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90021218:	8832      	ldrh	r2, [r6, #0]
9002121a:	1bd2      	subs	r2, r2, r7
9002121c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021220:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90021224:	1bd2      	subs	r2, r2, r7
90021226:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9002122a:	e7df      	b.n	900211ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9002122c:	6828      	ldr	r0, [r5, #0]
9002122e:	6803      	ldr	r3, [r0, #0]
90021230:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021232:	4798      	blx	r3
90021234:	b005      	add	sp, #20
90021236:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002123a:	bf00      	nop
9002123c:	240218cc 	.word	0x240218cc
90021240:	240218c6 	.word	0x240218c6
90021244:	fffff800 	.word	0xfffff800

90021248 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90021248:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002124c:	b08e      	sub	sp, #56	@ 0x38
9002124e:	460e      	mov	r6, r1
90021250:	4604      	mov	r4, r0
90021252:	461d      	mov	r5, r3
90021254:	6808      	ldr	r0, [r1, #0]
90021256:	ab0a      	add	r3, sp, #40	@ 0x28
90021258:	6849      	ldr	r1, [r1, #4]
9002125a:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 90021430 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9002125e:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90021434 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
90021262:	c303      	stmia	r3!, {r0, r1}
90021264:	6810      	ldr	r0, [r2, #0]
90021266:	ab0c      	add	r3, sp, #48	@ 0x30
90021268:	6851      	ldr	r1, [r2, #4]
9002126a:	c303      	stmia	r3!, {r0, r1}
9002126c:	a80a      	add	r0, sp, #40	@ 0x28
9002126e:	f7f6 fdc5 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021272:	4631      	mov	r1, r6
90021274:	a80c      	add	r0, sp, #48	@ 0x30
90021276:	f7f6 fe05 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002127a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002127e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90021282:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021286:	f8d8 0000 	ldr.w	r0, [r8]
9002128a:	fb11 2103 	smlabb	r1, r1, r3, r2
9002128e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
90021292:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90021296:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002129a:	440c      	add	r4, r1
9002129c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
900212a0:	440a      	add	r2, r1
900212a2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900212a6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
900212aa:	4413      	add	r3, r2
900212ac:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900212b0:	6803      	ldr	r3, [r0, #0]
900212b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900212b4:	4798      	blx	r3
900212b6:	2dff      	cmp	r5, #255	@ 0xff
900212b8:	d124      	bne.n	90021304 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
900212ba:	f010 0f01 	tst.w	r0, #1
900212be:	f8d8 0000 	ldr.w	r0, [r8]
900212c2:	d022      	beq.n	9002130a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
900212c4:	2100      	movs	r1, #0
900212c6:	f04f 0e01 	mov.w	lr, #1
900212ca:	f8d0 c000 	ldr.w	ip, [r0]
900212ce:	b2b6      	uxth	r6, r6
900212d0:	f8cd e018 	str.w	lr, [sp, #24]
900212d4:	b2bf      	uxth	r7, r7
900212d6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900212da:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
900212de:	e9cd 1107 	strd	r1, r1, [sp, #28]
900212e2:	f8b9 e000 	ldrh.w	lr, [r9]
900212e6:	9503      	str	r5, [sp, #12]
900212e8:	9601      	str	r6, [sp, #4]
900212ea:	9700      	str	r7, [sp, #0]
900212ec:	e9cd 1e04 	strd	r1, lr, [sp, #16]
900212f0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900212f4:	9102      	str	r1, [sp, #8]
900212f6:	4621      	mov	r1, r4
900212f8:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
900212fc:	47a8      	blx	r5
900212fe:	b00e      	add	sp, #56	@ 0x38
90021300:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021304:	f010 0f04 	tst.w	r0, #4
90021308:	e7d9      	b.n	900212be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9002130a:	6803      	ldr	r3, [r0, #0]
9002130c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002130e:	4798      	blx	r3
90021310:	f8b9 3000 	ldrh.w	r3, [r9]
90021314:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90021318:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9002131c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
90021320:	435e      	muls	r6, r3
90021322:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021326:	2dff      	cmp	r5, #255	@ 0xff
90021328:	fb03 1202 	mla	r2, r3, r2, r1
9002132c:	ebac 0c07 	sub.w	ip, ip, r7
90021330:	eba3 0707 	sub.w	r7, r3, r7
90021334:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021338:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9002133c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90021340:	ea4f 0747 	mov.w	r7, r7, lsl #1
90021344:	d049      	beq.n	900213da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90021346:	43eb      	mvns	r3, r5
90021348:	fa1f f985 	uxth.w	r9, r5
9002134c:	b2db      	uxtb	r3, r3
9002134e:	42b0      	cmp	r0, r6
90021350:	d266      	bcs.n	90021420 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021352:	eb00 0a0e 	add.w	sl, r0, lr
90021356:	4550      	cmp	r0, sl
90021358:	4621      	mov	r1, r4
9002135a:	f104 0403 	add.w	r4, r4, #3
9002135e:	d25b      	bcs.n	90021418 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
90021360:	8802      	ldrh	r2, [r0, #0]
90021362:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021366:	ea4f 2822 	mov.w	r8, r2, asr #8
9002136a:	fb11 f109 	smulbb	r1, r1, r9
9002136e:	10d5      	asrs	r5, r2, #3
90021370:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90021374:	00d2      	lsls	r2, r2, #3
90021376:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002137a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9002137e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021382:	fb08 1803 	mla	r8, r8, r3, r1
90021386:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9002138a:	b2d2      	uxtb	r2, r2
9002138c:	fb11 f109 	smulbb	r1, r1, r9
90021390:	fa1f f888 	uxth.w	r8, r8
90021394:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021398:	fb05 1503 	mla	r5, r5, r3, r1
9002139c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900213a0:	fb11 f109 	smulbb	r1, r1, r9
900213a4:	b2ad      	uxth	r5, r5
900213a6:	fb02 1203 	mla	r2, r2, r3, r1
900213aa:	f108 0101 	add.w	r1, r8, #1
900213ae:	b292      	uxth	r2, r2
900213b0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
900213b4:	1c51      	adds	r1, r2, #1
900213b6:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
900213ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900213be:	1c69      	adds	r1, r5, #1
900213c0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900213c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900213c8:	096d      	lsrs	r5, r5, #5
900213ca:	ea42 0208 	orr.w	r2, r2, r8
900213ce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900213d2:	432a      	orrs	r2, r5
900213d4:	f820 2b02 	strh.w	r2, [r0], #2
900213d8:	e7bd      	b.n	90021356 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
900213da:	4a14      	ldr	r2, [pc, #80]	@ (9002142c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
900213dc:	42b0      	cmp	r0, r6
900213de:	d21f      	bcs.n	90021420 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900213e0:	eb00 050e 	add.w	r5, r0, lr
900213e4:	42a8      	cmp	r0, r5
900213e6:	4621      	mov	r1, r4
900213e8:	f104 0403 	add.w	r4, r4, #3
900213ec:	d210      	bcs.n	90021410 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
900213ee:	f814 3c02 	ldrb.w	r3, [r4, #-2]
900213f2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900213f6:	00db      	lsls	r3, r3, #3
900213f8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
900213fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021400:	430b      	orrs	r3, r1
90021402:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021406:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9002140a:	f820 3b02 	strh.w	r3, [r0], #2
9002140e:	e7e9      	b.n	900213e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90021410:	4438      	add	r0, r7
90021412:	eb01 040c 	add.w	r4, r1, ip
90021416:	e7e1      	b.n	900213dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90021418:	4438      	add	r0, r7
9002141a:	eb01 040c 	add.w	r4, r1, ip
9002141e:	e796      	b.n	9002134e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90021420:	4b03      	ldr	r3, [pc, #12]	@ (90021430 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
90021422:	6818      	ldr	r0, [r3, #0]
90021424:	6803      	ldr	r3, [r0, #0]
90021426:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021428:	4798      	blx	r3
9002142a:	e768      	b.n	900212fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9002142c:	fffff800 	.word	0xfffff800
90021430:	240218cc 	.word	0x240218cc
90021434:	240218c6 	.word	0x240218c6

90021438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90021438:	b4f0      	push	{r4, r5, r6, r7}
9002143a:	4616      	mov	r6, r2
9002143c:	461c      	mov	r4, r3
9002143e:	460d      	mov	r5, r1
90021440:	9a04      	ldr	r2, [sp, #16]
90021442:	2e01      	cmp	r6, #1
90021444:	f89d 3014 	ldrb.w	r3, [sp, #20]
90021448:	f89d 7018 	ldrb.w	r7, [sp, #24]
9002144c:	d012      	beq.n	90021474 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9002144e:	d303      	bcc.n	90021458 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90021450:	2e02      	cmp	r6, #2
90021452:	d00a      	beq.n	9002146a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90021454:	bcf0      	pop	{r4, r5, r6, r7}
90021456:	4770      	bx	lr
90021458:	6805      	ldr	r5, [r0, #0]
9002145a:	e9cd 3704 	strd	r3, r7, [sp, #16]
9002145e:	68ed      	ldr	r5, [r5, #12]
90021460:	4613      	mov	r3, r2
90021462:	4622      	mov	r2, r4
90021464:	46ac      	mov	ip, r5
90021466:	bcf0      	pop	{r4, r5, r6, r7}
90021468:	4760      	bx	ip
9002146a:	4621      	mov	r1, r4
9002146c:	4628      	mov	r0, r5
9002146e:	bcf0      	pop	{r4, r5, r6, r7}
90021470:	f7ff bd94 	b.w	90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021474:	4621      	mov	r1, r4
90021476:	4628      	mov	r0, r5
90021478:	bcf0      	pop	{r4, r5, r6, r7}
9002147a:	f7ff bee5 	b.w	90021248 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90021480 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90021480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021484:	b093      	sub	sp, #76	@ 0x4c
90021486:	4681      	mov	r9, r0
90021488:	4688      	mov	r8, r1
9002148a:	6810      	ldr	r0, [r2, #0]
9002148c:	6851      	ldr	r1, [r2, #4]
9002148e:	ac0e      	add	r4, sp, #56	@ 0x38
90021490:	4616      	mov	r6, r2
90021492:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90021496:	4f6b      	ldr	r7, [pc, #428]	@ (90021644 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90021498:	c403      	stmia	r4!, {r0, r1}
9002149a:	6818      	ldr	r0, [r3, #0]
9002149c:	ac10      	add	r4, sp, #64	@ 0x40
9002149e:	6859      	ldr	r1, [r3, #4]
900214a0:	c403      	stmia	r4!, {r0, r1}
900214a2:	a80e      	add	r0, sp, #56	@ 0x38
900214a4:	f7f6 fcaa 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900214a8:	4631      	mov	r1, r6
900214aa:	a810      	add	r0, sp, #64	@ 0x40
900214ac:	4e66      	ldr	r6, [pc, #408]	@ (90021648 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900214ae:	f7f6 fce9 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900214b2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
900214b6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
900214ba:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
900214be:	6830      	ldr	r0, [r6, #0]
900214c0:	fb11 2103 	smlabb	r1, r1, r3, r2
900214c4:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
900214c8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
900214cc:	4489      	add	r9, r1
900214ce:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
900214d2:	440a      	add	r2, r1
900214d4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
900214d8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
900214dc:	4413      	add	r3, r2
900214de:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
900214e2:	6803      	ldr	r3, [r0, #0]
900214e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900214e6:	4798      	blx	r3
900214e8:	f010 0f80 	tst.w	r0, #128	@ 0x80
900214ec:	6830      	ldr	r0, [r6, #0]
900214ee:	d01d      	beq.n	9002152c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
900214f0:	2200      	movs	r2, #0
900214f2:	6801      	ldr	r1, [r0, #0]
900214f4:	b2a4      	uxth	r4, r4
900214f6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900214fa:	b2ad      	uxth	r5, r5
900214fc:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021500:	220b      	movs	r2, #11
90021502:	9207      	str	r2, [sp, #28]
90021504:	883a      	ldrh	r2, [r7, #0]
90021506:	9502      	str	r5, [sp, #8]
90021508:	9206      	str	r2, [sp, #24]
9002150a:	2201      	movs	r2, #1
9002150c:	9401      	str	r4, [sp, #4]
9002150e:	e9cd a204 	strd	sl, r2, [sp, #16]
90021512:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
90021516:	9203      	str	r2, [sp, #12]
90021518:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9002151c:	9200      	str	r2, [sp, #0]
9002151e:	4642      	mov	r2, r8
90021520:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
90021522:	4649      	mov	r1, r9
90021524:	47a0      	blx	r4
90021526:	b013      	add	sp, #76	@ 0x4c
90021528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002152c:	6803      	ldr	r3, [r0, #0]
9002152e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021530:	4798      	blx	r3
90021532:	883b      	ldrh	r3, [r7, #0]
90021534:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90021538:	f04f 0e04 	mov.w	lr, #4
9002153c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
90021540:	435d      	muls	r5, r3
90021542:	fb03 1202 	mla	r2, r3, r2, r1
90021546:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002154a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002154e:	920c      	str	r2, [sp, #48]	@ 0x30
90021550:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90021554:	1b12      	subs	r2, r2, r4
90021556:	920d      	str	r2, [sp, #52]	@ 0x34
90021558:	0062      	lsls	r2, r4, #1
9002155a:	1b1c      	subs	r4, r3, r4
9002155c:	920a      	str	r2, [sp, #40]	@ 0x28
9002155e:	0063      	lsls	r3, r4, #1
90021560:	930b      	str	r3, [sp, #44]	@ 0x2c
90021562:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021564:	4298      	cmp	r0, r3
90021566:	d266      	bcs.n	90021636 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90021568:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002156a:	eb00 0b03 	add.w	fp, r0, r3
9002156e:	4558      	cmp	r0, fp
90021570:	d25c      	bcs.n	9002162c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
90021572:	f819 3b01 	ldrb.w	r3, [r9], #1
90021576:	fb1e e303 	smlabb	r3, lr, r3, lr
9002157a:	f858 2003 	ldr.w	r2, [r8, r3]
9002157e:	0e11      	lsrs	r1, r2, #24
90021580:	d012      	beq.n	900215a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90021582:	29ff      	cmp	r1, #255	@ 0xff
90021584:	ea4f 2712 	mov.w	r7, r2, lsr #8
90021588:	d110      	bne.n	900215ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002158a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002158e:	d10d      	bne.n	900215ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90021590:	0953      	lsrs	r3, r2, #5
90021592:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90021596:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002159a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002159e:	f027 0707 	bic.w	r7, r7, #7
900215a2:	431f      	orrs	r7, r3
900215a4:	433a      	orrs	r2, r7
900215a6:	8002      	strh	r2, [r0, #0]
900215a8:	3002      	adds	r0, #2
900215aa:	e7e0      	b.n	9002156e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
900215ac:	fb0a f101 	mul.w	r1, sl, r1
900215b0:	8806      	ldrh	r6, [r0, #0]
900215b2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
900215b6:	b2d2      	uxtb	r2, r2
900215b8:	1c4b      	adds	r3, r1, #1
900215ba:	1235      	asrs	r5, r6, #8
900215bc:	10f4      	asrs	r4, r6, #3
900215be:	eb03 2321 	add.w	r3, r3, r1, asr #8
900215c2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900215c6:	00f6      	lsls	r6, r6, #3
900215c8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900215cc:	121b      	asrs	r3, r3, #8
900215ce:	b2f6      	uxtb	r6, r6
900215d0:	b299      	uxth	r1, r3
900215d2:	43db      	mvns	r3, r3
900215d4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900215d8:	fb1c fc01 	smulbb	ip, ip, r1
900215dc:	b2db      	uxtb	r3, r3
900215de:	fb12 f201 	smulbb	r2, r2, r1
900215e2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900215e6:	fb05 c503 	mla	r5, r5, r3, ip
900215ea:	b2ff      	uxtb	r7, r7
900215ec:	fb06 2203 	mla	r2, r6, r3, r2
900215f0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900215f4:	fb17 f701 	smulbb	r7, r7, r1
900215f8:	b2ad      	uxth	r5, r5
900215fa:	b292      	uxth	r2, r2
900215fc:	fb04 7403 	mla	r4, r4, r3, r7
90021600:	f105 0c01 	add.w	ip, r5, #1
90021604:	1c57      	adds	r7, r2, #1
90021606:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002160a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002160e:	b2a4      	uxth	r4, r4
90021610:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021614:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021618:	433d      	orrs	r5, r7
9002161a:	1c67      	adds	r7, r4, #1
9002161c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90021620:	0964      	lsrs	r4, r4, #5
90021622:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90021626:	4325      	orrs	r5, r4
90021628:	8005      	strh	r5, [r0, #0]
9002162a:	e7bd      	b.n	900215a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002162c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002162e:	4418      	add	r0, r3
90021630:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021632:	4499      	add	r9, r3
90021634:	e795      	b.n	90021562 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90021636:	4b04      	ldr	r3, [pc, #16]	@ (90021648 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021638:	6818      	ldr	r0, [r3, #0]
9002163a:	6803      	ldr	r3, [r0, #0]
9002163c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002163e:	4798      	blx	r3
90021640:	e771      	b.n	90021526 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
90021642:	bf00      	nop
90021644:	240218c6 	.word	0x240218c6
90021648:	240218cc 	.word	0x240218cc

9002164c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9002164c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021650:	b087      	sub	sp, #28
90021652:	4680      	mov	r8, r0
90021654:	460d      	mov	r5, r1
90021656:	4614      	mov	r4, r2
90021658:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9002165c:	2e00      	cmp	r6, #0
9002165e:	f000 80b9 	beq.w	900217d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
90021662:	6810      	ldr	r0, [r2, #0]
90021664:	af02      	add	r7, sp, #8
90021666:	6851      	ldr	r1, [r2, #4]
90021668:	c703      	stmia	r7!, {r0, r1}
9002166a:	6818      	ldr	r0, [r3, #0]
9002166c:	af04      	add	r7, sp, #16
9002166e:	6859      	ldr	r1, [r3, #4]
90021670:	c703      	stmia	r7!, {r0, r1}
90021672:	a802      	add	r0, sp, #8
90021674:	f7f6 fbc2 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021678:	4621      	mov	r1, r4
9002167a:	a804      	add	r0, sp, #16
9002167c:	f7f6 fc02 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021680:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90021684:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021688:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9002168c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90021690:	fb14 2103 	smlabb	r1, r4, r3, r2
90021694:	eb08 0401 	add.w	r4, r8, r1
90021698:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9002169c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900216a0:	440a      	add	r2, r1
900216a2:	ea4f 0a48 	mov.w	sl, r8, lsl #1
900216a6:	f8ad 2010 	strh.w	r2, [sp, #16]
900216aa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900216ae:	4413      	add	r3, r2
900216b0:	f8ad 3012 	strh.w	r3, [sp, #18]
900216b4:	4b49      	ldr	r3, [pc, #292]	@ (900217dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900216b6:	6818      	ldr	r0, [r3, #0]
900216b8:	6803      	ldr	r3, [r0, #0]
900216ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900216bc:	4798      	blx	r3
900216be:	4b48      	ldr	r3, [pc, #288]	@ (900217e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
900216c0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
900216c4:	2eff      	cmp	r6, #255	@ 0xff
900216c6:	881a      	ldrh	r2, [r3, #0]
900216c8:	f9bd c010 	ldrsh.w	ip, [sp, #16]
900216cc:	fb02 c101 	mla	r1, r2, r1, ip
900216d0:	fb02 f207 	mul.w	r2, r2, r7
900216d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900216d8:	f105 0104 	add.w	r1, r5, #4
900216dc:	461d      	mov	r5, r3
900216de:	d05a      	beq.n	90021796 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
900216e0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
900216e4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900216e8:	b2b6      	uxth	r6, r6
900216ea:	9301      	str	r3, [sp, #4]
900216ec:	fa1f fe8e 	uxth.w	lr, lr
900216f0:	4282      	cmp	r2, r0
900216f2:	d96a      	bls.n	900217ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900216f4:	eb00 0b0a 	add.w	fp, r0, sl
900216f8:	4583      	cmp	fp, r0
900216fa:	d940      	bls.n	9002177e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900216fc:	8805      	ldrh	r5, [r0, #0]
900216fe:	f814 3b01 	ldrb.w	r3, [r4], #1
90021702:	122f      	asrs	r7, r5, #8
90021704:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90021708:	ea4f 09e5 	mov.w	r9, r5, asr #3
9002170c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90021710:	00ed      	lsls	r5, r5, #3
90021712:	ea4f 2c23 	mov.w	ip, r3, asr #8
90021716:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9002171a:	fb17 f70e 	smulbb	r7, r7, lr
9002171e:	b2ed      	uxtb	r5, r5
90021720:	fb19 f90e 	smulbb	r9, r9, lr
90021724:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021728:	fb15 f50e 	smulbb	r5, r5, lr
9002172c:	fb0c 7c06 	mla	ip, ip, r6, r7
90021730:	10df      	asrs	r7, r3, #3
90021732:	00db      	lsls	r3, r3, #3
90021734:	fa1f fc8c 	uxth.w	ip, ip
90021738:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002173c:	b2db      	uxtb	r3, r3
9002173e:	fb07 9706 	mla	r7, r7, r6, r9
90021742:	f10c 0901 	add.w	r9, ip, #1
90021746:	fb03 5306 	mla	r3, r3, r6, r5
9002174a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9002174e:	b29b      	uxth	r3, r3
90021750:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90021754:	b2bf      	uxth	r7, r7
90021756:	f103 0c01 	add.w	ip, r3, #1
9002175a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002175e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90021762:	ea4c 0c09 	orr.w	ip, ip, r9
90021766:	f107 0901 	add.w	r9, r7, #1
9002176a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9002176e:	097f      	lsrs	r7, r7, #5
90021770:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021774:	ea4c 0c07 	orr.w	ip, ip, r7
90021778:	f820 cb02 	strh.w	ip, [r0], #2
9002177c:	e7bc      	b.n	900216f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9002177e:	9b01      	ldr	r3, [sp, #4]
90021780:	881b      	ldrh	r3, [r3, #0]
90021782:	eba3 0308 	sub.w	r3, r3, r8
90021786:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002178a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002178e:	eba3 0308 	sub.w	r3, r3, r8
90021792:	441c      	add	r4, r3
90021794:	e7ac      	b.n	900216f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90021796:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9002179a:	4282      	cmp	r2, r0
9002179c:	d915      	bls.n	900217ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002179e:	eb00 060a 	add.w	r6, r0, sl
900217a2:	4286      	cmp	r6, r0
900217a4:	d906      	bls.n	900217b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
900217a6:	f814 3b01 	ldrb.w	r3, [r4], #1
900217aa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900217ae:	f820 3b02 	strh.w	r3, [r0], #2
900217b2:	e7f6      	b.n	900217a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
900217b4:	882b      	ldrh	r3, [r5, #0]
900217b6:	eba3 0308 	sub.w	r3, r3, r8
900217ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900217be:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900217c2:	eba3 0308 	sub.w	r3, r3, r8
900217c6:	441c      	add	r4, r3
900217c8:	e7e7      	b.n	9002179a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
900217ca:	4b04      	ldr	r3, [pc, #16]	@ (900217dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900217cc:	6818      	ldr	r0, [r3, #0]
900217ce:	6803      	ldr	r3, [r0, #0]
900217d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900217d2:	4798      	blx	r3
900217d4:	b007      	add	sp, #28
900217d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900217da:	bf00      	nop
900217dc:	240218cc 	.word	0x240218cc
900217e0:	240218c6 	.word	0x240218c6

900217e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
900217e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900217e8:	b091      	sub	sp, #68	@ 0x44
900217ea:	4680      	mov	r8, r0
900217ec:	460f      	mov	r7, r1
900217ee:	4614      	mov	r4, r2
900217f0:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
900217f4:	2d00      	cmp	r5, #0
900217f6:	d051      	beq.n	9002189c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900217f8:	6810      	ldr	r0, [r2, #0]
900217fa:	ae0c      	add	r6, sp, #48	@ 0x30
900217fc:	6851      	ldr	r1, [r2, #4]
900217fe:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90021a00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90021802:	c603      	stmia	r6!, {r0, r1}
90021804:	6818      	ldr	r0, [r3, #0]
90021806:	ae0e      	add	r6, sp, #56	@ 0x38
90021808:	6859      	ldr	r1, [r3, #4]
9002180a:	c603      	stmia	r6!, {r0, r1}
9002180c:	a80c      	add	r0, sp, #48	@ 0x30
9002180e:	f7f6 faf5 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021812:	4621      	mov	r1, r4
90021814:	a80e      	add	r0, sp, #56	@ 0x38
90021816:	f7f6 fb35 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002181a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9002181e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90021822:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90021826:	f8d9 0000 	ldr.w	r0, [r9]
9002182a:	fb11 2103 	smlabb	r1, r1, r3, r2
9002182e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90021832:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90021836:	eb08 0401 	add.w	r4, r8, r1
9002183a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9002183e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90021a04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
90021842:	440a      	add	r2, r1
90021844:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90021848:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9002184c:	4413      	add	r3, r2
9002184e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
90021852:	6803      	ldr	r3, [r0, #0]
90021854:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021856:	4798      	blx	r3
90021858:	f010 0f80 	tst.w	r0, #128	@ 0x80
9002185c:	f8d9 0000 	ldr.w	r0, [r9]
90021860:	d01f      	beq.n	900218a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
90021862:	2200      	movs	r2, #0
90021864:	6801      	ldr	r1, [r0, #0]
90021866:	b2b6      	uxth	r6, r6
90021868:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9002186c:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021870:	220b      	movs	r2, #11
90021872:	9207      	str	r2, [sp, #28]
90021874:	f8b8 2000 	ldrh.w	r2, [r8]
90021878:	9601      	str	r6, [sp, #4]
9002187a:	9206      	str	r2, [sp, #24]
9002187c:	2201      	movs	r2, #1
9002187e:	e9cd 5204 	strd	r5, r2, [sp, #16]
90021882:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90021886:	9203      	str	r2, [sp, #12]
90021888:	fa1f f28a 	uxth.w	r2, sl
9002188c:	9202      	str	r2, [sp, #8]
9002188e:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90021892:	9200      	str	r2, [sp, #0]
90021894:	463a      	mov	r2, r7
90021896:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
90021898:	4621      	mov	r1, r4
9002189a:	47a8      	blx	r5
9002189c:	b011      	add	sp, #68	@ 0x44
9002189e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900218a2:	6803      	ldr	r3, [r0, #0]
900218a4:	ea4f 0946 	mov.w	r9, r6, lsl #1
900218a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900218aa:	4798      	blx	r3
900218ac:	f8b8 2000 	ldrh.w	r2, [r8]
900218b0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900218b4:	2dff      	cmp	r5, #255	@ 0xff
900218b6:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
900218ba:	fb0a fa02 	mul.w	sl, sl, r2
900218be:	fb02 1303 	mla	r3, r2, r3, r1
900218c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900218c6:	d062      	beq.n	9002198e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
900218c8:	ea6f 0c05 	mvn.w	ip, r5
900218cc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
900218d0:	b2ad      	uxth	r5, r5
900218d2:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
900218d6:	fa5f fc8c 	uxtb.w	ip, ip
900218da:	930a      	str	r3, [sp, #40]	@ 0x28
900218dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900218de:	4298      	cmp	r0, r3
900218e0:	f080 8085 	bcs.w	900219ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
900218e4:	eb00 0b09 	add.w	fp, r0, r9
900218e8:	4558      	cmp	r0, fp
900218ea:	d246      	bcs.n	9002197a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
900218ec:	f814 eb01 	ldrb.w	lr, [r4], #1
900218f0:	2303      	movs	r3, #3
900218f2:	2204      	movs	r2, #4
900218f4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
900218f8:	8803      	ldrh	r3, [r0, #0]
900218fa:	eb07 0a0e 	add.w	sl, r7, lr
900218fe:	1219      	asrs	r1, r3, #8
90021900:	10da      	asrs	r2, r3, #3
90021902:	f817 e00e 	ldrb.w	lr, [r7, lr]
90021906:	f89a 8002 	ldrb.w	r8, [sl, #2]
9002190a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002190e:	00db      	lsls	r3, r3, #3
90021910:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021914:	fb18 f805 	smulbb	r8, r8, r5
90021918:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9002191c:	fb1e fe05 	smulbb	lr, lr, r5
90021920:	b2db      	uxtb	r3, r3
90021922:	fb01 810c 	mla	r1, r1, ip, r8
90021926:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002192a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9002192e:	fb18 f805 	smulbb	r8, r8, r5
90021932:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90021936:	b289      	uxth	r1, r1
90021938:	fb02 820c 	mla	r2, r2, ip, r8
9002193c:	fb03 e30c 	mla	r3, r3, ip, lr
90021940:	f101 0801 	add.w	r8, r1, #1
90021944:	b292      	uxth	r2, r2
90021946:	b29b      	uxth	r3, r3
90021948:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9002194c:	f102 0801 	add.w	r8, r2, #1
90021950:	f103 0e01 	add.w	lr, r3, #1
90021954:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90021958:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002195c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90021960:	ea4f 1858 	mov.w	r8, r8, lsr #5
90021964:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90021968:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002196c:	ea4e 0101 	orr.w	r1, lr, r1
90021970:	ea41 0108 	orr.w	r1, r1, r8
90021974:	f820 1b02 	strh.w	r1, [r0], #2
90021978:	e7b6      	b.n	900218e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9002197a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002197c:	881b      	ldrh	r3, [r3, #0]
9002197e:	1b9b      	subs	r3, r3, r6
90021980:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021984:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90021988:	1b9b      	subs	r3, r3, r6
9002198a:	441c      	add	r4, r3
9002198c:	e7a6      	b.n	900218dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002198e:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90021992:	2203      	movs	r2, #3
90021994:	2504      	movs	r5, #4
90021996:	4919      	ldr	r1, [pc, #100]	@ (900219fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90021998:	4550      	cmp	r0, sl
9002199a:	d228      	bcs.n	900219ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002199c:	eb00 0c09 	add.w	ip, r0, r9
900219a0:	4560      	cmp	r0, ip
900219a2:	4623      	mov	r3, r4
900219a4:	d219      	bcs.n	900219da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
900219a6:	f893 e000 	ldrb.w	lr, [r3]
900219aa:	3401      	adds	r4, #1
900219ac:	fb12 5e0e 	smlabb	lr, r2, lr, r5
900219b0:	eb07 0b0e 	add.w	fp, r7, lr
900219b4:	f817 e00e 	ldrb.w	lr, [r7, lr]
900219b8:	f89b 3002 	ldrb.w	r3, [fp, #2]
900219bc:	f89b b001 	ldrb.w	fp, [fp, #1]
900219c0:	ea01 2303 	and.w	r3, r1, r3, lsl #8
900219c4:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
900219c8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
900219cc:	ea43 030b 	orr.w	r3, r3, fp
900219d0:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
900219d4:	f820 3b02 	strh.w	r3, [r0], #2
900219d8:	e7e2      	b.n	900219a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
900219da:	f8b8 3000 	ldrh.w	r3, [r8]
900219de:	1b9b      	subs	r3, r3, r6
900219e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900219e4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900219e8:	1b9b      	subs	r3, r3, r6
900219ea:	441c      	add	r4, r3
900219ec:	e7d4      	b.n	90021998 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
900219ee:	4b04      	ldr	r3, [pc, #16]	@ (90021a00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
900219f0:	6818      	ldr	r0, [r3, #0]
900219f2:	6803      	ldr	r3, [r0, #0]
900219f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900219f6:	4798      	blx	r3
900219f8:	e750      	b.n	9002189c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900219fa:	bf00      	nop
900219fc:	fffff800 	.word	0xfffff800
90021a00:	240218cc 	.word	0x240218cc
90021a04:	240218c6 	.word	0x240218c6

90021a08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90021a08:	b4f0      	push	{r4, r5, r6, r7}
90021a0a:	460c      	mov	r4, r1
90021a0c:	4611      	mov	r1, r2
90021a0e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90021a12:	461a      	mov	r2, r3
90021a14:	780f      	ldrb	r7, [r1, #0]
90021a16:	9b04      	ldr	r3, [sp, #16]
90021a18:	2f01      	cmp	r7, #1
90021a1a:	784e      	ldrb	r6, [r1, #1]
90021a1c:	d038      	beq.n	90021a90 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
90021a1e:	d31f      	bcc.n	90021a60 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
90021a20:	2f02      	cmp	r7, #2
90021a22:	d14d      	bne.n	90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a24:	2e03      	cmp	r6, #3
90021a26:	d84b      	bhi.n	90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a28:	e8df f006 	tbb	[pc, r6]
90021a2c:	17140702 	.word	0x17140702
90021a30:	9504      	str	r5, [sp, #16]
90021a32:	4620      	mov	r0, r4
90021a34:	bcf0      	pop	{r4, r5, r6, r7}
90021a36:	f7ff be09 	b.w	9002164c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90021a3a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90021a3c:	2800      	cmp	r0, #0
90021a3e:	d03f      	beq.n	90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a40:	6806      	ldr	r6, [r0, #0]
90021a42:	e9cd 3504 	strd	r3, r5, [sp, #16]
90021a46:	68b5      	ldr	r5, [r6, #8]
90021a48:	4613      	mov	r3, r2
90021a4a:	46ac      	mov	ip, r5
90021a4c:	460a      	mov	r2, r1
90021a4e:	4621      	mov	r1, r4
90021a50:	bcf0      	pop	{r4, r5, r6, r7}
90021a52:	4760      	bx	ip
90021a54:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90021a58:	e7f0      	b.n	90021a3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90021a5a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90021a5e:	e7ed      	b.n	90021a3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90021a60:	2e03      	cmp	r6, #3
90021a62:	d82d      	bhi.n	90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a64:	e8df f006 	tbb	[pc, r6]
90021a68:	110e0702 	.word	0x110e0702
90021a6c:	9504      	str	r5, [sp, #16]
90021a6e:	4620      	mov	r0, r4
90021a70:	bcf0      	pop	{r4, r5, r6, r7}
90021a72:	f7ff bd05 	b.w	90021480 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90021a76:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90021a78:	b310      	cbz	r0, 90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a7a:	6806      	ldr	r6, [r0, #0]
90021a7c:	e9cd 3504 	strd	r3, r5, [sp, #16]
90021a80:	68f5      	ldr	r5, [r6, #12]
90021a82:	e7e1      	b.n	90021a48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90021a84:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90021a88:	e7f6      	b.n	90021a78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90021a8a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90021a8e:	e7f3      	b.n	90021a78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90021a90:	2e03      	cmp	r6, #3
90021a92:	d815      	bhi.n	90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021a94:	e8df f006 	tbb	[pc, r6]
90021a98:	110e0702 	.word	0x110e0702
90021a9c:	9504      	str	r5, [sp, #16]
90021a9e:	4620      	mov	r0, r4
90021aa0:	bcf0      	pop	{r4, r5, r6, r7}
90021aa2:	f7ff be9f 	b.w	900217e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90021aa6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90021aa8:	b150      	cbz	r0, 90021ac0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90021aaa:	6806      	ldr	r6, [r0, #0]
90021aac:	e9cd 3504 	strd	r3, r5, [sp, #16]
90021ab0:	6935      	ldr	r5, [r6, #16]
90021ab2:	e7c9      	b.n	90021a48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90021ab4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90021ab8:	e7f6      	b.n	90021aa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90021aba:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90021abe:	e7f3      	b.n	90021aa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90021ac0:	bcf0      	pop	{r4, r5, r6, r7}
90021ac2:	4770      	bx	lr

90021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90021ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021ac8:	b087      	sub	sp, #28
90021aca:	4604      	mov	r4, r0
90021acc:	460e      	mov	r6, r1
90021ace:	6810      	ldr	r0, [r2, #0]
90021ad0:	6851      	ldr	r1, [r2, #4]
90021ad2:	ad02      	add	r5, sp, #8
90021ad4:	4617      	mov	r7, r2
90021ad6:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90021ada:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90021d0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90021ade:	c503      	stmia	r5!, {r0, r1}
90021ae0:	6818      	ldr	r0, [r3, #0]
90021ae2:	ad04      	add	r5, sp, #16
90021ae4:	6859      	ldr	r1, [r3, #4]
90021ae6:	c503      	stmia	r5!, {r0, r1}
90021ae8:	a802      	add	r0, sp, #8
90021aea:	f7f6 f987 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021aee:	4639      	mov	r1, r7
90021af0:	a804      	add	r0, sp, #16
90021af2:	f7f6 f9c7 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021af6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90021afa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021afe:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90021b02:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90021b06:	fb11 2103 	smlabb	r1, r1, r3, r2
90021b0a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90021b0e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90021b12:	440e      	add	r6, r1
90021b14:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90021b18:	440a      	add	r2, r1
90021b1a:	f8ad 2010 	strh.w	r2, [sp, #16]
90021b1e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90021b22:	4413      	add	r3, r2
90021b24:	f8ad 3012 	strh.w	r3, [sp, #18]
90021b28:	4b77      	ldr	r3, [pc, #476]	@ (90021d08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90021b2a:	6818      	ldr	r0, [r3, #0]
90021b2c:	6803      	ldr	r3, [r0, #0]
90021b2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021b30:	4798      	blx	r3
90021b32:	f8b9 b000 	ldrh.w	fp, [r9]
90021b36:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021b3a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90021b3e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90021b42:	fb05 f50b 	mul.w	r5, r5, fp
90021b46:	fb0b 2303 	mla	r3, fp, r3, r2
90021b4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021b4e:	ea4f 0348 	mov.w	r3, r8, lsl #1
90021b52:	9300      	str	r3, [sp, #0]
90021b54:	d069      	beq.n	90021c2a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90021b56:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90021b5a:	4558      	cmp	r0, fp
90021b5c:	f080 80cc 	bcs.w	90021cf8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90021b60:	9b00      	ldr	r3, [sp, #0]
90021b62:	4631      	mov	r1, r6
90021b64:	18c3      	adds	r3, r0, r3
90021b66:	9301      	str	r3, [sp, #4]
90021b68:	9b01      	ldr	r3, [sp, #4]
90021b6a:	4298      	cmp	r0, r3
90021b6c:	d24f      	bcs.n	90021c0e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90021b6e:	f811 2b01 	ldrb.w	r2, [r1], #1
90021b72:	2a00      	cmp	r2, #0
90021b74:	d048      	beq.n	90021c08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90021b76:	fb0a f202 	mul.w	r2, sl, r2
90021b7a:	1c53      	adds	r3, r2, #1
90021b7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021b80:	121b      	asrs	r3, r3, #8
90021b82:	d041      	beq.n	90021c08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90021b84:	8802      	ldrh	r2, [r0, #0]
90021b86:	b29e      	uxth	r6, r3
90021b88:	f8b4 c000 	ldrh.w	ip, [r4]
90021b8c:	43db      	mvns	r3, r3
90021b8e:	1215      	asrs	r5, r2, #8
90021b90:	b2db      	uxtb	r3, r3
90021b92:	ea4f 272c 	mov.w	r7, ip, asr #8
90021b96:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90021b9a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90021b9e:	fb15 f503 	smulbb	r5, r5, r3
90021ba2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90021ba6:	00d2      	lsls	r2, r2, #3
90021ba8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90021bac:	fb07 5706 	mla	r7, r7, r6, r5
90021bb0:	ea4f 05ec 	mov.w	r5, ip, asr #3
90021bb4:	b2d2      	uxtb	r2, r2
90021bb6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021bba:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021bbe:	fb1e fe03 	smulbb	lr, lr, r3
90021bc2:	b2bf      	uxth	r7, r7
90021bc4:	fb12 f203 	smulbb	r2, r2, r3
90021bc8:	fa5f fc8c 	uxtb.w	ip, ip
90021bcc:	fb05 e506 	mla	r5, r5, r6, lr
90021bd0:	f107 0e01 	add.w	lr, r7, #1
90021bd4:	fb0c 2c06 	mla	ip, ip, r6, r2
90021bd8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90021bdc:	fa1f fc8c 	uxth.w	ip, ip
90021be0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90021be4:	b2ad      	uxth	r5, r5
90021be6:	f10c 0701 	add.w	r7, ip, #1
90021bea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90021bee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021bf2:	ea47 070e 	orr.w	r7, r7, lr
90021bf6:	f105 0e01 	add.w	lr, r5, #1
90021bfa:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90021bfe:	096d      	lsrs	r5, r5, #5
90021c00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021c04:	432f      	orrs	r7, r5
90021c06:	8007      	strh	r7, [r0, #0]
90021c08:	3002      	adds	r0, #2
90021c0a:	3402      	adds	r4, #2
90021c0c:	e7ac      	b.n	90021b68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90021c0e:	f8b9 3000 	ldrh.w	r3, [r9]
90021c12:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90021c16:	eba3 0308 	sub.w	r3, r3, r8
90021c1a:	eba6 0608 	sub.w	r6, r6, r8
90021c1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021c22:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90021c26:	440e      	add	r6, r1
90021c28:	e797      	b.n	90021b5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90021c2a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90021c2e:	42a8      	cmp	r0, r5
90021c30:	d262      	bcs.n	90021cf8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90021c32:	9b00      	ldr	r3, [sp, #0]
90021c34:	4631      	mov	r1, r6
90021c36:	eb00 0b03 	add.w	fp, r0, r3
90021c3a:	4558      	cmp	r0, fp
90021c3c:	d24e      	bcs.n	90021cdc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90021c3e:	f811 3b01 	ldrb.w	r3, [r1], #1
90021c42:	b12b      	cbz	r3, 90021c50 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90021c44:	2bff      	cmp	r3, #255	@ 0xff
90021c46:	f8b4 e000 	ldrh.w	lr, [r4]
90021c4a:	d104      	bne.n	90021c56 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90021c4c:	f8a0 e000 	strh.w	lr, [r0]
90021c50:	3002      	adds	r0, #2
90021c52:	3402      	adds	r4, #2
90021c54:	e7f1      	b.n	90021c3a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90021c56:	8802      	ldrh	r2, [r0, #0]
90021c58:	b29f      	uxth	r7, r3
90021c5a:	43db      	mvns	r3, r3
90021c5c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90021c60:	1216      	asrs	r6, r2, #8
90021c62:	b2db      	uxtb	r3, r3
90021c64:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021c68:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90021c6c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90021c70:	00d2      	lsls	r2, r2, #3
90021c72:	fb16 f603 	smulbb	r6, r6, r3
90021c76:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90021c7a:	b2d2      	uxtb	r2, r2
90021c7c:	fb0c 6c07 	mla	ip, ip, r7, r6
90021c80:	ea4f 06ee 	mov.w	r6, lr, asr #3
90021c84:	fb1a fa03 	smulbb	sl, sl, r3
90021c88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90021c8c:	fa1f fc8c 	uxth.w	ip, ip
90021c90:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90021c94:	fb12 f303 	smulbb	r3, r2, r3
90021c98:	fa5f fe8e 	uxtb.w	lr, lr
90021c9c:	fb06 a607 	mla	r6, r6, r7, sl
90021ca0:	f10c 0201 	add.w	r2, ip, #1
90021ca4:	fb0e 3307 	mla	r3, lr, r7, r3
90021ca8:	b2b6      	uxth	r6, r6
90021caa:	b29b      	uxth	r3, r3
90021cac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90021cb0:	f106 0a01 	add.w	sl, r6, #1
90021cb4:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90021cb8:	f103 0c01 	add.w	ip, r3, #1
90021cbc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90021cc0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90021cc4:	0976      	lsrs	r6, r6, #5
90021cc6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90021cca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90021cce:	ea4c 0c02 	orr.w	ip, ip, r2
90021cd2:	ea4c 0c06 	orr.w	ip, ip, r6
90021cd6:	f8a0 c000 	strh.w	ip, [r0]
90021cda:	e7b9      	b.n	90021c50 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90021cdc:	f8b9 3000 	ldrh.w	r3, [r9]
90021ce0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90021ce4:	eba3 0308 	sub.w	r3, r3, r8
90021ce8:	eba6 0608 	sub.w	r6, r6, r8
90021cec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021cf0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90021cf4:	440e      	add	r6, r1
90021cf6:	e79a      	b.n	90021c2e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90021cf8:	4b03      	ldr	r3, [pc, #12]	@ (90021d08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90021cfa:	6818      	ldr	r0, [r3, #0]
90021cfc:	6803      	ldr	r3, [r0, #0]
90021cfe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021d00:	4798      	blx	r3
90021d02:	b007      	add	sp, #28
90021d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021d08:	240218cc 	.word	0x240218cc
90021d0c:	240218c6 	.word	0x240218c6

90021d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90021d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021d14:	b089      	sub	sp, #36	@ 0x24
90021d16:	4607      	mov	r7, r0
90021d18:	4688      	mov	r8, r1
90021d1a:	4692      	mov	sl, r2
90021d1c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90021d20:	4699      	mov	r9, r3
90021d22:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021d24:	2e00      	cmp	r6, #0
90021d26:	d048      	beq.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021d28:	4608      	mov	r0, r1
90021d2a:	f7fa f813 	bl	9001bd54 <_ZNK8touchgfx6Bitmap8getWidthEv>
90021d2e:	4605      	mov	r5, r0
90021d30:	4640      	mov	r0, r8
90021d32:	f7fa f843 	bl	9001bdbc <_ZNK8touchgfx6Bitmap9getHeightEv>
90021d36:	f8ad 000e 	strh.w	r0, [sp, #14]
90021d3a:	4640      	mov	r0, r8
90021d3c:	f8ad a008 	strh.w	sl, [sp, #8]
90021d40:	f8ad 500c 	strh.w	r5, [sp, #12]
90021d44:	f8ad 900a 	strh.w	r9, [sp, #10]
90021d48:	f7fa f8f6 	bl	9001bf38 <_ZNK8touchgfx6Bitmap7getDataEv>
90021d4c:	4605      	mov	r5, r0
90021d4e:	4640      	mov	r0, r8
90021d50:	f7fa f922 	bl	9001bf98 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90021d54:	4682      	mov	sl, r0
90021d56:	4640      	mov	r0, r8
90021d58:	f7fa f972 	bl	9001c040 <_ZNK8touchgfx6Bitmap9getFormatEv>
90021d5c:	2810      	cmp	r0, #16
90021d5e:	d82c      	bhi.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021d60:	e8df f010 	tbh	[pc, r0, lsl #1]
90021d64:	00ba00ca 	.word	0x00ba00ca
90021d68:	002b0011 	.word	0x002b0011
90021d6c:	002b002b 	.word	0x002b002b
90021d70:	002b002b 	.word	0x002b002b
90021d74:	002b002b 	.word	0x002b002b
90021d78:	00c1002b 	.word	0x00c1002b
90021d7c:	002b002b 	.word	0x002b002b
90021d80:	002b0180 	.word	0x002b0180
90021d84:	0173      	.short	0x0173
90021d86:	4bbc      	ldr	r3, [pc, #752]	@ (90022078 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90021d88:	6818      	ldr	r0, [r3, #0]
90021d8a:	6803      	ldr	r3, [r0, #0]
90021d8c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021d8e:	4798      	blx	r3
90021d90:	2eff      	cmp	r6, #255	@ 0xff
90021d92:	d101      	bne.n	90021d98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90021d94:	0683      	lsls	r3, r0, #26
90021d96:	d506      	bpl.n	90021da6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90021d98:	4633      	mov	r3, r6
90021d9a:	4622      	mov	r2, r4
90021d9c:	a902      	add	r1, sp, #8
90021d9e:	4628      	mov	r0, r5
90021da0:	f7ff f8fc 	bl	90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021da4:	e009      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021da6:	4640      	mov	r0, r8
90021da8:	f7fa f88e 	bl	9001bec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021dac:	b940      	cbnz	r0, 90021dc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
90021dae:	4623      	mov	r3, r4
90021db0:	aa02      	add	r2, sp, #8
90021db2:	4629      	mov	r1, r5
90021db4:	4638      	mov	r0, r7
90021db6:	f7ff f9d7 	bl	90021168 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021dba:	b009      	add	sp, #36	@ 0x24
90021dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021dc0:	f10d 0918 	add.w	r9, sp, #24
90021dc4:	4641      	mov	r1, r8
90021dc6:	f10d 0810 	add.w	r8, sp, #16
90021dca:	4648      	mov	r0, r9
90021dcc:	f7fa f82a 	bl	9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021dd0:	e899 0003 	ldmia.w	r9, {r0, r1}
90021dd4:	e888 0003 	stmia.w	r8, {r0, r1}
90021dd8:	4640      	mov	r0, r8
90021dda:	4621      	mov	r1, r4
90021ddc:	f7f0 f87a 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90021de0:	4640      	mov	r0, r8
90021de2:	f7f0 f8ba 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90021de6:	2800      	cmp	r0, #0
90021de8:	d1d6      	bne.n	90021d98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90021dea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021dee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021df2:	4293      	cmp	r3, r2
90021df4:	dd12      	ble.n	90021e1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90021df6:	1a9b      	subs	r3, r3, r2
90021df8:	f9b4 0000 	ldrsh.w	r0, [r4]
90021dfc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021e00:	f8ad 0018 	strh.w	r0, [sp, #24]
90021e04:	4628      	mov	r0, r5
90021e06:	f8ad 201a 	strh.w	r2, [sp, #26]
90021e0a:	464a      	mov	r2, r9
90021e0c:	f8ad 101c 	strh.w	r1, [sp, #28]
90021e10:	a902      	add	r1, sp, #8
90021e12:	f8ad 301e 	strh.w	r3, [sp, #30]
90021e16:	4633      	mov	r3, r6
90021e18:	f7ff f8c0 	bl	90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021e1c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90021e20:	f9b4 2000 	ldrsh.w	r2, [r4]
90021e24:	4293      	cmp	r3, r2
90021e26:	dd12      	ble.n	90021e4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
90021e28:	1a9b      	subs	r3, r3, r2
90021e2a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90021e2e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90021e32:	f8ad 2018 	strh.w	r2, [sp, #24]
90021e36:	464a      	mov	r2, r9
90021e38:	f8ad 001a 	strh.w	r0, [sp, #26]
90021e3c:	4628      	mov	r0, r5
90021e3e:	f8ad 301c 	strh.w	r3, [sp, #28]
90021e42:	23ff      	movs	r3, #255	@ 0xff
90021e44:	f8ad 101e 	strh.w	r1, [sp, #30]
90021e48:	a902      	add	r1, sp, #8
90021e4a:	f7ff f8a7 	bl	90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021e4e:	4643      	mov	r3, r8
90021e50:	aa02      	add	r2, sp, #8
90021e52:	4629      	mov	r1, r5
90021e54:	4638      	mov	r0, r7
90021e56:	f7ff f987 	bl	90021168 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021e5a:	88a2      	ldrh	r2, [r4, #4]
90021e5c:	8823      	ldrh	r3, [r4, #0]
90021e5e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021e62:	4413      	add	r3, r2
90021e64:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021e68:	440a      	add	r2, r1
90021e6a:	b29b      	uxth	r3, r3
90021e6c:	b292      	uxth	r2, r2
90021e6e:	b218      	sxth	r0, r3
90021e70:	b211      	sxth	r1, r2
90021e72:	4288      	cmp	r0, r1
90021e74:	dd12      	ble.n	90021e9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90021e76:	1a9b      	subs	r3, r3, r2
90021e78:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021e7c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90021e80:	464a      	mov	r2, r9
90021e82:	f8ad 1018 	strh.w	r1, [sp, #24]
90021e86:	a902      	add	r1, sp, #8
90021e88:	f8ad 301c 	strh.w	r3, [sp, #28]
90021e8c:	23ff      	movs	r3, #255	@ 0xff
90021e8e:	f8ad 001e 	strh.w	r0, [sp, #30]
90021e92:	4628      	mov	r0, r5
90021e94:	f8ad 601a 	strh.w	r6, [sp, #26]
90021e98:	f7ff f880 	bl	90020f9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021e9c:	88e2      	ldrh	r2, [r4, #6]
90021e9e:	8863      	ldrh	r3, [r4, #2]
90021ea0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90021ea4:	4413      	add	r3, r2
90021ea6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90021eaa:	440a      	add	r2, r1
90021eac:	b29b      	uxth	r3, r3
90021eae:	b292      	uxth	r2, r2
90021eb0:	b218      	sxth	r0, r3
90021eb2:	b211      	sxth	r1, r2
90021eb4:	4288      	cmp	r0, r1
90021eb6:	dd80      	ble.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021eb8:	1a9b      	subs	r3, r3, r2
90021eba:	f9b4 6000 	ldrsh.w	r6, [r4]
90021ebe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90021ec2:	464a      	mov	r2, r9
90021ec4:	f8ad 301e 	strh.w	r3, [sp, #30]
90021ec8:	23ff      	movs	r3, #255	@ 0xff
90021eca:	f8ad 6018 	strh.w	r6, [sp, #24]
90021ece:	f8ad 101a 	strh.w	r1, [sp, #26]
90021ed2:	f8ad 001c 	strh.w	r0, [sp, #28]
90021ed6:	e761      	b.n	90021d9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90021ed8:	4633      	mov	r3, r6
90021eda:	4622      	mov	r2, r4
90021edc:	a902      	add	r1, sp, #8
90021ede:	4628      	mov	r0, r5
90021ee0:	f7ff f9b2 	bl	90021248 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90021ee4:	e769      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021ee6:	e9cd 4600 	strd	r4, r6, [sp]
90021eea:	ab02      	add	r3, sp, #8
90021eec:	4652      	mov	r2, sl
90021eee:	4629      	mov	r1, r5
90021ef0:	4638      	mov	r0, r7
90021ef2:	f7ff fd89 	bl	90021a08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90021ef6:	e760      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021ef8:	4640      	mov	r0, r8
90021efa:	f7f9 ffe5 	bl	9001bec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021efe:	b948      	cbnz	r0, 90021f14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90021f00:	683b      	ldr	r3, [r7, #0]
90021f02:	aa02      	add	r2, sp, #8
90021f04:	4629      	mov	r1, r5
90021f06:	e9cd 6000 	strd	r6, r0, [sp]
90021f0a:	4638      	mov	r0, r7
90021f0c:	68de      	ldr	r6, [r3, #12]
90021f0e:	4623      	mov	r3, r4
90021f10:	47b0      	blx	r6
90021f12:	e752      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021f14:	f10d 0918 	add.w	r9, sp, #24
90021f18:	4641      	mov	r1, r8
90021f1a:	f10d 0810 	add.w	r8, sp, #16
90021f1e:	4648      	mov	r0, r9
90021f20:	f7f9 ff80 	bl	9001be24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021f24:	e899 0003 	ldmia.w	r9, {r0, r1}
90021f28:	e888 0003 	stmia.w	r8, {r0, r1}
90021f2c:	4640      	mov	r0, r8
90021f2e:	4621      	mov	r1, r4
90021f30:	f7ef ffd0 	bl	90011ed4 <_ZN8touchgfx4RectaNERKS0_>
90021f34:	4640      	mov	r0, r8
90021f36:	f7f0 f810 	bl	90011f5a <_ZNK8touchgfx4Rect7isEmptyEv>
90021f3a:	b138      	cbz	r0, 90021f4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
90021f3c:	4623      	mov	r3, r4
90021f3e:	9600      	str	r6, [sp, #0]
90021f40:	aa02      	add	r2, sp, #8
90021f42:	4651      	mov	r1, sl
90021f44:	4628      	mov	r0, r5
90021f46:	f7ff fdbd 	bl	90021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021f4a:	e736      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90021f4c:	683b      	ldr	r3, [r7, #0]
90021f4e:	aa02      	add	r2, sp, #8
90021f50:	4629      	mov	r1, r5
90021f52:	e9cd 6000 	strd	r6, r0, [sp]
90021f56:	4638      	mov	r0, r7
90021f58:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90021f5c:	4643      	mov	r3, r8
90021f5e:	47d8      	blx	fp
90021f60:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021f64:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021f68:	4293      	cmp	r3, r2
90021f6a:	dd13      	ble.n	90021f94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90021f6c:	f9b4 0000 	ldrsh.w	r0, [r4]
90021f70:	1a9b      	subs	r3, r3, r2
90021f72:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021f76:	f8ad 0018 	strh.w	r0, [sp, #24]
90021f7a:	4628      	mov	r0, r5
90021f7c:	f8ad 201a 	strh.w	r2, [sp, #26]
90021f80:	aa02      	add	r2, sp, #8
90021f82:	f8ad 101c 	strh.w	r1, [sp, #28]
90021f86:	4651      	mov	r1, sl
90021f88:	f8ad 301e 	strh.w	r3, [sp, #30]
90021f8c:	464b      	mov	r3, r9
90021f8e:	9600      	str	r6, [sp, #0]
90021f90:	f7ff fd98 	bl	90021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021f94:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90021f98:	f9b4 2000 	ldrsh.w	r2, [r4]
90021f9c:	4293      	cmp	r3, r2
90021f9e:	dd13      	ble.n	90021fc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90021fa0:	1a9b      	subs	r3, r3, r2
90021fa2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90021fa6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90021faa:	f8ad 2018 	strh.w	r2, [sp, #24]
90021fae:	aa02      	add	r2, sp, #8
90021fb0:	f8ad 001a 	strh.w	r0, [sp, #26]
90021fb4:	4628      	mov	r0, r5
90021fb6:	f8ad 301c 	strh.w	r3, [sp, #28]
90021fba:	464b      	mov	r3, r9
90021fbc:	f8ad 101e 	strh.w	r1, [sp, #30]
90021fc0:	4651      	mov	r1, sl
90021fc2:	9600      	str	r6, [sp, #0]
90021fc4:	f7ff fd7e 	bl	90021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021fc8:	88a2      	ldrh	r2, [r4, #4]
90021fca:	8823      	ldrh	r3, [r4, #0]
90021fcc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021fd0:	4413      	add	r3, r2
90021fd2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021fd6:	440a      	add	r2, r1
90021fd8:	b29b      	uxth	r3, r3
90021fda:	b292      	uxth	r2, r2
90021fdc:	b218      	sxth	r0, r3
90021fde:	b211      	sxth	r1, r2
90021fe0:	4288      	cmp	r0, r1
90021fe2:	dd13      	ble.n	9002200c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90021fe4:	1a9b      	subs	r3, r3, r2
90021fe6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021fea:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90021fee:	aa02      	add	r2, sp, #8
90021ff0:	f8ad 1018 	strh.w	r1, [sp, #24]
90021ff4:	4651      	mov	r1, sl
90021ff6:	f8ad 301c 	strh.w	r3, [sp, #28]
90021ffa:	464b      	mov	r3, r9
90021ffc:	f8ad 001e 	strh.w	r0, [sp, #30]
90022000:	4628      	mov	r0, r5
90022002:	9600      	str	r6, [sp, #0]
90022004:	f8ad 701a 	strh.w	r7, [sp, #26]
90022008:	f7ff fd5c 	bl	90021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9002200c:	88e2      	ldrh	r2, [r4, #6]
9002200e:	8863      	ldrh	r3, [r4, #2]
90022010:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022014:	4413      	add	r3, r2
90022016:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9002201a:	440a      	add	r2, r1
9002201c:	b29b      	uxth	r3, r3
9002201e:	b292      	uxth	r2, r2
90022020:	b218      	sxth	r0, r3
90022022:	b211      	sxth	r1, r2
90022024:	4288      	cmp	r0, r1
90022026:	f77f aec8 	ble.w	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002202a:	f9b4 7000 	ldrsh.w	r7, [r4]
9002202e:	1a9b      	subs	r3, r3, r2
90022030:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022034:	f8ad 301e 	strh.w	r3, [sp, #30]
90022038:	464b      	mov	r3, r9
9002203a:	f8ad 7018 	strh.w	r7, [sp, #24]
9002203e:	f8ad 101a 	strh.w	r1, [sp, #26]
90022042:	f8ad 001c 	strh.w	r0, [sp, #28]
90022046:	9600      	str	r6, [sp, #0]
90022048:	e77a      	b.n	90021f40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
9002204a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9002204e:	2800      	cmp	r0, #0
90022050:	f43f aeb3 	beq.w	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022054:	6803      	ldr	r3, [r0, #0]
90022056:	9600      	str	r6, [sp, #0]
90022058:	68de      	ldr	r6, [r3, #12]
9002205a:	4623      	mov	r3, r4
9002205c:	aa02      	add	r2, sp, #8
9002205e:	4629      	mov	r1, r5
90022060:	47b0      	blx	r6
90022062:	e6aa      	b.n	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022064:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022068:	2800      	cmp	r0, #0
9002206a:	f43f aea6 	beq.w	90021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002206e:	6803      	ldr	r3, [r0, #0]
90022070:	9600      	str	r6, [sp, #0]
90022072:	689e      	ldr	r6, [r3, #8]
90022074:	e7f1      	b.n	9002205a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90022076:	bf00      	nop
90022078:	240218cc 	.word	0x240218cc

9002207c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9002207c:	b180      	cbz	r0, 900220a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9002207e:	2903      	cmp	r1, #3
90022080:	d81c      	bhi.n	900220bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022082:	e8df f001 	tbb	[pc, r1]
90022086:	1d02      	.short	0x1d02
90022088:	1f08      	.short	0x1f08
9002208a:	4b10      	ldr	r3, [pc, #64]	@ (900220cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9002208c:	8818      	ldrh	r0, [r3, #0]
9002208e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022092:	4240      	negs	r0, r0
90022094:	4770      	bx	lr
90022096:	4b0d      	ldr	r3, [pc, #52]	@ (900220cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022098:	8818      	ldrh	r0, [r3, #0]
9002209a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002209e:	4770      	bx	lr
900220a0:	2903      	cmp	r1, #3
900220a2:	d80b      	bhi.n	900220bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
900220a4:	a301      	add	r3, pc, #4	@ (adr r3, 900220ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
900220a6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900220aa:	bf00      	nop
900220ac:	900220c1 	.word	0x900220c1
900220b0:	90022097 	.word	0x90022097
900220b4:	900220c5 	.word	0x900220c5
900220b8:	9002208b 	.word	0x9002208b
900220bc:	2000      	movs	r0, #0
900220be:	4770      	bx	lr
900220c0:	2001      	movs	r0, #1
900220c2:	4770      	bx	lr
900220c4:	f04f 30ff 	mov.w	r0, #4294967295
900220c8:	4770      	bx	lr
900220ca:	bf00      	nop
900220cc:	240218c6 	.word	0x240218c6

900220d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
900220d0:	b180      	cbz	r0, 900220f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
900220d2:	2903      	cmp	r1, #3
900220d4:	d81c      	bhi.n	90022110 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900220d6:	e8df f001 	tbb	[pc, r1]
900220da:	021d      	.short	0x021d
900220dc:	071f      	.short	0x071f
900220de:	4b10      	ldr	r3, [pc, #64]	@ (90022120 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900220e0:	8818      	ldrh	r0, [r3, #0]
900220e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
900220e6:	4770      	bx	lr
900220e8:	4b0d      	ldr	r3, [pc, #52]	@ (90022120 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900220ea:	8818      	ldrh	r0, [r3, #0]
900220ec:	f3c0 000e 	ubfx	r0, r0, #0, #15
900220f0:	4240      	negs	r0, r0
900220f2:	4770      	bx	lr
900220f4:	2903      	cmp	r1, #3
900220f6:	d80b      	bhi.n	90022110 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900220f8:	a301      	add	r3, pc, #4	@ (adr r3, 90022100 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
900220fa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900220fe:	bf00      	nop
90022100:	900220df 	.word	0x900220df
90022104:	90022119 	.word	0x90022119
90022108:	900220e9 	.word	0x900220e9
9002210c:	90022115 	.word	0x90022115
90022110:	2000      	movs	r0, #0
90022112:	4770      	bx	lr
90022114:	2001      	movs	r0, #1
90022116:	4770      	bx	lr
90022118:	f04f 30ff 	mov.w	r0, #4294967295
9002211c:	4770      	bx	lr
9002211e:	bf00      	nop
90022120:	240218c6 	.word	0x240218c6

90022124 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90022124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022128:	b099      	sub	sp, #100	@ 0x64
9002212a:	910d      	str	r1, [sp, #52]	@ 0x34
9002212c:	a914      	add	r1, sp, #80	@ 0x50
9002212e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
90022132:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90022136:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
9002213a:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
9002213c:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
90022140:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90022144:	e881 000c 	stmia.w	r1, {r2, r3}
90022148:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
9002214c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002214e:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90022152:	9310      	str	r3, [sp, #64]	@ 0x40
90022154:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90022158:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
9002215c:	9308      	str	r3, [sp, #32]
9002215e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90022162:	9309      	str	r3, [sp, #36]	@ 0x24
90022164:	7b4b      	ldrb	r3, [r1, #13]
90022166:	ea4f 1843 	mov.w	r8, r3, lsl #5
9002216a:	f408 7080 	and.w	r0, r8, #256	@ 0x100
9002216e:	f891 8006 	ldrb.w	r8, [r1, #6]
90022172:	ea58 0800 	orrs.w	r8, r8, r0
90022176:	f000 81d0 	beq.w	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002217a:	011b      	lsls	r3, r3, #4
9002217c:	79c8      	ldrb	r0, [r1, #7]
9002217e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90022182:	4303      	orrs	r3, r0
90022184:	930c      	str	r3, [sp, #48]	@ 0x30
90022186:	f000 81c8 	beq.w	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002218a:	f991 3009 	ldrsb.w	r3, [r1, #9]
9002218e:	b29b      	uxth	r3, r3
90022190:	2d00      	cmp	r5, #0
90022192:	f000 812d 	beq.w	900223f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
90022196:	1aed      	subs	r5, r5, r3
90022198:	b2ad      	uxth	r5, r5
9002219a:	0429      	lsls	r1, r5, #16
9002219c:	d502      	bpl.n	900221a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9002219e:	1b64      	subs	r4, r4, r5
900221a0:	2500      	movs	r5, #0
900221a2:	b224      	sxth	r4, r4
900221a4:	f9b2 0000 	ldrsh.w	r0, [r2]
900221a8:	8891      	ldrh	r1, [r2, #4]
900221aa:	4284      	cmp	r4, r0
900221ac:	b283      	uxth	r3, r0
900221ae:	bfb8      	it	lt
900221b0:	18ed      	addlt	r5, r5, r3
900221b2:	440b      	add	r3, r1
900221b4:	b21b      	sxth	r3, r3
900221b6:	bfb8      	it	lt
900221b8:	1b2c      	sublt	r4, r5, r4
900221ba:	930a      	str	r3, [sp, #40]	@ 0x28
900221bc:	bfb8      	it	lt
900221be:	b2a5      	uxthlt	r5, r4
900221c0:	88d3      	ldrh	r3, [r2, #6]
900221c2:	bfb8      	it	lt
900221c4:	4604      	movlt	r4, r0
900221c6:	8852      	ldrh	r2, [r2, #2]
900221c8:	a814      	add	r0, sp, #80	@ 0x50
900221ca:	4621      	mov	r1, r4
900221cc:	4413      	add	r3, r2
900221ce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900221d0:	b21b      	sxth	r3, r3
900221d2:	930f      	str	r3, [sp, #60]	@ 0x3c
900221d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900221d6:	930e      	str	r3, [sp, #56]	@ 0x38
900221d8:	4bb2      	ldr	r3, [pc, #712]	@ (900224a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
900221da:	f893 b000 	ldrb.w	fp, [r3]
900221de:	4653      	mov	r3, sl
900221e0:	f7f5 fc81 	bl	90017ae6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
900221e4:	4621      	mov	r1, r4
900221e6:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
900221ea:	4653      	mov	r3, sl
900221ec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900221ee:	a814      	add	r0, sp, #80	@ 0x50
900221f0:	f7f5 fc96 	bl	90017b20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
900221f4:	a918      	add	r1, sp, #96	@ 0x60
900221f6:	f821 0d02 	strh.w	r0, [r1, #-2]!
900221fa:	a817      	add	r0, sp, #92	@ 0x5c
900221fc:	f7f5 fdbc 	bl	90017d78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90022200:	f1ba 0f00 	cmp.w	sl, #0
90022204:	f040 80f7 	bne.w	900223f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
90022208:	f1bb 0f01 	cmp.w	fp, #1
9002220c:	f040 80fb 	bne.w	90022406 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
90022210:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022212:	2b00      	cmp	r3, #0
90022214:	f040 81a9 	bne.w	9002256a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
90022218:	fa1f f288 	uxth.w	r2, r8
9002221c:	b905      	cbnz	r5, 90022220 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9002221e:	b15e      	cbz	r6, 90022238 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
90022220:	fb06 5302 	mla	r3, r6, r2, r5
90022224:	9808      	ldr	r0, [sp, #32]
90022226:	4631      	mov	r1, r6
90022228:	4343      	muls	r3, r0
9002222a:	f003 0607 	and.w	r6, r3, #7
9002222e:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
90022232:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022234:	1a5b      	subs	r3, r3, r1
90022236:	930e      	str	r3, [sp, #56]	@ 0x38
90022238:	f10b 31ff 	add.w	r1, fp, #4294967295
9002223c:	424b      	negs	r3, r1
9002223e:	414b      	adcs	r3, r1
90022240:	4651      	mov	r1, sl
90022242:	4618      	mov	r0, r3
90022244:	930c      	str	r3, [sp, #48]	@ 0x30
90022246:	f7ff ff19 	bl	9002207c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9002224a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002224c:	4683      	mov	fp, r0
9002224e:	4618      	mov	r0, r3
90022250:	f7ff ff3e 	bl	900220d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90022254:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90022256:	4603      	mov	r3, r0
90022258:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9002225a:	eba1 0a00 	sub.w	sl, r1, r0
9002225e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90022260:	458a      	cmp	sl, r1
90022262:	bfa8      	it	ge
90022264:	468a      	movge	sl, r1
90022266:	f1ba 0f00 	cmp.w	sl, #0
9002226a:	f340 8156 	ble.w	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002226e:	1b64      	subs	r4, r4, r5
90022270:	990a      	ldr	r1, [sp, #40]	@ 0x28
90022272:	1b0c      	subs	r4, r1, r4
90022274:	4544      	cmp	r4, r8
90022276:	bfd4      	ite	le
90022278:	ebc5 0504 	rsble	r5, r5, r4
9002227c:	ebc5 0508 	rsbgt	r5, r5, r8
90022280:	2d00      	cmp	r5, #0
90022282:	f340 814a 	ble.w	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90022286:	1b52      	subs	r2, r2, r5
90022288:	9908      	ldr	r1, [sp, #32]
9002228a:	434a      	muls	r2, r1
9002228c:	920e      	str	r2, [sp, #56]	@ 0x38
9002228e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90022290:	2a00      	cmp	r2, #0
90022292:	f040 8176 	bne.w	90022582 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
90022296:	4a84      	ldr	r2, [pc, #528]	@ (900224a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90022298:	930a      	str	r3, [sp, #40]	@ 0x28
9002229a:	6810      	ldr	r0, [r2, #0]
9002229c:	6802      	ldr	r2, [r0, #0]
9002229e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900222a0:	4790      	blx	r2
900222a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900222a4:	9908      	ldr	r1, [sp, #32]
900222a6:	2201      	movs	r2, #1
900222a8:	408a      	lsls	r2, r1
900222aa:	4980      	ldr	r1, [pc, #512]	@ (900224ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
900222ac:	3a01      	subs	r2, #1
900222ae:	880c      	ldrh	r4, [r1, #0]
900222b0:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
900222b4:	b2d2      	uxtb	r2, r2
900222b6:	920c      	str	r2, [sp, #48]	@ 0x30
900222b8:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
900222bc:	fb04 1202 	mla	r2, r4, r2, r1
900222c0:	ea4f 2419 	mov.w	r4, r9, lsr #8
900222c4:	ea4f 1159 	mov.w	r1, r9, lsr #5
900222c8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900222cc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900222d0:	920a      	str	r2, [sp, #40]	@ 0x28
900222d2:	f3c9 4207 	ubfx	r2, r9, #16, #8
900222d6:	9212      	str	r2, [sp, #72]	@ 0x48
900222d8:	b2e2      	uxtb	r2, r4
900222da:	9211      	str	r2, [sp, #68]	@ 0x44
900222dc:	fa5f f289 	uxtb.w	r2, r9
900222e0:	f3c9 09c4 	ubfx	r9, r9, #3, #5
900222e4:	9210      	str	r2, [sp, #64]	@ 0x40
900222e6:	4a72      	ldr	r2, [pc, #456]	@ (900224b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
900222e8:	4022      	ands	r2, r4
900222ea:	430a      	orrs	r2, r1
900222ec:	ea4f 014b 	mov.w	r1, fp, lsl #1
900222f0:	fb05 3b1b 	mls	fp, r5, fp, r3
900222f4:	ea42 0209 	orr.w	r2, r2, r9
900222f8:	460b      	mov	r3, r1
900222fa:	910b      	str	r1, [sp, #44]	@ 0x2c
900222fc:	b292      	uxth	r2, r2
900222fe:	436b      	muls	r3, r5
90022300:	920f      	str	r2, [sp, #60]	@ 0x3c
90022302:	eb03 034b 	add.w	r3, r3, fp, lsl #1
90022306:	783a      	ldrb	r2, [r7, #0]
90022308:	9313      	str	r3, [sp, #76]	@ 0x4c
9002230a:	4132      	asrs	r2, r6
9002230c:	b2d2      	uxtb	r2, r2
9002230e:	f11a 3aff 	adds.w	sl, sl, #4294967295
90022312:	f0c0 814a 	bcc.w	900225aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
90022316:	46a9      	mov	r9, r5
90022318:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002231c:	f119 39ff 	adds.w	r9, r9, #4294967295
90022320:	f0c0 8133 	bcc.w	9002258a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
90022324:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022326:	4013      	ands	r3, r2
90022328:	d054      	beq.n	900223d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
9002232a:	20ff      	movs	r0, #255	@ 0xff
9002232c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002232e:	fb90 f1f1 	sdiv	r1, r0, r1
90022332:	434b      	muls	r3, r1
90022334:	2bfe      	cmp	r3, #254	@ 0xfe
90022336:	dd03      	ble.n	90022340 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
90022338:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002233a:	4281      	cmp	r1, r0
9002233c:	f000 8123 	beq.w	90022586 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
90022340:	9909      	ldr	r1, [sp, #36]	@ 0x24
90022342:	f8b8 4000 	ldrh.w	r4, [r8]
90022346:	fb11 f303 	smulbb	r3, r1, r3
9002234a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9002234c:	ea4f 0ce4 	mov.w	ip, r4, asr #3
90022350:	b29b      	uxth	r3, r3
90022352:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90022356:	1c59      	adds	r1, r3, #1
90022358:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
9002235c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90022360:	1221      	asrs	r1, r4, #8
90022362:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022366:	00e4      	lsls	r4, r4, #3
90022368:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002236c:	fa1f fe83 	uxth.w	lr, r3
90022370:	43db      	mvns	r3, r3
90022372:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90022376:	fb10 fb0e 	smulbb	fp, r0, lr
9002237a:	b2db      	uxtb	r3, r3
9002237c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002237e:	b2e4      	uxtb	r4, r4
90022380:	fb01 b103 	mla	r1, r1, r3, fp
90022384:	fb10 fb0e 	smulbb	fp, r0, lr
90022388:	9810      	ldr	r0, [sp, #64]	@ 0x40
9002238a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002238e:	fb10 fe0e 	smulbb	lr, r0, lr
90022392:	b289      	uxth	r1, r1
90022394:	fb0c bc03 	mla	ip, ip, r3, fp
90022398:	fb04 e403 	mla	r4, r4, r3, lr
9002239c:	1c4b      	adds	r3, r1, #1
9002239e:	fa1f fc8c 	uxth.w	ip, ip
900223a2:	b2a4      	uxth	r4, r4
900223a4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900223a8:	f104 0b01 	add.w	fp, r4, #1
900223ac:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900223b0:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
900223b4:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900223b8:	ea4b 0101 	orr.w	r1, fp, r1
900223bc:	f10c 0b01 	add.w	fp, ip, #1
900223c0:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
900223c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
900223c8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
900223cc:	ea41 010b 	orr.w	r1, r1, fp
900223d0:	f8a8 1000 	strh.w	r1, [r8]
900223d4:	9b08      	ldr	r3, [sp, #32]
900223d6:	441e      	add	r6, r3
900223d8:	b2b6      	uxth	r6, r6
900223da:	2e07      	cmp	r6, #7
900223dc:	bf98      	it	ls
900223de:	411a      	asrls	r2, r3
900223e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900223e2:	bf85      	ittet	hi
900223e4:	787a      	ldrbhi	r2, [r7, #1]
900223e6:	2600      	movhi	r6, #0
900223e8:	b2d2      	uxtbls	r2, r2
900223ea:	3701      	addhi	r7, #1
900223ec:	4498      	add	r8, r3
900223ee:	e795      	b.n	9002231c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
900223f0:	441c      	add	r4, r3
900223f2:	b224      	sxth	r4, r4
900223f4:	e6d6      	b.n	900221a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
900223f6:	f1ba 0f01 	cmp.w	sl, #1
900223fa:	f47f af09 	bne.w	90022210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900223fe:	f1bb 0f01 	cmp.w	fp, #1
90022402:	f47f af05 	bne.w	90022210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90022406:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022408:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002240a:	1a99      	subs	r1, r3, r2
9002240c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002240e:	1b9b      	subs	r3, r3, r6
90022410:	4299      	cmp	r1, r3
90022412:	bfa8      	it	ge
90022414:	4619      	movge	r1, r3
90022416:	2900      	cmp	r1, #0
90022418:	9112      	str	r1, [sp, #72]	@ 0x48
9002241a:	dd7e      	ble.n	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002241c:	4a22      	ldr	r2, [pc, #136]	@ (900224a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
9002241e:	6810      	ldr	r0, [r2, #0]
90022420:	9211      	str	r2, [sp, #68]	@ 0x44
90022422:	6803      	ldr	r3, [r0, #0]
90022424:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90022426:	4798      	blx	r3
90022428:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
9002242c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002242e:	d006      	beq.n	9002243e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
90022430:	9b08      	ldr	r3, [sp, #32]
90022432:	2b04      	cmp	r3, #4
90022434:	d133      	bne.n	9002249e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
90022436:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022438:	3300      	adds	r3, #0
9002243a:	bf18      	it	ne
9002243c:	2301      	movne	r3, #1
9002243e:	0582      	lsls	r2, r0, #22
90022440:	fa1f fc88 	uxth.w	ip, r8
90022444:	f140 80ba 	bpl.w	900225bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90022448:	9808      	ldr	r0, [sp, #32]
9002244a:	2808      	cmp	r0, #8
9002244c:	f040 80b6 	bne.w	900225bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90022450:	2b00      	cmp	r3, #0
90022452:	d065      	beq.n	90022520 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
90022454:	f10c 0c01 	add.w	ip, ip, #1
90022458:	f02c 0301 	bic.w	r3, ip, #1
9002245c:	b29b      	uxth	r3, r3
9002245e:	bb4d      	cbnz	r5, 900224b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90022460:	eb08 0004 	add.w	r0, r8, r4
90022464:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022466:	4290      	cmp	r0, r2
90022468:	dc24      	bgt.n	900224b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9002246a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9002246c:	b289      	uxth	r1, r1
9002246e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
90022472:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90022476:	6810      	ldr	r0, [r2, #0]
90022478:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9002247c:	6804      	ldr	r4, [r0, #0]
9002247e:	9506      	str	r5, [sp, #24]
90022480:	f44f 7580 	mov.w	r5, #256	@ 0x100
90022484:	9302      	str	r3, [sp, #8]
90022486:	9505      	str	r5, [sp, #20]
90022488:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002248a:	e9cd 3100 	strd	r3, r1, [sp]
9002248e:	e9cd 9503 	strd	r9, r5, [sp, #12]
90022492:	4673      	mov	r3, lr
90022494:	6da4      	ldr	r4, [r4, #88]	@ 0x58
90022496:	fb06 710c 	mla	r1, r6, ip, r7
9002249a:	47a0      	blx	r4
9002249c:	e03d      	b.n	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002249e:	2300      	movs	r3, #0
900224a0:	e7cd      	b.n	9002243e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900224a2:	bf00      	nop
900224a4:	240218c4 	.word	0x240218c4
900224a8:	240218cc 	.word	0x240218cc
900224ac:	240218c6 	.word	0x240218c6
900224b0:	00fff800 	.word	0x00fff800
900224b4:	eba4 0e05 	sub.w	lr, r4, r5
900224b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900224ba:	eba2 0e0e 	sub.w	lr, r2, lr
900224be:	45c6      	cmp	lr, r8
900224c0:	bfd4      	ite	le
900224c2:	ebc5 0e0e 	rsble	lr, r5, lr
900224c6:	ebc5 0e08 	rsbgt	lr, r5, r8
900224ca:	f1be 0f00 	cmp.w	lr, #0
900224ce:	d024      	beq.n	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900224d0:	07e8      	lsls	r0, r5, #31
900224d2:	f53f ae9d 	bmi.w	90022210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900224d6:	f01e 0001 	ands.w	r0, lr, #1
900224da:	f47f ae99 	bne.w	90022210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900224de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900224e0:	086d      	lsrs	r5, r5, #1
900224e2:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
900224e6:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
900224ea:	6814      	ldr	r4, [r2, #0]
900224ec:	b289      	uxth	r1, r1
900224ee:	fb06 560c 	mla	r6, r6, ip, r5
900224f2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900224f6:	6825      	ldr	r5, [r4, #0]
900224f8:	9006      	str	r0, [sp, #24]
900224fa:	f44f 7080 	mov.w	r0, #256	@ 0x100
900224fe:	9302      	str	r3, [sp, #8]
90022500:	fa1f f38e 	uxth.w	r3, lr
90022504:	9005      	str	r0, [sp, #20]
90022506:	9809      	ldr	r0, [sp, #36]	@ 0x24
90022508:	9101      	str	r1, [sp, #4]
9002250a:	19b9      	adds	r1, r7, r6
9002250c:	9300      	str	r3, [sp, #0]
9002250e:	4643      	mov	r3, r8
90022510:	e9cd 9003 	strd	r9, r0, [sp, #12]
90022514:	4620      	mov	r0, r4
90022516:	6dad      	ldr	r5, [r5, #88]	@ 0x58
90022518:	47a8      	blx	r5
9002251a:	b019      	add	sp, #100	@ 0x64
9002251c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022520:	4a28      	ldr	r2, [pc, #160]	@ (900225c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
90022522:	1b64      	subs	r4, r4, r5
90022524:	fb06 5608 	mla	r6, r6, r8, r5
90022528:	b289      	uxth	r1, r1
9002252a:	6810      	ldr	r0, [r2, #0]
9002252c:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
90022530:	f8d0 a000 	ldr.w	sl, [r0]
90022534:	9306      	str	r3, [sp, #24]
90022536:	f44f 7300 	mov.w	r3, #512	@ 0x200
9002253a:	9101      	str	r1, [sp, #4]
9002253c:	19b9      	adds	r1, r7, r6
9002253e:	9305      	str	r3, [sp, #20]
90022540:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022542:	f8cd c008 	str.w	ip, [sp, #8]
90022546:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9002254a:	e9cd 9303 	strd	r9, r3, [sp, #12]
9002254e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022550:	1b1c      	subs	r4, r3, r4
90022552:	4673      	mov	r3, lr
90022554:	4544      	cmp	r4, r8
90022556:	bfd4      	ite	le
90022558:	ebc5 0504 	rsble	r5, r5, r4
9002255c:	ebc5 0508 	rsbgt	r5, r5, r8
90022560:	b2ad      	uxth	r5, r5
90022562:	9500      	str	r5, [sp, #0]
90022564:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
90022568:	e797      	b.n	9002249a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002256a:	2208      	movs	r2, #8
9002256c:	9b08      	ldr	r3, [sp, #32]
9002256e:	fb92 f3f3 	sdiv	r3, r2, r3
90022572:	1e5a      	subs	r2, r3, #1
90022574:	4442      	add	r2, r8
90022576:	fb92 f2f3 	sdiv	r2, r2, r3
9002257a:	fb12 f203 	smulbb	r2, r2, r3
9002257e:	b292      	uxth	r2, r2
90022580:	e64c      	b.n	9002221c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90022582:	980d      	ldr	r0, [sp, #52]	@ 0x34
90022584:	e68e      	b.n	900222a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
90022586:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90022588:	e722      	b.n	900223d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
9002258a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002258c:	b143      	cbz	r3, 900225a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
9002258e:	441e      	add	r6, r3
90022590:	b2b6      	uxth	r6, r6
90022592:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
90022596:	f006 0607 	and.w	r6, r6, #7
9002259a:	783a      	ldrb	r2, [r7, #0]
9002259c:	4132      	asrs	r2, r6
9002259e:	b2d2      	uxtb	r2, r2
900225a0:	990a      	ldr	r1, [sp, #40]	@ 0x28
900225a2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900225a4:	4419      	add	r1, r3
900225a6:	910a      	str	r1, [sp, #40]	@ 0x28
900225a8:	e6b1      	b.n	9002230e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
900225aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900225ac:	2b00      	cmp	r3, #0
900225ae:	d1b4      	bne.n	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900225b0:	4b04      	ldr	r3, [pc, #16]	@ (900225c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
900225b2:	6818      	ldr	r0, [r3, #0]
900225b4:	6803      	ldr	r3, [r0, #0]
900225b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900225b8:	4798      	blx	r3
900225ba:	e7ae      	b.n	9002251a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900225bc:	2b00      	cmp	r3, #0
900225be:	f47f af49 	bne.w	90022454 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
900225c2:	e625      	b.n	90022210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900225c4:	240218cc 	.word	0x240218cc

900225c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
900225c8:	b538      	push	{r3, r4, r5, lr}
900225ca:	4c15      	ldr	r4, [pc, #84]	@ (90022620 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
900225cc:	4605      	mov	r5, r0
900225ce:	7823      	ldrb	r3, [r4, #0]
900225d0:	f3bf 8f5b 	dmb	ish
900225d4:	07da      	lsls	r2, r3, #31
900225d6:	d40b      	bmi.n	900225f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900225d8:	4620      	mov	r0, r4
900225da:	f008 fc6b 	bl	9002aeb4 <__cxa_guard_acquire>
900225de:	b138      	cbz	r0, 900225f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900225e0:	4620      	mov	r0, r4
900225e2:	f008 fc73 	bl	9002aecc <__cxa_guard_release>
900225e6:	4a0f      	ldr	r2, [pc, #60]	@ (90022624 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900225e8:	490f      	ldr	r1, [pc, #60]	@ (90022628 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900225ea:	4810      	ldr	r0, [pc, #64]	@ (9002262c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900225ec:	f008 fc5b 	bl	9002aea6 <__aeabi_atexit>
900225f0:	4c0f      	ldr	r4, [pc, #60]	@ (90022630 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900225f2:	7823      	ldrb	r3, [r4, #0]
900225f4:	f3bf 8f5b 	dmb	ish
900225f8:	07db      	lsls	r3, r3, #31
900225fa:	d40b      	bmi.n	90022614 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900225fc:	4620      	mov	r0, r4
900225fe:	f008 fc59 	bl	9002aeb4 <__cxa_guard_acquire>
90022602:	b138      	cbz	r0, 90022614 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90022604:	4620      	mov	r0, r4
90022606:	f008 fc61 	bl	9002aecc <__cxa_guard_release>
9002260a:	4a06      	ldr	r2, [pc, #24]	@ (90022624 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9002260c:	4909      	ldr	r1, [pc, #36]	@ (90022634 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002260e:	480a      	ldr	r0, [pc, #40]	@ (90022638 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022610:	f008 fc49 	bl	9002aea6 <__aeabi_atexit>
90022614:	4b05      	ldr	r3, [pc, #20]	@ (9002262c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90022616:	616b      	str	r3, [r5, #20]
90022618:	4b07      	ldr	r3, [pc, #28]	@ (90022638 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002261a:	61ab      	str	r3, [r5, #24]
9002261c:	bd38      	pop	{r3, r4, r5, pc}
9002261e:	bf00      	nop
90022620:	240219b0 	.word	0x240219b0
90022624:	24000000 	.word	0x24000000
90022628:	9001e6b5 	.word	0x9001e6b5
9002262c:	240000d4 	.word	0x240000d4
90022630:	240219b4 	.word	0x240219b4
90022634:	9001e6b3 	.word	0x9001e6b3
90022638:	240000d8 	.word	0x240000d8

9002263c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9002263c:	b538      	push	{r3, r4, r5, lr}
9002263e:	4c15      	ldr	r4, [pc, #84]	@ (90022694 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90022640:	4605      	mov	r5, r0
90022642:	7823      	ldrb	r3, [r4, #0]
90022644:	f3bf 8f5b 	dmb	ish
90022648:	07da      	lsls	r2, r3, #31
9002264a:	d40b      	bmi.n	90022664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9002264c:	4620      	mov	r0, r4
9002264e:	f008 fc31 	bl	9002aeb4 <__cxa_guard_acquire>
90022652:	b138      	cbz	r0, 90022664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90022654:	4620      	mov	r0, r4
90022656:	f008 fc39 	bl	9002aecc <__cxa_guard_release>
9002265a:	4a0f      	ldr	r2, [pc, #60]	@ (90022698 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002265c:	490f      	ldr	r1, [pc, #60]	@ (9002269c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002265e:	4810      	ldr	r0, [pc, #64]	@ (900226a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90022660:	f008 fc21 	bl	9002aea6 <__aeabi_atexit>
90022664:	4c0f      	ldr	r4, [pc, #60]	@ (900226a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90022666:	7823      	ldrb	r3, [r4, #0]
90022668:	f3bf 8f5b 	dmb	ish
9002266c:	07db      	lsls	r3, r3, #31
9002266e:	d40b      	bmi.n	90022688 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022670:	4620      	mov	r0, r4
90022672:	f008 fc1f 	bl	9002aeb4 <__cxa_guard_acquire>
90022676:	b138      	cbz	r0, 90022688 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022678:	4620      	mov	r0, r4
9002267a:	f008 fc27 	bl	9002aecc <__cxa_guard_release>
9002267e:	4a06      	ldr	r2, [pc, #24]	@ (90022698 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90022680:	4909      	ldr	r1, [pc, #36]	@ (900226a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90022682:	480a      	ldr	r0, [pc, #40]	@ (900226ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90022684:	f008 fc0f 	bl	9002aea6 <__aeabi_atexit>
90022688:	4b05      	ldr	r3, [pc, #20]	@ (900226a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002268a:	60eb      	str	r3, [r5, #12]
9002268c:	4b07      	ldr	r3, [pc, #28]	@ (900226ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002268e:	612b      	str	r3, [r5, #16]
90022690:	bd38      	pop	{r3, r4, r5, pc}
90022692:	bf00      	nop
90022694:	24021988 	.word	0x24021988
90022698:	24000000 	.word	0x24000000
9002269c:	9001e6b9 	.word	0x9001e6b9
900226a0:	240000ac 	.word	0x240000ac
900226a4:	2402198c 	.word	0x2402198c
900226a8:	9001e6b7 	.word	0x9001e6b7
900226ac:	240000b0 	.word	0x240000b0

900226b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
900226b0:	b510      	push	{r4, lr}
900226b2:	4604      	mov	r4, r0
900226b4:	f7ff ff88 	bl	900225c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900226b8:	4620      	mov	r0, r4
900226ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900226be:	f7ff bfbd 	b.w	9002263c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900226c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900226c4:	b538      	push	{r3, r4, r5, lr}
900226c6:	4c15      	ldr	r4, [pc, #84]	@ (9002271c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900226c8:	4605      	mov	r5, r0
900226ca:	7823      	ldrb	r3, [r4, #0]
900226cc:	f3bf 8f5b 	dmb	ish
900226d0:	07da      	lsls	r2, r3, #31
900226d2:	d40b      	bmi.n	900226ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900226d4:	4620      	mov	r0, r4
900226d6:	f008 fbed 	bl	9002aeb4 <__cxa_guard_acquire>
900226da:	b138      	cbz	r0, 900226ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900226dc:	4620      	mov	r0, r4
900226de:	f008 fbf5 	bl	9002aecc <__cxa_guard_release>
900226e2:	4a0f      	ldr	r2, [pc, #60]	@ (90022720 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900226e4:	490f      	ldr	r1, [pc, #60]	@ (90022724 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900226e6:	4810      	ldr	r0, [pc, #64]	@ (90022728 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900226e8:	f008 fbdd 	bl	9002aea6 <__aeabi_atexit>
900226ec:	4c0f      	ldr	r4, [pc, #60]	@ (9002272c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900226ee:	7823      	ldrb	r3, [r4, #0]
900226f0:	f3bf 8f5b 	dmb	ish
900226f4:	07db      	lsls	r3, r3, #31
900226f6:	d40b      	bmi.n	90022710 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900226f8:	4620      	mov	r0, r4
900226fa:	f008 fbdb 	bl	9002aeb4 <__cxa_guard_acquire>
900226fe:	b138      	cbz	r0, 90022710 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90022700:	4620      	mov	r0, r4
90022702:	f008 fbe3 	bl	9002aecc <__cxa_guard_release>
90022706:	4a06      	ldr	r2, [pc, #24]	@ (90022720 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90022708:	4909      	ldr	r1, [pc, #36]	@ (90022730 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9002270a:	480a      	ldr	r0, [pc, #40]	@ (90022734 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9002270c:	f008 fbcb 	bl	9002aea6 <__aeabi_atexit>
90022710:	4b05      	ldr	r3, [pc, #20]	@ (90022728 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90022712:	626b      	str	r3, [r5, #36]	@ 0x24
90022714:	4b07      	ldr	r3, [pc, #28]	@ (90022734 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90022716:	62ab      	str	r3, [r5, #40]	@ 0x28
90022718:	bd38      	pop	{r3, r4, r5, pc}
9002271a:	bf00      	nop
9002271c:	240219b8 	.word	0x240219b8
90022720:	24000000 	.word	0x24000000
90022724:	9001e6ad 	.word	0x9001e6ad
90022728:	240000dc 	.word	0x240000dc
9002272c:	240219bc 	.word	0x240219bc
90022730:	9001e6ab 	.word	0x9001e6ab
90022734:	240000e0 	.word	0x240000e0

90022738 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90022738:	b538      	push	{r3, r4, r5, lr}
9002273a:	4c15      	ldr	r4, [pc, #84]	@ (90022790 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9002273c:	4605      	mov	r5, r0
9002273e:	7823      	ldrb	r3, [r4, #0]
90022740:	f3bf 8f5b 	dmb	ish
90022744:	07da      	lsls	r2, r3, #31
90022746:	d40b      	bmi.n	90022760 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022748:	4620      	mov	r0, r4
9002274a:	f008 fbb3 	bl	9002aeb4 <__cxa_guard_acquire>
9002274e:	b138      	cbz	r0, 90022760 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022750:	4620      	mov	r0, r4
90022752:	f008 fbbb 	bl	9002aecc <__cxa_guard_release>
90022756:	4a0f      	ldr	r2, [pc, #60]	@ (90022794 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90022758:	490f      	ldr	r1, [pc, #60]	@ (90022798 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9002275a:	4810      	ldr	r0, [pc, #64]	@ (9002279c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9002275c:	f008 fba3 	bl	9002aea6 <__aeabi_atexit>
90022760:	4c0f      	ldr	r4, [pc, #60]	@ (900227a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90022762:	7823      	ldrb	r3, [r4, #0]
90022764:	f3bf 8f5b 	dmb	ish
90022768:	07db      	lsls	r3, r3, #31
9002276a:	d40b      	bmi.n	90022784 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9002276c:	4620      	mov	r0, r4
9002276e:	f008 fba1 	bl	9002aeb4 <__cxa_guard_acquire>
90022772:	b138      	cbz	r0, 90022784 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90022774:	4620      	mov	r0, r4
90022776:	f008 fba9 	bl	9002aecc <__cxa_guard_release>
9002277a:	4a06      	ldr	r2, [pc, #24]	@ (90022794 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9002277c:	4909      	ldr	r1, [pc, #36]	@ (900227a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002277e:	480a      	ldr	r0, [pc, #40]	@ (900227a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90022780:	f008 fb91 	bl	9002aea6 <__aeabi_atexit>
90022784:	4b05      	ldr	r3, [pc, #20]	@ (9002279c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90022786:	61eb      	str	r3, [r5, #28]
90022788:	4b07      	ldr	r3, [pc, #28]	@ (900227a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002278a:	622b      	str	r3, [r5, #32]
9002278c:	bd38      	pop	{r3, r4, r5, pc}
9002278e:	bf00      	nop
90022790:	24021990 	.word	0x24021990
90022794:	24000000 	.word	0x24000000
90022798:	9001e6b1 	.word	0x9001e6b1
9002279c:	240000b4 	.word	0x240000b4
900227a0:	24021994 	.word	0x24021994
900227a4:	9001e6af 	.word	0x9001e6af
900227a8:	240000b8 	.word	0x240000b8

900227ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
900227ac:	b510      	push	{r4, lr}
900227ae:	4604      	mov	r4, r0
900227b0:	f7ff ff88 	bl	900226c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
900227b4:	4620      	mov	r0, r4
900227b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900227ba:	f7ff bfbd 	b.w	90022738 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900227c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900227c0:	b538      	push	{r3, r4, r5, lr}
900227c2:	4c15      	ldr	r4, [pc, #84]	@ (90022818 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900227c4:	4605      	mov	r5, r0
900227c6:	7823      	ldrb	r3, [r4, #0]
900227c8:	f3bf 8f5b 	dmb	ish
900227cc:	07da      	lsls	r2, r3, #31
900227ce:	d40b      	bmi.n	900227e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900227d0:	4620      	mov	r0, r4
900227d2:	f008 fb6f 	bl	9002aeb4 <__cxa_guard_acquire>
900227d6:	b138      	cbz	r0, 900227e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900227d8:	4620      	mov	r0, r4
900227da:	f008 fb77 	bl	9002aecc <__cxa_guard_release>
900227de:	4a0f      	ldr	r2, [pc, #60]	@ (9002281c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900227e0:	490f      	ldr	r1, [pc, #60]	@ (90022820 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900227e2:	4810      	ldr	r0, [pc, #64]	@ (90022824 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900227e4:	f008 fb5f 	bl	9002aea6 <__aeabi_atexit>
900227e8:	4c0f      	ldr	r4, [pc, #60]	@ (90022828 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900227ea:	7823      	ldrb	r3, [r4, #0]
900227ec:	f3bf 8f5b 	dmb	ish
900227f0:	07db      	lsls	r3, r3, #31
900227f2:	d40b      	bmi.n	9002280c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900227f4:	4620      	mov	r0, r4
900227f6:	f008 fb5d 	bl	9002aeb4 <__cxa_guard_acquire>
900227fa:	b138      	cbz	r0, 9002280c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900227fc:	4620      	mov	r0, r4
900227fe:	f008 fb65 	bl	9002aecc <__cxa_guard_release>
90022802:	4a06      	ldr	r2, [pc, #24]	@ (9002281c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90022804:	4909      	ldr	r1, [pc, #36]	@ (9002282c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90022806:	480a      	ldr	r0, [pc, #40]	@ (90022830 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90022808:	f008 fb4d 	bl	9002aea6 <__aeabi_atexit>
9002280c:	4b05      	ldr	r3, [pc, #20]	@ (90022824 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002280e:	636b      	str	r3, [r5, #52]	@ 0x34
90022810:	4b07      	ldr	r3, [pc, #28]	@ (90022830 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90022812:	63ab      	str	r3, [r5, #56]	@ 0x38
90022814:	bd38      	pop	{r3, r4, r5, pc}
90022816:	bf00      	nop
90022818:	240219c8 	.word	0x240219c8
9002281c:	24000000 	.word	0x24000000
90022820:	9001e6a5 	.word	0x9001e6a5
90022824:	240000ec 	.word	0x240000ec
90022828:	240219cc 	.word	0x240219cc
9002282c:	9001e6a3 	.word	0x9001e6a3
90022830:	240000f0 	.word	0x240000f0

90022834 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90022834:	b538      	push	{r3, r4, r5, lr}
90022836:	4c15      	ldr	r4, [pc, #84]	@ (9002288c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90022838:	4605      	mov	r5, r0
9002283a:	7823      	ldrb	r3, [r4, #0]
9002283c:	f3bf 8f5b 	dmb	ish
90022840:	07da      	lsls	r2, r3, #31
90022842:	d40b      	bmi.n	9002285c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90022844:	4620      	mov	r0, r4
90022846:	f008 fb35 	bl	9002aeb4 <__cxa_guard_acquire>
9002284a:	b138      	cbz	r0, 9002285c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9002284c:	4620      	mov	r0, r4
9002284e:	f008 fb3d 	bl	9002aecc <__cxa_guard_release>
90022852:	4a0f      	ldr	r2, [pc, #60]	@ (90022890 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90022854:	490f      	ldr	r1, [pc, #60]	@ (90022894 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90022856:	4810      	ldr	r0, [pc, #64]	@ (90022898 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90022858:	f008 fb25 	bl	9002aea6 <__aeabi_atexit>
9002285c:	4c0f      	ldr	r4, [pc, #60]	@ (9002289c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002285e:	7823      	ldrb	r3, [r4, #0]
90022860:	f3bf 8f5b 	dmb	ish
90022864:	07db      	lsls	r3, r3, #31
90022866:	d40b      	bmi.n	90022880 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022868:	4620      	mov	r0, r4
9002286a:	f008 fb23 	bl	9002aeb4 <__cxa_guard_acquire>
9002286e:	b138      	cbz	r0, 90022880 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022870:	4620      	mov	r0, r4
90022872:	f008 fb2b 	bl	9002aecc <__cxa_guard_release>
90022876:	4a06      	ldr	r2, [pc, #24]	@ (90022890 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90022878:	4909      	ldr	r1, [pc, #36]	@ (900228a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9002287a:	480a      	ldr	r0, [pc, #40]	@ (900228a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9002287c:	f008 fb13 	bl	9002aea6 <__aeabi_atexit>
90022880:	4b05      	ldr	r3, [pc, #20]	@ (90022898 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90022882:	62eb      	str	r3, [r5, #44]	@ 0x2c
90022884:	4b07      	ldr	r3, [pc, #28]	@ (900228a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90022886:	632b      	str	r3, [r5, #48]	@ 0x30
90022888:	bd38      	pop	{r3, r4, r5, pc}
9002288a:	bf00      	nop
9002288c:	24021998 	.word	0x24021998
90022890:	24000000 	.word	0x24000000
90022894:	9001e6a9 	.word	0x9001e6a9
90022898:	240000bc 	.word	0x240000bc
9002289c:	2402199c 	.word	0x2402199c
900228a0:	9001e6a7 	.word	0x9001e6a7
900228a4:	240000c0 	.word	0x240000c0

900228a8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
900228a8:	b510      	push	{r4, lr}
900228aa:	4604      	mov	r4, r0
900228ac:	f7ff ff88 	bl	900227c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
900228b0:	4620      	mov	r0, r4
900228b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900228b6:	f7ff bfbd 	b.w	90022834 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

900228bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
900228bc:	b538      	push	{r3, r4, r5, lr}
900228be:	4c15      	ldr	r4, [pc, #84]	@ (90022914 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
900228c0:	4605      	mov	r5, r0
900228c2:	7823      	ldrb	r3, [r4, #0]
900228c4:	f3bf 8f5b 	dmb	ish
900228c8:	07da      	lsls	r2, r3, #31
900228ca:	d40b      	bmi.n	900228e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900228cc:	4620      	mov	r0, r4
900228ce:	f008 faf1 	bl	9002aeb4 <__cxa_guard_acquire>
900228d2:	b138      	cbz	r0, 900228e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900228d4:	4620      	mov	r0, r4
900228d6:	f008 faf9 	bl	9002aecc <__cxa_guard_release>
900228da:	4a0f      	ldr	r2, [pc, #60]	@ (90022918 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900228dc:	490f      	ldr	r1, [pc, #60]	@ (9002291c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900228de:	4810      	ldr	r0, [pc, #64]	@ (90022920 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900228e0:	f008 fae1 	bl	9002aea6 <__aeabi_atexit>
900228e4:	4c0f      	ldr	r4, [pc, #60]	@ (90022924 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900228e6:	7823      	ldrb	r3, [r4, #0]
900228e8:	f3bf 8f5b 	dmb	ish
900228ec:	07db      	lsls	r3, r3, #31
900228ee:	d40b      	bmi.n	90022908 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900228f0:	4620      	mov	r0, r4
900228f2:	f008 fadf 	bl	9002aeb4 <__cxa_guard_acquire>
900228f6:	b138      	cbz	r0, 90022908 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900228f8:	4620      	mov	r0, r4
900228fa:	f008 fae7 	bl	9002aecc <__cxa_guard_release>
900228fe:	4a06      	ldr	r2, [pc, #24]	@ (90022918 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90022900:	4909      	ldr	r1, [pc, #36]	@ (90022928 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90022902:	480a      	ldr	r0, [pc, #40]	@ (9002292c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90022904:	f008 facf 	bl	9002aea6 <__aeabi_atexit>
90022908:	4b05      	ldr	r3, [pc, #20]	@ (90022920 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002290a:	656b      	str	r3, [r5, #84]	@ 0x54
9002290c:	4b07      	ldr	r3, [pc, #28]	@ (9002292c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002290e:	65ab      	str	r3, [r5, #88]	@ 0x58
90022910:	bd38      	pop	{r3, r4, r5, pc}
90022912:	bf00      	nop
90022914:	240219d0 	.word	0x240219d0
90022918:	24000000 	.word	0x24000000
9002291c:	9001e695 	.word	0x9001e695
90022920:	240000f4 	.word	0x240000f4
90022924:	240219d4 	.word	0x240219d4
90022928:	9001e693 	.word	0x9001e693
9002292c:	240000f8 	.word	0x240000f8

90022930 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90022930:	b538      	push	{r3, r4, r5, lr}
90022932:	4c15      	ldr	r4, [pc, #84]	@ (90022988 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90022934:	4605      	mov	r5, r0
90022936:	7823      	ldrb	r3, [r4, #0]
90022938:	f3bf 8f5b 	dmb	ish
9002293c:	07da      	lsls	r2, r3, #31
9002293e:	d40b      	bmi.n	90022958 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022940:	4620      	mov	r0, r4
90022942:	f008 fab7 	bl	9002aeb4 <__cxa_guard_acquire>
90022946:	b138      	cbz	r0, 90022958 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022948:	4620      	mov	r0, r4
9002294a:	f008 fabf 	bl	9002aecc <__cxa_guard_release>
9002294e:	4a0f      	ldr	r2, [pc, #60]	@ (9002298c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90022950:	490f      	ldr	r1, [pc, #60]	@ (90022990 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90022952:	4810      	ldr	r0, [pc, #64]	@ (90022994 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90022954:	f008 faa7 	bl	9002aea6 <__aeabi_atexit>
90022958:	4c0f      	ldr	r4, [pc, #60]	@ (90022998 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9002295a:	7823      	ldrb	r3, [r4, #0]
9002295c:	f3bf 8f5b 	dmb	ish
90022960:	07db      	lsls	r3, r3, #31
90022962:	d40b      	bmi.n	9002297c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90022964:	4620      	mov	r0, r4
90022966:	f008 faa5 	bl	9002aeb4 <__cxa_guard_acquire>
9002296a:	b138      	cbz	r0, 9002297c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9002296c:	4620      	mov	r0, r4
9002296e:	f008 faad 	bl	9002aecc <__cxa_guard_release>
90022972:	4a06      	ldr	r2, [pc, #24]	@ (9002298c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90022974:	4909      	ldr	r1, [pc, #36]	@ (9002299c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90022976:	480a      	ldr	r0, [pc, #40]	@ (900229a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90022978:	f008 fa95 	bl	9002aea6 <__aeabi_atexit>
9002297c:	4b05      	ldr	r3, [pc, #20]	@ (90022994 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002297e:	64eb      	str	r3, [r5, #76]	@ 0x4c
90022980:	4b07      	ldr	r3, [pc, #28]	@ (900229a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90022982:	652b      	str	r3, [r5, #80]	@ 0x50
90022984:	bd38      	pop	{r3, r4, r5, pc}
90022986:	bf00      	nop
90022988:	240219d8 	.word	0x240219d8
9002298c:	24000000 	.word	0x24000000
90022990:	9001e699 	.word	0x9001e699
90022994:	240000fc 	.word	0x240000fc
90022998:	240219dc 	.word	0x240219dc
9002299c:	9001e697 	.word	0x9001e697
900229a0:	24000100 	.word	0x24000100

900229a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
900229a4:	b538      	push	{r3, r4, r5, lr}
900229a6:	4c15      	ldr	r4, [pc, #84]	@ (900229fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
900229a8:	4605      	mov	r5, r0
900229aa:	7823      	ldrb	r3, [r4, #0]
900229ac:	f3bf 8f5b 	dmb	ish
900229b0:	07da      	lsls	r2, r3, #31
900229b2:	d40b      	bmi.n	900229cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900229b4:	4620      	mov	r0, r4
900229b6:	f008 fa7d 	bl	9002aeb4 <__cxa_guard_acquire>
900229ba:	b138      	cbz	r0, 900229cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900229bc:	4620      	mov	r0, r4
900229be:	f008 fa85 	bl	9002aecc <__cxa_guard_release>
900229c2:	4a0f      	ldr	r2, [pc, #60]	@ (90022a00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900229c4:	490f      	ldr	r1, [pc, #60]	@ (90022a04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900229c6:	4810      	ldr	r0, [pc, #64]	@ (90022a08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900229c8:	f008 fa6d 	bl	9002aea6 <__aeabi_atexit>
900229cc:	4c0f      	ldr	r4, [pc, #60]	@ (90022a0c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900229ce:	7823      	ldrb	r3, [r4, #0]
900229d0:	f3bf 8f5b 	dmb	ish
900229d4:	07db      	lsls	r3, r3, #31
900229d6:	d40b      	bmi.n	900229f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900229d8:	4620      	mov	r0, r4
900229da:	f008 fa6b 	bl	9002aeb4 <__cxa_guard_acquire>
900229de:	b138      	cbz	r0, 900229f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900229e0:	4620      	mov	r0, r4
900229e2:	f008 fa73 	bl	9002aecc <__cxa_guard_release>
900229e6:	4a06      	ldr	r2, [pc, #24]	@ (90022a00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900229e8:	4909      	ldr	r1, [pc, #36]	@ (90022a10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900229ea:	480a      	ldr	r0, [pc, #40]	@ (90022a14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900229ec:	f008 fa5b 	bl	9002aea6 <__aeabi_atexit>
900229f0:	4b05      	ldr	r3, [pc, #20]	@ (90022a08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900229f2:	646b      	str	r3, [r5, #68]	@ 0x44
900229f4:	4b07      	ldr	r3, [pc, #28]	@ (90022a14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900229f6:	64ab      	str	r3, [r5, #72]	@ 0x48
900229f8:	bd38      	pop	{r3, r4, r5, pc}
900229fa:	bf00      	nop
900229fc:	240219a0 	.word	0x240219a0
90022a00:	24000000 	.word	0x24000000
90022a04:	9001e69d 	.word	0x9001e69d
90022a08:	240000c4 	.word	0x240000c4
90022a0c:	240219a4 	.word	0x240219a4
90022a10:	9001e69b 	.word	0x9001e69b
90022a14:	240000c8 	.word	0x240000c8

90022a18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90022a18:	b538      	push	{r3, r4, r5, lr}
90022a1a:	4c15      	ldr	r4, [pc, #84]	@ (90022a70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90022a1c:	4605      	mov	r5, r0
90022a1e:	7823      	ldrb	r3, [r4, #0]
90022a20:	f3bf 8f5b 	dmb	ish
90022a24:	07da      	lsls	r2, r3, #31
90022a26:	d40b      	bmi.n	90022a40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022a28:	4620      	mov	r0, r4
90022a2a:	f008 fa43 	bl	9002aeb4 <__cxa_guard_acquire>
90022a2e:	b138      	cbz	r0, 90022a40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022a30:	4620      	mov	r0, r4
90022a32:	f008 fa4b 	bl	9002aecc <__cxa_guard_release>
90022a36:	4a0f      	ldr	r2, [pc, #60]	@ (90022a74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022a38:	490f      	ldr	r1, [pc, #60]	@ (90022a78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90022a3a:	4810      	ldr	r0, [pc, #64]	@ (90022a7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90022a3c:	f008 fa33 	bl	9002aea6 <__aeabi_atexit>
90022a40:	4c0f      	ldr	r4, [pc, #60]	@ (90022a80 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90022a42:	7823      	ldrb	r3, [r4, #0]
90022a44:	f3bf 8f5b 	dmb	ish
90022a48:	07db      	lsls	r3, r3, #31
90022a4a:	d40b      	bmi.n	90022a64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90022a4c:	4620      	mov	r0, r4
90022a4e:	f008 fa31 	bl	9002aeb4 <__cxa_guard_acquire>
90022a52:	b138      	cbz	r0, 90022a64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90022a54:	4620      	mov	r0, r4
90022a56:	f008 fa39 	bl	9002aecc <__cxa_guard_release>
90022a5a:	4a06      	ldr	r2, [pc, #24]	@ (90022a74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022a5c:	4909      	ldr	r1, [pc, #36]	@ (90022a84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90022a5e:	480a      	ldr	r0, [pc, #40]	@ (90022a88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022a60:	f008 fa21 	bl	9002aea6 <__aeabi_atexit>
90022a64:	4b05      	ldr	r3, [pc, #20]	@ (90022a7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90022a66:	63eb      	str	r3, [r5, #60]	@ 0x3c
90022a68:	4b07      	ldr	r3, [pc, #28]	@ (90022a88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022a6a:	642b      	str	r3, [r5, #64]	@ 0x40
90022a6c:	bd38      	pop	{r3, r4, r5, pc}
90022a6e:	bf00      	nop
90022a70:	240219c0 	.word	0x240219c0
90022a74:	24000000 	.word	0x24000000
90022a78:	9001e6a1 	.word	0x9001e6a1
90022a7c:	240000e4 	.word	0x240000e4
90022a80:	240219c4 	.word	0x240219c4
90022a84:	9001e69f 	.word	0x9001e69f
90022a88:	240000e8 	.word	0x240000e8

90022a8c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90022a8c:	b510      	push	{r4, lr}
90022a8e:	4604      	mov	r4, r0
90022a90:	f7ff ff14 	bl	900228bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90022a94:	4620      	mov	r0, r4
90022a96:	f7ff ff85 	bl	900229a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90022a9a:	4620      	mov	r0, r4
90022a9c:	f7ff ff48 	bl	90022930 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90022aa0:	4620      	mov	r0, r4
90022aa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022aa6:	f7ff bfb7 	b.w	90022a18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90022aac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90022aac:	b538      	push	{r3, r4, r5, lr}
90022aae:	4c15      	ldr	r4, [pc, #84]	@ (90022b04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90022ab0:	4605      	mov	r5, r0
90022ab2:	7823      	ldrb	r3, [r4, #0]
90022ab4:	f3bf 8f5b 	dmb	ish
90022ab8:	07da      	lsls	r2, r3, #31
90022aba:	d40b      	bmi.n	90022ad4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90022abc:	4620      	mov	r0, r4
90022abe:	f008 f9f9 	bl	9002aeb4 <__cxa_guard_acquire>
90022ac2:	b138      	cbz	r0, 90022ad4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90022ac4:	4620      	mov	r0, r4
90022ac6:	f008 fa01 	bl	9002aecc <__cxa_guard_release>
90022aca:	4a0f      	ldr	r2, [pc, #60]	@ (90022b08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90022acc:	490f      	ldr	r1, [pc, #60]	@ (90022b0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90022ace:	4810      	ldr	r0, [pc, #64]	@ (90022b10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90022ad0:	f008 f9e9 	bl	9002aea6 <__aeabi_atexit>
90022ad4:	4c0f      	ldr	r4, [pc, #60]	@ (90022b14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90022ad6:	7823      	ldrb	r3, [r4, #0]
90022ad8:	f3bf 8f5b 	dmb	ish
90022adc:	07db      	lsls	r3, r3, #31
90022ade:	d40b      	bmi.n	90022af8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90022ae0:	4620      	mov	r0, r4
90022ae2:	f008 f9e7 	bl	9002aeb4 <__cxa_guard_acquire>
90022ae6:	b138      	cbz	r0, 90022af8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90022ae8:	4620      	mov	r0, r4
90022aea:	f008 f9ef 	bl	9002aecc <__cxa_guard_release>
90022aee:	4a06      	ldr	r2, [pc, #24]	@ (90022b08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90022af0:	4909      	ldr	r1, [pc, #36]	@ (90022b18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90022af2:	480a      	ldr	r0, [pc, #40]	@ (90022b1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90022af4:	f008 f9d7 	bl	9002aea6 <__aeabi_atexit>
90022af8:	4b05      	ldr	r3, [pc, #20]	@ (90022b10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90022afa:	666b      	str	r3, [r5, #100]	@ 0x64
90022afc:	4b07      	ldr	r3, [pc, #28]	@ (90022b1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90022afe:	66ab      	str	r3, [r5, #104]	@ 0x68
90022b00:	bd38      	pop	{r3, r4, r5, pc}
90022b02:	bf00      	nop
90022b04:	240219a8 	.word	0x240219a8
90022b08:	24000000 	.word	0x24000000
90022b0c:	9001e68d 	.word	0x9001e68d
90022b10:	240000cc 	.word	0x240000cc
90022b14:	240219ac 	.word	0x240219ac
90022b18:	9001e68b 	.word	0x9001e68b
90022b1c:	240000d0 	.word	0x240000d0

90022b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90022b20:	b538      	push	{r3, r4, r5, lr}
90022b22:	4c15      	ldr	r4, [pc, #84]	@ (90022b78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90022b24:	4605      	mov	r5, r0
90022b26:	7823      	ldrb	r3, [r4, #0]
90022b28:	f3bf 8f5b 	dmb	ish
90022b2c:	07da      	lsls	r2, r3, #31
90022b2e:	d40b      	bmi.n	90022b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90022b30:	4620      	mov	r0, r4
90022b32:	f008 f9bf 	bl	9002aeb4 <__cxa_guard_acquire>
90022b36:	b138      	cbz	r0, 90022b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90022b38:	4620      	mov	r0, r4
90022b3a:	f008 f9c7 	bl	9002aecc <__cxa_guard_release>
90022b3e:	4a0f      	ldr	r2, [pc, #60]	@ (90022b7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90022b40:	490f      	ldr	r1, [pc, #60]	@ (90022b80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90022b42:	4810      	ldr	r0, [pc, #64]	@ (90022b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90022b44:	f008 f9af 	bl	9002aea6 <__aeabi_atexit>
90022b48:	4c0f      	ldr	r4, [pc, #60]	@ (90022b88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90022b4a:	7823      	ldrb	r3, [r4, #0]
90022b4c:	f3bf 8f5b 	dmb	ish
90022b50:	07db      	lsls	r3, r3, #31
90022b52:	d40b      	bmi.n	90022b6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90022b54:	4620      	mov	r0, r4
90022b56:	f008 f9ad 	bl	9002aeb4 <__cxa_guard_acquire>
90022b5a:	b138      	cbz	r0, 90022b6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90022b5c:	4620      	mov	r0, r4
90022b5e:	f008 f9b5 	bl	9002aecc <__cxa_guard_release>
90022b62:	4a06      	ldr	r2, [pc, #24]	@ (90022b7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90022b64:	4909      	ldr	r1, [pc, #36]	@ (90022b8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90022b66:	480a      	ldr	r0, [pc, #40]	@ (90022b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90022b68:	f008 f99d 	bl	9002aea6 <__aeabi_atexit>
90022b6c:	4b05      	ldr	r3, [pc, #20]	@ (90022b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90022b6e:	65eb      	str	r3, [r5, #92]	@ 0x5c
90022b70:	4b07      	ldr	r3, [pc, #28]	@ (90022b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90022b72:	662b      	str	r3, [r5, #96]	@ 0x60
90022b74:	bd38      	pop	{r3, r4, r5, pc}
90022b76:	bf00      	nop
90022b78:	24021980 	.word	0x24021980
90022b7c:	24000000 	.word	0x24000000
90022b80:	9001e691 	.word	0x9001e691
90022b84:	240000a4 	.word	0x240000a4
90022b88:	24021984 	.word	0x24021984
90022b8c:	9001e68f 	.word	0x9001e68f
90022b90:	240000a8 	.word	0x240000a8

90022b94 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90022b94:	b510      	push	{r4, lr}
90022b96:	4604      	mov	r4, r0
90022b98:	f7ff ff88 	bl	90022aac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90022b9c:	4620      	mov	r0, r4
90022b9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022ba2:	f7ff bfbd 	b.w	90022b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90022ba8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90022ba8:	b538      	push	{r3, r4, r5, lr}
90022baa:	4c15      	ldr	r4, [pc, #84]	@ (90022c00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90022bac:	4605      	mov	r5, r0
90022bae:	7823      	ldrb	r3, [r4, #0]
90022bb0:	f3bf 8f5b 	dmb	ish
90022bb4:	07da      	lsls	r2, r3, #31
90022bb6:	d40b      	bmi.n	90022bd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90022bb8:	4620      	mov	r0, r4
90022bba:	f008 f97b 	bl	9002aeb4 <__cxa_guard_acquire>
90022bbe:	b138      	cbz	r0, 90022bd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90022bc0:	4620      	mov	r0, r4
90022bc2:	f008 f983 	bl	9002aecc <__cxa_guard_release>
90022bc6:	4a0f      	ldr	r2, [pc, #60]	@ (90022c04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90022bc8:	490f      	ldr	r1, [pc, #60]	@ (90022c08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90022bca:	4810      	ldr	r0, [pc, #64]	@ (90022c0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90022bcc:	f008 f96b 	bl	9002aea6 <__aeabi_atexit>
90022bd0:	4c0f      	ldr	r4, [pc, #60]	@ (90022c10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90022bd2:	7823      	ldrb	r3, [r4, #0]
90022bd4:	f3bf 8f5b 	dmb	ish
90022bd8:	07db      	lsls	r3, r3, #31
90022bda:	d40b      	bmi.n	90022bf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90022bdc:	4620      	mov	r0, r4
90022bde:	f008 f969 	bl	9002aeb4 <__cxa_guard_acquire>
90022be2:	b138      	cbz	r0, 90022bf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90022be4:	4620      	mov	r0, r4
90022be6:	f008 f971 	bl	9002aecc <__cxa_guard_release>
90022bea:	4a06      	ldr	r2, [pc, #24]	@ (90022c04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90022bec:	4909      	ldr	r1, [pc, #36]	@ (90022c14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90022bee:	480a      	ldr	r0, [pc, #40]	@ (90022c18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90022bf0:	f008 f959 	bl	9002aea6 <__aeabi_atexit>
90022bf4:	4b05      	ldr	r3, [pc, #20]	@ (90022c0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90022bf6:	676b      	str	r3, [r5, #116]	@ 0x74
90022bf8:	4b07      	ldr	r3, [pc, #28]	@ (90022c18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90022bfa:	67ab      	str	r3, [r5, #120]	@ 0x78
90022bfc:	bd38      	pop	{r3, r4, r5, pc}
90022bfe:	bf00      	nop
90022c00:	24021978 	.word	0x24021978
90022c04:	24000000 	.word	0x24000000
90022c08:	9001e685 	.word	0x9001e685
90022c0c:	2400009c 	.word	0x2400009c
90022c10:	2402197c 	.word	0x2402197c
90022c14:	9001e683 	.word	0x9001e683
90022c18:	240000a0 	.word	0x240000a0

90022c1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90022c1c:	b538      	push	{r3, r4, r5, lr}
90022c1e:	4c15      	ldr	r4, [pc, #84]	@ (90022c74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90022c20:	4605      	mov	r5, r0
90022c22:	7823      	ldrb	r3, [r4, #0]
90022c24:	f3bf 8f5b 	dmb	ish
90022c28:	07da      	lsls	r2, r3, #31
90022c2a:	d40b      	bmi.n	90022c44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90022c2c:	4620      	mov	r0, r4
90022c2e:	f008 f941 	bl	9002aeb4 <__cxa_guard_acquire>
90022c32:	b138      	cbz	r0, 90022c44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90022c34:	4620      	mov	r0, r4
90022c36:	f008 f949 	bl	9002aecc <__cxa_guard_release>
90022c3a:	4a0f      	ldr	r2, [pc, #60]	@ (90022c78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90022c3c:	490f      	ldr	r1, [pc, #60]	@ (90022c7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90022c3e:	4810      	ldr	r0, [pc, #64]	@ (90022c80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90022c40:	f008 f931 	bl	9002aea6 <__aeabi_atexit>
90022c44:	4c0f      	ldr	r4, [pc, #60]	@ (90022c84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90022c46:	7823      	ldrb	r3, [r4, #0]
90022c48:	f3bf 8f5b 	dmb	ish
90022c4c:	07db      	lsls	r3, r3, #31
90022c4e:	d40b      	bmi.n	90022c68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90022c50:	4620      	mov	r0, r4
90022c52:	f008 f92f 	bl	9002aeb4 <__cxa_guard_acquire>
90022c56:	b138      	cbz	r0, 90022c68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90022c58:	4620      	mov	r0, r4
90022c5a:	f008 f937 	bl	9002aecc <__cxa_guard_release>
90022c5e:	4a06      	ldr	r2, [pc, #24]	@ (90022c78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90022c60:	4909      	ldr	r1, [pc, #36]	@ (90022c88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90022c62:	480a      	ldr	r0, [pc, #40]	@ (90022c8c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90022c64:	f008 f91f 	bl	9002aea6 <__aeabi_atexit>
90022c68:	4b05      	ldr	r3, [pc, #20]	@ (90022c80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90022c6a:	66eb      	str	r3, [r5, #108]	@ 0x6c
90022c6c:	4b07      	ldr	r3, [pc, #28]	@ (90022c8c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90022c6e:	672b      	str	r3, [r5, #112]	@ 0x70
90022c70:	bd38      	pop	{r3, r4, r5, pc}
90022c72:	bf00      	nop
90022c74:	24021970 	.word	0x24021970
90022c78:	24000000 	.word	0x24000000
90022c7c:	9001e689 	.word	0x9001e689
90022c80:	24000094 	.word	0x24000094
90022c84:	24021974 	.word	0x24021974
90022c88:	9001e687 	.word	0x9001e687
90022c8c:	24000098 	.word	0x24000098

90022c90 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90022c90:	b510      	push	{r4, lr}
90022c92:	4604      	mov	r4, r0
90022c94:	f7ff ff88 	bl	90022ba8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90022c98:	4620      	mov	r0, r4
90022c9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022c9e:	f7ff bfbd 	b.w	90022c1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90022ca2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90022ca2:	b510      	push	{r4, lr}
90022ca4:	4604      	mov	r4, r0
90022ca6:	f7ff fff3 	bl	90022c90 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90022caa:	4620      	mov	r0, r4
90022cac:	f7ff ff72 	bl	90022b94 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90022cb0:	4620      	mov	r0, r4
90022cb2:	f7ff fdf9 	bl	900228a8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90022cb6:	4620      	mov	r0, r4
90022cb8:	f7ff fcfa 	bl	900226b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90022cbc:	4620      	mov	r0, r4
90022cbe:	f7ff fd75 	bl	900227ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90022cc2:	4620      	mov	r0, r4
90022cc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022cc8:	f7ff bee0 	b.w	90022a8c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90022ccc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90022ccc:	b538      	push	{r3, r4, r5, lr}
90022cce:	4c0b      	ldr	r4, [pc, #44]	@ (90022cfc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90022cd0:	4605      	mov	r5, r0
90022cd2:	7823      	ldrb	r3, [r4, #0]
90022cd4:	f3bf 8f5b 	dmb	ish
90022cd8:	07db      	lsls	r3, r3, #31
90022cda:	d40b      	bmi.n	90022cf4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90022cdc:	4620      	mov	r0, r4
90022cde:	f008 f8e9 	bl	9002aeb4 <__cxa_guard_acquire>
90022ce2:	b138      	cbz	r0, 90022cf4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90022ce4:	4620      	mov	r0, r4
90022ce6:	f008 f8f1 	bl	9002aecc <__cxa_guard_release>
90022cea:	4a05      	ldr	r2, [pc, #20]	@ (90022d00 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90022cec:	4905      	ldr	r1, [pc, #20]	@ (90022d04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90022cee:	4806      	ldr	r0, [pc, #24]	@ (90022d08 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90022cf0:	f008 f8d9 	bl	9002aea6 <__aeabi_atexit>
90022cf4:	4b04      	ldr	r3, [pc, #16]	@ (90022d08 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90022cf6:	67eb      	str	r3, [r5, #124]	@ 0x7c
90022cf8:	bd38      	pop	{r3, r4, r5, pc}
90022cfa:	bf00      	nop
90022cfc:	24021964 	.word	0x24021964
90022d00:	24000000 	.word	0x24000000
90022d04:	9001e681 	.word	0x9001e681
90022d08:	2400008c 	.word	0x2400008c

90022d0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90022d0c:	b538      	push	{r3, r4, r5, lr}
90022d0e:	4c0b      	ldr	r4, [pc, #44]	@ (90022d3c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90022d10:	4605      	mov	r5, r0
90022d12:	7823      	ldrb	r3, [r4, #0]
90022d14:	f3bf 8f5b 	dmb	ish
90022d18:	07db      	lsls	r3, r3, #31
90022d1a:	d40b      	bmi.n	90022d34 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90022d1c:	4620      	mov	r0, r4
90022d1e:	f008 f8c9 	bl	9002aeb4 <__cxa_guard_acquire>
90022d22:	b138      	cbz	r0, 90022d34 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90022d24:	4620      	mov	r0, r4
90022d26:	f008 f8d1 	bl	9002aecc <__cxa_guard_release>
90022d2a:	4a05      	ldr	r2, [pc, #20]	@ (90022d40 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90022d2c:	4905      	ldr	r1, [pc, #20]	@ (90022d44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90022d2e:	4806      	ldr	r0, [pc, #24]	@ (90022d48 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90022d30:	f008 f8b9 	bl	9002aea6 <__aeabi_atexit>
90022d34:	4b04      	ldr	r3, [pc, #16]	@ (90022d48 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90022d36:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90022d3a:	bd38      	pop	{r3, r4, r5, pc}
90022d3c:	24021968 	.word	0x24021968
90022d40:	24000000 	.word	0x24000000
90022d44:	9001e67f 	.word	0x9001e67f
90022d48:	24000090 	.word	0x24000090

90022d4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90022d4c:	b570      	push	{r4, r5, r6, lr}
90022d4e:	4d0d      	ldr	r5, [pc, #52]	@ (90022d84 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90022d50:	4606      	mov	r6, r0
90022d52:	4c0d      	ldr	r4, [pc, #52]	@ (90022d88 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90022d54:	782b      	ldrb	r3, [r5, #0]
90022d56:	f3bf 8f5b 	dmb	ish
90022d5a:	f013 0f01 	tst.w	r3, #1
90022d5e:	d10d      	bne.n	90022d7c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90022d60:	4628      	mov	r0, r5
90022d62:	f008 f8a7 	bl	9002aeb4 <__cxa_guard_acquire>
90022d66:	b148      	cbz	r0, 90022d7c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90022d68:	4b08      	ldr	r3, [pc, #32]	@ (90022d8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90022d6a:	4628      	mov	r0, r5
90022d6c:	6023      	str	r3, [r4, #0]
90022d6e:	f008 f8ad 	bl	9002aecc <__cxa_guard_release>
90022d72:	4a07      	ldr	r2, [pc, #28]	@ (90022d90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90022d74:	4620      	mov	r0, r4
90022d76:	4907      	ldr	r1, [pc, #28]	@ (90022d94 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90022d78:	f008 f895 	bl	9002aea6 <__aeabi_atexit>
90022d7c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90022d80:	bd70      	pop	{r4, r5, r6, pc}
90022d82:	bf00      	nop
90022d84:	2402196c 	.word	0x2402196c
90022d88:	24021ae4 	.word	0x24021ae4
90022d8c:	9002f9e4 	.word	0x9002f9e4
90022d90:	24000000 	.word	0x24000000
90022d94:	9001e67d 	.word	0x9001e67d

90022d98 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90022d98:	b510      	push	{r4, lr}
90022d9a:	4604      	mov	r4, r0
90022d9c:	f7ff ff96 	bl	90022ccc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90022da0:	4620      	mov	r0, r4
90022da2:	f7ff ffb3 	bl	90022d0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90022da6:	4620      	mov	r0, r4
90022da8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022dac:	f7ff bfce 	b.w	90022d4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90022db0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90022db0:	b570      	push	{r4, r5, r6, lr}
90022db2:	4d0d      	ldr	r5, [pc, #52]	@ (90022de8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90022db4:	4606      	mov	r6, r0
90022db6:	4c0d      	ldr	r4, [pc, #52]	@ (90022dec <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90022db8:	782b      	ldrb	r3, [r5, #0]
90022dba:	f3bf 8f5b 	dmb	ish
90022dbe:	f013 0f01 	tst.w	r3, #1
90022dc2:	d10d      	bne.n	90022de0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90022dc4:	4628      	mov	r0, r5
90022dc6:	f008 f875 	bl	9002aeb4 <__cxa_guard_acquire>
90022dca:	b148      	cbz	r0, 90022de0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90022dcc:	4b08      	ldr	r3, [pc, #32]	@ (90022df0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90022dce:	4628      	mov	r0, r5
90022dd0:	6023      	str	r3, [r4, #0]
90022dd2:	f008 f87b 	bl	9002aecc <__cxa_guard_release>
90022dd6:	4a07      	ldr	r2, [pc, #28]	@ (90022df4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90022dd8:	4620      	mov	r0, r4
90022dda:	4907      	ldr	r1, [pc, #28]	@ (90022df8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90022ddc:	f008 f863 	bl	9002aea6 <__aeabi_atexit>
90022de0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90022de4:	bd70      	pop	{r4, r5, r6, pc}
90022de6:	bf00      	nop
90022de8:	24021960 	.word	0x24021960
90022dec:	240219e0 	.word	0x240219e0
90022df0:	9002fa00 	.word	0x9002fa00
90022df4:	24000000 	.word	0x24000000
90022df8:	9001e67b 	.word	0x9001e67b

90022dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90022dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022e00:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90022e04:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90022e08:	2d00      	cmp	r5, #0
90022e0a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90022e0e:	fb05 4c0e 	mla	ip, r5, lr, r4
90022e12:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90022e16:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90022e1a:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90022e1e:	eb02 0a0c 	add.w	sl, r2, ip
90022e22:	8808      	ldrh	r0, [r1, #0]
90022e24:	f2c0 80b0 	blt.w	90022f88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90022e28:	45ab      	cmp	fp, r5
90022e2a:	f340 80ad 	ble.w	90022f88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90022e2e:	2c00      	cmp	r4, #0
90022e30:	f2c0 80a8 	blt.w	90022f84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90022e34:	45a6      	cmp	lr, r4
90022e36:	f340 80a5 	ble.w	90022f84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90022e3a:	f812 200c 	ldrb.w	r2, [r2, ip]
90022e3e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90022e42:	1c62      	adds	r2, r4, #1
90022e44:	f100 80a3 	bmi.w	90022f8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90022e48:	4596      	cmp	lr, r2
90022e4a:	f340 80a0 	ble.w	90022f8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90022e4e:	f1b9 0f00 	cmp.w	r9, #0
90022e52:	f000 809c 	beq.w	90022f8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90022e56:	f89a 2001 	ldrb.w	r2, [sl, #1]
90022e5a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022e5e:	3501      	adds	r5, #1
90022e60:	f100 8099 	bmi.w	90022f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022e64:	45ab      	cmp	fp, r5
90022e66:	f340 8096 	ble.w	90022f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022e6a:	2f00      	cmp	r7, #0
90022e6c:	f000 8093 	beq.w	90022f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022e70:	2c00      	cmp	r4, #0
90022e72:	f2c0 808e 	blt.w	90022f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022e76:	45a6      	cmp	lr, r4
90022e78:	f340 808b 	ble.w	90022f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022e7c:	f81a 200e 	ldrb.w	r2, [sl, lr]
90022e80:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90022e84:	3401      	adds	r4, #1
90022e86:	f100 8089 	bmi.w	90022f9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022e8a:	45a6      	cmp	lr, r4
90022e8c:	f340 8086 	ble.w	90022f9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022e90:	f1b9 0f00 	cmp.w	r9, #0
90022e94:	f000 8082 	beq.w	90022f9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022e98:	44d6      	add	lr, sl
90022e9a:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022e9e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90022ea2:	ea4f 4408 	mov.w	r4, r8, lsl #16
90022ea6:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90022eaa:	fb19 fe07 	smulbb	lr, r9, r7
90022eae:	f1c7 0210 	rsb	r2, r7, #16
90022eb2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022eb6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90022eba:	eba2 0209 	sub.w	r2, r2, r9
90022ebe:	ea44 0808 	orr.w	r8, r4, r8
90022ec2:	ea4f 440c 	mov.w	r4, ip, lsl #16
90022ec6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022eca:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022ece:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022ed2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90022ed6:	ea44 0c0c 	orr.w	ip, r4, ip
90022eda:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90022ede:	fb04 f40c 	mul.w	r4, r4, ip
90022ee2:	fb02 4808 	mla	r8, r2, r8, r4
90022ee6:	041a      	lsls	r2, r3, #16
90022ee8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022eec:	b2b4      	uxth	r4, r6
90022eee:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022ef2:	43f6      	mvns	r6, r6
90022ef4:	4313      	orrs	r3, r2
90022ef6:	042a      	lsls	r2, r5, #16
90022ef8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022efc:	b2f6      	uxtb	r6, r6
90022efe:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022f02:	fb0e 8303 	mla	r3, lr, r3, r8
90022f06:	432a      	orrs	r2, r5
90022f08:	fb07 3202 	mla	r2, r7, r2, r3
90022f0c:	10c7      	asrs	r7, r0, #3
90022f0e:	0d53      	lsrs	r3, r2, #21
90022f10:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022f14:	0952      	lsrs	r2, r2, #5
90022f16:	fb17 f706 	smulbb	r7, r7, r6
90022f1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022f1e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022f22:	431a      	orrs	r2, r3
90022f24:	b293      	uxth	r3, r2
90022f26:	1202      	asrs	r2, r0, #8
90022f28:	121d      	asrs	r5, r3, #8
90022f2a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90022f2e:	00c0      	lsls	r0, r0, #3
90022f30:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022f34:	fb12 f206 	smulbb	r2, r2, r6
90022f38:	b2c0      	uxtb	r0, r0
90022f3a:	fb05 2504 	mla	r5, r5, r4, r2
90022f3e:	10da      	asrs	r2, r3, #3
90022f40:	fb10 f006 	smulbb	r0, r0, r6
90022f44:	00db      	lsls	r3, r3, #3
90022f46:	b2ad      	uxth	r5, r5
90022f48:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022f4c:	b2db      	uxtb	r3, r3
90022f4e:	fb02 7204 	mla	r2, r2, r4, r7
90022f52:	fb03 0004 	mla	r0, r3, r4, r0
90022f56:	1c6b      	adds	r3, r5, #1
90022f58:	b292      	uxth	r2, r2
90022f5a:	b280      	uxth	r0, r0
90022f5c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022f60:	1c43      	adds	r3, r0, #1
90022f62:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022f66:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022f6a:	1c50      	adds	r0, r2, #1
90022f6c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022f70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022f74:	0952      	lsrs	r2, r2, #5
90022f76:	432b      	orrs	r3, r5
90022f78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022f7c:	4313      	orrs	r3, r2
90022f7e:	800b      	strh	r3, [r1, #0]
90022f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022f84:	4680      	mov	r8, r0
90022f86:	e75c      	b.n	90022e42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90022f88:	4684      	mov	ip, r0
90022f8a:	4680      	mov	r8, r0
90022f8c:	e767      	b.n	90022e5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022f8e:	4684      	mov	ip, r0
90022f90:	e765      	b.n	90022e5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022f92:	4605      	mov	r5, r0
90022f94:	e776      	b.n	90022e84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90022f96:	4603      	mov	r3, r0
90022f98:	4605      	mov	r5, r0
90022f9a:	e782      	b.n	90022ea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90022f9c:	4603      	mov	r3, r0
90022f9e:	e780      	b.n	90022ea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90022fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022fa4:	b099      	sub	sp, #100	@ 0x64
90022fa6:	9215      	str	r2, [sp, #84]	@ 0x54
90022fa8:	9309      	str	r3, [sp, #36]	@ 0x24
90022faa:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90022fac:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90022fb0:	9016      	str	r0, [sp, #88]	@ 0x58
90022fb2:	930d      	str	r3, [sp, #52]	@ 0x34
90022fb4:	6850      	ldr	r0, [r2, #4]
90022fb6:	910c      	str	r1, [sp, #48]	@ 0x30
90022fb8:	6812      	ldr	r2, [r2, #0]
90022fba:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90022fbe:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90022fc2:	fb00 1303 	mla	r3, r0, r3, r1
90022fc6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90022fca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022fcc:	681b      	ldr	r3, [r3, #0]
90022fce:	930b      	str	r3, [sp, #44]	@ 0x2c
90022fd0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022fd2:	685e      	ldr	r6, [r3, #4]
90022fd4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022fd6:	3604      	adds	r6, #4
90022fd8:	43db      	mvns	r3, r3
90022fda:	b2db      	uxtb	r3, r3
90022fdc:	930a      	str	r3, [sp, #40]	@ 0x28
90022fde:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022fe0:	2b00      	cmp	r3, #0
90022fe2:	dc03      	bgt.n	90022fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90022fe4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90022fe6:	2b00      	cmp	r3, #0
90022fe8:	f340 8225 	ble.w	90023436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90022fec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022fee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022ff2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022ff6:	1e48      	subs	r0, r1, #1
90022ff8:	1e57      	subs	r7, r2, #1
90022ffa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022ffc:	2b00      	cmp	r3, #0
90022ffe:	f340 80e3 	ble.w	900231c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90023002:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90023006:	ea4f 4325 	mov.w	r3, r5, asr #16
9002300a:	d406      	bmi.n	9002301a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002300c:	4584      	cmp	ip, r0
9002300e:	da04      	bge.n	9002301a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023010:	2b00      	cmp	r3, #0
90023012:	db02      	blt.n	9002301a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023014:	42bb      	cmp	r3, r7
90023016:	f2c0 80d8 	blt.w	900231ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002301a:	f11c 0c01 	adds.w	ip, ip, #1
9002301e:	f100 80c9 	bmi.w	900231b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023022:	4561      	cmp	r1, ip
90023024:	f2c0 80c6 	blt.w	900231b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023028:	3301      	adds	r3, #1
9002302a:	f100 80c3 	bmi.w	900231b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9002302e:	429a      	cmp	r2, r3
90023030:	f2c0 80c0 	blt.w	900231b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023034:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023038:	4647      	mov	r7, r8
9002303a:	f1bb 0f00 	cmp.w	fp, #0
9002303e:	f340 80e3 	ble.w	90023208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90023042:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90023044:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023048:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002304a:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002304e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023052:	ea5f 422a 	movs.w	r2, sl, asr #16
90023056:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002305a:	689b      	ldr	r3, [r3, #8]
9002305c:	f100 8121 	bmi.w	900232a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023060:	f103 39ff 	add.w	r9, r3, #4294967295
90023064:	454a      	cmp	r2, r9
90023066:	f280 811c 	bge.w	900232a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002306a:	f1bc 0f00 	cmp.w	ip, #0
9002306e:	f2c0 8118 	blt.w	900232a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023072:	f10e 39ff 	add.w	r9, lr, #4294967295
90023076:	45cc      	cmp	ip, r9
90023078:	f280 8113 	bge.w	900232a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002307c:	b21b      	sxth	r3, r3
9002307e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023080:	fb0c 2203 	mla	r2, ip, r3, r2
90023084:	eb04 0902 	add.w	r9, r4, r2
90023088:	5ca2      	ldrb	r2, [r4, r2]
9002308a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002308e:	2800      	cmp	r0, #0
90023090:	f000 80fe 	beq.w	90023290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90023094:	f899 2001 	ldrb.w	r2, [r9, #1]
90023098:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002309c:	9211      	str	r2, [sp, #68]	@ 0x44
9002309e:	b151      	cbz	r1, 900230b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900230a0:	eb09 0203 	add.w	r2, r9, r3
900230a4:	f819 3003 	ldrb.w	r3, [r9, r3]
900230a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900230ac:	930f      	str	r3, [sp, #60]	@ 0x3c
900230ae:	7853      	ldrb	r3, [r2, #1]
900230b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900230b4:	9312      	str	r3, [sp, #72]	@ 0x48
900230b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900230b8:	fb10 f201 	smulbb	r2, r0, r1
900230bc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900230be:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900230c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900230c6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900230ca:	10d2      	asrs	r2, r2, #3
900230cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900230d0:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
900230d4:	ea4c 0c03 	orr.w	ip, ip, r3
900230d8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900230da:	041b      	lsls	r3, r3, #16
900230dc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900230e0:	4323      	orrs	r3, r4
900230e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900230e4:	4353      	muls	r3, r2
900230e6:	fb09 330c 	mla	r3, r9, ip, r3
900230ea:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900230ee:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900230f2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900230f6:	ea4c 0e0e 	orr.w	lr, ip, lr
900230fa:	f1c1 0c10 	rsb	ip, r1, #16
900230fe:	ebac 0c00 	sub.w	ip, ip, r0
90023102:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023106:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002310a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002310e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023110:	0418      	lsls	r0, r3, #16
90023112:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023116:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002311a:	4318      	orrs	r0, r3
9002311c:	fb02 c200 	mla	r2, r2, r0, ip
90023120:	8838      	ldrh	r0, [r7, #0]
90023122:	0d53      	lsrs	r3, r2, #21
90023124:	0952      	lsrs	r2, r2, #5
90023126:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002312a:	1201      	asrs	r1, r0, #8
9002312c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023130:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023134:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023138:	00c0      	lsls	r0, r0, #3
9002313a:	431a      	orrs	r2, r3
9002313c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90023140:	fb11 f104 	smulbb	r1, r1, r4
90023144:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90023148:	b292      	uxth	r2, r2
9002314a:	fb1e fe04 	smulbb	lr, lr, r4
9002314e:	b2c0      	uxtb	r0, r0
90023150:	ea4f 2c22 	mov.w	ip, r2, asr #8
90023154:	fb10 f004 	smulbb	r0, r0, r4
90023158:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002315c:	fb0c 1c03 	mla	ip, ip, r3, r1
90023160:	10d1      	asrs	r1, r2, #3
90023162:	00d2      	lsls	r2, r2, #3
90023164:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023168:	fa1f fc8c 	uxth.w	ip, ip
9002316c:	b2d2      	uxtb	r2, r2
9002316e:	fb01 e103 	mla	r1, r1, r3, lr
90023172:	fb02 0303 	mla	r3, r2, r3, r0
90023176:	b289      	uxth	r1, r1
90023178:	b29a      	uxth	r2, r3
9002317a:	f10c 0301 	add.w	r3, ip, #1
9002317e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023182:	1c53      	adds	r3, r2, #1
90023184:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023188:	1c4a      	adds	r2, r1, #1
9002318a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002318e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023192:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023196:	0949      	lsrs	r1, r1, #5
90023198:	ea43 030c 	orr.w	r3, r3, ip
9002319c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900231a0:	430b      	orrs	r3, r1
900231a2:	803b      	strh	r3, [r7, #0]
900231a4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900231a6:	3702      	adds	r7, #2
900231a8:	f10b 3bff 	add.w	fp, fp, #4294967295
900231ac:	449a      	add	sl, r3
900231ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900231b0:	441d      	add	r5, r3
900231b2:	e742      	b.n	9002303a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900231b4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900231b6:	f108 0802 	add.w	r8, r8, #2
900231ba:	449a      	add	sl, r3
900231bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900231be:	441d      	add	r5, r3
900231c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900231c2:	3b01      	subs	r3, #1
900231c4:	9309      	str	r3, [sp, #36]	@ 0x24
900231c6:	e718      	b.n	90022ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
900231c8:	d023      	beq.n	90023212 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900231ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900231cc:	9825      	ldr	r0, [sp, #148]	@ 0x94
900231ce:	3b01      	subs	r3, #1
900231d0:	fb00 a003 	mla	r0, r0, r3, sl
900231d4:	1400      	asrs	r0, r0, #16
900231d6:	f53f af2d 	bmi.w	90023034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900231da:	3901      	subs	r1, #1
900231dc:	4288      	cmp	r0, r1
900231de:	f6bf af29 	bge.w	90023034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900231e2:	9926      	ldr	r1, [sp, #152]	@ 0x98
900231e4:	fb01 5303 	mla	r3, r1, r3, r5
900231e8:	141b      	asrs	r3, r3, #16
900231ea:	f53f af23 	bmi.w	90023034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900231ee:	3a01      	subs	r2, #1
900231f0:	4293      	cmp	r3, r2
900231f2:	f6bf af1f 	bge.w	90023034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900231f6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900231fa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
900231fe:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90023202:	f1be 0f00 	cmp.w	lr, #0
90023206:	dc6c      	bgt.n	900232e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023208:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002320a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002320e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90023212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023214:	2b00      	cmp	r3, #0
90023216:	f340 810e 	ble.w	90023436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002321a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002321e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023220:	ee30 0a04 	vadd.f32	s0, s0, s8
90023224:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023228:	eef0 6a62 	vmov.f32	s13, s5
9002322c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023230:	ee31 1a05 	vadd.f32	s2, s2, s10
90023234:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023238:	ee16 aa90 	vmov	sl, s13
9002323c:	eef0 6a43 	vmov.f32	s13, s6
90023240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023244:	ee16 5a90 	vmov	r5, s13
90023248:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002324c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023250:	ee77 2a62 	vsub.f32	s5, s14, s5
90023254:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023258:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002325c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023260:	ee12 2a90 	vmov	r2, s5
90023264:	eef0 2a47 	vmov.f32	s5, s14
90023268:	fb92 f3f3 	sdiv	r3, r2, r3
9002326c:	ee13 2a10 	vmov	r2, s6
90023270:	9325      	str	r3, [sp, #148]	@ 0x94
90023272:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023274:	eeb0 3a67 	vmov.f32	s6, s15
90023278:	fb92 f3f3 	sdiv	r3, r2, r3
9002327c:	9326      	str	r3, [sp, #152]	@ 0x98
9002327e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023280:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90023282:	3b01      	subs	r3, #1
90023284:	930c      	str	r3, [sp, #48]	@ 0x30
90023286:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023288:	bf08      	it	eq
9002328a:	4613      	moveq	r3, r2
9002328c:	9309      	str	r3, [sp, #36]	@ 0x24
9002328e:	e6a6      	b.n	90022fde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023290:	2900      	cmp	r1, #0
90023292:	f43f af10 	beq.w	900230b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023296:	f819 3003 	ldrb.w	r3, [r9, r3]
9002329a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002329e:	930f      	str	r3, [sp, #60]	@ 0x3c
900232a0:	e709      	b.n	900230b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900232a2:	f112 0901 	adds.w	r9, r2, #1
900232a6:	f53f af7d 	bmi.w	900231a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900232aa:	454b      	cmp	r3, r9
900232ac:	f6ff af7a 	blt.w	900231a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900232b0:	f11c 0901 	adds.w	r9, ip, #1
900232b4:	f53f af76 	bmi.w	900231a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900232b8:	45ce      	cmp	lr, r9
900232ba:	f6ff af73 	blt.w	900231a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900232be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900232c0:	b21b      	sxth	r3, r3
900232c2:	9202      	str	r2, [sp, #8]
900232c4:	fa0f f28e 	sxth.w	r2, lr
900232c8:	9300      	str	r3, [sp, #0]
900232ca:	4633      	mov	r3, r6
900232cc:	9201      	str	r2, [sp, #4]
900232ce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900232d0:	e9cd 1405 	strd	r1, r4, [sp, #20]
900232d4:	e9cd c003 	strd	ip, r0, [sp, #12]
900232d8:	4639      	mov	r1, r7
900232da:	9816      	ldr	r0, [sp, #88]	@ 0x58
900232dc:	f7ff fd8e 	bl	90022dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900232e0:	e760      	b.n	900231a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900232e2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900232e4:	ea4f 422a 	mov.w	r2, sl, asr #16
900232e8:	1429      	asrs	r1, r5, #16
900232ea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900232ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900232f0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900232f4:	f3c5 3003 	ubfx	r0, r5, #12, #4
900232f8:	fb03 2101 	mla	r1, r3, r1, r2
900232fc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900232fe:	440a      	add	r2, r1
90023300:	5c61      	ldrb	r1, [r4, r1]
90023302:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90023306:	f1bc 0f00 	cmp.w	ip, #0
9002330a:	f000 808c 	beq.w	90023426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9002330e:	7857      	ldrb	r7, [r2, #1]
90023310:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90023314:	9413      	str	r4, [sp, #76]	@ 0x4c
90023316:	b140      	cbz	r0, 9002332a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023318:	18d7      	adds	r7, r2, r3
9002331a:	5cd3      	ldrb	r3, [r2, r3]
9002331c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023320:	9310      	str	r3, [sp, #64]	@ 0x40
90023322:	787b      	ldrb	r3, [r7, #1]
90023324:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023328:	9314      	str	r3, [sp, #80]	@ 0x50
9002332a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002332c:	fb1c f200 	smulbb	r2, ip, r0
90023330:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023332:	f10e 3eff 	add.w	lr, lr, #4294967295
90023336:	041f      	lsls	r7, r3, #16
90023338:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002333c:	10d2      	asrs	r2, r2, #3
9002333e:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
90023342:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90023346:	431f      	orrs	r7, r3
90023348:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9002334c:	9317      	str	r3, [sp, #92]	@ 0x5c
9002334e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023350:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023352:	041b      	lsls	r3, r3, #16
90023354:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023358:	ea43 030b 	orr.w	r3, r3, fp
9002335c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023360:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023364:	4353      	muls	r3, r2
90023366:	fb04 3707 	mla	r7, r4, r7, r3
9002336a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002336e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023370:	ea43 0b01 	orr.w	fp, r3, r1
90023374:	f1c0 0110 	rsb	r1, r0, #16
90023378:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002337a:	eba1 0c0c 	sub.w	ip, r1, ip
9002337e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023382:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90023386:	fb0c 770b 	mla	r7, ip, fp, r7
9002338a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002338e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90023392:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023396:	ea4c 0c0b 	orr.w	ip, ip, fp
9002339a:	fb02 770c 	mla	r7, r2, ip, r7
9002339e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900233a0:	0d79      	lsrs	r1, r7, #21
900233a2:	8812      	ldrh	r2, [r2, #0]
900233a4:	097f      	lsrs	r7, r7, #5
900233a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900233aa:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900233ae:	430f      	orrs	r7, r1
900233b0:	1211      	asrs	r1, r2, #8
900233b2:	b2bb      	uxth	r3, r7
900233b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900233b8:	10d7      	asrs	r7, r2, #3
900233ba:	fb11 f104 	smulbb	r1, r1, r4
900233be:	1218      	asrs	r0, r3, #8
900233c0:	00d2      	lsls	r2, r2, #3
900233c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900233c6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900233ca:	fb17 f704 	smulbb	r7, r7, r4
900233ce:	b2d2      	uxtb	r2, r2
900233d0:	fb00 1009 	mla	r0, r0, r9, r1
900233d4:	10d9      	asrs	r1, r3, #3
900233d6:	fb12 f204 	smulbb	r2, r2, r4
900233da:	00db      	lsls	r3, r3, #3
900233dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900233e0:	b280      	uxth	r0, r0
900233e2:	b2db      	uxtb	r3, r3
900233e4:	fb01 7109 	mla	r1, r1, r9, r7
900233e8:	fb03 2309 	mla	r3, r3, r9, r2
900233ec:	1c42      	adds	r2, r0, #1
900233ee:	b289      	uxth	r1, r1
900233f0:	b29b      	uxth	r3, r3
900233f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900233f6:	1c4f      	adds	r7, r1, #1
900233f8:	1c5a      	adds	r2, r3, #1
900233fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900233fe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90023402:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023406:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023408:	0949      	lsrs	r1, r1, #5
9002340a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002340e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023412:	4310      	orrs	r0, r2
90023414:	4308      	orrs	r0, r1
90023416:	f823 0b02 	strh.w	r0, [r3], #2
9002341a:	930e      	str	r3, [sp, #56]	@ 0x38
9002341c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002341e:	449a      	add	sl, r3
90023420:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023422:	441d      	add	r5, r3
90023424:	e6ed      	b.n	90023202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90023426:	2800      	cmp	r0, #0
90023428:	f43f af7f 	beq.w	9002332a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002342c:	5cd3      	ldrb	r3, [r2, r3]
9002342e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023432:	9310      	str	r3, [sp, #64]	@ 0x40
90023434:	e779      	b.n	9002332a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023436:	b019      	add	sp, #100	@ 0x64
90023438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002343c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002343c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023440:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90023444:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90023448:	f1b8 0f00 	cmp.w	r8, #0
9002344c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90023450:	fb08 470e 	mla	r7, r8, lr, r4
90023454:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90023458:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9002345c:	eb02 0907 	add.w	r9, r2, r7
90023460:	8808      	ldrh	r0, [r1, #0]
90023462:	db67      	blt.n	90023534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023464:	45c2      	cmp	sl, r8
90023466:	dd65      	ble.n	90023534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023468:	2c00      	cmp	r4, #0
9002346a:	db61      	blt.n	90023530 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002346c:	45a6      	cmp	lr, r4
9002346e:	dd5f      	ble.n	90023530 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023470:	5dd2      	ldrb	r2, [r2, r7]
90023472:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90023476:	1c62      	adds	r2, r4, #1
90023478:	d45f      	bmi.n	9002353a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002347a:	4596      	cmp	lr, r2
9002347c:	dd5d      	ble.n	9002353a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002347e:	2d00      	cmp	r5, #0
90023480:	d05b      	beq.n	9002353a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023482:	f899 2001 	ldrb.w	r2, [r9, #1]
90023486:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002348a:	f118 0801 	adds.w	r8, r8, #1
9002348e:	d458      	bmi.n	90023542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023490:	45c2      	cmp	sl, r8
90023492:	dd56      	ble.n	90023542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023494:	2e00      	cmp	r6, #0
90023496:	d054      	beq.n	90023542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023498:	2c00      	cmp	r4, #0
9002349a:	db50      	blt.n	9002353e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002349c:	45a6      	cmp	lr, r4
9002349e:	dd4e      	ble.n	9002353e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
900234a0:	f819 200e 	ldrb.w	r2, [r9, lr]
900234a4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
900234a8:	3401      	adds	r4, #1
900234aa:	d407      	bmi.n	900234bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900234ac:	45a6      	cmp	lr, r4
900234ae:	dd05      	ble.n	900234bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900234b0:	b125      	cbz	r5, 900234bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900234b2:	44ce      	add	lr, r9
900234b4:	f89e 0001 	ldrb.w	r0, [lr, #1]
900234b8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900234bc:	fb15 f406 	smulbb	r4, r5, r6
900234c0:	ea4f 430c 	mov.w	r3, ip, lsl #16
900234c4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900234c8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900234cc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900234d0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900234d4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900234d8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900234dc:	ea43 0c0c 	orr.w	ip, r3, ip
900234e0:	f1c6 0310 	rsb	r3, r6, #16
900234e4:	ea4e 0707 	orr.w	r7, lr, r7
900234e8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900234ec:	1b5b      	subs	r3, r3, r5
900234ee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900234f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900234f6:	437d      	muls	r5, r7
900234f8:	fb03 5c0c 	mla	ip, r3, ip, r5
900234fc:	0403      	lsls	r3, r0, #16
900234fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023502:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023506:	4318      	orrs	r0, r3
90023508:	0413      	lsls	r3, r2, #16
9002350a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002350e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023512:	fb04 c000 	mla	r0, r4, r0, ip
90023516:	4313      	orrs	r3, r2
90023518:	fb06 0003 	mla	r0, r6, r3, r0
9002351c:	0d43      	lsrs	r3, r0, #21
9002351e:	0940      	lsrs	r0, r0, #5
90023520:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023524:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023528:	4318      	orrs	r0, r3
9002352a:	8008      	strh	r0, [r1, #0]
9002352c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023530:	4684      	mov	ip, r0
90023532:	e7a0      	b.n	90023476 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90023534:	4607      	mov	r7, r0
90023536:	4684      	mov	ip, r0
90023538:	e7a7      	b.n	9002348a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002353a:	4607      	mov	r7, r0
9002353c:	e7a5      	b.n	9002348a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002353e:	4602      	mov	r2, r0
90023540:	e7b2      	b.n	900234a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90023542:	4602      	mov	r2, r0
90023544:	e7ba      	b.n	900234bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90023546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023546:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002354a:	b093      	sub	sp, #76	@ 0x4c
9002354c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90023550:	920f      	str	r2, [sp, #60]	@ 0x3c
90023552:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023554:	9010      	str	r0, [sp, #64]	@ 0x40
90023556:	9108      	str	r1, [sp, #32]
90023558:	6850      	ldr	r0, [r2, #4]
9002355a:	9306      	str	r3, [sp, #24]
9002355c:	6812      	ldr	r2, [r2, #0]
9002355e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90023562:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023566:	fb00 1303 	mla	r3, r0, r3, r1
9002356a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002356e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023570:	681b      	ldr	r3, [r3, #0]
90023572:	9307      	str	r3, [sp, #28]
90023574:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023576:	685f      	ldr	r7, [r3, #4]
90023578:	3704      	adds	r7, #4
9002357a:	9b08      	ldr	r3, [sp, #32]
9002357c:	2b00      	cmp	r3, #0
9002357e:	dc03      	bgt.n	90023588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90023580:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023582:	2b00      	cmp	r3, #0
90023584:	f340 81b2 	ble.w	900238ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023588:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002358a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002358e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023592:	1e48      	subs	r0, r1, #1
90023594:	f102 3cff 	add.w	ip, r2, #4294967295
90023598:	9b06      	ldr	r3, [sp, #24]
9002359a:	2b00      	cmp	r3, #0
9002359c:	f340 80a9 	ble.w	900236f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
900235a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900235a4:	ea4f 4326 	mov.w	r3, r6, asr #16
900235a8:	d406      	bmi.n	900235b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900235aa:	4586      	cmp	lr, r0
900235ac:	da04      	bge.n	900235b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900235ae:	2b00      	cmp	r3, #0
900235b0:	db02      	blt.n	900235b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900235b2:	4563      	cmp	r3, ip
900235b4:	f2c0 809e 	blt.w	900236f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
900235b8:	f11e 0e01 	adds.w	lr, lr, #1
900235bc:	f100 808f 	bmi.w	900236de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900235c0:	4571      	cmp	r1, lr
900235c2:	f2c0 808c 	blt.w	900236de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900235c6:	3301      	adds	r3, #1
900235c8:	f100 8089 	bmi.w	900236de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900235cc:	429a      	cmp	r2, r3
900235ce:	f2c0 8086 	blt.w	900236de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900235d2:	f8dd b018 	ldr.w	fp, [sp, #24]
900235d6:	46c8      	mov	r8, r9
900235d8:	f1bb 0f00 	cmp.w	fp, #0
900235dc:	f340 80a6 	ble.w	9002372c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900235e0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
900235e2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900235e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900235e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
900235ec:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900235f0:	1422      	asrs	r2, r4, #16
900235f2:	f3c6 3103 	ubfx	r1, r6, #12, #4
900235f6:	689b      	ldr	r3, [r3, #8]
900235f8:	f100 80e3 	bmi.w	900237c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900235fc:	f103 3aff 	add.w	sl, r3, #4294967295
90023600:	4552      	cmp	r2, sl
90023602:	f280 80de 	bge.w	900237c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023606:	f1bc 0f00 	cmp.w	ip, #0
9002360a:	f2c0 80da 	blt.w	900237c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002360e:	f10e 3aff 	add.w	sl, lr, #4294967295
90023612:	45d4      	cmp	ip, sl
90023614:	f280 80d5 	bge.w	900237c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023618:	b21b      	sxth	r3, r3
9002361a:	9d07      	ldr	r5, [sp, #28]
9002361c:	fb0c 2203 	mla	r2, ip, r3, r2
90023620:	eb05 0a02 	add.w	sl, r5, r2
90023624:	5caa      	ldrb	r2, [r5, r2]
90023626:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9002362a:	2800      	cmp	r0, #0
9002362c:	f000 80c0 	beq.w	900237b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90023630:	f89a 2001 	ldrb.w	r2, [sl, #1]
90023634:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90023638:	920b      	str	r2, [sp, #44]	@ 0x2c
9002363a:	b151      	cbz	r1, 90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002363c:	eb0a 0203 	add.w	r2, sl, r3
90023640:	f81a 3003 	ldrb.w	r3, [sl, r3]
90023644:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023648:	9309      	str	r3, [sp, #36]	@ 0x24
9002364a:	7853      	ldrb	r3, [r2, #1]
9002364c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023650:	930c      	str	r3, [sp, #48]	@ 0x30
90023652:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023654:	fb10 f201 	smulbb	r2, r0, r1
90023658:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002365a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002365e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023662:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023666:	10d2      	asrs	r2, r2, #3
90023668:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002366c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90023670:	ea4c 0c03 	orr.w	ip, ip, r3
90023674:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023676:	041b      	lsls	r3, r3, #16
90023678:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002367c:	432b      	orrs	r3, r5
9002367e:	4353      	muls	r3, r2
90023680:	fb0a 330c 	mla	r3, sl, ip, r3
90023684:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90023688:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002368c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023690:	ea4c 0e0e 	orr.w	lr, ip, lr
90023694:	f1c1 0c10 	rsb	ip, r1, #16
90023698:	ebac 0c00 	sub.w	ip, ip, r0
9002369c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900236a0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900236a4:	fb0c 3c0e 	mla	ip, ip, lr, r3
900236a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900236aa:	0418      	lsls	r0, r3, #16
900236ac:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900236b0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900236b4:	4318      	orrs	r0, r3
900236b6:	fb02 c200 	mla	r2, r2, r0, ip
900236ba:	0d53      	lsrs	r3, r2, #21
900236bc:	0952      	lsrs	r2, r2, #5
900236be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900236c2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900236c6:	431a      	orrs	r2, r3
900236c8:	f8a8 2000 	strh.w	r2, [r8]
900236cc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900236ce:	f108 0802 	add.w	r8, r8, #2
900236d2:	f10b 3bff 	add.w	fp, fp, #4294967295
900236d6:	441c      	add	r4, r3
900236d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900236da:	441e      	add	r6, r3
900236dc:	e77c      	b.n	900235d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900236de:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900236e0:	f109 0902 	add.w	r9, r9, #2
900236e4:	441c      	add	r4, r3
900236e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900236e8:	441e      	add	r6, r3
900236ea:	9b06      	ldr	r3, [sp, #24]
900236ec:	3b01      	subs	r3, #1
900236ee:	9306      	str	r3, [sp, #24]
900236f0:	e752      	b.n	90023598 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900236f2:	d020      	beq.n	90023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900236f4:	9b06      	ldr	r3, [sp, #24]
900236f6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900236f8:	3b01      	subs	r3, #1
900236fa:	fb00 4003 	mla	r0, r0, r3, r4
900236fe:	1400      	asrs	r0, r0, #16
90023700:	f53f af67 	bmi.w	900235d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023704:	3901      	subs	r1, #1
90023706:	4288      	cmp	r0, r1
90023708:	f6bf af63 	bge.w	900235d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002370c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002370e:	fb01 6303 	mla	r3, r1, r3, r6
90023712:	141b      	asrs	r3, r3, #16
90023714:	f53f af5d 	bmi.w	900235d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023718:	3a01      	subs	r2, #1
9002371a:	4293      	cmp	r3, r2
9002371c:	f6bf af59 	bge.w	900235d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023720:	f8dd 8018 	ldr.w	r8, [sp, #24]
90023724:	46ca      	mov	sl, r9
90023726:	f1b8 0f00 	cmp.w	r8, #0
9002372a:	dc67      	bgt.n	900237fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9002372c:	9b06      	ldr	r3, [sp, #24]
9002372e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023732:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90023736:	9b08      	ldr	r3, [sp, #32]
90023738:	2b00      	cmp	r3, #0
9002373a:	f340 80d7 	ble.w	900238ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002373e:	ee30 0a04 	vadd.f32	s0, s0, s8
90023742:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023744:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023748:	eeb0 6a62 	vmov.f32	s12, s5
9002374c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90023750:	ee31 1a05 	vadd.f32	s2, s2, s10
90023754:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90023758:	ee16 4a10 	vmov	r4, s12
9002375c:	eeb0 6a43 	vmov.f32	s12, s6
90023760:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90023764:	ee16 6a10 	vmov	r6, s12
90023768:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002376c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023770:	ee77 2a62 	vsub.f32	s5, s14, s5
90023774:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023778:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002377c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023780:	ee12 2a90 	vmov	r2, s5
90023784:	eef0 2a47 	vmov.f32	s5, s14
90023788:	fb92 f3f3 	sdiv	r3, r2, r3
9002378c:	ee13 2a10 	vmov	r2, s6
90023790:	931f      	str	r3, [sp, #124]	@ 0x7c
90023792:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023794:	eeb0 3a67 	vmov.f32	s6, s15
90023798:	fb92 f3f3 	sdiv	r3, r2, r3
9002379c:	9320      	str	r3, [sp, #128]	@ 0x80
9002379e:	9b08      	ldr	r3, [sp, #32]
900237a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900237a2:	3b01      	subs	r3, #1
900237a4:	9308      	str	r3, [sp, #32]
900237a6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900237a8:	bf08      	it	eq
900237aa:	4613      	moveq	r3, r2
900237ac:	9306      	str	r3, [sp, #24]
900237ae:	e6e4      	b.n	9002357a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900237b0:	2900      	cmp	r1, #0
900237b2:	f43f af4e 	beq.w	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900237b6:	f81a 3003 	ldrb.w	r3, [sl, r3]
900237ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900237be:	9309      	str	r3, [sp, #36]	@ 0x24
900237c0:	e747      	b.n	90023652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900237c2:	f112 0a01 	adds.w	sl, r2, #1
900237c6:	d481      	bmi.n	900236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900237c8:	4553      	cmp	r3, sl
900237ca:	f6ff af7f 	blt.w	900236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900237ce:	f11c 0a01 	adds.w	sl, ip, #1
900237d2:	f53f af7b 	bmi.w	900236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900237d6:	45d6      	cmp	lr, sl
900237d8:	f6ff af78 	blt.w	900236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900237dc:	b21b      	sxth	r3, r3
900237de:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900237e2:	fa0f f28e 	sxth.w	r2, lr
900237e6:	9300      	str	r3, [sp, #0]
900237e8:	463b      	mov	r3, r7
900237ea:	9201      	str	r2, [sp, #4]
900237ec:	9a07      	ldr	r2, [sp, #28]
900237ee:	e9cd 0104 	strd	r0, r1, [sp, #16]
900237f2:	4641      	mov	r1, r8
900237f4:	9810      	ldr	r0, [sp, #64]	@ 0x40
900237f6:	f7ff fe21 	bl	9002343c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900237fa:	e767      	b.n	900236cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900237fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900237fe:	1422      	asrs	r2, r4, #16
90023800:	1431      	asrs	r1, r6, #16
90023802:	9d07      	ldr	r5, [sp, #28]
90023804:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023808:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9002380c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023810:	fb03 2101 	mla	r1, r3, r1, r2
90023814:	9a07      	ldr	r2, [sp, #28]
90023816:	440a      	add	r2, r1
90023818:	5c69      	ldrb	r1, [r5, r1]
9002381a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002381e:	f1be 0f00 	cmp.w	lr, #0
90023822:	d05c      	beq.n	900238de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90023824:	f892 c001 	ldrb.w	ip, [r2, #1]
90023828:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9002382c:	950d      	str	r5, [sp, #52]	@ 0x34
9002382e:	b150      	cbz	r0, 90023846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90023830:	eb02 0c03 	add.w	ip, r2, r3
90023834:	5cd3      	ldrb	r3, [r2, r3]
90023836:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002383a:	930a      	str	r3, [sp, #40]	@ 0x28
9002383c:	f89c 3001 	ldrb.w	r3, [ip, #1]
90023840:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023844:	930e      	str	r3, [sp, #56]	@ 0x38
90023846:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023848:	fb1e f200 	smulbb	r2, lr, r0
9002384c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002384e:	f108 38ff 	add.w	r8, r8, #4294967295
90023852:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023856:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002385a:	10d2      	asrs	r2, r2, #3
9002385c:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
90023860:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023864:	ea4c 0c03 	orr.w	ip, ip, r3
90023868:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9002386c:	9311      	str	r3, [sp, #68]	@ 0x44
9002386e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023870:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90023872:	041b      	lsls	r3, r3, #16
90023874:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023878:	ea43 030b 	orr.w	r3, r3, fp
9002387c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023880:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023884:	4353      	muls	r3, r2
90023886:	fb05 3c0c 	mla	ip, r5, ip, r3
9002388a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002388e:	ea43 0b01 	orr.w	fp, r3, r1
90023892:	f1c0 0110 	rsb	r1, r0, #16
90023896:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023898:	eba1 0e0e 	sub.w	lr, r1, lr
9002389c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900238a0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900238a4:	fb0e cc0b 	mla	ip, lr, fp, ip
900238a8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900238ac:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
900238b0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900238b4:	ea4b 0e0e 	orr.w	lr, fp, lr
900238b8:	fb02 cc0e 	mla	ip, r2, lr, ip
900238bc:	ea4f 535c 	mov.w	r3, ip, lsr #21
900238c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900238c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900238c8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900238cc:	ea43 0c0c 	orr.w	ip, r3, ip
900238d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900238d2:	441c      	add	r4, r3
900238d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900238d6:	f82a cb02 	strh.w	ip, [sl], #2
900238da:	441e      	add	r6, r3
900238dc:	e723      	b.n	90023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900238de:	2800      	cmp	r0, #0
900238e0:	d0b1      	beq.n	90023846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900238e2:	5cd3      	ldrb	r3, [r2, r3]
900238e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900238e8:	930a      	str	r3, [sp, #40]	@ 0x28
900238ea:	e7ac      	b.n	90023846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900238ec:	b013      	add	sp, #76	@ 0x4c
900238ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900238f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900238f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900238f6:	880d      	ldrh	r5, [r1, #0]
900238f8:	b087      	sub	sp, #28
900238fa:	10ef      	asrs	r7, r5, #3
900238fc:	9103      	str	r1, [sp, #12]
900238fe:	ea4f 2a25 	mov.w	sl, r5, asr #8
90023902:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90023906:	00ed      	lsls	r5, r5, #3
90023908:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002390c:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90023910:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90023914:	b2ed      	uxtb	r5, r5
90023916:	9701      	str	r7, [sp, #4]
90023918:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
9002391c:	9502      	str	r5, [sp, #8]
9002391e:	9d01      	ldr	r5, [sp, #4]
90023920:	9902      	ldr	r1, [sp, #8]
90023922:	022d      	lsls	r5, r5, #8
90023924:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90023928:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
9002392c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90023930:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90023934:	430d      	orrs	r5, r1
90023936:	fb06 0709 	mla	r7, r6, r9, r0
9002393a:	2e00      	cmp	r6, #0
9002393c:	9505      	str	r5, [sp, #20]
9002393e:	eb02 0c07 	add.w	ip, r2, r7
90023942:	f2c0 80b6 	blt.w	90023ab2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90023946:	45b3      	cmp	fp, r6
90023948:	f340 80b3 	ble.w	90023ab2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9002394c:	2800      	cmp	r0, #0
9002394e:	f2c0 80ae 	blt.w	90023aae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90023952:	4581      	cmp	r9, r0
90023954:	f340 80ab 	ble.w	90023aae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90023958:	5dd7      	ldrb	r7, [r2, r7]
9002395a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002395e:	441f      	add	r7, r3
90023960:	1c42      	adds	r2, r0, #1
90023962:	f100 80a9 	bmi.w	90023ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023966:	4591      	cmp	r9, r2
90023968:	f340 80a6 	ble.w	90023ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002396c:	2c00      	cmp	r4, #0
9002396e:	f000 80a3 	beq.w	90023ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023972:	f89c 5001 	ldrb.w	r5, [ip, #1]
90023976:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002397a:	441d      	add	r5, r3
9002397c:	3601      	adds	r6, #1
9002397e:	f100 809f 	bmi.w	90023ac0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023982:	45b3      	cmp	fp, r6
90023984:	f340 809c 	ble.w	90023ac0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023988:	f1be 0f00 	cmp.w	lr, #0
9002398c:	f000 8098 	beq.w	90023ac0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023990:	2800      	cmp	r0, #0
90023992:	f2c0 8093 	blt.w	90023abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90023996:	4581      	cmp	r9, r0
90023998:	f340 8090 	ble.w	90023abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002399c:	f81c 6009 	ldrb.w	r6, [ip, r9]
900239a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900239a4:	441e      	add	r6, r3
900239a6:	3001      	adds	r0, #1
900239a8:	f100 808d 	bmi.w	90023ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900239ac:	4581      	cmp	r9, r0
900239ae:	f340 808a 	ble.w	90023ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900239b2:	2c00      	cmp	r4, #0
900239b4:	f000 8087 	beq.w	90023ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900239b8:	44e1      	add	r9, ip
900239ba:	f899 2001 	ldrb.w	r2, [r9, #1]
900239be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900239c2:	4413      	add	r3, r2
900239c4:	b2a4      	uxth	r4, r4
900239c6:	f897 c002 	ldrb.w	ip, [r7, #2]
900239ca:	fa1f fe8e 	uxth.w	lr, lr
900239ce:	9901      	ldr	r1, [sp, #4]
900239d0:	fb04 fb0e 	mul.w	fp, r4, lr
900239d4:	0124      	lsls	r4, r4, #4
900239d6:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900239da:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
900239de:	eba4 040b 	sub.w	r4, r4, fp
900239e2:	fa1f f08e 	uxth.w	r0, lr
900239e6:	b2a2      	uxth	r2, r4
900239e8:	78ac      	ldrb	r4, [r5, #2]
900239ea:	eba9 0900 	sub.w	r9, r9, r0
900239ee:	fa1f fe88 	uxth.w	lr, r8
900239f2:	4354      	muls	r4, r2
900239f4:	ea6f 0808 	mvn.w	r8, r8
900239f8:	fa1f f989 	uxth.w	r9, r9
900239fc:	fa5f f888 	uxtb.w	r8, r8
90023a00:	fb09 440c 	mla	r4, r9, ip, r4
90023a04:	f896 c002 	ldrb.w	ip, [r6, #2]
90023a08:	fb1a fa08 	smulbb	sl, sl, r8
90023a0c:	fb00 440c 	mla	r4, r0, ip, r4
90023a10:	f893 c002 	ldrb.w	ip, [r3, #2]
90023a14:	fb0b 4c0c 	mla	ip, fp, ip, r4
90023a18:	787c      	ldrb	r4, [r7, #1]
90023a1a:	783f      	ldrb	r7, [r7, #0]
90023a1c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90023a20:	fb0c ac0e 	mla	ip, ip, lr, sl
90023a24:	f895 a001 	ldrb.w	sl, [r5, #1]
90023a28:	782d      	ldrb	r5, [r5, #0]
90023a2a:	fb02 fa0a 	mul.w	sl, r2, sl
90023a2e:	fa1f fc8c 	uxth.w	ip, ip
90023a32:	436a      	muls	r2, r5
90023a34:	7835      	ldrb	r5, [r6, #0]
90023a36:	fb09 aa04 	mla	sl, r9, r4, sl
90023a3a:	7874      	ldrb	r4, [r6, #1]
90023a3c:	fb09 2207 	mla	r2, r9, r7, r2
90023a40:	fb00 aa04 	mla	sl, r0, r4, sl
90023a44:	785c      	ldrb	r4, [r3, #1]
90023a46:	fb00 2005 	mla	r0, r0, r5, r2
90023a4a:	781b      	ldrb	r3, [r3, #0]
90023a4c:	fb0b a404 	mla	r4, fp, r4, sl
90023a50:	fb11 fa08 	smulbb	sl, r1, r8
90023a54:	fb0b 0b03 	mla	fp, fp, r3, r0
90023a58:	9b02      	ldr	r3, [sp, #8]
90023a5a:	f3c4 2407 	ubfx	r4, r4, #8, #8
90023a5e:	fb13 f808 	smulbb	r8, r3, r8
90023a62:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90023a66:	fb04 a40e 	mla	r4, r4, lr, sl
90023a6a:	f10c 0301 	add.w	r3, ip, #1
90023a6e:	fb0b 8e0e 	mla	lr, fp, lr, r8
90023a72:	b2a4      	uxth	r4, r4
90023a74:	fa1f fe8e 	uxth.w	lr, lr
90023a78:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023a7c:	f104 0a01 	add.w	sl, r4, #1
90023a80:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90023a84:	f10e 0c01 	add.w	ip, lr, #1
90023a88:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90023a8c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023a90:	0964      	lsrs	r4, r4, #5
90023a92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90023a96:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90023a9a:	ea4c 0c03 	orr.w	ip, ip, r3
90023a9e:	9b03      	ldr	r3, [sp, #12]
90023aa0:	ea4c 0c04 	orr.w	ip, ip, r4
90023aa4:	f8a3 c000 	strh.w	ip, [r3]
90023aa8:	b007      	add	sp, #28
90023aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023aae:	af05      	add	r7, sp, #20
90023ab0:	e756      	b.n	90023960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90023ab2:	ad05      	add	r5, sp, #20
90023ab4:	462f      	mov	r7, r5
90023ab6:	e761      	b.n	9002397c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023ab8:	ad05      	add	r5, sp, #20
90023aba:	e75f      	b.n	9002397c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023abc:	ae05      	add	r6, sp, #20
90023abe:	e772      	b.n	900239a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90023ac0:	ab05      	add	r3, sp, #20
90023ac2:	461e      	mov	r6, r3
90023ac4:	e77e      	b.n	900239c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90023ac6:	ab05      	add	r3, sp, #20
90023ac8:	e77c      	b.n	900239c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90023aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023aca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ace:	b095      	sub	sp, #84	@ 0x54
90023ad0:	9212      	str	r2, [sp, #72]	@ 0x48
90023ad2:	9309      	str	r3, [sp, #36]	@ 0x24
90023ad4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90023ad6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90023ada:	9013      	str	r0, [sp, #76]	@ 0x4c
90023adc:	930f      	str	r3, [sp, #60]	@ 0x3c
90023ade:	6850      	ldr	r0, [r2, #4]
90023ae0:	910e      	str	r1, [sp, #56]	@ 0x38
90023ae2:	6812      	ldr	r2, [r2, #0]
90023ae4:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90023ae8:	fb00 1303 	mla	r3, r0, r3, r1
90023aec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023af0:	930a      	str	r3, [sp, #40]	@ 0x28
90023af2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023af4:	681b      	ldr	r3, [r3, #0]
90023af6:	930d      	str	r3, [sp, #52]	@ 0x34
90023af8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023afa:	685c      	ldr	r4, [r3, #4]
90023afc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023afe:	3404      	adds	r4, #4
90023b00:	43db      	mvns	r3, r3
90023b02:	b2db      	uxtb	r3, r3
90023b04:	930b      	str	r3, [sp, #44]	@ 0x2c
90023b06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023b08:	2b00      	cmp	r3, #0
90023b0a:	dc03      	bgt.n	90023b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023b0c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90023b0e:	2b00      	cmp	r3, #0
90023b10:	f340 8255 	ble.w	90023fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90023b14:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023b16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023b1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023b1e:	1e48      	subs	r0, r1, #1
90023b20:	1e55      	subs	r5, r2, #1
90023b22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023b24:	2b00      	cmp	r3, #0
90023b26:	f340 80f9 	ble.w	90023d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90023b2a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90023b2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023b2e:	1436      	asrs	r6, r6, #16
90023b30:	ea4f 4323 	mov.w	r3, r3, asr #16
90023b34:	d406      	bmi.n	90023b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023b36:	4286      	cmp	r6, r0
90023b38:	da04      	bge.n	90023b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023b3a:	2b00      	cmp	r3, #0
90023b3c:	db02      	blt.n	90023b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023b3e:	42ab      	cmp	r3, r5
90023b40:	f2c0 80ed 	blt.w	90023d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90023b44:	3601      	adds	r6, #1
90023b46:	f100 80da 	bmi.w	90023cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023b4a:	42b1      	cmp	r1, r6
90023b4c:	f2c0 80d7 	blt.w	90023cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023b50:	3301      	adds	r3, #1
90023b52:	f100 80d4 	bmi.w	90023cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023b56:	429a      	cmp	r2, r3
90023b58:	f2c0 80d1 	blt.w	90023cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023b5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023b5e:	9311      	str	r3, [sp, #68]	@ 0x44
90023b60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023b62:	930c      	str	r3, [sp, #48]	@ 0x30
90023b64:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023b66:	2b00      	cmp	r3, #0
90023b68:	f340 80fa 	ble.w	90023d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90023b6c:	9826      	ldr	r0, [sp, #152]	@ 0x98
90023b6e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023b70:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023b72:	68c6      	ldr	r6, [r0, #12]
90023b74:	141d      	asrs	r5, r3, #16
90023b76:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023b78:	f3c2 3103 	ubfx	r1, r2, #12, #4
90023b7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023b7e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90023b80:	1400      	asrs	r0, r0, #16
90023b82:	f3c3 3303 	ubfx	r3, r3, #12, #4
90023b86:	6892      	ldr	r2, [r2, #8]
90023b88:	f100 813e 	bmi.w	90023e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023b8c:	1e57      	subs	r7, r2, #1
90023b8e:	42b8      	cmp	r0, r7
90023b90:	f280 813a 	bge.w	90023e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023b94:	2d00      	cmp	r5, #0
90023b96:	f2c0 8137 	blt.w	90023e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023b9a:	1e77      	subs	r7, r6, #1
90023b9c:	42bd      	cmp	r5, r7
90023b9e:	f280 8133 	bge.w	90023e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023ba2:	b212      	sxth	r2, r2
90023ba4:	fb05 0002 	mla	r0, r5, r2, r0
90023ba8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90023baa:	f815 a000 	ldrb.w	sl, [r5, r0]
90023bae:	182e      	adds	r6, r5, r0
90023bb0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90023bb4:	eb04 050a 	add.w	r5, r4, sl
90023bb8:	2b00      	cmp	r3, #0
90023bba:	f000 8117 	beq.w	90023dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90023bbe:	f896 c001 	ldrb.w	ip, [r6, #1]
90023bc2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90023bc6:	44a4      	add	ip, r4
90023bc8:	2900      	cmp	r1, #0
90023bca:	f000 8117 	beq.w	90023dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90023bce:	18b0      	adds	r0, r6, r2
90023bd0:	5cb2      	ldrb	r2, [r6, r2]
90023bd2:	7840      	ldrb	r0, [r0, #1]
90023bd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023bd8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023bdc:	4422      	add	r2, r4
90023bde:	4420      	add	r0, r4
90023be0:	b29b      	uxth	r3, r3
90023be2:	f89c 7002 	ldrb.w	r7, [ip, #2]
90023be6:	b289      	uxth	r1, r1
90023be8:	f895 b002 	ldrb.w	fp, [r5, #2]
90023bec:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90023bee:	fb03 f901 	mul.w	r9, r3, r1
90023bf2:	011b      	lsls	r3, r3, #4
90023bf4:	f8b6 e000 	ldrh.w	lr, [r6]
90023bf8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023bfc:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90023c00:	eba3 0309 	sub.w	r3, r3, r9
90023c04:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90023c08:	b289      	uxth	r1, r1
90023c0a:	f814 a00a 	ldrb.w	sl, [r4, sl]
90023c0e:	b29b      	uxth	r3, r3
90023c10:	eba8 0801 	sub.w	r8, r8, r1
90023c14:	435f      	muls	r7, r3
90023c16:	fa1f f888 	uxth.w	r8, r8
90023c1a:	9310      	str	r3, [sp, #64]	@ 0x40
90023c1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023c1e:	fb08 770b 	mla	r7, r8, fp, r7
90023c22:	f892 b002 	ldrb.w	fp, [r2, #2]
90023c26:	fb01 770b 	mla	r7, r1, fp, r7
90023c2a:	f890 b002 	ldrb.w	fp, [r0, #2]
90023c2e:	fb09 770b 	mla	r7, r9, fp, r7
90023c32:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90023c36:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90023c3a:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023c3e:	fb1b fb03 	smulbb	fp, fp, r3
90023c42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023c44:	fb07 b706 	mla	r7, r7, r6, fp
90023c48:	f895 b001 	ldrb.w	fp, [r5, #1]
90023c4c:	f89c 5001 	ldrb.w	r5, [ip, #1]
90023c50:	f89c c000 	ldrb.w	ip, [ip]
90023c54:	b2bf      	uxth	r7, r7
90023c56:	435d      	muls	r5, r3
90023c58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023c5a:	fb08 550b 	mla	r5, r8, fp, r5
90023c5e:	f892 b001 	ldrb.w	fp, [r2, #1]
90023c62:	fb01 550b 	mla	r5, r1, fp, r5
90023c66:	f890 b001 	ldrb.w	fp, [r0, #1]
90023c6a:	fb09 550b 	mla	r5, r9, fp, r5
90023c6e:	ea4f 0bee 	mov.w	fp, lr, asr #3
90023c72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90023c76:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90023c7a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90023c7e:	fa5f fe8e 	uxtb.w	lr, lr
90023c82:	fb1b fb03 	smulbb	fp, fp, r3
90023c86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023c88:	fb03 f30c 	mul.w	r3, r3, ip
90023c8c:	f892 c000 	ldrb.w	ip, [r2]
90023c90:	fb05 b506 	mla	r5, r5, r6, fp
90023c94:	fb08 330a 	mla	r3, r8, sl, r3
90023c98:	b2ad      	uxth	r5, r5
90023c9a:	fb01 330c 	mla	r3, r1, ip, r3
90023c9e:	f890 c000 	ldrb.w	ip, [r0]
90023ca2:	f105 0b01 	add.w	fp, r5, #1
90023ca6:	fb09 3c0c 	mla	ip, r9, ip, r3
90023caa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023cac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90023cb0:	fb1e fe03 	smulbb	lr, lr, r3
90023cb4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90023cb8:	1c7b      	adds	r3, r7, #1
90023cba:	096d      	lsrs	r5, r5, #5
90023cbc:	fb0c e606 	mla	r6, ip, r6, lr
90023cc0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90023cc4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023cc8:	b2b6      	uxth	r6, r6
90023cca:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90023cce:	1c77      	adds	r7, r6, #1
90023cd0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90023cd4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023cd8:	431f      	orrs	r7, r3
90023cda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023cdc:	433d      	orrs	r5, r7
90023cde:	801d      	strh	r5, [r3, #0]
90023ce0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023ce2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023ce4:	3302      	adds	r3, #2
90023ce6:	930c      	str	r3, [sp, #48]	@ 0x30
90023ce8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023cea:	4413      	add	r3, r2
90023cec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023cee:	931f      	str	r3, [sp, #124]	@ 0x7c
90023cf0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023cf2:	4413      	add	r3, r2
90023cf4:	9320      	str	r3, [sp, #128]	@ 0x80
90023cf6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023cf8:	3b01      	subs	r3, #1
90023cfa:	9311      	str	r3, [sp, #68]	@ 0x44
90023cfc:	e732      	b.n	90023b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023cfe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023d00:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90023d02:	4433      	add	r3, r6
90023d04:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90023d06:	931f      	str	r3, [sp, #124]	@ 0x7c
90023d08:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023d0a:	4433      	add	r3, r6
90023d0c:	9320      	str	r3, [sp, #128]	@ 0x80
90023d0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d10:	3b01      	subs	r3, #1
90023d12:	9309      	str	r3, [sp, #36]	@ 0x24
90023d14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023d16:	3302      	adds	r3, #2
90023d18:	930a      	str	r3, [sp, #40]	@ 0x28
90023d1a:	e702      	b.n	90023b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023d1c:	d027      	beq.n	90023d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90023d1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d20:	9821      	ldr	r0, [sp, #132]	@ 0x84
90023d22:	3b01      	subs	r3, #1
90023d24:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90023d26:	fb00 5003 	mla	r0, r0, r3, r5
90023d2a:	1400      	asrs	r0, r0, #16
90023d2c:	f53f af16 	bmi.w	90023b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023d30:	3901      	subs	r1, #1
90023d32:	4288      	cmp	r0, r1
90023d34:	f6bf af12 	bge.w	90023b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023d38:	9922      	ldr	r1, [sp, #136]	@ 0x88
90023d3a:	9820      	ldr	r0, [sp, #128]	@ 0x80
90023d3c:	fb01 0303 	mla	r3, r1, r3, r0
90023d40:	141b      	asrs	r3, r3, #16
90023d42:	f53f af0b 	bmi.w	90023b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023d46:	3a01      	subs	r2, #1
90023d48:	4293      	cmp	r3, r2
90023d4a:	f6bf af07 	bge.w	90023b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023d4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d50:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90023d54:	9311      	str	r3, [sp, #68]	@ 0x44
90023d56:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023d58:	930c      	str	r3, [sp, #48]	@ 0x30
90023d5a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023d5c:	2b00      	cmp	r3, #0
90023d5e:	dc70      	bgt.n	90023e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90023d60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023d62:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023d64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90023d68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023d6c:	930a      	str	r3, [sp, #40]	@ 0x28
90023d6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023d70:	2b00      	cmp	r3, #0
90023d72:	f340 8124 	ble.w	90023fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90023d76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023d7a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023d7c:	ee30 0a04 	vadd.f32	s0, s0, s8
90023d80:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023d84:	eef0 6a62 	vmov.f32	s13, s5
90023d88:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023d8c:	ee31 1a05 	vadd.f32	s2, s2, s10
90023d90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d94:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90023d98:	eef0 6a43 	vmov.f32	s13, s6
90023d9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023da0:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90023da4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023da8:	ee61 7a27 	vmul.f32	s15, s2, s15
90023dac:	ee77 2a62 	vsub.f32	s5, s14, s5
90023db0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023db4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023db8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023dbc:	ee12 2a90 	vmov	r2, s5
90023dc0:	eef0 2a47 	vmov.f32	s5, s14
90023dc4:	fb92 f3f3 	sdiv	r3, r2, r3
90023dc8:	ee13 2a10 	vmov	r2, s6
90023dcc:	9321      	str	r3, [sp, #132]	@ 0x84
90023dce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023dd0:	eeb0 3a67 	vmov.f32	s6, s15
90023dd4:	fb92 f3f3 	sdiv	r3, r2, r3
90023dd8:	9322      	str	r3, [sp, #136]	@ 0x88
90023dda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023ddc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90023dde:	3b01      	subs	r3, #1
90023de0:	930e      	str	r3, [sp, #56]	@ 0x38
90023de2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90023de4:	bf08      	it	eq
90023de6:	4613      	moveq	r3, r2
90023de8:	9309      	str	r3, [sp, #36]	@ 0x24
90023dea:	e68c      	b.n	90023b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023dec:	b149      	cbz	r1, 90023e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90023dee:	5cb2      	ldrb	r2, [r6, r2]
90023df0:	4628      	mov	r0, r5
90023df2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023df6:	4422      	add	r2, r4
90023df8:	46ac      	mov	ip, r5
90023dfa:	e6f1      	b.n	90023be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023dfc:	4628      	mov	r0, r5
90023dfe:	462a      	mov	r2, r5
90023e00:	e6ee      	b.n	90023be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023e02:	4628      	mov	r0, r5
90023e04:	462a      	mov	r2, r5
90023e06:	e7f7      	b.n	90023df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90023e08:	1c47      	adds	r7, r0, #1
90023e0a:	f53f af69 	bmi.w	90023ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90023e0e:	42ba      	cmp	r2, r7
90023e10:	f6ff af66 	blt.w	90023ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90023e14:	1c6f      	adds	r7, r5, #1
90023e16:	f53f af63 	bmi.w	90023ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90023e1a:	42be      	cmp	r6, r7
90023e1c:	f6ff af60 	blt.w	90023ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90023e20:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90023e22:	b236      	sxth	r6, r6
90023e24:	b212      	sxth	r2, r2
90023e26:	9002      	str	r0, [sp, #8]
90023e28:	9601      	str	r6, [sp, #4]
90023e2a:	9200      	str	r2, [sp, #0]
90023e2c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90023e2e:	e9cd 1705 	strd	r1, r7, [sp, #20]
90023e32:	e9cd 5303 	strd	r5, r3, [sp, #12]
90023e36:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90023e3a:	4623      	mov	r3, r4
90023e3c:	f7ff fd59 	bl	900238f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90023e40:	e74e      	b.n	90023ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90023e42:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023e44:	9820      	ldr	r0, [sp, #128]	@ 0x80
90023e46:	f3c2 3103 	ubfx	r1, r2, #12, #4
90023e4a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90023e4c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90023e4e:	1400      	asrs	r0, r0, #16
90023e50:	142d      	asrs	r5, r5, #16
90023e52:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023e54:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90023e58:	f3c3 3303 	ubfx	r3, r3, #12, #4
90023e5c:	fb02 5000 	mla	r0, r2, r0, r5
90023e60:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90023e62:	f815 9000 	ldrb.w	r9, [r5, r0]
90023e66:	182e      	adds	r6, r5, r0
90023e68:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90023e6c:	eb04 0509 	add.w	r5, r4, r9
90023e70:	2b00      	cmp	r3, #0
90023e72:	f000 8096 	beq.w	90023fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90023e76:	7877      	ldrb	r7, [r6, #1]
90023e78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023e7c:	4427      	add	r7, r4
90023e7e:	2900      	cmp	r1, #0
90023e80:	f000 8097 	beq.w	90023fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90023e84:	18b0      	adds	r0, r6, r2
90023e86:	5cb2      	ldrb	r2, [r6, r2]
90023e88:	7840      	ldrb	r0, [r0, #1]
90023e8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023e8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023e92:	4422      	add	r2, r4
90023e94:	4420      	add	r0, r4
90023e96:	b29b      	uxth	r3, r3
90023e98:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90023e9a:	b289      	uxth	r1, r1
90023e9c:	f895 b002 	ldrb.w	fp, [r5, #2]
90023ea0:	f8b6 c000 	ldrh.w	ip, [r6]
90023ea4:	fb03 f801 	mul.w	r8, r3, r1
90023ea8:	011b      	lsls	r3, r3, #4
90023eaa:	78be      	ldrb	r6, [r7, #2]
90023eac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90023eb0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90023eb4:	eba3 0308 	sub.w	r3, r3, r8
90023eb8:	f814 9009 	ldrb.w	r9, [r4, r9]
90023ebc:	b289      	uxth	r1, r1
90023ebe:	b29b      	uxth	r3, r3
90023ec0:	ebae 0e01 	sub.w	lr, lr, r1
90023ec4:	435e      	muls	r6, r3
90023ec6:	fa1f fe8e 	uxth.w	lr, lr
90023eca:	9310      	str	r3, [sp, #64]	@ 0x40
90023ecc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023ece:	fb0e 660b 	mla	r6, lr, fp, r6
90023ed2:	f892 b002 	ldrb.w	fp, [r2, #2]
90023ed6:	fb01 660b 	mla	r6, r1, fp, r6
90023eda:	f890 b002 	ldrb.w	fp, [r0, #2]
90023ede:	fb08 660b 	mla	r6, r8, fp, r6
90023ee2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90023ee6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90023eea:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023eee:	fb1b fb03 	smulbb	fp, fp, r3
90023ef2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023ef4:	fb06 b60a 	mla	r6, r6, sl, fp
90023ef8:	f895 b001 	ldrb.w	fp, [r5, #1]
90023efc:	787d      	ldrb	r5, [r7, #1]
90023efe:	783f      	ldrb	r7, [r7, #0]
90023f00:	b2b6      	uxth	r6, r6
90023f02:	435d      	muls	r5, r3
90023f04:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023f06:	fb0e 550b 	mla	r5, lr, fp, r5
90023f0a:	f892 b001 	ldrb.w	fp, [r2, #1]
90023f0e:	fb01 550b 	mla	r5, r1, fp, r5
90023f12:	f890 b001 	ldrb.w	fp, [r0, #1]
90023f16:	fb08 550b 	mla	r5, r8, fp, r5
90023f1a:	ea4f 0bec 	mov.w	fp, ip, asr #3
90023f1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90023f22:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90023f26:	f3c5 2507 	ubfx	r5, r5, #8, #8
90023f2a:	fa5f fc8c 	uxtb.w	ip, ip
90023f2e:	fb1b fb03 	smulbb	fp, fp, r3
90023f32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023f34:	437b      	muls	r3, r7
90023f36:	7817      	ldrb	r7, [r2, #0]
90023f38:	fb05 b50a 	mla	r5, r5, sl, fp
90023f3c:	fb0e 3309 	mla	r3, lr, r9, r3
90023f40:	b2ad      	uxth	r5, r5
90023f42:	fb01 3307 	mla	r3, r1, r7, r3
90023f46:	7807      	ldrb	r7, [r0, #0]
90023f48:	f105 0b01 	add.w	fp, r5, #1
90023f4c:	fb08 3707 	mla	r7, r8, r7, r3
90023f50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023f52:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90023f56:	fb1c fc03 	smulbb	ip, ip, r3
90023f5a:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023f5e:	1c73      	adds	r3, r6, #1
90023f60:	096d      	lsrs	r5, r5, #5
90023f62:	fb07 c70a 	mla	r7, r7, sl, ip
90023f66:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023f6a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023f6e:	b2bf      	uxth	r7, r7
90023f70:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023f72:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90023f76:	1c7a      	adds	r2, r7, #1
90023f78:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023f7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023f80:	4316      	orrs	r6, r2
90023f82:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023f84:	432e      	orrs	r6, r5
90023f86:	f823 6b02 	strh.w	r6, [r3], #2
90023f8a:	930c      	str	r3, [sp, #48]	@ 0x30
90023f8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023f8e:	4413      	add	r3, r2
90023f90:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023f92:	931f      	str	r3, [sp, #124]	@ 0x7c
90023f94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023f96:	4413      	add	r3, r2
90023f98:	9320      	str	r3, [sp, #128]	@ 0x80
90023f9a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023f9c:	3b01      	subs	r3, #1
90023f9e:	9311      	str	r3, [sp, #68]	@ 0x44
90023fa0:	e6db      	b.n	90023d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90023fa2:	b149      	cbz	r1, 90023fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90023fa4:	5cb2      	ldrb	r2, [r6, r2]
90023fa6:	4628      	mov	r0, r5
90023fa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023fac:	4422      	add	r2, r4
90023fae:	462f      	mov	r7, r5
90023fb0:	e771      	b.n	90023e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023fb2:	4628      	mov	r0, r5
90023fb4:	462a      	mov	r2, r5
90023fb6:	e76e      	b.n	90023e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023fb8:	4628      	mov	r0, r5
90023fba:	462a      	mov	r2, r5
90023fbc:	e7f7      	b.n	90023fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023fbe:	b015      	add	sp, #84	@ 0x54
90023fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023fc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90023fc4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023fc8:	880f      	ldrh	r7, [r1, #0]
90023fca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90023fce:	023c      	lsls	r4, r7, #8
90023fd0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90023fd4:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90023fd8:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90023fdc:	017c      	lsls	r4, r7, #5
90023fde:	00ff      	lsls	r7, r7, #3
90023fe0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023fe4:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90023fe8:	b2ff      	uxtb	r7, r7
90023fea:	ea4b 0404 	orr.w	r4, fp, r4
90023fee:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90023ff2:	4327      	orrs	r7, r4
90023ff4:	fb05 ca0e 	mla	sl, r5, lr, ip
90023ff8:	2d00      	cmp	r5, #0
90023ffa:	9701      	str	r7, [sp, #4]
90023ffc:	eb02 080a 	add.w	r8, r2, sl
90024000:	db7e      	blt.n	90024100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024002:	45a9      	cmp	r9, r5
90024004:	dd7c      	ble.n	90024100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024006:	f1bc 0f00 	cmp.w	ip, #0
9002400a:	db77      	blt.n	900240fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9002400c:	45e6      	cmp	lr, ip
9002400e:	dd75      	ble.n	900240fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90024010:	f812 700a 	ldrb.w	r7, [r2, sl]
90024014:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024018:	441f      	add	r7, r3
9002401a:	f11c 0201 	adds.w	r2, ip, #1
9002401e:	d472      	bmi.n	90024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024020:	4596      	cmp	lr, r2
90024022:	dd70      	ble.n	90024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024024:	2800      	cmp	r0, #0
90024026:	d06e      	beq.n	90024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024028:	f898 4001 	ldrb.w	r4, [r8, #1]
9002402c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90024030:	441c      	add	r4, r3
90024032:	3501      	adds	r5, #1
90024034:	d46b      	bmi.n	9002410e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024036:	45a9      	cmp	r9, r5
90024038:	dd69      	ble.n	9002410e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002403a:	2e00      	cmp	r6, #0
9002403c:	d067      	beq.n	9002410e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002403e:	f1bc 0f00 	cmp.w	ip, #0
90024042:	db62      	blt.n	9002410a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024044:	45e6      	cmp	lr, ip
90024046:	dd60      	ble.n	9002410a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024048:	f818 500e 	ldrb.w	r5, [r8, lr]
9002404c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024050:	441d      	add	r5, r3
90024052:	f11c 0201 	adds.w	r2, ip, #1
90024056:	d45d      	bmi.n	90024114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024058:	4596      	cmp	lr, r2
9002405a:	dd5b      	ble.n	90024114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002405c:	2800      	cmp	r0, #0
9002405e:	d059      	beq.n	90024114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024060:	44c6      	add	lr, r8
90024062:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024066:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002406a:	4413      	add	r3, r2
9002406c:	b280      	uxth	r0, r0
9002406e:	f897 e002 	ldrb.w	lr, [r7, #2]
90024072:	b2b2      	uxth	r2, r6
90024074:	f897 9000 	ldrb.w	r9, [r7]
90024078:	787f      	ldrb	r7, [r7, #1]
9002407a:	fb00 f602 	mul.w	r6, r0, r2
9002407e:	0100      	lsls	r0, r0, #4
90024080:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90024084:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90024088:	1b80      	subs	r0, r0, r6
9002408a:	fa1f fc82 	uxth.w	ip, r2
9002408e:	b282      	uxth	r2, r0
90024090:	78a0      	ldrb	r0, [r4, #2]
90024092:	eba8 080c 	sub.w	r8, r8, ip
90024096:	4350      	muls	r0, r2
90024098:	fa1f f888 	uxth.w	r8, r8
9002409c:	fb08 0e0e 	mla	lr, r8, lr, r0
900240a0:	78a8      	ldrb	r0, [r5, #2]
900240a2:	fb0c e000 	mla	r0, ip, r0, lr
900240a6:	f893 e002 	ldrb.w	lr, [r3, #2]
900240aa:	fb06 0e0e 	mla	lr, r6, lr, r0
900240ae:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
900240b2:	f894 e000 	ldrb.w	lr, [r4]
900240b6:	fb02 fe0e 	mul.w	lr, r2, lr
900240ba:	fb08 e909 	mla	r9, r8, r9, lr
900240be:	f895 e000 	ldrb.w	lr, [r5]
900240c2:	fb0c 990e 	mla	r9, ip, lr, r9
900240c6:	f893 e000 	ldrb.w	lr, [r3]
900240ca:	785b      	ldrb	r3, [r3, #1]
900240cc:	fb06 9e0e 	mla	lr, r6, lr, r9
900240d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900240d4:	ea4e 0e00 	orr.w	lr, lr, r0
900240d8:	7860      	ldrb	r0, [r4, #1]
900240da:	4350      	muls	r0, r2
900240dc:	786a      	ldrb	r2, [r5, #1]
900240de:	fb08 0007 	mla	r0, r8, r7, r0
900240e2:	fb0c 0202 	mla	r2, ip, r2, r0
900240e6:	fb06 2303 	mla	r3, r6, r3, r2
900240ea:	095b      	lsrs	r3, r3, #5
900240ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900240f0:	ea4e 0303 	orr.w	r3, lr, r3
900240f4:	800b      	strh	r3, [r1, #0]
900240f6:	b003      	add	sp, #12
900240f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900240fc:	af01      	add	r7, sp, #4
900240fe:	e78c      	b.n	9002401a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90024100:	ac01      	add	r4, sp, #4
90024102:	4627      	mov	r7, r4
90024104:	e795      	b.n	90024032 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90024106:	ac01      	add	r4, sp, #4
90024108:	e793      	b.n	90024032 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002410a:	ad01      	add	r5, sp, #4
9002410c:	e7a1      	b.n	90024052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9002410e:	ab01      	add	r3, sp, #4
90024110:	461d      	mov	r5, r3
90024112:	e7ab      	b.n	9002406c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90024114:	ab01      	add	r3, sp, #4
90024116:	e7a9      	b.n	9002406c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90024118 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002411c:	b08f      	sub	sp, #60	@ 0x3c
9002411e:	920c      	str	r2, [sp, #48]	@ 0x30
90024120:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90024122:	900d      	str	r0, [sp, #52]	@ 0x34
90024124:	910a      	str	r1, [sp, #40]	@ 0x28
90024126:	6850      	ldr	r0, [r2, #4]
90024128:	9306      	str	r3, [sp, #24]
9002412a:	6812      	ldr	r2, [r2, #0]
9002412c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90024130:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90024134:	fb00 1303 	mla	r3, r0, r3, r1
90024138:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002413c:	9307      	str	r3, [sp, #28]
9002413e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024140:	681b      	ldr	r3, [r3, #0]
90024142:	9308      	str	r3, [sp, #32]
90024144:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024146:	685c      	ldr	r4, [r3, #4]
90024148:	3404      	adds	r4, #4
9002414a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002414c:	2b00      	cmp	r3, #0
9002414e:	dc03      	bgt.n	90024158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90024150:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024152:	2b00      	cmp	r3, #0
90024154:	f340 81d5 	ble.w	90024502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024158:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002415a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002415e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024162:	1e48      	subs	r0, r1, #1
90024164:	1e56      	subs	r6, r2, #1
90024166:	9b06      	ldr	r3, [sp, #24]
90024168:	2b00      	cmp	r3, #0
9002416a:	f340 80b6 	ble.w	900242da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002416e:	ea5f 472b 	movs.w	r7, fp, asr #16
90024172:	ea4f 4325 	mov.w	r3, r5, asr #16
90024176:	d406      	bmi.n	90024186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024178:	4287      	cmp	r7, r0
9002417a:	da04      	bge.n	90024186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002417c:	2b00      	cmp	r3, #0
9002417e:	db02      	blt.n	90024186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024180:	42b3      	cmp	r3, r6
90024182:	f2c0 80ab 	blt.w	900242dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90024186:	3701      	adds	r7, #1
90024188:	f100 809c 	bmi.w	900242c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002418c:	42b9      	cmp	r1, r7
9002418e:	f2c0 8099 	blt.w	900242c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024192:	3301      	adds	r3, #1
90024194:	f100 8096 	bmi.w	900242c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024198:	429a      	cmp	r2, r3
9002419a:	f2c0 8093 	blt.w	900242c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002419e:	9b06      	ldr	r3, [sp, #24]
900241a0:	930b      	str	r3, [sp, #44]	@ 0x2c
900241a2:	9b07      	ldr	r3, [sp, #28]
900241a4:	9309      	str	r3, [sp, #36]	@ 0x24
900241a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900241a8:	2b00      	cmp	r3, #0
900241aa:	f340 80b4 	ble.w	90024316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900241ae:	9820      	ldr	r0, [sp, #128]	@ 0x80
900241b0:	142e      	asrs	r6, r5, #16
900241b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900241b4:	f3cb 3303 	ubfx	r3, fp, #12, #4
900241b8:	68c7      	ldr	r7, [r0, #12]
900241ba:	ea5f 402b 	movs.w	r0, fp, asr #16
900241be:	f3c5 3103 	ubfx	r1, r5, #12, #4
900241c2:	6892      	ldr	r2, [r2, #8]
900241c4:	f100 80fb 	bmi.w	900243be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900241c8:	f102 3cff 	add.w	ip, r2, #4294967295
900241cc:	4560      	cmp	r0, ip
900241ce:	f280 80f6 	bge.w	900243be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900241d2:	2e00      	cmp	r6, #0
900241d4:	f2c0 80f3 	blt.w	900243be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900241d8:	f107 3cff 	add.w	ip, r7, #4294967295
900241dc:	4566      	cmp	r6, ip
900241de:	f280 80ee 	bge.w	900243be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900241e2:	b212      	sxth	r2, r2
900241e4:	fb06 0002 	mla	r0, r6, r2, r0
900241e8:	9e08      	ldr	r6, [sp, #32]
900241ea:	1837      	adds	r7, r6, r0
900241ec:	5c30      	ldrb	r0, [r6, r0]
900241ee:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900241f2:	eb04 0c08 	add.w	ip, r4, r8
900241f6:	2b00      	cmp	r3, #0
900241f8:	f000 80d3 	beq.w	900243a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900241fc:	787e      	ldrb	r6, [r7, #1]
900241fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024202:	4426      	add	r6, r4
90024204:	2900      	cmp	r1, #0
90024206:	f000 80d4 	beq.w	900243b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002420a:	18b8      	adds	r0, r7, r2
9002420c:	5cba      	ldrb	r2, [r7, r2]
9002420e:	7840      	ldrb	r0, [r0, #1]
90024210:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024214:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024218:	4422      	add	r2, r4
9002421a:	4420      	add	r0, r4
9002421c:	b29b      	uxth	r3, r3
9002421e:	78b7      	ldrb	r7, [r6, #2]
90024220:	b289      	uxth	r1, r1
90024222:	f89c a002 	ldrb.w	sl, [ip, #2]
90024226:	f89c c001 	ldrb.w	ip, [ip, #1]
9002422a:	fb03 f901 	mul.w	r9, r3, r1
9002422e:	011b      	lsls	r3, r3, #4
90024230:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024234:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024238:	eba3 0309 	sub.w	r3, r3, r9
9002423c:	b289      	uxth	r1, r1
9002423e:	b29b      	uxth	r3, r3
90024240:	ebae 0e01 	sub.w	lr, lr, r1
90024244:	435f      	muls	r7, r3
90024246:	fa1f fe8e 	uxth.w	lr, lr
9002424a:	fb0e 770a 	mla	r7, lr, sl, r7
9002424e:	f892 a002 	ldrb.w	sl, [r2, #2]
90024252:	fb01 770a 	mla	r7, r1, sl, r7
90024256:	f890 a002 	ldrb.w	sl, [r0, #2]
9002425a:	fb09 7a0a 	mla	sl, r9, sl, r7
9002425e:	f814 7008 	ldrb.w	r7, [r4, r8]
90024262:	f896 8000 	ldrb.w	r8, [r6]
90024266:	7876      	ldrb	r6, [r6, #1]
90024268:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002426c:	fb03 f808 	mul.w	r8, r3, r8
90024270:	4373      	muls	r3, r6
90024272:	fb0e 8807 	mla	r8, lr, r7, r8
90024276:	7817      	ldrb	r7, [r2, #0]
90024278:	fb0e 330c 	mla	r3, lr, ip, r3
9002427c:	fb01 8807 	mla	r8, r1, r7, r8
90024280:	7807      	ldrb	r7, [r0, #0]
90024282:	fb09 8707 	mla	r7, r9, r7, r8
90024286:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002428a:	ea47 070a 	orr.w	r7, r7, sl
9002428e:	f892 a001 	ldrb.w	sl, [r2, #1]
90024292:	fb01 310a 	mla	r1, r1, sl, r3
90024296:	f890 a001 	ldrb.w	sl, [r0, #1]
9002429a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002429c:	fb09 1a0a 	mla	sl, r9, sl, r1
900242a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900242a4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900242a8:	ea47 070a 	orr.w	r7, r7, sl
900242ac:	801f      	strh	r7, [r3, #0]
900242ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900242b0:	3302      	adds	r3, #2
900242b2:	9309      	str	r3, [sp, #36]	@ 0x24
900242b4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900242b6:	449b      	add	fp, r3
900242b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900242ba:	441d      	add	r5, r3
900242bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900242be:	3b01      	subs	r3, #1
900242c0:	930b      	str	r3, [sp, #44]	@ 0x2c
900242c2:	e770      	b.n	900241a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900242c4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900242c6:	449b      	add	fp, r3
900242c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900242ca:	441d      	add	r5, r3
900242cc:	9b06      	ldr	r3, [sp, #24]
900242ce:	3b01      	subs	r3, #1
900242d0:	9306      	str	r3, [sp, #24]
900242d2:	9b07      	ldr	r3, [sp, #28]
900242d4:	3302      	adds	r3, #2
900242d6:	9307      	str	r3, [sp, #28]
900242d8:	e745      	b.n	90024166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900242da:	d023      	beq.n	90024324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900242dc:	9b06      	ldr	r3, [sp, #24]
900242de:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900242e0:	3b01      	subs	r3, #1
900242e2:	fb00 b003 	mla	r0, r0, r3, fp
900242e6:	1400      	asrs	r0, r0, #16
900242e8:	f53f af59 	bmi.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242ec:	3901      	subs	r1, #1
900242ee:	4288      	cmp	r0, r1
900242f0:	f6bf af55 	bge.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242f4:	991c      	ldr	r1, [sp, #112]	@ 0x70
900242f6:	fb01 5303 	mla	r3, r1, r3, r5
900242fa:	141b      	asrs	r3, r3, #16
900242fc:	f53f af4f 	bmi.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024300:	3a01      	subs	r2, #1
90024302:	4293      	cmp	r3, r2
90024304:	f6bf af4b 	bge.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024308:	9b06      	ldr	r3, [sp, #24]
9002430a:	9309      	str	r3, [sp, #36]	@ 0x24
9002430c:	9b07      	ldr	r3, [sp, #28]
9002430e:	930b      	str	r3, [sp, #44]	@ 0x2c
90024310:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024312:	2b00      	cmp	r3, #0
90024314:	dc70      	bgt.n	900243f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90024316:	9b06      	ldr	r3, [sp, #24]
90024318:	9a07      	ldr	r2, [sp, #28]
9002431a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002431e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024322:	9307      	str	r3, [sp, #28]
90024324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024326:	2b00      	cmp	r3, #0
90024328:	f340 80eb 	ble.w	90024502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9002432c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024330:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024332:	ee30 0a04 	vadd.f32	s0, s0, s8
90024336:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002433a:	eef0 6a62 	vmov.f32	s13, s5
9002433e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024342:	ee31 1a05 	vadd.f32	s2, s2, s10
90024346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002434a:	ee16 ba90 	vmov	fp, s13
9002434e:	eef0 6a43 	vmov.f32	s13, s6
90024352:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024356:	ee16 5a90 	vmov	r5, s13
9002435a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002435e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024362:	ee77 2a62 	vsub.f32	s5, s14, s5
90024366:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002436a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002436e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024372:	ee12 2a90 	vmov	r2, s5
90024376:	eef0 2a47 	vmov.f32	s5, s14
9002437a:	fb92 f3f3 	sdiv	r3, r2, r3
9002437e:	ee13 2a10 	vmov	r2, s6
90024382:	931b      	str	r3, [sp, #108]	@ 0x6c
90024384:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024386:	eeb0 3a67 	vmov.f32	s6, s15
9002438a:	fb92 f3f3 	sdiv	r3, r2, r3
9002438e:	931c      	str	r3, [sp, #112]	@ 0x70
90024390:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024392:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024394:	3b01      	subs	r3, #1
90024396:	930a      	str	r3, [sp, #40]	@ 0x28
90024398:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002439a:	bf08      	it	eq
9002439c:	4613      	moveq	r3, r2
9002439e:	9306      	str	r3, [sp, #24]
900243a0:	e6d3      	b.n	9002414a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900243a2:	b149      	cbz	r1, 900243b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900243a4:	5cba      	ldrb	r2, [r7, r2]
900243a6:	4660      	mov	r0, ip
900243a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900243ac:	4422      	add	r2, r4
900243ae:	4666      	mov	r6, ip
900243b0:	e734      	b.n	9002421c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900243b2:	4660      	mov	r0, ip
900243b4:	4662      	mov	r2, ip
900243b6:	e731      	b.n	9002421c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900243b8:	4660      	mov	r0, ip
900243ba:	4662      	mov	r2, ip
900243bc:	e7f7      	b.n	900243ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900243be:	f110 0c01 	adds.w	ip, r0, #1
900243c2:	f53f af74 	bmi.w	900242ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243c6:	4562      	cmp	r2, ip
900243c8:	f6ff af71 	blt.w	900242ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243cc:	f116 0c01 	adds.w	ip, r6, #1
900243d0:	f53f af6d 	bmi.w	900242ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243d4:	4567      	cmp	r7, ip
900243d6:	f6ff af6a 	blt.w	900242ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243da:	b23f      	sxth	r7, r7
900243dc:	b212      	sxth	r2, r2
900243de:	9701      	str	r7, [sp, #4]
900243e0:	9200      	str	r2, [sp, #0]
900243e2:	e9cd 3104 	strd	r3, r1, [sp, #16]
900243e6:	e9cd 0602 	strd	r0, r6, [sp, #8]
900243ea:	4623      	mov	r3, r4
900243ec:	980d      	ldr	r0, [sp, #52]	@ 0x34
900243ee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900243f2:	f7ff fde7 	bl	90023fc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900243f6:	e75a      	b.n	900242ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243f8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900243fa:	ea4f 462b 	mov.w	r6, fp, asr #16
900243fe:	1428      	asrs	r0, r5, #16
90024400:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024404:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024408:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002440c:	fb02 6000 	mla	r0, r2, r0, r6
90024410:	9e08      	ldr	r6, [sp, #32]
90024412:	f816 8000 	ldrb.w	r8, [r6, r0]
90024416:	1837      	adds	r7, r6, r0
90024418:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9002441c:	eb04 0c08 	add.w	ip, r4, r8
90024420:	2b00      	cmp	r3, #0
90024422:	d060      	beq.n	900244e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90024424:	787e      	ldrb	r6, [r7, #1]
90024426:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002442a:	4426      	add	r6, r4
9002442c:	2900      	cmp	r1, #0
9002442e:	d062      	beq.n	900244f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90024430:	18b8      	adds	r0, r7, r2
90024432:	5cba      	ldrb	r2, [r7, r2]
90024434:	7840      	ldrb	r0, [r0, #1]
90024436:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002443a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002443e:	4422      	add	r2, r4
90024440:	4420      	add	r0, r4
90024442:	b29b      	uxth	r3, r3
90024444:	78b7      	ldrb	r7, [r6, #2]
90024446:	b289      	uxth	r1, r1
90024448:	f89c a002 	ldrb.w	sl, [ip, #2]
9002444c:	f89c c001 	ldrb.w	ip, [ip, #1]
90024450:	fb03 f901 	mul.w	r9, r3, r1
90024454:	011b      	lsls	r3, r3, #4
90024456:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002445a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002445e:	eba3 0309 	sub.w	r3, r3, r9
90024462:	b289      	uxth	r1, r1
90024464:	b29b      	uxth	r3, r3
90024466:	ebae 0e01 	sub.w	lr, lr, r1
9002446a:	435f      	muls	r7, r3
9002446c:	fa1f fe8e 	uxth.w	lr, lr
90024470:	fb0e 770a 	mla	r7, lr, sl, r7
90024474:	f892 a002 	ldrb.w	sl, [r2, #2]
90024478:	fb01 770a 	mla	r7, r1, sl, r7
9002447c:	f890 a002 	ldrb.w	sl, [r0, #2]
90024480:	fb09 7a0a 	mla	sl, r9, sl, r7
90024484:	f814 7008 	ldrb.w	r7, [r4, r8]
90024488:	f896 8000 	ldrb.w	r8, [r6]
9002448c:	7876      	ldrb	r6, [r6, #1]
9002448e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024492:	fb03 f808 	mul.w	r8, r3, r8
90024496:	4373      	muls	r3, r6
90024498:	7856      	ldrb	r6, [r2, #1]
9002449a:	fb0e 8807 	mla	r8, lr, r7, r8
9002449e:	7817      	ldrb	r7, [r2, #0]
900244a0:	fb0e 330c 	mla	r3, lr, ip, r3
900244a4:	fb01 8807 	mla	r8, r1, r7, r8
900244a8:	7807      	ldrb	r7, [r0, #0]
900244aa:	fb01 3306 	mla	r3, r1, r6, r3
900244ae:	fb09 8707 	mla	r7, r9, r7, r8
900244b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900244b6:	ea47 070a 	orr.w	r7, r7, sl
900244ba:	f890 a001 	ldrb.w	sl, [r0, #1]
900244be:	fb09 3a0a 	mla	sl, r9, sl, r3
900244c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900244c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900244c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900244cc:	ea47 070a 	orr.w	r7, r7, sl
900244d0:	f823 7b02 	strh.w	r7, [r3], #2
900244d4:	930b      	str	r3, [sp, #44]	@ 0x2c
900244d6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900244d8:	449b      	add	fp, r3
900244da:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900244dc:	441d      	add	r5, r3
900244de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900244e0:	3b01      	subs	r3, #1
900244e2:	9309      	str	r3, [sp, #36]	@ 0x24
900244e4:	e714      	b.n	90024310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900244e6:	b149      	cbz	r1, 900244fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900244e8:	5cba      	ldrb	r2, [r7, r2]
900244ea:	4660      	mov	r0, ip
900244ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900244f0:	4422      	add	r2, r4
900244f2:	4666      	mov	r6, ip
900244f4:	e7a5      	b.n	90024442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900244f6:	4660      	mov	r0, ip
900244f8:	4662      	mov	r2, ip
900244fa:	e7a2      	b.n	90024442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900244fc:	4660      	mov	r0, ip
900244fe:	4662      	mov	r2, ip
90024500:	e7f7      	b.n	900244f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90024502:	b00f      	add	sp, #60	@ 0x3c
90024504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024508 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90024508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002450c:	b085      	sub	sp, #20
9002450e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90024512:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90024516:	9102      	str	r1, [sp, #8]
90024518:	2c00      	cmp	r4, #0
9002451a:	fb04 710c 	mla	r1, r4, ip, r7
9002451e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90024522:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90024526:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9002452a:	eb02 0e01 	add.w	lr, r2, r1
9002452e:	f2c0 8122 	blt.w	90024776 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024532:	45a0      	cmp	r8, r4
90024534:	f340 811f 	ble.w	90024776 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024538:	2f00      	cmp	r7, #0
9002453a:	f2c0 811a 	blt.w	90024772 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002453e:	45bc      	cmp	ip, r7
90024540:	f340 8117 	ble.w	90024772 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024544:	5c52      	ldrb	r2, [r2, r1]
90024546:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002454a:	1c7a      	adds	r2, r7, #1
9002454c:	f100 8116 	bmi.w	9002477c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024550:	4594      	cmp	ip, r2
90024552:	f340 8113 	ble.w	9002477c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024556:	2e00      	cmp	r6, #0
90024558:	f000 8112 	beq.w	90024780 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9002455c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024560:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024564:	3401      	adds	r4, #1
90024566:	f100 810f 	bmi.w	90024788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002456a:	45a0      	cmp	r8, r4
9002456c:	f340 810c 	ble.w	90024788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024570:	2800      	cmp	r0, #0
90024572:	f000 810c 	beq.w	9002478e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90024576:	2f00      	cmp	r7, #0
90024578:	f2c0 8104 	blt.w	90024784 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002457c:	45bc      	cmp	ip, r7
9002457e:	f340 8101 	ble.w	90024784 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024582:	f81e 200c 	ldrb.w	r2, [lr, ip]
90024586:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002458a:	3701      	adds	r7, #1
9002458c:	f100 8102 	bmi.w	90024794 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024590:	45bc      	cmp	ip, r7
90024592:	f340 80ff 	ble.w	90024794 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024596:	2e00      	cmp	r6, #0
90024598:	f000 80fe 	beq.w	90024798 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002459c:	44f4      	add	ip, lr
9002459e:	f89c 2001 	ldrb.w	r2, [ip, #1]
900245a2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900245a6:	b2b6      	uxth	r6, r6
900245a8:	b280      	uxth	r0, r0
900245aa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900245ae:	fb00 fe06 	mul.w	lr, r0, r6
900245b2:	0136      	lsls	r6, r6, #4
900245b4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900245b8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900245bc:	eba6 070e 	sub.w	r7, r6, lr
900245c0:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900245c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
900245c8:	b280      	uxth	r0, r0
900245ca:	b2bf      	uxth	r7, r7
900245cc:	1a1b      	subs	r3, r3, r0
900245ce:	ea4f 6812 	mov.w	r8, r2, lsr #24
900245d2:	fb0a f607 	mul.w	r6, sl, r7
900245d6:	b29b      	uxth	r3, r3
900245d8:	fb0b 6603 	mla	r6, fp, r3, r6
900245dc:	fb00 6609 	mla	r6, r0, r9, r6
900245e0:	fb0e 6608 	mla	r6, lr, r8, r6
900245e4:	f3c6 2607 	ubfx	r6, r6, #8, #8
900245e8:	9600      	str	r6, [sp, #0]
900245ea:	2e00      	cmp	r6, #0
900245ec:	f000 80be 	beq.w	9002476c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900245f0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900245f4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900245f8:	9e02      	ldr	r6, [sp, #8]
900245fa:	fb0b fc0c 	mul.w	ip, fp, ip
900245fe:	fb0b f505 	mul.w	r5, fp, r5
90024602:	8836      	ldrh	r6, [r6, #0]
90024604:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024608:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002460c:	9501      	str	r5, [sp, #4]
9002460e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90024612:	44dc      	add	ip, fp
90024614:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024618:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002461c:	9503      	str	r5, [sp, #12]
9002461e:	9d01      	ldr	r5, [sp, #4]
90024620:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90024624:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024628:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002462c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024630:	fb0a fc0c 	mul.w	ip, sl, ip
90024634:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024638:	fb0a fa01 	mul.w	sl, sl, r1
9002463c:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024640:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024644:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90024648:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002464c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024650:	4465      	add	r5, ip
90024652:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024656:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
9002465a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002465e:	fb09 fc0c 	mul.w	ip, r9, ip
90024662:	0a2d      	lsrs	r5, r5, #8
90024664:	fb09 f904 	mul.w	r9, r9, r4
90024668:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002466c:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024670:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024674:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90024678:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002467c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024680:	437d      	muls	r5, r7
90024682:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024686:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002468a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002468e:	4461      	add	r1, ip
90024690:	fb08 f404 	mul.w	r4, r8, r4
90024694:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024698:	fb08 f802 	mul.w	r8, r8, r2
9002469c:	0a09      	lsrs	r1, r1, #8
9002469e:	0a22      	lsrs	r2, r4, #8
900246a0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900246a4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900246a8:	fb07 f70a 	mul.w	r7, r7, sl
900246ac:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900246b0:	4414      	add	r4, r2
900246b2:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900246b6:	0a24      	lsrs	r4, r4, #8
900246b8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900246bc:	9a03      	ldr	r2, [sp, #12]
900246be:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900246c2:	fb02 5503 	mla	r5, r2, r3, r5
900246c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
900246ca:	9a00      	ldr	r2, [sp, #0]
900246cc:	fb04 540e 	mla	r4, r4, lr, r5
900246d0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900246d4:	1235      	asrs	r5, r6, #8
900246d6:	fb01 4100 	mla	r1, r1, r0, r4
900246da:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900246de:	0a09      	lsrs	r1, r1, #8
900246e0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900246e4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900246e8:	fb03 7101 	mla	r1, r3, r1, r7
900246ec:	fb0e 1e08 	mla	lr, lr, r8, r1
900246f0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900246f4:	fb00 e101 	mla	r1, r0, r1, lr
900246f8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900246fc:	b287      	uxth	r7, r0
900246fe:	0a09      	lsrs	r1, r1, #8
90024700:	437a      	muls	r2, r7
90024702:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024706:	1c53      	adds	r3, r2, #1
90024708:	4321      	orrs	r1, r4
9002470a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002470e:	0c0a      	lsrs	r2, r1, #16
90024710:	f3c1 2407 	ubfx	r4, r1, #8, #8
90024714:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90024718:	b2c8      	uxtb	r0, r1
9002471a:	fb12 f207 	smulbb	r2, r2, r7
9002471e:	fb14 f407 	smulbb	r4, r4, r7
90024722:	b2db      	uxtb	r3, r3
90024724:	fb10 f007 	smulbb	r0, r0, r7
90024728:	fb05 2503 	mla	r5, r5, r3, r2
9002472c:	10f2      	asrs	r2, r6, #3
9002472e:	00f6      	lsls	r6, r6, #3
90024730:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024734:	b2ad      	uxth	r5, r5
90024736:	b2f6      	uxtb	r6, r6
90024738:	fb02 4203 	mla	r2, r2, r3, r4
9002473c:	fb06 0303 	mla	r3, r6, r3, r0
90024740:	b294      	uxth	r4, r2
90024742:	b299      	uxth	r1, r3
90024744:	1c6b      	adds	r3, r5, #1
90024746:	1c62      	adds	r2, r4, #1
90024748:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002474c:	1c4b      	adds	r3, r1, #1
9002474e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024752:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024756:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002475a:	0952      	lsrs	r2, r2, #5
9002475c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024760:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024764:	432b      	orrs	r3, r5
90024766:	4313      	orrs	r3, r2
90024768:	9a02      	ldr	r2, [sp, #8]
9002476a:	8013      	strh	r3, [r2, #0]
9002476c:	b005      	add	sp, #20
9002476e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024772:	2500      	movs	r5, #0
90024774:	e6e9      	b.n	9002454a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90024776:	2100      	movs	r1, #0
90024778:	460d      	mov	r5, r1
9002477a:	e6f3      	b.n	90024564 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002477c:	2100      	movs	r1, #0
9002477e:	e6f1      	b.n	90024564 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024780:	4631      	mov	r1, r6
90024782:	e6ef      	b.n	90024564 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024784:	2400      	movs	r4, #0
90024786:	e700      	b.n	9002458a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90024788:	2200      	movs	r2, #0
9002478a:	4614      	mov	r4, r2
9002478c:	e70b      	b.n	900245a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002478e:	4602      	mov	r2, r0
90024790:	4604      	mov	r4, r0
90024792:	e708      	b.n	900245a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024794:	2200      	movs	r2, #0
90024796:	e706      	b.n	900245a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024798:	4632      	mov	r2, r6
9002479a:	e704      	b.n	900245a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002479c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002479c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900247a0:	b09f      	sub	sp, #124	@ 0x7c
900247a2:	921b      	str	r2, [sp, #108]	@ 0x6c
900247a4:	9309      	str	r3, [sp, #36]	@ 0x24
900247a6:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900247a8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
900247ac:	901d      	str	r0, [sp, #116]	@ 0x74
900247ae:	931c      	str	r3, [sp, #112]	@ 0x70
900247b0:	6850      	ldr	r0, [r2, #4]
900247b2:	9119      	str	r1, [sp, #100]	@ 0x64
900247b4:	6812      	ldr	r2, [r2, #0]
900247b6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900247b8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
900247bc:	fb00 1303 	mla	r3, r0, r3, r1
900247c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900247c4:	930c      	str	r3, [sp, #48]	@ 0x30
900247c6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900247c8:	681b      	ldr	r3, [r3, #0]
900247ca:	9312      	str	r3, [sp, #72]	@ 0x48
900247cc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900247ce:	685e      	ldr	r6, [r3, #4]
900247d0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
900247d4:	3604      	adds	r6, #4
900247d6:	930d      	str	r3, [sp, #52]	@ 0x34
900247d8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900247da:	2b00      	cmp	r3, #0
900247dc:	dc03      	bgt.n	900247e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900247de:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900247e0:	2b00      	cmp	r3, #0
900247e2:	f340 8387 	ble.w	90024ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900247e6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900247e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900247ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900247f0:	1e48      	subs	r0, r1, #1
900247f2:	1e57      	subs	r7, r2, #1
900247f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900247f6:	2b00      	cmp	r3, #0
900247f8:	f340 8194 	ble.w	90024b24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900247fc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900247fe:	142b      	asrs	r3, r5, #16
90024800:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024804:	d406      	bmi.n	90024814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024806:	4584      	cmp	ip, r0
90024808:	da04      	bge.n	90024814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002480a:	2b00      	cmp	r3, #0
9002480c:	db02      	blt.n	90024814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002480e:	42bb      	cmp	r3, r7
90024810:	f2c0 8189 	blt.w	90024b26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024814:	f11c 0c01 	adds.w	ip, ip, #1
90024818:	f100 8177 	bmi.w	90024b0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002481c:	4561      	cmp	r1, ip
9002481e:	f2c0 8174 	blt.w	90024b0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024822:	3301      	adds	r3, #1
90024824:	f100 8171 	bmi.w	90024b0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024828:	429a      	cmp	r2, r3
9002482a:	f2c0 816e 	blt.w	90024b0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002482e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024830:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90024832:	931a      	str	r3, [sp, #104]	@ 0x68
90024834:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90024836:	2b00      	cmp	r3, #0
90024838:	f340 8193 	ble.w	90024b62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9002483c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002483e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90024842:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024846:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002484a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002484c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90024850:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024852:	141b      	asrs	r3, r3, #16
90024854:	f100 81d6 	bmi.w	90024c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024858:	f100 38ff 	add.w	r8, r0, #4294967295
9002485c:	4543      	cmp	r3, r8
9002485e:	f280 81d1 	bge.w	90024c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024862:	f1bc 0f00 	cmp.w	ip, #0
90024866:	f2c0 81cd 	blt.w	90024c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002486a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002486e:	45c4      	cmp	ip, r8
90024870:	f280 81c8 	bge.w	90024c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024874:	b200      	sxth	r0, r0
90024876:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024878:	fb0c 3300 	mla	r3, ip, r0, r3
9002487c:	eb04 0803 	add.w	r8, r4, r3
90024880:	5ce3      	ldrb	r3, [r4, r3]
90024882:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024886:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002488a:	2a00      	cmp	r2, #0
9002488c:	f000 81af 	beq.w	90024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024890:	f898 c001 	ldrb.w	ip, [r8, #1]
90024894:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024898:	940e      	str	r4, [sp, #56]	@ 0x38
9002489a:	0e24      	lsrs	r4, r4, #24
9002489c:	9415      	str	r4, [sp, #84]	@ 0x54
9002489e:	b179      	cbz	r1, 900248c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900248a0:	eb08 0c00 	add.w	ip, r8, r0
900248a4:	f818 0000 	ldrb.w	r0, [r8, r0]
900248a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900248ac:	900a      	str	r0, [sp, #40]	@ 0x28
900248ae:	0e00      	lsrs	r0, r0, #24
900248b0:	9013      	str	r0, [sp, #76]	@ 0x4c
900248b2:	f89c 0001 	ldrb.w	r0, [ip, #1]
900248b6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900248ba:	900f      	str	r0, [sp, #60]	@ 0x3c
900248bc:	0e00      	lsrs	r0, r0, #24
900248be:	9016      	str	r0, [sp, #88]	@ 0x58
900248c0:	b292      	uxth	r2, r2
900248c2:	9815      	ldr	r0, [sp, #84]	@ 0x54
900248c4:	b289      	uxth	r1, r1
900248c6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900248c8:	fb02 f901 	mul.w	r9, r2, r1
900248cc:	0112      	lsls	r2, r2, #4
900248ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900248d2:	eba2 0809 	sub.w	r8, r2, r9
900248d6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900248da:	b289      	uxth	r1, r1
900248dc:	fa1f f888 	uxth.w	r8, r8
900248e0:	1a52      	subs	r2, r2, r1
900248e2:	fb08 f000 	mul.w	r0, r8, r0
900248e6:	b292      	uxth	r2, r2
900248e8:	fb02 000e 	mla	r0, r2, lr, r0
900248ec:	fb01 0004 	mla	r0, r1, r4, r0
900248f0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900248f2:	fb09 0004 	mla	r0, r9, r4, r0
900248f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
900248fa:	2800      	cmp	r0, #0
900248fc:	f000 80fa 	beq.w	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024900:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024904:	d01b      	beq.n	9002493e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024906:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002490a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002490e:	fb0e fa0a 	mul.w	sl, lr, sl
90024912:	fb0e fe03 	mul.w	lr, lr, r3
90024916:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002491a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002491e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024922:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024926:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002492a:	4453      	add	r3, sl
9002492c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024930:	0a1b      	lsrs	r3, r3, #8
90024932:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024936:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002493a:	ea43 030c 	orr.w	r3, r3, ip
9002493e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024940:	2cff      	cmp	r4, #255	@ 0xff
90024942:	d021      	beq.n	90024988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90024944:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024946:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002494a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002494c:	fb04 fb0b 	mul.w	fp, r4, fp
90024950:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024952:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024956:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024958:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002495c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024960:	fb04 fa0a 	mul.w	sl, r4, sl
90024964:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024968:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002496c:	44de      	add	lr, fp
9002496e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024972:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024976:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002497a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002497e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024982:	ea4e 040a 	orr.w	r4, lr, sl
90024986:	940e      	str	r4, [sp, #56]	@ 0x38
90024988:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002498a:	2cff      	cmp	r4, #255	@ 0xff
9002498c:	d021      	beq.n	900249d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002498e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024990:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024994:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024996:	fb04 fb0b 	mul.w	fp, r4, fp
9002499a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002499c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900249a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900249a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900249a6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900249aa:	fb04 fa0a 	mul.w	sl, r4, sl
900249ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900249b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900249b6:	44de      	add	lr, fp
900249b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900249bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900249c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900249c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900249c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900249cc:	ea4e 040a 	orr.w	r4, lr, sl
900249d0:	940a      	str	r4, [sp, #40]	@ 0x28
900249d2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900249d4:	2cff      	cmp	r4, #255	@ 0xff
900249d6:	d021      	beq.n	90024a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900249d8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900249da:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900249de:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900249e0:	fb04 fb0b 	mul.w	fp, r4, fp
900249e4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900249e6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900249ea:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900249ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900249f0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900249f4:	fb04 fa0a 	mul.w	sl, r4, sl
900249f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900249fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024a00:	44de      	add	lr, fp
90024a02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024a06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024a0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024a0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024a12:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024a16:	ea4e 040a 	orr.w	r4, lr, sl
90024a1a:	940f      	str	r4, [sp, #60]	@ 0x3c
90024a1c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a1e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90024a22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024a26:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024a2a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024a2c:	fb08 fc0c 	mul.w	ip, r8, ip
90024a30:	fb02 cc0e 	mla	ip, r2, lr, ip
90024a34:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024a38:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024a3a:	fb01 cc0e 	mla	ip, r1, lr, ip
90024a3e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024a42:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024a44:	fb09 cc0e 	mla	ip, r9, lr, ip
90024a48:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90024a4c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024a4e:	fb08 f80e 	mul.w	r8, r8, lr
90024a52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024a56:	fb02 8303 	mla	r3, r2, r3, r8
90024a5a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024a5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024a60:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90024a64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024a66:	fb01 330a 	mla	r3, r1, sl, r3
90024a6a:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90024a6e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90024a70:	fb09 3901 	mla	r9, r9, r1, r3
90024a74:	883b      	ldrh	r3, [r7, #0]
90024a76:	4342      	muls	r2, r0
90024a78:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024a7c:	1c50      	adds	r0, r2, #1
90024a7e:	1219      	asrs	r1, r3, #8
90024a80:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024a84:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024a88:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024a8c:	ea4c 0c09 	orr.w	ip, ip, r9
90024a90:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024a94:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024a98:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024a9c:	b2c0      	uxtb	r0, r0
90024a9e:	fb12 f204 	smulbb	r2, r2, r4
90024aa2:	fa5f fc8c 	uxtb.w	ip, ip
90024aa6:	fb1e fe04 	smulbb	lr, lr, r4
90024aaa:	fb01 2100 	mla	r1, r1, r0, r2
90024aae:	10da      	asrs	r2, r3, #3
90024ab0:	fb1c fc04 	smulbb	ip, ip, r4
90024ab4:	00db      	lsls	r3, r3, #3
90024ab6:	b289      	uxth	r1, r1
90024ab8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024abc:	b2db      	uxtb	r3, r3
90024abe:	fb02 e200 	mla	r2, r2, r0, lr
90024ac2:	fb03 c300 	mla	r3, r3, r0, ip
90024ac6:	b292      	uxth	r2, r2
90024ac8:	fa1f fc83 	uxth.w	ip, r3
90024acc:	1c4b      	adds	r3, r1, #1
90024ace:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024ad2:	f10c 0301 	add.w	r3, ip, #1
90024ad6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024ada:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90024ade:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024ae2:	430b      	orrs	r3, r1
90024ae4:	1c51      	adds	r1, r2, #1
90024ae6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024aea:	0952      	lsrs	r2, r2, #5
90024aec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024af0:	4313      	orrs	r3, r2
90024af2:	803b      	strh	r3, [r7, #0]
90024af4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024af6:	3702      	adds	r7, #2
90024af8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024afa:	441a      	add	r2, r3
90024afc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024afe:	441d      	add	r5, r3
90024b00:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90024b02:	9229      	str	r2, [sp, #164]	@ 0xa4
90024b04:	3b01      	subs	r3, #1
90024b06:	931a      	str	r3, [sp, #104]	@ 0x68
90024b08:	e694      	b.n	90024834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90024b0a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024b0c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024b0e:	441c      	add	r4, r3
90024b10:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024b12:	441d      	add	r5, r3
90024b14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024b16:	9429      	str	r4, [sp, #164]	@ 0xa4
90024b18:	3b01      	subs	r3, #1
90024b1a:	9309      	str	r3, [sp, #36]	@ 0x24
90024b1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024b1e:	3302      	adds	r3, #2
90024b20:	930c      	str	r3, [sp, #48]	@ 0x30
90024b22:	e667      	b.n	900247f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024b24:	d024      	beq.n	90024b70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90024b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024b28:	982b      	ldr	r0, [sp, #172]	@ 0xac
90024b2a:	3b01      	subs	r3, #1
90024b2c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024b2e:	fb00 4003 	mla	r0, r0, r3, r4
90024b32:	1400      	asrs	r0, r0, #16
90024b34:	f53f ae7b 	bmi.w	9002482e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024b38:	3901      	subs	r1, #1
90024b3a:	4288      	cmp	r0, r1
90024b3c:	f6bf ae77 	bge.w	9002482e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024b40:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90024b42:	fb01 5303 	mla	r3, r1, r3, r5
90024b46:	141b      	asrs	r3, r3, #16
90024b48:	f53f ae71 	bmi.w	9002482e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024b4c:	3a01      	subs	r2, #1
90024b4e:	4293      	cmp	r3, r2
90024b50:	f6bf ae6d 	bge.w	9002482e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024b54:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90024b58:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90024b5c:	f1bb 0f00 	cmp.w	fp, #0
90024b60:	dc70      	bgt.n	90024c44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90024b62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024b64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024b68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024b6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024b6e:	930c      	str	r3, [sp, #48]	@ 0x30
90024b70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024b72:	2b00      	cmp	r3, #0
90024b74:	f340 81be 	ble.w	90024ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90024b78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024b7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024b7e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024b82:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024b86:	eef0 6a62 	vmov.f32	s13, s5
90024b8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024b8e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024b92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024b96:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90024b9a:	eef0 6a43 	vmov.f32	s13, s6
90024b9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024ba2:	ee16 5a90 	vmov	r5, s13
90024ba6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024baa:	ee61 7a27 	vmul.f32	s15, s2, s15
90024bae:	ee77 2a62 	vsub.f32	s5, s14, s5
90024bb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024bb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024bba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024bbe:	ee12 2a90 	vmov	r2, s5
90024bc2:	eef0 2a47 	vmov.f32	s5, s14
90024bc6:	fb92 f3f3 	sdiv	r3, r2, r3
90024bca:	ee13 2a10 	vmov	r2, s6
90024bce:	932b      	str	r3, [sp, #172]	@ 0xac
90024bd0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024bd2:	eeb0 3a67 	vmov.f32	s6, s15
90024bd6:	fb92 f3f3 	sdiv	r3, r2, r3
90024bda:	932c      	str	r3, [sp, #176]	@ 0xb0
90024bdc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024bde:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90024be0:	3b01      	subs	r3, #1
90024be2:	9319      	str	r3, [sp, #100]	@ 0x64
90024be4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024be6:	bf08      	it	eq
90024be8:	4613      	moveq	r3, r2
90024bea:	9309      	str	r3, [sp, #36]	@ 0x24
90024bec:	e5f4      	b.n	900247d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024bee:	2900      	cmp	r1, #0
90024bf0:	f43f ae66 	beq.w	900248c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024bf4:	f818 0000 	ldrb.w	r0, [r8, r0]
90024bf8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024bfc:	900a      	str	r0, [sp, #40]	@ 0x28
90024bfe:	0e00      	lsrs	r0, r0, #24
90024c00:	9013      	str	r0, [sp, #76]	@ 0x4c
90024c02:	e65d      	b.n	900248c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024c04:	f113 0801 	adds.w	r8, r3, #1
90024c08:	f53f af74 	bmi.w	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024c0c:	4540      	cmp	r0, r8
90024c0e:	f6ff af71 	blt.w	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024c12:	f11c 0801 	adds.w	r8, ip, #1
90024c16:	f53f af6d 	bmi.w	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024c1a:	45c6      	cmp	lr, r8
90024c1c:	f6ff af6a 	blt.w	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024c20:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90024c22:	b200      	sxth	r0, r0
90024c24:	9302      	str	r3, [sp, #8]
90024c26:	fa0f f38e 	sxth.w	r3, lr
90024c2a:	9000      	str	r0, [sp, #0]
90024c2c:	9301      	str	r3, [sp, #4]
90024c2e:	4633      	mov	r3, r6
90024c30:	981d      	ldr	r0, [sp, #116]	@ 0x74
90024c32:	e9cd 1405 	strd	r1, r4, [sp, #20]
90024c36:	e9cd c203 	strd	ip, r2, [sp, #12]
90024c3a:	4639      	mov	r1, r7
90024c3c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90024c3e:	f7ff fc63 	bl	90024508 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90024c42:	e757      	b.n	90024af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024c44:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024c46:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024c4a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024c4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024c50:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90024c52:	1427      	asrs	r7, r4, #16
90024c54:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024c56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c5a:	142b      	asrs	r3, r5, #16
90024c5c:	fb01 7303 	mla	r3, r1, r3, r7
90024c60:	18e7      	adds	r7, r4, r3
90024c62:	5ce3      	ldrb	r3, [r4, r3]
90024c64:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024c68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024c6c:	2a00      	cmp	r2, #0
90024c6e:	f000 8137 	beq.w	90024ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90024c72:	f897 e001 	ldrb.w	lr, [r7, #1]
90024c76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90024c7a:	9410      	str	r4, [sp, #64]	@ 0x40
90024c7c:	0e24      	lsrs	r4, r4, #24
90024c7e:	9417      	str	r4, [sp, #92]	@ 0x5c
90024c80:	b170      	cbz	r0, 90024ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024c82:	eb07 0e01 	add.w	lr, r7, r1
90024c86:	5c79      	ldrb	r1, [r7, r1]
90024c88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024c8c:	910b      	str	r1, [sp, #44]	@ 0x2c
90024c8e:	0e09      	lsrs	r1, r1, #24
90024c90:	9114      	str	r1, [sp, #80]	@ 0x50
90024c92:	f89e 1001 	ldrb.w	r1, [lr, #1]
90024c96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024c9a:	9111      	str	r1, [sp, #68]	@ 0x44
90024c9c:	0e09      	lsrs	r1, r1, #24
90024c9e:	9118      	str	r1, [sp, #96]	@ 0x60
90024ca0:	b292      	uxth	r2, r2
90024ca2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90024ca4:	b280      	uxth	r0, r0
90024ca6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024ca8:	fb02 f800 	mul.w	r8, r2, r0
90024cac:	0112      	lsls	r2, r2, #4
90024cae:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024cb2:	eba2 0e08 	sub.w	lr, r2, r8
90024cb6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90024cba:	b280      	uxth	r0, r0
90024cbc:	fa1f fe8e 	uxth.w	lr, lr
90024cc0:	1a12      	subs	r2, r2, r0
90024cc2:	fb0e f101 	mul.w	r1, lr, r1
90024cc6:	b292      	uxth	r2, r2
90024cc8:	fb02 110c 	mla	r1, r2, ip, r1
90024ccc:	fb00 1104 	mla	r1, r0, r4, r1
90024cd0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90024cd2:	fb08 1104 	mla	r1, r8, r4, r1
90024cd6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024cda:	2900      	cmp	r1, #0
90024cdc:	f000 80f5 	beq.w	90024eca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90024ce0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024ce4:	d019      	beq.n	90024d1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90024ce6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024cea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024cee:	fb0c fa0a 	mul.w	sl, ip, sl
90024cf2:	fb0c fc03 	mul.w	ip, ip, r3
90024cf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024cfa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024cfe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90024d02:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024d06:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024d0a:	4453      	add	r3, sl
90024d0c:	0a3f      	lsrs	r7, r7, #8
90024d0e:	0a1b      	lsrs	r3, r3, #8
90024d10:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024d14:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024d18:	433b      	orrs	r3, r7
90024d1a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90024d1c:	2cff      	cmp	r4, #255	@ 0xff
90024d1e:	d020      	beq.n	90024d62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90024d20:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024d22:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024d26:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90024d28:	4367      	muls	r7, r4
90024d2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024d2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024d30:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024d34:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90024d36:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024d3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024d3e:	fb04 fa0a 	mul.w	sl, r4, sl
90024d42:	44bc      	add	ip, r7
90024d44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024d50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024d54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024d5c:	ea4c 040a 	orr.w	r4, ip, sl
90024d60:	9410      	str	r4, [sp, #64]	@ 0x40
90024d62:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024d64:	2cff      	cmp	r4, #255	@ 0xff
90024d66:	d020      	beq.n	90024daa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90024d68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024d6a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024d6e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024d70:	4367      	muls	r7, r4
90024d72:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024d74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024d78:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024d7c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90024d7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024d82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024d86:	fb04 fa0a 	mul.w	sl, r4, sl
90024d8a:	44bc      	add	ip, r7
90024d8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024d90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024d98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024d9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024da0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024da4:	ea4c 040a 	orr.w	r4, ip, sl
90024da8:	940b      	str	r4, [sp, #44]	@ 0x2c
90024daa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90024dac:	2cff      	cmp	r4, #255	@ 0xff
90024dae:	d020      	beq.n	90024df2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90024db0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024db2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024db6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90024db8:	4367      	muls	r7, r4
90024dba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024dbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024dc0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024dc4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90024dc6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024dca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024dce:	fb04 fa0a 	mul.w	sl, r4, sl
90024dd2:	44bc      	add	ip, r7
90024dd4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024dd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ddc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024de0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024de4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024de8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024dec:	ea4c 040a 	orr.w	r4, ip, sl
90024df0:	9411      	str	r4, [sp, #68]	@ 0x44
90024df2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024df4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90024df8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024dfc:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024e00:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024e02:	fb0e f707 	mul.w	r7, lr, r7
90024e06:	fb02 770c 	mla	r7, r2, ip, r7
90024e0a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024e0e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024e10:	fb00 770c 	mla	r7, r0, ip, r7
90024e14:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024e18:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024e1a:	fb08 770c 	mla	r7, r8, ip, r7
90024e1e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90024e22:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024e24:	fb0e fe0c 	mul.w	lr, lr, ip
90024e28:	0a3f      	lsrs	r7, r7, #8
90024e2a:	fb02 e303 	mla	r3, r2, r3, lr
90024e2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024e30:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90024e34:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90024e38:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90024e3a:	fb00 330a 	mla	r3, r0, sl, r3
90024e3e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90024e42:	f8b9 0000 	ldrh.w	r0, [r9]
90024e46:	fb08 3c0c 	mla	ip, r8, ip, r3
90024e4a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024e4c:	1202      	asrs	r2, r0, #8
90024e4e:	434b      	muls	r3, r1
90024e50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e54:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90024e58:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024e5c:	1c59      	adds	r1, r3, #1
90024e5e:	ea47 070c 	orr.w	r7, r7, ip
90024e62:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024e66:	0c3b      	lsrs	r3, r7, #16
90024e68:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024e6c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024e70:	b2ff      	uxtb	r7, r7
90024e72:	fb13 f304 	smulbb	r3, r3, r4
90024e76:	b2c9      	uxtb	r1, r1
90024e78:	fb1c fc04 	smulbb	ip, ip, r4
90024e7c:	fb02 3201 	mla	r2, r2, r1, r3
90024e80:	10c3      	asrs	r3, r0, #3
90024e82:	fb17 f704 	smulbb	r7, r7, r4
90024e86:	00c0      	lsls	r0, r0, #3
90024e88:	b292      	uxth	r2, r2
90024e8a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024e8e:	b2c0      	uxtb	r0, r0
90024e90:	fb03 c301 	mla	r3, r3, r1, ip
90024e94:	f102 0c01 	add.w	ip, r2, #1
90024e98:	fb00 7001 	mla	r0, r0, r1, r7
90024e9c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90024ea0:	b280      	uxth	r0, r0
90024ea2:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90024ea6:	b29b      	uxth	r3, r3
90024ea8:	1c42      	adds	r2, r0, #1
90024eaa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024eae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024eb2:	ea42 020c 	orr.w	r2, r2, ip
90024eb6:	f103 0c01 	add.w	ip, r3, #1
90024eba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024ebe:	095b      	lsrs	r3, r3, #5
90024ec0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024ec4:	431a      	orrs	r2, r3
90024ec6:	f8a9 2000 	strh.w	r2, [r9]
90024eca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024ecc:	f109 0902 	add.w	r9, r9, #2
90024ed0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024ed2:	f10b 3bff 	add.w	fp, fp, #4294967295
90024ed6:	441a      	add	r2, r3
90024ed8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024eda:	9229      	str	r2, [sp, #164]	@ 0xa4
90024edc:	441d      	add	r5, r3
90024ede:	e63d      	b.n	90024b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90024ee0:	2800      	cmp	r0, #0
90024ee2:	f43f aedd 	beq.w	90024ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024ee6:	5c79      	ldrb	r1, [r7, r1]
90024ee8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024eec:	910b      	str	r1, [sp, #44]	@ 0x2c
90024eee:	0e09      	lsrs	r1, r1, #24
90024ef0:	9114      	str	r1, [sp, #80]	@ 0x50
90024ef2:	e6d5      	b.n	90024ca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90024ef4:	b01f      	add	sp, #124	@ 0x7c
90024ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024efa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90024efa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024efe:	b089      	sub	sp, #36	@ 0x24
90024f00:	9101      	str	r1, [sp, #4]
90024f02:	9801      	ldr	r0, [sp, #4]
90024f04:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90024f08:	8800      	ldrh	r0, [r0, #0]
90024f0a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90024f0e:	1206      	asrs	r6, r0, #8
90024f10:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90024f14:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90024f18:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90024f1c:	9602      	str	r6, [sp, #8]
90024f1e:	10c6      	asrs	r6, r0, #3
90024f20:	00c0      	lsls	r0, r0, #3
90024f22:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90024f26:	b2c0      	uxtb	r0, r0
90024f28:	9603      	str	r6, [sp, #12]
90024f2a:	9004      	str	r0, [sp, #16]
90024f2c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90024f30:	fb07 100c 	mla	r0, r7, ip, r1
90024f34:	2f00      	cmp	r7, #0
90024f36:	eb02 0e00 	add.w	lr, r2, r0
90024f3a:	f2c0 810a 	blt.w	90025152 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90024f3e:	45b8      	cmp	r8, r7
90024f40:	f340 8107 	ble.w	90025152 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90024f44:	2900      	cmp	r1, #0
90024f46:	f2c0 8102 	blt.w	9002514e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90024f4a:	458c      	cmp	ip, r1
90024f4c:	f340 80ff 	ble.w	9002514e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90024f50:	5c12      	ldrb	r2, [r2, r0]
90024f52:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90024f56:	1c4a      	adds	r2, r1, #1
90024f58:	f100 80fe 	bmi.w	90025158 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90024f5c:	4594      	cmp	ip, r2
90024f5e:	f340 80fb 	ble.w	90025158 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90024f62:	2d00      	cmp	r5, #0
90024f64:	f000 80fa 	beq.w	9002515c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90024f68:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024f6c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90024f70:	3701      	adds	r7, #1
90024f72:	f100 80f7 	bmi.w	90025164 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024f76:	45b8      	cmp	r8, r7
90024f78:	f340 80f4 	ble.w	90025164 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024f7c:	2c00      	cmp	r4, #0
90024f7e:	f000 80f4 	beq.w	9002516a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90024f82:	2900      	cmp	r1, #0
90024f84:	eb0e 020c 	add.w	r2, lr, ip
90024f88:	f2c0 80ea 	blt.w	90025160 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024f8c:	458c      	cmp	ip, r1
90024f8e:	f340 80e7 	ble.w	90025160 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024f92:	f81e 700c 	ldrb.w	r7, [lr, ip]
90024f96:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90024f9a:	3101      	adds	r1, #1
90024f9c:	f100 80e8 	bmi.w	90025170 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024fa0:	458c      	cmp	ip, r1
90024fa2:	f340 80e5 	ble.w	90025170 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024fa6:	2d00      	cmp	r5, #0
90024fa8:	f000 80e4 	beq.w	90025174 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90024fac:	7852      	ldrb	r2, [r2, #1]
90024fae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024fb2:	0e0b      	lsrs	r3, r1, #24
90024fb4:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90024fb8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90024fbc:	9300      	str	r3, [sp, #0]
90024fbe:	b2a4      	uxth	r4, r4
90024fc0:	b2ab      	uxth	r3, r5
90024fc2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90024fc6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90024fca:	fb03 f904 	mul.w	r9, r3, r4
90024fce:	011b      	lsls	r3, r3, #4
90024fd0:	fb0a f505 	mul.w	r5, sl, r5
90024fd4:	ea4f 6817 	mov.w	r8, r7, lsr #24
90024fd8:	eba3 0e09 	sub.w	lr, r3, r9
90024fdc:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90024fe0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90024fe4:	0a28      	lsrs	r0, r5, #8
90024fe6:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90024fea:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024fee:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90024ff2:	fb0a f303 	mul.w	r3, sl, r3
90024ff6:	fb08 f707 	mul.w	r7, r8, r7
90024ffa:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90024ffe:	4405      	add	r5, r0
90025000:	fb08 fc0c 	mul.w	ip, r8, ip
90025004:	b2a4      	uxth	r4, r4
90025006:	0a2d      	lsrs	r5, r5, #8
90025008:	fa1f fe8e 	uxth.w	lr, lr
9002500c:	1b12      	subs	r2, r2, r4
9002500e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90025012:	b292      	uxth	r2, r2
90025014:	9005      	str	r0, [sp, #20]
90025016:	f503 7080 	add.w	r0, r3, #256	@ 0x100
9002501a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002501e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90025022:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025026:	0a1b      	lsrs	r3, r3, #8
90025028:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002502c:	9306      	str	r3, [sp, #24]
9002502e:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90025032:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025036:	4460      	add	r0, ip
90025038:	fb0b f303 	mul.w	r3, fp, r3
9002503c:	fb0b f606 	mul.w	r6, fp, r6
90025040:	0a00      	lsrs	r0, r0, #8
90025042:	0a1d      	lsrs	r5, r3, #8
90025044:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90025048:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002504c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025050:	441d      	add	r5, r3
90025052:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90025056:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002505a:	f507 7380 	add.w	r3, r7, #256	@ 0x100
9002505e:	0a2d      	lsrs	r5, r5, #8
90025060:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90025064:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90025068:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002506c:	0a36      	lsrs	r6, r6, #8
9002506e:	0a1b      	lsrs	r3, r3, #8
90025070:	fb05 f50e 	mul.w	r5, r5, lr
90025074:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025078:	9307      	str	r3, [sp, #28]
9002507a:	0e0b      	lsrs	r3, r1, #24
9002507c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025080:	fb0e f606 	mul.w	r6, lr, r6
90025084:	435f      	muls	r7, r3
90025086:	4359      	muls	r1, r3
90025088:	9b05      	ldr	r3, [sp, #20]
9002508a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002508e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025092:	fb03 5502 	mla	r5, r3, r2, r5
90025096:	9b06      	ldr	r3, [sp, #24]
90025098:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002509c:	fb0e fe0b 	mul.w	lr, lr, fp
900250a0:	44bc      	add	ip, r7
900250a2:	f501 7780 	add.w	r7, r1, #256	@ 0x100
900250a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900250aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900250ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900250b2:	0a09      	lsrs	r1, r1, #8
900250b4:	fb0c 5509 	mla	r5, ip, r9, r5
900250b8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900250bc:	fb00 5504 	mla	r5, r0, r4, r5
900250c0:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
900250c4:	9b07      	ldr	r3, [sp, #28]
900250c6:	fb02 6000 	mla	r0, r2, r0, r6
900250ca:	0a2d      	lsrs	r5, r5, #8
900250cc:	fb02 e20a 	mla	r2, r2, sl, lr
900250d0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900250d4:	fb09 0001 	mla	r0, r9, r1, r0
900250d8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900250dc:	fb04 0003 	mla	r0, r4, r3, r0
900250e0:	9b00      	ldr	r3, [sp, #0]
900250e2:	fb04 2408 	mla	r4, r4, r8, r2
900250e6:	9a04      	ldr	r2, [sp, #16]
900250e8:	0a00      	lsrs	r0, r0, #8
900250ea:	fb09 4903 	mla	r9, r9, r3, r4
900250ee:	9b02      	ldr	r3, [sp, #8]
900250f0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
900250f4:	ea6f 2929 	mvn.w	r9, r9, asr #8
900250f8:	4305      	orrs	r5, r0
900250fa:	fa5f f989 	uxtb.w	r9, r9
900250fe:	fb03 f109 	mul.w	r1, r3, r9
90025102:	9b03      	ldr	r3, [sp, #12]
90025104:	fb03 f309 	mul.w	r3, r3, r9
90025108:	fb02 f909 	mul.w	r9, r2, r9
9002510c:	1c4a      	adds	r2, r1, #1
9002510e:	1c58      	adds	r0, r3, #1
90025110:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025114:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025118:	0c2a      	lsrs	r2, r5, #16
9002511a:	0a2b      	lsrs	r3, r5, #8
9002511c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90025120:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025124:	0212      	lsls	r2, r2, #8
90025126:	00db      	lsls	r3, r3, #3
90025128:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002512c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025130:	4313      	orrs	r3, r2
90025132:	f109 0201 	add.w	r2, r9, #1
90025136:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002513a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
9002513e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90025142:	431d      	orrs	r5, r3
90025144:	9b01      	ldr	r3, [sp, #4]
90025146:	801d      	strh	r5, [r3, #0]
90025148:	b009      	add	sp, #36	@ 0x24
9002514a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002514e:	2000      	movs	r0, #0
90025150:	e701      	b.n	90024f56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90025152:	2600      	movs	r6, #0
90025154:	4630      	mov	r0, r6
90025156:	e70b      	b.n	90024f70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025158:	2600      	movs	r6, #0
9002515a:	e709      	b.n	90024f70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002515c:	462e      	mov	r6, r5
9002515e:	e707      	b.n	90024f70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025160:	2700      	movs	r7, #0
90025162:	e71a      	b.n	90024f9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90025164:	2100      	movs	r1, #0
90025166:	460f      	mov	r7, r1
90025168:	e723      	b.n	90024fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002516a:	4621      	mov	r1, r4
9002516c:	4627      	mov	r7, r4
9002516e:	e720      	b.n	90024fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025170:	2100      	movs	r1, #0
90025172:	e71e      	b.n	90024fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025174:	4629      	mov	r1, r5
90025176:	e71c      	b.n	90024fb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90025178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002517c:	b09b      	sub	sp, #108	@ 0x6c
9002517e:	9218      	str	r2, [sp, #96]	@ 0x60
90025180:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025182:	9019      	str	r0, [sp, #100]	@ 0x64
90025184:	9116      	str	r1, [sp, #88]	@ 0x58
90025186:	6850      	ldr	r0, [r2, #4]
90025188:	9307      	str	r3, [sp, #28]
9002518a:	6812      	ldr	r2, [r2, #0]
9002518c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002518e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90025192:	fb00 1303 	mla	r3, r0, r3, r1
90025196:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002519a:	930a      	str	r3, [sp, #40]	@ 0x28
9002519c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002519e:	681b      	ldr	r3, [r3, #0]
900251a0:	930f      	str	r3, [sp, #60]	@ 0x3c
900251a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900251a4:	685e      	ldr	r6, [r3, #4]
900251a6:	3604      	adds	r6, #4
900251a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900251aa:	2b00      	cmp	r3, #0
900251ac:	dc03      	bgt.n	900251b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900251ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900251b0:	2b00      	cmp	r3, #0
900251b2:	f340 8373 	ble.w	9002589c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900251b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900251b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900251bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900251c0:	1e48      	subs	r0, r1, #1
900251c2:	1e57      	subs	r7, r2, #1
900251c4:	9b07      	ldr	r3, [sp, #28]
900251c6:	2b00      	cmp	r3, #0
900251c8:	f340 818f 	ble.w	900254ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900251cc:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900251ce:	142b      	asrs	r3, r5, #16
900251d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900251d4:	d406      	bmi.n	900251e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900251d6:	4584      	cmp	ip, r0
900251d8:	da04      	bge.n	900251e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900251da:	2b00      	cmp	r3, #0
900251dc:	db02      	blt.n	900251e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900251de:	42bb      	cmp	r3, r7
900251e0:	f2c0 8184 	blt.w	900254ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900251e4:	f11c 0c01 	adds.w	ip, ip, #1
900251e8:	f100 8172 	bmi.w	900254d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900251ec:	4561      	cmp	r1, ip
900251ee:	f2c0 816f 	blt.w	900254d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900251f2:	3301      	adds	r3, #1
900251f4:	f100 816c 	bmi.w	900254d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900251f8:	429a      	cmp	r2, r3
900251fa:	f2c0 8169 	blt.w	900254d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900251fe:	9b07      	ldr	r3, [sp, #28]
90025200:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025202:	9317      	str	r3, [sp, #92]	@ 0x5c
90025204:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025206:	2b00      	cmp	r3, #0
90025208:	f340 818e 	ble.w	90025528 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9002520c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002520e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90025212:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025216:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002521a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002521c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90025220:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025222:	141b      	asrs	r3, r3, #16
90025224:	f100 81d1 	bmi.w	900255ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025228:	f101 38ff 	add.w	r8, r1, #4294967295
9002522c:	4543      	cmp	r3, r8
9002522e:	f280 81cc 	bge.w	900255ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025232:	f1bc 0f00 	cmp.w	ip, #0
90025236:	f2c0 81c8 	blt.w	900255ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002523a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002523e:	45c4      	cmp	ip, r8
90025240:	f280 81c3 	bge.w	900255ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025244:	b209      	sxth	r1, r1
90025246:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025248:	fb0c 3301 	mla	r3, ip, r1, r3
9002524c:	eb04 0803 	add.w	r8, r4, r3
90025250:	5ce3      	ldrb	r3, [r4, r3]
90025252:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025256:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002525a:	2a00      	cmp	r2, #0
9002525c:	f000 81aa 	beq.w	900255b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90025260:	f898 c001 	ldrb.w	ip, [r8, #1]
90025264:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025268:	940b      	str	r4, [sp, #44]	@ 0x2c
9002526a:	0e24      	lsrs	r4, r4, #24
9002526c:	9412      	str	r4, [sp, #72]	@ 0x48
9002526e:	b178      	cbz	r0, 90025290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025270:	eb08 0c01 	add.w	ip, r8, r1
90025274:	f818 1001 	ldrb.w	r1, [r8, r1]
90025278:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002527c:	9108      	str	r1, [sp, #32]
9002527e:	0e09      	lsrs	r1, r1, #24
90025280:	9110      	str	r1, [sp, #64]	@ 0x40
90025282:	f89c 1001 	ldrb.w	r1, [ip, #1]
90025286:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002528a:	910c      	str	r1, [sp, #48]	@ 0x30
9002528c:	0e09      	lsrs	r1, r1, #24
9002528e:	9113      	str	r1, [sp, #76]	@ 0x4c
90025290:	b292      	uxth	r2, r2
90025292:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025294:	b280      	uxth	r0, r0
90025296:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025298:	fb02 f900 	mul.w	r9, r2, r0
9002529c:	0112      	lsls	r2, r2, #4
9002529e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900252a2:	eba2 0809 	sub.w	r8, r2, r9
900252a6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900252aa:	b280      	uxth	r0, r0
900252ac:	fa1f f888 	uxth.w	r8, r8
900252b0:	1a12      	subs	r2, r2, r0
900252b2:	fb08 f101 	mul.w	r1, r8, r1
900252b6:	b292      	uxth	r2, r2
900252b8:	fb02 110e 	mla	r1, r2, lr, r1
900252bc:	fb00 1104 	mla	r1, r0, r4, r1
900252c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900252c2:	fb09 1104 	mla	r1, r9, r4, r1
900252c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900252ca:	2900      	cmp	r1, #0
900252cc:	f000 80f5 	beq.w	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900252d0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900252d4:	d01b      	beq.n	9002530e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900252d6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900252da:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900252de:	fb0e fa0a 	mul.w	sl, lr, sl
900252e2:	fb0e fe03 	mul.w	lr, lr, r3
900252e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900252ea:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900252ee:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900252f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900252f6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900252fa:	4453      	add	r3, sl
900252fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025300:	0a1b      	lsrs	r3, r3, #8
90025302:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025306:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002530a:	ea43 030c 	orr.w	r3, r3, ip
9002530e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025310:	2cff      	cmp	r4, #255	@ 0xff
90025312:	d021      	beq.n	90025358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90025314:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025316:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002531a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002531c:	fb04 fb0b 	mul.w	fp, r4, fp
90025320:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025322:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025326:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025328:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002532c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025330:	fb04 fa0a 	mul.w	sl, r4, sl
90025334:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025338:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002533c:	44de      	add	lr, fp
9002533e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002534a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002534e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025352:	ea4e 040a 	orr.w	r4, lr, sl
90025356:	940b      	str	r4, [sp, #44]	@ 0x2c
90025358:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002535a:	2cff      	cmp	r4, #255	@ 0xff
9002535c:	d021      	beq.n	900253a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002535e:	9c08      	ldr	r4, [sp, #32]
90025360:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025364:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025366:	fb04 fb0b 	mul.w	fp, r4, fp
9002536a:	9c08      	ldr	r4, [sp, #32]
9002536c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025370:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025372:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025376:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002537a:	fb04 fa0a 	mul.w	sl, r4, sl
9002537e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025382:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025386:	44de      	add	lr, fp
90025388:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002538c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025390:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025394:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025398:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002539c:	ea4e 040a 	orr.w	r4, lr, sl
900253a0:	9408      	str	r4, [sp, #32]
900253a2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253a4:	2cff      	cmp	r4, #255	@ 0xff
900253a6:	d021      	beq.n	900253ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
900253a8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900253aa:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900253ae:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253b0:	fb04 fb0b 	mul.w	fp, r4, fp
900253b4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900253b6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900253ba:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900253c0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900253c4:	fb04 fa0a 	mul.w	sl, r4, sl
900253c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253cc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900253d0:	44de      	add	lr, fp
900253d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900253d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900253da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900253de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900253e6:	ea4e 040a 	orr.w	r4, lr, sl
900253ea:	940c      	str	r4, [sp, #48]	@ 0x30
900253ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900253ee:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900253f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900253f6:	43c9      	mvns	r1, r1
900253f8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900253fc:	9c08      	ldr	r4, [sp, #32]
900253fe:	fb08 fc0c 	mul.w	ip, r8, ip
90025402:	fb02 cc0e 	mla	ip, r2, lr, ip
90025406:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002540a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002540c:	fb00 cc0e 	mla	ip, r0, lr, ip
90025410:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025414:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025416:	fb09 cc0e 	mla	ip, r9, lr, ip
9002541a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
9002541e:	fb08 f80e 	mul.w	r8, r8, lr
90025422:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025426:	fa5f fe81 	uxtb.w	lr, r1
9002542a:	fb02 8303 	mla	r3, r2, r3, r8
9002542e:	9a08      	ldr	r2, [sp, #32]
90025430:	f8b7 8000 	ldrh.w	r8, [r7]
90025434:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025438:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
9002543c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002543e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90025442:	fb00 330a 	mla	r3, r0, sl, r3
90025446:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
9002544a:	ea4f 2228 	mov.w	r2, r8, asr #8
9002544e:	fb09 3900 	mla	r9, r9, r0, r3
90025452:	ea4f 00e8 	mov.w	r0, r8, asr #3
90025456:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002545a:	b2c9      	uxtb	r1, r1
9002545c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025460:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025464:	fb02 f20e 	mul.w	r2, r2, lr
90025468:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002546c:	fb00 f00e 	mul.w	r0, r0, lr
90025470:	1c53      	adds	r3, r2, #1
90025472:	fb01 f10e 	mul.w	r1, r1, lr
90025476:	ea4c 0c09 	orr.w	ip, ip, r9
9002547a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002547e:	ea4f 431c 	mov.w	r3, ip, lsr #16
90025482:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025486:	4a60      	ldr	r2, [pc, #384]	@ (90025608 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90025488:	b2db      	uxtb	r3, r3
9002548a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002548e:	1c43      	adds	r3, r0, #1
90025490:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025494:	ea4f 231c 	mov.w	r3, ip, lsr #8
90025498:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002549c:	00db      	lsls	r3, r3, #3
9002549e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900254a2:	4313      	orrs	r3, r2
900254a4:	1c4a      	adds	r2, r1, #1
900254a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900254aa:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900254ae:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900254b2:	ea4c 0c03 	orr.w	ip, ip, r3
900254b6:	f8a7 c000 	strh.w	ip, [r7]
900254ba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900254bc:	3702      	adds	r7, #2
900254be:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900254c0:	441a      	add	r2, r3
900254c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900254c4:	441d      	add	r5, r3
900254c6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900254c8:	9225      	str	r2, [sp, #148]	@ 0x94
900254ca:	3b01      	subs	r3, #1
900254cc:	9317      	str	r3, [sp, #92]	@ 0x5c
900254ce:	e699      	b.n	90025204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900254d0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900254d2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900254d4:	441c      	add	r4, r3
900254d6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900254d8:	441d      	add	r5, r3
900254da:	9b07      	ldr	r3, [sp, #28]
900254dc:	9425      	str	r4, [sp, #148]	@ 0x94
900254de:	3b01      	subs	r3, #1
900254e0:	9307      	str	r3, [sp, #28]
900254e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900254e4:	3302      	adds	r3, #2
900254e6:	930a      	str	r3, [sp, #40]	@ 0x28
900254e8:	e66c      	b.n	900251c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900254ea:	d024      	beq.n	90025536 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900254ec:	9b07      	ldr	r3, [sp, #28]
900254ee:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900254f0:	3b01      	subs	r3, #1
900254f2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900254f4:	fb00 4003 	mla	r0, r0, r3, r4
900254f8:	1400      	asrs	r0, r0, #16
900254fa:	f53f ae80 	bmi.w	900251fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900254fe:	3901      	subs	r1, #1
90025500:	4288      	cmp	r0, r1
90025502:	f6bf ae7c 	bge.w	900251fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025506:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90025508:	fb01 5303 	mla	r3, r1, r3, r5
9002550c:	141b      	asrs	r3, r3, #16
9002550e:	f53f ae76 	bmi.w	900251fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025512:	3a01      	subs	r2, #1
90025514:	4293      	cmp	r3, r2
90025516:	f6bf ae72 	bge.w	900251fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002551a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002551e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025522:	f1bb 0f00 	cmp.w	fp, #0
90025526:	dc71      	bgt.n	9002560c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025528:	9b07      	ldr	r3, [sp, #28]
9002552a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002552e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025530:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025534:	930a      	str	r3, [sp, #40]	@ 0x28
90025536:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025538:	2b00      	cmp	r3, #0
9002553a:	f340 81af 	ble.w	9002589c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002553e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025542:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025544:	ee30 0a04 	vadd.f32	s0, s0, s8
90025548:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002554c:	eef0 6a62 	vmov.f32	s13, s5
90025550:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025554:	ee31 1a05 	vadd.f32	s2, s2, s10
90025558:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002555c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90025560:	eef0 6a43 	vmov.f32	s13, s6
90025564:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025568:	ee16 5a90 	vmov	r5, s13
9002556c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025570:	ee61 7a27 	vmul.f32	s15, s2, s15
90025574:	ee77 2a62 	vsub.f32	s5, s14, s5
90025578:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002557c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025580:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025584:	ee12 2a90 	vmov	r2, s5
90025588:	eef0 2a47 	vmov.f32	s5, s14
9002558c:	fb92 f3f3 	sdiv	r3, r2, r3
90025590:	ee13 2a10 	vmov	r2, s6
90025594:	9327      	str	r3, [sp, #156]	@ 0x9c
90025596:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025598:	eeb0 3a67 	vmov.f32	s6, s15
9002559c:	fb92 f3f3 	sdiv	r3, r2, r3
900255a0:	9328      	str	r3, [sp, #160]	@ 0xa0
900255a2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900255a4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900255a6:	3b01      	subs	r3, #1
900255a8:	9316      	str	r3, [sp, #88]	@ 0x58
900255aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255ac:	bf08      	it	eq
900255ae:	4613      	moveq	r3, r2
900255b0:	9307      	str	r3, [sp, #28]
900255b2:	e5f9      	b.n	900251a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900255b4:	2800      	cmp	r0, #0
900255b6:	f43f ae6b 	beq.w	90025290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900255ba:	f818 1001 	ldrb.w	r1, [r8, r1]
900255be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900255c2:	9108      	str	r1, [sp, #32]
900255c4:	0e09      	lsrs	r1, r1, #24
900255c6:	9110      	str	r1, [sp, #64]	@ 0x40
900255c8:	e662      	b.n	90025290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900255ca:	f113 0801 	adds.w	r8, r3, #1
900255ce:	f53f af74 	bmi.w	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900255d2:	4541      	cmp	r1, r8
900255d4:	f6ff af71 	blt.w	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900255d8:	f11c 0801 	adds.w	r8, ip, #1
900255dc:	f53f af6d 	bmi.w	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900255e0:	45c6      	cmp	lr, r8
900255e2:	f6ff af6a 	blt.w	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900255e6:	b209      	sxth	r1, r1
900255e8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900255ec:	fa0f f38e 	sxth.w	r3, lr
900255f0:	9100      	str	r1, [sp, #0]
900255f2:	4639      	mov	r1, r7
900255f4:	9301      	str	r3, [sp, #4]
900255f6:	4633      	mov	r3, r6
900255f8:	e9cd 2004 	strd	r2, r0, [sp, #16]
900255fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900255fe:	9819      	ldr	r0, [sp, #100]	@ 0x64
90025600:	f7ff fc7b 	bl	90024efa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90025604:	e759      	b.n	900254ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025606:	bf00      	nop
90025608:	fffff800 	.word	0xfffff800
9002560c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002560e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025612:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025614:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025618:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002561a:	1427      	asrs	r7, r4, #16
9002561c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002561e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025622:	142b      	asrs	r3, r5, #16
90025624:	fb01 7303 	mla	r3, r1, r3, r7
90025628:	18e7      	adds	r7, r4, r3
9002562a:	5ce3      	ldrb	r3, [r4, r3]
9002562c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025630:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025634:	2a00      	cmp	r2, #0
90025636:	f000 8127 	beq.w	90025888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
9002563a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002563e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90025642:	940d      	str	r4, [sp, #52]	@ 0x34
90025644:	0e24      	lsrs	r4, r4, #24
90025646:	9414      	str	r4, [sp, #80]	@ 0x50
90025648:	b170      	cbz	r0, 90025668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002564a:	eb07 0e01 	add.w	lr, r7, r1
9002564e:	5c79      	ldrb	r1, [r7, r1]
90025650:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025654:	9109      	str	r1, [sp, #36]	@ 0x24
90025656:	0e09      	lsrs	r1, r1, #24
90025658:	9111      	str	r1, [sp, #68]	@ 0x44
9002565a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002565e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025662:	910e      	str	r1, [sp, #56]	@ 0x38
90025664:	0e09      	lsrs	r1, r1, #24
90025666:	9115      	str	r1, [sp, #84]	@ 0x54
90025668:	b292      	uxth	r2, r2
9002566a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002566c:	b280      	uxth	r0, r0
9002566e:	fb02 f800 	mul.w	r8, r2, r0
90025672:	0112      	lsls	r2, r2, #4
90025674:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025678:	eba2 0e08 	sub.w	lr, r2, r8
9002567c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90025680:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90025682:	b280      	uxth	r0, r0
90025684:	fa1f fe8e 	uxth.w	lr, lr
90025688:	1a09      	subs	r1, r1, r0
9002568a:	fb0e f202 	mul.w	r2, lr, r2
9002568e:	b289      	uxth	r1, r1
90025690:	fb01 220c 	mla	r2, r1, ip, r2
90025694:	fb00 2204 	mla	r2, r0, r4, r2
90025698:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002569a:	fb08 2204 	mla	r2, r8, r4, r2
9002569e:	f3c2 2207 	ubfx	r2, r2, #8, #8
900256a2:	2a00      	cmp	r2, #0
900256a4:	f000 80e5 	beq.w	90025872 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
900256a8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900256ac:	d019      	beq.n	900256e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
900256ae:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900256b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900256b6:	fb0c fa0a 	mul.w	sl, ip, sl
900256ba:	fb0c fc03 	mul.w	ip, ip, r3
900256be:	ea4f 231a 	mov.w	r3, sl, lsr #8
900256c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900256c6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900256ca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256ce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900256d2:	4453      	add	r3, sl
900256d4:	0a3f      	lsrs	r7, r7, #8
900256d6:	0a1b      	lsrs	r3, r3, #8
900256d8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900256dc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256e0:	433b      	orrs	r3, r7
900256e2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900256e4:	2cff      	cmp	r4, #255	@ 0xff
900256e6:	d020      	beq.n	9002572a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900256e8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900256ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900256ee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900256f0:	4367      	muls	r7, r4
900256f2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900256f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900256f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900256fc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900256fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025702:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025706:	fb04 fa0a 	mul.w	sl, r4, sl
9002570a:	44bc      	add	ip, r7
9002570c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025710:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025714:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025718:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002571c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025720:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025724:	ea4c 040a 	orr.w	r4, ip, sl
90025728:	940d      	str	r4, [sp, #52]	@ 0x34
9002572a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002572c:	2cff      	cmp	r4, #255	@ 0xff
9002572e:	d020      	beq.n	90025772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90025730:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90025732:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025736:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025738:	4367      	muls	r7, r4
9002573a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002573c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025740:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025744:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025746:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002574a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002574e:	fb04 fa0a 	mul.w	sl, r4, sl
90025752:	44bc      	add	ip, r7
90025754:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025758:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002575c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025760:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025768:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002576c:	ea4c 040a 	orr.w	r4, ip, sl
90025770:	9409      	str	r4, [sp, #36]	@ 0x24
90025772:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025774:	2cff      	cmp	r4, #255	@ 0xff
90025776:	d020      	beq.n	900257ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90025778:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002577a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002577e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025780:	4367      	muls	r7, r4
90025782:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025784:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025788:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002578c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002578e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025792:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025796:	fb04 fa0a 	mul.w	sl, r4, sl
9002579a:	44bc      	add	ip, r7
9002579c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900257a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900257a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257b4:	ea4c 040a 	orr.w	r4, ip, sl
900257b8:	940e      	str	r4, [sp, #56]	@ 0x38
900257ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900257bc:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900257c0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900257c4:	43d2      	mvns	r2, r2
900257c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900257ca:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900257cc:	b2d2      	uxtb	r2, r2
900257ce:	fb0e f707 	mul.w	r7, lr, r7
900257d2:	fb01 770c 	mla	r7, r1, ip, r7
900257d6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900257da:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900257dc:	fb00 770c 	mla	r7, r0, ip, r7
900257e0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900257e4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900257e6:	fb08 770c 	mla	r7, r8, ip, r7
900257ea:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900257ee:	fb0e fe0c 	mul.w	lr, lr, ip
900257f2:	0a3f      	lsrs	r7, r7, #8
900257f4:	fb01 e303 	mla	r3, r1, r3, lr
900257f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
900257fa:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900257fe:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90025802:	990e      	ldr	r1, [sp, #56]	@ 0x38
90025804:	fb00 330a 	mla	r3, r0, sl, r3
90025808:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
9002580c:	fb08 3c0c 	mla	ip, r8, ip, r3
90025810:	f8b9 3000 	ldrh.w	r3, [r9]
90025814:	1218      	asrs	r0, r3, #8
90025816:	10d9      	asrs	r1, r3, #3
90025818:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002581c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025820:	00db      	lsls	r3, r3, #3
90025822:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025826:	4350      	muls	r0, r2
90025828:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002582c:	b2db      	uxtb	r3, r3
9002582e:	4351      	muls	r1, r2
90025830:	ea47 070c 	orr.w	r7, r7, ip
90025834:	4353      	muls	r3, r2
90025836:	1c42      	adds	r2, r0, #1
90025838:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002583c:	0c3a      	lsrs	r2, r7, #16
9002583e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025842:	4a18      	ldr	r2, [pc, #96]	@ (900258a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90025844:	b2c0      	uxtb	r0, r0
90025846:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002584a:	1c4a      	adds	r2, r1, #1
9002584c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025850:	0a3a      	lsrs	r2, r7, #8
90025852:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025856:	00c9      	lsls	r1, r1, #3
90025858:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002585c:	4301      	orrs	r1, r0
9002585e:	1c58      	adds	r0, r3, #1
90025860:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025864:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025868:	f3c7 00c4 	ubfx	r0, r7, #3, #5
9002586c:	4308      	orrs	r0, r1
9002586e:	f8a9 0000 	strh.w	r0, [r9]
90025872:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025874:	f109 0902 	add.w	r9, r9, #2
90025878:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002587a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002587e:	441a      	add	r2, r3
90025880:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025882:	9225      	str	r2, [sp, #148]	@ 0x94
90025884:	441d      	add	r5, r3
90025886:	e64c      	b.n	90025522 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90025888:	2800      	cmp	r0, #0
9002588a:	f43f aeed 	beq.w	90025668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002588e:	5c79      	ldrb	r1, [r7, r1]
90025890:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025894:	9109      	str	r1, [sp, #36]	@ 0x24
90025896:	0e09      	lsrs	r1, r1, #24
90025898:	9111      	str	r1, [sp, #68]	@ 0x44
9002589a:	e6e5      	b.n	90025668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002589c:	b01b      	add	sp, #108	@ 0x6c
9002589e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900258a2:	bf00      	nop
900258a4:	fffff800 	.word	0xfffff800

900258a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900258a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900258ac:	b085      	sub	sp, #20
900258ae:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
900258b2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
900258b6:	2800      	cmp	r0, #0
900258b8:	9103      	str	r1, [sp, #12]
900258ba:	fb00 7406 	mla	r4, r0, r6, r7
900258be:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
900258c2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900258c6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900258ca:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900258ce:	eb03 0904 	add.w	r9, r3, r4
900258d2:	9501      	str	r5, [sp, #4]
900258d4:	f2c0 8150 	blt.w	90025b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900258d8:	4583      	cmp	fp, r0
900258da:	f340 814d 	ble.w	90025b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900258de:	2f00      	cmp	r7, #0
900258e0:	f2c0 8146 	blt.w	90025b70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900258e4:	42be      	cmp	r6, r7
900258e6:	f340 8143 	ble.w	90025b70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900258ea:	f813 c004 	ldrb.w	ip, [r3, r4]
900258ee:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900258f2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900258f6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900258fa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900258fe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025902:	4355      	muls	r5, r2
90025904:	fb0c f203 	mul.w	r2, ip, r3
90025908:	ea04 1355 	and.w	r3, r4, r5, lsr #5
9002590c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90025910:	441d      	add	r5, r3
90025912:	f102 0320 	add.w	r3, r2, #32
90025916:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002591a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002591e:	0a1b      	lsrs	r3, r3, #8
90025920:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025924:	431c      	orrs	r4, r3
90025926:	1c7b      	adds	r3, r7, #1
90025928:	f100 812b 	bmi.w	90025b82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002592c:	429e      	cmp	r6, r3
9002592e:	f340 8128 	ble.w	90025b82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90025932:	2900      	cmp	r1, #0
90025934:	f000 8128 	beq.w	90025b88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90025938:	9a01      	ldr	r2, [sp, #4]
9002593a:	f899 3001 	ldrb.w	r3, [r9, #1]
9002593e:	8855      	ldrh	r5, [r2, #2]
90025940:	ea4f 08e3 	mov.w	r8, r3, asr #3
90025944:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90025948:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002594c:	fb08 f802 	mul.w	r8, r8, r2
90025950:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90025954:	435d      	muls	r5, r3
90025956:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002595a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002595e:	44d0      	add	r8, sl
90025960:	f105 0a20 	add.w	sl, r5, #32
90025964:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025968:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002596c:	0a2d      	lsrs	r5, r5, #8
9002596e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025972:	432a      	orrs	r2, r5
90025974:	3001      	adds	r0, #1
90025976:	f100 810d 	bmi.w	90025b94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002597a:	4583      	cmp	fp, r0
9002597c:	f340 810a 	ble.w	90025b94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90025980:	f1be 0f00 	cmp.w	lr, #0
90025984:	f000 810b 	beq.w	90025b9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90025988:	2f00      	cmp	r7, #0
9002598a:	f2c0 8100 	blt.w	90025b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002598e:	42be      	cmp	r6, r7
90025990:	f340 80fd 	ble.w	90025b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90025994:	9801      	ldr	r0, [sp, #4]
90025996:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002599a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002599e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900259a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900259a6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
900259aa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900259ae:	fb0a fa00 	mul.w	sl, sl, r0
900259b2:	fb05 f808 	mul.w	r8, r5, r8
900259b6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900259ba:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
900259be:	4482      	add	sl, r0
900259c0:	f108 0020 	add.w	r0, r8, #32
900259c4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900259c8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900259cc:	0a00      	lsrs	r0, r0, #8
900259ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900259d2:	ea4b 0b00 	orr.w	fp, fp, r0
900259d6:	3701      	adds	r7, #1
900259d8:	f100 80e6 	bmi.w	90025ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900259dc:	42be      	cmp	r6, r7
900259de:	f340 80e3 	ble.w	90025ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900259e2:	2900      	cmp	r1, #0
900259e4:	f000 80e3 	beq.w	90025bae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900259e8:	3601      	adds	r6, #1
900259ea:	9801      	ldr	r0, [sp, #4]
900259ec:	f819 7006 	ldrb.w	r7, [r9, r6]
900259f0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900259f4:	ea4f 09e7 	mov.w	r9, r7, asr #3
900259f8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900259fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a00:	fb09 f906 	mul.w	r9, r9, r6
90025a04:	fb07 f800 	mul.w	r8, r7, r0
90025a08:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90025a0c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025a10:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90025a14:	44d1      	add	r9, sl
90025a16:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90025a1a:	f108 0020 	add.w	r0, r8, #32
90025a1e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025a22:	0a00      	lsrs	r0, r0, #8
90025a24:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a28:	4330      	orrs	r0, r6
90025a2a:	b28e      	uxth	r6, r1
90025a2c:	fa1f f98e 	uxth.w	r9, lr
90025a30:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90025a34:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90025a38:	fb06 f809 	mul.w	r8, r6, r9
90025a3c:	0136      	lsls	r6, r6, #4
90025a3e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a42:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90025a46:	9601      	str	r6, [sp, #4]
90025a48:	ea4a 0404 	orr.w	r4, sl, r4
90025a4c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025a50:	fa1f f689 	uxth.w	r6, r9
90025a54:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025a58:	fb11 f90e 	smulbb	r9, r1, lr
90025a5c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a60:	9602      	str	r6, [sp, #8]
90025a62:	4626      	mov	r6, r4
90025a64:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025a68:	f1ce 0410 	rsb	r4, lr, #16
90025a6c:	ea4a 0202 	orr.w	r2, sl, r2
90025a70:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025a74:	1a64      	subs	r4, r4, r1
90025a76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90025a7a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025a82:	434a      	muls	r2, r1
90025a84:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025a88:	ea4a 0000 	orr.w	r0, sl, r0
90025a8c:	9903      	ldr	r1, [sp, #12]
90025a8e:	fb04 2406 	mla	r4, r4, r6, r2
90025a92:	9e02      	ldr	r6, [sp, #8]
90025a94:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025a98:	fb09 4200 	mla	r2, r9, r0, r4
90025a9c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025aa0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025aa4:	8808      	ldrh	r0, [r1, #0]
90025aa6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025aaa:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90025aae:	ea44 0b0b 	orr.w	fp, r4, fp
90025ab2:	9c01      	ldr	r4, [sp, #4]
90025ab4:	b289      	uxth	r1, r1
90025ab6:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90025aba:	fb0e 2e0b 	mla	lr, lr, fp, r2
90025abe:	1ba4      	subs	r4, r4, r6
90025ac0:	9e01      	ldr	r6, [sp, #4]
90025ac2:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025ac6:	eba6 0608 	sub.w	r6, r6, r8
90025aca:	b2a4      	uxth	r4, r4
90025acc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025ad0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025ad4:	b2b6      	uxth	r6, r6
90025ad6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025ada:	4373      	muls	r3, r6
90025adc:	ea42 0e0e 	orr.w	lr, r2, lr
90025ae0:	fb0c 3304 	mla	r3, ip, r4, r3
90025ae4:	9c02      	ldr	r4, [sp, #8]
90025ae6:	fa1f f28e 	uxth.w	r2, lr
90025aea:	fb04 3505 	mla	r5, r4, r5, r3
90025aee:	10d4      	asrs	r4, r2, #3
90025af0:	fb08 5707 	mla	r7, r8, r7, r5
90025af4:	1215      	asrs	r5, r2, #8
90025af6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90025afa:	00d2      	lsls	r2, r2, #3
90025afc:	f3c7 2707 	ubfx	r7, r7, #8, #8
90025b00:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025b04:	b2d2      	uxtb	r2, r2
90025b06:	434f      	muls	r7, r1
90025b08:	1c7b      	adds	r3, r7, #1
90025b0a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90025b0e:	1203      	asrs	r3, r0, #8
90025b10:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90025b14:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025b18:	b2ff      	uxtb	r7, r7
90025b1a:	fb13 f307 	smulbb	r3, r3, r7
90025b1e:	fb05 3501 	mla	r5, r5, r1, r3
90025b22:	10c3      	asrs	r3, r0, #3
90025b24:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025b28:	b2ad      	uxth	r5, r5
90025b2a:	fb13 f307 	smulbb	r3, r3, r7
90025b2e:	fb04 3401 	mla	r4, r4, r1, r3
90025b32:	00c3      	lsls	r3, r0, #3
90025b34:	b2db      	uxtb	r3, r3
90025b36:	b2a4      	uxth	r4, r4
90025b38:	fb13 f307 	smulbb	r3, r3, r7
90025b3c:	fb02 3101 	mla	r1, r2, r1, r3
90025b40:	1c6b      	adds	r3, r5, #1
90025b42:	1c62      	adds	r2, r4, #1
90025b44:	b289      	uxth	r1, r1
90025b46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025b4a:	1c4b      	adds	r3, r1, #1
90025b4c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90025b50:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025b54:	9a03      	ldr	r2, [sp, #12]
90025b56:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025b5a:	0964      	lsrs	r4, r4, #5
90025b5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025b60:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90025b64:	432b      	orrs	r3, r5
90025b66:	4323      	orrs	r3, r4
90025b68:	8013      	strh	r3, [r2, #0]
90025b6a:	b005      	add	sp, #20
90025b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b70:	f04f 0c00 	mov.w	ip, #0
90025b74:	4664      	mov	r4, ip
90025b76:	e6d6      	b.n	90025926 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90025b78:	2300      	movs	r3, #0
90025b7a:	469c      	mov	ip, r3
90025b7c:	461a      	mov	r2, r3
90025b7e:	461c      	mov	r4, r3
90025b80:	e6f8      	b.n	90025974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025b82:	2300      	movs	r3, #0
90025b84:	461a      	mov	r2, r3
90025b86:	e6f5      	b.n	90025974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025b88:	460b      	mov	r3, r1
90025b8a:	460a      	mov	r2, r1
90025b8c:	e6f2      	b.n	90025974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025b8e:	2500      	movs	r5, #0
90025b90:	46ab      	mov	fp, r5
90025b92:	e720      	b.n	900259d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90025b94:	2700      	movs	r7, #0
90025b96:	463d      	mov	r5, r7
90025b98:	4638      	mov	r0, r7
90025b9a:	46bb      	mov	fp, r7
90025b9c:	e745      	b.n	90025a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025b9e:	4677      	mov	r7, lr
90025ba0:	4675      	mov	r5, lr
90025ba2:	4670      	mov	r0, lr
90025ba4:	46f3      	mov	fp, lr
90025ba6:	e740      	b.n	90025a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025ba8:	2700      	movs	r7, #0
90025baa:	4638      	mov	r0, r7
90025bac:	e73d      	b.n	90025a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025bae:	460f      	mov	r7, r1
90025bb0:	4608      	mov	r0, r1
90025bb2:	e73a      	b.n	90025a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90025bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025bb8:	b097      	sub	sp, #92	@ 0x5c
90025bba:	9214      	str	r2, [sp, #80]	@ 0x50
90025bbc:	9308      	str	r3, [sp, #32]
90025bbe:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025bc0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90025bc4:	9015      	str	r0, [sp, #84]	@ 0x54
90025bc6:	9312      	str	r3, [sp, #72]	@ 0x48
90025bc8:	6850      	ldr	r0, [r2, #4]
90025bca:	9111      	str	r1, [sp, #68]	@ 0x44
90025bcc:	6812      	ldr	r2, [r2, #0]
90025bce:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90025bd2:	fb00 1303 	mla	r3, r0, r3, r1
90025bd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025bda:	9309      	str	r3, [sp, #36]	@ 0x24
90025bdc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025bde:	681b      	ldr	r3, [r3, #0]
90025be0:	930b      	str	r3, [sp, #44]	@ 0x2c
90025be2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025be4:	685b      	ldr	r3, [r3, #4]
90025be6:	930c      	str	r3, [sp, #48]	@ 0x30
90025be8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90025bec:	930a      	str	r3, [sp, #40]	@ 0x28
90025bee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90025bf0:	2b00      	cmp	r3, #0
90025bf2:	dc03      	bgt.n	90025bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025bf4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90025bf6:	2b00      	cmp	r3, #0
90025bf8:	f340 83cd 	ble.w	90026396 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90025bfc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025bfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025c02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025c06:	1e48      	subs	r0, r1, #1
90025c08:	1e55      	subs	r5, r2, #1
90025c0a:	9b08      	ldr	r3, [sp, #32]
90025c0c:	2b00      	cmp	r3, #0
90025c0e:	f340 81a5 	ble.w	90025f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90025c12:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90025c14:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025c16:	1436      	asrs	r6, r6, #16
90025c18:	ea4f 4323 	mov.w	r3, r3, asr #16
90025c1c:	d406      	bmi.n	90025c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025c1e:	4286      	cmp	r6, r0
90025c20:	da04      	bge.n	90025c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025c22:	2b00      	cmp	r3, #0
90025c24:	db02      	blt.n	90025c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025c26:	42ab      	cmp	r3, r5
90025c28:	f2c0 8199 	blt.w	90025f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90025c2c:	3601      	adds	r6, #1
90025c2e:	f100 8186 	bmi.w	90025f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025c32:	42b1      	cmp	r1, r6
90025c34:	f2c0 8183 	blt.w	90025f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025c38:	3301      	adds	r3, #1
90025c3a:	f100 8180 	bmi.w	90025f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025c3e:	429a      	cmp	r2, r3
90025c40:	f2c0 817d 	blt.w	90025f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025c44:	9b08      	ldr	r3, [sp, #32]
90025c46:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025c4a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90025c4c:	9313      	str	r3, [sp, #76]	@ 0x4c
90025c4e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025c50:	2b00      	cmp	r3, #0
90025c52:	f340 81a6 	ble.w	90025fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025c56:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025c58:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90025c5a:	1418      	asrs	r0, r3, #16
90025c5c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025c5e:	142d      	asrs	r5, r5, #16
90025c60:	f3c3 3103 	ubfx	r1, r3, #12, #4
90025c64:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025c66:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90025c6a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025c6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90025c70:	f100 81fa 	bmi.w	90026068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025c74:	f102 3eff 	add.w	lr, r2, #4294967295
90025c78:	4575      	cmp	r5, lr
90025c7a:	f280 81f5 	bge.w	90026068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025c7e:	2800      	cmp	r0, #0
90025c80:	f2c0 81f2 	blt.w	90026068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025c84:	f103 3eff 	add.w	lr, r3, #4294967295
90025c88:	4570      	cmp	r0, lr
90025c8a:	f280 81ed 	bge.w	90026068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025c8e:	b212      	sxth	r2, r2
90025c90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025c92:	fa1f fe81 	uxth.w	lr, r1
90025c96:	fb00 5002 	mla	r0, r0, r2, r5
90025c9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90025c9e:	eb03 0a00 	add.w	sl, r3, r0
90025ca2:	f813 9000 	ldrb.w	r9, [r3, r0]
90025ca6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90025caa:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025cae:	b29b      	uxth	r3, r3
90025cb0:	f1bc 0f00 	cmp.w	ip, #0
90025cb4:	f000 81bb 	beq.w	9002602e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90025cb8:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025cbc:	eb0a 0b02 	add.w	fp, sl, r2
90025cc0:	fa1f fa8c 	uxth.w	sl, ip
90025cc4:	940d      	str	r4, [sp, #52]	@ 0x34
90025cc6:	fb0a fe0e 	mul.w	lr, sl, lr
90025cca:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025cce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90025cd2:	eba5 050e 	sub.w	r5, r5, lr
90025cd6:	940e      	str	r4, [sp, #56]	@ 0x38
90025cd8:	fa1f fa8a 	uxth.w	sl, sl
90025cdc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025cde:	b2ad      	uxth	r5, r5
90025ce0:	eba3 030a 	sub.w	r3, r3, sl
90025ce4:	fb08 f505 	mul.w	r5, r8, r5
90025ce8:	b29b      	uxth	r3, r3
90025cea:	fb09 5303 	mla	r3, r9, r3, r5
90025cee:	fb0a 3304 	mla	r3, sl, r4, r3
90025cf2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025cf4:	fb0e 3304 	mla	r3, lr, r4, r3
90025cf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025cfc:	2b00      	cmp	r3, #0
90025cfe:	f000 8111 	beq.w	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025d02:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025d04:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025d08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025d0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025d10:	f000 8192 	beq.w	90026038 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90025d14:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025d18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025d1c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025d20:	fb0a fe0e 	mul.w	lr, sl, lr
90025d24:	fb09 f000 	mul.w	r0, r9, r0
90025d28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90025d2c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025d30:	f100 0b20 	add.w	fp, r0, #32
90025d34:	44ce      	add	lr, r9
90025d36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90025d3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025d3e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025d42:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90025d46:	ea4e 0909 	orr.w	r9, lr, r9
90025d4a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90025d4e:	8868      	ldrh	r0, [r5, #2]
90025d50:	d019      	beq.n	90025d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90025d52:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90025d56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025d5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025d5e:	fb0a fe0e 	mul.w	lr, sl, lr
90025d62:	fb08 f800 	mul.w	r8, r8, r0
90025d66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90025d6a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90025d6e:	f108 0b20 	add.w	fp, r8, #32
90025d72:	4486      	add	lr, r0
90025d74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025d78:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025d7c:	0a00      	lsrs	r0, r0, #8
90025d7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025d82:	ea4e 0000 	orr.w	r0, lr, r0
90025d86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025d8a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025d8e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025d92:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025d96:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025d9a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025d9e:	ea4e 0909 	orr.w	r9, lr, r9
90025da2:	ea4a 0000 	orr.w	r0, sl, r0
90025da6:	f1bc 0f00 	cmp.w	ip, #0
90025daa:	f000 8147 	beq.w	9002603c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90025dae:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90025db2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025db4:	3a01      	subs	r2, #1
90025db6:	2cff      	cmp	r4, #255	@ 0xff
90025db8:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025dbc:	f102 0202 	add.w	r2, r2, #2
90025dc0:	eb05 0e02 	add.w	lr, r5, r2
90025dc4:	5aaa      	ldrh	r2, [r5, r2]
90025dc6:	d018      	beq.n	90025dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90025dc8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025dcc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025dd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025dd4:	fb04 fa02 	mul.w	sl, r4, r2
90025dd8:	fb08 f805 	mul.w	r8, r8, r5
90025ddc:	f10a 0520 	add.w	r5, sl, #32
90025de0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90025de4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025de8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025dec:	4442      	add	r2, r8
90025dee:	0a2d      	lsrs	r5, r5, #8
90025df0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90025df4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025df8:	432a      	orrs	r2, r5
90025dfa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025dfc:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025e00:	2cff      	cmp	r4, #255	@ 0xff
90025e02:	d01a      	beq.n	90025e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90025e04:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025e08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025e0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025e10:	fb04 fa05 	mul.w	sl, r4, r5
90025e14:	fb08 f80e 	mul.w	r8, r8, lr
90025e18:	f10a 0e20 	add.w	lr, sl, #32
90025e1c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025e20:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025e24:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025e28:	4445      	add	r5, r8
90025e2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025e2e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90025e32:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90025e36:	ea45 050e 	orr.w	r5, r5, lr
90025e3a:	fb1c fe01 	smulbb	lr, ip, r1
90025e3e:	f1cc 0810 	rsb	r8, ip, #16
90025e42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025e46:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025e4a:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025e4e:	eba8 0801 	sub.w	r8, r8, r1
90025e52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025e56:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e5a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025e5e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90025e62:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025e66:	ea4a 0202 	orr.w	r2, sl, r2
90025e6a:	4341      	muls	r1, r0
90025e6c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025e70:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025e74:	fb09 1108 	mla	r1, r9, r8, r1
90025e78:	ea4b 0505 	orr.w	r5, fp, r5
90025e7c:	fb0c 1102 	mla	r1, ip, r2, r1
90025e80:	fb0e 1e05 	mla	lr, lr, r5, r1
90025e84:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025e88:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025e8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025e90:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025e94:	ea42 0e0e 	orr.w	lr, r2, lr
90025e98:	fa1f f28e 	uxth.w	r2, lr
90025e9c:	2bff      	cmp	r3, #255	@ 0xff
90025e9e:	d103      	bne.n	90025ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025ea0:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025ea2:	29ff      	cmp	r1, #255	@ 0xff
90025ea4:	f000 80de 	beq.w	90026064 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90025ea8:	990a      	ldr	r1, [sp, #40]	@ 0x28
90025eaa:	1215      	asrs	r5, r2, #8
90025eac:	8838      	ldrh	r0, [r7, #0]
90025eae:	434b      	muls	r3, r1
90025eb0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025eb4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025eb6:	f103 0c01 	add.w	ip, r3, #1
90025eba:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90025ebe:	ea6f 2323 	mvn.w	r3, r3, asr #8
90025ec2:	fa5f fc83 	uxtb.w	ip, r3
90025ec6:	1203      	asrs	r3, r0, #8
90025ec8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025ecc:	fb13 f30c 	smulbb	r3, r3, ip
90025ed0:	fb05 3501 	mla	r5, r5, r1, r3
90025ed4:	10c3      	asrs	r3, r0, #3
90025ed6:	10d1      	asrs	r1, r2, #3
90025ed8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025edc:	00d2      	lsls	r2, r2, #3
90025ede:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025ee2:	b2ad      	uxth	r5, r5
90025ee4:	fb13 f30c 	smulbb	r3, r3, ip
90025ee8:	b2d2      	uxtb	r2, r2
90025eea:	fb01 3104 	mla	r1, r1, r4, r3
90025eee:	00c3      	lsls	r3, r0, #3
90025ef0:	b2db      	uxtb	r3, r3
90025ef2:	b289      	uxth	r1, r1
90025ef4:	fb13 f30c 	smulbb	r3, r3, ip
90025ef8:	fb02 3304 	mla	r3, r2, r4, r3
90025efc:	b29a      	uxth	r2, r3
90025efe:	1c6b      	adds	r3, r5, #1
90025f00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025f04:	1c53      	adds	r3, r2, #1
90025f06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025f0a:	1c4a      	adds	r2, r1, #1
90025f0c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025f10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025f14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025f18:	0949      	lsrs	r1, r1, #5
90025f1a:	432b      	orrs	r3, r5
90025f1c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025f20:	430b      	orrs	r3, r1
90025f22:	803b      	strh	r3, [r7, #0]
90025f24:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025f26:	3702      	adds	r7, #2
90025f28:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90025f2a:	4413      	add	r3, r2
90025f2c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90025f2e:	9321      	str	r3, [sp, #132]	@ 0x84
90025f30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f32:	441a      	add	r2, r3
90025f34:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025f36:	3b01      	subs	r3, #1
90025f38:	9222      	str	r2, [sp, #136]	@ 0x88
90025f3a:	9313      	str	r3, [sp, #76]	@ 0x4c
90025f3c:	e687      	b.n	90025c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90025f3e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025f40:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90025f42:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90025f44:	4433      	add	r3, r6
90025f46:	9321      	str	r3, [sp, #132]	@ 0x84
90025f48:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f4a:	441c      	add	r4, r3
90025f4c:	9b08      	ldr	r3, [sp, #32]
90025f4e:	3b01      	subs	r3, #1
90025f50:	9422      	str	r4, [sp, #136]	@ 0x88
90025f52:	9308      	str	r3, [sp, #32]
90025f54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025f56:	3302      	adds	r3, #2
90025f58:	9309      	str	r3, [sp, #36]	@ 0x24
90025f5a:	e656      	b.n	90025c0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90025f5c:	d028      	beq.n	90025fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90025f5e:	9b08      	ldr	r3, [sp, #32]
90025f60:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90025f62:	3b01      	subs	r3, #1
90025f64:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90025f66:	fb00 5003 	mla	r0, r0, r3, r5
90025f6a:	1400      	asrs	r0, r0, #16
90025f6c:	f53f ae6a 	bmi.w	90025c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f70:	3901      	subs	r1, #1
90025f72:	4288      	cmp	r0, r1
90025f74:	f6bf ae66 	bge.w	90025c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f78:	9924      	ldr	r1, [sp, #144]	@ 0x90
90025f7a:	9822      	ldr	r0, [sp, #136]	@ 0x88
90025f7c:	fb01 0303 	mla	r3, r1, r3, r0
90025f80:	141b      	asrs	r3, r3, #16
90025f82:	f53f ae5f 	bmi.w	90025c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f86:	3a01      	subs	r2, #1
90025f88:	4293      	cmp	r3, r2
90025f8a:	f6bf ae5b 	bge.w	90025c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025f8e:	9b08      	ldr	r3, [sp, #32]
90025f90:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90025f94:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90025f98:	9313      	str	r3, [sp, #76]	@ 0x4c
90025f9a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025f9c:	2b00      	cmp	r3, #0
90025f9e:	f300 8082 	bgt.w	900260a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90025fa2:	9b08      	ldr	r3, [sp, #32]
90025fa4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025fa8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025faa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025fae:	9309      	str	r3, [sp, #36]	@ 0x24
90025fb0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90025fb2:	2b00      	cmp	r3, #0
90025fb4:	f340 81ef 	ble.w	90026396 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90025fb8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025fbc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
90025fc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025fc6:	eef0 6a62 	vmov.f32	s13, s5
90025fca:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025fce:	ee31 1a05 	vadd.f32	s2, s2, s10
90025fd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025fd6:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90025fda:	eef0 6a43 	vmov.f32	s13, s6
90025fde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025fe2:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90025fe6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025fea:	ee61 7a27 	vmul.f32	s15, s2, s15
90025fee:	ee77 2a62 	vsub.f32	s5, s14, s5
90025ff2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025ff6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ffa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025ffe:	ee12 2a90 	vmov	r2, s5
90026002:	eef0 2a47 	vmov.f32	s5, s14
90026006:	fb92 f3f3 	sdiv	r3, r2, r3
9002600a:	ee13 2a10 	vmov	r2, s6
9002600e:	9323      	str	r3, [sp, #140]	@ 0x8c
90026010:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026012:	eeb0 3a67 	vmov.f32	s6, s15
90026016:	fb92 f3f3 	sdiv	r3, r2, r3
9002601a:	9324      	str	r3, [sp, #144]	@ 0x90
9002601c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002601e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026020:	3b01      	subs	r3, #1
90026022:	9311      	str	r3, [sp, #68]	@ 0x44
90026024:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026026:	bf08      	it	eq
90026028:	4613      	moveq	r3, r2
9002602a:	9308      	str	r3, [sp, #32]
9002602c:	e5df      	b.n	90025bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002602e:	fb08 f505 	mul.w	r5, r8, r5
90026032:	fb09 5303 	mla	r3, r9, r3, r5
90026036:	e65f      	b.n	90025cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90026038:	4681      	mov	r9, r0
9002603a:	e686      	b.n	90025d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002603c:	f1c1 0210 	rsb	r2, r1, #16
90026040:	4341      	muls	r1, r0
90026042:	fb09 1902 	mla	r9, r9, r2, r1
90026046:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002604a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002604e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026052:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026056:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002605a:	ea42 0909 	orr.w	r9, r2, r9
9002605e:	fa1f f289 	uxth.w	r2, r9
90026062:	e71b      	b.n	90025e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026064:	803a      	strh	r2, [r7, #0]
90026066:	e75d      	b.n	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026068:	f115 0e01 	adds.w	lr, r5, #1
9002606c:	f53f af5a 	bmi.w	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026070:	4572      	cmp	r2, lr
90026072:	f6ff af57 	blt.w	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026076:	f110 0e01 	adds.w	lr, r0, #1
9002607a:	f53f af53 	bmi.w	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002607e:	4573      	cmp	r3, lr
90026080:	f6ff af50 	blt.w	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026084:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026086:	b21b      	sxth	r3, r3
90026088:	b212      	sxth	r2, r2
9002608a:	9502      	str	r5, [sp, #8]
9002608c:	9301      	str	r3, [sp, #4]
9002608e:	9200      	str	r2, [sp, #0]
90026090:	e9cd 0103 	strd	r0, r1, [sp, #12]
90026094:	e9cd c405 	strd	ip, r4, [sp, #20]
90026098:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9002609c:	4639      	mov	r1, r7
9002609e:	9815      	ldr	r0, [sp, #84]	@ 0x54
900260a0:	f7ff fc02 	bl	900258a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900260a4:	e73e      	b.n	90025f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900260a6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900260a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
900260ac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900260ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
900260b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900260b4:	fa1f fc82 	uxth.w	ip, r2
900260b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900260bc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900260be:	ea4f 100c 	mov.w	r0, ip, lsl #4
900260c2:	141f      	asrs	r7, r3, #16
900260c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900260c6:	141b      	asrs	r3, r3, #16
900260c8:	fb01 3707 	mla	r7, r1, r7, r3
900260cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900260ce:	eb03 0a07 	add.w	sl, r3, r7
900260d2:	f813 9007 	ldrb.w	r9, [r3, r7]
900260d6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900260da:	f89a 8001 	ldrb.w	r8, [sl, #1]
900260de:	b29b      	uxth	r3, r3
900260e0:	2d00      	cmp	r5, #0
900260e2:	f000 813d 	beq.w	90026360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900260e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900260ea:	eb0a 0b01 	add.w	fp, sl, r1
900260ee:	fa1f fa85 	uxth.w	sl, r5
900260f2:	940f      	str	r4, [sp, #60]	@ 0x3c
900260f4:	fb0a fc0c 	mul.w	ip, sl, ip
900260f8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900260fc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90026100:	eba0 000c 	sub.w	r0, r0, ip
90026104:	9410      	str	r4, [sp, #64]	@ 0x40
90026106:	fa1f fa8a 	uxth.w	sl, sl
9002610a:	b280      	uxth	r0, r0
9002610c:	eba3 030a 	sub.w	r3, r3, sl
90026110:	fb08 f000 	mul.w	r0, r8, r0
90026114:	b29b      	uxth	r3, r3
90026116:	fb09 0303 	mla	r3, r9, r3, r0
9002611a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9002611c:	fb0a 3300 	mla	r3, sl, r0, r3
90026120:	fb0c 3304 	mla	r3, ip, r4, r3
90026124:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026128:	2b00      	cmp	r3, #0
9002612a:	f000 810b 	beq.w	90026344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002612e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90026130:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026134:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026136:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002613a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002613e:	f000 8114 	beq.w	9002636a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90026142:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026146:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002614a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002614e:	fb0a fc0c 	mul.w	ip, sl, ip
90026152:	fb09 f707 	mul.w	r7, r9, r7
90026156:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002615a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002615e:	f107 0b20 	add.w	fp, r7, #32
90026162:	44cc      	add	ip, r9
90026164:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026168:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002616c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026170:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026174:	ea4c 0909 	orr.w	r9, ip, r9
90026178:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002617c:	8847      	ldrh	r7, [r0, #2]
9002617e:	d019      	beq.n	900261b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90026180:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026184:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026188:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002618c:	fb0a fc0c 	mul.w	ip, sl, ip
90026190:	fb08 f807 	mul.w	r8, r8, r7
90026194:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026198:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002619c:	f108 0b20 	add.w	fp, r8, #32
900261a0:	44bc      	add	ip, r7
900261a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900261a6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900261aa:	0a3f      	lsrs	r7, r7, #8
900261ac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900261b0:	ea4c 0707 	orr.w	r7, ip, r7
900261b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900261b8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900261bc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900261c0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900261c4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900261c8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900261cc:	ea4c 0909 	orr.w	r9, ip, r9
900261d0:	ea4a 0707 	orr.w	r7, sl, r7
900261d4:	2d00      	cmp	r5, #0
900261d6:	f000 80ca 	beq.w	9002636e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900261da:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900261de:	3901      	subs	r1, #1
900261e0:	0049      	lsls	r1, r1, #1
900261e2:	3102      	adds	r1, #2
900261e4:	eb00 0c01 	add.w	ip, r0, r1
900261e8:	5a41      	ldrh	r1, [r0, r1]
900261ea:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900261ec:	28ff      	cmp	r0, #255	@ 0xff
900261ee:	d019      	beq.n	90026224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900261f0:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900261f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900261f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900261fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
900261fe:	fb04 fa01 	mul.w	sl, r4, r1
90026202:	fb08 f800 	mul.w	r8, r8, r0
90026206:	f10a 0020 	add.w	r0, sl, #32
9002620a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002620e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026212:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90026216:	4441      	add	r1, r8
90026218:	0a00      	lsrs	r0, r0, #8
9002621a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002621e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026222:	4301      	orrs	r1, r0
90026224:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90026226:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002622a:	2cff      	cmp	r4, #255	@ 0xff
9002622c:	d01a      	beq.n	90026264 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
9002622e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90026232:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026236:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002623a:	fb04 fa00 	mul.w	sl, r4, r0
9002623e:	fb08 f80c 	mul.w	r8, r8, ip
90026242:	f10a 0c20 	add.w	ip, sl, #32
90026246:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002624a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002624e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90026252:	4440      	add	r0, r8
90026254:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026258:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9002625c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026260:	ea40 000c 	orr.w	r0, r0, ip
90026264:	fb15 fc02 	smulbb	ip, r5, r2
90026268:	f1c5 0810 	rsb	r8, r5, #16
9002626c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026270:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026274:	ea4f 0cec 	mov.w	ip, ip, asr #3
90026278:	eba8 0802 	sub.w	r8, r8, r2
9002627c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026280:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026284:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90026288:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002628c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90026290:	ea4a 0101 	orr.w	r1, sl, r1
90026294:	437a      	muls	r2, r7
90026296:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002629a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002629e:	fb09 2208 	mla	r2, r9, r8, r2
900262a2:	ea4b 0000 	orr.w	r0, fp, r0
900262a6:	fb05 2201 	mla	r2, r5, r1, r2
900262aa:	fb0c 2200 	mla	r2, ip, r0, r2
900262ae:	0d57      	lsrs	r7, r2, #21
900262b0:	0952      	lsrs	r2, r2, #5
900262b2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900262b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900262ba:	433a      	orrs	r2, r7
900262bc:	2bff      	cmp	r3, #255	@ 0xff
900262be:	b292      	uxth	r2, r2
900262c0:	d102      	bne.n	900262c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900262c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
900262c4:	29ff      	cmp	r1, #255	@ 0xff
900262c6:	d063      	beq.n	90026390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900262c8:	980a      	ldr	r0, [sp, #40]	@ 0x28
900262ca:	1215      	asrs	r5, r2, #8
900262cc:	f8be 1000 	ldrh.w	r1, [lr]
900262d0:	4343      	muls	r3, r0
900262d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900262d4:	10cf      	asrs	r7, r1, #3
900262d6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900262da:	1c58      	adds	r0, r3, #1
900262dc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900262e0:	eb00 2323 	add.w	r3, r0, r3, asr #8
900262e4:	1208      	asrs	r0, r1, #8
900262e6:	ea6f 2323 	mvn.w	r3, r3, asr #8
900262ea:	00c9      	lsls	r1, r1, #3
900262ec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900262f0:	b2db      	uxtb	r3, r3
900262f2:	b2c9      	uxtb	r1, r1
900262f4:	fb10 f003 	smulbb	r0, r0, r3
900262f8:	fb11 f103 	smulbb	r1, r1, r3
900262fc:	fb05 0504 	mla	r5, r5, r4, r0
90026300:	10d0      	asrs	r0, r2, #3
90026302:	fb17 f703 	smulbb	r7, r7, r3
90026306:	00d2      	lsls	r2, r2, #3
90026308:	b2ad      	uxth	r5, r5
9002630a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002630e:	b2d2      	uxtb	r2, r2
90026310:	fb00 7004 	mla	r0, r0, r4, r7
90026314:	1c6b      	adds	r3, r5, #1
90026316:	fb02 1204 	mla	r2, r2, r4, r1
9002631a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002631e:	b292      	uxth	r2, r2
90026320:	b280      	uxth	r0, r0
90026322:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026326:	1c57      	adds	r7, r2, #1
90026328:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002632c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90026330:	433d      	orrs	r5, r7
90026332:	1c47      	adds	r7, r0, #1
90026334:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90026338:	097f      	lsrs	r7, r7, #5
9002633a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002633e:	433d      	orrs	r5, r7
90026340:	f8ae 5000 	strh.w	r5, [lr]
90026344:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026346:	f10e 0e02 	add.w	lr, lr, #2
9002634a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
9002634c:	4413      	add	r3, r2
9002634e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90026350:	9321      	str	r3, [sp, #132]	@ 0x84
90026352:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026354:	441a      	add	r2, r3
90026356:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026358:	3b01      	subs	r3, #1
9002635a:	9222      	str	r2, [sp, #136]	@ 0x88
9002635c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002635e:	e61c      	b.n	90025f9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026360:	fb08 f000 	mul.w	r0, r8, r0
90026364:	fb09 0303 	mla	r3, r9, r3, r0
90026368:	e6dc      	b.n	90026124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002636a:	46b9      	mov	r9, r7
9002636c:	e704      	b.n	90026178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002636e:	f1c2 0110 	rsb	r1, r2, #16
90026372:	437a      	muls	r2, r7
90026374:	fb09 2901 	mla	r9, r9, r1, r2
90026378:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002637c:	ea4f 5059 	mov.w	r0, r9, lsr #21
90026380:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026384:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026388:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002638c:	4302      	orrs	r2, r0
9002638e:	e795      	b.n	900262bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90026390:	f8ae 2000 	strh.w	r2, [lr]
90026394:	e7d6      	b.n	90026344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026396:	b017      	add	sp, #92	@ 0x5c
90026398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002639c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002639c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900263a0:	b085      	sub	sp, #20
900263a2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
900263a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
900263aa:	2800      	cmp	r0, #0
900263ac:	9103      	str	r1, [sp, #12]
900263ae:	fb00 7406 	mla	r4, r0, r6, r7
900263b2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
900263b6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900263ba:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900263be:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900263c2:	eb02 0904 	add.w	r9, r2, r4
900263c6:	9501      	str	r5, [sp, #4]
900263c8:	f2c0 8141 	blt.w	9002664e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900263cc:	4583      	cmp	fp, r0
900263ce:	f340 813e 	ble.w	9002664e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900263d2:	2f00      	cmp	r7, #0
900263d4:	f2c0 8137 	blt.w	90026646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900263d8:	42be      	cmp	r6, r7
900263da:	f340 8134 	ble.w	90026646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900263de:	f812 c004 	ldrb.w	ip, [r2, r4]
900263e2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900263e6:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900263ea:	ea4f 02ec 	mov.w	r2, ip, asr #3
900263ee:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900263f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900263f6:	4355      	muls	r5, r2
900263f8:	fb0c f203 	mul.w	r2, ip, r3
900263fc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90026400:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90026404:	441d      	add	r5, r3
90026406:	f102 0320 	add.w	r3, r2, #32
9002640a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002640e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90026412:	0a1b      	lsrs	r3, r3, #8
90026414:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026418:	431c      	orrs	r4, r3
9002641a:	1c7b      	adds	r3, r7, #1
9002641c:	f100 811c 	bmi.w	90026658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026420:	429e      	cmp	r6, r3
90026422:	f340 8119 	ble.w	90026658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026426:	2900      	cmp	r1, #0
90026428:	f000 8119 	beq.w	9002665e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
9002642c:	9a01      	ldr	r2, [sp, #4]
9002642e:	f899 3001 	ldrb.w	r3, [r9, #1]
90026432:	8855      	ldrh	r5, [r2, #2]
90026434:	ea4f 08e3 	mov.w	r8, r3, asr #3
90026438:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
9002643c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026440:	fb08 f802 	mul.w	r8, r8, r2
90026444:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026448:	435d      	muls	r5, r3
9002644a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002644e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026452:	44d0      	add	r8, sl
90026454:	f105 0a20 	add.w	sl, r5, #32
90026458:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002645c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026460:	0a2d      	lsrs	r5, r5, #8
90026462:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026466:	432a      	orrs	r2, r5
90026468:	3001      	adds	r0, #1
9002646a:	f100 80fe 	bmi.w	9002666a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002646e:	4583      	cmp	fp, r0
90026470:	f340 80fb 	ble.w	9002666a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026474:	f1be 0f00 	cmp.w	lr, #0
90026478:	f000 80fc 	beq.w	90026674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
9002647c:	2f00      	cmp	r7, #0
9002647e:	f2c0 80f1 	blt.w	90026664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026482:	42be      	cmp	r6, r7
90026484:	f340 80ee 	ble.w	90026664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026488:	9801      	ldr	r0, [sp, #4]
9002648a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002648e:	f819 5006 	ldrb.w	r5, [r9, r6]
90026492:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90026496:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002649a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002649e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900264a2:	fb0a fa00 	mul.w	sl, sl, r0
900264a6:	fb05 f808 	mul.w	r8, r5, r8
900264aa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900264ae:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
900264b2:	4482      	add	sl, r0
900264b4:	f108 0020 	add.w	r0, r8, #32
900264b8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900264bc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900264c0:	0a00      	lsrs	r0, r0, #8
900264c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900264c6:	ea4b 0b00 	orr.w	fp, fp, r0
900264ca:	3701      	adds	r7, #1
900264cc:	f100 80d7 	bmi.w	9002667e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900264d0:	42be      	cmp	r6, r7
900264d2:	f340 80d4 	ble.w	9002667e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900264d6:	2900      	cmp	r1, #0
900264d8:	f000 80d4 	beq.w	90026684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900264dc:	3601      	adds	r6, #1
900264de:	9801      	ldr	r0, [sp, #4]
900264e0:	f819 7006 	ldrb.w	r7, [r9, r6]
900264e4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900264e8:	ea4f 09e7 	mov.w	r9, r7, asr #3
900264ec:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900264f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900264f4:	fb09 f906 	mul.w	r9, r9, r6
900264f8:	fb07 f800 	mul.w	r8, r7, r0
900264fc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90026500:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90026504:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90026508:	44d1      	add	r9, sl
9002650a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002650e:	f108 0020 	add.w	r0, r8, #32
90026512:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026516:	0a00      	lsrs	r0, r0, #8
90026518:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002651c:	4330      	orrs	r0, r6
9002651e:	b28e      	uxth	r6, r1
90026520:	fa1f f98e 	uxth.w	r9, lr
90026524:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90026528:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9002652c:	fb06 f809 	mul.w	r8, r6, r9
90026530:	0136      	lsls	r6, r6, #4
90026532:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026536:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002653a:	9601      	str	r6, [sp, #4]
9002653c:	ea4a 0404 	orr.w	r4, sl, r4
90026540:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026544:	fa1f f689 	uxth.w	r6, r9
90026548:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002654c:	fb11 f90e 	smulbb	r9, r1, lr
90026550:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026554:	9602      	str	r6, [sp, #8]
90026556:	4626      	mov	r6, r4
90026558:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002655c:	f1ce 0410 	rsb	r4, lr, #16
90026560:	ea4a 0202 	orr.w	r2, sl, r2
90026564:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026568:	1a64      	subs	r4, r4, r1
9002656a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002656e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026572:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026576:	434a      	muls	r2, r1
90026578:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002657c:	ea4a 0000 	orr.w	r0, sl, r0
90026580:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026584:	fb04 2406 	mla	r4, r4, r6, r2
90026588:	9903      	ldr	r1, [sp, #12]
9002658a:	fb09 4200 	mla	r2, r9, r0, r4
9002658e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90026592:	9801      	ldr	r0, [sp, #4]
90026594:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026598:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002659c:	8809      	ldrh	r1, [r1, #0]
9002659e:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
900265a2:	ea44 0b0b 	orr.w	fp, r4, fp
900265a6:	9c02      	ldr	r4, [sp, #8]
900265a8:	1b00      	subs	r0, r0, r4
900265aa:	9c01      	ldr	r4, [sp, #4]
900265ac:	fb0e 2e0b 	mla	lr, lr, fp, r2
900265b0:	eba4 0608 	sub.w	r6, r4, r8
900265b4:	b280      	uxth	r0, r0
900265b6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900265ba:	b2b6      	uxth	r6, r6
900265bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900265c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900265c4:	4373      	muls	r3, r6
900265c6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900265ca:	fb0c 3300 	mla	r3, ip, r0, r3
900265ce:	9802      	ldr	r0, [sp, #8]
900265d0:	ea42 0e0e 	orr.w	lr, r2, lr
900265d4:	fb00 3505 	mla	r5, r0, r5, r3
900265d8:	120b      	asrs	r3, r1, #8
900265da:	10c8      	asrs	r0, r1, #3
900265dc:	fb08 5707 	mla	r7, r8, r7, r5
900265e0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900265e4:	00c9      	lsls	r1, r1, #3
900265e6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900265ea:	ea6f 2727 	mvn.w	r7, r7, asr #8
900265ee:	fa1f f28e 	uxth.w	r2, lr
900265f2:	b2c9      	uxtb	r1, r1
900265f4:	b2ff      	uxtb	r7, r7
900265f6:	437b      	muls	r3, r7
900265f8:	4378      	muls	r0, r7
900265fa:	434f      	muls	r7, r1
900265fc:	1c59      	adds	r1, r3, #1
900265fe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90026602:	1213      	asrs	r3, r2, #8
90026604:	f023 0307 	bic.w	r3, r3, #7
90026608:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002660c:	1c41      	adds	r1, r0, #1
9002660e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026612:	10d1      	asrs	r1, r2, #3
90026614:	021b      	lsls	r3, r3, #8
90026616:	f021 0103 	bic.w	r1, r1, #3
9002661a:	00d2      	lsls	r2, r2, #3
9002661c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90026620:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026624:	00c9      	lsls	r1, r1, #3
90026626:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002662a:	430b      	orrs	r3, r1
9002662c:	1c79      	adds	r1, r7, #1
9002662e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90026632:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90026636:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002663a:	431a      	orrs	r2, r3
9002663c:	9b03      	ldr	r3, [sp, #12]
9002663e:	801a      	strh	r2, [r3, #0]
90026640:	b005      	add	sp, #20
90026642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026646:	f04f 0c00 	mov.w	ip, #0
9002664a:	4664      	mov	r4, ip
9002664c:	e6e5      	b.n	9002641a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002664e:	2300      	movs	r3, #0
90026650:	469c      	mov	ip, r3
90026652:	461a      	mov	r2, r3
90026654:	461c      	mov	r4, r3
90026656:	e707      	b.n	90026468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026658:	2300      	movs	r3, #0
9002665a:	461a      	mov	r2, r3
9002665c:	e704      	b.n	90026468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002665e:	460b      	mov	r3, r1
90026660:	460a      	mov	r2, r1
90026662:	e701      	b.n	90026468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026664:	2500      	movs	r5, #0
90026666:	46ab      	mov	fp, r5
90026668:	e72f      	b.n	900264ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002666a:	2700      	movs	r7, #0
9002666c:	463d      	mov	r5, r7
9002666e:	4638      	mov	r0, r7
90026670:	46bb      	mov	fp, r7
90026672:	e754      	b.n	9002651e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026674:	4677      	mov	r7, lr
90026676:	4675      	mov	r5, lr
90026678:	4670      	mov	r0, lr
9002667a:	46f3      	mov	fp, lr
9002667c:	e74f      	b.n	9002651e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002667e:	2700      	movs	r7, #0
90026680:	4638      	mov	r0, r7
90026682:	e74c      	b.n	9002651e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026684:	460f      	mov	r7, r1
90026686:	4608      	mov	r0, r1
90026688:	e749      	b.n	9002651e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002668c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002668c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026690:	b093      	sub	sp, #76	@ 0x4c
90026692:	9210      	str	r2, [sp, #64]	@ 0x40
90026694:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90026696:	9011      	str	r0, [sp, #68]	@ 0x44
90026698:	910e      	str	r1, [sp, #56]	@ 0x38
9002669a:	6850      	ldr	r0, [r2, #4]
9002669c:	9306      	str	r3, [sp, #24]
9002669e:	6812      	ldr	r2, [r2, #0]
900266a0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900266a4:	fb00 1303 	mla	r3, r0, r3, r1
900266a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900266ac:	9307      	str	r3, [sp, #28]
900266ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900266b0:	681b      	ldr	r3, [r3, #0]
900266b2:	9308      	str	r3, [sp, #32]
900266b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900266b6:	685b      	ldr	r3, [r3, #4]
900266b8:	9309      	str	r3, [sp, #36]	@ 0x24
900266ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900266bc:	2b00      	cmp	r3, #0
900266be:	dc03      	bgt.n	900266c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900266c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900266c2:	2b00      	cmp	r3, #0
900266c4:	f340 83b6 	ble.w	90026e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900266c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900266ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900266ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900266d2:	1e48      	subs	r0, r1, #1
900266d4:	1e55      	subs	r5, r2, #1
900266d6:	9b06      	ldr	r3, [sp, #24]
900266d8:	2b00      	cmp	r3, #0
900266da:	f340 8165 	ble.w	900269a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900266de:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
900266e0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900266e2:	1436      	asrs	r6, r6, #16
900266e4:	ea4f 4323 	mov.w	r3, r3, asr #16
900266e8:	d406      	bmi.n	900266f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900266ea:	4286      	cmp	r6, r0
900266ec:	da04      	bge.n	900266f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900266ee:	2b00      	cmp	r3, #0
900266f0:	db02      	blt.n	900266f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900266f2:	42ab      	cmp	r3, r5
900266f4:	f2c0 8159 	blt.w	900269aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900266f8:	3601      	adds	r6, #1
900266fa:	f100 8146 	bmi.w	9002698a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900266fe:	42b1      	cmp	r1, r6
90026700:	f2c0 8143 	blt.w	9002698a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026704:	3301      	adds	r3, #1
90026706:	f100 8140 	bmi.w	9002698a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002670a:	429a      	cmp	r2, r3
9002670c:	f2c0 813d 	blt.w	9002698a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026710:	9b06      	ldr	r3, [sp, #24]
90026712:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026716:	9f07      	ldr	r7, [sp, #28]
90026718:	930f      	str	r3, [sp, #60]	@ 0x3c
9002671a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002671c:	2b00      	cmp	r3, #0
9002671e:	f340 8166 	ble.w	900269ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026722:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026724:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90026726:	1418      	asrs	r0, r3, #16
90026728:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002672a:	142d      	asrs	r5, r5, #16
9002672c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026730:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026732:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90026736:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026738:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002673c:	f100 81f0 	bmi.w	90026b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026740:	f102 3eff 	add.w	lr, r2, #4294967295
90026744:	4575      	cmp	r5, lr
90026746:	f280 81eb 	bge.w	90026b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002674a:	2800      	cmp	r0, #0
9002674c:	f2c0 81e8 	blt.w	90026b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026750:	f103 3eff 	add.w	lr, r3, #4294967295
90026754:	4570      	cmp	r0, lr
90026756:	f280 81e3 	bge.w	90026b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002675a:	b212      	sxth	r2, r2
9002675c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002675e:	fa1f fe81 	uxth.w	lr, r1
90026762:	fb00 5002 	mla	r0, r0, r2, r5
90026766:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002676a:	eb03 0a00 	add.w	sl, r3, r0
9002676e:	f813 9000 	ldrb.w	r9, [r3, r0]
90026772:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90026776:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002677a:	b29b      	uxth	r3, r3
9002677c:	f1bc 0f00 	cmp.w	ip, #0
90026780:	f000 817b 	beq.w	90026a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026784:	f81a 4002 	ldrb.w	r4, [sl, r2]
90026788:	eb0a 0b02 	add.w	fp, sl, r2
9002678c:	fa1f fa8c 	uxth.w	sl, ip
90026790:	940a      	str	r4, [sp, #40]	@ 0x28
90026792:	fb0a fe0e 	mul.w	lr, sl, lr
90026796:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002679a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002679e:	eba5 050e 	sub.w	r5, r5, lr
900267a2:	940b      	str	r4, [sp, #44]	@ 0x2c
900267a4:	fa1f fa8a 	uxth.w	sl, sl
900267a8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900267aa:	b2ad      	uxth	r5, r5
900267ac:	eba3 030a 	sub.w	r3, r3, sl
900267b0:	fb08 f505 	mul.w	r5, r8, r5
900267b4:	b29b      	uxth	r3, r3
900267b6:	fb09 5303 	mla	r3, r9, r3, r5
900267ba:	fb0a 3304 	mla	r3, sl, r4, r3
900267be:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900267c0:	fb0e 3304 	mla	r3, lr, r4, r3
900267c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900267c8:	2b00      	cmp	r3, #0
900267ca:	f000 80d1 	beq.w	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900267ce:	9c08      	ldr	r4, [sp, #32]
900267d0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900267d4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900267d8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900267dc:	f000 8152 	beq.w	90026a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900267e0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900267e4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900267e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900267ec:	fb0a fe0e 	mul.w	lr, sl, lr
900267f0:	fb09 f000 	mul.w	r0, r9, r0
900267f4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900267f8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900267fc:	f100 0b20 	add.w	fp, r0, #32
90026800:	44ce      	add	lr, r9
90026802:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90026806:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002680a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002680e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026812:	ea4e 0909 	orr.w	r9, lr, r9
90026816:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002681a:	8868      	ldrh	r0, [r5, #2]
9002681c:	d019      	beq.n	90026852 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002681e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026822:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026826:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002682a:	fb0a fe0e 	mul.w	lr, sl, lr
9002682e:	fb08 f800 	mul.w	r8, r8, r0
90026832:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90026836:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002683a:	f108 0b20 	add.w	fp, r8, #32
9002683e:	4486      	add	lr, r0
90026840:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026844:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026848:	0a00      	lsrs	r0, r0, #8
9002684a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002684e:	ea4e 0000 	orr.w	r0, lr, r0
90026852:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90026856:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002685a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002685e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026862:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90026866:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002686a:	ea4e 0909 	orr.w	r9, lr, r9
9002686e:	ea4a 0000 	orr.w	r0, sl, r0
90026872:	f1bc 0f00 	cmp.w	ip, #0
90026876:	f000 8107 	beq.w	90026a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002687a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002687e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026880:	3a01      	subs	r2, #1
90026882:	2cff      	cmp	r4, #255	@ 0xff
90026884:	ea4f 0242 	mov.w	r2, r2, lsl #1
90026888:	f102 0202 	add.w	r2, r2, #2
9002688c:	eb05 0e02 	add.w	lr, r5, r2
90026890:	5aaa      	ldrh	r2, [r5, r2]
90026892:	d018      	beq.n	900268c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90026894:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90026898:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002689c:	ea4f 08e4 	mov.w	r8, r4, asr #3
900268a0:	fb04 fa02 	mul.w	sl, r4, r2
900268a4:	fb08 f805 	mul.w	r8, r8, r5
900268a8:	f10a 0520 	add.w	r5, sl, #32
900268ac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900268b0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900268b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900268b8:	4442      	add	r2, r8
900268ba:	0a2d      	lsrs	r5, r5, #8
900268bc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900268c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900268c4:	432a      	orrs	r2, r5
900268c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900268c8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900268cc:	2cff      	cmp	r4, #255	@ 0xff
900268ce:	d01a      	beq.n	90026906 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900268d0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900268d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900268d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900268dc:	fb04 fa05 	mul.w	sl, r4, r5
900268e0:	fb08 f80e 	mul.w	r8, r8, lr
900268e4:	f10a 0e20 	add.w	lr, sl, #32
900268e8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900268ec:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900268f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900268f4:	4445      	add	r5, r8
900268f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900268fa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900268fe:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026902:	ea45 050e 	orr.w	r5, r5, lr
90026906:	fb1c fe01 	smulbb	lr, ip, r1
9002690a:	f1cc 0810 	rsb	r8, ip, #16
9002690e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026912:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026916:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002691a:	eba8 0801 	sub.w	r8, r8, r1
9002691e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026922:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026926:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002692a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002692e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026932:	ea4a 0202 	orr.w	r2, sl, r2
90026936:	4341      	muls	r1, r0
90026938:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002693c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026940:	fb09 1108 	mla	r1, r9, r8, r1
90026944:	ea4b 0505 	orr.w	r5, fp, r5
90026948:	fb0c 1102 	mla	r1, ip, r2, r1
9002694c:	fb0e 1e05 	mla	lr, lr, r5, r1
90026950:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026954:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026958:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002695c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026960:	ea42 0e0e 	orr.w	lr, r2, lr
90026964:	fa1f f28e 	uxth.w	r2, lr
90026968:	2bff      	cmp	r3, #255	@ 0xff
9002696a:	f040 80a1 	bne.w	90026ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002696e:	803a      	strh	r2, [r7, #0]
90026970:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026972:	3702      	adds	r7, #2
90026974:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90026976:	4413      	add	r3, r2
90026978:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
9002697a:	931d      	str	r3, [sp, #116]	@ 0x74
9002697c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002697e:	441a      	add	r2, r3
90026980:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026982:	3b01      	subs	r3, #1
90026984:	921e      	str	r2, [sp, #120]	@ 0x78
90026986:	930f      	str	r3, [sp, #60]	@ 0x3c
90026988:	e6c7      	b.n	9002671a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002698a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002698c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002698e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90026990:	4433      	add	r3, r6
90026992:	931d      	str	r3, [sp, #116]	@ 0x74
90026994:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026996:	441c      	add	r4, r3
90026998:	9b06      	ldr	r3, [sp, #24]
9002699a:	3b01      	subs	r3, #1
9002699c:	941e      	str	r4, [sp, #120]	@ 0x78
9002699e:	9306      	str	r3, [sp, #24]
900269a0:	9b07      	ldr	r3, [sp, #28]
900269a2:	3302      	adds	r3, #2
900269a4:	9307      	str	r3, [sp, #28]
900269a6:	e696      	b.n	900266d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900269a8:	d028      	beq.n	900269fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900269aa:	9b06      	ldr	r3, [sp, #24]
900269ac:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900269ae:	3b01      	subs	r3, #1
900269b0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900269b2:	fb00 5003 	mla	r0, r0, r3, r5
900269b6:	1400      	asrs	r0, r0, #16
900269b8:	f53f aeaa 	bmi.w	90026710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900269bc:	3901      	subs	r1, #1
900269be:	4288      	cmp	r0, r1
900269c0:	f6bf aea6 	bge.w	90026710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900269c4:	9920      	ldr	r1, [sp, #128]	@ 0x80
900269c6:	981e      	ldr	r0, [sp, #120]	@ 0x78
900269c8:	fb01 0303 	mla	r3, r1, r3, r0
900269cc:	141b      	asrs	r3, r3, #16
900269ce:	f53f ae9f 	bmi.w	90026710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900269d2:	3a01      	subs	r2, #1
900269d4:	4293      	cmp	r3, r2
900269d6:	f6bf ae9b 	bge.w	90026710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900269da:	9b06      	ldr	r3, [sp, #24]
900269dc:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900269e0:	f8dd e01c 	ldr.w	lr, [sp, #28]
900269e4:	930f      	str	r3, [sp, #60]	@ 0x3c
900269e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900269e8:	2b00      	cmp	r3, #0
900269ea:	f300 80b6 	bgt.w	90026b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900269ee:	9b06      	ldr	r3, [sp, #24]
900269f0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900269f4:	9b07      	ldr	r3, [sp, #28]
900269f6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900269fa:	9307      	str	r3, [sp, #28]
900269fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900269fe:	2b00      	cmp	r3, #0
90026a00:	f340 8218 	ble.w	90026e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90026a04:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026a08:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026a0a:	ee30 0a04 	vadd.f32	s0, s0, s8
90026a0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026a12:	eef0 6a62 	vmov.f32	s13, s5
90026a16:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026a1a:	ee31 1a05 	vadd.f32	s2, s2, s10
90026a1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026a22:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90026a26:	eef0 6a43 	vmov.f32	s13, s6
90026a2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026a2e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90026a32:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026a36:	ee61 7a27 	vmul.f32	s15, s2, s15
90026a3a:	ee77 2a62 	vsub.f32	s5, s14, s5
90026a3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026a42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026a46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026a4a:	ee12 2a90 	vmov	r2, s5
90026a4e:	eef0 2a47 	vmov.f32	s5, s14
90026a52:	fb92 f3f3 	sdiv	r3, r2, r3
90026a56:	ee13 2a10 	vmov	r2, s6
90026a5a:	931f      	str	r3, [sp, #124]	@ 0x7c
90026a5c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026a5e:	eeb0 3a67 	vmov.f32	s6, s15
90026a62:	fb92 f3f3 	sdiv	r3, r2, r3
90026a66:	9320      	str	r3, [sp, #128]	@ 0x80
90026a68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026a6a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026a6c:	3b01      	subs	r3, #1
90026a6e:	930e      	str	r3, [sp, #56]	@ 0x38
90026a70:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026a72:	bf08      	it	eq
90026a74:	4613      	moveq	r3, r2
90026a76:	9306      	str	r3, [sp, #24]
90026a78:	e61f      	b.n	900266ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90026a7a:	fb08 f505 	mul.w	r5, r8, r5
90026a7e:	fb09 5303 	mla	r3, r9, r3, r5
90026a82:	e69f      	b.n	900267c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90026a84:	4681      	mov	r9, r0
90026a86:	e6c6      	b.n	90026816 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90026a88:	f1c1 0210 	rsb	r2, r1, #16
90026a8c:	4341      	muls	r1, r0
90026a8e:	fb09 1902 	mla	r9, r9, r2, r1
90026a92:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026a96:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026a9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026a9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026aa2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026aa6:	ea42 0909 	orr.w	r9, r2, r9
90026aaa:	fa1f f289 	uxth.w	r2, r9
90026aae:	e75b      	b.n	90026968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90026ab0:	f8b7 c000 	ldrh.w	ip, [r7]
90026ab4:	43db      	mvns	r3, r3
90026ab6:	ea4f 202c 	mov.w	r0, ip, asr #8
90026aba:	fa5f fe83 	uxtb.w	lr, r3
90026abe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026ac2:	ea4f 05ec 	mov.w	r5, ip, asr #3
90026ac6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90026aca:	fb00 f00e 	mul.w	r0, r0, lr
90026ace:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90026ad2:	b2db      	uxtb	r3, r3
90026ad4:	1c41      	adds	r1, r0, #1
90026ad6:	fb05 f50e 	mul.w	r5, r5, lr
90026ada:	fb03 f30e 	mul.w	r3, r3, lr
90026ade:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026ae2:	1211      	asrs	r1, r2, #8
90026ae4:	f021 0107 	bic.w	r1, r1, #7
90026ae8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026aec:	48d3      	ldr	r0, [pc, #844]	@ (90026e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90026aee:	b2c9      	uxtb	r1, r1
90026af0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90026af4:	1c69      	adds	r1, r5, #1
90026af6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90026afa:	10d1      	asrs	r1, r2, #3
90026afc:	00d2      	lsls	r2, r2, #3
90026afe:	f021 0103 	bic.w	r1, r1, #3
90026b02:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90026b06:	00c9      	lsls	r1, r1, #3
90026b08:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026b0c:	4301      	orrs	r1, r0
90026b0e:	1c58      	adds	r0, r3, #1
90026b10:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90026b14:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026b18:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026b1c:	430a      	orrs	r2, r1
90026b1e:	e726      	b.n	9002696e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90026b20:	f115 0e01 	adds.w	lr, r5, #1
90026b24:	f53f af24 	bmi.w	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b28:	4572      	cmp	r2, lr
90026b2a:	f6ff af21 	blt.w	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b2e:	f110 0e01 	adds.w	lr, r0, #1
90026b32:	f53f af1d 	bmi.w	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b36:	4573      	cmp	r3, lr
90026b38:	f6ff af1a 	blt.w	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b3c:	b21b      	sxth	r3, r3
90026b3e:	b212      	sxth	r2, r2
90026b40:	9301      	str	r3, [sp, #4]
90026b42:	9200      	str	r2, [sp, #0]
90026b44:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90026b48:	e9cd 5002 	strd	r5, r0, [sp, #8]
90026b4c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90026b50:	4639      	mov	r1, r7
90026b52:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026b54:	f7ff fc22 	bl	9002639c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90026b58:	e70a      	b.n	90026970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b5a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026b5c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026b60:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026b62:	f3c3 3503 	ubfx	r5, r3, #12, #4
90026b66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026b68:	fa1f fc82 	uxth.w	ip, r2
90026b6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026b70:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026b72:	ea4f 100c 	mov.w	r0, ip, lsl #4
90026b76:	141f      	asrs	r7, r3, #16
90026b78:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026b7a:	141b      	asrs	r3, r3, #16
90026b7c:	fb01 3707 	mla	r7, r1, r7, r3
90026b80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026b82:	eb03 0a07 	add.w	sl, r3, r7
90026b86:	f813 9007 	ldrb.w	r9, [r3, r7]
90026b8a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026b8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026b92:	b29b      	uxth	r3, r3
90026b94:	2d00      	cmp	r5, #0
90026b96:	f000 80fe 	beq.w	90026d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90026b9a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90026b9e:	eb0a 0b01 	add.w	fp, sl, r1
90026ba2:	fa1f fa85 	uxth.w	sl, r5
90026ba6:	940c      	str	r4, [sp, #48]	@ 0x30
90026ba8:	fb0a fc0c 	mul.w	ip, sl, ip
90026bac:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026bb0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90026bb4:	eba0 000c 	sub.w	r0, r0, ip
90026bb8:	940d      	str	r4, [sp, #52]	@ 0x34
90026bba:	fa1f fa8a 	uxth.w	sl, sl
90026bbe:	b280      	uxth	r0, r0
90026bc0:	eba3 030a 	sub.w	r3, r3, sl
90026bc4:	fb08 f000 	mul.w	r0, r8, r0
90026bc8:	b29b      	uxth	r3, r3
90026bca:	fb09 0303 	mla	r3, r9, r3, r0
90026bce:	980c      	ldr	r0, [sp, #48]	@ 0x30
90026bd0:	fb0a 3300 	mla	r3, sl, r0, r3
90026bd4:	fb0c 3304 	mla	r3, ip, r4, r3
90026bd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026bdc:	2b00      	cmp	r3, #0
90026bde:	f000 80cc 	beq.w	90026d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90026be2:	9808      	ldr	r0, [sp, #32]
90026be4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026be8:	9c08      	ldr	r4, [sp, #32]
90026bea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90026bee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90026bf2:	f000 80d5 	beq.w	90026da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90026bf6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026bfa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026bfe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026c02:	fb0a fc0c 	mul.w	ip, sl, ip
90026c06:	fb09 f707 	mul.w	r7, r9, r7
90026c0a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90026c0e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026c12:	f107 0b20 	add.w	fp, r7, #32
90026c16:	44cc      	add	ip, r9
90026c18:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026c1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026c20:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026c24:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026c28:	ea4c 0909 	orr.w	r9, ip, r9
90026c2c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026c30:	8847      	ldrh	r7, [r0, #2]
90026c32:	d019      	beq.n	90026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90026c34:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026c38:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026c3c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026c40:	fb0a fc0c 	mul.w	ip, sl, ip
90026c44:	fb08 f807 	mul.w	r8, r8, r7
90026c48:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026c4c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026c50:	f108 0b20 	add.w	fp, r8, #32
90026c54:	44bc      	add	ip, r7
90026c56:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90026c5a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026c5e:	0a3f      	lsrs	r7, r7, #8
90026c60:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026c64:	ea4c 0707 	orr.w	r7, ip, r7
90026c68:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90026c6c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026c70:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90026c74:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026c78:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90026c7c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026c80:	ea4c 0909 	orr.w	r9, ip, r9
90026c84:	ea4a 0707 	orr.w	r7, sl, r7
90026c88:	2d00      	cmp	r5, #0
90026c8a:	f000 808b 	beq.w	90026da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90026c8e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90026c92:	3901      	subs	r1, #1
90026c94:	0049      	lsls	r1, r1, #1
90026c96:	3102      	adds	r1, #2
90026c98:	eb00 0c01 	add.w	ip, r0, r1
90026c9c:	5a41      	ldrh	r1, [r0, r1]
90026c9e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90026ca0:	28ff      	cmp	r0, #255	@ 0xff
90026ca2:	d019      	beq.n	90026cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90026ca4:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90026ca8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90026caa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026cae:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026cb2:	fb04 fa01 	mul.w	sl, r4, r1
90026cb6:	fb08 f800 	mul.w	r8, r8, r0
90026cba:	f10a 0020 	add.w	r0, sl, #32
90026cbe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90026cc2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026cc6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90026cca:	4441      	add	r1, r8
90026ccc:	0a00      	lsrs	r0, r0, #8
90026cce:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90026cd2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026cd6:	4301      	orrs	r1, r0
90026cd8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026cda:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90026cde:	2cff      	cmp	r4, #255	@ 0xff
90026ce0:	d01a      	beq.n	90026d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90026ce2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90026ce6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026cea:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026cee:	fb04 fa00 	mul.w	sl, r4, r0
90026cf2:	fb08 f80c 	mul.w	r8, r8, ip
90026cf6:	f10a 0c20 	add.w	ip, sl, #32
90026cfa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90026cfe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026d02:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90026d06:	4440      	add	r0, r8
90026d08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026d0c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90026d10:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026d14:	ea40 000c 	orr.w	r0, r0, ip
90026d18:	fb15 fc02 	smulbb	ip, r5, r2
90026d1c:	f1c5 0810 	rsb	r8, r5, #16
90026d20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026d24:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026d28:	ea4f 0cec 	mov.w	ip, ip, asr #3
90026d2c:	eba8 0802 	sub.w	r8, r8, r2
90026d30:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026d34:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026d38:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90026d3c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026d40:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90026d44:	ea4a 0101 	orr.w	r1, sl, r1
90026d48:	437a      	muls	r2, r7
90026d4a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90026d4e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026d52:	fb09 2208 	mla	r2, r9, r8, r2
90026d56:	ea4b 0000 	orr.w	r0, fp, r0
90026d5a:	fb05 2201 	mla	r2, r5, r1, r2
90026d5e:	fb0c 2200 	mla	r2, ip, r0, r2
90026d62:	0d57      	lsrs	r7, r2, #21
90026d64:	0952      	lsrs	r2, r2, #5
90026d66:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026d6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026d6e:	433a      	orrs	r2, r7
90026d70:	2bff      	cmp	r3, #255	@ 0xff
90026d72:	b292      	uxth	r2, r2
90026d74:	d127      	bne.n	90026dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90026d76:	f8ae 2000 	strh.w	r2, [lr]
90026d7a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026d7c:	f10e 0e02 	add.w	lr, lr, #2
90026d80:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90026d82:	4413      	add	r3, r2
90026d84:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90026d86:	931d      	str	r3, [sp, #116]	@ 0x74
90026d88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026d8a:	441a      	add	r2, r3
90026d8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026d8e:	3b01      	subs	r3, #1
90026d90:	921e      	str	r2, [sp, #120]	@ 0x78
90026d92:	930f      	str	r3, [sp, #60]	@ 0x3c
90026d94:	e627      	b.n	900269e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90026d96:	fb08 f000 	mul.w	r0, r8, r0
90026d9a:	fb09 0303 	mla	r3, r9, r3, r0
90026d9e:	e71b      	b.n	90026bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90026da0:	46b9      	mov	r9, r7
90026da2:	e743      	b.n	90026c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90026da4:	f1c2 0110 	rsb	r1, r2, #16
90026da8:	437a      	muls	r2, r7
90026daa:	fb09 2901 	mla	r9, r9, r1, r2
90026dae:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026db2:	ea4f 5059 	mov.w	r0, r9, lsr #21
90026db6:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026dba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026dbe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026dc2:	4302      	orrs	r2, r0
90026dc4:	e7d4      	b.n	90026d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90026dc6:	f8be 7000 	ldrh.w	r7, [lr]
90026dca:	43db      	mvns	r3, r3
90026dcc:	4c1b      	ldr	r4, [pc, #108]	@ (90026e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90026dce:	1238      	asrs	r0, r7, #8
90026dd0:	fa5f fc83 	uxtb.w	ip, r3
90026dd4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026dd8:	10fd      	asrs	r5, r7, #3
90026dda:	00fb      	lsls	r3, r7, #3
90026ddc:	fb00 f00c 	mul.w	r0, r0, ip
90026de0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90026de4:	b2db      	uxtb	r3, r3
90026de6:	fb05 f10c 	mul.w	r1, r5, ip
90026dea:	1c45      	adds	r5, r0, #1
90026dec:	fb03 f30c 	mul.w	r3, r3, ip
90026df0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90026df4:	1215      	asrs	r5, r2, #8
90026df6:	f025 0507 	bic.w	r5, r5, #7
90026dfa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90026dfe:	1c4d      	adds	r5, r1, #1
90026e00:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90026e04:	10d1      	asrs	r1, r2, #3
90026e06:	b2c0      	uxtb	r0, r0
90026e08:	f021 0103 	bic.w	r1, r1, #3
90026e0c:	00d2      	lsls	r2, r2, #3
90026e0e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90026e12:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90026e16:	00c9      	lsls	r1, r1, #3
90026e18:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026e1c:	4308      	orrs	r0, r1
90026e1e:	1c59      	adds	r1, r3, #1
90026e20:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90026e24:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026e28:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90026e2c:	4318      	orrs	r0, r3
90026e2e:	f8ae 0000 	strh.w	r0, [lr]
90026e32:	e7a2      	b.n	90026d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90026e34:	b013      	add	sp, #76	@ 0x4c
90026e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026e3a:	bf00      	nop
90026e3c:	fffff800 	.word	0xfffff800

90026e40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90026e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026e44:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90026e48:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90026e4c:	fb05 4c03 	mla	ip, r5, r3, r4
90026e50:	2d00      	cmp	r5, #0
90026e52:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90026e56:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90026e5a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90026e5e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90026e62:	8808      	ldrh	r0, [r1, #0]
90026e64:	f2c0 80a7 	blt.w	90026fb6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026e68:	45aa      	cmp	sl, r5
90026e6a:	f340 80a4 	ble.w	90026fb6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026e6e:	2c00      	cmp	r4, #0
90026e70:	f2c0 809f 	blt.w	90026fb2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026e74:	42a3      	cmp	r3, r4
90026e76:	f340 809c 	ble.w	90026fb2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026e7a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90026e7e:	1c62      	adds	r2, r4, #1
90026e80:	f100 809c 	bmi.w	90026fbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026e84:	4293      	cmp	r3, r2
90026e86:	f340 8099 	ble.w	90026fbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026e8a:	f1b9 0f00 	cmp.w	r9, #0
90026e8e:	f000 8095 	beq.w	90026fbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026e92:	f8be c002 	ldrh.w	ip, [lr, #2]
90026e96:	3501      	adds	r5, #1
90026e98:	f100 8094 	bmi.w	90026fc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026e9c:	45aa      	cmp	sl, r5
90026e9e:	f340 8091 	ble.w	90026fc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026ea2:	2f00      	cmp	r7, #0
90026ea4:	f000 808e 	beq.w	90026fc4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026ea8:	2c00      	cmp	r4, #0
90026eaa:	f2c0 8089 	blt.w	90026fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026eae:	42a3      	cmp	r3, r4
90026eb0:	f340 8086 	ble.w	90026fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026eb4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90026eb8:	3401      	adds	r4, #1
90026eba:	f100 8086 	bmi.w	90026fca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026ebe:	42a3      	cmp	r3, r4
90026ec0:	f340 8083 	ble.w	90026fca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026ec4:	f1b9 0f00 	cmp.w	r9, #0
90026ec8:	d07f      	beq.n	90026fca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026eca:	3301      	adds	r3, #1
90026ecc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90026ed0:	ea4f 4408 	mov.w	r4, r8, lsl #16
90026ed4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90026ed8:	fb19 fe07 	smulbb	lr, r9, r7
90026edc:	f1c7 0210 	rsb	r2, r7, #16
90026ee0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026ee4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90026ee8:	eba2 0209 	sub.w	r2, r2, r9
90026eec:	ea44 0808 	orr.w	r8, r4, r8
90026ef0:	ea4f 440c 	mov.w	r4, ip, lsl #16
90026ef4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026ef8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90026efc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026f00:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90026f04:	ea44 0c0c 	orr.w	ip, r4, ip
90026f08:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90026f0c:	fb04 f40c 	mul.w	r4, r4, ip
90026f10:	fb02 4808 	mla	r8, r2, r8, r4
90026f14:	041a      	lsls	r2, r3, #16
90026f16:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90026f1a:	b2b4      	uxth	r4, r6
90026f1c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026f20:	43f6      	mvns	r6, r6
90026f22:	4313      	orrs	r3, r2
90026f24:	042a      	lsls	r2, r5, #16
90026f26:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90026f2a:	b2f6      	uxtb	r6, r6
90026f2c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026f30:	fb0e 8303 	mla	r3, lr, r3, r8
90026f34:	432a      	orrs	r2, r5
90026f36:	fb07 3202 	mla	r2, r7, r2, r3
90026f3a:	10c7      	asrs	r7, r0, #3
90026f3c:	0d53      	lsrs	r3, r2, #21
90026f3e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90026f42:	0952      	lsrs	r2, r2, #5
90026f44:	fb17 f706 	smulbb	r7, r7, r6
90026f48:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026f4c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026f50:	431a      	orrs	r2, r3
90026f52:	b293      	uxth	r3, r2
90026f54:	1202      	asrs	r2, r0, #8
90026f56:	121d      	asrs	r5, r3, #8
90026f58:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026f5c:	00c0      	lsls	r0, r0, #3
90026f5e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026f62:	fb12 f206 	smulbb	r2, r2, r6
90026f66:	b2c0      	uxtb	r0, r0
90026f68:	fb05 2504 	mla	r5, r5, r4, r2
90026f6c:	10da      	asrs	r2, r3, #3
90026f6e:	fb10 f006 	smulbb	r0, r0, r6
90026f72:	00db      	lsls	r3, r3, #3
90026f74:	b2ad      	uxth	r5, r5
90026f76:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026f7a:	b2db      	uxtb	r3, r3
90026f7c:	fb02 7204 	mla	r2, r2, r4, r7
90026f80:	fb03 0004 	mla	r0, r3, r4, r0
90026f84:	1c6b      	adds	r3, r5, #1
90026f86:	b292      	uxth	r2, r2
90026f88:	b280      	uxth	r0, r0
90026f8a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026f8e:	1c43      	adds	r3, r0, #1
90026f90:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026f94:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90026f98:	1c50      	adds	r0, r2, #1
90026f9a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90026f9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026fa2:	0952      	lsrs	r2, r2, #5
90026fa4:	432b      	orrs	r3, r5
90026fa6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026faa:	4313      	orrs	r3, r2
90026fac:	800b      	strh	r3, [r1, #0]
90026fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026fb2:	4680      	mov	r8, r0
90026fb4:	e763      	b.n	90026e7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90026fb6:	4684      	mov	ip, r0
90026fb8:	4680      	mov	r8, r0
90026fba:	e76c      	b.n	90026e96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026fbc:	4684      	mov	ip, r0
90026fbe:	e76a      	b.n	90026e96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026fc0:	4605      	mov	r5, r0
90026fc2:	e779      	b.n	90026eb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90026fc4:	4603      	mov	r3, r0
90026fc6:	4605      	mov	r5, r0
90026fc8:	e782      	b.n	90026ed0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90026fca:	4603      	mov	r3, r0
90026fcc:	e780      	b.n	90026ed0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90026fce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026fce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026fd2:	b093      	sub	sp, #76	@ 0x4c
90026fd4:	461d      	mov	r5, r3
90026fd6:	9210      	str	r2, [sp, #64]	@ 0x40
90026fd8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026fda:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90026fde:	910a      	str	r1, [sp, #40]	@ 0x28
90026fe0:	920b      	str	r2, [sp, #44]	@ 0x2c
90026fe2:	6859      	ldr	r1, [r3, #4]
90026fe4:	681b      	ldr	r3, [r3, #0]
90026fe6:	9011      	str	r0, [sp, #68]	@ 0x44
90026fe8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90026fec:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90026ff0:	fb01 2707 	mla	r7, r1, r7, r2
90026ff4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90026ff8:	9307      	str	r3, [sp, #28]
90026ffa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026ffc:	681b      	ldr	r3, [r3, #0]
90026ffe:	9309      	str	r3, [sp, #36]	@ 0x24
90027000:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90027002:	43db      	mvns	r3, r3
90027004:	b2db      	uxtb	r3, r3
90027006:	9308      	str	r3, [sp, #32]
90027008:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002700a:	2b00      	cmp	r3, #0
9002700c:	dc03      	bgt.n	90027016 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002700e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90027010:	2b00      	cmp	r3, #0
90027012:	f340 8205 	ble.w	90027420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027016:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027018:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002701c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027020:	1e48      	subs	r0, r1, #1
90027022:	f102 3cff 	add.w	ip, r2, #4294967295
90027026:	2d00      	cmp	r5, #0
90027028:	f340 80da 	ble.w	900271e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9002702c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027030:	ea4f 4326 	mov.w	r3, r6, asr #16
90027034:	d406      	bmi.n	90027044 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027036:	4586      	cmp	lr, r0
90027038:	da04      	bge.n	90027044 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002703a:	2b00      	cmp	r3, #0
9002703c:	db02      	blt.n	90027044 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002703e:	4563      	cmp	r3, ip
90027040:	f2c0 80cf 	blt.w	900271e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90027044:	f11e 0e01 	adds.w	lr, lr, #1
90027048:	f100 80c1 	bmi.w	900271ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002704c:	4571      	cmp	r1, lr
9002704e:	f2c0 80be 	blt.w	900271ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027052:	3301      	adds	r3, #1
90027054:	f100 80bb 	bmi.w	900271ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027058:	429a      	cmp	r2, r3
9002705a:	f2c0 80b8 	blt.w	900271ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002705e:	46a9      	mov	r9, r5
90027060:	f8dd 801c 	ldr.w	r8, [sp, #28]
90027064:	f1b9 0f00 	cmp.w	r9, #0
90027068:	f340 80d8 	ble.w	9002721c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
9002706c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002706e:	1421      	asrs	r1, r4, #16
90027070:	ea4f 4026 	mov.w	r0, r6, asr #16
90027074:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027078:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002707c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027080:	f100 8112 	bmi.w	900272a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027084:	f10e 3aff 	add.w	sl, lr, #4294967295
90027088:	4551      	cmp	r1, sl
9002708a:	f280 810d 	bge.w	900272a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002708e:	2800      	cmp	r0, #0
90027090:	f2c0 810a 	blt.w	900272a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027094:	f103 3aff 	add.w	sl, r3, #4294967295
90027098:	4550      	cmp	r0, sl
9002709a:	f280 8105 	bge.w	900272a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002709e:	fa0f f38e 	sxth.w	r3, lr
900270a2:	fb00 1103 	mla	r1, r0, r3, r1
900270a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
900270a8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900270ac:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900270b0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900270b4:	f1bc 0f00 	cmp.w	ip, #0
900270b8:	d007      	beq.n	900270ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900270ba:	005b      	lsls	r3, r3, #1
900270bc:	eb0a 0003 	add.w	r0, sl, r3
900270c0:	f83a 3003 	ldrh.w	r3, [sl, r3]
900270c4:	930c      	str	r3, [sp, #48]	@ 0x30
900270c6:	8843      	ldrh	r3, [r0, #2]
900270c8:	930d      	str	r3, [sp, #52]	@ 0x34
900270ca:	ea4f 400e 	mov.w	r0, lr, lsl #16
900270ce:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900270d2:	fb12 f30c 	smulbb	r3, r2, ip
900270d6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900270da:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900270de:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900270e2:	10db      	asrs	r3, r3, #3
900270e4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900270e8:	ea40 000e 	orr.w	r0, r0, lr
900270ec:	f1cc 0e10 	rsb	lr, ip, #16
900270f0:	ea4a 0101 	orr.w	r1, sl, r1
900270f4:	9f08      	ldr	r7, [sp, #32]
900270f6:	ebae 0e02 	sub.w	lr, lr, r2
900270fa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900270fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90027102:	4351      	muls	r1, r2
90027104:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90027106:	fb0e 1e00 	mla	lr, lr, r0, r1
9002710a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002710c:	0410      	lsls	r0, r2, #16
9002710e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027112:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027116:	4310      	orrs	r0, r2
90027118:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002711a:	0412      	lsls	r2, r2, #16
9002711c:	fb03 e000 	mla	r0, r3, r0, lr
90027120:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90027124:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90027128:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002712c:	ea42 020e 	orr.w	r2, r2, lr
90027130:	fb03 0302 	mla	r3, r3, r2, r0
90027134:	f8b8 0000 	ldrh.w	r0, [r8]
90027138:	0d5a      	lsrs	r2, r3, #21
9002713a:	095b      	lsrs	r3, r3, #5
9002713c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027140:	1201      	asrs	r1, r0, #8
90027142:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027146:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002714a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002714e:	00c0      	lsls	r0, r0, #3
90027150:	4313      	orrs	r3, r2
90027152:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90027156:	fb11 f107 	smulbb	r1, r1, r7
9002715a:	b2c0      	uxtb	r0, r0
9002715c:	b29b      	uxth	r3, r3
9002715e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90027162:	fb10 f007 	smulbb	r0, r0, r7
90027166:	fb1e fe07 	smulbb	lr, lr, r7
9002716a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002716e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027172:	fb0c 1c02 	mla	ip, ip, r2, r1
90027176:	10d9      	asrs	r1, r3, #3
90027178:	00db      	lsls	r3, r3, #3
9002717a:	fa1f fc8c 	uxth.w	ip, ip
9002717e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027182:	b2db      	uxtb	r3, r3
90027184:	fb01 e102 	mla	r1, r1, r2, lr
90027188:	fb03 0302 	mla	r3, r3, r2, r0
9002718c:	b289      	uxth	r1, r1
9002718e:	b29a      	uxth	r2, r3
90027190:	f10c 0301 	add.w	r3, ip, #1
90027194:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90027198:	1c53      	adds	r3, r2, #1
9002719a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002719e:	1c4a      	adds	r2, r1, #1
900271a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
900271a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900271a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900271ac:	0949      	lsrs	r1, r1, #5
900271ae:	ea43 030c 	orr.w	r3, r3, ip
900271b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900271b6:	430b      	orrs	r3, r1
900271b8:	f8a8 3000 	strh.w	r3, [r8]
900271bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900271be:	f108 0802 	add.w	r8, r8, #2
900271c2:	f109 39ff 	add.w	r9, r9, #4294967295
900271c6:	441c      	add	r4, r3
900271c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900271ca:	441e      	add	r6, r3
900271cc:	e74a      	b.n	90027064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900271ce:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900271d0:	3d01      	subs	r5, #1
900271d2:	441c      	add	r4, r3
900271d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900271d6:	441e      	add	r6, r3
900271d8:	9b07      	ldr	r3, [sp, #28]
900271da:	3302      	adds	r3, #2
900271dc:	9307      	str	r3, [sp, #28]
900271de:	e722      	b.n	90027026 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900271e0:	d022      	beq.n	90027228 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900271e2:	1e6b      	subs	r3, r5, #1
900271e4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900271e6:	fb00 4003 	mla	r0, r0, r3, r4
900271ea:	1400      	asrs	r0, r0, #16
900271ec:	f53f af37 	bmi.w	9002705e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900271f0:	3901      	subs	r1, #1
900271f2:	4288      	cmp	r0, r1
900271f4:	f6bf af33 	bge.w	9002705e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900271f8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900271fa:	fb01 6303 	mla	r3, r1, r3, r6
900271fe:	141b      	asrs	r3, r3, #16
90027200:	f53f af2d 	bmi.w	9002705e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027204:	3a01      	subs	r2, #1
90027206:	4293      	cmp	r3, r2
90027208:	f6bf af29 	bge.w	9002705e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002720c:	46a8      	mov	r8, r5
9002720e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90027212:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90027216:	f1b8 0f00 	cmp.w	r8, #0
9002721a:	dc60      	bgt.n	900272de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
9002721c:	9b07      	ldr	r3, [sp, #28]
9002721e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027222:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027226:	9307      	str	r3, [sp, #28]
90027228:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002722a:	2b00      	cmp	r3, #0
9002722c:	f340 80f8 	ble.w	90027420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027230:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027234:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027236:	ee30 0a04 	vadd.f32	s0, s0, s8
9002723a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002723e:	eef0 6a62 	vmov.f32	s13, s5
90027242:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027246:	ee31 1a05 	vadd.f32	s2, s2, s10
9002724a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002724e:	ee16 4a90 	vmov	r4, s13
90027252:	eef0 6a43 	vmov.f32	s13, s6
90027256:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002725a:	ee16 6a90 	vmov	r6, s13
9002725e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027262:	ee61 7a27 	vmul.f32	s15, s2, s15
90027266:	ee77 2a62 	vsub.f32	s5, s14, s5
9002726a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002726e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027272:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027276:	ee12 2a90 	vmov	r2, s5
9002727a:	eef0 2a47 	vmov.f32	s5, s14
9002727e:	fb92 f3f3 	sdiv	r3, r2, r3
90027282:	ee13 2a10 	vmov	r2, s6
90027286:	931f      	str	r3, [sp, #124]	@ 0x7c
90027288:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002728a:	eeb0 3a67 	vmov.f32	s6, s15
9002728e:	fb92 f3f3 	sdiv	r3, r2, r3
90027292:	9320      	str	r3, [sp, #128]	@ 0x80
90027294:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027296:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027298:	3b01      	subs	r3, #1
9002729a:	930a      	str	r3, [sp, #40]	@ 0x28
9002729c:	bf08      	it	eq
9002729e:	4615      	moveq	r5, r2
900272a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900272a2:	bf18      	it	ne
900272a4:	461d      	movne	r5, r3
900272a6:	e6af      	b.n	90027008 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900272a8:	f111 0a01 	adds.w	sl, r1, #1
900272ac:	d486      	bmi.n	900271bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900272ae:	45d6      	cmp	lr, sl
900272b0:	db84      	blt.n	900271bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900272b2:	f110 0a01 	adds.w	sl, r0, #1
900272b6:	d481      	bmi.n	900271bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900272b8:	4553      	cmp	r3, sl
900272ba:	f6ff af7f 	blt.w	900271bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900272be:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
900272c0:	b21b      	sxth	r3, r3
900272c2:	9101      	str	r1, [sp, #4]
900272c4:	4641      	mov	r1, r8
900272c6:	9300      	str	r3, [sp, #0]
900272c8:	fa0f f38e 	sxth.w	r3, lr
900272cc:	e9cd 0202 	strd	r0, r2, [sp, #8]
900272d0:	e9cd c704 	strd	ip, r7, [sp, #16]
900272d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900272d6:	9811      	ldr	r0, [sp, #68]	@ 0x44
900272d8:	f7ff fdb2 	bl	90026e40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900272dc:	e76e      	b.n	900271bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900272de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900272e0:	1430      	asrs	r0, r6, #16
900272e2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900272e4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900272e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900272ec:	1423      	asrs	r3, r4, #16
900272ee:	f3c4 3203 	ubfx	r2, r4, #12, #4
900272f2:	fb01 3000 	mla	r0, r1, r0, r3
900272f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900272f8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900272fc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90027300:	8858      	ldrh	r0, [r3, #2]
90027302:	f1be 0f00 	cmp.w	lr, #0
90027306:	d00b      	beq.n	90027320 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027308:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002730c:	3901      	subs	r1, #1
9002730e:	0049      	lsls	r1, r1, #1
90027310:	3102      	adds	r1, #2
90027312:	eb03 0b01 	add.w	fp, r3, r1
90027316:	5a5b      	ldrh	r3, [r3, r1]
90027318:	930e      	str	r3, [sp, #56]	@ 0x38
9002731a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002731e:	930f      	str	r3, [sp, #60]	@ 0x3c
90027320:	ea4f 410c 	mov.w	r1, ip, lsl #16
90027324:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027328:	fb12 f30e 	smulbb	r3, r2, lr
9002732c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027330:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90027334:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027338:	10db      	asrs	r3, r3, #3
9002733a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002733e:	ea41 010c 	orr.w	r1, r1, ip
90027342:	f1ce 0c10 	rsb	ip, lr, #16
90027346:	ea4b 0000 	orr.w	r0, fp, r0
9002734a:	9f08      	ldr	r7, [sp, #32]
9002734c:	ebac 0c02 	sub.w	ip, ip, r2
90027350:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027354:	f108 38ff 	add.w	r8, r8, #4294967295
90027358:	4350      	muls	r0, r2
9002735a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002735e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027360:	fb0c 0c01 	mla	ip, ip, r1, r0
90027364:	980e      	ldr	r0, [sp, #56]	@ 0x38
90027366:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002736a:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002736e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027370:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027374:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027378:	0412      	lsls	r2, r2, #16
9002737a:	ea4b 0101 	orr.w	r1, fp, r1
9002737e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027382:	fb03 c101 	mla	r1, r3, r1, ip
90027386:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002738a:	4302      	orrs	r2, r0
9002738c:	fb03 1202 	mla	r2, r3, r2, r1
90027390:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90027394:	0952      	lsrs	r2, r2, #5
90027396:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002739a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002739e:	f8b9 2000 	ldrh.w	r2, [r9]
900273a2:	ea4b 0303 	orr.w	r3, fp, r3
900273a6:	1211      	asrs	r1, r2, #8
900273a8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900273ac:	b29b      	uxth	r3, r3
900273ae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900273b2:	00d2      	lsls	r2, r2, #3
900273b4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
900273b8:	fb11 f107 	smulbb	r1, r1, r7
900273bc:	1218      	asrs	r0, r3, #8
900273be:	fb1c fc07 	smulbb	ip, ip, r7
900273c2:	b2d2      	uxtb	r2, r2
900273c4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900273c8:	fb12 f207 	smulbb	r2, r2, r7
900273cc:	fb00 100a 	mla	r0, r0, sl, r1
900273d0:	10d9      	asrs	r1, r3, #3
900273d2:	00db      	lsls	r3, r3, #3
900273d4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900273d8:	b280      	uxth	r0, r0
900273da:	b2db      	uxtb	r3, r3
900273dc:	fb01 c10a 	mla	r1, r1, sl, ip
900273e0:	fb03 230a 	mla	r3, r3, sl, r2
900273e4:	1c42      	adds	r2, r0, #1
900273e6:	b289      	uxth	r1, r1
900273e8:	b29b      	uxth	r3, r3
900273ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900273ee:	f101 0c01 	add.w	ip, r1, #1
900273f2:	1c5a      	adds	r2, r3, #1
900273f4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900273f8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900273fc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027400:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027402:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027406:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002740a:	441c      	add	r4, r3
9002740c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027410:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027412:	4310      	orrs	r0, r2
90027414:	441e      	add	r6, r3
90027416:	ea40 000c 	orr.w	r0, r0, ip
9002741a:	f829 0b02 	strh.w	r0, [r9], #2
9002741e:	e6fa      	b.n	90027216 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90027420:	b013      	add	sp, #76	@ 0x4c
90027422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027426 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90027426:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002742a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
9002742e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90027432:	fb0e 4703 	mla	r7, lr, r3, r4
90027436:	f1be 0f00 	cmp.w	lr, #0
9002743a:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
9002743e:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90027442:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90027446:	8808      	ldrh	r0, [r1, #0]
90027448:	db60      	blt.n	9002750c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002744a:	45f1      	cmp	r9, lr
9002744c:	dd5e      	ble.n	9002750c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002744e:	2c00      	cmp	r4, #0
90027450:	db5a      	blt.n	90027508 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027452:	42a3      	cmp	r3, r4
90027454:	dd58      	ble.n	90027508 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027456:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002745a:	1c62      	adds	r2, r4, #1
9002745c:	d459      	bmi.n	90027512 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002745e:	4293      	cmp	r3, r2
90027460:	dd57      	ble.n	90027512 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027462:	2d00      	cmp	r5, #0
90027464:	d055      	beq.n	90027512 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027466:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002746a:	f11e 0e01 	adds.w	lr, lr, #1
9002746e:	d454      	bmi.n	9002751a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027470:	45f1      	cmp	r9, lr
90027472:	dd52      	ble.n	9002751a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027474:	2e00      	cmp	r6, #0
90027476:	d050      	beq.n	9002751a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027478:	2c00      	cmp	r4, #0
9002747a:	db4c      	blt.n	90027516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002747c:	42a3      	cmp	r3, r4
9002747e:	dd4a      	ble.n	90027516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027480:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90027484:	3401      	adds	r4, #1
90027486:	d405      	bmi.n	90027494 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027488:	42a3      	cmp	r3, r4
9002748a:	dd03      	ble.n	90027494 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002748c:	b115      	cbz	r5, 90027494 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002748e:	3301      	adds	r3, #1
90027490:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90027494:	fb15 f406 	smulbb	r4, r5, r6
90027498:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002749c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900274a0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900274a4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900274a8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900274ac:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900274b0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900274b4:	ea43 0c0c 	orr.w	ip, r3, ip
900274b8:	f1c6 0310 	rsb	r3, r6, #16
900274bc:	ea4e 0707 	orr.w	r7, lr, r7
900274c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900274c4:	1b5b      	subs	r3, r3, r5
900274c6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900274ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900274ce:	437d      	muls	r5, r7
900274d0:	fb03 5c0c 	mla	ip, r3, ip, r5
900274d4:	0403      	lsls	r3, r0, #16
900274d6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900274da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900274de:	4318      	orrs	r0, r3
900274e0:	0413      	lsls	r3, r2, #16
900274e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900274e6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900274ea:	fb04 c000 	mla	r0, r4, r0, ip
900274ee:	4313      	orrs	r3, r2
900274f0:	fb06 0003 	mla	r0, r6, r3, r0
900274f4:	0d43      	lsrs	r3, r0, #21
900274f6:	0940      	lsrs	r0, r0, #5
900274f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900274fc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027500:	4318      	orrs	r0, r3
90027502:	8008      	strh	r0, [r1, #0]
90027504:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90027508:	4684      	mov	ip, r0
9002750a:	e7a6      	b.n	9002745a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
9002750c:	4607      	mov	r7, r0
9002750e:	4684      	mov	ip, r0
90027510:	e7ab      	b.n	9002746a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027512:	4607      	mov	r7, r0
90027514:	e7a9      	b.n	9002746a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027516:	4602      	mov	r2, r0
90027518:	e7b4      	b.n	90027484 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002751a:	4602      	mov	r2, r0
9002751c:	e7ba      	b.n	90027494 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002751e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002751e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027522:	b08f      	sub	sp, #60	@ 0x3c
90027524:	461d      	mov	r5, r3
90027526:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027528:	9107      	str	r1, [sp, #28]
9002752a:	920c      	str	r2, [sp, #48]	@ 0x30
9002752c:	6859      	ldr	r1, [r3, #4]
9002752e:	681b      	ldr	r3, [r3, #0]
90027530:	900d      	str	r0, [sp, #52]	@ 0x34
90027532:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90027536:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
9002753a:	fb01 2707 	mla	r7, r1, r7, r2
9002753e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90027542:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027544:	f8d3 8000 	ldr.w	r8, [r3]
90027548:	9b07      	ldr	r3, [sp, #28]
9002754a:	2b00      	cmp	r3, #0
9002754c:	dc03      	bgt.n	90027556 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002754e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027550:	2b00      	cmp	r3, #0
90027552:	f340 8182 	ble.w	9002785a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90027556:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027558:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002755c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027560:	1e48      	subs	r0, r1, #1
90027562:	f102 3cff 	add.w	ip, r2, #4294967295
90027566:	2d00      	cmp	r5, #0
90027568:	f340 809b 	ble.w	900276a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
9002756c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027570:	ea4f 4326 	mov.w	r3, r6, asr #16
90027574:	d406      	bmi.n	90027584 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027576:	4586      	cmp	lr, r0
90027578:	da04      	bge.n	90027584 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002757a:	2b00      	cmp	r3, #0
9002757c:	db02      	blt.n	90027584 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002757e:	4563      	cmp	r3, ip
90027580:	f2c0 8090 	blt.w	900276a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90027584:	f11e 0e01 	adds.w	lr, lr, #1
90027588:	f100 8084 	bmi.w	90027694 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002758c:	4571      	cmp	r1, lr
9002758e:	f2c0 8081 	blt.w	90027694 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027592:	3301      	adds	r3, #1
90027594:	d47e      	bmi.n	90027694 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027596:	429a      	cmp	r2, r3
90027598:	db7c      	blt.n	90027694 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002759a:	46aa      	mov	sl, r5
9002759c:	46b9      	mov	r9, r7
9002759e:	f1ba 0f00 	cmp.w	sl, #0
900275a2:	f340 8099 	ble.w	900276d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900275a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900275a8:	1421      	asrs	r1, r4, #16
900275aa:	ea4f 4026 	mov.w	r0, r6, asr #16
900275ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
900275b2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900275b6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900275ba:	f100 80d1 	bmi.w	90027760 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900275be:	f10e 3bff 	add.w	fp, lr, #4294967295
900275c2:	4559      	cmp	r1, fp
900275c4:	f280 80cc 	bge.w	90027760 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900275c8:	2800      	cmp	r0, #0
900275ca:	f2c0 80c9 	blt.w	90027760 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900275ce:	f103 3bff 	add.w	fp, r3, #4294967295
900275d2:	4558      	cmp	r0, fp
900275d4:	f280 80c4 	bge.w	90027760 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900275d8:	fa0f fe8e 	sxth.w	lr, lr
900275dc:	fb00 110e 	mla	r1, r0, lr, r1
900275e0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900275e4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900275e8:	8841      	ldrh	r1, [r0, #2]
900275ea:	f1bc 0f00 	cmp.w	ip, #0
900275ee:	d00b      	beq.n	90027608 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900275f0:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900275f4:	3b01      	subs	r3, #1
900275f6:	005b      	lsls	r3, r3, #1
900275f8:	3302      	adds	r3, #2
900275fa:	eb00 0e03 	add.w	lr, r0, r3
900275fe:	5ac3      	ldrh	r3, [r0, r3]
90027600:	9308      	str	r3, [sp, #32]
90027602:	f8be 3002 	ldrh.w	r3, [lr, #2]
90027606:	9309      	str	r3, [sp, #36]	@ 0x24
90027608:	ea4f 400b 	mov.w	r0, fp, lsl #16
9002760c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90027610:	fb12 f30c 	smulbb	r3, r2, ip
90027614:	f1cc 0e10 	rsb	lr, ip, #16
90027618:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002761c:	10db      	asrs	r3, r3, #3
9002761e:	ebae 0e02 	sub.w	lr, lr, r2
90027622:	ea40 000b 	orr.w	r0, r0, fp
90027626:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002762a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002762e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027632:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027636:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002763a:	ea4b 0101 	orr.w	r1, fp, r1
9002763e:	4351      	muls	r1, r2
90027640:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027642:	fb0e 1e00 	mla	lr, lr, r0, r1
90027646:	0410      	lsls	r0, r2, #16
90027648:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002764c:	9908      	ldr	r1, [sp, #32]
9002764e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027652:	4310      	orrs	r0, r2
90027654:	9a08      	ldr	r2, [sp, #32]
90027656:	0412      	lsls	r2, r2, #16
90027658:	fb03 e000 	mla	r0, r3, r0, lr
9002765c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90027660:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90027664:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027668:	ea42 020e 	orr.w	r2, r2, lr
9002766c:	fb03 0302 	mla	r3, r3, r2, r0
90027670:	0d5a      	lsrs	r2, r3, #21
90027672:	095b      	lsrs	r3, r3, #5
90027674:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027678:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002767c:	4313      	orrs	r3, r2
9002767e:	f8a9 3000 	strh.w	r3, [r9]
90027682:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90027684:	f109 0902 	add.w	r9, r9, #2
90027688:	f10a 3aff 	add.w	sl, sl, #4294967295
9002768c:	441c      	add	r4, r3
9002768e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027690:	441e      	add	r6, r3
90027692:	e784      	b.n	9002759e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90027694:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90027696:	3d01      	subs	r5, #1
90027698:	3702      	adds	r7, #2
9002769a:	441c      	add	r4, r3
9002769c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002769e:	441e      	add	r6, r3
900276a0:	e761      	b.n	90027566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900276a2:	d01d      	beq.n	900276e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276a4:	1e6b      	subs	r3, r5, #1
900276a6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900276a8:	fb00 4003 	mla	r0, r0, r3, r4
900276ac:	1400      	asrs	r0, r0, #16
900276ae:	f53f af74 	bmi.w	9002759a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900276b2:	3901      	subs	r1, #1
900276b4:	4288      	cmp	r0, r1
900276b6:	f6bf af70 	bge.w	9002759a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900276ba:	991c      	ldr	r1, [sp, #112]	@ 0x70
900276bc:	fb01 6303 	mla	r3, r1, r3, r6
900276c0:	141b      	asrs	r3, r3, #16
900276c2:	f53f af6a 	bmi.w	9002759a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900276c6:	3a01      	subs	r2, #1
900276c8:	4293      	cmp	r3, r2
900276ca:	f6bf af66 	bge.w	9002759a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900276ce:	46a9      	mov	r9, r5
900276d0:	46ba      	mov	sl, r7
900276d2:	f1b9 0f00 	cmp.w	r9, #0
900276d6:	dc5b      	bgt.n	90027790 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900276d8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900276dc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900276e0:	9b07      	ldr	r3, [sp, #28]
900276e2:	2b00      	cmp	r3, #0
900276e4:	f340 80b9 	ble.w	9002785a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900276e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900276ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900276ee:	ee30 0a04 	vadd.f32	s0, s0, s8
900276f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900276f6:	eef0 6a62 	vmov.f32	s13, s5
900276fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900276fe:	ee31 1a05 	vadd.f32	s2, s2, s10
90027702:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027706:	ee16 4a90 	vmov	r4, s13
9002770a:	eef0 6a43 	vmov.f32	s13, s6
9002770e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027712:	ee16 6a90 	vmov	r6, s13
90027716:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002771a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002771e:	ee77 2a62 	vsub.f32	s5, s14, s5
90027722:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027726:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002772a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002772e:	ee12 2a90 	vmov	r2, s5
90027732:	eef0 2a47 	vmov.f32	s5, s14
90027736:	fb92 f3f3 	sdiv	r3, r2, r3
9002773a:	ee13 2a10 	vmov	r2, s6
9002773e:	931b      	str	r3, [sp, #108]	@ 0x6c
90027740:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027742:	eeb0 3a67 	vmov.f32	s6, s15
90027746:	fb92 f3f3 	sdiv	r3, r2, r3
9002774a:	931c      	str	r3, [sp, #112]	@ 0x70
9002774c:	9b07      	ldr	r3, [sp, #28]
9002774e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027750:	3b01      	subs	r3, #1
90027752:	9307      	str	r3, [sp, #28]
90027754:	bf08      	it	eq
90027756:	4615      	moveq	r5, r2
90027758:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002775a:	bf18      	it	ne
9002775c:	461d      	movne	r5, r3
9002775e:	e6f3      	b.n	90027548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90027760:	f111 0b01 	adds.w	fp, r1, #1
90027764:	d48d      	bmi.n	90027682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027766:	45de      	cmp	lr, fp
90027768:	db8b      	blt.n	90027682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002776a:	f110 0b01 	adds.w	fp, r0, #1
9002776e:	d488      	bmi.n	90027682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027770:	455b      	cmp	r3, fp
90027772:	db86      	blt.n	90027682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027774:	b21b      	sxth	r3, r3
90027776:	e9cd 1001 	strd	r1, r0, [sp, #4]
9002777a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002777e:	9300      	str	r3, [sp, #0]
90027780:	4642      	mov	r2, r8
90027782:	fa0f f38e 	sxth.w	r3, lr
90027786:	4649      	mov	r1, r9
90027788:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002778a:	f7ff fe4c 	bl	90027426 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002778e:	e778      	b.n	90027682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027790:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027792:	1420      	asrs	r0, r4, #16
90027794:	1431      	asrs	r1, r6, #16
90027796:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002779a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002779e:	f3c4 3203 	ubfx	r2, r4, #12, #4
900277a2:	fb03 0101 	mla	r1, r3, r1, r0
900277a6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900277aa:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900277ae:	8841      	ldrh	r1, [r0, #2]
900277b0:	f1be 0f00 	cmp.w	lr, #0
900277b4:	d00b      	beq.n	900277ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900277b6:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
900277ba:	3b01      	subs	r3, #1
900277bc:	005b      	lsls	r3, r3, #1
900277be:	3302      	adds	r3, #2
900277c0:	eb00 0b03 	add.w	fp, r0, r3
900277c4:	5ac3      	ldrh	r3, [r0, r3]
900277c6:	930a      	str	r3, [sp, #40]	@ 0x28
900277c8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900277cc:	930b      	str	r3, [sp, #44]	@ 0x2c
900277ce:	ea4f 400c 	mov.w	r0, ip, lsl #16
900277d2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900277d6:	fb12 f30e 	smulbb	r3, r2, lr
900277da:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900277de:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900277e2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900277e6:	10db      	asrs	r3, r3, #3
900277e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900277ec:	ea40 000c 	orr.w	r0, r0, ip
900277f0:	f1ce 0c10 	rsb	ip, lr, #16
900277f4:	ea4b 0101 	orr.w	r1, fp, r1
900277f8:	f109 39ff 	add.w	r9, r9, #4294967295
900277fc:	ebac 0c02 	sub.w	ip, ip, r2
90027800:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027804:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90027808:	4351      	muls	r1, r2
9002780a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002780c:	fb0c 1c00 	mla	ip, ip, r0, r1
90027810:	990a      	ldr	r1, [sp, #40]	@ 0x28
90027812:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90027816:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
9002781a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002781c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027820:	0412      	lsls	r2, r2, #16
90027822:	ea4b 0000 	orr.w	r0, fp, r0
90027826:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
9002782a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002782e:	fb03 c000 	mla	r0, r3, r0, ip
90027832:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90027836:	ea42 0b0b 	orr.w	fp, r2, fp
9002783a:	fb03 000b 	mla	r0, r3, fp, r0
9002783e:	0d43      	lsrs	r3, r0, #21
90027840:	0940      	lsrs	r0, r0, #5
90027842:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027846:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002784a:	4318      	orrs	r0, r3
9002784c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002784e:	441c      	add	r4, r3
90027850:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027852:	f82a 0b02 	strh.w	r0, [sl], #2
90027856:	441e      	add	r6, r3
90027858:	e73b      	b.n	900276d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002785a:	b00f      	add	sp, #60	@ 0x3c
9002785c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90027860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027864:	b085      	sub	sp, #20
90027866:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
9002786a:	9102      	str	r1, [sp, #8]
9002786c:	2c00      	cmp	r4, #0
9002786e:	fb04 7103 	mla	r1, r4, r3, r7
90027872:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90027876:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
9002787a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002787e:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90027882:	f2c0 811b 	blt.w	90027abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90027886:	45a6      	cmp	lr, r4
90027888:	f340 8118 	ble.w	90027abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002788c:	2f00      	cmp	r7, #0
9002788e:	f2c0 8113 	blt.w	90027ab8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90027892:	42bb      	cmp	r3, r7
90027894:	f340 8110 	ble.w	90027ab8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90027898:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002789c:	1c7a      	adds	r2, r7, #1
9002789e:	f100 8110 	bmi.w	90027ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900278a2:	4293      	cmp	r3, r2
900278a4:	f340 810d 	ble.w	90027ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900278a8:	2e00      	cmp	r6, #0
900278aa:	f000 810c 	beq.w	90027ac6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900278ae:	f8dc 1004 	ldr.w	r1, [ip, #4]
900278b2:	3401      	adds	r4, #1
900278b4:	f100 810b 	bmi.w	90027ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900278b8:	45a6      	cmp	lr, r4
900278ba:	f340 8108 	ble.w	90027ace <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900278be:	2800      	cmp	r0, #0
900278c0:	f000 8108 	beq.w	90027ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900278c4:	2f00      	cmp	r7, #0
900278c6:	f2c0 8100 	blt.w	90027aca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900278ca:	42bb      	cmp	r3, r7
900278cc:	f340 80fd 	ble.w	90027aca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900278d0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900278d4:	3701      	adds	r7, #1
900278d6:	f100 8100 	bmi.w	90027ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900278da:	42bb      	cmp	r3, r7
900278dc:	f340 80fd 	ble.w	90027ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900278e0:	2e00      	cmp	r6, #0
900278e2:	f000 80fc 	beq.w	90027ade <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900278e6:	3301      	adds	r3, #1
900278e8:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900278ec:	b2b6      	uxth	r6, r6
900278ee:	b280      	uxth	r0, r0
900278f0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900278f4:	fb00 fe06 	mul.w	lr, r0, r6
900278f8:	0136      	lsls	r6, r6, #4
900278fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900278fe:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90027902:	eba6 070e 	sub.w	r7, r6, lr
90027906:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002790a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002790e:	b280      	uxth	r0, r0
90027910:	b2bf      	uxth	r7, r7
90027912:	1a1b      	subs	r3, r3, r0
90027914:	ea4f 6812 	mov.w	r8, r2, lsr #24
90027918:	fb0a f607 	mul.w	r6, sl, r7
9002791c:	b29b      	uxth	r3, r3
9002791e:	fb0b 6603 	mla	r6, fp, r3, r6
90027922:	fb00 6609 	mla	r6, r0, r9, r6
90027926:	fb0e 6608 	mla	r6, lr, r8, r6
9002792a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002792e:	9600      	str	r6, [sp, #0]
90027930:	2e00      	cmp	r6, #0
90027932:	f000 80be 	beq.w	90027ab2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90027936:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002793a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002793e:	9e02      	ldr	r6, [sp, #8]
90027940:	fb0b fc0c 	mul.w	ip, fp, ip
90027944:	fb0b f505 	mul.w	r5, fp, r5
90027948:	8836      	ldrh	r6, [r6, #0]
9002794a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002794e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027952:	9501      	str	r5, [sp, #4]
90027954:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90027958:	44dc      	add	ip, fp
9002795a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002795e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90027962:	9503      	str	r5, [sp, #12]
90027964:	9d01      	ldr	r5, [sp, #4]
90027966:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
9002796a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002796e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90027972:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90027976:	fb0a fc0c 	mul.w	ip, sl, ip
9002797a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002797e:	fb0a fa01 	mul.w	sl, sl, r1
90027982:	ea4f 251c 	mov.w	r5, ip, lsr #8
90027986:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002798a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002798e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027992:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90027996:	4465      	add	r5, ip
90027998:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002799c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900279a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900279a4:	fb09 fc0c 	mul.w	ip, r9, ip
900279a8:	0a2d      	lsrs	r5, r5, #8
900279aa:	fb09 f904 	mul.w	r9, r9, r4
900279ae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900279b2:	ea4f 211c 	mov.w	r1, ip, lsr #8
900279b6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900279ba:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900279be:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900279c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900279c6:	437d      	muls	r5, r7
900279c8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900279cc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900279d0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900279d4:	4461      	add	r1, ip
900279d6:	fb08 f404 	mul.w	r4, r8, r4
900279da:	ea4f 2919 	mov.w	r9, r9, lsr #8
900279de:	fb08 f802 	mul.w	r8, r8, r2
900279e2:	0a09      	lsrs	r1, r1, #8
900279e4:	0a22      	lsrs	r2, r4, #8
900279e6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900279ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900279ee:	fb07 f70a 	mul.w	r7, r7, sl
900279f2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900279f6:	4414      	add	r4, r2
900279f8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900279fc:	0a24      	lsrs	r4, r4, #8
900279fe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90027a02:	9a03      	ldr	r2, [sp, #12]
90027a04:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90027a08:	fb02 5503 	mla	r5, r2, r3, r5
90027a0c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90027a10:	9a00      	ldr	r2, [sp, #0]
90027a12:	fb04 540e 	mla	r4, r4, lr, r5
90027a16:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90027a1a:	1235      	asrs	r5, r6, #8
90027a1c:	fb01 4100 	mla	r1, r1, r0, r4
90027a20:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90027a24:	0a09      	lsrs	r1, r1, #8
90027a26:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90027a2a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90027a2e:	fb03 7101 	mla	r1, r3, r1, r7
90027a32:	fb0e 1e08 	mla	lr, lr, r8, r1
90027a36:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90027a3a:	fb00 e101 	mla	r1, r0, r1, lr
90027a3e:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90027a42:	b287      	uxth	r7, r0
90027a44:	0a09      	lsrs	r1, r1, #8
90027a46:	437a      	muls	r2, r7
90027a48:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90027a4c:	1c53      	adds	r3, r2, #1
90027a4e:	4321      	orrs	r1, r4
90027a50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027a54:	0c0a      	lsrs	r2, r1, #16
90027a56:	f3c1 2407 	ubfx	r4, r1, #8, #8
90027a5a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90027a5e:	b2c8      	uxtb	r0, r1
90027a60:	fb12 f207 	smulbb	r2, r2, r7
90027a64:	fb14 f407 	smulbb	r4, r4, r7
90027a68:	b2db      	uxtb	r3, r3
90027a6a:	fb10 f007 	smulbb	r0, r0, r7
90027a6e:	fb05 2503 	mla	r5, r5, r3, r2
90027a72:	10f2      	asrs	r2, r6, #3
90027a74:	00f6      	lsls	r6, r6, #3
90027a76:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027a7a:	b2ad      	uxth	r5, r5
90027a7c:	b2f6      	uxtb	r6, r6
90027a7e:	fb02 4203 	mla	r2, r2, r3, r4
90027a82:	fb06 0303 	mla	r3, r6, r3, r0
90027a86:	b294      	uxth	r4, r2
90027a88:	b299      	uxth	r1, r3
90027a8a:	1c6b      	adds	r3, r5, #1
90027a8c:	1c62      	adds	r2, r4, #1
90027a8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027a92:	1c4b      	adds	r3, r1, #1
90027a94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90027a98:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90027a9c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027aa0:	0952      	lsrs	r2, r2, #5
90027aa2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027aa6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027aaa:	432b      	orrs	r3, r5
90027aac:	4313      	orrs	r3, r2
90027aae:	9a02      	ldr	r2, [sp, #8]
90027ab0:	8013      	strh	r3, [r2, #0]
90027ab2:	b005      	add	sp, #20
90027ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027ab8:	2500      	movs	r5, #0
90027aba:	e6ef      	b.n	9002789c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90027abc:	2100      	movs	r1, #0
90027abe:	460d      	mov	r5, r1
90027ac0:	e6f7      	b.n	900278b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027ac2:	2100      	movs	r1, #0
90027ac4:	e6f5      	b.n	900278b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027ac6:	4631      	mov	r1, r6
90027ac8:	e6f3      	b.n	900278b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027aca:	2400      	movs	r4, #0
90027acc:	e702      	b.n	900278d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90027ace:	2200      	movs	r2, #0
90027ad0:	4614      	mov	r4, r2
90027ad2:	e70b      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027ad4:	4602      	mov	r2, r0
90027ad6:	4604      	mov	r4, r0
90027ad8:	e708      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027ada:	2200      	movs	r2, #0
90027adc:	e706      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027ade:	4632      	mov	r2, r6
90027ae0:	e704      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90027ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027ae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ae6:	b09d      	sub	sp, #116	@ 0x74
90027ae8:	9219      	str	r2, [sp, #100]	@ 0x64
90027aea:	9307      	str	r3, [sp, #28]
90027aec:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90027aee:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90027af2:	901b      	str	r0, [sp, #108]	@ 0x6c
90027af4:	931a      	str	r3, [sp, #104]	@ 0x68
90027af6:	6850      	ldr	r0, [r2, #4]
90027af8:	9117      	str	r1, [sp, #92]	@ 0x5c
90027afa:	6812      	ldr	r2, [r2, #0]
90027afc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90027b00:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90027b04:	fb00 1303 	mla	r3, r0, r3, r1
90027b08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027b0c:	930a      	str	r3, [sp, #40]	@ 0x28
90027b0e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027b10:	681b      	ldr	r3, [r3, #0]
90027b12:	9310      	str	r3, [sp, #64]	@ 0x40
90027b14:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90027b18:	930b      	str	r3, [sp, #44]	@ 0x2c
90027b1a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027b1c:	2b00      	cmp	r3, #0
90027b1e:	dc03      	bgt.n	90027b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90027b20:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90027b22:	2b00      	cmp	r3, #0
90027b24:	f340 8375 	ble.w	90028212 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027b28:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027b2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027b2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027b32:	1e48      	subs	r0, r1, #1
90027b34:	1e57      	subs	r7, r2, #1
90027b36:	9b07      	ldr	r3, [sp, #28]
90027b38:	2b00      	cmp	r3, #0
90027b3a:	f340 818e 	ble.w	90027e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90027b3e:	ea5f 4c24 	movs.w	ip, r4, asr #16
90027b42:	ea4f 4326 	mov.w	r3, r6, asr #16
90027b46:	d406      	bmi.n	90027b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027b48:	4584      	cmp	ip, r0
90027b4a:	da04      	bge.n	90027b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027b4c:	2b00      	cmp	r3, #0
90027b4e:	db02      	blt.n	90027b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027b50:	42bb      	cmp	r3, r7
90027b52:	f2c0 8183 	blt.w	90027e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90027b56:	f11c 0c01 	adds.w	ip, ip, #1
90027b5a:	f100 8173 	bmi.w	90027e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027b5e:	4561      	cmp	r1, ip
90027b60:	f2c0 8170 	blt.w	90027e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027b64:	3301      	adds	r3, #1
90027b66:	f100 816d 	bmi.w	90027e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027b6a:	429a      	cmp	r2, r3
90027b6c:	f2c0 816a 	blt.w	90027e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027b70:	9b07      	ldr	r3, [sp, #28]
90027b72:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90027b74:	9318      	str	r3, [sp, #96]	@ 0x60
90027b76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027b78:	2b00      	cmp	r3, #0
90027b7a:	f340 818c 	ble.w	90027e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90027b7e:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90027b80:	ea4f 4c26 	mov.w	ip, r6, asr #16
90027b84:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027b86:	f3c4 3003 	ubfx	r0, r4, #12, #4
90027b8a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90027b8e:	1422      	asrs	r2, r4, #16
90027b90:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027b94:	689b      	ldr	r3, [r3, #8]
90027b96:	f100 81cd 	bmi.w	90027f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027b9a:	f103 38ff 	add.w	r8, r3, #4294967295
90027b9e:	4542      	cmp	r2, r8
90027ba0:	f280 81c8 	bge.w	90027f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027ba4:	f1bc 0f00 	cmp.w	ip, #0
90027ba8:	f2c0 81c4 	blt.w	90027f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027bac:	f10e 38ff 	add.w	r8, lr, #4294967295
90027bb0:	45c4      	cmp	ip, r8
90027bb2:	f280 81bf 	bge.w	90027f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027bb6:	b21b      	sxth	r3, r3
90027bb8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027bba:	fb0c 2203 	mla	r2, ip, r3, r2
90027bbe:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90027bc2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027bc6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027bca:	2800      	cmp	r0, #0
90027bcc:	f000 81a9 	beq.w	90027f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90027bd0:	f8d8 5004 	ldr.w	r5, [r8, #4]
90027bd4:	950c      	str	r5, [sp, #48]	@ 0x30
90027bd6:	0e2d      	lsrs	r5, r5, #24
90027bd8:	9513      	str	r5, [sp, #76]	@ 0x4c
90027bda:	b181      	cbz	r1, 90027bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027bdc:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90027be0:	3b01      	subs	r3, #1
90027be2:	009b      	lsls	r3, r3, #2
90027be4:	3304      	adds	r3, #4
90027be6:	eb08 0c03 	add.w	ip, r8, r3
90027bea:	f858 3003 	ldr.w	r3, [r8, r3]
90027bee:	9308      	str	r3, [sp, #32]
90027bf0:	0e1b      	lsrs	r3, r3, #24
90027bf2:	9311      	str	r3, [sp, #68]	@ 0x44
90027bf4:	f8dc 3004 	ldr.w	r3, [ip, #4]
90027bf8:	930d      	str	r3, [sp, #52]	@ 0x34
90027bfa:	0e1b      	lsrs	r3, r3, #24
90027bfc:	9314      	str	r3, [sp, #80]	@ 0x50
90027bfe:	b280      	uxth	r0, r0
90027c00:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027c02:	b289      	uxth	r1, r1
90027c04:	fb00 f901 	mul.w	r9, r0, r1
90027c08:	0100      	lsls	r0, r0, #4
90027c0a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90027c0e:	eba0 0809 	sub.w	r8, r0, r9
90027c12:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90027c16:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90027c18:	b289      	uxth	r1, r1
90027c1a:	fa1f f888 	uxth.w	r8, r8
90027c1e:	1a5b      	subs	r3, r3, r1
90027c20:	fb08 f000 	mul.w	r0, r8, r0
90027c24:	b29b      	uxth	r3, r3
90027c26:	fb03 000e 	mla	r0, r3, lr, r0
90027c2a:	fb01 0005 	mla	r0, r1, r5, r0
90027c2e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027c30:	fb09 0005 	mla	r0, r9, r5, r0
90027c34:	f3c0 2007 	ubfx	r0, r0, #8, #8
90027c38:	2800      	cmp	r0, #0
90027c3a:	f000 80fa 	beq.w	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027c3e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90027c42:	d01b      	beq.n	90027c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90027c44:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90027c48:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027c4c:	fb0e fa0a 	mul.w	sl, lr, sl
90027c50:	fb0e fe02 	mul.w	lr, lr, r2
90027c54:	ea4f 221a 	mov.w	r2, sl, lsr #8
90027c58:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90027c5c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90027c60:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027c64:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90027c68:	4452      	add	r2, sl
90027c6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027c6e:	0a12      	lsrs	r2, r2, #8
90027c70:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90027c74:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027c78:	ea42 020c 	orr.w	r2, r2, ip
90027c7c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027c7e:	2dff      	cmp	r5, #255	@ 0xff
90027c80:	d021      	beq.n	90027cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90027c82:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027c84:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027c88:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027c8a:	fb05 fb0b 	mul.w	fp, r5, fp
90027c8e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027c90:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027c94:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027c96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027c9a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027c9e:	fb05 fa0a 	mul.w	sl, r5, sl
90027ca2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027ca6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027caa:	44de      	add	lr, fp
90027cac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027cb0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027cb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027cb8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027cbc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027cc0:	ea4e 050a 	orr.w	r5, lr, sl
90027cc4:	950c      	str	r5, [sp, #48]	@ 0x30
90027cc6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027cc8:	2dff      	cmp	r5, #255	@ 0xff
90027cca:	d021      	beq.n	90027d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90027ccc:	9d08      	ldr	r5, [sp, #32]
90027cce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027cd2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027cd4:	fb05 fb0b 	mul.w	fp, r5, fp
90027cd8:	9d08      	ldr	r5, [sp, #32]
90027cda:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027cde:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027ce0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027ce4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027ce8:	fb05 fa0a 	mul.w	sl, r5, sl
90027cec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027cf0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027cf4:	44de      	add	lr, fp
90027cf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027cfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027cfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027d02:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027d06:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027d0a:	ea4e 050a 	orr.w	r5, lr, sl
90027d0e:	9508      	str	r5, [sp, #32]
90027d10:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027d12:	2dff      	cmp	r5, #255	@ 0xff
90027d14:	d021      	beq.n	90027d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90027d16:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027d18:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027d1c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027d1e:	fb05 fb0b 	mul.w	fp, r5, fp
90027d22:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027d24:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027d28:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027d2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027d2e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027d32:	fb05 fa0a 	mul.w	sl, r5, sl
90027d36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027d3a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027d3e:	44de      	add	lr, fp
90027d40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027d44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027d48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027d4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027d50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027d54:	ea4e 050a 	orr.w	r5, lr, sl
90027d58:	950d      	str	r5, [sp, #52]	@ 0x34
90027d5a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027d5c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90027d60:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027d64:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027d68:	9d08      	ldr	r5, [sp, #32]
90027d6a:	fb08 fc0c 	mul.w	ip, r8, ip
90027d6e:	fb03 cc0e 	mla	ip, r3, lr, ip
90027d72:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90027d76:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027d78:	fb01 cc0e 	mla	ip, r1, lr, ip
90027d7c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90027d80:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027d82:	fb09 cc0e 	mla	ip, r9, lr, ip
90027d86:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027d8a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90027d8c:	fb08 f80e 	mul.w	r8, r8, lr
90027d90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027d94:	fb03 8202 	mla	r2, r3, r2, r8
90027d98:	9b08      	ldr	r3, [sp, #32]
90027d9a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027d9e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90027da2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027da4:	fb01 220a 	mla	r2, r1, sl, r2
90027da8:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90027dac:	883b      	ldrh	r3, [r7, #0]
90027dae:	fb09 2901 	mla	r9, r9, r1, r2
90027db2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90027db4:	1219      	asrs	r1, r3, #8
90027db6:	4342      	muls	r2, r0
90027db8:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027dbc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027dc0:	1c50      	adds	r0, r2, #1
90027dc2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90027dc6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90027dca:	ea4c 0c09 	orr.w	ip, ip, r9
90027dce:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90027dd2:	ea4f 421c 	mov.w	r2, ip, lsr #16
90027dd6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90027dda:	fa5f fc8c 	uxtb.w	ip, ip
90027dde:	fb12 f205 	smulbb	r2, r2, r5
90027de2:	b2c0      	uxtb	r0, r0
90027de4:	fb1c fc05 	smulbb	ip, ip, r5
90027de8:	fb01 2100 	mla	r1, r1, r0, r2
90027dec:	10da      	asrs	r2, r3, #3
90027dee:	fb1e fe05 	smulbb	lr, lr, r5
90027df2:	00db      	lsls	r3, r3, #3
90027df4:	b289      	uxth	r1, r1
90027df6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027dfa:	b2db      	uxtb	r3, r3
90027dfc:	fb02 e200 	mla	r2, r2, r0, lr
90027e00:	fb03 c300 	mla	r3, r3, r0, ip
90027e04:	b292      	uxth	r2, r2
90027e06:	fa1f fc83 	uxth.w	ip, r3
90027e0a:	1c4b      	adds	r3, r1, #1
90027e0c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90027e10:	f10c 0301 	add.w	r3, ip, #1
90027e14:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90027e18:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90027e1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027e20:	430b      	orrs	r3, r1
90027e22:	1c51      	adds	r1, r2, #1
90027e24:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027e28:	0952      	lsrs	r2, r2, #5
90027e2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027e2e:	4313      	orrs	r3, r2
90027e30:	803b      	strh	r3, [r7, #0]
90027e32:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90027e34:	3702      	adds	r7, #2
90027e36:	441c      	add	r4, r3
90027e38:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90027e3a:	441e      	add	r6, r3
90027e3c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027e3e:	3b01      	subs	r3, #1
90027e40:	9318      	str	r3, [sp, #96]	@ 0x60
90027e42:	e698      	b.n	90027b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90027e44:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90027e46:	441c      	add	r4, r3
90027e48:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90027e4a:	441e      	add	r6, r3
90027e4c:	9b07      	ldr	r3, [sp, #28]
90027e4e:	3b01      	subs	r3, #1
90027e50:	9307      	str	r3, [sp, #28]
90027e52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027e54:	3302      	adds	r3, #2
90027e56:	930a      	str	r3, [sp, #40]	@ 0x28
90027e58:	e66d      	b.n	90027b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90027e5a:	d023      	beq.n	90027ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90027e5c:	9b07      	ldr	r3, [sp, #28]
90027e5e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90027e60:	3b01      	subs	r3, #1
90027e62:	fb00 4003 	mla	r0, r0, r3, r4
90027e66:	1400      	asrs	r0, r0, #16
90027e68:	f53f ae82 	bmi.w	90027b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027e6c:	3901      	subs	r1, #1
90027e6e:	4288      	cmp	r0, r1
90027e70:	f6bf ae7e 	bge.w	90027b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027e74:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90027e76:	fb01 6303 	mla	r3, r1, r3, r6
90027e7a:	141b      	asrs	r3, r3, #16
90027e7c:	f53f ae78 	bmi.w	90027b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027e80:	3a01      	subs	r2, #1
90027e82:	4293      	cmp	r3, r2
90027e84:	f6bf ae74 	bge.w	90027b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027e88:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027e8c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90027e90:	f1bb 0f00 	cmp.w	fp, #0
90027e94:	dc6c      	bgt.n	90027f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027e96:	9b07      	ldr	r3, [sp, #28]
90027e98:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027e9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027e9e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027ea2:	930a      	str	r3, [sp, #40]	@ 0x28
90027ea4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027ea6:	2b00      	cmp	r3, #0
90027ea8:	f340 81b3 	ble.w	90028212 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027eac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027eb0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90027eb2:	ee30 0a04 	vadd.f32	s0, s0, s8
90027eb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027eba:	eef0 6a62 	vmov.f32	s13, s5
90027ebe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027ec2:	ee31 1a05 	vadd.f32	s2, s2, s10
90027ec6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027eca:	ee16 4a90 	vmov	r4, s13
90027ece:	eef0 6a43 	vmov.f32	s13, s6
90027ed2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027ed6:	ee16 6a90 	vmov	r6, s13
90027eda:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027ede:	ee61 7a27 	vmul.f32	s15, s2, s15
90027ee2:	ee77 2a62 	vsub.f32	s5, s14, s5
90027ee6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027eea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027eee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027ef2:	ee12 2a90 	vmov	r2, s5
90027ef6:	eef0 2a47 	vmov.f32	s5, s14
90027efa:	fb92 f3f3 	sdiv	r3, r2, r3
90027efe:	ee13 2a10 	vmov	r2, s6
90027f02:	9329      	str	r3, [sp, #164]	@ 0xa4
90027f04:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90027f06:	eeb0 3a67 	vmov.f32	s6, s15
90027f0a:	fb92 f3f3 	sdiv	r3, r2, r3
90027f0e:	932a      	str	r3, [sp, #168]	@ 0xa8
90027f10:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027f12:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90027f14:	3b01      	subs	r3, #1
90027f16:	9317      	str	r3, [sp, #92]	@ 0x5c
90027f18:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90027f1a:	bf08      	it	eq
90027f1c:	4613      	moveq	r3, r2
90027f1e:	9307      	str	r3, [sp, #28]
90027f20:	e5fb      	b.n	90027b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90027f22:	2900      	cmp	r1, #0
90027f24:	f43f ae6b 	beq.w	90027bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027f28:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027f2c:	9308      	str	r3, [sp, #32]
90027f2e:	0e1b      	lsrs	r3, r3, #24
90027f30:	9311      	str	r3, [sp, #68]	@ 0x44
90027f32:	e664      	b.n	90027bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027f34:	f112 0801 	adds.w	r8, r2, #1
90027f38:	f53f af7b 	bmi.w	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027f3c:	4543      	cmp	r3, r8
90027f3e:	f6ff af78 	blt.w	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027f42:	f11c 0801 	adds.w	r8, ip, #1
90027f46:	f53f af74 	bmi.w	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027f4a:	45c6      	cmp	lr, r8
90027f4c:	f6ff af71 	blt.w	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027f50:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90027f52:	b21b      	sxth	r3, r3
90027f54:	9201      	str	r2, [sp, #4]
90027f56:	fa0f f28e 	sxth.w	r2, lr
90027f5a:	e9cd 1504 	strd	r1, r5, [sp, #16]
90027f5e:	e9cd c002 	strd	ip, r0, [sp, #8]
90027f62:	9200      	str	r2, [sp, #0]
90027f64:	4639      	mov	r1, r7
90027f66:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027f68:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90027f6a:	f7ff fc79 	bl	90027860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90027f6e:	e760      	b.n	90027e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027f70:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027f72:	1427      	asrs	r7, r4, #16
90027f74:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027f76:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027f7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f7e:	1433      	asrs	r3, r6, #16
90027f80:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027f84:	fb01 7303 	mla	r3, r1, r3, r7
90027f88:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90027f8c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027f90:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027f94:	2a00      	cmp	r2, #0
90027f96:	f000 8133 	beq.w	90028200 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90027f9a:	687d      	ldr	r5, [r7, #4]
90027f9c:	950e      	str	r5, [sp, #56]	@ 0x38
90027f9e:	0e2d      	lsrs	r5, r5, #24
90027fa0:	9515      	str	r5, [sp, #84]	@ 0x54
90027fa2:	b178      	cbz	r0, 90027fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027fa4:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90027fa8:	3901      	subs	r1, #1
90027faa:	0089      	lsls	r1, r1, #2
90027fac:	3104      	adds	r1, #4
90027fae:	eb07 0e01 	add.w	lr, r7, r1
90027fb2:	5879      	ldr	r1, [r7, r1]
90027fb4:	9109      	str	r1, [sp, #36]	@ 0x24
90027fb6:	0e09      	lsrs	r1, r1, #24
90027fb8:	9112      	str	r1, [sp, #72]	@ 0x48
90027fba:	f8de 1004 	ldr.w	r1, [lr, #4]
90027fbe:	910f      	str	r1, [sp, #60]	@ 0x3c
90027fc0:	0e09      	lsrs	r1, r1, #24
90027fc2:	9116      	str	r1, [sp, #88]	@ 0x58
90027fc4:	b292      	uxth	r2, r2
90027fc6:	9915      	ldr	r1, [sp, #84]	@ 0x54
90027fc8:	b280      	uxth	r0, r0
90027fca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027fcc:	fb02 f800 	mul.w	r8, r2, r0
90027fd0:	0112      	lsls	r2, r2, #4
90027fd2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90027fd6:	eba2 0e08 	sub.w	lr, r2, r8
90027fda:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90027fde:	b280      	uxth	r0, r0
90027fe0:	fa1f fe8e 	uxth.w	lr, lr
90027fe4:	1a12      	subs	r2, r2, r0
90027fe6:	fb0e f101 	mul.w	r1, lr, r1
90027fea:	b292      	uxth	r2, r2
90027fec:	fb02 110c 	mla	r1, r2, ip, r1
90027ff0:	fb00 1105 	mla	r1, r0, r5, r1
90027ff4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90027ff6:	fb08 1105 	mla	r1, r8, r5, r1
90027ffa:	f3c1 2107 	ubfx	r1, r1, #8, #8
90027ffe:	2900      	cmp	r1, #0
90028000:	f000 80f5 	beq.w	900281ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90028004:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90028008:	d019      	beq.n	9002803e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002800a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002800e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028012:	fb0c fa0a 	mul.w	sl, ip, sl
90028016:	fb0c fc03 	mul.w	ip, ip, r3
9002801a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002801e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028022:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90028026:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002802a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002802e:	4453      	add	r3, sl
90028030:	0a3f      	lsrs	r7, r7, #8
90028032:	0a1b      	lsrs	r3, r3, #8
90028034:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90028038:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002803c:	433b      	orrs	r3, r7
9002803e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028040:	2dff      	cmp	r5, #255	@ 0xff
90028042:	d020      	beq.n	90028086 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90028044:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028046:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002804a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002804c:	436f      	muls	r7, r5
9002804e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028050:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028054:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028058:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002805a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002805e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028062:	fb05 fa0a 	mul.w	sl, r5, sl
90028066:	44bc      	add	ip, r7
90028068:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002806c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028070:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028074:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028078:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002807c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028080:	ea4c 050a 	orr.w	r5, ip, sl
90028084:	950e      	str	r5, [sp, #56]	@ 0x38
90028086:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028088:	2dff      	cmp	r5, #255	@ 0xff
9002808a:	d020      	beq.n	900280ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002808c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002808e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028092:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028094:	436f      	muls	r7, r5
90028096:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028098:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002809c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900280a0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900280a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900280a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900280aa:	fb05 fa0a 	mul.w	sl, r5, sl
900280ae:	44bc      	add	ip, r7
900280b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900280b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900280b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900280bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900280c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900280c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900280c8:	ea4c 050a 	orr.w	r5, ip, sl
900280cc:	9509      	str	r5, [sp, #36]	@ 0x24
900280ce:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900280d0:	2dff      	cmp	r5, #255	@ 0xff
900280d2:	d020      	beq.n	90028116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900280d4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900280d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900280da:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900280dc:	436f      	muls	r7, r5
900280de:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900280e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900280e4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900280e8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900280ea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900280ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900280f2:	fb05 fa0a 	mul.w	sl, r5, sl
900280f6:	44bc      	add	ip, r7
900280f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900280fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028100:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028104:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028108:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002810c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028110:	ea4c 050a 	orr.w	r5, ip, sl
90028114:	950f      	str	r5, [sp, #60]	@ 0x3c
90028116:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028118:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002811c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028120:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028124:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028126:	fb0e f707 	mul.w	r7, lr, r7
9002812a:	fb02 770c 	mla	r7, r2, ip, r7
9002812e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028132:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028134:	fb00 770c 	mla	r7, r0, ip, r7
90028138:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002813c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002813e:	fb08 770c 	mla	r7, r8, ip, r7
90028142:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028146:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028148:	fb0e fe0c 	mul.w	lr, lr, ip
9002814c:	0a3f      	lsrs	r7, r7, #8
9002814e:	fb02 e303 	mla	r3, r2, r3, lr
90028152:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028154:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028158:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
9002815c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002815e:	fb00 330a 	mla	r3, r0, sl, r3
90028162:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90028166:	f8b9 0000 	ldrh.w	r0, [r9]
9002816a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002816e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90028170:	1202      	asrs	r2, r0, #8
90028172:	4359      	muls	r1, r3
90028174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028178:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002817c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028180:	1c4b      	adds	r3, r1, #1
90028182:	ea47 070c 	orr.w	r7, r7, ip
90028186:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002818a:	0c3b      	lsrs	r3, r7, #16
9002818c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90028190:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90028194:	b2ff      	uxtb	r7, r7
90028196:	fb13 f305 	smulbb	r3, r3, r5
9002819a:	b2c9      	uxtb	r1, r1
9002819c:	fb17 f705 	smulbb	r7, r7, r5
900281a0:	fb02 3201 	mla	r2, r2, r1, r3
900281a4:	10c3      	asrs	r3, r0, #3
900281a6:	fb1c fc05 	smulbb	ip, ip, r5
900281aa:	00c0      	lsls	r0, r0, #3
900281ac:	b292      	uxth	r2, r2
900281ae:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900281b2:	b2c0      	uxtb	r0, r0
900281b4:	fb03 c301 	mla	r3, r3, r1, ip
900281b8:	fb00 7001 	mla	r0, r0, r1, r7
900281bc:	1c51      	adds	r1, r2, #1
900281be:	b29b      	uxth	r3, r3
900281c0:	b280      	uxth	r0, r0
900281c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900281c6:	f100 0c01 	add.w	ip, r0, #1
900281ca:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900281ce:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900281d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900281d6:	ea4c 0202 	orr.w	r2, ip, r2
900281da:	f103 0c01 	add.w	ip, r3, #1
900281de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900281e2:	095b      	lsrs	r3, r3, #5
900281e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900281e8:	431a      	orrs	r2, r3
900281ea:	f8a9 2000 	strh.w	r2, [r9]
900281ee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900281f0:	f109 0902 	add.w	r9, r9, #2
900281f4:	f10b 3bff 	add.w	fp, fp, #4294967295
900281f8:	441c      	add	r4, r3
900281fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900281fc:	441e      	add	r6, r3
900281fe:	e647      	b.n	90027e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90028200:	2800      	cmp	r0, #0
90028202:	f43f aedf 	beq.w	90027fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028206:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002820a:	9109      	str	r1, [sp, #36]	@ 0x24
9002820c:	0e09      	lsrs	r1, r1, #24
9002820e:	9112      	str	r1, [sp, #72]	@ 0x48
90028210:	e6d8      	b.n	90027fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028212:	b01d      	add	sp, #116	@ 0x74
90028214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90028218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002821c:	b085      	sub	sp, #20
9002821e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90028222:	9102      	str	r1, [sp, #8]
90028224:	2c00      	cmp	r4, #0
90028226:	fb04 7103 	mla	r1, r4, r3, r7
9002822a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
9002822e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90028232:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90028236:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002823a:	f2c0 810c 	blt.w	90028456 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
9002823e:	45a6      	cmp	lr, r4
90028240:	f340 8109 	ble.w	90028456 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028244:	2f00      	cmp	r7, #0
90028246:	f2c0 8104 	blt.w	90028452 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002824a:	42bb      	cmp	r3, r7
9002824c:	f340 8101 	ble.w	90028452 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028250:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028254:	1c7a      	adds	r2, r7, #1
90028256:	f100 8101 	bmi.w	9002845c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002825a:	4293      	cmp	r3, r2
9002825c:	f340 80fe 	ble.w	9002845c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028260:	2e00      	cmp	r6, #0
90028262:	f000 80fd 	beq.w	90028460 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90028266:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002826a:	3401      	adds	r4, #1
9002826c:	f100 80fc 	bmi.w	90028468 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028270:	45a6      	cmp	lr, r4
90028272:	f340 80f9 	ble.w	90028468 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028276:	2800      	cmp	r0, #0
90028278:	f000 80f9 	beq.w	9002846e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
9002827c:	2f00      	cmp	r7, #0
9002827e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90028282:	f2c0 80ef 	blt.w	90028464 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028286:	42bb      	cmp	r3, r7
90028288:	f340 80ec 	ble.w	90028464 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002828c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90028290:	3701      	adds	r7, #1
90028292:	f100 80ef 	bmi.w	90028474 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028296:	42bb      	cmp	r3, r7
90028298:	f340 80ec 	ble.w	90028474 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002829c:	2e00      	cmp	r6, #0
9002829e:	f000 80eb 	beq.w	90028478 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
900282a2:	6852      	ldr	r2, [r2, #4]
900282a4:	b2b6      	uxth	r6, r6
900282a6:	b280      	uxth	r0, r0
900282a8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900282ac:	fb00 fe06 	mul.w	lr, r0, r6
900282b0:	0136      	lsls	r6, r6, #4
900282b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900282b6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900282ba:	eba6 070e 	sub.w	r7, r6, lr
900282be:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900282c2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900282c6:	b280      	uxth	r0, r0
900282c8:	b2bf      	uxth	r7, r7
900282ca:	1a1b      	subs	r3, r3, r0
900282cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
900282d0:	fb07 f60a 	mul.w	r6, r7, sl
900282d4:	b29b      	uxth	r3, r3
900282d6:	fb0b 6603 	mla	r6, fp, r3, r6
900282da:	fb00 6609 	mla	r6, r0, r9, r6
900282de:	fb0e 6608 	mla	r6, lr, r8, r6
900282e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900282e6:	9600      	str	r6, [sp, #0]
900282e8:	2e00      	cmp	r6, #0
900282ea:	f000 80af 	beq.w	9002844c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900282ee:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900282f2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900282f6:	9e02      	ldr	r6, [sp, #8]
900282f8:	fb0b fc0c 	mul.w	ip, fp, ip
900282fc:	fb0b f505 	mul.w	r5, fp, r5
90028300:	8836      	ldrh	r6, [r6, #0]
90028302:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90028306:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002830a:	9501      	str	r5, [sp, #4]
9002830c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90028310:	44dc      	add	ip, fp
90028312:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028316:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002831a:	9503      	str	r5, [sp, #12]
9002831c:	9d01      	ldr	r5, [sp, #4]
9002831e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90028322:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90028326:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002832a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002832e:	fb0a fc0c 	mul.w	ip, sl, ip
90028332:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90028336:	fb0a fa01 	mul.w	sl, sl, r1
9002833a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002833e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028342:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90028346:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002834a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002834e:	4465      	add	r5, ip
90028350:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028354:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90028358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002835c:	fb09 fc0c 	mul.w	ip, r9, ip
90028360:	0a2d      	lsrs	r5, r5, #8
90028362:	fb09 f904 	mul.w	r9, r9, r4
90028366:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002836a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002836e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028372:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90028376:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002837a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002837e:	437d      	muls	r5, r7
90028380:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90028384:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90028388:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002838c:	4461      	add	r1, ip
9002838e:	fb08 f404 	mul.w	r4, r8, r4
90028392:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028396:	fb08 f802 	mul.w	r8, r8, r2
9002839a:	0a09      	lsrs	r1, r1, #8
9002839c:	0a22      	lsrs	r2, r4, #8
9002839e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900283a2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900283a6:	fb07 f70a 	mul.w	r7, r7, sl
900283aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900283ae:	4414      	add	r4, r2
900283b0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900283b4:	0a24      	lsrs	r4, r4, #8
900283b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900283ba:	9a03      	ldr	r2, [sp, #12]
900283bc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900283c0:	fb02 5503 	mla	r5, r2, r3, r5
900283c4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900283c8:	fb04 540e 	mla	r4, r4, lr, r5
900283cc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900283d0:	fb01 4100 	mla	r1, r1, r0, r4
900283d4:	0a09      	lsrs	r1, r1, #8
900283d6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900283da:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900283de:	fb03 7101 	mla	r1, r3, r1, r7
900283e2:	9b00      	ldr	r3, [sp, #0]
900283e4:	fb0e 1e08 	mla	lr, lr, r8, r1
900283e8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900283ec:	43da      	mvns	r2, r3
900283ee:	1233      	asrs	r3, r6, #8
900283f0:	fb00 e101 	mla	r1, r0, r1, lr
900283f4:	10f0      	asrs	r0, r6, #3
900283f6:	b2d2      	uxtb	r2, r2
900283f8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900283fc:	0a09      	lsrs	r1, r1, #8
900283fe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028402:	00f6      	lsls	r6, r6, #3
90028404:	4353      	muls	r3, r2
90028406:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002840a:	4350      	muls	r0, r2
9002840c:	b2f6      	uxtb	r6, r6
9002840e:	4321      	orrs	r1, r4
90028410:	4356      	muls	r6, r2
90028412:	1c5a      	adds	r2, r3, #1
90028414:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90028418:	0c0b      	lsrs	r3, r1, #16
9002841a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002841e:	1c42      	adds	r2, r0, #1
90028420:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028424:	0a0a      	lsrs	r2, r1, #8
90028426:	021b      	lsls	r3, r3, #8
90028428:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002842c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90028430:	00d2      	lsls	r2, r2, #3
90028432:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028436:	4313      	orrs	r3, r2
90028438:	1c72      	adds	r2, r6, #1
9002843a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002843e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90028442:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028446:	4319      	orrs	r1, r3
90028448:	9b02      	ldr	r3, [sp, #8]
9002844a:	8019      	strh	r1, [r3, #0]
9002844c:	b005      	add	sp, #20
9002844e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028452:	2500      	movs	r5, #0
90028454:	e6fe      	b.n	90028254 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90028456:	2100      	movs	r1, #0
90028458:	460d      	mov	r5, r1
9002845a:	e706      	b.n	9002826a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002845c:	2100      	movs	r1, #0
9002845e:	e704      	b.n	9002826a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028460:	4631      	mov	r1, r6
90028462:	e702      	b.n	9002826a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028464:	2400      	movs	r4, #0
90028466:	e713      	b.n	90028290 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90028468:	2200      	movs	r2, #0
9002846a:	4614      	mov	r4, r2
9002846c:	e71a      	b.n	900282a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002846e:	4602      	mov	r2, r0
90028470:	4604      	mov	r4, r0
90028472:	e717      	b.n	900282a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028474:	2200      	movs	r2, #0
90028476:	e715      	b.n	900282a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028478:	4632      	mov	r2, r6
9002847a:	e713      	b.n	900282a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

9002847c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002847c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028480:	b09b      	sub	sp, #108	@ 0x6c
90028482:	9218      	str	r2, [sp, #96]	@ 0x60
90028484:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90028486:	9019      	str	r0, [sp, #100]	@ 0x64
90028488:	9116      	str	r1, [sp, #88]	@ 0x58
9002848a:	6850      	ldr	r0, [r2, #4]
9002848c:	9307      	str	r3, [sp, #28]
9002848e:	6812      	ldr	r2, [r2, #0]
90028490:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90028494:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90028498:	fb00 1303 	mla	r3, r0, r3, r1
9002849c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900284a0:	930a      	str	r3, [sp, #40]	@ 0x28
900284a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900284a4:	681b      	ldr	r3, [r3, #0]
900284a6:	930f      	str	r3, [sp, #60]	@ 0x3c
900284a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900284aa:	2b00      	cmp	r3, #0
900284ac:	dc03      	bgt.n	900284b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900284ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900284b0:	2b00      	cmp	r3, #0
900284b2:	f340 8387 	ble.w	90028bc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900284b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900284b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900284bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900284c0:	1e48      	subs	r0, r1, #1
900284c2:	1e57      	subs	r7, r2, #1
900284c4:	9b07      	ldr	r3, [sp, #28]
900284c6:	2b00      	cmp	r3, #0
900284c8:	f340 8166 	ble.w	90028798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900284cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900284d0:	ea4f 4326 	mov.w	r3, r6, asr #16
900284d4:	d406      	bmi.n	900284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900284d6:	4584      	cmp	ip, r0
900284d8:	da04      	bge.n	900284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900284da:	2b00      	cmp	r3, #0
900284dc:	db02      	blt.n	900284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900284de:	42bb      	cmp	r3, r7
900284e0:	f2c0 815b 	blt.w	9002879a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900284e4:	f11c 0c01 	adds.w	ip, ip, #1
900284e8:	f100 814b 	bmi.w	90028782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900284ec:	4561      	cmp	r1, ip
900284ee:	f2c0 8148 	blt.w	90028782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900284f2:	3301      	adds	r3, #1
900284f4:	f100 8145 	bmi.w	90028782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900284f8:	429a      	cmp	r2, r3
900284fa:	f2c0 8142 	blt.w	90028782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900284fe:	9b07      	ldr	r3, [sp, #28]
90028500:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028502:	9317      	str	r3, [sp, #92]	@ 0x5c
90028504:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028506:	2b00      	cmp	r3, #0
90028508:	f340 8165 	ble.w	900287d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002850c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
9002850e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90028512:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028514:	f3c4 3103 	ubfx	r1, r4, #12, #4
90028518:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002851c:	1422      	asrs	r2, r4, #16
9002851e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028522:	689b      	ldr	r3, [r3, #8]
90028524:	f100 81d5 	bmi.w	900288d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028528:	f103 38ff 	add.w	r8, r3, #4294967295
9002852c:	4542      	cmp	r2, r8
9002852e:	f280 81d0 	bge.w	900288d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028532:	f1bc 0f00 	cmp.w	ip, #0
90028536:	f2c0 81cc 	blt.w	900288d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002853a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002853e:	45c4      	cmp	ip, r8
90028540:	f280 81c7 	bge.w	900288d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028544:	b21b      	sxth	r3, r3
90028546:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028548:	fb0c 2203 	mla	r2, ip, r3, r2
9002854c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028550:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90028554:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028558:	2900      	cmp	r1, #0
9002855a:	f000 8182 	beq.w	90028862 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002855e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90028562:	950b      	str	r5, [sp, #44]	@ 0x2c
90028564:	0e2d      	lsrs	r5, r5, #24
90028566:	9512      	str	r5, [sp, #72]	@ 0x48
90028568:	b180      	cbz	r0, 9002858c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002856a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002856e:	3b01      	subs	r3, #1
90028570:	009b      	lsls	r3, r3, #2
90028572:	3304      	adds	r3, #4
90028574:	eb08 0c03 	add.w	ip, r8, r3
90028578:	f858 3003 	ldr.w	r3, [r8, r3]
9002857c:	9308      	str	r3, [sp, #32]
9002857e:	0e1b      	lsrs	r3, r3, #24
90028580:	9310      	str	r3, [sp, #64]	@ 0x40
90028582:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028586:	930c      	str	r3, [sp, #48]	@ 0x30
90028588:	0e1b      	lsrs	r3, r3, #24
9002858a:	9313      	str	r3, [sp, #76]	@ 0x4c
9002858c:	b289      	uxth	r1, r1
9002858e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90028590:	b280      	uxth	r0, r0
90028592:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028594:	fb01 f900 	mul.w	r9, r1, r0
90028598:	0109      	lsls	r1, r1, #4
9002859a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002859e:	eba1 0809 	sub.w	r8, r1, r9
900285a2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
900285a6:	b280      	uxth	r0, r0
900285a8:	fa1f f888 	uxth.w	r8, r8
900285ac:	1a09      	subs	r1, r1, r0
900285ae:	fb08 f303 	mul.w	r3, r8, r3
900285b2:	b289      	uxth	r1, r1
900285b4:	fb01 330e 	mla	r3, r1, lr, r3
900285b8:	fb00 3305 	mla	r3, r0, r5, r3
900285bc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900285be:	fb09 3305 	mla	r3, r9, r5, r3
900285c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900285c6:	2b00      	cmp	r3, #0
900285c8:	f000 80d2 	beq.w	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900285cc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900285d0:	d01b      	beq.n	9002860a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900285d2:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900285d6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900285da:	fb0e fa0a 	mul.w	sl, lr, sl
900285de:	fb0e fe02 	mul.w	lr, lr, r2
900285e2:	ea4f 221a 	mov.w	r2, sl, lsr #8
900285e6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900285ea:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900285ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900285f2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900285f6:	4452      	add	r2, sl
900285f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900285fc:	0a12      	lsrs	r2, r2, #8
900285fe:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028602:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028606:	ea42 020c 	orr.w	r2, r2, ip
9002860a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002860c:	2dff      	cmp	r5, #255	@ 0xff
9002860e:	d021      	beq.n	90028654 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90028610:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028612:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028616:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028618:	fb05 fb0b 	mul.w	fp, r5, fp
9002861c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002861e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028622:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028624:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028628:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002862c:	fb05 fa0a 	mul.w	sl, r5, sl
90028630:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028634:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028638:	44de      	add	lr, fp
9002863a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002863e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028642:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028646:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002864a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002864e:	ea4e 050a 	orr.w	r5, lr, sl
90028652:	950b      	str	r5, [sp, #44]	@ 0x2c
90028654:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028656:	2dff      	cmp	r5, #255	@ 0xff
90028658:	d021      	beq.n	9002869e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002865a:	9d08      	ldr	r5, [sp, #32]
9002865c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028660:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028662:	fb05 fb0b 	mul.w	fp, r5, fp
90028666:	9d08      	ldr	r5, [sp, #32]
90028668:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002866c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002866e:	fb05 fa0e 	mul.w	sl, r5, lr
90028672:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028676:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002867a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002867e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028682:	44de      	add	lr, fp
90028684:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028688:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002868c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028690:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028694:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028698:	ea4e 050a 	orr.w	r5, lr, sl
9002869c:	9508      	str	r5, [sp, #32]
9002869e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900286a0:	2dff      	cmp	r5, #255	@ 0xff
900286a2:	d021      	beq.n	900286e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
900286a4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900286a6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900286aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900286ac:	fb05 fb0b 	mul.w	fp, r5, fp
900286b0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900286b2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900286b6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900286b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900286bc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900286c0:	fb05 fa0a 	mul.w	sl, r5, sl
900286c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286c8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900286cc:	44de      	add	lr, fp
900286ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900286d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900286d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900286da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900286e2:	ea4e 050a 	orr.w	r5, lr, sl
900286e6:	950c      	str	r5, [sp, #48]	@ 0x30
900286e8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900286ea:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900286ee:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900286f2:	2bff      	cmp	r3, #255	@ 0xff
900286f4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900286f8:	9d08      	ldr	r5, [sp, #32]
900286fa:	fb08 fc0c 	mul.w	ip, r8, ip
900286fe:	fb01 cc0e 	mla	ip, r1, lr, ip
90028702:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028706:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028708:	fb00 cc0e 	mla	ip, r0, lr, ip
9002870c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028710:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028712:	fb09 cc0e 	mla	ip, r9, lr, ip
90028716:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002871a:	fb08 f80e 	mul.w	r8, r8, lr
9002871e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028722:	fb01 8202 	mla	r2, r1, r2, r8
90028726:	9908      	ldr	r1, [sp, #32]
90028728:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002872c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90028730:	990c      	ldr	r1, [sp, #48]	@ 0x30
90028732:	fb00 220a 	mla	r2, r0, sl, r2
90028736:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
9002873a:	fb09 2900 	mla	r9, r9, r0, r2
9002873e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028742:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90028746:	ea4c 0c09 	orr.w	ip, ip, r9
9002874a:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002874e:	f040 8091 	bne.w	90028874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90028752:	ea4f 135c 	mov.w	r3, ip, lsr #5
90028756:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
9002875a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002875e:	f022 0207 	bic.w	r2, r2, #7
90028762:	431a      	orrs	r2, r3
90028764:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90028768:	ea4c 0c02 	orr.w	ip, ip, r2
9002876c:	f8a7 c000 	strh.w	ip, [r7]
90028770:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028772:	3702      	adds	r7, #2
90028774:	441c      	add	r4, r3
90028776:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028778:	441e      	add	r6, r3
9002877a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002877c:	3b01      	subs	r3, #1
9002877e:	9317      	str	r3, [sp, #92]	@ 0x5c
90028780:	e6c0      	b.n	90028504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90028782:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028784:	441c      	add	r4, r3
90028786:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028788:	441e      	add	r6, r3
9002878a:	9b07      	ldr	r3, [sp, #28]
9002878c:	3b01      	subs	r3, #1
9002878e:	9307      	str	r3, [sp, #28]
90028790:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028792:	3302      	adds	r3, #2
90028794:	930a      	str	r3, [sp, #40]	@ 0x28
90028796:	e695      	b.n	900284c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028798:	d024      	beq.n	900287e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002879a:	9b07      	ldr	r3, [sp, #28]
9002879c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002879e:	3b01      	subs	r3, #1
900287a0:	fb00 4003 	mla	r0, r0, r3, r4
900287a4:	1400      	asrs	r0, r0, #16
900287a6:	f53f aeaa 	bmi.w	900284fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900287aa:	3901      	subs	r1, #1
900287ac:	4288      	cmp	r0, r1
900287ae:	f6bf aea6 	bge.w	900284fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900287b2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900287b4:	fb01 6303 	mla	r3, r1, r3, r6
900287b8:	141b      	asrs	r3, r3, #16
900287ba:	f53f aea0 	bmi.w	900284fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900287be:	3a01      	subs	r2, #1
900287c0:	4293      	cmp	r3, r2
900287c2:	f6bf ae9c 	bge.w	900284fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900287c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900287ca:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900287ce:	f1bb 0f00 	cmp.w	fp, #0
900287d2:	f300 809a 	bgt.w	9002890a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900287d6:	9b07      	ldr	r3, [sp, #28]
900287d8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900287dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900287de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900287e2:	930a      	str	r3, [sp, #40]	@ 0x28
900287e4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900287e6:	2b00      	cmp	r3, #0
900287e8:	f340 81ec 	ble.w	90028bc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900287ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900287f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900287f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900287f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900287fa:	eef0 6a62 	vmov.f32	s13, s5
900287fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028802:	ee31 1a05 	vadd.f32	s2, s2, s10
90028806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002880a:	ee16 4a90 	vmov	r4, s13
9002880e:	eef0 6a43 	vmov.f32	s13, s6
90028812:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028816:	ee16 6a90 	vmov	r6, s13
9002881a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002881e:	ee61 7a27 	vmul.f32	s15, s2, s15
90028822:	ee77 2a62 	vsub.f32	s5, s14, s5
90028826:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002882a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002882e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028832:	ee12 2a90 	vmov	r2, s5
90028836:	eef0 2a47 	vmov.f32	s5, s14
9002883a:	fb92 f3f3 	sdiv	r3, r2, r3
9002883e:	ee13 2a10 	vmov	r2, s6
90028842:	9327      	str	r3, [sp, #156]	@ 0x9c
90028844:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028846:	eeb0 3a67 	vmov.f32	s6, s15
9002884a:	fb92 f3f3 	sdiv	r3, r2, r3
9002884e:	9328      	str	r3, [sp, #160]	@ 0xa0
90028850:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028852:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90028854:	3b01      	subs	r3, #1
90028856:	9316      	str	r3, [sp, #88]	@ 0x58
90028858:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002885a:	bf08      	it	eq
9002885c:	4613      	moveq	r3, r2
9002885e:	9307      	str	r3, [sp, #28]
90028860:	e622      	b.n	900284a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90028862:	2800      	cmp	r0, #0
90028864:	f43f ae92 	beq.w	9002858c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028868:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002886c:	9308      	str	r3, [sp, #32]
9002886e:	0e1b      	lsrs	r3, r3, #24
90028870:	9310      	str	r3, [sp, #64]	@ 0x40
90028872:	e68b      	b.n	9002858c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028874:	8839      	ldrh	r1, [r7, #0]
90028876:	43db      	mvns	r3, r3
90028878:	4dd4      	ldr	r5, [pc, #848]	@ (90028bcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002887a:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002887e:	fa5f f883 	uxtb.w	r8, r3
90028882:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90028886:	10c8      	asrs	r0, r1, #3
90028888:	00cb      	lsls	r3, r1, #3
9002888a:	fb0e fe08 	mul.w	lr, lr, r8
9002888e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028892:	b2db      	uxtb	r3, r3
90028894:	f10e 0101 	add.w	r1, lr, #1
90028898:	fb00 f008 	mul.w	r0, r0, r8
9002889c:	fb03 f308 	mul.w	r3, r3, r8
900288a0:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900288a4:	ea4f 411c 	mov.w	r1, ip, lsr #16
900288a8:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900288ac:	f100 0e01 	add.w	lr, r0, #1
900288b0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900288b4:	b2c9      	uxtb	r1, r1
900288b6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900288ba:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900288be:	00d2      	lsls	r2, r2, #3
900288c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900288c4:	430a      	orrs	r2, r1
900288c6:	1c59      	adds	r1, r3, #1
900288c8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900288cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900288d0:	e748      	b.n	90028764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900288d2:	f112 0801 	adds.w	r8, r2, #1
900288d6:	f53f af4b 	bmi.w	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900288da:	4543      	cmp	r3, r8
900288dc:	f6ff af48 	blt.w	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900288e0:	f11c 0801 	adds.w	r8, ip, #1
900288e4:	f53f af44 	bmi.w	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900288e8:	45c6      	cmp	lr, r8
900288ea:	f6ff af41 	blt.w	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900288ee:	b21b      	sxth	r3, r3
900288f0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900288f4:	fa0f f28e 	sxth.w	r2, lr
900288f8:	e9cd 1003 	strd	r1, r0, [sp, #12]
900288fc:	9200      	str	r2, [sp, #0]
900288fe:	4639      	mov	r1, r7
90028900:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90028902:	9819      	ldr	r0, [sp, #100]	@ 0x64
90028904:	f7ff fc88 	bl	90028218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90028908:	e732      	b.n	90028770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002890a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002890c:	1421      	asrs	r1, r4, #16
9002890e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028910:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028914:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90028918:	1433      	asrs	r3, r6, #16
9002891a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002891e:	fb07 1303 	mla	r3, r7, r3, r1
90028922:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028924:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90028928:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002892c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90028930:	2a00      	cmp	r2, #0
90028932:	f000 8108 	beq.w	90028b46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90028936:	684d      	ldr	r5, [r1, #4]
90028938:	950d      	str	r5, [sp, #52]	@ 0x34
9002893a:	0e2d      	lsrs	r5, r5, #24
9002893c:	9514      	str	r5, [sp, #80]	@ 0x50
9002893e:	b178      	cbz	r0, 90028960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028940:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90028944:	3f01      	subs	r7, #1
90028946:	00bf      	lsls	r7, r7, #2
90028948:	3704      	adds	r7, #4
9002894a:	eb01 0e07 	add.w	lr, r1, r7
9002894e:	59c9      	ldr	r1, [r1, r7]
90028950:	9109      	str	r1, [sp, #36]	@ 0x24
90028952:	0e09      	lsrs	r1, r1, #24
90028954:	9111      	str	r1, [sp, #68]	@ 0x44
90028956:	f8de 1004 	ldr.w	r1, [lr, #4]
9002895a:	910e      	str	r1, [sp, #56]	@ 0x38
9002895c:	0e09      	lsrs	r1, r1, #24
9002895e:	9115      	str	r1, [sp, #84]	@ 0x54
90028960:	b292      	uxth	r2, r2
90028962:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028964:	b280      	uxth	r0, r0
90028966:	fb02 f900 	mul.w	r9, r2, r0
9002896a:	0112      	lsls	r2, r2, #4
9002896c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028970:	eba2 0e09 	sub.w	lr, r2, r9
90028974:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90028978:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002897a:	b280      	uxth	r0, r0
9002897c:	fa1f fe8e 	uxth.w	lr, lr
90028980:	1a09      	subs	r1, r1, r0
90028982:	fb0e f202 	mul.w	r2, lr, r2
90028986:	b289      	uxth	r1, r1
90028988:	fb01 220c 	mla	r2, r1, ip, r2
9002898c:	fb00 2205 	mla	r2, r0, r5, r2
90028990:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028992:	fb09 2205 	mla	r2, r9, r5, r2
90028996:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002899a:	2a00      	cmp	r2, #0
9002899c:	f000 80ca 	beq.w	90028b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900289a0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900289a4:	d019      	beq.n	900289da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900289a6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900289aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900289ae:	fb0c fa0a 	mul.w	sl, ip, sl
900289b2:	fb0c fc03 	mul.w	ip, ip, r3
900289b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900289ba:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900289be:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900289c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900289c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900289ca:	4453      	add	r3, sl
900289cc:	0a3f      	lsrs	r7, r7, #8
900289ce:	0a1b      	lsrs	r3, r3, #8
900289d0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900289d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900289d8:	433b      	orrs	r3, r7
900289da:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900289dc:	2dff      	cmp	r5, #255	@ 0xff
900289de:	d020      	beq.n	90028a22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900289e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900289e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900289e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900289e8:	436f      	muls	r7, r5
900289ea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900289ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900289f0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900289f4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900289f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900289fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900289fe:	fb05 fa0a 	mul.w	sl, r5, sl
90028a02:	44bc      	add	ip, r7
90028a04:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028a10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a1c:	ea4c 050a 	orr.w	r5, ip, sl
90028a20:	950d      	str	r5, [sp, #52]	@ 0x34
90028a22:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028a24:	2dff      	cmp	r5, #255	@ 0xff
90028a26:	d020      	beq.n	90028a6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90028a28:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028a2a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028a2e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028a30:	436f      	muls	r7, r5
90028a32:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028a34:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028a38:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028a3a:	fb05 fa0c 	mul.w	sl, r5, ip
90028a3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028a42:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028a46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a4a:	44bc      	add	ip, r7
90028a4c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028a54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a64:	ea4c 050a 	orr.w	r5, ip, sl
90028a68:	9509      	str	r5, [sp, #36]	@ 0x24
90028a6a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a6c:	2dff      	cmp	r5, #255	@ 0xff
90028a6e:	d020      	beq.n	90028ab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90028a70:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a72:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028a76:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a78:	436f      	muls	r7, r5
90028a7a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028a80:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028a84:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a86:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028a8a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a8e:	fb05 fa0a 	mul.w	sl, r5, sl
90028a92:	44bc      	add	ip, r7
90028a94:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028aa0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028aa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028aa8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028aac:	ea4c 050a 	orr.w	r5, ip, sl
90028ab0:	950e      	str	r5, [sp, #56]	@ 0x38
90028ab2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028ab4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90028ab8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028abc:	2aff      	cmp	r2, #255	@ 0xff
90028abe:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028ac2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028ac4:	fb0e f707 	mul.w	r7, lr, r7
90028ac8:	fb01 770c 	mla	r7, r1, ip, r7
90028acc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028ad0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028ad2:	fb00 770c 	mla	r7, r0, ip, r7
90028ad6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028ada:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028adc:	fb09 770c 	mla	r7, r9, ip, r7
90028ae0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028ae4:	fb0e fe0c 	mul.w	lr, lr, ip
90028ae8:	ea4f 2717 	mov.w	r7, r7, lsr #8
90028aec:	fb01 e303 	mla	r3, r1, r3, lr
90028af0:	9909      	ldr	r1, [sp, #36]	@ 0x24
90028af2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028af6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90028afa:	990e      	ldr	r1, [sp, #56]	@ 0x38
90028afc:	fb00 330a 	mla	r3, r0, sl, r3
90028b00:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90028b04:	fb09 3c0c 	mla	ip, r9, ip, r3
90028b08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028b0c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028b10:	ea47 070c 	orr.w	r7, r7, ip
90028b14:	ea4f 2317 	mov.w	r3, r7, lsr #8
90028b18:	d11e      	bne.n	90028b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90028b1a:	097a      	lsrs	r2, r7, #5
90028b1c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90028b20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90028b24:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028b28:	f023 0307 	bic.w	r3, r3, #7
90028b2c:	4313      	orrs	r3, r2
90028b2e:	431f      	orrs	r7, r3
90028b30:	f8a8 7000 	strh.w	r7, [r8]
90028b34:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028b36:	f108 0802 	add.w	r8, r8, #2
90028b3a:	f10b 3bff 	add.w	fp, fp, #4294967295
90028b3e:	441c      	add	r4, r3
90028b40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028b42:	441e      	add	r6, r3
90028b44:	e643      	b.n	900287ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90028b46:	2800      	cmp	r0, #0
90028b48:	f43f af0a 	beq.w	90028960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028b4c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90028b50:	9109      	str	r1, [sp, #36]	@ 0x24
90028b52:	0e09      	lsrs	r1, r1, #24
90028b54:	9111      	str	r1, [sp, #68]	@ 0x44
90028b56:	e703      	b.n	90028960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028b58:	f8b8 1000 	ldrh.w	r1, [r8]
90028b5c:	43d2      	mvns	r2, r2
90028b5e:	ea4f 2c21 	mov.w	ip, r1, asr #8
90028b62:	fa5f fe82 	uxtb.w	lr, r2
90028b66:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90028b6a:	10c8      	asrs	r0, r1, #3
90028b6c:	00ca      	lsls	r2, r1, #3
90028b6e:	fb0c fc0e 	mul.w	ip, ip, lr
90028b72:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028b76:	b2d2      	uxtb	r2, r2
90028b78:	f10c 0101 	add.w	r1, ip, #1
90028b7c:	fb00 f00e 	mul.w	r0, r0, lr
90028b80:	fb02 f20e 	mul.w	r2, r2, lr
90028b84:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028b88:	0c39      	lsrs	r1, r7, #16
90028b8a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028b8e:	490f      	ldr	r1, [pc, #60]	@ (90028bcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90028b90:	fa5f fc8c 	uxtb.w	ip, ip
90028b94:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90028b98:	1c41      	adds	r1, r0, #1
90028b9a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90028b9e:	1c51      	adds	r1, r2, #1
90028ba0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028ba4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028ba8:	00c0      	lsls	r0, r0, #3
90028baa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90028bae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028bb2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90028bb6:	ea4c 0c00 	orr.w	ip, ip, r0
90028bba:	ea47 0c0c 	orr.w	ip, r7, ip
90028bbe:	f8a8 c000 	strh.w	ip, [r8]
90028bc2:	e7b7      	b.n	90028b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90028bc4:	b01b      	add	sp, #108	@ 0x6c
90028bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028bca:	bf00      	nop
90028bcc:	fffff800 	.word	0xfffff800

90028bd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90028bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028bd4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90028bd8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90028bdc:	2d00      	cmp	r5, #0
90028bde:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90028be2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90028be6:	fb05 0e03 	mla	lr, r5, r3, r0
90028bea:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90028bee:	f2c0 808c 	blt.w	90028d0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90028bf2:	45a9      	cmp	r9, r5
90028bf4:	f340 8089 	ble.w	90028d0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90028bf8:	2800      	cmp	r0, #0
90028bfa:	f2c0 8084 	blt.w	90028d06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90028bfe:	4580      	cmp	r8, r0
90028c00:	f340 8081 	ble.w	90028d06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90028c04:	ea4f 045e 	mov.w	r4, lr, lsr #1
90028c08:	f01e 0f01 	tst.w	lr, #1
90028c0c:	5d16      	ldrb	r6, [r2, r4]
90028c0e:	bf0c      	ite	eq
90028c10:	f006 060f 	andeq.w	r6, r6, #15
90028c14:	1136      	asrne	r6, r6, #4
90028c16:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90028c1a:	b2f6      	uxtb	r6, r6
90028c1c:	1c44      	adds	r4, r0, #1
90028c1e:	d477      	bmi.n	90028d10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90028c20:	45a0      	cmp	r8, r4
90028c22:	dd75      	ble.n	90028d10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90028c24:	2f00      	cmp	r7, #0
90028c26:	d075      	beq.n	90028d14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90028c28:	f10e 0a01 	add.w	sl, lr, #1
90028c2c:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028c30:	f01a 0f01 	tst.w	sl, #1
90028c34:	5d14      	ldrb	r4, [r2, r4]
90028c36:	bf0c      	ite	eq
90028c38:	f004 040f 	andeq.w	r4, r4, #15
90028c3c:	1124      	asrne	r4, r4, #4
90028c3e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90028c42:	b2e4      	uxtb	r4, r4
90028c44:	3501      	adds	r5, #1
90028c46:	d469      	bmi.n	90028d1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90028c48:	45a9      	cmp	r9, r5
90028c4a:	dd67      	ble.n	90028d1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90028c4c:	f1bc 0f00 	cmp.w	ip, #0
90028c50:	d067      	beq.n	90028d22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90028c52:	2800      	cmp	r0, #0
90028c54:	db60      	blt.n	90028d18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90028c56:	4580      	cmp	r8, r0
90028c58:	dd5e      	ble.n	90028d18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90028c5a:	eb03 090e 	add.w	r9, r3, lr
90028c5e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90028c62:	f019 0f01 	tst.w	r9, #1
90028c66:	5d55      	ldrb	r5, [r2, r5]
90028c68:	bf0c      	ite	eq
90028c6a:	f005 050f 	andeq.w	r5, r5, #15
90028c6e:	112d      	asrne	r5, r5, #4
90028c70:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90028c74:	b2ed      	uxtb	r5, r5
90028c76:	3001      	adds	r0, #1
90028c78:	d456      	bmi.n	90028d28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90028c7a:	4580      	cmp	r8, r0
90028c7c:	dd54      	ble.n	90028d28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90028c7e:	2f00      	cmp	r7, #0
90028c80:	d054      	beq.n	90028d2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90028c82:	3301      	adds	r3, #1
90028c84:	449e      	add	lr, r3
90028c86:	ea4f 035e 	mov.w	r3, lr, lsr #1
90028c8a:	f01e 0f01 	tst.w	lr, #1
90028c8e:	5cd0      	ldrb	r0, [r2, r3]
90028c90:	bf0c      	ite	eq
90028c92:	f000 000f 	andeq.w	r0, r0, #15
90028c96:	1100      	asrne	r0, r0, #4
90028c98:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028c9c:	b2c3      	uxtb	r3, r0
90028c9e:	b2ba      	uxth	r2, r7
90028ca0:	fa1f fc8c 	uxth.w	ip, ip
90028ca4:	fb02 f00c 	mul.w	r0, r2, ip
90028ca8:	0112      	lsls	r2, r2, #4
90028caa:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90028cae:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90028cb2:	1a12      	subs	r2, r2, r0
90028cb4:	fa1f fc8c 	uxth.w	ip, ip
90028cb8:	b292      	uxth	r2, r2
90028cba:	eba7 070c 	sub.w	r7, r7, ip
90028cbe:	4362      	muls	r2, r4
90028cc0:	b2bf      	uxth	r7, r7
90028cc2:	fb06 2207 	mla	r2, r6, r7, r2
90028cc6:	fb0c 2505 	mla	r5, ip, r5, r2
90028cca:	fb00 5303 	mla	r3, r0, r3, r5
90028cce:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028cd2:	b1b3      	cbz	r3, 90028d02 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90028cd4:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90028cd8:	435a      	muls	r2, r3
90028cda:	1c53      	adds	r3, r2, #1
90028cdc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028ce0:	4a2d      	ldr	r2, [pc, #180]	@ (90028d98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90028ce2:	121b      	asrs	r3, r3, #8
90028ce4:	6812      	ldr	r2, [r2, #0]
90028ce6:	2bff      	cmp	r3, #255	@ 0xff
90028ce8:	ea4f 2612 	mov.w	r6, r2, lsr #8
90028cec:	d120      	bne.n	90028d30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90028cee:	0950      	lsrs	r0, r2, #5
90028cf0:	4b2a      	ldr	r3, [pc, #168]	@ (90028d9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90028cf2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028cf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028cfa:	4033      	ands	r3, r6
90028cfc:	4318      	orrs	r0, r3
90028cfe:	4302      	orrs	r2, r0
90028d00:	800a      	strh	r2, [r1, #0]
90028d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028d06:	2600      	movs	r6, #0
90028d08:	e788      	b.n	90028c1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90028d0a:	2400      	movs	r4, #0
90028d0c:	4626      	mov	r6, r4
90028d0e:	e799      	b.n	90028c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90028d10:	2400      	movs	r4, #0
90028d12:	e797      	b.n	90028c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90028d14:	463c      	mov	r4, r7
90028d16:	e795      	b.n	90028c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90028d18:	2500      	movs	r5, #0
90028d1a:	e7ac      	b.n	90028c76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90028d1c:	2300      	movs	r3, #0
90028d1e:	461d      	mov	r5, r3
90028d20:	e7bd      	b.n	90028c9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90028d22:	4663      	mov	r3, ip
90028d24:	4665      	mov	r5, ip
90028d26:	e7ba      	b.n	90028c9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90028d28:	2300      	movs	r3, #0
90028d2a:	e7b8      	b.n	90028c9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90028d2c:	463b      	mov	r3, r7
90028d2e:	e7b6      	b.n	90028c9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90028d30:	880d      	ldrh	r5, [r1, #0]
90028d32:	b29f      	uxth	r7, r3
90028d34:	f3c2 4007 	ubfx	r0, r2, #16, #8
90028d38:	43db      	mvns	r3, r3
90028d3a:	122c      	asrs	r4, r5, #8
90028d3c:	fb10 f007 	smulbb	r0, r0, r7
90028d40:	b2db      	uxtb	r3, r3
90028d42:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028d46:	b2f6      	uxtb	r6, r6
90028d48:	b2d2      	uxtb	r2, r2
90028d4a:	fb04 0403 	mla	r4, r4, r3, r0
90028d4e:	10e8      	asrs	r0, r5, #3
90028d50:	fb12 f207 	smulbb	r2, r2, r7
90028d54:	00ed      	lsls	r5, r5, #3
90028d56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028d5a:	b2a4      	uxth	r4, r4
90028d5c:	fb16 f607 	smulbb	r6, r6, r7
90028d60:	b2ed      	uxtb	r5, r5
90028d62:	fb00 6603 	mla	r6, r0, r3, r6
90028d66:	fb05 2303 	mla	r3, r5, r3, r2
90028d6a:	b2b0      	uxth	r0, r6
90028d6c:	b29a      	uxth	r2, r3
90028d6e:	1c63      	adds	r3, r4, #1
90028d70:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90028d74:	1c53      	adds	r3, r2, #1
90028d76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028d7a:	1c42      	adds	r2, r0, #1
90028d7c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028d80:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028d84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028d88:	0940      	lsrs	r0, r0, #5
90028d8a:	4323      	orrs	r3, r4
90028d8c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028d90:	4303      	orrs	r3, r0
90028d92:	800b      	strh	r3, [r1, #0]
90028d94:	e7b5      	b.n	90028d02 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90028d96:	bf00      	nop
90028d98:	240218dc 	.word	0x240218dc
90028d9c:	00fff800 	.word	0x00fff800

90028da0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028da4:	b097      	sub	sp, #92	@ 0x5c
90028da6:	9214      	str	r2, [sp, #80]	@ 0x50
90028da8:	9309      	str	r3, [sp, #36]	@ 0x24
90028daa:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90028dac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90028db0:	9015      	str	r0, [sp, #84]	@ 0x54
90028db2:	910d      	str	r1, [sp, #52]	@ 0x34
90028db4:	6850      	ldr	r0, [r2, #4]
90028db6:	930f      	str	r3, [sp, #60]	@ 0x3c
90028db8:	6812      	ldr	r2, [r2, #0]
90028dba:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90028dbe:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90028dc2:	fb00 1303 	mla	r3, r0, r3, r1
90028dc6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90028dca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028dcc:	689b      	ldr	r3, [r3, #8]
90028dce:	3301      	adds	r3, #1
90028dd0:	f023 0301 	bic.w	r3, r3, #1
90028dd4:	930a      	str	r3, [sp, #40]	@ 0x28
90028dd6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028dd8:	681f      	ldr	r7, [r3, #0]
90028dda:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028ddc:	2b00      	cmp	r3, #0
90028dde:	dc03      	bgt.n	90028de8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028de0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90028de2:	2b00      	cmp	r3, #0
90028de4:	f340 8289 	ble.w	900292fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90028de8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028dea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028dee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028df2:	1e48      	subs	r0, r1, #1
90028df4:	f102 3cff 	add.w	ip, r2, #4294967295
90028df8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028dfa:	2b00      	cmp	r3, #0
90028dfc:	f340 80c5 	ble.w	90028f8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90028e00:	ea5f 4e24 	movs.w	lr, r4, asr #16
90028e04:	ea4f 4326 	mov.w	r3, r6, asr #16
90028e08:	d406      	bmi.n	90028e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90028e0a:	4586      	cmp	lr, r0
90028e0c:	da04      	bge.n	90028e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90028e0e:	2b00      	cmp	r3, #0
90028e10:	db02      	blt.n	90028e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90028e12:	4563      	cmp	r3, ip
90028e14:	f2c0 80ba 	blt.w	90028f8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90028e18:	f11e 0e01 	adds.w	lr, lr, #1
90028e1c:	f100 80ab 	bmi.w	90028f76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90028e20:	4571      	cmp	r1, lr
90028e22:	f2c0 80a8 	blt.w	90028f76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90028e26:	3301      	adds	r3, #1
90028e28:	f100 80a5 	bmi.w	90028f76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90028e2c:	429a      	cmp	r2, r3
90028e2e:	f2c0 80a2 	blt.w	90028f76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90028e32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028e34:	46c8      	mov	r8, r9
90028e36:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90028e3a:	930e      	str	r3, [sp, #56]	@ 0x38
90028e3c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90028e3e:	2b00      	cmp	r3, #0
90028e40:	f340 80c4 	ble.w	90028fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90028e44:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028e46:	1430      	asrs	r0, r6, #16
90028e48:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028e4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028e50:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90028e54:	1423      	asrs	r3, r4, #16
90028e56:	f100 814f 	bmi.w	900290f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028e5a:	f10c 3bff 	add.w	fp, ip, #4294967295
90028e5e:	455b      	cmp	r3, fp
90028e60:	f280 814a 	bge.w	900290f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028e64:	2800      	cmp	r0, #0
90028e66:	f2c0 8147 	blt.w	900290f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028e6a:	f10e 3bff 	add.w	fp, lr, #4294967295
90028e6e:	4558      	cmp	r0, fp
90028e70:	f280 8142 	bge.w	900290f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028e74:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90028e76:	fb00 3305 	mla	r3, r0, r5, r3
90028e7a:	0858      	lsrs	r0, r3, #1
90028e7c:	07dd      	lsls	r5, r3, #31
90028e7e:	f817 c000 	ldrb.w	ip, [r7, r0]
90028e82:	bf54      	ite	pl
90028e84:	f00c 0c0f 	andpl.w	ip, ip, #15
90028e88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028e8c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028e90:	fa5f fc8c 	uxtb.w	ip, ip
90028e94:	2a00      	cmp	r2, #0
90028e96:	f000 80dd 	beq.w	90029054 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90028e9a:	1c58      	adds	r0, r3, #1
90028e9c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90028ea0:	07c0      	lsls	r0, r0, #31
90028ea2:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028ea6:	bf54      	ite	pl
90028ea8:	f00e 0e0f 	andpl.w	lr, lr, #15
90028eac:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90028eb0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90028eb4:	fa5f f08e 	uxtb.w	r0, lr
90028eb8:	9010      	str	r0, [sp, #64]	@ 0x40
90028eba:	b1d9      	cbz	r1, 90028ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028ebc:	4453      	add	r3, sl
90028ebe:	0858      	lsrs	r0, r3, #1
90028ec0:	07dd      	lsls	r5, r3, #31
90028ec2:	f103 0301 	add.w	r3, r3, #1
90028ec6:	5c38      	ldrb	r0, [r7, r0]
90028ec8:	bf54      	ite	pl
90028eca:	f000 000f 	andpl.w	r0, r0, #15
90028ece:	1100      	asrmi	r0, r0, #4
90028ed0:	07dd      	lsls	r5, r3, #31
90028ed2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028ed6:	b2c0      	uxtb	r0, r0
90028ed8:	900b      	str	r0, [sp, #44]	@ 0x2c
90028eda:	ea4f 0053 	mov.w	r0, r3, lsr #1
90028ede:	f817 e000 	ldrb.w	lr, [r7, r0]
90028ee2:	bf54      	ite	pl
90028ee4:	f00e 030f 	andpl.w	r3, lr, #15
90028ee8:	ea4f 132e 	movmi.w	r3, lr, asr #4
90028eec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028ef0:	b2db      	uxtb	r3, r3
90028ef2:	9311      	str	r3, [sp, #68]	@ 0x44
90028ef4:	b292      	uxth	r2, r2
90028ef6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028ef8:	b289      	uxth	r1, r1
90028efa:	fb02 f301 	mul.w	r3, r2, r1
90028efe:	0112      	lsls	r2, r2, #4
90028f00:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028f04:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90028f08:	1ad2      	subs	r2, r2, r3
90028f0a:	b289      	uxth	r1, r1
90028f0c:	b292      	uxth	r2, r2
90028f0e:	1a40      	subs	r0, r0, r1
90028f10:	436a      	muls	r2, r5
90028f12:	b280      	uxth	r0, r0
90028f14:	fb0c 2c00 	mla	ip, ip, r0, r2
90028f18:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028f1a:	fb01 c102 	mla	r1, r1, r2, ip
90028f1e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90028f20:	fb03 1302 	mla	r3, r3, r2, r1
90028f24:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028f28:	b1db      	cbz	r3, 90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028f2a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90028f2c:	4353      	muls	r3, r2
90028f2e:	1c5a      	adds	r2, r3, #1
90028f30:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90028f34:	4ac6      	ldr	r2, [pc, #792]	@ (90029250 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90028f36:	121b      	asrs	r3, r3, #8
90028f38:	6812      	ldr	r2, [r2, #0]
90028f3a:	2bff      	cmp	r3, #255	@ 0xff
90028f3c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90028f40:	f040 8099 	bne.w	90029076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90028f44:	0953      	lsrs	r3, r2, #5
90028f46:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90028f4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028f4e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028f52:	f02c 0c07 	bic.w	ip, ip, #7
90028f56:	ea43 0c0c 	orr.w	ip, r3, ip
90028f5a:	ea4c 0202 	orr.w	r2, ip, r2
90028f5e:	f8a8 2000 	strh.w	r2, [r8]
90028f62:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90028f64:	f108 0802 	add.w	r8, r8, #2
90028f68:	441c      	add	r4, r3
90028f6a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028f6c:	441e      	add	r6, r3
90028f6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90028f70:	3b01      	subs	r3, #1
90028f72:	930e      	str	r3, [sp, #56]	@ 0x38
90028f74:	e762      	b.n	90028e3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90028f76:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90028f78:	f109 0902 	add.w	r9, r9, #2
90028f7c:	441c      	add	r4, r3
90028f7e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028f80:	441e      	add	r6, r3
90028f82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028f84:	3b01      	subs	r3, #1
90028f86:	9309      	str	r3, [sp, #36]	@ 0x24
90028f88:	e736      	b.n	90028df8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90028f8a:	d024      	beq.n	90028fd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90028f8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028f8e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90028f90:	3b01      	subs	r3, #1
90028f92:	fb00 4003 	mla	r0, r0, r3, r4
90028f96:	1400      	asrs	r0, r0, #16
90028f98:	f53f af4b 	bmi.w	90028e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028f9c:	3901      	subs	r1, #1
90028f9e:	4288      	cmp	r0, r1
90028fa0:	f6bf af47 	bge.w	90028e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028fa4:	9924      	ldr	r1, [sp, #144]	@ 0x90
90028fa6:	fb01 6303 	mla	r3, r1, r3, r6
90028faa:	141b      	asrs	r3, r3, #16
90028fac:	f53f af41 	bmi.w	90028e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028fb0:	3a01      	subs	r2, #1
90028fb2:	4293      	cmp	r3, r2
90028fb4:	f6bf af3d 	bge.w	90028e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028fb8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90028fbc:	46c8      	mov	r8, r9
90028fbe:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90028fc2:	930e      	str	r3, [sp, #56]	@ 0x38
90028fc4:	f1bb 0f00 	cmp.w	fp, #0
90028fc8:	f300 80b7 	bgt.w	9002913a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90028fcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028fce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028fd2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90028fd6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028fd8:	2b00      	cmp	r3, #0
90028fda:	f340 818e 	ble.w	900292fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90028fde:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028fe2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028fe4:	ee30 0a04 	vadd.f32	s0, s0, s8
90028fe8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028fec:	eef0 6a62 	vmov.f32	s13, s5
90028ff0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028ff4:	ee31 1a05 	vadd.f32	s2, s2, s10
90028ff8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028ffc:	ee16 4a90 	vmov	r4, s13
90029000:	eef0 6a43 	vmov.f32	s13, s6
90029004:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029008:	ee16 6a90 	vmov	r6, s13
9002900c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90029010:	ee61 7a27 	vmul.f32	s15, s2, s15
90029014:	ee77 2a62 	vsub.f32	s5, s14, s5
90029018:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002901c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90029020:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029024:	ee12 2a90 	vmov	r2, s5
90029028:	eef0 2a47 	vmov.f32	s5, s14
9002902c:	fb92 f3f3 	sdiv	r3, r2, r3
90029030:	ee13 2a10 	vmov	r2, s6
90029034:	9323      	str	r3, [sp, #140]	@ 0x8c
90029036:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029038:	eeb0 3a67 	vmov.f32	s6, s15
9002903c:	fb92 f3f3 	sdiv	r3, r2, r3
90029040:	9324      	str	r3, [sp, #144]	@ 0x90
90029042:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029044:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029046:	3b01      	subs	r3, #1
90029048:	930d      	str	r3, [sp, #52]	@ 0x34
9002904a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002904c:	bf08      	it	eq
9002904e:	4613      	moveq	r3, r2
90029050:	9309      	str	r3, [sp, #36]	@ 0x24
90029052:	e6c2      	b.n	90028dda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029054:	2900      	cmp	r1, #0
90029056:	f43f af4d 	beq.w	90028ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002905a:	eb0a 0003 	add.w	r0, sl, r3
9002905e:	0843      	lsrs	r3, r0, #1
90029060:	07c0      	lsls	r0, r0, #31
90029062:	5cfb      	ldrb	r3, [r7, r3]
90029064:	bf54      	ite	pl
90029066:	f003 030f 	andpl.w	r3, r3, #15
9002906a:	111b      	asrmi	r3, r3, #4
9002906c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029070:	b2db      	uxtb	r3, r3
90029072:	930b      	str	r3, [sp, #44]	@ 0x2c
90029074:	e73e      	b.n	90028ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029076:	f8b8 e000 	ldrh.w	lr, [r8]
9002907a:	fa1f fb83 	uxth.w	fp, r3
9002907e:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029082:	43db      	mvns	r3, r3
90029084:	ea4f 202e 	mov.w	r0, lr, asr #8
90029088:	fb11 f10b 	smulbb	r1, r1, fp
9002908c:	b2db      	uxtb	r3, r3
9002908e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029092:	fa5f fc8c 	uxtb.w	ip, ip
90029096:	b2d2      	uxtb	r2, r2
90029098:	fb00 1003 	mla	r0, r0, r3, r1
9002909c:	ea4f 01ee 	mov.w	r1, lr, asr #3
900290a0:	fb1c fc0b 	smulbb	ip, ip, fp
900290a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900290a8:	b280      	uxth	r0, r0
900290aa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900290ae:	fb12 fb0b 	smulbb	fp, r2, fp
900290b2:	fa5f fe8e 	uxtb.w	lr, lr
900290b6:	fb01 cc03 	mla	ip, r1, r3, ip
900290ba:	fb0e bb03 	mla	fp, lr, r3, fp
900290be:	1c43      	adds	r3, r0, #1
900290c0:	fa1f fc8c 	uxth.w	ip, ip
900290c4:	fa1f fb8b 	uxth.w	fp, fp
900290c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900290cc:	f10c 0101 	add.w	r1, ip, #1
900290d0:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
900290d4:	f10b 0001 	add.w	r0, fp, #1
900290d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900290dc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900290e0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900290e4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900290e8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900290ec:	4318      	orrs	r0, r3
900290ee:	ea40 000c 	orr.w	r0, r0, ip
900290f2:	f8a8 0000 	strh.w	r0, [r8]
900290f6:	e734      	b.n	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900290f8:	f113 0b01 	adds.w	fp, r3, #1
900290fc:	f53f af31 	bmi.w	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029100:	45dc      	cmp	ip, fp
90029102:	f6ff af2e 	blt.w	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029106:	f110 0b01 	adds.w	fp, r0, #1
9002910a:	f53f af2a 	bmi.w	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002910e:	45de      	cmp	lr, fp
90029110:	f6ff af27 	blt.w	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029114:	9302      	str	r3, [sp, #8]
90029116:	fa0f f38e 	sxth.w	r3, lr
9002911a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002911c:	9301      	str	r3, [sp, #4]
9002911e:	fa0f f38c 	sxth.w	r3, ip
90029122:	e9cd 0203 	strd	r0, r2, [sp, #12]
90029126:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002912a:	9300      	str	r3, [sp, #0]
9002912c:	463a      	mov	r2, r7
9002912e:	4653      	mov	r3, sl
90029130:	4641      	mov	r1, r8
90029132:	9815      	ldr	r0, [sp, #84]	@ 0x54
90029134:	f7ff fd4c 	bl	90028bd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90029138:	e713      	b.n	90028f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002913a:	1422      	asrs	r2, r4, #16
9002913c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9002913e:	1433      	asrs	r3, r6, #16
90029140:	f3c4 3103 	ubfx	r1, r4, #12, #4
90029144:	f3c6 3003 	ubfx	r0, r6, #12, #4
90029148:	fb05 2303 	mla	r3, r5, r3, r2
9002914c:	085a      	lsrs	r2, r3, #1
9002914e:	07dd      	lsls	r5, r3, #31
90029150:	5cba      	ldrb	r2, [r7, r2]
90029152:	bf54      	ite	pl
90029154:	f002 020f 	andpl.w	r2, r2, #15
90029158:	1112      	asrmi	r2, r2, #4
9002915a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002915e:	b2d2      	uxtb	r2, r2
90029160:	2900      	cmp	r1, #0
90029162:	d077      	beq.n	90029254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90029164:	f103 0e01 	add.w	lr, r3, #1
90029168:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9002916c:	f01e 0f01 	tst.w	lr, #1
90029170:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029174:	bf0c      	ite	eq
90029176:	f00c 0c0f 	andeq.w	ip, ip, #15
9002917a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002917e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029182:	fa5f f58c 	uxtb.w	r5, ip
90029186:	9512      	str	r5, [sp, #72]	@ 0x48
90029188:	b308      	cbz	r0, 900291ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002918a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002918c:	442b      	add	r3, r5
9002918e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029192:	07dd      	lsls	r5, r3, #31
90029194:	f103 0301 	add.w	r3, r3, #1
90029198:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002919c:	bf54      	ite	pl
9002919e:	f00c 0c0f 	andpl.w	ip, ip, #15
900291a2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900291a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900291aa:	fa5f f58c 	uxtb.w	r5, ip
900291ae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900291b2:	950c      	str	r5, [sp, #48]	@ 0x30
900291b4:	07dd      	lsls	r5, r3, #31
900291b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900291ba:	bf54      	ite	pl
900291bc:	f00c 0c0f 	andpl.w	ip, ip, #15
900291c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900291c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900291c8:	fa5f f38c 	uxtb.w	r3, ip
900291cc:	9313      	str	r3, [sp, #76]	@ 0x4c
900291ce:	b289      	uxth	r1, r1
900291d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900291d2:	b280      	uxth	r0, r0
900291d4:	fb01 f300 	mul.w	r3, r1, r0
900291d8:	0109      	lsls	r1, r1, #4
900291da:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900291de:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
900291e2:	1ac9      	subs	r1, r1, r3
900291e4:	b280      	uxth	r0, r0
900291e6:	b289      	uxth	r1, r1
900291e8:	ebac 0c00 	sub.w	ip, ip, r0
900291ec:	4369      	muls	r1, r5
900291ee:	fa1f fc8c 	uxth.w	ip, ip
900291f2:	fb02 120c 	mla	r2, r2, ip, r1
900291f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900291f8:	fb00 2001 	mla	r0, r0, r1, r2
900291fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900291fe:	fb03 0302 	mla	r3, r3, r2, r0
90029202:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029206:	b1d3      	cbz	r3, 9002923e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90029208:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002920a:	4353      	muls	r3, r2
9002920c:	1c5a      	adds	r2, r3, #1
9002920e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029212:	4a0f      	ldr	r2, [pc, #60]	@ (90029250 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029214:	121b      	asrs	r3, r3, #8
90029216:	6812      	ldr	r2, [r2, #0]
90029218:	2bff      	cmp	r3, #255	@ 0xff
9002921a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002921e:	d12d      	bne.n	9002927c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90029220:	0953      	lsrs	r3, r2, #5
90029222:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029226:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002922a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002922e:	f02c 0c07 	bic.w	ip, ip, #7
90029232:	ea43 0c0c 	orr.w	ip, r3, ip
90029236:	ea4c 0202 	orr.w	r2, ip, r2
9002923a:	f8a8 2000 	strh.w	r2, [r8]
9002923e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029240:	f108 0802 	add.w	r8, r8, #2
90029244:	f10b 3bff 	add.w	fp, fp, #4294967295
90029248:	441c      	add	r4, r3
9002924a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002924c:	441e      	add	r6, r3
9002924e:	e6b9      	b.n	90028fc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90029250:	240218dc 	.word	0x240218dc
90029254:	2800      	cmp	r0, #0
90029256:	d0ba      	beq.n	900291ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029258:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002925a:	442b      	add	r3, r5
9002925c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029260:	07db      	lsls	r3, r3, #31
90029262:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029266:	bf54      	ite	pl
90029268:	f00c 0c0f 	andpl.w	ip, ip, #15
9002926c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029270:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029274:	fa5f f38c 	uxtb.w	r3, ip
90029278:	930c      	str	r3, [sp, #48]	@ 0x30
9002927a:	e7a8      	b.n	900291ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002927c:	f8b8 e000 	ldrh.w	lr, [r8]
90029280:	fa1f fa83 	uxth.w	sl, r3
90029284:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029288:	43db      	mvns	r3, r3
9002928a:	ea4f 202e 	mov.w	r0, lr, asr #8
9002928e:	fb11 f10a 	smulbb	r1, r1, sl
90029292:	b2db      	uxtb	r3, r3
90029294:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029298:	b2d2      	uxtb	r2, r2
9002929a:	fa5f fc8c 	uxtb.w	ip, ip
9002929e:	fb00 1003 	mla	r0, r0, r3, r1
900292a2:	ea4f 01ee 	mov.w	r1, lr, asr #3
900292a6:	fb12 f20a 	smulbb	r2, r2, sl
900292aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900292ae:	b280      	uxth	r0, r0
900292b0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900292b4:	fb1c fc0a 	smulbb	ip, ip, sl
900292b8:	fa5f fe8e 	uxtb.w	lr, lr
900292bc:	fb0e 2203 	mla	r2, lr, r3, r2
900292c0:	fb01 cc03 	mla	ip, r1, r3, ip
900292c4:	1c43      	adds	r3, r0, #1
900292c6:	b292      	uxth	r2, r2
900292c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900292cc:	1c51      	adds	r1, r2, #1
900292ce:	fa1f fc8c 	uxth.w	ip, ip
900292d2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900292d6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900292da:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900292de:	4308      	orrs	r0, r1
900292e0:	f10c 0101 	add.w	r1, ip, #1
900292e4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900292e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900292ec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900292f0:	ea40 000c 	orr.w	r0, r0, ip
900292f4:	f8a8 0000 	strh.w	r0, [r8]
900292f8:	e7a1      	b.n	9002923e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900292fa:	b017      	add	sp, #92	@ 0x5c
900292fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90029300 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90029300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029304:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90029308:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002930c:	2d00      	cmp	r5, #0
9002930e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90029312:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90029316:	fb05 0e03 	mla	lr, r5, r3, r0
9002931a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002931e:	f2c0 80b0 	blt.w	90029482 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029322:	45a9      	cmp	r9, r5
90029324:	f340 80ad 	ble.w	90029482 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029328:	2800      	cmp	r0, #0
9002932a:	f2c0 80a8 	blt.w	9002947e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002932e:	4580      	cmp	r8, r0
90029330:	f340 80a5 	ble.w	9002947e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90029334:	ea4f 045e 	mov.w	r4, lr, lsr #1
90029338:	f01e 0f01 	tst.w	lr, #1
9002933c:	5d16      	ldrb	r6, [r2, r4]
9002933e:	bf0c      	ite	eq
90029340:	f006 060f 	andeq.w	r6, r6, #15
90029344:	1136      	asrne	r6, r6, #4
90029346:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002934a:	b2f6      	uxtb	r6, r6
9002934c:	1c44      	adds	r4, r0, #1
9002934e:	f100 809b 	bmi.w	90029488 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029352:	45a0      	cmp	r8, r4
90029354:	f340 8098 	ble.w	90029488 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029358:	2f00      	cmp	r7, #0
9002935a:	f000 8097 	beq.w	9002948c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002935e:	f10e 0a01 	add.w	sl, lr, #1
90029362:	ea4f 045a 	mov.w	r4, sl, lsr #1
90029366:	f01a 0f01 	tst.w	sl, #1
9002936a:	5d14      	ldrb	r4, [r2, r4]
9002936c:	bf0c      	ite	eq
9002936e:	f004 040f 	andeq.w	r4, r4, #15
90029372:	1124      	asrne	r4, r4, #4
90029374:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029378:	b2e4      	uxtb	r4, r4
9002937a:	3501      	adds	r5, #1
9002937c:	f100 808a 	bmi.w	90029494 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029380:	45a9      	cmp	r9, r5
90029382:	f340 8087 	ble.w	90029494 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029386:	f1bc 0f00 	cmp.w	ip, #0
9002938a:	f000 8086 	beq.w	9002949a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002938e:	2800      	cmp	r0, #0
90029390:	db7e      	blt.n	90029490 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029392:	4580      	cmp	r8, r0
90029394:	dd7c      	ble.n	90029490 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029396:	eb03 090e 	add.w	r9, r3, lr
9002939a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002939e:	f019 0f01 	tst.w	r9, #1
900293a2:	5d55      	ldrb	r5, [r2, r5]
900293a4:	bf0c      	ite	eq
900293a6:	f005 050f 	andeq.w	r5, r5, #15
900293aa:	112d      	asrne	r5, r5, #4
900293ac:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900293b0:	b2ed      	uxtb	r5, r5
900293b2:	3001      	adds	r0, #1
900293b4:	d474      	bmi.n	900294a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900293b6:	4580      	cmp	r8, r0
900293b8:	dd72      	ble.n	900294a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900293ba:	2f00      	cmp	r7, #0
900293bc:	d072      	beq.n	900294a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900293be:	3301      	adds	r3, #1
900293c0:	449e      	add	lr, r3
900293c2:	ea4f 035e 	mov.w	r3, lr, lsr #1
900293c6:	f01e 0f01 	tst.w	lr, #1
900293ca:	5cd0      	ldrb	r0, [r2, r3]
900293cc:	bf0c      	ite	eq
900293ce:	f000 000f 	andeq.w	r0, r0, #15
900293d2:	1100      	asrne	r0, r0, #4
900293d4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900293d8:	b2c3      	uxtb	r3, r0
900293da:	b2ba      	uxth	r2, r7
900293dc:	fa1f fc8c 	uxth.w	ip, ip
900293e0:	fb02 f00c 	mul.w	r0, r2, ip
900293e4:	0112      	lsls	r2, r2, #4
900293e6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900293ea:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900293ee:	1a12      	subs	r2, r2, r0
900293f0:	fa1f fc8c 	uxth.w	ip, ip
900293f4:	b292      	uxth	r2, r2
900293f6:	eba7 070c 	sub.w	r7, r7, ip
900293fa:	4362      	muls	r2, r4
900293fc:	b2bf      	uxth	r7, r7
900293fe:	fb06 2207 	mla	r2, r6, r7, r2
90029402:	fb0c 2505 	mla	r5, ip, r5, r2
90029406:	fb00 5303 	mla	r3, r0, r3, r5
9002940a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002940e:	b3a3      	cbz	r3, 9002947a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90029410:	4a25      	ldr	r2, [pc, #148]	@ (900294a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90029412:	880e      	ldrh	r6, [r1, #0]
90029414:	6815      	ldr	r5, [r2, #0]
90029416:	b29a      	uxth	r2, r3
90029418:	1234      	asrs	r4, r6, #8
9002941a:	43db      	mvns	r3, r3
9002941c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90029420:	f3c5 2707 	ubfx	r7, r5, #8, #8
90029424:	b2db      	uxtb	r3, r3
90029426:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002942a:	fb10 f002 	smulbb	r0, r0, r2
9002942e:	b2ed      	uxtb	r5, r5
90029430:	fb17 f702 	smulbb	r7, r7, r2
90029434:	fb04 0403 	mla	r4, r4, r3, r0
90029438:	10f0      	asrs	r0, r6, #3
9002943a:	fb15 f202 	smulbb	r2, r5, r2
9002943e:	00f6      	lsls	r6, r6, #3
90029440:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029444:	b2a4      	uxth	r4, r4
90029446:	b2f6      	uxtb	r6, r6
90029448:	fb00 7003 	mla	r0, r0, r3, r7
9002944c:	fb06 2303 	mla	r3, r6, r3, r2
90029450:	b280      	uxth	r0, r0
90029452:	b29a      	uxth	r2, r3
90029454:	1c63      	adds	r3, r4, #1
90029456:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002945a:	1c53      	adds	r3, r2, #1
9002945c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029460:	1c42      	adds	r2, r0, #1
90029462:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029466:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002946a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002946e:	0940      	lsrs	r0, r0, #5
90029470:	4323      	orrs	r3, r4
90029472:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029476:	4303      	orrs	r3, r0
90029478:	800b      	strh	r3, [r1, #0]
9002947a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002947e:	2600      	movs	r6, #0
90029480:	e764      	b.n	9002934c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90029482:	2400      	movs	r4, #0
90029484:	4626      	mov	r6, r4
90029486:	e778      	b.n	9002937a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029488:	2400      	movs	r4, #0
9002948a:	e776      	b.n	9002937a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002948c:	463c      	mov	r4, r7
9002948e:	e774      	b.n	9002937a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029490:	2500      	movs	r5, #0
90029492:	e78e      	b.n	900293b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90029494:	2300      	movs	r3, #0
90029496:	461d      	mov	r5, r3
90029498:	e79f      	b.n	900293da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002949a:	4663      	mov	r3, ip
9002949c:	4665      	mov	r5, ip
9002949e:	e79c      	b.n	900293da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900294a0:	2300      	movs	r3, #0
900294a2:	e79a      	b.n	900293da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900294a4:	463b      	mov	r3, r7
900294a6:	e798      	b.n	900293da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900294a8:	240218dc 	.word	0x240218dc

900294ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900294ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900294b0:	b093      	sub	sp, #76	@ 0x4c
900294b2:	461d      	mov	r5, r3
900294b4:	920c      	str	r2, [sp, #48]	@ 0x30
900294b6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900294b8:	9011      	str	r0, [sp, #68]	@ 0x44
900294ba:	9107      	str	r1, [sp, #28]
900294bc:	6850      	ldr	r0, [r2, #4]
900294be:	6812      	ldr	r2, [r2, #0]
900294c0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900294c4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900294c8:	fb00 1303 	mla	r3, r0, r3, r1
900294cc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900294d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900294d2:	689b      	ldr	r3, [r3, #8]
900294d4:	3301      	adds	r3, #1
900294d6:	f023 0301 	bic.w	r3, r3, #1
900294da:	9306      	str	r3, [sp, #24]
900294dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900294de:	681f      	ldr	r7, [r3, #0]
900294e0:	9b07      	ldr	r3, [sp, #28]
900294e2:	2b00      	cmp	r3, #0
900294e4:	dc03      	bgt.n	900294ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900294e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900294e8:	2b00      	cmp	r3, #0
900294ea:	f340 8267 	ble.w	900299bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900294ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900294f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900294f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900294f8:	1e48      	subs	r0, r1, #1
900294fa:	f102 3cff 	add.w	ip, r2, #4294967295
900294fe:	2d00      	cmp	r5, #0
90029500:	f340 80b7 	ble.w	90029672 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90029504:	ea5f 4e24 	movs.w	lr, r4, asr #16
90029508:	ea4f 4326 	mov.w	r3, r6, asr #16
9002950c:	d406      	bmi.n	9002951c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002950e:	4586      	cmp	lr, r0
90029510:	da04      	bge.n	9002951c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029512:	2b00      	cmp	r3, #0
90029514:	db02      	blt.n	9002951c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029516:	4563      	cmp	r3, ip
90029518:	f2c0 80ac 	blt.w	90029674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002951c:	f11e 0e01 	adds.w	lr, lr, #1
90029520:	f100 809f 	bmi.w	90029662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029524:	4571      	cmp	r1, lr
90029526:	f2c0 809c 	blt.w	90029662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002952a:	3301      	adds	r3, #1
9002952c:	f100 8099 	bmi.w	90029662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029530:	429a      	cmp	r2, r3
90029532:	f2c0 8096 	blt.w	90029662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029536:	46c8      	mov	r8, r9
90029538:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9002953c:	9509      	str	r5, [sp, #36]	@ 0x24
9002953e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029540:	2b00      	cmp	r3, #0
90029542:	f340 80b5 	ble.w	900296b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90029546:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002954a:	1430      	asrs	r0, r6, #16
9002954c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029550:	9308      	str	r3, [sp, #32]
90029552:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029554:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029558:	1423      	asrs	r3, r4, #16
9002955a:	f100 813f 	bmi.w	900297dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002955e:	f10c 3bff 	add.w	fp, ip, #4294967295
90029562:	455b      	cmp	r3, fp
90029564:	f280 813a 	bge.w	900297dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029568:	2800      	cmp	r0, #0
9002956a:	f2c0 8137 	blt.w	900297dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002956e:	f10e 3bff 	add.w	fp, lr, #4294967295
90029572:	4558      	cmp	r0, fp
90029574:	f280 8132 	bge.w	900297dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029578:	9a06      	ldr	r2, [sp, #24]
9002957a:	fb00 3302 	mla	r3, r0, r2, r3
9002957e:	0858      	lsrs	r0, r3, #1
90029580:	07da      	lsls	r2, r3, #31
90029582:	9a08      	ldr	r2, [sp, #32]
90029584:	f817 c000 	ldrb.w	ip, [r7, r0]
90029588:	bf54      	ite	pl
9002958a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002958e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029592:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029596:	fa5f fc8c 	uxtb.w	ip, ip
9002959a:	2a00      	cmp	r2, #0
9002959c:	f000 80cc 	beq.w	90029738 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900295a0:	1c58      	adds	r0, r3, #1
900295a2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900295a6:	07c0      	lsls	r0, r0, #31
900295a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
900295ac:	bf54      	ite	pl
900295ae:	f00e 0e0f 	andpl.w	lr, lr, #15
900295b2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900295b6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900295ba:	fa5f fe8e 	uxtb.w	lr, lr
900295be:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
900295c2:	b1b9      	cbz	r1, 900295f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900295c4:	4453      	add	r3, sl
900295c6:	0858      	lsrs	r0, r3, #1
900295c8:	07da      	lsls	r2, r3, #31
900295ca:	5c38      	ldrb	r0, [r7, r0]
900295cc:	bf54      	ite	pl
900295ce:	f000 000f 	andpl.w	r0, r0, #15
900295d2:	1100      	asrmi	r0, r0, #4
900295d4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900295d8:	b2c0      	uxtb	r0, r0
900295da:	900a      	str	r0, [sp, #40]	@ 0x28
900295dc:	1c58      	adds	r0, r3, #1
900295de:	0843      	lsrs	r3, r0, #1
900295e0:	07c2      	lsls	r2, r0, #31
900295e2:	5cfb      	ldrb	r3, [r7, r3]
900295e4:	bf54      	ite	pl
900295e6:	f003 030f 	andpl.w	r3, r3, #15
900295ea:	111b      	asrmi	r3, r3, #4
900295ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900295f0:	b2db      	uxtb	r3, r3
900295f2:	930e      	str	r3, [sp, #56]	@ 0x38
900295f4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900295f8:	b289      	uxth	r1, r1
900295fa:	fb02 f301 	mul.w	r3, r2, r1
900295fe:	0112      	lsls	r2, r2, #4
90029600:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90029604:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90029608:	1ad2      	subs	r2, r2, r3
9002960a:	b289      	uxth	r1, r1
9002960c:	b292      	uxth	r2, r2
9002960e:	1a40      	subs	r0, r0, r1
90029610:	fa1f fe80 	uxth.w	lr, r0
90029614:	980d      	ldr	r0, [sp, #52]	@ 0x34
90029616:	4342      	muls	r2, r0
90029618:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002961c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002961e:	fb01 c102 	mla	r1, r1, r2, ip
90029622:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90029624:	fb03 1302 	mla	r3, r3, r2, r1
90029628:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002962c:	2bff      	cmp	r3, #255	@ 0xff
9002962e:	f040 8094 	bne.w	9002975a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90029632:	4bbf      	ldr	r3, [pc, #764]	@ (90029930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90029634:	681a      	ldr	r2, [r3, #0]
90029636:	4bbf      	ldr	r3, [pc, #764]	@ (90029934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90029638:	0951      	lsrs	r1, r2, #5
9002963a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002963e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029642:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90029646:	430b      	orrs	r3, r1
90029648:	4313      	orrs	r3, r2
9002964a:	f8a8 3000 	strh.w	r3, [r8]
9002964e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90029650:	f108 0802 	add.w	r8, r8, #2
90029654:	441c      	add	r4, r3
90029656:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029658:	441e      	add	r6, r3
9002965a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002965c:	3b01      	subs	r3, #1
9002965e:	9309      	str	r3, [sp, #36]	@ 0x24
90029660:	e76d      	b.n	9002953e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029662:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90029664:	3d01      	subs	r5, #1
90029666:	f109 0902 	add.w	r9, r9, #2
9002966a:	441c      	add	r4, r3
9002966c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002966e:	441e      	add	r6, r3
90029670:	e745      	b.n	900294fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90029672:	d021      	beq.n	900296b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90029674:	1e6b      	subs	r3, r5, #1
90029676:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90029678:	fb00 4003 	mla	r0, r0, r3, r4
9002967c:	1400      	asrs	r0, r0, #16
9002967e:	f53f af5a 	bmi.w	90029536 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029682:	3901      	subs	r1, #1
90029684:	4288      	cmp	r0, r1
90029686:	f6bf af56 	bge.w	90029536 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002968a:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002968c:	fb01 6303 	mla	r3, r1, r3, r6
90029690:	141b      	asrs	r3, r3, #16
90029692:	f53f af50 	bmi.w	90029536 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029696:	3a01      	subs	r2, #1
90029698:	4293      	cmp	r3, r2
9002969a:	f6bf af4c 	bge.w	90029536 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002969e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900296a2:	46a8      	mov	r8, r5
900296a4:	46ce      	mov	lr, r9
900296a6:	9308      	str	r3, [sp, #32]
900296a8:	f1b8 0f00 	cmp.w	r8, #0
900296ac:	f300 80b6 	bgt.w	9002981c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900296b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900296b4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900296b8:	9b07      	ldr	r3, [sp, #28]
900296ba:	2b00      	cmp	r3, #0
900296bc:	f340 817e 	ble.w	900299bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900296c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900296c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900296c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900296ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900296ce:	eef0 6a62 	vmov.f32	s13, s5
900296d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900296d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900296da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900296de:	ee16 4a90 	vmov	r4, s13
900296e2:	eef0 6a43 	vmov.f32	s13, s6
900296e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900296ea:	ee16 6a90 	vmov	r6, s13
900296ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900296f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900296f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900296fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900296fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90029702:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029706:	ee12 2a90 	vmov	r2, s5
9002970a:	eef0 2a47 	vmov.f32	s5, s14
9002970e:	fb92 f3f3 	sdiv	r3, r2, r3
90029712:	ee13 2a10 	vmov	r2, s6
90029716:	931f      	str	r3, [sp, #124]	@ 0x7c
90029718:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002971a:	eeb0 3a67 	vmov.f32	s6, s15
9002971e:	fb92 f3f3 	sdiv	r3, r2, r3
90029722:	9320      	str	r3, [sp, #128]	@ 0x80
90029724:	9b07      	ldr	r3, [sp, #28]
90029726:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90029728:	3b01      	subs	r3, #1
9002972a:	9307      	str	r3, [sp, #28]
9002972c:	bf08      	it	eq
9002972e:	4615      	moveq	r5, r2
90029730:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90029732:	bf18      	it	ne
90029734:	461d      	movne	r5, r3
90029736:	e6d3      	b.n	900294e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90029738:	2900      	cmp	r1, #0
9002973a:	f43f af5b 	beq.w	900295f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002973e:	eb0a 0003 	add.w	r0, sl, r3
90029742:	0843      	lsrs	r3, r0, #1
90029744:	07c0      	lsls	r0, r0, #31
90029746:	5cfb      	ldrb	r3, [r7, r3]
90029748:	bf54      	ite	pl
9002974a:	f003 030f 	andpl.w	r3, r3, #15
9002974e:	111b      	asrmi	r3, r3, #4
90029750:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029754:	b2db      	uxtb	r3, r3
90029756:	930a      	str	r3, [sp, #40]	@ 0x28
90029758:	e74c      	b.n	900295f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002975a:	2b00      	cmp	r3, #0
9002975c:	f43f af77 	beq.w	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029760:	4a73      	ldr	r2, [pc, #460]	@ (90029930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90029762:	fa1f fe83 	uxth.w	lr, r3
90029766:	f8b8 c000 	ldrh.w	ip, [r8]
9002976a:	43db      	mvns	r3, r3
9002976c:	6810      	ldr	r0, [r2, #0]
9002976e:	ea4f 212c 	mov.w	r1, ip, asr #8
90029772:	f3c0 4207 	ubfx	r2, r0, #16, #8
90029776:	b2db      	uxtb	r3, r3
90029778:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002977c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90029780:	fb12 f20e 	smulbb	r2, r2, lr
90029784:	b2c0      	uxtb	r0, r0
90029786:	fb1b fb0e 	smulbb	fp, fp, lr
9002978a:	fb01 2103 	mla	r1, r1, r3, r2
9002978e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90029792:	fb10 fe0e 	smulbb	lr, r0, lr
90029796:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002979a:	b289      	uxth	r1, r1
9002979c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900297a0:	fa5f fc8c 	uxtb.w	ip, ip
900297a4:	fb02 b203 	mla	r2, r2, r3, fp
900297a8:	1c48      	adds	r0, r1, #1
900297aa:	fb0c e303 	mla	r3, ip, r3, lr
900297ae:	b292      	uxth	r2, r2
900297b0:	b29b      	uxth	r3, r3
900297b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900297b6:	f102 0b01 	add.w	fp, r2, #1
900297ba:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
900297be:	1c59      	adds	r1, r3, #1
900297c0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900297c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900297c8:	0952      	lsrs	r2, r2, #5
900297ca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900297ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900297d2:	4301      	orrs	r1, r0
900297d4:	4311      	orrs	r1, r2
900297d6:	f8a8 1000 	strh.w	r1, [r8]
900297da:	e738      	b.n	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900297dc:	f113 0b01 	adds.w	fp, r3, #1
900297e0:	f53f af35 	bmi.w	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900297e4:	45dc      	cmp	ip, fp
900297e6:	f6ff af32 	blt.w	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900297ea:	f110 0b01 	adds.w	fp, r0, #1
900297ee:	f53f af2e 	bmi.w	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900297f2:	45de      	cmp	lr, fp
900297f4:	f6ff af2b 	blt.w	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900297f8:	9302      	str	r3, [sp, #8]
900297fa:	fa0f f38e 	sxth.w	r3, lr
900297fe:	9a08      	ldr	r2, [sp, #32]
90029800:	9301      	str	r3, [sp, #4]
90029802:	fa0f f38c 	sxth.w	r3, ip
90029806:	9105      	str	r1, [sp, #20]
90029808:	4641      	mov	r1, r8
9002980a:	9300      	str	r3, [sp, #0]
9002980c:	4653      	mov	r3, sl
9002980e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90029812:	463a      	mov	r2, r7
90029814:	9811      	ldr	r0, [sp, #68]	@ 0x44
90029816:	f7ff fd73 	bl	90029300 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002981a:	e718      	b.n	9002964e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002981c:	1422      	asrs	r2, r4, #16
9002981e:	9906      	ldr	r1, [sp, #24]
90029820:	1433      	asrs	r3, r6, #16
90029822:	f3c4 3003 	ubfx	r0, r4, #12, #4
90029826:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002982a:	fb01 2303 	mla	r3, r1, r3, r2
9002982e:	085a      	lsrs	r2, r3, #1
90029830:	07d9      	lsls	r1, r3, #31
90029832:	5cba      	ldrb	r2, [r7, r2]
90029834:	bf54      	ite	pl
90029836:	f002 020f 	andpl.w	r2, r2, #15
9002983a:	1112      	asrmi	r2, r2, #4
9002983c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90029840:	b2d2      	uxtb	r2, r2
90029842:	2800      	cmp	r0, #0
90029844:	d063      	beq.n	9002990e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90029846:	f103 0a01 	add.w	sl, r3, #1
9002984a:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002984e:	f01a 0f01 	tst.w	sl, #1
90029852:	5c79      	ldrb	r1, [r7, r1]
90029854:	bf0c      	ite	eq
90029856:	f001 010f 	andeq.w	r1, r1, #15
9002985a:	1109      	asrne	r1, r1, #4
9002985c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029860:	b2c9      	uxtb	r1, r1
90029862:	910f      	str	r1, [sp, #60]	@ 0x3c
90029864:	f1bc 0f00 	cmp.w	ip, #0
90029868:	d01a      	beq.n	900298a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002986a:	9908      	ldr	r1, [sp, #32]
9002986c:	440b      	add	r3, r1
9002986e:	0859      	lsrs	r1, r3, #1
90029870:	f013 0f01 	tst.w	r3, #1
90029874:	f103 0301 	add.w	r3, r3, #1
90029878:	5c79      	ldrb	r1, [r7, r1]
9002987a:	bf0c      	ite	eq
9002987c:	f001 010f 	andeq.w	r1, r1, #15
90029880:	1109      	asrne	r1, r1, #4
90029882:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029886:	b2c9      	uxtb	r1, r1
90029888:	910b      	str	r1, [sp, #44]	@ 0x2c
9002988a:	0859      	lsrs	r1, r3, #1
9002988c:	07db      	lsls	r3, r3, #31
9002988e:	5c79      	ldrb	r1, [r7, r1]
90029890:	bf54      	ite	pl
90029892:	f001 010f 	andpl.w	r1, r1, #15
90029896:	1109      	asrmi	r1, r1, #4
90029898:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002989c:	b2c9      	uxtb	r1, r1
9002989e:	9110      	str	r1, [sp, #64]	@ 0x40
900298a0:	b280      	uxth	r0, r0
900298a2:	fa1f fc8c 	uxth.w	ip, ip
900298a6:	fb00 f30c 	mul.w	r3, r0, ip
900298aa:	0100      	lsls	r0, r0, #4
900298ac:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900298b0:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
900298b4:	1ac0      	subs	r0, r0, r3
900298b6:	fa1f fc8c 	uxth.w	ip, ip
900298ba:	b280      	uxth	r0, r0
900298bc:	eba1 010c 	sub.w	r1, r1, ip
900298c0:	fa1f fa81 	uxth.w	sl, r1
900298c4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900298c6:	4348      	muls	r0, r1
900298c8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900298ca:	fb02 020a 	mla	r2, r2, sl, r0
900298ce:	fb0c 2c01 	mla	ip, ip, r1, r2
900298d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900298d4:	fb03 c302 	mla	r3, r3, r2, ip
900298d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900298dc:	2bff      	cmp	r3, #255	@ 0xff
900298de:	d12b      	bne.n	90029938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900298e0:	4b13      	ldr	r3, [pc, #76]	@ (90029930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900298e2:	681a      	ldr	r2, [r3, #0]
900298e4:	4b13      	ldr	r3, [pc, #76]	@ (90029934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900298e6:	0951      	lsrs	r1, r2, #5
900298e8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900298ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900298f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900298f4:	430b      	orrs	r3, r1
900298f6:	4313      	orrs	r3, r2
900298f8:	f8ae 3000 	strh.w	r3, [lr]
900298fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900298fe:	f10e 0e02 	add.w	lr, lr, #2
90029902:	f108 38ff 	add.w	r8, r8, #4294967295
90029906:	441c      	add	r4, r3
90029908:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002990a:	441e      	add	r6, r3
9002990c:	e6cc      	b.n	900296a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002990e:	f1bc 0f00 	cmp.w	ip, #0
90029912:	d0c5      	beq.n	900298a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029914:	9908      	ldr	r1, [sp, #32]
90029916:	440b      	add	r3, r1
90029918:	0859      	lsrs	r1, r3, #1
9002991a:	07db      	lsls	r3, r3, #31
9002991c:	5c79      	ldrb	r1, [r7, r1]
9002991e:	bf54      	ite	pl
90029920:	f001 010f 	andpl.w	r1, r1, #15
90029924:	1109      	asrmi	r1, r1, #4
90029926:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002992a:	b2c9      	uxtb	r1, r1
9002992c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002992e:	e7b7      	b.n	900298a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029930:	240218dc 	.word	0x240218dc
90029934:	fffff800 	.word	0xfffff800
90029938:	2b00      	cmp	r3, #0
9002993a:	d0df      	beq.n	900298fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002993c:	4a21      	ldr	r2, [pc, #132]	@ (900299c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002993e:	fa1f fa83 	uxth.w	sl, r3
90029942:	f8be c000 	ldrh.w	ip, [lr]
90029946:	43db      	mvns	r3, r3
90029948:	6810      	ldr	r0, [r2, #0]
9002994a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002994e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90029952:	b2db      	uxtb	r3, r3
90029954:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90029958:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002995c:	fb12 f20a 	smulbb	r2, r2, sl
90029960:	b2c0      	uxtb	r0, r0
90029962:	fb1b fb0a 	smulbb	fp, fp, sl
90029966:	fb01 2103 	mla	r1, r1, r3, r2
9002996a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002996e:	fb10 f00a 	smulbb	r0, r0, sl
90029972:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90029976:	b289      	uxth	r1, r1
90029978:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002997c:	fa5f fc8c 	uxtb.w	ip, ip
90029980:	fb02 b203 	mla	r2, r2, r3, fp
90029984:	fb0c 0003 	mla	r0, ip, r3, r0
90029988:	1c4b      	adds	r3, r1, #1
9002998a:	b292      	uxth	r2, r2
9002998c:	b280      	uxth	r0, r0
9002998e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90029992:	f100 0b01 	add.w	fp, r0, #1
90029996:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002999a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002999e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900299a2:	ea4b 0101 	orr.w	r1, fp, r1
900299a6:	f102 0b01 	add.w	fp, r2, #1
900299aa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900299ae:	0952      	lsrs	r2, r2, #5
900299b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900299b4:	4311      	orrs	r1, r2
900299b6:	f8ae 1000 	strh.w	r1, [lr]
900299ba:	e79f      	b.n	900298fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900299bc:	b013      	add	sp, #76	@ 0x4c
900299be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900299c2:	bf00      	nop
900299c4:	240218dc 	.word	0x240218dc

900299c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900299c8:	b570      	push	{r4, r5, r6, lr}
900299ca:	1208      	asrs	r0, r1, #8
900299cc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
900299d0:	b29e      	uxth	r6, r3
900299d2:	1213      	asrs	r3, r2, #8
900299d4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900299d8:	10cc      	asrs	r4, r1, #3
900299da:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900299de:	00c9      	lsls	r1, r1, #3
900299e0:	fb10 f006 	smulbb	r0, r0, r6
900299e4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900299e8:	fb13 f305 	smulbb	r3, r3, r5
900299ec:	fb14 f406 	smulbb	r4, r4, r6
900299f0:	4418      	add	r0, r3
900299f2:	10d3      	asrs	r3, r2, #3
900299f4:	00d2      	lsls	r2, r2, #3
900299f6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900299fa:	b280      	uxth	r0, r0
900299fc:	b2d2      	uxtb	r2, r2
900299fe:	fb13 f305 	smulbb	r3, r3, r5
90029a02:	fb12 f205 	smulbb	r2, r2, r5
90029a06:	441c      	add	r4, r3
90029a08:	b2cb      	uxtb	r3, r1
90029a0a:	fb13 f306 	smulbb	r3, r3, r6
90029a0e:	b2a4      	uxth	r4, r4
90029a10:	4413      	add	r3, r2
90029a12:	1c42      	adds	r2, r0, #1
90029a14:	b29b      	uxth	r3, r3
90029a16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029a1a:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90029a1e:	1c58      	adds	r0, r3, #1
90029a20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90029a24:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029a28:	4310      	orrs	r0, r2
90029a2a:	1c62      	adds	r2, r4, #1
90029a2c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90029a30:	0964      	lsrs	r4, r4, #5
90029a32:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90029a36:	4320      	orrs	r0, r4
90029a38:	bd70      	pop	{r4, r5, r6, pc}
	...

90029a3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90029a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029a40:	b08f      	sub	sp, #60	@ 0x3c
90029a42:	461c      	mov	r4, r3
90029a44:	460d      	mov	r5, r1
90029a46:	4616      	mov	r6, r2
90029a48:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90029a4c:	9004      	str	r0, [sp, #16]
90029a4e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90029a50:	2f00      	cmp	r7, #0
90029a52:	f000 80f6 	beq.w	90029c42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90029a56:	6820      	ldr	r0, [r4, #0]
90029a58:	aa0a      	add	r2, sp, #40	@ 0x28
90029a5a:	6861      	ldr	r1, [r4, #4]
90029a5c:	f04f 0802 	mov.w	r8, #2
90029a60:	3604      	adds	r6, #4
90029a62:	c203      	stmia	r2!, {r0, r1}
90029a64:	6818      	ldr	r0, [r3, #0]
90029a66:	aa0c      	add	r2, sp, #48	@ 0x30
90029a68:	6859      	ldr	r1, [r3, #4]
90029a6a:	c203      	stmia	r2!, {r0, r1}
90029a6c:	a80a      	add	r0, sp, #40	@ 0x28
90029a6e:	f7ee f9c5 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029a72:	4621      	mov	r1, r4
90029a74:	a80c      	add	r0, sp, #48	@ 0x30
90029a76:	f7ee fa05 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029a7a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90029a7e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90029a82:	f002 0301 	and.w	r3, r2, #1
90029a86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90029a8a:	9306      	str	r3, [sp, #24]
90029a8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90029a90:	f003 0101 	and.w	r1, r3, #1
90029a94:	9105      	str	r1, [sp, #20]
90029a96:	9805      	ldr	r0, [sp, #20]
90029a98:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90029a9c:	4403      	add	r3, r0
90029a9e:	fb01 2303 	mla	r3, r1, r3, r2
90029aa2:	fb93 f3f8 	sdiv	r3, r3, r8
90029aa6:	441d      	add	r5, r3
90029aa8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90029aac:	441a      	add	r2, r3
90029aae:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90029ab2:	4419      	add	r1, r3
90029ab4:	4b64      	ldr	r3, [pc, #400]	@ (90029c48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90029ab6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90029aba:	6818      	ldr	r0, [r3, #0]
90029abc:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90029ac0:	6803      	ldr	r3, [r0, #0]
90029ac2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029ac4:	4798      	blx	r3
90029ac6:	4a61      	ldr	r2, [pc, #388]	@ (90029c4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90029ac8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90029acc:	2fff      	cmp	r7, #255	@ 0xff
90029ace:	8813      	ldrh	r3, [r2, #0]
90029ad0:	4611      	mov	r1, r2
90029ad2:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90029ad6:	fb03 fb0b 	mul.w	fp, r3, fp
90029ada:	fb03 a404 	mla	r4, r3, r4, sl
90029ade:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029ae2:	d06b      	beq.n	90029bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90029ae4:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90029ae8:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90029aec:	9303      	str	r3, [sp, #12]
90029aee:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90029af2:	e9cd 3207 	strd	r3, r2, [sp, #28]
90029af6:	9b07      	ldr	r3, [sp, #28]
90029af8:	42a3      	cmp	r3, r4
90029afa:	f240 809d 	bls.w	90029c38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90029afe:	9b06      	ldr	r3, [sp, #24]
90029b00:	2b00      	cmp	r3, #0
90029b02:	d039      	beq.n	90029b78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90029b04:	782b      	ldrb	r3, [r5, #0]
90029b06:	f105 0801 	add.w	r8, r5, #1
90029b0a:	f109 3bff 	add.w	fp, r9, #4294967295
90029b0e:	8822      	ldrh	r2, [r4, #0]
90029b10:	f003 030f 	and.w	r3, r3, #15
90029b14:	9804      	ldr	r0, [sp, #16]
90029b16:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90029b1a:	9b03      	ldr	r3, [sp, #12]
90029b1c:	9300      	str	r3, [sp, #0]
90029b1e:	463b      	mov	r3, r7
90029b20:	f7ff ff52 	bl	900299c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90029b24:	f824 0b02 	strh.w	r0, [r4], #2
90029b28:	f1bb 0f01 	cmp.w	fp, #1
90029b2c:	46a2      	mov	sl, r4
90029b2e:	f104 0404 	add.w	r4, r4, #4
90029b32:	dd24      	ble.n	90029b7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90029b34:	f898 3000 	ldrb.w	r3, [r8]
90029b38:	f1ab 0b02 	sub.w	fp, fp, #2
90029b3c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90029b40:	091b      	lsrs	r3, r3, #4
90029b42:	9804      	ldr	r0, [sp, #16]
90029b44:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90029b48:	9b03      	ldr	r3, [sp, #12]
90029b4a:	9300      	str	r3, [sp, #0]
90029b4c:	463b      	mov	r3, r7
90029b4e:	f7ff ff3b 	bl	900299c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90029b52:	f824 0c04 	strh.w	r0, [r4, #-4]
90029b56:	f818 3b01 	ldrb.w	r3, [r8], #1
90029b5a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90029b5e:	f003 030f 	and.w	r3, r3, #15
90029b62:	9804      	ldr	r0, [sp, #16]
90029b64:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90029b68:	9b03      	ldr	r3, [sp, #12]
90029b6a:	9300      	str	r3, [sp, #0]
90029b6c:	463b      	mov	r3, r7
90029b6e:	f7ff ff2b 	bl	900299c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90029b72:	f824 0c02 	strh.w	r0, [r4, #-2]
90029b76:	e7d7      	b.n	90029b28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90029b78:	46a8      	mov	r8, r5
90029b7a:	46cb      	mov	fp, r9
90029b7c:	e7d4      	b.n	90029b28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90029b7e:	d10e      	bne.n	90029b9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90029b80:	f898 3000 	ldrb.w	r3, [r8]
90029b84:	f8ba 2000 	ldrh.w	r2, [sl]
90029b88:	091b      	lsrs	r3, r3, #4
90029b8a:	9804      	ldr	r0, [sp, #16]
90029b8c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90029b90:	9b03      	ldr	r3, [sp, #12]
90029b92:	9300      	str	r3, [sp, #0]
90029b94:	463b      	mov	r3, r7
90029b96:	f7ff ff17 	bl	900299c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90029b9a:	f82a 0b02 	strh.w	r0, [sl], #2
90029b9e:	9b08      	ldr	r3, [sp, #32]
90029ba0:	9a05      	ldr	r2, [sp, #20]
90029ba2:	881c      	ldrh	r4, [r3, #0]
90029ba4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90029ba8:	eba4 0409 	sub.w	r4, r4, r9
90029bac:	4413      	add	r3, r2
90029bae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90029bb0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90029bb4:	fb93 f3f2 	sdiv	r3, r3, r2
90029bb8:	441d      	add	r5, r3
90029bba:	e79c      	b.n	90029af6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90029bbc:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90029bc0:	45a3      	cmp	fp, r4
90029bc2:	d939      	bls.n	90029c38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90029bc4:	9b06      	ldr	r3, [sp, #24]
90029bc6:	b1fb      	cbz	r3, 90029c08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90029bc8:	782b      	ldrb	r3, [r5, #0]
90029bca:	1c6a      	adds	r2, r5, #1
90029bcc:	f109 30ff 	add.w	r0, r9, #4294967295
90029bd0:	3402      	adds	r4, #2
90029bd2:	f003 030f 	and.w	r3, r3, #15
90029bd6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90029bda:	f824 3c02 	strh.w	r3, [r4, #-2]
90029bde:	2801      	cmp	r0, #1
90029be0:	4623      	mov	r3, r4
90029be2:	f104 0404 	add.w	r4, r4, #4
90029be6:	dd12      	ble.n	90029c0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90029be8:	7813      	ldrb	r3, [r2, #0]
90029bea:	3802      	subs	r0, #2
90029bec:	091b      	lsrs	r3, r3, #4
90029bee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90029bf2:	f824 3c04 	strh.w	r3, [r4, #-4]
90029bf6:	f812 3b01 	ldrb.w	r3, [r2], #1
90029bfa:	f003 030f 	and.w	r3, r3, #15
90029bfe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90029c02:	f824 3c02 	strh.w	r3, [r4, #-2]
90029c06:	e7ea      	b.n	90029bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90029c08:	462a      	mov	r2, r5
90029c0a:	4648      	mov	r0, r9
90029c0c:	e7e7      	b.n	90029bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90029c0e:	d106      	bne.n	90029c1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90029c10:	7812      	ldrb	r2, [r2, #0]
90029c12:	3302      	adds	r3, #2
90029c14:	0912      	lsrs	r2, r2, #4
90029c16:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90029c1a:	f823 2c02 	strh.w	r2, [r3, #-2]
90029c1e:	880c      	ldrh	r4, [r1, #0]
90029c20:	9a05      	ldr	r2, [sp, #20]
90029c22:	eba4 0409 	sub.w	r4, r4, r9
90029c26:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90029c2a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90029c2e:	4413      	add	r3, r2
90029c30:	fb93 f3f8 	sdiv	r3, r3, r8
90029c34:	441d      	add	r5, r3
90029c36:	e7c3      	b.n	90029bc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90029c38:	4b03      	ldr	r3, [pc, #12]	@ (90029c48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90029c3a:	6818      	ldr	r0, [r3, #0]
90029c3c:	6803      	ldr	r3, [r0, #0]
90029c3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90029c40:	4798      	blx	r3
90029c42:	b00f      	add	sp, #60	@ 0x3c
90029c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029c48:	240218cc 	.word	0x240218cc
90029c4c:	240218c6 	.word	0x240218c6

90029c50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90029c50:	b5f0      	push	{r4, r5, r6, r7, lr}
90029c52:	f89d 5014 	ldrb.w	r5, [sp, #20]
90029c56:	0a0f      	lsrs	r7, r1, #8
90029c58:	2dff      	cmp	r5, #255	@ 0xff
90029c5a:	d10c      	bne.n	90029c76 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90029c5c:	2bff      	cmp	r3, #255	@ 0xff
90029c5e:	d10a      	bne.n	90029c76 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90029c60:	0948      	lsrs	r0, r1, #5
90029c62:	4b25      	ldr	r3, [pc, #148]	@ (90029cf8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90029c64:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90029c68:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029c6c:	403b      	ands	r3, r7
90029c6e:	4318      	orrs	r0, r3
90029c70:	4308      	orrs	r0, r1
90029c72:	b280      	uxth	r0, r0
90029c74:	bdf0      	pop	{r4, r5, r6, r7, pc}
90029c76:	fb15 f503 	smulbb	r5, r5, r3
90029c7a:	1214      	asrs	r4, r2, #8
90029c7c:	10d6      	asrs	r6, r2, #3
90029c7e:	b2ab      	uxth	r3, r5
90029c80:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029c84:	00d0      	lsls	r0, r2, #3
90029c86:	f3c1 4207 	ubfx	r2, r1, #16, #8
90029c8a:	1c5d      	adds	r5, r3, #1
90029c8c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90029c90:	b2c0      	uxtb	r0, r0
90029c92:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90029c96:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90029c9a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90029c9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90029ca2:	fa1f fc85 	uxth.w	ip, r5
90029ca6:	43ed      	mvns	r5, r5
90029ca8:	fb12 f20c 	smulbb	r2, r2, ip
90029cac:	b2eb      	uxtb	r3, r5
90029cae:	b2fd      	uxtb	r5, r7
90029cb0:	fb04 2403 	mla	r4, r4, r3, r2
90029cb4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90029cb8:	fb15 f50c 	smulbb	r5, r5, ip
90029cbc:	b2c8      	uxtb	r0, r1
90029cbe:	b2a4      	uxth	r4, r4
90029cc0:	fb10 f00c 	smulbb	r0, r0, ip
90029cc4:	fb06 5503 	mla	r5, r6, r3, r5
90029cc8:	fb02 0003 	mla	r0, r2, r3, r0
90029ccc:	b2ad      	uxth	r5, r5
90029cce:	b283      	uxth	r3, r0
90029cd0:	1c60      	adds	r0, r4, #1
90029cd2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90029cd6:	1c58      	adds	r0, r3, #1
90029cd8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90029cdc:	1c6b      	adds	r3, r5, #1
90029cde:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029ce2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90029ce6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029cea:	096d      	lsrs	r5, r5, #5
90029cec:	4320      	orrs	r0, r4
90029cee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90029cf2:	4328      	orrs	r0, r5
90029cf4:	e7be      	b.n	90029c74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90029cf6:	bf00      	nop
90029cf8:	00fff800 	.word	0x00fff800

90029cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90029cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029d00:	461c      	mov	r4, r3
90029d02:	b08d      	sub	sp, #52	@ 0x34
90029d04:	460d      	mov	r5, r1
90029d06:	4616      	mov	r6, r2
90029d08:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90029d0a:	4680      	mov	r8, r0
90029d0c:	6861      	ldr	r1, [r4, #4]
90029d0e:	aa08      	add	r2, sp, #32
90029d10:	6820      	ldr	r0, [r4, #0]
90029d12:	f04f 0a02 	mov.w	sl, #2
90029d16:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90029d1a:	3604      	adds	r6, #4
90029d1c:	c203      	stmia	r2!, {r0, r1}
90029d1e:	6818      	ldr	r0, [r3, #0]
90029d20:	aa0a      	add	r2, sp, #40	@ 0x28
90029d22:	6859      	ldr	r1, [r3, #4]
90029d24:	c203      	stmia	r2!, {r0, r1}
90029d26:	a808      	add	r0, sp, #32
90029d28:	f7ee f868 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029d2c:	4621      	mov	r1, r4
90029d2e:	a80a      	add	r0, sp, #40	@ 0x28
90029d30:	f7ee f8a8 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029d34:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90029d38:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90029d3c:	f002 0301 	and.w	r3, r2, #1
90029d40:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90029d44:	9303      	str	r3, [sp, #12]
90029d46:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90029d4a:	f003 0101 	and.w	r1, r3, #1
90029d4e:	9102      	str	r1, [sp, #8]
90029d50:	9802      	ldr	r0, [sp, #8]
90029d52:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90029d56:	4403      	add	r3, r0
90029d58:	fb01 2303 	mla	r3, r1, r3, r2
90029d5c:	fb93 f3fa 	sdiv	r3, r3, sl
90029d60:	441d      	add	r5, r3
90029d62:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90029d66:	441a      	add	r2, r3
90029d68:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90029d6c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90029d70:	4419      	add	r1, r3
90029d72:	4a3e      	ldr	r2, [pc, #248]	@ (90029e6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90029d74:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90029d78:	6810      	ldr	r0, [r2, #0]
90029d7a:	9205      	str	r2, [sp, #20]
90029d7c:	6803      	ldr	r3, [r0, #0]
90029d7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029d80:	4798      	blx	r3
90029d82:	4b3b      	ldr	r3, [pc, #236]	@ (90029e70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90029d84:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90029d88:	8819      	ldrh	r1, [r3, #0]
90029d8a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90029d8e:	434f      	muls	r7, r1
90029d90:	fb01 c404 	mla	r4, r1, r4, ip
90029d94:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029d98:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90029d9c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90029da0:	9204      	str	r2, [sp, #16]
90029da2:	9b04      	ldr	r3, [sp, #16]
90029da4:	429c      	cmp	r4, r3
90029da6:	d258      	bcs.n	90029e5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90029da8:	9b03      	ldr	r3, [sp, #12]
90029daa:	2b00      	cmp	r3, #0
90029dac:	d034      	beq.n	90029e18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90029dae:	782b      	ldrb	r3, [r5, #0]
90029db0:	1c6f      	adds	r7, r5, #1
90029db2:	f003 030f 	and.w	r3, r3, #15
90029db6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029dba:	0e0b      	lsrs	r3, r1, #24
90029dbc:	d006      	beq.n	90029dcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90029dbe:	8822      	ldrh	r2, [r4, #0]
90029dc0:	4640      	mov	r0, r8
90029dc2:	9300      	str	r3, [sp, #0]
90029dc4:	464b      	mov	r3, r9
90029dc6:	f7ff ff43 	bl	90029c50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90029dca:	8020      	strh	r0, [r4, #0]
90029dcc:	3402      	adds	r4, #2
90029dce:	f10b 3aff 	add.w	sl, fp, #4294967295
90029dd2:	f1ba 0f01 	cmp.w	sl, #1
90029dd6:	dd22      	ble.n	90029e1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90029dd8:	783b      	ldrb	r3, [r7, #0]
90029dda:	091b      	lsrs	r3, r3, #4
90029ddc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029de0:	0e0b      	lsrs	r3, r1, #24
90029de2:	d006      	beq.n	90029df2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90029de4:	8822      	ldrh	r2, [r4, #0]
90029de6:	4640      	mov	r0, r8
90029de8:	9300      	str	r3, [sp, #0]
90029dea:	464b      	mov	r3, r9
90029dec:	f7ff ff30 	bl	90029c50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90029df0:	8020      	strh	r0, [r4, #0]
90029df2:	f817 3b01 	ldrb.w	r3, [r7], #1
90029df6:	f003 030f 	and.w	r3, r3, #15
90029dfa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029dfe:	0e0b      	lsrs	r3, r1, #24
90029e00:	d006      	beq.n	90029e10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90029e02:	8862      	ldrh	r2, [r4, #2]
90029e04:	4640      	mov	r0, r8
90029e06:	9300      	str	r3, [sp, #0]
90029e08:	464b      	mov	r3, r9
90029e0a:	f7ff ff21 	bl	90029c50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90029e0e:	8060      	strh	r0, [r4, #2]
90029e10:	3404      	adds	r4, #4
90029e12:	f1aa 0a02 	sub.w	sl, sl, #2
90029e16:	e7dc      	b.n	90029dd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90029e18:	462f      	mov	r7, r5
90029e1a:	46da      	mov	sl, fp
90029e1c:	e7d9      	b.n	90029dd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90029e1e:	d10d      	bne.n	90029e3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90029e20:	783b      	ldrb	r3, [r7, #0]
90029e22:	091b      	lsrs	r3, r3, #4
90029e24:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90029e28:	0e0b      	lsrs	r3, r1, #24
90029e2a:	d006      	beq.n	90029e3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90029e2c:	8822      	ldrh	r2, [r4, #0]
90029e2e:	4640      	mov	r0, r8
90029e30:	9300      	str	r3, [sp, #0]
90029e32:	464b      	mov	r3, r9
90029e34:	f7ff ff0c 	bl	90029c50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90029e38:	8020      	strh	r0, [r4, #0]
90029e3a:	3402      	adds	r4, #2
90029e3c:	9b06      	ldr	r3, [sp, #24]
90029e3e:	9a02      	ldr	r2, [sp, #8]
90029e40:	881b      	ldrh	r3, [r3, #0]
90029e42:	eba3 030b 	sub.w	r3, r3, fp
90029e46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90029e4a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90029e4e:	4413      	add	r3, r2
90029e50:	9a07      	ldr	r2, [sp, #28]
90029e52:	fb93 f3f2 	sdiv	r3, r3, r2
90029e56:	441d      	add	r5, r3
90029e58:	e7a3      	b.n	90029da2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90029e5a:	9b05      	ldr	r3, [sp, #20]
90029e5c:	6818      	ldr	r0, [r3, #0]
90029e5e:	6803      	ldr	r3, [r0, #0]
90029e60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90029e62:	4798      	blx	r3
90029e64:	b00d      	add	sp, #52	@ 0x34
90029e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029e6a:	bf00      	nop
90029e6c:	240218cc 	.word	0x240218cc
90029e70:	240218c6 	.word	0x240218c6

90029e74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90029e74:	b570      	push	{r4, r5, r6, lr}
90029e76:	1214      	asrs	r4, r2, #8
90029e78:	788d      	ldrb	r5, [r1, #2]
90029e7a:	f89d 6010 	ldrb.w	r6, [sp, #16]
90029e7e:	10d0      	asrs	r0, r2, #3
90029e80:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029e84:	00d2      	lsls	r2, r2, #3
90029e86:	fb15 f503 	smulbb	r5, r5, r3
90029e8a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029e8e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90029e92:	b2d2      	uxtb	r2, r2
90029e94:	fb04 5506 	mla	r5, r4, r6, r5
90029e98:	784c      	ldrb	r4, [r1, #1]
90029e9a:	7809      	ldrb	r1, [r1, #0]
90029e9c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90029ea0:	fb14 f403 	smulbb	r4, r4, r3
90029ea4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90029ea8:	fb11 f303 	smulbb	r3, r1, r3
90029eac:	b2ad      	uxth	r5, r5
90029eae:	fb00 4406 	mla	r4, r0, r6, r4
90029eb2:	fb02 3306 	mla	r3, r2, r6, r3
90029eb6:	1c68      	adds	r0, r5, #1
90029eb8:	b2a4      	uxth	r4, r4
90029eba:	b29b      	uxth	r3, r3
90029ebc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90029ec0:	1c62      	adds	r2, r4, #1
90029ec2:	1c58      	adds	r0, r3, #1
90029ec4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90029ec8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90029ecc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90029ed0:	0964      	lsrs	r4, r4, #5
90029ed2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029ed6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90029eda:	4328      	orrs	r0, r5
90029edc:	4320      	orrs	r0, r4
90029ede:	bd70      	pop	{r4, r5, r6, pc}

90029ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90029ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029ee4:	b08f      	sub	sp, #60	@ 0x3c
90029ee6:	461c      	mov	r4, r3
90029ee8:	4682      	mov	sl, r0
90029eea:	460e      	mov	r6, r1
90029eec:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90029ef0:	4615      	mov	r5, r2
90029ef2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90029ef4:	2f00      	cmp	r7, #0
90029ef6:	f000 8141 	beq.w	9002a17c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90029efa:	6820      	ldr	r0, [r4, #0]
90029efc:	aa0a      	add	r2, sp, #40	@ 0x28
90029efe:	6861      	ldr	r1, [r4, #4]
90029f00:	f04f 0802 	mov.w	r8, #2
90029f04:	3504      	adds	r5, #4
90029f06:	c203      	stmia	r2!, {r0, r1}
90029f08:	6818      	ldr	r0, [r3, #0]
90029f0a:	aa0c      	add	r2, sp, #48	@ 0x30
90029f0c:	6859      	ldr	r1, [r3, #4]
90029f0e:	c203      	stmia	r2!, {r0, r1}
90029f10:	a80a      	add	r0, sp, #40	@ 0x28
90029f12:	f7ed ff73 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029f16:	4621      	mov	r1, r4
90029f18:	a80c      	add	r0, sp, #48	@ 0x30
90029f1a:	f7ed ffb3 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029f1e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90029f22:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90029f26:	f002 0301 	and.w	r3, r2, #1
90029f2a:	9306      	str	r3, [sp, #24]
90029f2c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90029f30:	f003 0101 	and.w	r1, r3, #1
90029f34:	9105      	str	r1, [sp, #20]
90029f36:	9805      	ldr	r0, [sp, #20]
90029f38:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90029f3c:	4403      	add	r3, r0
90029f3e:	fb01 2303 	mla	r3, r1, r3, r2
90029f42:	fb93 f3f8 	sdiv	r3, r3, r8
90029f46:	441e      	add	r6, r3
90029f48:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90029f4c:	441a      	add	r2, r3
90029f4e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90029f52:	4419      	add	r1, r3
90029f54:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90029f58:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90029f5c:	9303      	str	r3, [sp, #12]
90029f5e:	4b89      	ldr	r3, [pc, #548]	@ (9002a184 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90029f60:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90029f64:	6818      	ldr	r0, [r3, #0]
90029f66:	6803      	ldr	r3, [r0, #0]
90029f68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90029f6a:	4798      	blx	r3
90029f6c:	4a86      	ldr	r2, [pc, #536]	@ (9002a188 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90029f6e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90029f72:	2fff      	cmp	r7, #255	@ 0xff
90029f74:	8813      	ldrh	r3, [r2, #0]
90029f76:	4694      	mov	ip, r2
90029f78:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90029f7c:	fb03 9404 	mla	r4, r3, r4, r9
90029f80:	fb03 f30b 	mul.w	r3, r3, fp
90029f84:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029f88:	d071      	beq.n	9002a06e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90029f8a:	43f9      	mvns	r1, r7
90029f8c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90029f90:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90029f94:	b2c9      	uxtb	r1, r1
90029f96:	e9cd 3207 	strd	r3, r2, [sp, #28]
90029f9a:	9104      	str	r1, [sp, #16]
90029f9c:	9b07      	ldr	r3, [sp, #28]
90029f9e:	42a3      	cmp	r3, r4
90029fa0:	f240 80e7 	bls.w	9002a172 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90029fa4:	9b06      	ldr	r3, [sp, #24]
90029fa6:	2b00      	cmp	r3, #0
90029fa8:	d03d      	beq.n	9002a026 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90029faa:	7831      	ldrb	r1, [r6, #0]
90029fac:	4650      	mov	r0, sl
90029fae:	9b04      	ldr	r3, [sp, #16]
90029fb0:	f106 0801 	add.w	r8, r6, #1
90029fb4:	f001 010f 	and.w	r1, r1, #15
90029fb8:	8822      	ldrh	r2, [r4, #0]
90029fba:	9300      	str	r3, [sp, #0]
90029fbc:	463b      	mov	r3, r7
90029fbe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90029fc2:	4429      	add	r1, r5
90029fc4:	f7ff ff56 	bl	90029e74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90029fc8:	9b03      	ldr	r3, [sp, #12]
90029fca:	f824 0b02 	strh.w	r0, [r4], #2
90029fce:	f103 3bff 	add.w	fp, r3, #4294967295
90029fd2:	f1bb 0f01 	cmp.w	fp, #1
90029fd6:	46a1      	mov	r9, r4
90029fd8:	f104 0404 	add.w	r4, r4, #4
90029fdc:	dd27      	ble.n	9002a02e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90029fde:	f898 1000 	ldrb.w	r1, [r8]
90029fe2:	4650      	mov	r0, sl
90029fe4:	9b04      	ldr	r3, [sp, #16]
90029fe6:	f1ab 0b02 	sub.w	fp, fp, #2
90029fea:	0909      	lsrs	r1, r1, #4
90029fec:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90029ff0:	9300      	str	r3, [sp, #0]
90029ff2:	463b      	mov	r3, r7
90029ff4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90029ff8:	4429      	add	r1, r5
90029ffa:	f7ff ff3b 	bl	90029e74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90029ffe:	f824 0c04 	strh.w	r0, [r4, #-4]
9002a002:	f818 1b01 	ldrb.w	r1, [r8], #1
9002a006:	4650      	mov	r0, sl
9002a008:	9b04      	ldr	r3, [sp, #16]
9002a00a:	f001 010f 	and.w	r1, r1, #15
9002a00e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002a012:	9300      	str	r3, [sp, #0]
9002a014:	463b      	mov	r3, r7
9002a016:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a01a:	4429      	add	r1, r5
9002a01c:	f7ff ff2a 	bl	90029e74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a020:	f824 0c02 	strh.w	r0, [r4, #-2]
9002a024:	e7d5      	b.n	90029fd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002a026:	46b0      	mov	r8, r6
9002a028:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002a02c:	e7d1      	b.n	90029fd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002a02e:	d10f      	bne.n	9002a050 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
9002a030:	f898 1000 	ldrb.w	r1, [r8]
9002a034:	4650      	mov	r0, sl
9002a036:	9b04      	ldr	r3, [sp, #16]
9002a038:	0909      	lsrs	r1, r1, #4
9002a03a:	f8b9 2000 	ldrh.w	r2, [r9]
9002a03e:	9300      	str	r3, [sp, #0]
9002a040:	463b      	mov	r3, r7
9002a042:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a046:	4429      	add	r1, r5
9002a048:	f7ff ff14 	bl	90029e74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a04c:	f829 0b02 	strh.w	r0, [r9], #2
9002a050:	9b08      	ldr	r3, [sp, #32]
9002a052:	9a05      	ldr	r2, [sp, #20]
9002a054:	881c      	ldrh	r4, [r3, #0]
9002a056:	9b03      	ldr	r3, [sp, #12]
9002a058:	1ae4      	subs	r4, r4, r3
9002a05a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a05e:	4413      	add	r3, r2
9002a060:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002a062:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002a066:	fb93 f3f2 	sdiv	r3, r3, r2
9002a06a:	441e      	add	r6, r3
9002a06c:	e796      	b.n	90029f9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002a06e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002a072:	4f46      	ldr	r7, [pc, #280]	@ (9002a18c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
9002a074:	42a3      	cmp	r3, r4
9002a076:	d97c      	bls.n	9002a172 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002a078:	9a06      	ldr	r2, [sp, #24]
9002a07a:	2a00      	cmp	r2, #0
9002a07c:	d054      	beq.n	9002a128 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002a07e:	7830      	ldrb	r0, [r6, #0]
9002a080:	1c71      	adds	r1, r6, #1
9002a082:	f000 000f 	and.w	r0, r0, #15
9002a086:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002a08a:	eb05 0e00 	add.w	lr, r5, r0
9002a08e:	5c28      	ldrb	r0, [r5, r0]
9002a090:	f89e 2002 	ldrb.w	r2, [lr, #2]
9002a094:	f89e e001 	ldrb.w	lr, [lr, #1]
9002a098:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002a09c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002a0a0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002a0a4:	ea42 020e 	orr.w	r2, r2, lr
9002a0a8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002a0ac:	f824 2b02 	strh.w	r2, [r4], #2
9002a0b0:	9a03      	ldr	r2, [sp, #12]
9002a0b2:	f102 3eff 	add.w	lr, r2, #4294967295
9002a0b6:	f1be 0f01 	cmp.w	lr, #1
9002a0ba:	4620      	mov	r0, r4
9002a0bc:	f104 0404 	add.w	r4, r4, #4
9002a0c0:	dd36      	ble.n	9002a130 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002a0c2:	7808      	ldrb	r0, [r1, #0]
9002a0c4:	f1ae 0e02 	sub.w	lr, lr, #2
9002a0c8:	0900      	lsrs	r0, r0, #4
9002a0ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002a0ce:	eb05 0a00 	add.w	sl, r5, r0
9002a0d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002a0d6:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002a0da:	00d2      	lsls	r2, r2, #3
9002a0dc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002a0e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a0e4:	ea49 0202 	orr.w	r2, r9, r2
9002a0e8:	f815 9000 	ldrb.w	r9, [r5, r0]
9002a0ec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002a0f0:	f824 2c04 	strh.w	r2, [r4, #-4]
9002a0f4:	f811 0b01 	ldrb.w	r0, [r1], #1
9002a0f8:	f000 000f 	and.w	r0, r0, #15
9002a0fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002a100:	eb05 0a00 	add.w	sl, r5, r0
9002a104:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002a108:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002a10c:	00d2      	lsls	r2, r2, #3
9002a10e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002a112:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a116:	ea49 0202 	orr.w	r2, r9, r2
9002a11a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002a11e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002a122:	f824 2c02 	strh.w	r2, [r4, #-2]
9002a126:	e7c6      	b.n	9002a0b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002a128:	4631      	mov	r1, r6
9002a12a:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002a12e:	e7c2      	b.n	9002a0b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002a130:	d111      	bne.n	9002a156 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9002a132:	7809      	ldrb	r1, [r1, #0]
9002a134:	0909      	lsrs	r1, r1, #4
9002a136:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a13a:	186c      	adds	r4, r5, r1
9002a13c:	5c69      	ldrb	r1, [r5, r1]
9002a13e:	78a2      	ldrb	r2, [r4, #2]
9002a140:	7864      	ldrb	r4, [r4, #1]
9002a142:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002a146:	00e4      	lsls	r4, r4, #3
9002a148:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a14c:	4322      	orrs	r2, r4
9002a14e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002a152:	f820 2b02 	strh.w	r2, [r0], #2
9002a156:	9a03      	ldr	r2, [sp, #12]
9002a158:	f8bc 4000 	ldrh.w	r4, [ip]
9002a15c:	9905      	ldr	r1, [sp, #20]
9002a15e:	1aa4      	subs	r4, r4, r2
9002a160:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002a164:	440a      	add	r2, r1
9002a166:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a16a:	fb92 f2f8 	sdiv	r2, r2, r8
9002a16e:	4416      	add	r6, r2
9002a170:	e780      	b.n	9002a074 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002a172:	4b04      	ldr	r3, [pc, #16]	@ (9002a184 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002a174:	6818      	ldr	r0, [r3, #0]
9002a176:	6803      	ldr	r3, [r0, #0]
9002a178:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002a17a:	4798      	blx	r3
9002a17c:	b00f      	add	sp, #60	@ 0x3c
9002a17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a182:	bf00      	nop
9002a184:	240218cc 	.word	0x240218cc
9002a188:	240218c6 	.word	0x240218c6
9002a18c:	fffff800 	.word	0xfffff800

9002a190 <CRC_Lock>:
9002a190:	4a2d      	ldr	r2, [pc, #180]	@ (9002a248 <CRC_Lock+0xb8>)
9002a192:	b530      	push	{r4, r5, lr}
9002a194:	6813      	ldr	r3, [r2, #0]
9002a196:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002a19a:	f023 0301 	bic.w	r3, r3, #1
9002a19e:	6013      	str	r3, [r2, #0]
9002a1a0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
9002a1a4:	4b29      	ldr	r3, [pc, #164]	@ (9002a24c <CRC_Lock+0xbc>)
9002a1a6:	681c      	ldr	r4, [r3, #0]
9002a1a8:	4014      	ands	r4, r2
9002a1aa:	42ac      	cmp	r4, r5
9002a1ac:	d005      	beq.n	9002a1ba <CRC_Lock+0x2a>
9002a1ae:	681c      	ldr	r4, [r3, #0]
9002a1b0:	f24c 2570 	movw	r5, #49776	@ 0xc270
9002a1b4:	4014      	ands	r4, r2
9002a1b6:	42ac      	cmp	r4, r5
9002a1b8:	d125      	bne.n	9002a206 <CRC_Lock+0x76>
9002a1ba:	4b25      	ldr	r3, [pc, #148]	@ (9002a250 <CRC_Lock+0xc0>)
9002a1bc:	681b      	ldr	r3, [r3, #0]
9002a1be:	2b00      	cmp	r3, #0
9002a1c0:	d139      	bne.n	9002a236 <CRC_Lock+0xa6>
9002a1c2:	4b24      	ldr	r3, [pc, #144]	@ (9002a254 <CRC_Lock+0xc4>)
9002a1c4:	681a      	ldr	r2, [r3, #0]
9002a1c6:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002a1ca:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002a1ce:	d00d      	beq.n	9002a1ec <CRC_Lock+0x5c>
9002a1d0:	681a      	ldr	r2, [r3, #0]
9002a1d2:	f240 4483 	movw	r4, #1155	@ 0x483
9002a1d6:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002a1da:	42a2      	cmp	r2, r4
9002a1dc:	d006      	beq.n	9002a1ec <CRC_Lock+0x5c>
9002a1de:	681b      	ldr	r3, [r3, #0]
9002a1e0:	f240 4285 	movw	r2, #1157	@ 0x485
9002a1e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002a1e8:	4293      	cmp	r3, r2
9002a1ea:	d124      	bne.n	9002a236 <CRC_Lock+0xa6>
9002a1ec:	4b1a      	ldr	r3, [pc, #104]	@ (9002a258 <CRC_Lock+0xc8>)
9002a1ee:	2201      	movs	r2, #1
9002a1f0:	601a      	str	r2, [r3, #0]
9002a1f2:	681a      	ldr	r2, [r3, #0]
9002a1f4:	2a00      	cmp	r2, #0
9002a1f6:	d1fc      	bne.n	9002a1f2 <CRC_Lock+0x62>
9002a1f8:	4b18      	ldr	r3, [pc, #96]	@ (9002a25c <CRC_Lock+0xcc>)
9002a1fa:	6018      	str	r0, [r3, #0]
9002a1fc:	6818      	ldr	r0, [r3, #0]
9002a1fe:	1a43      	subs	r3, r0, r1
9002a200:	4258      	negs	r0, r3
9002a202:	4158      	adcs	r0, r3
9002a204:	e00e      	b.n	9002a224 <CRC_Lock+0x94>
9002a206:	681b      	ldr	r3, [r3, #0]
9002a208:	4013      	ands	r3, r2
9002a20a:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002a20e:	4293      	cmp	r3, r2
9002a210:	d111      	bne.n	9002a236 <CRC_Lock+0xa6>
9002a212:	4b13      	ldr	r3, [pc, #76]	@ (9002a260 <CRC_Lock+0xd0>)
9002a214:	f240 4286 	movw	r2, #1158	@ 0x486
9002a218:	681b      	ldr	r3, [r3, #0]
9002a21a:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002a21e:	4293      	cmp	r3, r2
9002a220:	d001      	beq.n	9002a226 <CRC_Lock+0x96>
9002a222:	2000      	movs	r0, #0
9002a224:	bd30      	pop	{r4, r5, pc}
9002a226:	4b0f      	ldr	r3, [pc, #60]	@ (9002a264 <CRC_Lock+0xd4>)
9002a228:	2201      	movs	r2, #1
9002a22a:	601a      	str	r2, [r3, #0]
9002a22c:	681a      	ldr	r2, [r3, #0]
9002a22e:	2a00      	cmp	r2, #0
9002a230:	d1fc      	bne.n	9002a22c <CRC_Lock+0x9c>
9002a232:	4b0d      	ldr	r3, [pc, #52]	@ (9002a268 <CRC_Lock+0xd8>)
9002a234:	e7e1      	b.n	9002a1fa <CRC_Lock+0x6a>
9002a236:	4b0d      	ldr	r3, [pc, #52]	@ (9002a26c <CRC_Lock+0xdc>)
9002a238:	2201      	movs	r2, #1
9002a23a:	601a      	str	r2, [r3, #0]
9002a23c:	681a      	ldr	r2, [r3, #0]
9002a23e:	2a00      	cmp	r2, #0
9002a240:	d1fc      	bne.n	9002a23c <CRC_Lock+0xac>
9002a242:	4b0b      	ldr	r3, [pc, #44]	@ (9002a270 <CRC_Lock+0xe0>)
9002a244:	e7d9      	b.n	9002a1fa <CRC_Lock+0x6a>
9002a246:	bf00      	nop
9002a248:	e0002000 	.word	0xe0002000
9002a24c:	e000ed00 	.word	0xe000ed00
9002a250:	e0042000 	.word	0xe0042000
9002a254:	5c001000 	.word	0x5c001000
9002a258:	58024c08 	.word	0x58024c08
9002a25c:	58024c00 	.word	0x58024c00
9002a260:	46008ff0 	.word	0x46008ff0
9002a264:	46024c08 	.word	0x46024c08
9002a268:	46024c00 	.word	0x46024c00
9002a26c:	40023008 	.word	0x40023008
9002a270:	40023000 	.word	0x40023000

9002a274 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9002a274:	6101      	str	r1, [r0, #16]
9002a276:	4770      	bx	lr

9002a278 <_ZN8touchgfx8Gestures4tickEv>:
9002a278:	7b83      	ldrb	r3, [r0, #14]
9002a27a:	b14b      	cbz	r3, 9002a290 <_ZN8touchgfx8Gestures4tickEv+0x18>
9002a27c:	8903      	ldrh	r3, [r0, #8]
9002a27e:	3301      	adds	r3, #1
9002a280:	b29b      	uxth	r3, r3
9002a282:	2b07      	cmp	r3, #7
9002a284:	8103      	strh	r3, [r0, #8]
9002a286:	bf81      	itttt	hi
9002a288:	2300      	movhi	r3, #0
9002a28a:	8143      	strhhi	r3, [r0, #10]
9002a28c:	8183      	strhhi	r3, [r0, #12]
9002a28e:	7383      	strbhi	r3, [r0, #14]
9002a290:	4770      	bx	lr
	...

9002a294 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9002a294:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002a298:	4698      	mov	r8, r3
9002a29a:	8883      	ldrh	r3, [r0, #4]
9002a29c:	4604      	mov	r4, r0
9002a29e:	4617      	mov	r7, r2
9002a2a0:	f8ad 3006 	strh.w	r3, [sp, #6]
9002a2a4:	eba8 0303 	sub.w	r3, r8, r3
9002a2a8:	4a19      	ldr	r2, [pc, #100]	@ (9002a310 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002a2aa:	460e      	mov	r6, r1
9002a2ac:	b21b      	sxth	r3, r3
9002a2ae:	88c1      	ldrh	r1, [r0, #6]
9002a2b0:	9200      	str	r2, [sp, #0]
9002a2b2:	2000      	movs	r0, #0
9002a2b4:	2b00      	cmp	r3, #0
9002a2b6:	8aa2      	ldrh	r2, [r4, #20]
9002a2b8:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002a2bc:	bfb8      	it	lt
9002a2be:	425b      	neglt	r3, r3
9002a2c0:	f88d 0004 	strb.w	r0, [sp, #4]
9002a2c4:	f8ad 1008 	strh.w	r1, [sp, #8]
9002a2c8:	b21b      	sxth	r3, r3
9002a2ca:	f8ad 800a 	strh.w	r8, [sp, #10]
9002a2ce:	f8ad 500c 	strh.w	r5, [sp, #12]
9002a2d2:	4293      	cmp	r3, r2
9002a2d4:	dc07      	bgt.n	9002a2e6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002a2d6:	1a69      	subs	r1, r5, r1
9002a2d8:	b209      	sxth	r1, r1
9002a2da:	2900      	cmp	r1, #0
9002a2dc:	bfb8      	it	lt
9002a2de:	4249      	neglt	r1, r1
9002a2e0:	b209      	sxth	r1, r1
9002a2e2:	428a      	cmp	r2, r1
9002a2e4:	da10      	bge.n	9002a308 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002a2e6:	6920      	ldr	r0, [r4, #16]
9002a2e8:	4669      	mov	r1, sp
9002a2ea:	eba8 0606 	sub.w	r6, r8, r6
9002a2ee:	1bef      	subs	r7, r5, r7
9002a2f0:	6803      	ldr	r3, [r0, #0]
9002a2f2:	685b      	ldr	r3, [r3, #4]
9002a2f4:	4798      	blx	r3
9002a2f6:	2300      	movs	r3, #0
9002a2f8:	2001      	movs	r0, #1
9002a2fa:	8166      	strh	r6, [r4, #10]
9002a2fc:	8123      	strh	r3, [r4, #8]
9002a2fe:	81a7      	strh	r7, [r4, #12]
9002a300:	f8a4 8004 	strh.w	r8, [r4, #4]
9002a304:	80e5      	strh	r5, [r4, #6]
9002a306:	73a0      	strb	r0, [r4, #14]
9002a308:	b004      	add	sp, #16
9002a30a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a30e:	bf00      	nop
9002a310:	9002f950 	.word	0x9002f950

9002a314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
9002a314:	b5f0      	push	{r4, r5, r6, r7, lr}
9002a316:	461e      	mov	r6, r3
9002a318:	1e4b      	subs	r3, r1, #1
9002a31a:	b085      	sub	sp, #20
9002a31c:	4604      	mov	r4, r0
9002a31e:	2b01      	cmp	r3, #1
9002a320:	460d      	mov	r5, r1
9002a322:	4617      	mov	r7, r2
9002a324:	d84b      	bhi.n	9002a3be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002a326:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002a32a:	1cd3      	adds	r3, r2, #3
9002a32c:	b29b      	uxth	r3, r3
9002a32e:	2b06      	cmp	r3, #6
9002a330:	d916      	bls.n	9002a360 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002a332:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 9002a3d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002a336:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002a33a:	f8cd c004 	str.w	ip, [sp, #4]
9002a33e:	f04f 0c00 	mov.w	ip, #0
9002a342:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002a346:	6900      	ldr	r0, [r0, #16]
9002a348:	f8ad 100c 	strh.w	r1, [sp, #12]
9002a34c:	a901      	add	r1, sp, #4
9002a34e:	f88d c008 	strb.w	ip, [sp, #8]
9002a352:	f8ad 200a 	strh.w	r2, [sp, #10]
9002a356:	f8ad 300e 	strh.w	r3, [sp, #14]
9002a35a:	6803      	ldr	r3, [r0, #0]
9002a35c:	689b      	ldr	r3, [r3, #8]
9002a35e:	4798      	blx	r3
9002a360:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a364:	1cd3      	adds	r3, r2, #3
9002a366:	b29b      	uxth	r3, r3
9002a368:	2b06      	cmp	r3, #6
9002a36a:	d916      	bls.n	9002a39a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002a36c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9002a3d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002a370:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002a374:	f8cd c004 	str.w	ip, [sp, #4]
9002a378:	f04f 0c01 	mov.w	ip, #1
9002a37c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002a380:	6920      	ldr	r0, [r4, #16]
9002a382:	f8ad 100c 	strh.w	r1, [sp, #12]
9002a386:	a901      	add	r1, sp, #4
9002a388:	f88d c008 	strb.w	ip, [sp, #8]
9002a38c:	f8ad 200a 	strh.w	r2, [sp, #10]
9002a390:	f8ad 300e 	strh.w	r3, [sp, #14]
9002a394:	6803      	ldr	r3, [r0, #0]
9002a396:	689b      	ldr	r3, [r3, #8]
9002a398:	4798      	blx	r3
9002a39a:	4b0d      	ldr	r3, [pc, #52]	@ (9002a3d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002a39c:	a901      	add	r1, sp, #4
9002a39e:	6920      	ldr	r0, [r4, #16]
9002a3a0:	9301      	str	r3, [sp, #4]
9002a3a2:	2300      	movs	r3, #0
9002a3a4:	f88d 5008 	strb.w	r5, [sp, #8]
9002a3a8:	f8ad 700a 	strh.w	r7, [sp, #10]
9002a3ac:	f8ad 600c 	strh.w	r6, [sp, #12]
9002a3b0:	f8ad 300e 	strh.w	r3, [sp, #14]
9002a3b4:	6803      	ldr	r3, [r0, #0]
9002a3b6:	681b      	ldr	r3, [r3, #0]
9002a3b8:	4798      	blx	r3
9002a3ba:	b005      	add	sp, #20
9002a3bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002a3be:	2900      	cmp	r1, #0
9002a3c0:	d1eb      	bne.n	9002a39a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002a3c2:	80a2      	strh	r2, [r4, #4]
9002a3c4:	80c6      	strh	r6, [r0, #6]
9002a3c6:	60a1      	str	r1, [r4, #8]
9002a3c8:	81a1      	strh	r1, [r4, #12]
9002a3ca:	73a1      	strb	r1, [r4, #14]
9002a3cc:	e7e5      	b.n	9002a39a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002a3ce:	bf00      	nop
9002a3d0:	9002f93c 	.word	0x9002f93c
9002a3d4:	9002f964 	.word	0x9002f964

9002a3d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002a3d8:	10c9      	asrs	r1, r1, #3
9002a3da:	2900      	cmp	r1, #0
9002a3dc:	bfb8      	it	lt
9002a3de:	4249      	neglt	r1, r1
9002a3e0:	2801      	cmp	r0, #1
9002a3e2:	d108      	bne.n	9002a3f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002a3e4:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002a3e8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9002a3ec:	4601      	mov	r1, r0
9002a3ee:	dd02      	ble.n	9002a3f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002a3f0:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
9002a3f4:	4770      	bx	lr
9002a3f6:	29ff      	cmp	r1, #255	@ 0xff
9002a3f8:	bfa8      	it	ge
9002a3fa:	21ff      	movge	r1, #255	@ 0xff
9002a3fc:	4608      	mov	r0, r1
9002a3fe:	4770      	bx	lr

9002a400 <_ZN8touchgfx10Rasterizer6lineToEii>:
9002a400:	b410      	push	{r4}
9002a402:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002a406:	429c      	cmp	r4, r3
9002a408:	d803      	bhi.n	9002a412 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002a40a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a40e:	f7eb bfff 	b.w	90016410 <_ZN8touchgfx7Outline6lineToEii>
9002a412:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a416:	4770      	bx	lr

9002a418 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
9002a418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a41c:	b08b      	sub	sp, #44	@ 0x2c
9002a41e:	4606      	mov	r6, r0
9002a420:	468a      	mov	sl, r1
9002a422:	e9cd 2306 	strd	r2, r3, [sp, #24]
9002a426:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9002a42a:	9308      	str	r3, [sp, #32]
9002a42c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002a430:	9309      	str	r3, [sp, #36]	@ 0x24
9002a432:	f7ec f958 	bl	900166e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002a436:	68b5      	ldr	r5, [r6, #8]
9002a438:	4604      	mov	r4, r0
9002a43a:	2d00      	cmp	r5, #0
9002a43c:	d044      	beq.n	9002a4c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002a43e:	6873      	ldr	r3, [r6, #4]
9002a440:	42ab      	cmp	r3, r5
9002a442:	d33d      	bcc.n	9002a4c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
9002a444:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002a448:	f04f 0800 	mov.w	r8, #0
9002a44c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002a450:	eb02 0b03 	add.w	fp, r2, r3
9002a454:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002a458:	fb02 1203 	mla	r2, r2, r3, r1
9002a45c:	9205      	str	r2, [sp, #20]
9002a45e:	1e6a      	subs	r2, r5, #1
9002a460:	9204      	str	r2, [sp, #16]
9002a462:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002a466:	f9b4 7000 	ldrsh.w	r7, [r4]
9002a46a:	454b      	cmp	r3, r9
9002a46c:	463a      	mov	r2, r7
9002a46e:	d008      	beq.n	9002a482 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002a470:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002a474:	eb03 0b09 	add.w	fp, r3, r9
9002a478:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002a47c:	fb03 1309 	mla	r3, r3, r9, r1
9002a480:	9305      	str	r3, [sp, #20]
9002a482:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002a486:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002a48a:	4498      	add	r8, r3
9002a48c:	9b04      	ldr	r3, [sp, #16]
9002a48e:	3b01      	subs	r3, #1
9002a490:	9304      	str	r3, [sp, #16]
9002a492:	9b04      	ldr	r3, [sp, #16]
9002a494:	3301      	adds	r3, #1
9002a496:	d015      	beq.n	9002a4c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002a498:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002a49c:	42bb      	cmp	r3, r7
9002a49e:	d117      	bne.n	9002a4d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002a4a0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002a4a4:	9b04      	ldr	r3, [sp, #16]
9002a4a6:	4548      	cmp	r0, r9
9002a4a8:	f103 33ff 	add.w	r3, r3, #4294967295
9002a4ac:	d17d      	bne.n	9002a5aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002a4ae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002a4b2:	4401      	add	r1, r0
9002a4b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002a4b8:	4480      	add	r8, r0
9002a4ba:	e7e9      	b.n	9002a490 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002a4bc:	461f      	mov	r7, r3
9002a4be:	e042      	b.n	9002a546 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002a4c0:	2000      	movs	r0, #0
9002a4c2:	e002      	b.n	9002a4ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002a4c4:	2900      	cmp	r1, #0
9002a4c6:	d16d      	bne.n	9002a5a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002a4c8:	2001      	movs	r0, #1
9002a4ca:	b00b      	add	sp, #44	@ 0x2c
9002a4cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a4d0:	b379      	cbz	r1, 9002a532 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002a4d2:	2f00      	cmp	r7, #0
9002a4d4:	db29      	blt.n	9002a52a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a4d6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002a4da:	42bb      	cmp	r3, r7
9002a4dc:	dd25      	ble.n	9002a52a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a4de:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002a4e2:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002a4e6:	f7ff ff77 	bl	9002a3d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002a4ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a4ec:	fb10 f003 	smulbb	r0, r0, r3
9002a4f0:	b280      	uxth	r0, r0
9002a4f2:	1c41      	adds	r1, r0, #1
9002a4f4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002a4f8:	1209      	asrs	r1, r1, #8
9002a4fa:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002a4fe:	d014      	beq.n	9002a52a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a500:	b2c9      	uxtb	r1, r1
9002a502:	9808      	ldr	r0, [sp, #32]
9002a504:	b2ba      	uxth	r2, r7
9002a506:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002a508:	9102      	str	r1, [sp, #8]
9002a50a:	2101      	movs	r1, #1
9002a50c:	4413      	add	r3, r2
9002a50e:	4402      	add	r2, r0
9002a510:	9101      	str	r1, [sp, #4]
9002a512:	fa0f f18b 	sxth.w	r1, fp
9002a516:	f8da 0000 	ldr.w	r0, [sl]
9002a51a:	b21b      	sxth	r3, r3
9002a51c:	9100      	str	r1, [sp, #0]
9002a51e:	b212      	sxth	r2, r2
9002a520:	6941      	ldr	r1, [r0, #20]
9002a522:	4650      	mov	r0, sl
9002a524:	460d      	mov	r5, r1
9002a526:	9905      	ldr	r1, [sp, #20]
9002a528:	47a8      	blx	r5
9002a52a:	9b04      	ldr	r3, [sp, #16]
9002a52c:	1c7a      	adds	r2, r7, #1
9002a52e:	3301      	adds	r3, #1
9002a530:	d0ca      	beq.n	9002a4c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002a532:	f9b4 7000 	ldrsh.w	r7, [r4]
9002a536:	1abb      	subs	r3, r7, r2
9002a538:	2b00      	cmp	r3, #0
9002a53a:	dd31      	ble.n	9002a5a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a53c:	2a00      	cmp	r2, #0
9002a53e:	dabd      	bge.n	9002a4bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002a540:	2f00      	cmp	r7, #0
9002a542:	dd2d      	ble.n	9002a5a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a544:	2200      	movs	r2, #0
9002a546:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002a54a:	19d1      	adds	r1, r2, r7
9002a54c:	4299      	cmp	r1, r3
9002a54e:	db02      	blt.n	9002a556 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002a550:	1a9f      	subs	r7, r3, r2
9002a552:	2f00      	cmp	r7, #0
9002a554:	dd24      	ble.n	9002a5a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a556:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002a55a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002a55e:	f7ff ff3b 	bl	9002a3d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002a562:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a564:	fb10 f003 	smulbb	r0, r0, r3
9002a568:	b280      	uxth	r0, r0
9002a56a:	1c41      	adds	r1, r0, #1
9002a56c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002a570:	1209      	asrs	r1, r1, #8
9002a572:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002a576:	d013      	beq.n	9002a5a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a578:	b292      	uxth	r2, r2
9002a57a:	9808      	ldr	r0, [sp, #32]
9002a57c:	b2c9      	uxtb	r1, r1
9002a57e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002a580:	b23f      	sxth	r7, r7
9002a582:	4413      	add	r3, r2
9002a584:	9102      	str	r1, [sp, #8]
9002a586:	4402      	add	r2, r0
9002a588:	fa0f f18b 	sxth.w	r1, fp
9002a58c:	f8da 0000 	ldr.w	r0, [sl]
9002a590:	b21b      	sxth	r3, r3
9002a592:	9100      	str	r1, [sp, #0]
9002a594:	b212      	sxth	r2, r2
9002a596:	9701      	str	r7, [sp, #4]
9002a598:	9905      	ldr	r1, [sp, #20]
9002a59a:	6947      	ldr	r7, [r0, #20]
9002a59c:	4650      	mov	r0, sl
9002a59e:	47b8      	blx	r7
9002a5a0:	464b      	mov	r3, r9
9002a5a2:	e75e      	b.n	9002a462 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002a5a4:	2f00      	cmp	r7, #0
9002a5a6:	da96      	bge.n	9002a4d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002a5a8:	e78e      	b.n	9002a4c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002a5aa:	2900      	cmp	r1, #0
9002a5ac:	d0f8      	beq.n	9002a5a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a5ae:	e790      	b.n	9002a4d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002a5b0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002a5b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002a5b4:	461e      	mov	r6, r3
9002a5b6:	4b36      	ldr	r3, [pc, #216]	@ (9002a690 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002a5b8:	2500      	movs	r5, #0
9002a5ba:	f100 0814 	add.w	r8, r0, #20
9002a5be:	4604      	mov	r4, r0
9002a5c0:	4617      	mov	r7, r2
9002a5c2:	e9c0 3100 	strd	r3, r1, [r0]
9002a5c6:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002a5ca:	8185      	strh	r5, [r0, #12]
9002a5cc:	8103      	strh	r3, [r0, #8]
9002a5ce:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002a5d2:	81c5      	strh	r5, [r0, #14]
9002a5d4:	7283      	strb	r3, [r0, #10]
9002a5d6:	8205      	strh	r5, [r0, #16]
9002a5d8:	8245      	strh	r5, [r0, #18]
9002a5da:	4640      	mov	r0, r8
9002a5dc:	f7eb fa5e 	bl	90015a9c <_ZN8touchgfx7OutlineC1Ev>
9002a5e0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
9002a5e4:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
9002a5e8:	466b      	mov	r3, sp
9002a5ea:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002a5ee:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002a5f2:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
9002a5f6:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002a5fa:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002a5fe:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002a602:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
9002a606:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002a60a:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002a60e:	6830      	ldr	r0, [r6, #0]
9002a610:	6871      	ldr	r1, [r6, #4]
9002a612:	8872      	ldrh	r2, [r6, #2]
9002a614:	8835      	ldrh	r5, [r6, #0]
9002a616:	c303      	stmia	r3!, {r0, r1}
9002a618:	887b      	ldrh	r3, [r7, #2]
9002a61a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002a61e:	4413      	add	r3, r2
9002a620:	883a      	ldrh	r2, [r7, #0]
9002a622:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
9002a626:	442a      	add	r2, r5
9002a628:	81e3      	strh	r3, [r4, #14]
9002a62a:	8220      	strh	r0, [r4, #16]
9002a62c:	4668      	mov	r0, sp
9002a62e:	81a2      	strh	r2, [r4, #12]
9002a630:	8261      	strh	r1, [r4, #18]
9002a632:	4639      	mov	r1, r7
9002a634:	f7ed fc26 	bl	90017e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a638:	f104 000c 	add.w	r0, r4, #12
9002a63c:	f7ed fbde 	bl	90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a640:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002a644:	f8bd 2000 	ldrh.w	r2, [sp]
9002a648:	4640      	mov	r0, r8
9002a64a:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002a64e:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002a652:	f7eb fa07 	bl	90015a64 <_ZN8touchgfx7Outline5resetEv>
9002a656:	f9bd 3000 	ldrsh.w	r3, [sp]
9002a65a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002a65e:	4620      	mov	r0, r4
9002a660:	015b      	lsls	r3, r3, #5
9002a662:	64e3      	str	r3, [r4, #76]	@ 0x4c
9002a664:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002a668:	015b      	lsls	r3, r3, #5
9002a66a:	6523      	str	r3, [r4, #80]	@ 0x50
9002a66c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002a670:	015b      	lsls	r3, r3, #5
9002a672:	6563      	str	r3, [r4, #84]	@ 0x54
9002a674:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002a678:	015b      	lsls	r3, r3, #5
9002a67a:	65a3      	str	r3, [r4, #88]	@ 0x58
9002a67c:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002a680:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9002a684:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
9002a688:	b002      	add	sp, #8
9002a68a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a68e:	bf00      	nop
9002a690:	9002fca0 	.word	0x9002fca0

9002a694 <_ZN8touchgfx6Canvas5closeEv>:
9002a694:	b538      	push	{r3, r4, r5, lr}
9002a696:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002a69a:	4604      	mov	r4, r0
9002a69c:	b193      	cbz	r3, 9002a6c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002a69e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002a6a2:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002a6a6:	4213      	tst	r3, r2
9002a6a8:	d10c      	bne.n	9002a6c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002a6aa:	f100 0514 	add.w	r5, r0, #20
9002a6ae:	b123      	cbz	r3, 9002a6ba <_ZN8touchgfx6Canvas5closeEv+0x26>
9002a6b0:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
9002a6b4:	4628      	mov	r0, r5
9002a6b6:	f7ff fea3 	bl	9002a400 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a6ba:	4628      	mov	r0, r5
9002a6bc:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002a6c0:	f7ff fe9e 	bl	9002a400 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a6c4:	2300      	movs	r3, #0
9002a6c6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002a6ca:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002a6ce:	4298      	cmp	r0, r3
9002a6d0:	bf34      	ite	cc
9002a6d2:	2000      	movcc	r0, #0
9002a6d4:	2001      	movcs	r0, #1
9002a6d6:	bd38      	pop	{r3, r4, r5, pc}

9002a6d8 <_ZN8touchgfx6Canvas6renderEh>:
9002a6d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002a6dc:	7a85      	ldrb	r5, [r0, #10]
9002a6de:	4604      	mov	r4, r0
9002a6e0:	4369      	muls	r1, r5
9002a6e2:	1c4d      	adds	r5, r1, #1
9002a6e4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002a6e8:	122d      	asrs	r5, r5, #8
9002a6ea:	f000 8098 	beq.w	9002a81e <_ZN8touchgfx6Canvas6renderEh+0x146>
9002a6ee:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002a6f2:	2b00      	cmp	r3, #0
9002a6f4:	f000 8093 	beq.w	9002a81e <_ZN8touchgfx6Canvas6renderEh+0x146>
9002a6f8:	f7ff ffcc 	bl	9002a694 <_ZN8touchgfx6Canvas5closeEv>
9002a6fc:	4607      	mov	r7, r0
9002a6fe:	2800      	cmp	r0, #0
9002a700:	d045      	beq.n	9002a78e <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002a702:	6860      	ldr	r0, [r4, #4]
9002a704:	4e47      	ldr	r6, [pc, #284]	@ (9002a824 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
9002a706:	6803      	ldr	r3, [r0, #0]
9002a708:	6837      	ldr	r7, [r6, #0]
9002a70a:	689b      	ldr	r3, [r3, #8]
9002a70c:	4798      	blx	r3
9002a70e:	4601      	mov	r1, r0
9002a710:	4638      	mov	r0, r7
9002a712:	f7e8 fb3b 	bl	90012d8c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002a716:	4607      	mov	r7, r0
9002a718:	f7e7 fece 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
9002a71c:	6803      	ldr	r3, [r0, #0]
9002a71e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002a720:	4798      	blx	r3
9002a722:	4680      	mov	r8, r0
9002a724:	f7e7 fec8 	bl	900124b8 <_ZN8touchgfx3HAL3lcdEv>
9002a728:	6803      	ldr	r3, [r0, #0]
9002a72a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a72c:	4798      	blx	r3
9002a72e:	280b      	cmp	r0, #11
9002a730:	d85a      	bhi.n	9002a7e8 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002a732:	e8df f000 	tbb	[pc, r0]
9002a736:	5b50      	.short	0x5b50
9002a738:	3059066b 	.word	0x3059066b
9002a73c:	64646440 	.word	0x64646440
9002a740:	6464      	.short	0x6464
9002a742:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002a746:	2208      	movs	r2, #8
9002a748:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a74c:	fb91 f2f2 	sdiv	r2, r1, r2
9002a750:	fb08 2303 	mla	r3, r8, r3, r2
9002a754:	441f      	add	r7, r3
9002a756:	424b      	negs	r3, r1
9002a758:	f001 0107 	and.w	r1, r1, #7
9002a75c:	f003 0307 	and.w	r3, r3, #7
9002a760:	bf58      	it	pl
9002a762:	4259      	negpl	r1, r3
9002a764:	b2c9      	uxtb	r1, r1
9002a766:	b2ed      	uxtb	r5, r5
9002a768:	463a      	mov	r2, r7
9002a76a:	fa0f f388 	sxth.w	r3, r8
9002a76e:	f104 0014 	add.w	r0, r4, #20
9002a772:	e9cd 1500 	strd	r1, r5, [sp]
9002a776:	6861      	ldr	r1, [r4, #4]
9002a778:	f7ff fe4e 	bl	9002a418 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002a77c:	4607      	mov	r7, r0
9002a77e:	6860      	ldr	r0, [r4, #4]
9002a780:	6803      	ldr	r3, [r0, #0]
9002a782:	691b      	ldr	r3, [r3, #16]
9002a784:	4798      	blx	r3
9002a786:	6830      	ldr	r0, [r6, #0]
9002a788:	6803      	ldr	r3, [r0, #0]
9002a78a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002a78c:	4798      	blx	r3
9002a78e:	4638      	mov	r0, r7
9002a790:	b002      	add	sp, #8
9002a792:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a796:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002a79a:	2204      	movs	r2, #4
9002a79c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a7a0:	fb91 f2f2 	sdiv	r2, r1, r2
9002a7a4:	fb08 2303 	mla	r3, r8, r3, r2
9002a7a8:	441f      	add	r7, r3
9002a7aa:	424b      	negs	r3, r1
9002a7ac:	f001 0103 	and.w	r1, r1, #3
9002a7b0:	f003 0303 	and.w	r3, r3, #3
9002a7b4:	e7d4      	b.n	9002a760 <_ZN8touchgfx6Canvas6renderEh+0x88>
9002a7b6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002a7ba:	2202      	movs	r2, #2
9002a7bc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a7c0:	2900      	cmp	r1, #0
9002a7c2:	fb91 f2f2 	sdiv	r2, r1, r2
9002a7c6:	f001 0101 	and.w	r1, r1, #1
9002a7ca:	fb08 2303 	mla	r3, r8, r3, r2
9002a7ce:	bfb8      	it	lt
9002a7d0:	4249      	neglt	r1, r1
9002a7d2:	441f      	add	r7, r3
9002a7d4:	e7c6      	b.n	9002a764 <_ZN8touchgfx6Canvas6renderEh+0x8c>
9002a7d6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a7da:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a7de:	fb08 f303 	mul.w	r3, r8, r3
9002a7e2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002a7e6:	441f      	add	r7, r3
9002a7e8:	2100      	movs	r1, #0
9002a7ea:	e7bc      	b.n	9002a766 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002a7ec:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a7f0:	2103      	movs	r1, #3
9002a7f2:	fb08 f203 	mul.w	r2, r8, r3
9002a7f6:	89a3      	ldrh	r3, [r4, #12]
9002a7f8:	fb13 2301 	smlabb	r3, r3, r1, r2
9002a7fc:	e7f3      	b.n	9002a7e6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002a7fe:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a802:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a806:	fb08 2303 	mla	r3, r8, r3, r2
9002a80a:	e7ec      	b.n	9002a7e6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002a80c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002a810:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a814:	fb08 f303 	mul.w	r3, r8, r3
9002a818:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002a81c:	e7e3      	b.n	9002a7e6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002a81e:	2701      	movs	r7, #1
9002a820:	e7b5      	b.n	9002a78e <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002a822:	bf00      	nop
9002a824:	240218cc 	.word	0x240218cc

9002a828 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002a828:	4b06      	ldr	r3, [pc, #24]	@ (9002a844 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
9002a82a:	b510      	push	{r4, lr}
9002a82c:	781b      	ldrb	r3, [r3, #0]
9002a82e:	2b01      	cmp	r3, #1
9002a830:	d107      	bne.n	9002a842 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002a832:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002a836:	680b      	ldr	r3, [r1, #0]
9002a838:	6814      	ldr	r4, [r2, #0]
9002a83a:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002a83e:	6013      	str	r3, [r2, #0]
9002a840:	600c      	str	r4, [r1, #0]
9002a842:	bd10      	pop	{r4, pc}
9002a844:	240218c4 	.word	0x240218c4

9002a848 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
9002a848:	b513      	push	{r0, r1, r4, lr}
9002a84a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002a84e:	4604      	mov	r4, r0
9002a850:	e9cd 2100 	strd	r2, r1, [sp]
9002a854:	b9a3      	cbnz	r3, 9002a880 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002a856:	466a      	mov	r2, sp
9002a858:	a901      	add	r1, sp, #4
9002a85a:	4620      	mov	r0, r4
9002a85c:	f7ff ffe4 	bl	9002a828 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002a860:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002a862:	9901      	ldr	r1, [sp, #4]
9002a864:	9a00      	ldr	r2, [sp, #0]
9002a866:	1ac9      	subs	r1, r1, r3
9002a868:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002a86a:	1ad2      	subs	r2, r2, r3
9002a86c:	9101      	str	r1, [sp, #4]
9002a86e:	2a00      	cmp	r2, #0
9002a870:	9200      	str	r2, [sp, #0]
9002a872:	da0b      	bge.n	9002a88c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002a874:	2301      	movs	r3, #1
9002a876:	2900      	cmp	r1, #0
9002a878:	da0e      	bge.n	9002a898 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002a87a:	f043 0304 	orr.w	r3, r3, #4
9002a87e:	e013      	b.n	9002a8a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002a880:	f7ff ff08 	bl	9002a694 <_ZN8touchgfx6Canvas5closeEv>
9002a884:	2800      	cmp	r0, #0
9002a886:	d1e6      	bne.n	9002a856 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
9002a888:	b002      	add	sp, #8
9002a88a:	bd10      	pop	{r4, pc}
9002a88c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002a88e:	429a      	cmp	r2, r3
9002a890:	bfac      	ite	ge
9002a892:	2302      	movge	r3, #2
9002a894:	2300      	movlt	r3, #0
9002a896:	e7ee      	b.n	9002a876 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
9002a898:	6d60      	ldr	r0, [r4, #84]	@ 0x54
9002a89a:	4281      	cmp	r1, r0
9002a89c:	bfac      	ite	ge
9002a89e:	2008      	movge	r0, #8
9002a8a0:	2000      	movlt	r0, #0
9002a8a2:	4318      	orrs	r0, r3
9002a8a4:	b2c3      	uxtb	r3, r0
9002a8a6:	b158      	cbz	r0, 9002a8c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
9002a8a8:	2200      	movs	r2, #0
9002a8aa:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002a8ae:	9901      	ldr	r1, [sp, #4]
9002a8b0:	9a00      	ldr	r2, [sp, #0]
9002a8b2:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002a8b4:	6722      	str	r2, [r4, #112]	@ 0x70
9002a8b6:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
9002a8ba:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002a8be:	e7e3      	b.n	9002a888 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002a8c0:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002a8c4:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002a8c8:	4298      	cmp	r0, r3
9002a8ca:	d803      	bhi.n	9002a8d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002a8cc:	f104 0014 	add.w	r0, r4, #20
9002a8d0:	f7eb fdb8 	bl	90016444 <_ZN8touchgfx7Outline6moveToEii>
9002a8d4:	2301      	movs	r3, #1
9002a8d6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002a8da:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002a8de:	2300      	movs	r3, #0
9002a8e0:	e7e5      	b.n	9002a8ae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002a8e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002a8e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002a8e4:	ab02      	add	r3, sp, #8
9002a8e6:	4604      	mov	r4, r0
9002a8e8:	9101      	str	r1, [sp, #4]
9002a8ea:	a901      	add	r1, sp, #4
9002a8ec:	f843 2d08 	str.w	r2, [r3, #-8]!
9002a8f0:	461a      	mov	r2, r3
9002a8f2:	f7ff ff99 	bl	9002a828 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002a8f6:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002a8f8:	9901      	ldr	r1, [sp, #4]
9002a8fa:	9a00      	ldr	r2, [sp, #0]
9002a8fc:	1ac9      	subs	r1, r1, r3
9002a8fe:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002a900:	1ad2      	subs	r2, r2, r3
9002a902:	9101      	str	r1, [sp, #4]
9002a904:	2a00      	cmp	r2, #0
9002a906:	9200      	str	r2, [sp, #0]
9002a908:	db1c      	blt.n	9002a944 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002a90a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002a90c:	429a      	cmp	r2, r3
9002a90e:	bfac      	ite	ge
9002a910:	2002      	movge	r0, #2
9002a912:	2000      	movlt	r0, #0
9002a914:	2900      	cmp	r1, #0
9002a916:	db17      	blt.n	9002a948 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002a918:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9002a91a:	4299      	cmp	r1, r3
9002a91c:	bfac      	ite	ge
9002a91e:	2308      	movge	r3, #8
9002a920:	2300      	movlt	r3, #0
9002a922:	4303      	orrs	r3, r0
9002a924:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
9002a928:	b2dd      	uxtb	r5, r3
9002a92a:	b978      	cbnz	r0, 9002a94c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
9002a92c:	f104 0014 	add.w	r0, r4, #20
9002a930:	f7ff fd66 	bl	9002a400 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a934:	9b01      	ldr	r3, [sp, #4]
9002a936:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
9002a93a:	6623      	str	r3, [r4, #96]	@ 0x60
9002a93c:	9b00      	ldr	r3, [sp, #0]
9002a93e:	6663      	str	r3, [r4, #100]	@ 0x64
9002a940:	b002      	add	sp, #8
9002a942:	bd70      	pop	{r4, r5, r6, pc}
9002a944:	2001      	movs	r0, #1
9002a946:	e7e5      	b.n	9002a914 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002a948:	2304      	movs	r3, #4
9002a94a:	e7ea      	b.n	9002a922 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
9002a94c:	b113      	cbz	r3, 9002a954 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002a94e:	ea10 0305 	ands.w	r3, r0, r5
9002a952:	d11c      	bne.n	9002a98e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002a954:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
9002a958:	f104 0614 	add.w	r6, r4, #20
9002a95c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002a960:	b98b      	cbnz	r3, 9002a986 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002a962:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002a966:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002a96a:	4298      	cmp	r0, r3
9002a96c:	d802      	bhi.n	9002a974 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002a96e:	4630      	mov	r0, r6
9002a970:	f7eb fd68 	bl	90016444 <_ZN8touchgfx7Outline6moveToEii>
9002a974:	2301      	movs	r3, #1
9002a976:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002a97a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002a97e:	4630      	mov	r0, r6
9002a980:	e9dd 2100 	ldrd	r2, r1, [sp]
9002a984:	e7d4      	b.n	9002a930 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002a986:	4630      	mov	r0, r6
9002a988:	f7ff fd3a 	bl	9002a400 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a98c:	e7f7      	b.n	9002a97e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002a98e:	461d      	mov	r5, r3
9002a990:	e7d0      	b.n	9002a934 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002a994 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
9002a994:	b538      	push	{r3, r4, r5, lr}
9002a996:	ed2d 8b10 	vpush	{d8-d15}
9002a99a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002a99e:	4605      	mov	r5, r0
9002a9a0:	eeb0 ca40 	vmov.f32	s24, s0
9002a9a4:	460c      	mov	r4, r1
9002a9a6:	eef0 ca60 	vmov.f32	s25, s1
9002a9aa:	ed9f ba57 	vldr	s22, [pc, #348]	@ 9002ab08 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002a9ae:	eeb0 da41 	vmov.f32	s26, s2
9002a9b2:	eef0 da61 	vmov.f32	s27, s3
9002a9b6:	eeb0 ea42 	vmov.f32	s28, s4
9002a9ba:	eef0 ea62 	vmov.f32	s29, s5
9002a9be:	eef0 aa6b 	vmov.f32	s21, s23
9002a9c2:	2c08      	cmp	r4, #8
9002a9c4:	d86e      	bhi.n	9002aaa4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002a9c6:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002a9ca:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002a9ce:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002a9d2:	ee3e 7aec 	vsub.f32	s14, s29, s25
9002a9d6:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002a9da:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002a9de:	ee7c faad 	vadd.f32	s31, s25, s27
9002a9e2:	eee6 7a07 	vfma.f32	s15, s12, s14
9002a9e6:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002a9ea:	ee3d aaae 	vadd.f32	s20, s27, s29
9002a9ee:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002a9f2:	ee6f faab 	vmul.f32	s31, s31, s23
9002a9f6:	ee69 9aab 	vmul.f32	s19, s19, s23
9002a9fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002a9fe:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002aa02:	ee7f 8a29 	vadd.f32	s17, s30, s19
9002aa06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa0a:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002aa0e:	ee68 8aab 	vmul.f32	s17, s17, s23
9002aa12:	bf48      	it	mi
9002aa14:	eef1 7a67 	vnegmi.f32	s15, s15
9002aa18:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002aa1c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
9002aa20:	eef4 7acb 	vcmpe.f32	s15, s22
9002aa24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa28:	dd3f      	ble.n	9002aaaa <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
9002aa2a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002aa2e:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002aa32:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002aa36:	ee27 7a06 	vmul.f32	s14, s14, s12
9002aa3a:	eef4 7ac7 	vcmpe.f32	s15, s14
9002aa3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa42:	d847      	bhi.n	9002aad4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002aa44:	ee7e 0a4d 	vsub.f32	s1, s28, s26
9002aa48:	ee3e 0aed 	vsub.f32	s0, s29, s27
9002aa4c:	f000 fa57 	bl	9002aefe <atan2f>
9002aa50:	eeb0 8a40 	vmov.f32	s16, s0
9002aa54:	ee7d 0a4c 	vsub.f32	s1, s26, s24
9002aa58:	ee3d 0aec 	vsub.f32	s0, s27, s25
9002aa5c:	f000 fa4f 	bl	9002aefe <atan2f>
9002aa60:	ee38 0a40 	vsub.f32	s0, s16, s0
9002aa64:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002ab0c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
9002aa68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002aa6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa70:	bf48      	it	mi
9002aa72:	eeb1 0a40 	vnegmi.f32	s0, s0
9002aa76:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002aa7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa7e:	bfa4      	itt	ge
9002aa80:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 9002ab10 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
9002aa84:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002aa88:	eddf 7a22 	vldr	s15, [pc, #136]	@ 9002ab14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
9002aa8c:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002aa90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aa94:	d51e      	bpl.n	9002aad4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002aa96:	eef0 0a49 	vmov.f32	s1, s18
9002aa9a:	4628      	mov	r0, r5
9002aa9c:	eeb0 0a68 	vmov.f32	s0, s17
9002aaa0:	f7e9 fb6e 	bl	90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002aaa4:	ecbd 8b10 	vpop	{d8-d15}
9002aaa8:	bd38      	pop	{r3, r4, r5, pc}
9002aaaa:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002aaae:	eeb0 7a68 	vmov.f32	s14, s17
9002aab2:	eef0 6a49 	vmov.f32	s13, s18
9002aab6:	eea7 7aea 	vfms.f32	s14, s15, s21
9002aaba:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002aabe:	eee7 6aea 	vfms.f32	s13, s15, s21
9002aac2:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002aac6:	eee7 7a07 	vfma.f32	s15, s14, s14
9002aaca:	eef4 7ac6 	vcmpe.f32	s15, s12
9002aace:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aad2:	d9e0      	bls.n	9002aa96 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
9002aad4:	3401      	adds	r4, #1
9002aad6:	eef0 0a6c 	vmov.f32	s1, s25
9002aada:	eeb0 0a4c 	vmov.f32	s0, s24
9002aade:	4628      	mov	r0, r5
9002aae0:	4621      	mov	r1, r4
9002aae2:	eef0 2a49 	vmov.f32	s5, s18
9002aae6:	eeb0 2a68 	vmov.f32	s4, s17
9002aaea:	eef0 1a6f 	vmov.f32	s3, s31
9002aaee:	eeb0 1a4f 	vmov.f32	s2, s30
9002aaf2:	f7ff ff4f 	bl	9002a994 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9002aaf6:	eef0 da4a 	vmov.f32	s27, s20
9002aafa:	eeb0 da69 	vmov.f32	s26, s19
9002aafe:	eef0 ca49 	vmov.f32	s25, s18
9002ab02:	eeb0 ca68 	vmov.f32	s24, s17
9002ab06:	e75c      	b.n	9002a9c2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
9002ab08:	2edbe6ff 	.word	0x2edbe6ff
9002ab0c:	40490fdb 	.word	0x40490fdb
9002ab10:	40c90fdb 	.word	0x40c90fdb
9002ab14:	3dcccccd 	.word	0x3dcccccd

9002ab18 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
9002ab18:	b530      	push	{r4, r5, lr}
9002ab1a:	ed2d 8b10 	vpush	{d8-d15}
9002ab1e:	eef0 8a40 	vmov.f32	s17, s0
9002ab22:	b085      	sub	sp, #20
9002ab24:	eef0 9a60 	vmov.f32	s19, s1
9002ab28:	4604      	mov	r4, r0
9002ab2a:	eef0 fa41 	vmov.f32	s31, s2
9002ab2e:	460d      	mov	r5, r1
9002ab30:	eeb0 fa61 	vmov.f32	s30, s3
9002ab34:	eef0 ba42 	vmov.f32	s23, s4
9002ab38:	eeb0 ca62 	vmov.f32	s24, s5
9002ab3c:	eef0 aa43 	vmov.f32	s21, s6
9002ab40:	eeb0 ba63 	vmov.f32	s22, s7
9002ab44:	2d08      	cmp	r5, #8
9002ab46:	f200 8113 	bhi.w	9002ad70 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
9002ab4a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002ab4e:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002ab52:	ee7f 6aab 	vadd.f32	s13, s31, s23
9002ab56:	ee38 daaf 	vadd.f32	s26, s17, s31
9002ab5a:	ee26 6a27 	vmul.f32	s12, s12, s15
9002ab5e:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002ab62:	ee2d da27 	vmul.f32	s26, s26, s15
9002ab66:	ed8d 6a01 	vstr	s12, [sp, #4]
9002ab6a:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002ab6e:	ee6c caa7 	vmul.f32	s25, s25, s15
9002ab72:	eeb0 ea4d 	vmov.f32	s28, s26
9002ab76:	ee79 da8f 	vadd.f32	s27, s19, s30
9002ab7a:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002ab7e:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002ab82:	ee66 6a27 	vmul.f32	s13, s12, s15
9002ab86:	ee6d daa7 	vmul.f32	s27, s27, s15
9002ab8a:	edcd 6a03 	vstr	s13, [sp, #12]
9002ab8e:	eef0 6a6c 	vmov.f32	s13, s25
9002ab92:	eef0 ea6d 	vmov.f32	s29, s27
9002ab96:	ee2e ea27 	vmul.f32	s28, s28, s15
9002ab9a:	eee7 6a27 	vfma.f32	s13, s14, s15
9002ab9e:	eee7 ea27 	vfma.f32	s29, s14, s15
9002aba2:	ee26 7aa7 	vmul.f32	s14, s13, s15
9002aba6:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002abaa:	eef0 6a67 	vmov.f32	s13, s15
9002abae:	ed8d 7a02 	vstr	s14, [sp, #8]
9002abb2:	ed9d 7a03 	vldr	s14, [sp, #12]
9002abb6:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002abba:	ed9d 7a02 	vldr	s14, [sp, #8]
9002abbe:	ee3e aa87 	vadd.f32	s20, s29, s14
9002abc2:	ee29 9a27 	vmul.f32	s18, s18, s15
9002abc6:	ee2a aa27 	vmul.f32	s20, s20, s15
9002abca:	2d00      	cmp	r5, #0
9002abcc:	f000 810b 	beq.w	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002abd0:	ee7a 5ae8 	vsub.f32	s11, s21, s17
9002abd4:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002ae2c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002abd8:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002abdc:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002abe0:	ee3f 6aea 	vsub.f32	s12, s31, s21
9002abe4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9002abe8:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002abec:	eea6 7a27 	vfma.f32	s14, s12, s15
9002abf0:	ee3c 6a4b 	vsub.f32	s12, s24, s22
9002abf4:	ee25 6ac6 	vnmul.f32	s12, s11, s12
9002abf8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002abfc:	eea5 6a27 	vfma.f32	s12, s10, s15
9002ac00:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
9002ac04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac08:	bf48      	it	mi
9002ac0a:	eeb1 7a47 	vnegmi.f32	s14, s14
9002ac0e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002ac12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac16:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002ac1a:	bf48      	it	mi
9002ac1c:	eeb1 6a46 	vnegmi.f32	s12, s12
9002ac20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac24:	f340 80a8 	ble.w	9002ad78 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
9002ac28:	eeb4 6ae4 	vcmpe.f32	s12, s9
9002ac2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac30:	dd5a      	ble.n	9002ace8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002ac32:	ee65 5aa5 	vmul.f32	s11, s11, s11
9002ac36:	ee37 7a06 	vadd.f32	s14, s14, s12
9002ac3a:	eee7 5aa7 	vfma.f32	s11, s15, s15
9002ac3e:	ee27 7a07 	vmul.f32	s14, s14, s14
9002ac42:	ee65 7a85 	vmul.f32	s15, s11, s10
9002ac46:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002ac4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac4e:	f200 80ca 	bhi.w	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002ac52:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002ac56:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002ac5a:	f000 f950 	bl	9002aefe <atan2f>
9002ac5e:	eeb0 8a40 	vmov.f32	s16, s0
9002ac62:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002ac66:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002ac6a:	f000 f948 	bl	9002aefe <atan2f>
9002ac6e:	ee38 fa40 	vsub.f32	s30, s16, s0
9002ac72:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002ac76:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002ac7a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
9002ac7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac82:	bf48      	it	mi
9002ac84:	eeb1 fa4f 	vnegmi.f32	s30, s30
9002ac88:	f000 f939 	bl	9002aefe <atan2f>
9002ac8c:	ee30 0a48 	vsub.f32	s0, s0, s16
9002ac90:	eddf 7a67 	vldr	s15, [pc, #412]	@ 9002ae30 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002ac94:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002ac98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac9c:	eeb4 fae7 	vcmpe.f32	s30, s15
9002aca0:	eddf 7a63 	vldr	s15, [pc, #396]	@ 9002ae30 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002aca4:	bf48      	it	mi
9002aca6:	eeb1 0a40 	vnegmi.f32	s0, s0
9002acaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acae:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002acb2:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002ae34 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002acb6:	bfa4      	itt	ge
9002acb8:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 9002ae38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002acbc:	ee37 fa4f 	vsubge.f32	s30, s14, s30
9002acc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acc4:	bfa4      	itt	ge
9002acc6:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 9002ae38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002acca:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002acce:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002acd2:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002acd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acda:	f140 8084 	bpl.w	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002acde:	eef0 0a4a 	vmov.f32	s1, s20
9002ace2:	eeb0 0a49 	vmov.f32	s0, s18
9002ace6:	e040      	b.n	9002ad6a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
9002ace8:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002acec:	ee27 7a07 	vmul.f32	s14, s14, s14
9002acf0:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002acf4:	ee67 7a85 	vmul.f32	s15, s15, s10
9002acf8:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002acfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad00:	d871      	bhi.n	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002ad02:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002ad06:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002ad0a:	f000 f8f8 	bl	9002aefe <atan2f>
9002ad0e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002ad12:	eeb0 8a40 	vmov.f32	s16, s0
9002ad16:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002ad1a:	f000 f8f0 	bl	9002aefe <atan2f>
9002ad1e:	ee38 0a40 	vsub.f32	s0, s16, s0
9002ad22:	eddf 7a43 	vldr	s15, [pc, #268]	@ 9002ae30 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002ad26:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002ad2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad2e:	bf48      	it	mi
9002ad30:	eeb1 0a40 	vnegmi.f32	s0, s0
9002ad34:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002ad38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad3c:	bfa4      	itt	ge
9002ad3e:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 9002ae38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002ad42:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002ad46:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002ae34 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002ad4a:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002ad4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad52:	d548      	bpl.n	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002ad54:	eef0 0a4f 	vmov.f32	s1, s30
9002ad58:	4620      	mov	r0, r4
9002ad5a:	eeb0 0a6f 	vmov.f32	s0, s31
9002ad5e:	f7e9 fa0f 	bl	90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002ad62:	eef0 0a4c 	vmov.f32	s1, s24
9002ad66:	eeb0 0a6b 	vmov.f32	s0, s23
9002ad6a:	4620      	mov	r0, r4
9002ad6c:	f7e9 fa08 	bl	90014180 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002ad70:	b005      	add	sp, #20
9002ad72:	ecbd 8b10 	vpop	{d8-d15}
9002ad76:	bd30      	pop	{r4, r5, pc}
9002ad78:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002ae2c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002ad7c:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002ad80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad84:	dd19      	ble.n	9002adba <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
9002ad86:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002ad8a:	ee26 7a06 	vmul.f32	s14, s12, s12
9002ad8e:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002ad92:	ee67 7a85 	vmul.f32	s15, s15, s10
9002ad96:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002ad9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad9e:	d822      	bhi.n	9002ade6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002ada0:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002ada4:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002ada8:	f000 f8a9 	bl	9002aefe <atan2f>
9002adac:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002adb0:	eeb0 8a40 	vmov.f32	s16, s0
9002adb4:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002adb8:	e7af      	b.n	9002ad1a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002adba:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002adbe:	eeb0 7a49 	vmov.f32	s14, s18
9002adc2:	eeb0 6a4a 	vmov.f32	s12, s20
9002adc6:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002adca:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002adce:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002add2:	ee66 7a06 	vmul.f32	s15, s12, s12
9002add6:	eee7 7a07 	vfma.f32	s15, s14, s14
9002adda:	eef4 7ac5 	vcmpe.f32	s15, s10
9002adde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ade2:	f67f af7c 	bls.w	9002acde <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002ade6:	3501      	adds	r5, #1
9002ade8:	eef0 0a69 	vmov.f32	s1, s19
9002adec:	eeb0 0a68 	vmov.f32	s0, s17
9002adf0:	4620      	mov	r0, r4
9002adf2:	4629      	mov	r1, r5
9002adf4:	eef0 3a4a 	vmov.f32	s7, s20
9002adf8:	eeb0 3a49 	vmov.f32	s6, s18
9002adfc:	eef0 2a6e 	vmov.f32	s5, s29
9002ae00:	eeb0 2a4e 	vmov.f32	s4, s28
9002ae04:	eef0 1a6d 	vmov.f32	s3, s27
9002ae08:	eeb0 1a4d 	vmov.f32	s2, s26
9002ae0c:	f7ff fe84 	bl	9002ab18 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9002ae10:	eeb0 ca6c 	vmov.f32	s24, s25
9002ae14:	eddd ba01 	vldr	s23, [sp, #4]
9002ae18:	eef0 9a4a 	vmov.f32	s19, s20
9002ae1c:	ed9d fa02 	vldr	s30, [sp, #8]
9002ae20:	eef0 8a49 	vmov.f32	s17, s18
9002ae24:	eddd fa03 	vldr	s31, [sp, #12]
9002ae28:	e68c      	b.n	9002ab44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002ae2a:	bf00      	nop
9002ae2c:	2edbe6ff 	.word	0x2edbe6ff
9002ae30:	40490fdb 	.word	0x40490fdb
9002ae34:	3dcccccd 	.word	0x3dcccccd
9002ae38:	40c90fdb 	.word	0x40c90fdb

9002ae3c <_ZN8touchgfx6CanvasD1Ev>:
9002ae3c:	4b04      	ldr	r3, [pc, #16]	@ (9002ae50 <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002ae3e:	b510      	push	{r4, lr}
9002ae40:	4604      	mov	r4, r0
9002ae42:	f840 3b14 	str.w	r3, [r0], #20
9002ae46:	f7ea fe05 	bl	90015a54 <_ZN8touchgfx7OutlineD1Ev>
9002ae4a:	4620      	mov	r0, r4
9002ae4c:	bd10      	pop	{r4, pc}
9002ae4e:	bf00      	nop
9002ae50:	9002fca0 	.word	0x9002fca0

9002ae54 <_ZN8touchgfx6CanvasD0Ev>:
9002ae54:	b510      	push	{r4, lr}
9002ae56:	4604      	mov	r4, r0
9002ae58:	f7ff fff0 	bl	9002ae3c <_ZN8touchgfx6CanvasD1Ev>
9002ae5c:	2174      	movs	r1, #116	@ 0x74
9002ae5e:	4620      	mov	r0, r4
9002ae60:	f000 f826 	bl	9002aeb0 <_ZdlPvj>
9002ae64:	4620      	mov	r0, r4
9002ae66:	bd10      	pop	{r4, pc}

9002ae68 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002ae68:	790b      	ldrb	r3, [r1, #4]
9002ae6a:	2b00      	cmp	r3, #0
9002ae6c:	bf0c      	ite	eq
9002ae6e:	2301      	moveq	r3, #1
9002ae70:	2300      	movne	r3, #0
9002ae72:	b570      	push	{r4, r5, r6, lr}
9002ae74:	4604      	mov	r4, r0
9002ae76:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
9002ae7a:	460e      	mov	r6, r1
9002ae7c:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9002ae80:	d109      	bne.n	9002ae96 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002ae82:	b14d      	cbz	r5, 9002ae98 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
9002ae84:	7933      	ldrb	r3, [r6, #4]
9002ae86:	2b01      	cmp	r3, #1
9002ae88:	d10c      	bne.n	9002aea4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002ae8a:	6823      	ldr	r3, [r4, #0]
9002ae8c:	4620      	mov	r0, r4
9002ae8e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9002ae90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002ae94:	4718      	bx	r3
9002ae96:	b12d      	cbz	r5, 9002aea4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002ae98:	6823      	ldr	r3, [r4, #0]
9002ae9a:	4620      	mov	r0, r4
9002ae9c:	695b      	ldr	r3, [r3, #20]
9002ae9e:	4798      	blx	r3
9002aea0:	2d00      	cmp	r5, #0
9002aea2:	d1ef      	bne.n	9002ae84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9002aea4:	bd70      	pop	{r4, r5, r6, pc}

9002aea6 <__aeabi_atexit>:
9002aea6:	460b      	mov	r3, r1
9002aea8:	4601      	mov	r1, r0
9002aeaa:	4618      	mov	r0, r3
9002aeac:	f000 bc5a 	b.w	9002b764 <__cxa_atexit>

9002aeb0 <_ZdlPvj>:
9002aeb0:	f000 b812 	b.w	9002aed8 <_ZdlPv>

9002aeb4 <__cxa_guard_acquire>:
9002aeb4:	6802      	ldr	r2, [r0, #0]
9002aeb6:	07d2      	lsls	r2, r2, #31
9002aeb8:	4603      	mov	r3, r0
9002aeba:	d405      	bmi.n	9002aec8 <__cxa_guard_acquire+0x14>
9002aebc:	7842      	ldrb	r2, [r0, #1]
9002aebe:	b102      	cbz	r2, 9002aec2 <__cxa_guard_acquire+0xe>
9002aec0:	deff      	udf	#255	@ 0xff
9002aec2:	2001      	movs	r0, #1
9002aec4:	7058      	strb	r0, [r3, #1]
9002aec6:	4770      	bx	lr
9002aec8:	2000      	movs	r0, #0
9002aeca:	4770      	bx	lr

9002aecc <__cxa_guard_release>:
9002aecc:	2301      	movs	r3, #1
9002aece:	6003      	str	r3, [r0, #0]
9002aed0:	4770      	bx	lr

9002aed2 <__cxa_pure_virtual>:
9002aed2:	b508      	push	{r3, lr}
9002aed4:	f000 f80e 	bl	9002aef4 <_ZSt9terminatev>

9002aed8 <_ZdlPv>:
9002aed8:	f000 bb8e 	b.w	9002b5f8 <free>

9002aedc <_ZN10__cxxabiv111__terminateEPFvvE>:
9002aedc:	b508      	push	{r3, lr}
9002aede:	4780      	blx	r0
9002aee0:	f000 fb57 	bl	9002b592 <abort>

9002aee4 <_ZSt13get_terminatev>:
9002aee4:	4b02      	ldr	r3, [pc, #8]	@ (9002aef0 <_ZSt13get_terminatev+0xc>)
9002aee6:	6818      	ldr	r0, [r3, #0]
9002aee8:	f3bf 8f5b 	dmb	ish
9002aeec:	4770      	bx	lr
9002aeee:	bf00      	nop
9002aef0:	24000104 	.word	0x24000104

9002aef4 <_ZSt9terminatev>:
9002aef4:	b508      	push	{r3, lr}
9002aef6:	f7ff fff5 	bl	9002aee4 <_ZSt13get_terminatev>
9002aefa:	f7ff ffef 	bl	9002aedc <_ZN10__cxxabiv111__terminateEPFvvE>

9002aefe <atan2f>:
9002aefe:	f000 b9cf 	b.w	9002b2a0 <__ieee754_atan2f>
	...

9002af04 <sqrtf>:
9002af04:	b508      	push	{r3, lr}
9002af06:	ed2d 8b02 	vpush	{d8}
9002af0a:	eeb0 8a40 	vmov.f32	s16, s0
9002af0e:	f000 f9c4 	bl	9002b29a <__ieee754_sqrtf>
9002af12:	eeb4 8a48 	vcmp.f32	s16, s16
9002af16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002af1a:	d60c      	bvs.n	9002af36 <sqrtf+0x32>
9002af1c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002af3c <sqrtf+0x38>
9002af20:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002af24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002af28:	d505      	bpl.n	9002af36 <sqrtf+0x32>
9002af2a:	f000 fee7 	bl	9002bcfc <__errno>
9002af2e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002af32:	2321      	movs	r3, #33	@ 0x21
9002af34:	6003      	str	r3, [r0, #0]
9002af36:	ecbd 8b02 	vpop	{d8}
9002af3a:	bd08      	pop	{r3, pc}
9002af3c:	00000000 	.word	0x00000000

9002af40 <sinf_poly>:
9002af40:	07cb      	lsls	r3, r1, #31
9002af42:	d412      	bmi.n	9002af6a <sinf_poly+0x2a>
9002af44:	ee21 5b00 	vmul.f64	d5, d1, d0
9002af48:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002af4c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002af50:	eea6 7b01 	vfma.f64	d7, d6, d1
9002af54:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002af58:	ee21 1b05 	vmul.f64	d1, d1, d5
9002af5c:	eea6 0b05 	vfma.f64	d0, d6, d5
9002af60:	eea7 0b01 	vfma.f64	d0, d7, d1
9002af64:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002af68:	4770      	bx	lr
9002af6a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002af6e:	ee21 5b01 	vmul.f64	d5, d1, d1
9002af72:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002af76:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002af7a:	eea1 7b06 	vfma.f64	d7, d1, d6
9002af7e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002af82:	eea1 0b06 	vfma.f64	d0, d1, d6
9002af86:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002af8a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002af8e:	eea5 0b06 	vfma.f64	d0, d5, d6
9002af92:	e7e5      	b.n	9002af60 <sinf_poly+0x20>
9002af94:	0000      	movs	r0, r0
	...

9002af98 <sinf>:
9002af98:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002af9a:	ee10 4a10 	vmov	r4, s0
9002af9e:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002afa2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002afa6:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002afaa:	eef0 7a40 	vmov.f32	s15, s0
9002afae:	d218      	bcs.n	9002afe2 <sinf+0x4a>
9002afb0:	ee26 1b06 	vmul.f64	d1, d6, d6
9002afb4:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002afb8:	d20a      	bcs.n	9002afd0 <sinf+0x38>
9002afba:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
9002afbe:	d103      	bne.n	9002afc8 <sinf+0x30>
9002afc0:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002afc4:	ed8d 1a01 	vstr	s2, [sp, #4]
9002afc8:	eeb0 0a67 	vmov.f32	s0, s15
9002afcc:	b003      	add	sp, #12
9002afce:	bd30      	pop	{r4, r5, pc}
9002afd0:	483b      	ldr	r0, [pc, #236]	@ (9002b0c0 <sinf+0x128>)
9002afd2:	eeb0 0b46 	vmov.f64	d0, d6
9002afd6:	2100      	movs	r1, #0
9002afd8:	b003      	add	sp, #12
9002afda:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002afde:	f7ff bfaf 	b.w	9002af40 <sinf_poly>
9002afe2:	f240 422e 	movw	r2, #1070	@ 0x42e
9002afe6:	4293      	cmp	r3, r2
9002afe8:	d824      	bhi.n	9002b034 <sinf+0x9c>
9002afea:	4b35      	ldr	r3, [pc, #212]	@ (9002b0c0 <sinf+0x128>)
9002afec:	ed93 7b08 	vldr	d7, [r3, #32]
9002aff0:	ee26 7b07 	vmul.f64	d7, d6, d7
9002aff4:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002aff8:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002affc:	ee17 1a90 	vmov	r1, s15
9002b000:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002b004:	1609      	asrs	r1, r1, #24
9002b006:	ee07 1a90 	vmov	s15, r1
9002b00a:	f001 0203 	and.w	r2, r1, #3
9002b00e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b012:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002b016:	ed92 0b00 	vldr	d0, [r2]
9002b01a:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002b01e:	f011 0f02 	tst.w	r1, #2
9002b022:	eea5 6b47 	vfms.f64	d6, d5, d7
9002b026:	bf08      	it	eq
9002b028:	4618      	moveq	r0, r3
9002b02a:	ee26 1b06 	vmul.f64	d1, d6, d6
9002b02e:	ee20 0b06 	vmul.f64	d0, d0, d6
9002b032:	e7d1      	b.n	9002afd8 <sinf+0x40>
9002b034:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002b038:	d237      	bcs.n	9002b0aa <sinf+0x112>
9002b03a:	4922      	ldr	r1, [pc, #136]	@ (9002b0c4 <sinf+0x12c>)
9002b03c:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002b040:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002b044:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b048:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002b04c:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002b050:	6a10      	ldr	r0, [r2, #32]
9002b052:	6912      	ldr	r2, [r2, #16]
9002b054:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002b058:	40ab      	lsls	r3, r5
9002b05a:	fba0 5003 	umull	r5, r0, r0, r3
9002b05e:	4359      	muls	r1, r3
9002b060:	fbe3 0102 	umlal	r0, r1, r3, r2
9002b064:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002b068:	0f9d      	lsrs	r5, r3, #30
9002b06a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002b06e:	1ac9      	subs	r1, r1, r3
9002b070:	f7d5 fb14 	bl	9000069c <__aeabi_l2d>
9002b074:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b078:	4b11      	ldr	r3, [pc, #68]	@ (9002b0c0 <sinf+0x128>)
9002b07a:	f004 0203 	and.w	r2, r4, #3
9002b07e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b082:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 9002b0b8 <sinf+0x120>
9002b086:	ed92 0b00 	vldr	d0, [r2]
9002b08a:	ec41 0b17 	vmov	d7, r0, r1
9002b08e:	f014 0f02 	tst.w	r4, #2
9002b092:	ee27 7b06 	vmul.f64	d7, d7, d6
9002b096:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b09a:	4629      	mov	r1, r5
9002b09c:	bf08      	it	eq
9002b09e:	4618      	moveq	r0, r3
9002b0a0:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b0a4:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b0a8:	e796      	b.n	9002afd8 <sinf+0x40>
9002b0aa:	b003      	add	sp, #12
9002b0ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002b0b0:	f000 b8e4 	b.w	9002b27c <__math_invalidf>
9002b0b4:	f3af 8000 	nop.w
9002b0b8:	54442d18 	.word	0x54442d18
9002b0bc:	3c1921fb 	.word	0x3c1921fb
9002b0c0:	9002fd10 	.word	0x9002fd10
9002b0c4:	9002fcac 	.word	0x9002fcac

9002b0c8 <sinf_poly>:
9002b0c8:	07cb      	lsls	r3, r1, #31
9002b0ca:	d412      	bmi.n	9002b0f2 <sinf_poly+0x2a>
9002b0cc:	ee21 5b00 	vmul.f64	d5, d1, d0
9002b0d0:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002b0d4:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002b0d8:	eea6 7b01 	vfma.f64	d7, d6, d1
9002b0dc:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002b0e0:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b0e4:	eea6 0b05 	vfma.f64	d0, d6, d5
9002b0e8:	eea7 0b01 	vfma.f64	d0, d7, d1
9002b0ec:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b0f0:	4770      	bx	lr
9002b0f2:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002b0f6:	ee21 5b01 	vmul.f64	d5, d1, d1
9002b0fa:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002b0fe:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002b102:	eea1 7b06 	vfma.f64	d7, d1, d6
9002b106:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002b10a:	eea1 0b06 	vfma.f64	d0, d1, d6
9002b10e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002b112:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b116:	eea5 0b06 	vfma.f64	d0, d5, d6
9002b11a:	e7e5      	b.n	9002b0e8 <sinf_poly+0x20>
9002b11c:	0000      	movs	r0, r0
	...

9002b120 <cosf>:
9002b120:	b538      	push	{r3, r4, r5, lr}
9002b122:	ee10 4a10 	vmov	r4, s0
9002b126:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002b12a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002b12e:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002b132:	d21f      	bcs.n	9002b174 <cosf+0x54>
9002b134:	ee27 7b07 	vmul.f64	d7, d7, d7
9002b138:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002b13c:	f0c0 8082 	bcc.w	9002b244 <cosf+0x124>
9002b140:	ee27 4b07 	vmul.f64	d4, d7, d7
9002b144:	4b44      	ldr	r3, [pc, #272]	@ (9002b258 <cosf+0x138>)
9002b146:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002b14a:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002b14e:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002b152:	eea7 6b05 	vfma.f64	d6, d7, d5
9002b156:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002b15a:	eea7 0b05 	vfma.f64	d0, d7, d5
9002b15e:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002b162:	ee27 7b04 	vmul.f64	d7, d7, d4
9002b166:	eea4 0b05 	vfma.f64	d0, d4, d5
9002b16a:	eea6 0b07 	vfma.f64	d0, d6, d7
9002b16e:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b172:	bd38      	pop	{r3, r4, r5, pc}
9002b174:	f240 422e 	movw	r2, #1070	@ 0x42e
9002b178:	4293      	cmp	r3, r2
9002b17a:	d829      	bhi.n	9002b1d0 <cosf+0xb0>
9002b17c:	4b36      	ldr	r3, [pc, #216]	@ (9002b258 <cosf+0x138>)
9002b17e:	ed93 6b08 	vldr	d6, [r3, #32]
9002b182:	ee27 6b06 	vmul.f64	d6, d7, d6
9002b186:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002b18a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b18e:	ee16 1a90 	vmov	r1, s13
9002b192:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002b196:	1609      	asrs	r1, r1, #24
9002b198:	ee06 1a90 	vmov	s13, r1
9002b19c:	f001 0203 	and.w	r2, r1, #3
9002b1a0:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b1a4:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002b1a8:	ed92 0b00 	vldr	d0, [r2]
9002b1ac:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002b1b0:	f011 0f02 	tst.w	r1, #2
9002b1b4:	f081 0101 	eor.w	r1, r1, #1
9002b1b8:	eea5 7b46 	vfms.f64	d7, d5, d6
9002b1bc:	bf08      	it	eq
9002b1be:	4618      	moveq	r0, r3
9002b1c0:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b1c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b1c8:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b1cc:	f7ff bf7c 	b.w	9002b0c8 <sinf_poly>
9002b1d0:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002b1d4:	d232      	bcs.n	9002b23c <cosf+0x11c>
9002b1d6:	4921      	ldr	r1, [pc, #132]	@ (9002b25c <cosf+0x13c>)
9002b1d8:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002b1dc:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002b1e0:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b1e4:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002b1e8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002b1ec:	6a10      	ldr	r0, [r2, #32]
9002b1ee:	6912      	ldr	r2, [r2, #16]
9002b1f0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002b1f4:	40ab      	lsls	r3, r5
9002b1f6:	fba0 5003 	umull	r5, r0, r0, r3
9002b1fa:	4359      	muls	r1, r3
9002b1fc:	fbe3 0102 	umlal	r0, r1, r3, r2
9002b200:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002b204:	0f9d      	lsrs	r5, r3, #30
9002b206:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002b20a:	1ac9      	subs	r1, r1, r3
9002b20c:	f7d5 fa46 	bl	9000069c <__aeabi_l2d>
9002b210:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b214:	4b10      	ldr	r3, [pc, #64]	@ (9002b258 <cosf+0x138>)
9002b216:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002b250 <cosf+0x130>
9002b21a:	ec41 0b17 	vmov	d7, r0, r1
9002b21e:	f004 0203 	and.w	r2, r4, #3
9002b222:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b226:	ed92 0b00 	vldr	d0, [r2]
9002b22a:	ee27 7b06 	vmul.f64	d7, d7, d6
9002b22e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b232:	f014 0f02 	tst.w	r4, #2
9002b236:	f085 0101 	eor.w	r1, r5, #1
9002b23a:	e7bf      	b.n	9002b1bc <cosf+0x9c>
9002b23c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b240:	f000 b81c 	b.w	9002b27c <__math_invalidf>
9002b244:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002b248:	e793      	b.n	9002b172 <cosf+0x52>
9002b24a:	bf00      	nop
9002b24c:	f3af 8000 	nop.w
9002b250:	54442d18 	.word	0x54442d18
9002b254:	3c1921fb 	.word	0x3c1921fb
9002b258:	9002fd10 	.word	0x9002fd10
9002b25c:	9002fcac 	.word	0x9002fcac

9002b260 <with_errnof>:
9002b260:	b510      	push	{r4, lr}
9002b262:	ed2d 8b02 	vpush	{d8}
9002b266:	eeb0 8a40 	vmov.f32	s16, s0
9002b26a:	4604      	mov	r4, r0
9002b26c:	f000 fd46 	bl	9002bcfc <__errno>
9002b270:	eeb0 0a48 	vmov.f32	s0, s16
9002b274:	ecbd 8b02 	vpop	{d8}
9002b278:	6004      	str	r4, [r0, #0]
9002b27a:	bd10      	pop	{r4, pc}

9002b27c <__math_invalidf>:
9002b27c:	eef0 7a40 	vmov.f32	s15, s0
9002b280:	ee30 7a40 	vsub.f32	s14, s0, s0
9002b284:	eef4 7a67 	vcmp.f32	s15, s15
9002b288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b28c:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002b290:	d602      	bvs.n	9002b298 <__math_invalidf+0x1c>
9002b292:	2021      	movs	r0, #33	@ 0x21
9002b294:	f7ff bfe4 	b.w	9002b260 <with_errnof>
9002b298:	4770      	bx	lr

9002b29a <__ieee754_sqrtf>:
9002b29a:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002b29e:	4770      	bx	lr

9002b2a0 <__ieee754_atan2f>:
9002b2a0:	ee10 2a90 	vmov	r2, s1
9002b2a4:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002b2a8:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002b2ac:	b510      	push	{r4, lr}
9002b2ae:	eef0 7a40 	vmov.f32	s15, s0
9002b2b2:	d806      	bhi.n	9002b2c2 <__ieee754_atan2f+0x22>
9002b2b4:	ee10 0a10 	vmov	r0, s0
9002b2b8:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002b2bc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002b2c0:	d904      	bls.n	9002b2cc <__ieee754_atan2f+0x2c>
9002b2c2:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002b2c6:	eeb0 0a67 	vmov.f32	s0, s15
9002b2ca:	bd10      	pop	{r4, pc}
9002b2cc:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002b2d0:	d103      	bne.n	9002b2da <__ieee754_atan2f+0x3a>
9002b2d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b2d6:	f000 b881 	b.w	9002b3dc <atanf>
9002b2da:	1794      	asrs	r4, r2, #30
9002b2dc:	f004 0402 	and.w	r4, r4, #2
9002b2e0:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002b2e4:	b93b      	cbnz	r3, 9002b2f6 <__ieee754_atan2f+0x56>
9002b2e6:	2c02      	cmp	r4, #2
9002b2e8:	d05c      	beq.n	9002b3a4 <__ieee754_atan2f+0x104>
9002b2ea:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002b3b8 <__ieee754_atan2f+0x118>
9002b2ee:	2c03      	cmp	r4, #3
9002b2f0:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002b2f4:	e7e7      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b2f6:	b939      	cbnz	r1, 9002b308 <__ieee754_atan2f+0x68>
9002b2f8:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002b3bc <__ieee754_atan2f+0x11c>
9002b2fc:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002b3c0 <__ieee754_atan2f+0x120>
9002b300:	2800      	cmp	r0, #0
9002b302:	fe67 7a27 	vselge.f32	s15, s14, s15
9002b306:	e7de      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b308:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002b30c:	d110      	bne.n	9002b330 <__ieee754_atan2f+0x90>
9002b30e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002b312:	f104 34ff 	add.w	r4, r4, #4294967295
9002b316:	d107      	bne.n	9002b328 <__ieee754_atan2f+0x88>
9002b318:	2c02      	cmp	r4, #2
9002b31a:	d846      	bhi.n	9002b3aa <__ieee754_atan2f+0x10a>
9002b31c:	4b29      	ldr	r3, [pc, #164]	@ (9002b3c4 <__ieee754_atan2f+0x124>)
9002b31e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002b322:	edd3 7a00 	vldr	s15, [r3]
9002b326:	e7ce      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b328:	2c02      	cmp	r4, #2
9002b32a:	d841      	bhi.n	9002b3b0 <__ieee754_atan2f+0x110>
9002b32c:	4b26      	ldr	r3, [pc, #152]	@ (9002b3c8 <__ieee754_atan2f+0x128>)
9002b32e:	e7f6      	b.n	9002b31e <__ieee754_atan2f+0x7e>
9002b330:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002b334:	d0e0      	beq.n	9002b2f8 <__ieee754_atan2f+0x58>
9002b336:	1a5b      	subs	r3, r3, r1
9002b338:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002b33c:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002b340:	da1a      	bge.n	9002b378 <__ieee754_atan2f+0xd8>
9002b342:	2a00      	cmp	r2, #0
9002b344:	da01      	bge.n	9002b34a <__ieee754_atan2f+0xaa>
9002b346:	313c      	adds	r1, #60	@ 0x3c
9002b348:	db19      	blt.n	9002b37e <__ieee754_atan2f+0xde>
9002b34a:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002b34e:	f000 f919 	bl	9002b584 <fabsf>
9002b352:	f000 f843 	bl	9002b3dc <atanf>
9002b356:	eef0 7a40 	vmov.f32	s15, s0
9002b35a:	2c01      	cmp	r4, #1
9002b35c:	d012      	beq.n	9002b384 <__ieee754_atan2f+0xe4>
9002b35e:	2c02      	cmp	r4, #2
9002b360:	d017      	beq.n	9002b392 <__ieee754_atan2f+0xf2>
9002b362:	2c00      	cmp	r4, #0
9002b364:	d0af      	beq.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b366:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002b3cc <__ieee754_atan2f+0x12c>
9002b36a:	ee77 7a87 	vadd.f32	s15, s15, s14
9002b36e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002b3d0 <__ieee754_atan2f+0x130>
9002b372:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002b376:	e7a6      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b378:	eddf 7a11 	vldr	s15, [pc, #68]	@ 9002b3c0 <__ieee754_atan2f+0x120>
9002b37c:	e7ed      	b.n	9002b35a <__ieee754_atan2f+0xba>
9002b37e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002b3d4 <__ieee754_atan2f+0x134>
9002b382:	e7ea      	b.n	9002b35a <__ieee754_atan2f+0xba>
9002b384:	ee17 3a90 	vmov	r3, s15
9002b388:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002b38c:	ee07 3a90 	vmov	s15, r3
9002b390:	e799      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b392:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002b3cc <__ieee754_atan2f+0x12c>
9002b396:	ee77 7a87 	vadd.f32	s15, s15, s14
9002b39a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002b3d0 <__ieee754_atan2f+0x130>
9002b39e:	ee77 7a67 	vsub.f32	s15, s14, s15
9002b3a2:	e790      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b3a4:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002b3d0 <__ieee754_atan2f+0x130>
9002b3a8:	e78d      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b3aa:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002b3d8 <__ieee754_atan2f+0x138>
9002b3ae:	e78a      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b3b0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002b3d4 <__ieee754_atan2f+0x134>
9002b3b4:	e787      	b.n	9002b2c6 <__ieee754_atan2f+0x26>
9002b3b6:	bf00      	nop
9002b3b8:	c0490fdb 	.word	0xc0490fdb
9002b3bc:	bfc90fdb 	.word	0xbfc90fdb
9002b3c0:	3fc90fdb 	.word	0x3fc90fdb
9002b3c4:	9002fdfc 	.word	0x9002fdfc
9002b3c8:	9002fdf0 	.word	0x9002fdf0
9002b3cc:	33bbbd2e 	.word	0x33bbbd2e
9002b3d0:	40490fdb 	.word	0x40490fdb
9002b3d4:	00000000 	.word	0x00000000
9002b3d8:	3f490fdb 	.word	0x3f490fdb

9002b3dc <atanf>:
9002b3dc:	b538      	push	{r3, r4, r5, lr}
9002b3de:	ee10 5a10 	vmov	r5, s0
9002b3e2:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002b3e6:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002b3ea:	eef0 7a40 	vmov.f32	s15, s0
9002b3ee:	d30f      	bcc.n	9002b410 <atanf+0x34>
9002b3f0:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002b3f4:	d904      	bls.n	9002b400 <atanf+0x24>
9002b3f6:	ee70 7a00 	vadd.f32	s15, s0, s0
9002b3fa:	eeb0 0a67 	vmov.f32	s0, s15
9002b3fe:	bd38      	pop	{r3, r4, r5, pc}
9002b400:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002b538 <atanf+0x15c>
9002b404:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002b53c <atanf+0x160>
9002b408:	2d00      	cmp	r5, #0
9002b40a:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002b40e:	e7f4      	b.n	9002b3fa <atanf+0x1e>
9002b410:	4b4b      	ldr	r3, [pc, #300]	@ (9002b540 <atanf+0x164>)
9002b412:	429c      	cmp	r4, r3
9002b414:	d810      	bhi.n	9002b438 <atanf+0x5c>
9002b416:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002b41a:	d20a      	bcs.n	9002b432 <atanf+0x56>
9002b41c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002b544 <atanf+0x168>
9002b420:	ee30 7a07 	vadd.f32	s14, s0, s14
9002b424:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002b428:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002b42c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b430:	dce3      	bgt.n	9002b3fa <atanf+0x1e>
9002b432:	f04f 33ff 	mov.w	r3, #4294967295
9002b436:	e013      	b.n	9002b460 <atanf+0x84>
9002b438:	f000 f8a4 	bl	9002b584 <fabsf>
9002b43c:	4b42      	ldr	r3, [pc, #264]	@ (9002b548 <atanf+0x16c>)
9002b43e:	429c      	cmp	r4, r3
9002b440:	d84f      	bhi.n	9002b4e2 <atanf+0x106>
9002b442:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002b446:	429c      	cmp	r4, r3
9002b448:	d841      	bhi.n	9002b4ce <atanf+0xf2>
9002b44a:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002b44e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002b452:	eea0 7a27 	vfma.f32	s14, s0, s15
9002b456:	2300      	movs	r3, #0
9002b458:	ee30 0a27 	vadd.f32	s0, s0, s15
9002b45c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002b460:	1c5a      	adds	r2, r3, #1
9002b462:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002b466:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002b54c <atanf+0x170>
9002b46a:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002b550 <atanf+0x174>
9002b46e:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002b554 <atanf+0x178>
9002b472:	ee66 6a06 	vmul.f32	s13, s12, s12
9002b476:	eee6 5a87 	vfma.f32	s11, s13, s14
9002b47a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002b558 <atanf+0x17c>
9002b47e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002b482:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002b55c <atanf+0x180>
9002b486:	eee7 5a26 	vfma.f32	s11, s14, s13
9002b48a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002b560 <atanf+0x184>
9002b48e:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002b492:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002b564 <atanf+0x188>
9002b496:	eee7 5a26 	vfma.f32	s11, s14, s13
9002b49a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002b568 <atanf+0x18c>
9002b49e:	eea6 5a87 	vfma.f32	s10, s13, s14
9002b4a2:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002b56c <atanf+0x190>
9002b4a6:	eea5 7a26 	vfma.f32	s14, s10, s13
9002b4aa:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002b570 <atanf+0x194>
9002b4ae:	eea7 5a26 	vfma.f32	s10, s14, s13
9002b4b2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002b574 <atanf+0x198>
9002b4b6:	eea5 7a26 	vfma.f32	s14, s10, s13
9002b4ba:	ee27 7a26 	vmul.f32	s14, s14, s13
9002b4be:	eea5 7a86 	vfma.f32	s14, s11, s12
9002b4c2:	ee27 7a87 	vmul.f32	s14, s15, s14
9002b4c6:	d121      	bne.n	9002b50c <atanf+0x130>
9002b4c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002b4cc:	e795      	b.n	9002b3fa <atanf+0x1e>
9002b4ce:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002b4d2:	ee30 7a67 	vsub.f32	s14, s0, s15
9002b4d6:	ee30 0a27 	vadd.f32	s0, s0, s15
9002b4da:	2301      	movs	r3, #1
9002b4dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002b4e0:	e7be      	b.n	9002b460 <atanf+0x84>
9002b4e2:	4b25      	ldr	r3, [pc, #148]	@ (9002b578 <atanf+0x19c>)
9002b4e4:	429c      	cmp	r4, r3
9002b4e6:	d80b      	bhi.n	9002b500 <atanf+0x124>
9002b4e8:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002b4ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002b4f0:	eea0 7a27 	vfma.f32	s14, s0, s15
9002b4f4:	2302      	movs	r3, #2
9002b4f6:	ee70 6a67 	vsub.f32	s13, s0, s15
9002b4fa:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002b4fe:	e7af      	b.n	9002b460 <atanf+0x84>
9002b500:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002b504:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002b508:	2303      	movs	r3, #3
9002b50a:	e7a9      	b.n	9002b460 <atanf+0x84>
9002b50c:	4a1b      	ldr	r2, [pc, #108]	@ (9002b57c <atanf+0x1a0>)
9002b50e:	491c      	ldr	r1, [pc, #112]	@ (9002b580 <atanf+0x1a4>)
9002b510:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002b514:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002b518:	edd3 6a00 	vldr	s13, [r3]
9002b51c:	ee37 7a66 	vsub.f32	s14, s14, s13
9002b520:	2d00      	cmp	r5, #0
9002b522:	ee37 7a67 	vsub.f32	s14, s14, s15
9002b526:	edd2 7a00 	vldr	s15, [r2]
9002b52a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002b52e:	bfb8      	it	lt
9002b530:	eef1 7a67 	vneglt.f32	s15, s15
9002b534:	e761      	b.n	9002b3fa <atanf+0x1e>
9002b536:	bf00      	nop
9002b538:	bfc90fdb 	.word	0xbfc90fdb
9002b53c:	3fc90fdb 	.word	0x3fc90fdb
9002b540:	3edfffff 	.word	0x3edfffff
9002b544:	7149f2ca 	.word	0x7149f2ca
9002b548:	3f97ffff 	.word	0x3f97ffff
9002b54c:	3c8569d7 	.word	0x3c8569d7
9002b550:	3d4bda59 	.word	0x3d4bda59
9002b554:	bd6ef16b 	.word	0xbd6ef16b
9002b558:	3d886b35 	.word	0x3d886b35
9002b55c:	3dba2e6e 	.word	0x3dba2e6e
9002b560:	3e124925 	.word	0x3e124925
9002b564:	3eaaaaab 	.word	0x3eaaaaab
9002b568:	bd15a221 	.word	0xbd15a221
9002b56c:	bd9d8795 	.word	0xbd9d8795
9002b570:	bde38e38 	.word	0xbde38e38
9002b574:	be4ccccd 	.word	0xbe4ccccd
9002b578:	401bffff 	.word	0x401bffff
9002b57c:	9002fe18 	.word	0x9002fe18
9002b580:	9002fe08 	.word	0x9002fe08

9002b584 <fabsf>:
9002b584:	ee10 3a10 	vmov	r3, s0
9002b588:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002b58c:	ee00 3a10 	vmov	s0, r3
9002b590:	4770      	bx	lr

9002b592 <abort>:
9002b592:	b508      	push	{r3, lr}
9002b594:	2006      	movs	r0, #6
9002b596:	f000 fae1 	bl	9002bb5c <raise>
9002b59a:	2001      	movs	r0, #1
9002b59c:	f7d9 f8ec 	bl	90004778 <_exit>

9002b5a0 <__assert_func>:
9002b5a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002b5a2:	4614      	mov	r4, r2
9002b5a4:	461a      	mov	r2, r3
9002b5a6:	4b09      	ldr	r3, [pc, #36]	@ (9002b5cc <__assert_func+0x2c>)
9002b5a8:	681b      	ldr	r3, [r3, #0]
9002b5aa:	4605      	mov	r5, r0
9002b5ac:	68d8      	ldr	r0, [r3, #12]
9002b5ae:	b14c      	cbz	r4, 9002b5c4 <__assert_func+0x24>
9002b5b0:	4b07      	ldr	r3, [pc, #28]	@ (9002b5d0 <__assert_func+0x30>)
9002b5b2:	9100      	str	r1, [sp, #0]
9002b5b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002b5b8:	4906      	ldr	r1, [pc, #24]	@ (9002b5d4 <__assert_func+0x34>)
9002b5ba:	462b      	mov	r3, r5
9002b5bc:	f000 f984 	bl	9002b8c8 <fiprintf>
9002b5c0:	f7ff ffe7 	bl	9002b592 <abort>
9002b5c4:	4b04      	ldr	r3, [pc, #16]	@ (9002b5d8 <__assert_func+0x38>)
9002b5c6:	461c      	mov	r4, r3
9002b5c8:	e7f3      	b.n	9002b5b2 <__assert_func+0x12>
9002b5ca:	bf00      	nop
9002b5cc:	24000114 	.word	0x24000114
9002b5d0:	9002fe28 	.word	0x9002fe28
9002b5d4:	9002fe35 	.word	0x9002fe35
9002b5d8:	9002fe63 	.word	0x9002fe63

9002b5dc <atexit>:
9002b5dc:	2300      	movs	r3, #0
9002b5de:	4601      	mov	r1, r0
9002b5e0:	461a      	mov	r2, r3
9002b5e2:	4618      	mov	r0, r3
9002b5e4:	f000 bbc6 	b.w	9002bd74 <__register_exitproc>

9002b5e8 <malloc>:
9002b5e8:	4b02      	ldr	r3, [pc, #8]	@ (9002b5f4 <malloc+0xc>)
9002b5ea:	4601      	mov	r1, r0
9002b5ec:	6818      	ldr	r0, [r3, #0]
9002b5ee:	f000 b82d 	b.w	9002b64c <_malloc_r>
9002b5f2:	bf00      	nop
9002b5f4:	24000114 	.word	0x24000114

9002b5f8 <free>:
9002b5f8:	4b02      	ldr	r3, [pc, #8]	@ (9002b604 <free+0xc>)
9002b5fa:	4601      	mov	r1, r0
9002b5fc:	6818      	ldr	r0, [r3, #0]
9002b5fe:	f000 bc15 	b.w	9002be2c <_free_r>
9002b602:	bf00      	nop
9002b604:	24000114 	.word	0x24000114

9002b608 <sbrk_aligned>:
9002b608:	b570      	push	{r4, r5, r6, lr}
9002b60a:	4e0f      	ldr	r6, [pc, #60]	@ (9002b648 <sbrk_aligned+0x40>)
9002b60c:	460c      	mov	r4, r1
9002b60e:	6831      	ldr	r1, [r6, #0]
9002b610:	4605      	mov	r5, r0
9002b612:	b911      	cbnz	r1, 9002b61a <sbrk_aligned+0x12>
9002b614:	f000 fb50 	bl	9002bcb8 <_sbrk_r>
9002b618:	6030      	str	r0, [r6, #0]
9002b61a:	4621      	mov	r1, r4
9002b61c:	4628      	mov	r0, r5
9002b61e:	f000 fb4b 	bl	9002bcb8 <_sbrk_r>
9002b622:	1c43      	adds	r3, r0, #1
9002b624:	d103      	bne.n	9002b62e <sbrk_aligned+0x26>
9002b626:	f04f 34ff 	mov.w	r4, #4294967295
9002b62a:	4620      	mov	r0, r4
9002b62c:	bd70      	pop	{r4, r5, r6, pc}
9002b62e:	1cc4      	adds	r4, r0, #3
9002b630:	f024 0403 	bic.w	r4, r4, #3
9002b634:	42a0      	cmp	r0, r4
9002b636:	d0f8      	beq.n	9002b62a <sbrk_aligned+0x22>
9002b638:	1a21      	subs	r1, r4, r0
9002b63a:	4628      	mov	r0, r5
9002b63c:	f000 fb3c 	bl	9002bcb8 <_sbrk_r>
9002b640:	3001      	adds	r0, #1
9002b642:	d1f2      	bne.n	9002b62a <sbrk_aligned+0x22>
9002b644:	e7ef      	b.n	9002b626 <sbrk_aligned+0x1e>
9002b646:	bf00      	nop
9002b648:	24022328 	.word	0x24022328

9002b64c <_malloc_r>:
9002b64c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002b650:	1ccd      	adds	r5, r1, #3
9002b652:	f025 0503 	bic.w	r5, r5, #3
9002b656:	3508      	adds	r5, #8
9002b658:	2d0c      	cmp	r5, #12
9002b65a:	bf38      	it	cc
9002b65c:	250c      	movcc	r5, #12
9002b65e:	2d00      	cmp	r5, #0
9002b660:	4606      	mov	r6, r0
9002b662:	db01      	blt.n	9002b668 <_malloc_r+0x1c>
9002b664:	42a9      	cmp	r1, r5
9002b666:	d904      	bls.n	9002b672 <_malloc_r+0x26>
9002b668:	230c      	movs	r3, #12
9002b66a:	6033      	str	r3, [r6, #0]
9002b66c:	2000      	movs	r0, #0
9002b66e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002b672:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002b748 <_malloc_r+0xfc>
9002b676:	f000 f869 	bl	9002b74c <__malloc_lock>
9002b67a:	f8d8 3000 	ldr.w	r3, [r8]
9002b67e:	461c      	mov	r4, r3
9002b680:	bb44      	cbnz	r4, 9002b6d4 <_malloc_r+0x88>
9002b682:	4629      	mov	r1, r5
9002b684:	4630      	mov	r0, r6
9002b686:	f7ff ffbf 	bl	9002b608 <sbrk_aligned>
9002b68a:	1c43      	adds	r3, r0, #1
9002b68c:	4604      	mov	r4, r0
9002b68e:	d158      	bne.n	9002b742 <_malloc_r+0xf6>
9002b690:	f8d8 4000 	ldr.w	r4, [r8]
9002b694:	4627      	mov	r7, r4
9002b696:	2f00      	cmp	r7, #0
9002b698:	d143      	bne.n	9002b722 <_malloc_r+0xd6>
9002b69a:	2c00      	cmp	r4, #0
9002b69c:	d04b      	beq.n	9002b736 <_malloc_r+0xea>
9002b69e:	6823      	ldr	r3, [r4, #0]
9002b6a0:	4639      	mov	r1, r7
9002b6a2:	4630      	mov	r0, r6
9002b6a4:	eb04 0903 	add.w	r9, r4, r3
9002b6a8:	f000 fb06 	bl	9002bcb8 <_sbrk_r>
9002b6ac:	4581      	cmp	r9, r0
9002b6ae:	d142      	bne.n	9002b736 <_malloc_r+0xea>
9002b6b0:	6821      	ldr	r1, [r4, #0]
9002b6b2:	1a6d      	subs	r5, r5, r1
9002b6b4:	4629      	mov	r1, r5
9002b6b6:	4630      	mov	r0, r6
9002b6b8:	f7ff ffa6 	bl	9002b608 <sbrk_aligned>
9002b6bc:	3001      	adds	r0, #1
9002b6be:	d03a      	beq.n	9002b736 <_malloc_r+0xea>
9002b6c0:	6823      	ldr	r3, [r4, #0]
9002b6c2:	442b      	add	r3, r5
9002b6c4:	6023      	str	r3, [r4, #0]
9002b6c6:	f8d8 3000 	ldr.w	r3, [r8]
9002b6ca:	685a      	ldr	r2, [r3, #4]
9002b6cc:	bb62      	cbnz	r2, 9002b728 <_malloc_r+0xdc>
9002b6ce:	f8c8 7000 	str.w	r7, [r8]
9002b6d2:	e00f      	b.n	9002b6f4 <_malloc_r+0xa8>
9002b6d4:	6822      	ldr	r2, [r4, #0]
9002b6d6:	1b52      	subs	r2, r2, r5
9002b6d8:	d420      	bmi.n	9002b71c <_malloc_r+0xd0>
9002b6da:	2a0b      	cmp	r2, #11
9002b6dc:	d917      	bls.n	9002b70e <_malloc_r+0xc2>
9002b6de:	1961      	adds	r1, r4, r5
9002b6e0:	42a3      	cmp	r3, r4
9002b6e2:	6025      	str	r5, [r4, #0]
9002b6e4:	bf18      	it	ne
9002b6e6:	6059      	strne	r1, [r3, #4]
9002b6e8:	6863      	ldr	r3, [r4, #4]
9002b6ea:	bf08      	it	eq
9002b6ec:	f8c8 1000 	streq.w	r1, [r8]
9002b6f0:	5162      	str	r2, [r4, r5]
9002b6f2:	604b      	str	r3, [r1, #4]
9002b6f4:	4630      	mov	r0, r6
9002b6f6:	f000 f82f 	bl	9002b758 <__malloc_unlock>
9002b6fa:	f104 000b 	add.w	r0, r4, #11
9002b6fe:	1d23      	adds	r3, r4, #4
9002b700:	f020 0007 	bic.w	r0, r0, #7
9002b704:	1ac2      	subs	r2, r0, r3
9002b706:	bf1c      	itt	ne
9002b708:	1a1b      	subne	r3, r3, r0
9002b70a:	50a3      	strne	r3, [r4, r2]
9002b70c:	e7af      	b.n	9002b66e <_malloc_r+0x22>
9002b70e:	6862      	ldr	r2, [r4, #4]
9002b710:	42a3      	cmp	r3, r4
9002b712:	bf0c      	ite	eq
9002b714:	f8c8 2000 	streq.w	r2, [r8]
9002b718:	605a      	strne	r2, [r3, #4]
9002b71a:	e7eb      	b.n	9002b6f4 <_malloc_r+0xa8>
9002b71c:	4623      	mov	r3, r4
9002b71e:	6864      	ldr	r4, [r4, #4]
9002b720:	e7ae      	b.n	9002b680 <_malloc_r+0x34>
9002b722:	463c      	mov	r4, r7
9002b724:	687f      	ldr	r7, [r7, #4]
9002b726:	e7b6      	b.n	9002b696 <_malloc_r+0x4a>
9002b728:	461a      	mov	r2, r3
9002b72a:	685b      	ldr	r3, [r3, #4]
9002b72c:	42a3      	cmp	r3, r4
9002b72e:	d1fb      	bne.n	9002b728 <_malloc_r+0xdc>
9002b730:	2300      	movs	r3, #0
9002b732:	6053      	str	r3, [r2, #4]
9002b734:	e7de      	b.n	9002b6f4 <_malloc_r+0xa8>
9002b736:	230c      	movs	r3, #12
9002b738:	6033      	str	r3, [r6, #0]
9002b73a:	4630      	mov	r0, r6
9002b73c:	f000 f80c 	bl	9002b758 <__malloc_unlock>
9002b740:	e794      	b.n	9002b66c <_malloc_r+0x20>
9002b742:	6005      	str	r5, [r0, #0]
9002b744:	e7d6      	b.n	9002b6f4 <_malloc_r+0xa8>
9002b746:	bf00      	nop
9002b748:	2402232c 	.word	0x2402232c

9002b74c <__malloc_lock>:
9002b74c:	4801      	ldr	r0, [pc, #4]	@ (9002b754 <__malloc_lock+0x8>)
9002b74e:	f000 bb00 	b.w	9002bd52 <__retarget_lock_acquire_recursive>
9002b752:	bf00      	nop
9002b754:	24022470 	.word	0x24022470

9002b758 <__malloc_unlock>:
9002b758:	4801      	ldr	r0, [pc, #4]	@ (9002b760 <__malloc_unlock+0x8>)
9002b75a:	f000 bafb 	b.w	9002bd54 <__retarget_lock_release_recursive>
9002b75e:	bf00      	nop
9002b760:	24022470 	.word	0x24022470

9002b764 <__cxa_atexit>:
9002b764:	b510      	push	{r4, lr}
9002b766:	4604      	mov	r4, r0
9002b768:	4804      	ldr	r0, [pc, #16]	@ (9002b77c <__cxa_atexit+0x18>)
9002b76a:	4613      	mov	r3, r2
9002b76c:	b120      	cbz	r0, 9002b778 <__cxa_atexit+0x14>
9002b76e:	460a      	mov	r2, r1
9002b770:	2002      	movs	r0, #2
9002b772:	4621      	mov	r1, r4
9002b774:	f000 fafe 	bl	9002bd74 <__register_exitproc>
9002b778:	bd10      	pop	{r4, pc}
9002b77a:	bf00      	nop
9002b77c:	9002bd75 	.word	0x9002bd75

9002b780 <std>:
9002b780:	2300      	movs	r3, #0
9002b782:	b510      	push	{r4, lr}
9002b784:	4604      	mov	r4, r0
9002b786:	e9c0 3300 	strd	r3, r3, [r0]
9002b78a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002b78e:	6083      	str	r3, [r0, #8]
9002b790:	8181      	strh	r1, [r0, #12]
9002b792:	6643      	str	r3, [r0, #100]	@ 0x64
9002b794:	81c2      	strh	r2, [r0, #14]
9002b796:	6183      	str	r3, [r0, #24]
9002b798:	4619      	mov	r1, r3
9002b79a:	2208      	movs	r2, #8
9002b79c:	305c      	adds	r0, #92	@ 0x5c
9002b79e:	f000 f99b 	bl	9002bad8 <memset>
9002b7a2:	4b0d      	ldr	r3, [pc, #52]	@ (9002b7d8 <std+0x58>)
9002b7a4:	6263      	str	r3, [r4, #36]	@ 0x24
9002b7a6:	4b0d      	ldr	r3, [pc, #52]	@ (9002b7dc <std+0x5c>)
9002b7a8:	62a3      	str	r3, [r4, #40]	@ 0x28
9002b7aa:	4b0d      	ldr	r3, [pc, #52]	@ (9002b7e0 <std+0x60>)
9002b7ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002b7ae:	4b0d      	ldr	r3, [pc, #52]	@ (9002b7e4 <std+0x64>)
9002b7b0:	6323      	str	r3, [r4, #48]	@ 0x30
9002b7b2:	4b0d      	ldr	r3, [pc, #52]	@ (9002b7e8 <std+0x68>)
9002b7b4:	6224      	str	r4, [r4, #32]
9002b7b6:	429c      	cmp	r4, r3
9002b7b8:	d006      	beq.n	9002b7c8 <std+0x48>
9002b7ba:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002b7be:	4294      	cmp	r4, r2
9002b7c0:	d002      	beq.n	9002b7c8 <std+0x48>
9002b7c2:	33d0      	adds	r3, #208	@ 0xd0
9002b7c4:	429c      	cmp	r4, r3
9002b7c6:	d105      	bne.n	9002b7d4 <std+0x54>
9002b7c8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002b7cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b7d0:	f000 babe 	b.w	9002bd50 <__retarget_lock_init_recursive>
9002b7d4:	bd10      	pop	{r4, pc}
9002b7d6:	bf00      	nop
9002b7d8:	9002b929 	.word	0x9002b929
9002b7dc:	9002b94b 	.word	0x9002b94b
9002b7e0:	9002b983 	.word	0x9002b983
9002b7e4:	9002b9a7 	.word	0x9002b9a7
9002b7e8:	24022330 	.word	0x24022330

9002b7ec <stdio_exit_handler>:
9002b7ec:	4a02      	ldr	r2, [pc, #8]	@ (9002b7f8 <stdio_exit_handler+0xc>)
9002b7ee:	4903      	ldr	r1, [pc, #12]	@ (9002b7fc <stdio_exit_handler+0x10>)
9002b7f0:	4803      	ldr	r0, [pc, #12]	@ (9002b800 <stdio_exit_handler+0x14>)
9002b7f2:	f000 b87b 	b.w	9002b8ec <_fwalk_sglue>
9002b7f6:	bf00      	nop
9002b7f8:	24000108 	.word	0x24000108
9002b7fc:	9002c565 	.word	0x9002c565
9002b800:	24000118 	.word	0x24000118

9002b804 <cleanup_stdio>:
9002b804:	6841      	ldr	r1, [r0, #4]
9002b806:	4b0c      	ldr	r3, [pc, #48]	@ (9002b838 <cleanup_stdio+0x34>)
9002b808:	4299      	cmp	r1, r3
9002b80a:	b510      	push	{r4, lr}
9002b80c:	4604      	mov	r4, r0
9002b80e:	d001      	beq.n	9002b814 <cleanup_stdio+0x10>
9002b810:	f000 fea8 	bl	9002c564 <_fflush_r>
9002b814:	68a1      	ldr	r1, [r4, #8]
9002b816:	4b09      	ldr	r3, [pc, #36]	@ (9002b83c <cleanup_stdio+0x38>)
9002b818:	4299      	cmp	r1, r3
9002b81a:	d002      	beq.n	9002b822 <cleanup_stdio+0x1e>
9002b81c:	4620      	mov	r0, r4
9002b81e:	f000 fea1 	bl	9002c564 <_fflush_r>
9002b822:	68e1      	ldr	r1, [r4, #12]
9002b824:	4b06      	ldr	r3, [pc, #24]	@ (9002b840 <cleanup_stdio+0x3c>)
9002b826:	4299      	cmp	r1, r3
9002b828:	d004      	beq.n	9002b834 <cleanup_stdio+0x30>
9002b82a:	4620      	mov	r0, r4
9002b82c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b830:	f000 be98 	b.w	9002c564 <_fflush_r>
9002b834:	bd10      	pop	{r4, pc}
9002b836:	bf00      	nop
9002b838:	24022330 	.word	0x24022330
9002b83c:	24022398 	.word	0x24022398
9002b840:	24022400 	.word	0x24022400

9002b844 <global_stdio_init.part.0>:
9002b844:	b510      	push	{r4, lr}
9002b846:	4b0b      	ldr	r3, [pc, #44]	@ (9002b874 <global_stdio_init.part.0+0x30>)
9002b848:	4c0b      	ldr	r4, [pc, #44]	@ (9002b878 <global_stdio_init.part.0+0x34>)
9002b84a:	4a0c      	ldr	r2, [pc, #48]	@ (9002b87c <global_stdio_init.part.0+0x38>)
9002b84c:	601a      	str	r2, [r3, #0]
9002b84e:	4620      	mov	r0, r4
9002b850:	2200      	movs	r2, #0
9002b852:	2104      	movs	r1, #4
9002b854:	f7ff ff94 	bl	9002b780 <std>
9002b858:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002b85c:	2201      	movs	r2, #1
9002b85e:	2109      	movs	r1, #9
9002b860:	f7ff ff8e 	bl	9002b780 <std>
9002b864:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002b868:	2202      	movs	r2, #2
9002b86a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b86e:	2112      	movs	r1, #18
9002b870:	f7ff bf86 	b.w	9002b780 <std>
9002b874:	24022468 	.word	0x24022468
9002b878:	24022330 	.word	0x24022330
9002b87c:	9002b7ed 	.word	0x9002b7ed

9002b880 <__sfp_lock_acquire>:
9002b880:	4801      	ldr	r0, [pc, #4]	@ (9002b888 <__sfp_lock_acquire+0x8>)
9002b882:	f000 ba66 	b.w	9002bd52 <__retarget_lock_acquire_recursive>
9002b886:	bf00      	nop
9002b888:	24022472 	.word	0x24022472

9002b88c <__sfp_lock_release>:
9002b88c:	4801      	ldr	r0, [pc, #4]	@ (9002b894 <__sfp_lock_release+0x8>)
9002b88e:	f000 ba61 	b.w	9002bd54 <__retarget_lock_release_recursive>
9002b892:	bf00      	nop
9002b894:	24022472 	.word	0x24022472

9002b898 <__sinit>:
9002b898:	b510      	push	{r4, lr}
9002b89a:	4604      	mov	r4, r0
9002b89c:	f7ff fff0 	bl	9002b880 <__sfp_lock_acquire>
9002b8a0:	6a23      	ldr	r3, [r4, #32]
9002b8a2:	b11b      	cbz	r3, 9002b8ac <__sinit+0x14>
9002b8a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b8a8:	f7ff bff0 	b.w	9002b88c <__sfp_lock_release>
9002b8ac:	4b04      	ldr	r3, [pc, #16]	@ (9002b8c0 <__sinit+0x28>)
9002b8ae:	6223      	str	r3, [r4, #32]
9002b8b0:	4b04      	ldr	r3, [pc, #16]	@ (9002b8c4 <__sinit+0x2c>)
9002b8b2:	681b      	ldr	r3, [r3, #0]
9002b8b4:	2b00      	cmp	r3, #0
9002b8b6:	d1f5      	bne.n	9002b8a4 <__sinit+0xc>
9002b8b8:	f7ff ffc4 	bl	9002b844 <global_stdio_init.part.0>
9002b8bc:	e7f2      	b.n	9002b8a4 <__sinit+0xc>
9002b8be:	bf00      	nop
9002b8c0:	9002b805 	.word	0x9002b805
9002b8c4:	24022468 	.word	0x24022468

9002b8c8 <fiprintf>:
9002b8c8:	b40e      	push	{r1, r2, r3}
9002b8ca:	b503      	push	{r0, r1, lr}
9002b8cc:	4601      	mov	r1, r0
9002b8ce:	ab03      	add	r3, sp, #12
9002b8d0:	4805      	ldr	r0, [pc, #20]	@ (9002b8e8 <fiprintf+0x20>)
9002b8d2:	f853 2b04 	ldr.w	r2, [r3], #4
9002b8d6:	6800      	ldr	r0, [r0, #0]
9002b8d8:	9301      	str	r3, [sp, #4]
9002b8da:	f000 fb1b 	bl	9002bf14 <_vfiprintf_r>
9002b8de:	b002      	add	sp, #8
9002b8e0:	f85d eb04 	ldr.w	lr, [sp], #4
9002b8e4:	b003      	add	sp, #12
9002b8e6:	4770      	bx	lr
9002b8e8:	24000114 	.word	0x24000114

9002b8ec <_fwalk_sglue>:
9002b8ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002b8f0:	4607      	mov	r7, r0
9002b8f2:	4688      	mov	r8, r1
9002b8f4:	4614      	mov	r4, r2
9002b8f6:	2600      	movs	r6, #0
9002b8f8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002b8fc:	f1b9 0901 	subs.w	r9, r9, #1
9002b900:	d505      	bpl.n	9002b90e <_fwalk_sglue+0x22>
9002b902:	6824      	ldr	r4, [r4, #0]
9002b904:	2c00      	cmp	r4, #0
9002b906:	d1f7      	bne.n	9002b8f8 <_fwalk_sglue+0xc>
9002b908:	4630      	mov	r0, r6
9002b90a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002b90e:	89ab      	ldrh	r3, [r5, #12]
9002b910:	2b01      	cmp	r3, #1
9002b912:	d907      	bls.n	9002b924 <_fwalk_sglue+0x38>
9002b914:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002b918:	3301      	adds	r3, #1
9002b91a:	d003      	beq.n	9002b924 <_fwalk_sglue+0x38>
9002b91c:	4629      	mov	r1, r5
9002b91e:	4638      	mov	r0, r7
9002b920:	47c0      	blx	r8
9002b922:	4306      	orrs	r6, r0
9002b924:	3568      	adds	r5, #104	@ 0x68
9002b926:	e7e9      	b.n	9002b8fc <_fwalk_sglue+0x10>

9002b928 <__sread>:
9002b928:	b510      	push	{r4, lr}
9002b92a:	460c      	mov	r4, r1
9002b92c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b930:	f000 f99c 	bl	9002bc6c <_read_r>
9002b934:	2800      	cmp	r0, #0
9002b936:	bfab      	itete	ge
9002b938:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002b93a:	89a3      	ldrhlt	r3, [r4, #12]
9002b93c:	181b      	addge	r3, r3, r0
9002b93e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002b942:	bfac      	ite	ge
9002b944:	6563      	strge	r3, [r4, #84]	@ 0x54
9002b946:	81a3      	strhlt	r3, [r4, #12]
9002b948:	bd10      	pop	{r4, pc}

9002b94a <__swrite>:
9002b94a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b94e:	461f      	mov	r7, r3
9002b950:	898b      	ldrh	r3, [r1, #12]
9002b952:	05db      	lsls	r3, r3, #23
9002b954:	4605      	mov	r5, r0
9002b956:	460c      	mov	r4, r1
9002b958:	4616      	mov	r6, r2
9002b95a:	d505      	bpl.n	9002b968 <__swrite+0x1e>
9002b95c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b960:	2302      	movs	r3, #2
9002b962:	2200      	movs	r2, #0
9002b964:	f000 f970 	bl	9002bc48 <_lseek_r>
9002b968:	89a3      	ldrh	r3, [r4, #12]
9002b96a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002b96e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002b972:	81a3      	strh	r3, [r4, #12]
9002b974:	4632      	mov	r2, r6
9002b976:	463b      	mov	r3, r7
9002b978:	4628      	mov	r0, r5
9002b97a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b97e:	f000 b9ab 	b.w	9002bcd8 <_write_r>

9002b982 <__sseek>:
9002b982:	b510      	push	{r4, lr}
9002b984:	460c      	mov	r4, r1
9002b986:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b98a:	f000 f95d 	bl	9002bc48 <_lseek_r>
9002b98e:	1c43      	adds	r3, r0, #1
9002b990:	89a3      	ldrh	r3, [r4, #12]
9002b992:	bf15      	itete	ne
9002b994:	6560      	strne	r0, [r4, #84]	@ 0x54
9002b996:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002b99a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002b99e:	81a3      	strheq	r3, [r4, #12]
9002b9a0:	bf18      	it	ne
9002b9a2:	81a3      	strhne	r3, [r4, #12]
9002b9a4:	bd10      	pop	{r4, pc}

9002b9a6 <__sclose>:
9002b9a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b9aa:	f000 b8df 	b.w	9002bb6c <_close_r>

9002b9ae <__swbuf_r>:
9002b9ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b9b0:	460e      	mov	r6, r1
9002b9b2:	4614      	mov	r4, r2
9002b9b4:	4605      	mov	r5, r0
9002b9b6:	b118      	cbz	r0, 9002b9c0 <__swbuf_r+0x12>
9002b9b8:	6a03      	ldr	r3, [r0, #32]
9002b9ba:	b90b      	cbnz	r3, 9002b9c0 <__swbuf_r+0x12>
9002b9bc:	f7ff ff6c 	bl	9002b898 <__sinit>
9002b9c0:	69a3      	ldr	r3, [r4, #24]
9002b9c2:	60a3      	str	r3, [r4, #8]
9002b9c4:	89a3      	ldrh	r3, [r4, #12]
9002b9c6:	071a      	lsls	r2, r3, #28
9002b9c8:	d501      	bpl.n	9002b9ce <__swbuf_r+0x20>
9002b9ca:	6923      	ldr	r3, [r4, #16]
9002b9cc:	b943      	cbnz	r3, 9002b9e0 <__swbuf_r+0x32>
9002b9ce:	4621      	mov	r1, r4
9002b9d0:	4628      	mov	r0, r5
9002b9d2:	f000 f82b 	bl	9002ba2c <__swsetup_r>
9002b9d6:	b118      	cbz	r0, 9002b9e0 <__swbuf_r+0x32>
9002b9d8:	f04f 37ff 	mov.w	r7, #4294967295
9002b9dc:	4638      	mov	r0, r7
9002b9de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002b9e0:	6823      	ldr	r3, [r4, #0]
9002b9e2:	6922      	ldr	r2, [r4, #16]
9002b9e4:	1a98      	subs	r0, r3, r2
9002b9e6:	6963      	ldr	r3, [r4, #20]
9002b9e8:	b2f6      	uxtb	r6, r6
9002b9ea:	4283      	cmp	r3, r0
9002b9ec:	4637      	mov	r7, r6
9002b9ee:	dc05      	bgt.n	9002b9fc <__swbuf_r+0x4e>
9002b9f0:	4621      	mov	r1, r4
9002b9f2:	4628      	mov	r0, r5
9002b9f4:	f000 fdb6 	bl	9002c564 <_fflush_r>
9002b9f8:	2800      	cmp	r0, #0
9002b9fa:	d1ed      	bne.n	9002b9d8 <__swbuf_r+0x2a>
9002b9fc:	68a3      	ldr	r3, [r4, #8]
9002b9fe:	3b01      	subs	r3, #1
9002ba00:	60a3      	str	r3, [r4, #8]
9002ba02:	6823      	ldr	r3, [r4, #0]
9002ba04:	1c5a      	adds	r2, r3, #1
9002ba06:	6022      	str	r2, [r4, #0]
9002ba08:	701e      	strb	r6, [r3, #0]
9002ba0a:	6962      	ldr	r2, [r4, #20]
9002ba0c:	1c43      	adds	r3, r0, #1
9002ba0e:	429a      	cmp	r2, r3
9002ba10:	d004      	beq.n	9002ba1c <__swbuf_r+0x6e>
9002ba12:	89a3      	ldrh	r3, [r4, #12]
9002ba14:	07db      	lsls	r3, r3, #31
9002ba16:	d5e1      	bpl.n	9002b9dc <__swbuf_r+0x2e>
9002ba18:	2e0a      	cmp	r6, #10
9002ba1a:	d1df      	bne.n	9002b9dc <__swbuf_r+0x2e>
9002ba1c:	4621      	mov	r1, r4
9002ba1e:	4628      	mov	r0, r5
9002ba20:	f000 fda0 	bl	9002c564 <_fflush_r>
9002ba24:	2800      	cmp	r0, #0
9002ba26:	d0d9      	beq.n	9002b9dc <__swbuf_r+0x2e>
9002ba28:	e7d6      	b.n	9002b9d8 <__swbuf_r+0x2a>
	...

9002ba2c <__swsetup_r>:
9002ba2c:	b538      	push	{r3, r4, r5, lr}
9002ba2e:	4b29      	ldr	r3, [pc, #164]	@ (9002bad4 <__swsetup_r+0xa8>)
9002ba30:	4605      	mov	r5, r0
9002ba32:	6818      	ldr	r0, [r3, #0]
9002ba34:	460c      	mov	r4, r1
9002ba36:	b118      	cbz	r0, 9002ba40 <__swsetup_r+0x14>
9002ba38:	6a03      	ldr	r3, [r0, #32]
9002ba3a:	b90b      	cbnz	r3, 9002ba40 <__swsetup_r+0x14>
9002ba3c:	f7ff ff2c 	bl	9002b898 <__sinit>
9002ba40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ba44:	0719      	lsls	r1, r3, #28
9002ba46:	d422      	bmi.n	9002ba8e <__swsetup_r+0x62>
9002ba48:	06da      	lsls	r2, r3, #27
9002ba4a:	d407      	bmi.n	9002ba5c <__swsetup_r+0x30>
9002ba4c:	2209      	movs	r2, #9
9002ba4e:	602a      	str	r2, [r5, #0]
9002ba50:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002ba54:	81a3      	strh	r3, [r4, #12]
9002ba56:	f04f 30ff 	mov.w	r0, #4294967295
9002ba5a:	e033      	b.n	9002bac4 <__swsetup_r+0x98>
9002ba5c:	0758      	lsls	r0, r3, #29
9002ba5e:	d512      	bpl.n	9002ba86 <__swsetup_r+0x5a>
9002ba60:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002ba62:	b141      	cbz	r1, 9002ba76 <__swsetup_r+0x4a>
9002ba64:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002ba68:	4299      	cmp	r1, r3
9002ba6a:	d002      	beq.n	9002ba72 <__swsetup_r+0x46>
9002ba6c:	4628      	mov	r0, r5
9002ba6e:	f000 f9dd 	bl	9002be2c <_free_r>
9002ba72:	2300      	movs	r3, #0
9002ba74:	6363      	str	r3, [r4, #52]	@ 0x34
9002ba76:	89a3      	ldrh	r3, [r4, #12]
9002ba78:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002ba7c:	81a3      	strh	r3, [r4, #12]
9002ba7e:	2300      	movs	r3, #0
9002ba80:	6063      	str	r3, [r4, #4]
9002ba82:	6923      	ldr	r3, [r4, #16]
9002ba84:	6023      	str	r3, [r4, #0]
9002ba86:	89a3      	ldrh	r3, [r4, #12]
9002ba88:	f043 0308 	orr.w	r3, r3, #8
9002ba8c:	81a3      	strh	r3, [r4, #12]
9002ba8e:	6923      	ldr	r3, [r4, #16]
9002ba90:	b94b      	cbnz	r3, 9002baa6 <__swsetup_r+0x7a>
9002ba92:	89a3      	ldrh	r3, [r4, #12]
9002ba94:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002ba98:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002ba9c:	d003      	beq.n	9002baa6 <__swsetup_r+0x7a>
9002ba9e:	4621      	mov	r1, r4
9002baa0:	4628      	mov	r0, r5
9002baa2:	f000 fdad 	bl	9002c600 <__smakebuf_r>
9002baa6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002baaa:	f013 0201 	ands.w	r2, r3, #1
9002baae:	d00a      	beq.n	9002bac6 <__swsetup_r+0x9a>
9002bab0:	2200      	movs	r2, #0
9002bab2:	60a2      	str	r2, [r4, #8]
9002bab4:	6962      	ldr	r2, [r4, #20]
9002bab6:	4252      	negs	r2, r2
9002bab8:	61a2      	str	r2, [r4, #24]
9002baba:	6922      	ldr	r2, [r4, #16]
9002babc:	b942      	cbnz	r2, 9002bad0 <__swsetup_r+0xa4>
9002babe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002bac2:	d1c5      	bne.n	9002ba50 <__swsetup_r+0x24>
9002bac4:	bd38      	pop	{r3, r4, r5, pc}
9002bac6:	0799      	lsls	r1, r3, #30
9002bac8:	bf58      	it	pl
9002baca:	6962      	ldrpl	r2, [r4, #20]
9002bacc:	60a2      	str	r2, [r4, #8]
9002bace:	e7f4      	b.n	9002baba <__swsetup_r+0x8e>
9002bad0:	2000      	movs	r0, #0
9002bad2:	e7f7      	b.n	9002bac4 <__swsetup_r+0x98>
9002bad4:	24000114 	.word	0x24000114

9002bad8 <memset>:
9002bad8:	4402      	add	r2, r0
9002bada:	4603      	mov	r3, r0
9002badc:	4293      	cmp	r3, r2
9002bade:	d100      	bne.n	9002bae2 <memset+0xa>
9002bae0:	4770      	bx	lr
9002bae2:	f803 1b01 	strb.w	r1, [r3], #1
9002bae6:	e7f9      	b.n	9002badc <memset+0x4>

9002bae8 <strncmp>:
9002bae8:	b510      	push	{r4, lr}
9002baea:	b16a      	cbz	r2, 9002bb08 <strncmp+0x20>
9002baec:	3901      	subs	r1, #1
9002baee:	1884      	adds	r4, r0, r2
9002baf0:	f810 2b01 	ldrb.w	r2, [r0], #1
9002baf4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002baf8:	429a      	cmp	r2, r3
9002bafa:	d103      	bne.n	9002bb04 <strncmp+0x1c>
9002bafc:	42a0      	cmp	r0, r4
9002bafe:	d001      	beq.n	9002bb04 <strncmp+0x1c>
9002bb00:	2a00      	cmp	r2, #0
9002bb02:	d1f5      	bne.n	9002baf0 <strncmp+0x8>
9002bb04:	1ad0      	subs	r0, r2, r3
9002bb06:	bd10      	pop	{r4, pc}
9002bb08:	4610      	mov	r0, r2
9002bb0a:	e7fc      	b.n	9002bb06 <strncmp+0x1e>

9002bb0c <_raise_r>:
9002bb0c:	291f      	cmp	r1, #31
9002bb0e:	b538      	push	{r3, r4, r5, lr}
9002bb10:	4605      	mov	r5, r0
9002bb12:	460c      	mov	r4, r1
9002bb14:	d904      	bls.n	9002bb20 <_raise_r+0x14>
9002bb16:	2316      	movs	r3, #22
9002bb18:	6003      	str	r3, [r0, #0]
9002bb1a:	f04f 30ff 	mov.w	r0, #4294967295
9002bb1e:	bd38      	pop	{r3, r4, r5, pc}
9002bb20:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002bb22:	b112      	cbz	r2, 9002bb2a <_raise_r+0x1e>
9002bb24:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002bb28:	b94b      	cbnz	r3, 9002bb3e <_raise_r+0x32>
9002bb2a:	4628      	mov	r0, r5
9002bb2c:	f000 f8c2 	bl	9002bcb4 <_getpid_r>
9002bb30:	4622      	mov	r2, r4
9002bb32:	4601      	mov	r1, r0
9002bb34:	4628      	mov	r0, r5
9002bb36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002bb3a:	f000 b8a9 	b.w	9002bc90 <_kill_r>
9002bb3e:	2b01      	cmp	r3, #1
9002bb40:	d00a      	beq.n	9002bb58 <_raise_r+0x4c>
9002bb42:	1c59      	adds	r1, r3, #1
9002bb44:	d103      	bne.n	9002bb4e <_raise_r+0x42>
9002bb46:	2316      	movs	r3, #22
9002bb48:	6003      	str	r3, [r0, #0]
9002bb4a:	2001      	movs	r0, #1
9002bb4c:	e7e7      	b.n	9002bb1e <_raise_r+0x12>
9002bb4e:	2100      	movs	r1, #0
9002bb50:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002bb54:	4620      	mov	r0, r4
9002bb56:	4798      	blx	r3
9002bb58:	2000      	movs	r0, #0
9002bb5a:	e7e0      	b.n	9002bb1e <_raise_r+0x12>

9002bb5c <raise>:
9002bb5c:	4b02      	ldr	r3, [pc, #8]	@ (9002bb68 <raise+0xc>)
9002bb5e:	4601      	mov	r1, r0
9002bb60:	6818      	ldr	r0, [r3, #0]
9002bb62:	f7ff bfd3 	b.w	9002bb0c <_raise_r>
9002bb66:	bf00      	nop
9002bb68:	24000114 	.word	0x24000114

9002bb6c <_close_r>:
9002bb6c:	b538      	push	{r3, r4, r5, lr}
9002bb6e:	4d06      	ldr	r5, [pc, #24]	@ (9002bb88 <_close_r+0x1c>)
9002bb70:	2300      	movs	r3, #0
9002bb72:	4604      	mov	r4, r0
9002bb74:	4608      	mov	r0, r1
9002bb76:	602b      	str	r3, [r5, #0]
9002bb78:	f7d8 fe20 	bl	900047bc <_close>
9002bb7c:	1c43      	adds	r3, r0, #1
9002bb7e:	d102      	bne.n	9002bb86 <_close_r+0x1a>
9002bb80:	682b      	ldr	r3, [r5, #0]
9002bb82:	b103      	cbz	r3, 9002bb86 <_close_r+0x1a>
9002bb84:	6023      	str	r3, [r4, #0]
9002bb86:	bd38      	pop	{r3, r4, r5, pc}
9002bb88:	2402246c 	.word	0x2402246c

9002bb8c <_reclaim_reent>:
9002bb8c:	4b2d      	ldr	r3, [pc, #180]	@ (9002bc44 <_reclaim_reent+0xb8>)
9002bb8e:	681b      	ldr	r3, [r3, #0]
9002bb90:	4283      	cmp	r3, r0
9002bb92:	b570      	push	{r4, r5, r6, lr}
9002bb94:	4604      	mov	r4, r0
9002bb96:	d053      	beq.n	9002bc40 <_reclaim_reent+0xb4>
9002bb98:	69c3      	ldr	r3, [r0, #28]
9002bb9a:	b31b      	cbz	r3, 9002bbe4 <_reclaim_reent+0x58>
9002bb9c:	68db      	ldr	r3, [r3, #12]
9002bb9e:	b163      	cbz	r3, 9002bbba <_reclaim_reent+0x2e>
9002bba0:	2500      	movs	r5, #0
9002bba2:	69e3      	ldr	r3, [r4, #28]
9002bba4:	68db      	ldr	r3, [r3, #12]
9002bba6:	5959      	ldr	r1, [r3, r5]
9002bba8:	b9b1      	cbnz	r1, 9002bbd8 <_reclaim_reent+0x4c>
9002bbaa:	3504      	adds	r5, #4
9002bbac:	2d80      	cmp	r5, #128	@ 0x80
9002bbae:	d1f8      	bne.n	9002bba2 <_reclaim_reent+0x16>
9002bbb0:	69e3      	ldr	r3, [r4, #28]
9002bbb2:	4620      	mov	r0, r4
9002bbb4:	68d9      	ldr	r1, [r3, #12]
9002bbb6:	f000 f939 	bl	9002be2c <_free_r>
9002bbba:	69e3      	ldr	r3, [r4, #28]
9002bbbc:	6819      	ldr	r1, [r3, #0]
9002bbbe:	b111      	cbz	r1, 9002bbc6 <_reclaim_reent+0x3a>
9002bbc0:	4620      	mov	r0, r4
9002bbc2:	f000 f933 	bl	9002be2c <_free_r>
9002bbc6:	69e3      	ldr	r3, [r4, #28]
9002bbc8:	689d      	ldr	r5, [r3, #8]
9002bbca:	b15d      	cbz	r5, 9002bbe4 <_reclaim_reent+0x58>
9002bbcc:	4629      	mov	r1, r5
9002bbce:	4620      	mov	r0, r4
9002bbd0:	682d      	ldr	r5, [r5, #0]
9002bbd2:	f000 f92b 	bl	9002be2c <_free_r>
9002bbd6:	e7f8      	b.n	9002bbca <_reclaim_reent+0x3e>
9002bbd8:	680e      	ldr	r6, [r1, #0]
9002bbda:	4620      	mov	r0, r4
9002bbdc:	f000 f926 	bl	9002be2c <_free_r>
9002bbe0:	4631      	mov	r1, r6
9002bbe2:	e7e1      	b.n	9002bba8 <_reclaim_reent+0x1c>
9002bbe4:	6961      	ldr	r1, [r4, #20]
9002bbe6:	b111      	cbz	r1, 9002bbee <_reclaim_reent+0x62>
9002bbe8:	4620      	mov	r0, r4
9002bbea:	f000 f91f 	bl	9002be2c <_free_r>
9002bbee:	69e1      	ldr	r1, [r4, #28]
9002bbf0:	b111      	cbz	r1, 9002bbf8 <_reclaim_reent+0x6c>
9002bbf2:	4620      	mov	r0, r4
9002bbf4:	f000 f91a 	bl	9002be2c <_free_r>
9002bbf8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9002bbfa:	b111      	cbz	r1, 9002bc02 <_reclaim_reent+0x76>
9002bbfc:	4620      	mov	r0, r4
9002bbfe:	f000 f915 	bl	9002be2c <_free_r>
9002bc02:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002bc04:	b111      	cbz	r1, 9002bc0c <_reclaim_reent+0x80>
9002bc06:	4620      	mov	r0, r4
9002bc08:	f000 f910 	bl	9002be2c <_free_r>
9002bc0c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
9002bc0e:	b111      	cbz	r1, 9002bc16 <_reclaim_reent+0x8a>
9002bc10:	4620      	mov	r0, r4
9002bc12:	f000 f90b 	bl	9002be2c <_free_r>
9002bc16:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9002bc18:	b111      	cbz	r1, 9002bc20 <_reclaim_reent+0x94>
9002bc1a:	4620      	mov	r0, r4
9002bc1c:	f000 f906 	bl	9002be2c <_free_r>
9002bc20:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9002bc22:	b111      	cbz	r1, 9002bc2a <_reclaim_reent+0x9e>
9002bc24:	4620      	mov	r0, r4
9002bc26:	f000 f901 	bl	9002be2c <_free_r>
9002bc2a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9002bc2c:	b111      	cbz	r1, 9002bc34 <_reclaim_reent+0xa8>
9002bc2e:	4620      	mov	r0, r4
9002bc30:	f000 f8fc 	bl	9002be2c <_free_r>
9002bc34:	6a23      	ldr	r3, [r4, #32]
9002bc36:	b11b      	cbz	r3, 9002bc40 <_reclaim_reent+0xb4>
9002bc38:	4620      	mov	r0, r4
9002bc3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002bc3e:	4718      	bx	r3
9002bc40:	bd70      	pop	{r4, r5, r6, pc}
9002bc42:	bf00      	nop
9002bc44:	24000114 	.word	0x24000114

9002bc48 <_lseek_r>:
9002bc48:	b538      	push	{r3, r4, r5, lr}
9002bc4a:	4d07      	ldr	r5, [pc, #28]	@ (9002bc68 <_lseek_r+0x20>)
9002bc4c:	4604      	mov	r4, r0
9002bc4e:	4608      	mov	r0, r1
9002bc50:	4611      	mov	r1, r2
9002bc52:	2200      	movs	r2, #0
9002bc54:	602a      	str	r2, [r5, #0]
9002bc56:	461a      	mov	r2, r3
9002bc58:	f7d8 fdbc 	bl	900047d4 <_lseek>
9002bc5c:	1c43      	adds	r3, r0, #1
9002bc5e:	d102      	bne.n	9002bc66 <_lseek_r+0x1e>
9002bc60:	682b      	ldr	r3, [r5, #0]
9002bc62:	b103      	cbz	r3, 9002bc66 <_lseek_r+0x1e>
9002bc64:	6023      	str	r3, [r4, #0]
9002bc66:	bd38      	pop	{r3, r4, r5, pc}
9002bc68:	2402246c 	.word	0x2402246c

9002bc6c <_read_r>:
9002bc6c:	b538      	push	{r3, r4, r5, lr}
9002bc6e:	4d07      	ldr	r5, [pc, #28]	@ (9002bc8c <_read_r+0x20>)
9002bc70:	4604      	mov	r4, r0
9002bc72:	4608      	mov	r0, r1
9002bc74:	4611      	mov	r1, r2
9002bc76:	2200      	movs	r2, #0
9002bc78:	602a      	str	r2, [r5, #0]
9002bc7a:	461a      	mov	r2, r3
9002bc7c:	f7d8 fd82 	bl	90004784 <_read>
9002bc80:	1c43      	adds	r3, r0, #1
9002bc82:	d102      	bne.n	9002bc8a <_read_r+0x1e>
9002bc84:	682b      	ldr	r3, [r5, #0]
9002bc86:	b103      	cbz	r3, 9002bc8a <_read_r+0x1e>
9002bc88:	6023      	str	r3, [r4, #0]
9002bc8a:	bd38      	pop	{r3, r4, r5, pc}
9002bc8c:	2402246c 	.word	0x2402246c

9002bc90 <_kill_r>:
9002bc90:	b538      	push	{r3, r4, r5, lr}
9002bc92:	4d07      	ldr	r5, [pc, #28]	@ (9002bcb0 <_kill_r+0x20>)
9002bc94:	2300      	movs	r3, #0
9002bc96:	4604      	mov	r4, r0
9002bc98:	4608      	mov	r0, r1
9002bc9a:	4611      	mov	r1, r2
9002bc9c:	602b      	str	r3, [r5, #0]
9002bc9e:	f7d8 fd61 	bl	90004764 <_kill>
9002bca2:	1c43      	adds	r3, r0, #1
9002bca4:	d102      	bne.n	9002bcac <_kill_r+0x1c>
9002bca6:	682b      	ldr	r3, [r5, #0]
9002bca8:	b103      	cbz	r3, 9002bcac <_kill_r+0x1c>
9002bcaa:	6023      	str	r3, [r4, #0]
9002bcac:	bd38      	pop	{r3, r4, r5, pc}
9002bcae:	bf00      	nop
9002bcb0:	2402246c 	.word	0x2402246c

9002bcb4 <_getpid_r>:
9002bcb4:	f7d8 bd54 	b.w	90004760 <_getpid>

9002bcb8 <_sbrk_r>:
9002bcb8:	b538      	push	{r3, r4, r5, lr}
9002bcba:	4d06      	ldr	r5, [pc, #24]	@ (9002bcd4 <_sbrk_r+0x1c>)
9002bcbc:	2300      	movs	r3, #0
9002bcbe:	4604      	mov	r4, r0
9002bcc0:	4608      	mov	r0, r1
9002bcc2:	602b      	str	r3, [r5, #0]
9002bcc4:	f7d8 fd88 	bl	900047d8 <_sbrk>
9002bcc8:	1c43      	adds	r3, r0, #1
9002bcca:	d102      	bne.n	9002bcd2 <_sbrk_r+0x1a>
9002bccc:	682b      	ldr	r3, [r5, #0]
9002bcce:	b103      	cbz	r3, 9002bcd2 <_sbrk_r+0x1a>
9002bcd0:	6023      	str	r3, [r4, #0]
9002bcd2:	bd38      	pop	{r3, r4, r5, pc}
9002bcd4:	2402246c 	.word	0x2402246c

9002bcd8 <_write_r>:
9002bcd8:	b538      	push	{r3, r4, r5, lr}
9002bcda:	4d07      	ldr	r5, [pc, #28]	@ (9002bcf8 <_write_r+0x20>)
9002bcdc:	4604      	mov	r4, r0
9002bcde:	4608      	mov	r0, r1
9002bce0:	4611      	mov	r1, r2
9002bce2:	2200      	movs	r2, #0
9002bce4:	602a      	str	r2, [r5, #0]
9002bce6:	461a      	mov	r2, r3
9002bce8:	f7d8 fd5a 	bl	900047a0 <_write>
9002bcec:	1c43      	adds	r3, r0, #1
9002bcee:	d102      	bne.n	9002bcf6 <_write_r+0x1e>
9002bcf0:	682b      	ldr	r3, [r5, #0]
9002bcf2:	b103      	cbz	r3, 9002bcf6 <_write_r+0x1e>
9002bcf4:	6023      	str	r3, [r4, #0]
9002bcf6:	bd38      	pop	{r3, r4, r5, pc}
9002bcf8:	2402246c 	.word	0x2402246c

9002bcfc <__errno>:
9002bcfc:	4b01      	ldr	r3, [pc, #4]	@ (9002bd04 <__errno+0x8>)
9002bcfe:	6818      	ldr	r0, [r3, #0]
9002bd00:	4770      	bx	lr
9002bd02:	bf00      	nop
9002bd04:	24000114 	.word	0x24000114

9002bd08 <__libc_init_array>:
9002bd08:	b570      	push	{r4, r5, r6, lr}
9002bd0a:	4d0d      	ldr	r5, [pc, #52]	@ (9002bd40 <__libc_init_array+0x38>)
9002bd0c:	4c0d      	ldr	r4, [pc, #52]	@ (9002bd44 <__libc_init_array+0x3c>)
9002bd0e:	1b64      	subs	r4, r4, r5
9002bd10:	10a4      	asrs	r4, r4, #2
9002bd12:	2600      	movs	r6, #0
9002bd14:	42a6      	cmp	r6, r4
9002bd16:	d109      	bne.n	9002bd2c <__libc_init_array+0x24>
9002bd18:	4d0b      	ldr	r5, [pc, #44]	@ (9002bd48 <__libc_init_array+0x40>)
9002bd1a:	4c0c      	ldr	r4, [pc, #48]	@ (9002bd4c <__libc_init_array+0x44>)
9002bd1c:	f000 fcce 	bl	9002c6bc <_init>
9002bd20:	1b64      	subs	r4, r4, r5
9002bd22:	10a4      	asrs	r4, r4, #2
9002bd24:	2600      	movs	r6, #0
9002bd26:	42a6      	cmp	r6, r4
9002bd28:	d105      	bne.n	9002bd36 <__libc_init_array+0x2e>
9002bd2a:	bd70      	pop	{r4, r5, r6, pc}
9002bd2c:	f855 3b04 	ldr.w	r3, [r5], #4
9002bd30:	4798      	blx	r3
9002bd32:	3601      	adds	r6, #1
9002bd34:	e7ee      	b.n	9002bd14 <__libc_init_array+0xc>
9002bd36:	f855 3b04 	ldr.w	r3, [r5], #4
9002bd3a:	4798      	blx	r3
9002bd3c:	3601      	adds	r6, #1
9002bd3e:	e7f2      	b.n	9002bd26 <__libc_init_array+0x1e>
9002bd40:	9002fff4 	.word	0x9002fff4
9002bd44:	9002fff4 	.word	0x9002fff4
9002bd48:	9002fff4 	.word	0x9002fff4
9002bd4c:	9003000c 	.word	0x9003000c

9002bd50 <__retarget_lock_init_recursive>:
9002bd50:	4770      	bx	lr

9002bd52 <__retarget_lock_acquire_recursive>:
9002bd52:	4770      	bx	lr

9002bd54 <__retarget_lock_release_recursive>:
9002bd54:	4770      	bx	lr

9002bd56 <memcpy>:
9002bd56:	440a      	add	r2, r1
9002bd58:	4291      	cmp	r1, r2
9002bd5a:	f100 33ff 	add.w	r3, r0, #4294967295
9002bd5e:	d100      	bne.n	9002bd62 <memcpy+0xc>
9002bd60:	4770      	bx	lr
9002bd62:	b510      	push	{r4, lr}
9002bd64:	f811 4b01 	ldrb.w	r4, [r1], #1
9002bd68:	f803 4f01 	strb.w	r4, [r3, #1]!
9002bd6c:	4291      	cmp	r1, r2
9002bd6e:	d1f9      	bne.n	9002bd64 <memcpy+0xe>
9002bd70:	bd10      	pop	{r4, pc}
	...

9002bd74 <__register_exitproc>:
9002bd74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002bd78:	4d27      	ldr	r5, [pc, #156]	@ (9002be18 <__register_exitproc+0xa4>)
9002bd7a:	4607      	mov	r7, r0
9002bd7c:	6828      	ldr	r0, [r5, #0]
9002bd7e:	4691      	mov	r9, r2
9002bd80:	460e      	mov	r6, r1
9002bd82:	4698      	mov	r8, r3
9002bd84:	f7ff ffe5 	bl	9002bd52 <__retarget_lock_acquire_recursive>
9002bd88:	4a24      	ldr	r2, [pc, #144]	@ (9002be1c <__register_exitproc+0xa8>)
9002bd8a:	6814      	ldr	r4, [r2, #0]
9002bd8c:	b93c      	cbnz	r4, 9002bd9e <__register_exitproc+0x2a>
9002bd8e:	4b24      	ldr	r3, [pc, #144]	@ (9002be20 <__register_exitproc+0xac>)
9002bd90:	6013      	str	r3, [r2, #0]
9002bd92:	4a24      	ldr	r2, [pc, #144]	@ (9002be24 <__register_exitproc+0xb0>)
9002bd94:	b112      	cbz	r2, 9002bd9c <__register_exitproc+0x28>
9002bd96:	6812      	ldr	r2, [r2, #0]
9002bd98:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002bd9c:	4c20      	ldr	r4, [pc, #128]	@ (9002be20 <__register_exitproc+0xac>)
9002bd9e:	6863      	ldr	r3, [r4, #4]
9002bda0:	2b1f      	cmp	r3, #31
9002bda2:	dd06      	ble.n	9002bdb2 <__register_exitproc+0x3e>
9002bda4:	6828      	ldr	r0, [r5, #0]
9002bda6:	f7ff ffd5 	bl	9002bd54 <__retarget_lock_release_recursive>
9002bdaa:	f04f 30ff 	mov.w	r0, #4294967295
9002bdae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002bdb2:	b32f      	cbz	r7, 9002be00 <__register_exitproc+0x8c>
9002bdb4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002bdb8:	b968      	cbnz	r0, 9002bdd6 <__register_exitproc+0x62>
9002bdba:	4b1b      	ldr	r3, [pc, #108]	@ (9002be28 <__register_exitproc+0xb4>)
9002bdbc:	2b00      	cmp	r3, #0
9002bdbe:	d0f1      	beq.n	9002bda4 <__register_exitproc+0x30>
9002bdc0:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002bdc4:	f7ff fc10 	bl	9002b5e8 <malloc>
9002bdc8:	2800      	cmp	r0, #0
9002bdca:	d0eb      	beq.n	9002bda4 <__register_exitproc+0x30>
9002bdcc:	2300      	movs	r3, #0
9002bdce:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002bdd2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002bdd6:	6863      	ldr	r3, [r4, #4]
9002bdd8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002bddc:	2201      	movs	r2, #1
9002bdde:	409a      	lsls	r2, r3
9002bde0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002bde4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002bde8:	4313      	orrs	r3, r2
9002bdea:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002bdee:	2f02      	cmp	r7, #2
9002bdf0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002bdf4:	bf02      	ittt	eq
9002bdf6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002bdfa:	4313      	orreq	r3, r2
9002bdfc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002be00:	6863      	ldr	r3, [r4, #4]
9002be02:	6828      	ldr	r0, [r5, #0]
9002be04:	1c5a      	adds	r2, r3, #1
9002be06:	3302      	adds	r3, #2
9002be08:	6062      	str	r2, [r4, #4]
9002be0a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002be0e:	f7ff ffa1 	bl	9002bd54 <__retarget_lock_release_recursive>
9002be12:	2000      	movs	r0, #0
9002be14:	e7cb      	b.n	9002bdae <__register_exitproc+0x3a>
9002be16:	bf00      	nop
9002be18:	24000164 	.word	0x24000164
9002be1c:	24022500 	.word	0x24022500
9002be20:	24022474 	.word	0x24022474
9002be24:	9002ff98 	.word	0x9002ff98
9002be28:	9002b5e9 	.word	0x9002b5e9

9002be2c <_free_r>:
9002be2c:	b538      	push	{r3, r4, r5, lr}
9002be2e:	4605      	mov	r5, r0
9002be30:	2900      	cmp	r1, #0
9002be32:	d041      	beq.n	9002beb8 <_free_r+0x8c>
9002be34:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002be38:	1f0c      	subs	r4, r1, #4
9002be3a:	2b00      	cmp	r3, #0
9002be3c:	bfb8      	it	lt
9002be3e:	18e4      	addlt	r4, r4, r3
9002be40:	f7ff fc84 	bl	9002b74c <__malloc_lock>
9002be44:	4a1d      	ldr	r2, [pc, #116]	@ (9002bebc <_free_r+0x90>)
9002be46:	6813      	ldr	r3, [r2, #0]
9002be48:	b933      	cbnz	r3, 9002be58 <_free_r+0x2c>
9002be4a:	6063      	str	r3, [r4, #4]
9002be4c:	6014      	str	r4, [r2, #0]
9002be4e:	4628      	mov	r0, r5
9002be50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002be54:	f7ff bc80 	b.w	9002b758 <__malloc_unlock>
9002be58:	42a3      	cmp	r3, r4
9002be5a:	d908      	bls.n	9002be6e <_free_r+0x42>
9002be5c:	6820      	ldr	r0, [r4, #0]
9002be5e:	1821      	adds	r1, r4, r0
9002be60:	428b      	cmp	r3, r1
9002be62:	bf01      	itttt	eq
9002be64:	6819      	ldreq	r1, [r3, #0]
9002be66:	685b      	ldreq	r3, [r3, #4]
9002be68:	1809      	addeq	r1, r1, r0
9002be6a:	6021      	streq	r1, [r4, #0]
9002be6c:	e7ed      	b.n	9002be4a <_free_r+0x1e>
9002be6e:	461a      	mov	r2, r3
9002be70:	685b      	ldr	r3, [r3, #4]
9002be72:	b10b      	cbz	r3, 9002be78 <_free_r+0x4c>
9002be74:	42a3      	cmp	r3, r4
9002be76:	d9fa      	bls.n	9002be6e <_free_r+0x42>
9002be78:	6811      	ldr	r1, [r2, #0]
9002be7a:	1850      	adds	r0, r2, r1
9002be7c:	42a0      	cmp	r0, r4
9002be7e:	d10b      	bne.n	9002be98 <_free_r+0x6c>
9002be80:	6820      	ldr	r0, [r4, #0]
9002be82:	4401      	add	r1, r0
9002be84:	1850      	adds	r0, r2, r1
9002be86:	4283      	cmp	r3, r0
9002be88:	6011      	str	r1, [r2, #0]
9002be8a:	d1e0      	bne.n	9002be4e <_free_r+0x22>
9002be8c:	6818      	ldr	r0, [r3, #0]
9002be8e:	685b      	ldr	r3, [r3, #4]
9002be90:	6053      	str	r3, [r2, #4]
9002be92:	4408      	add	r0, r1
9002be94:	6010      	str	r0, [r2, #0]
9002be96:	e7da      	b.n	9002be4e <_free_r+0x22>
9002be98:	d902      	bls.n	9002bea0 <_free_r+0x74>
9002be9a:	230c      	movs	r3, #12
9002be9c:	602b      	str	r3, [r5, #0]
9002be9e:	e7d6      	b.n	9002be4e <_free_r+0x22>
9002bea0:	6820      	ldr	r0, [r4, #0]
9002bea2:	1821      	adds	r1, r4, r0
9002bea4:	428b      	cmp	r3, r1
9002bea6:	bf04      	itt	eq
9002bea8:	6819      	ldreq	r1, [r3, #0]
9002beaa:	685b      	ldreq	r3, [r3, #4]
9002beac:	6063      	str	r3, [r4, #4]
9002beae:	bf04      	itt	eq
9002beb0:	1809      	addeq	r1, r1, r0
9002beb2:	6021      	streq	r1, [r4, #0]
9002beb4:	6054      	str	r4, [r2, #4]
9002beb6:	e7ca      	b.n	9002be4e <_free_r+0x22>
9002beb8:	bd38      	pop	{r3, r4, r5, pc}
9002beba:	bf00      	nop
9002bebc:	2402232c 	.word	0x2402232c

9002bec0 <__sfputc_r>:
9002bec0:	6893      	ldr	r3, [r2, #8]
9002bec2:	3b01      	subs	r3, #1
9002bec4:	2b00      	cmp	r3, #0
9002bec6:	b410      	push	{r4}
9002bec8:	6093      	str	r3, [r2, #8]
9002beca:	da08      	bge.n	9002bede <__sfputc_r+0x1e>
9002becc:	6994      	ldr	r4, [r2, #24]
9002bece:	42a3      	cmp	r3, r4
9002bed0:	db01      	blt.n	9002bed6 <__sfputc_r+0x16>
9002bed2:	290a      	cmp	r1, #10
9002bed4:	d103      	bne.n	9002bede <__sfputc_r+0x1e>
9002bed6:	f85d 4b04 	ldr.w	r4, [sp], #4
9002beda:	f7ff bd68 	b.w	9002b9ae <__swbuf_r>
9002bede:	6813      	ldr	r3, [r2, #0]
9002bee0:	1c58      	adds	r0, r3, #1
9002bee2:	6010      	str	r0, [r2, #0]
9002bee4:	7019      	strb	r1, [r3, #0]
9002bee6:	4608      	mov	r0, r1
9002bee8:	f85d 4b04 	ldr.w	r4, [sp], #4
9002beec:	4770      	bx	lr

9002beee <__sfputs_r>:
9002beee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002bef0:	4606      	mov	r6, r0
9002bef2:	460f      	mov	r7, r1
9002bef4:	4614      	mov	r4, r2
9002bef6:	18d5      	adds	r5, r2, r3
9002bef8:	42ac      	cmp	r4, r5
9002befa:	d101      	bne.n	9002bf00 <__sfputs_r+0x12>
9002befc:	2000      	movs	r0, #0
9002befe:	e007      	b.n	9002bf10 <__sfputs_r+0x22>
9002bf00:	f814 1b01 	ldrb.w	r1, [r4], #1
9002bf04:	463a      	mov	r2, r7
9002bf06:	4630      	mov	r0, r6
9002bf08:	f7ff ffda 	bl	9002bec0 <__sfputc_r>
9002bf0c:	1c43      	adds	r3, r0, #1
9002bf0e:	d1f3      	bne.n	9002bef8 <__sfputs_r+0xa>
9002bf10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002bf14 <_vfiprintf_r>:
9002bf14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002bf18:	460d      	mov	r5, r1
9002bf1a:	b09d      	sub	sp, #116	@ 0x74
9002bf1c:	4614      	mov	r4, r2
9002bf1e:	4698      	mov	r8, r3
9002bf20:	4606      	mov	r6, r0
9002bf22:	b118      	cbz	r0, 9002bf2c <_vfiprintf_r+0x18>
9002bf24:	6a03      	ldr	r3, [r0, #32]
9002bf26:	b90b      	cbnz	r3, 9002bf2c <_vfiprintf_r+0x18>
9002bf28:	f7ff fcb6 	bl	9002b898 <__sinit>
9002bf2c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002bf2e:	07d9      	lsls	r1, r3, #31
9002bf30:	d405      	bmi.n	9002bf3e <_vfiprintf_r+0x2a>
9002bf32:	89ab      	ldrh	r3, [r5, #12]
9002bf34:	059a      	lsls	r2, r3, #22
9002bf36:	d402      	bmi.n	9002bf3e <_vfiprintf_r+0x2a>
9002bf38:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002bf3a:	f7ff ff0a 	bl	9002bd52 <__retarget_lock_acquire_recursive>
9002bf3e:	89ab      	ldrh	r3, [r5, #12]
9002bf40:	071b      	lsls	r3, r3, #28
9002bf42:	d501      	bpl.n	9002bf48 <_vfiprintf_r+0x34>
9002bf44:	692b      	ldr	r3, [r5, #16]
9002bf46:	b99b      	cbnz	r3, 9002bf70 <_vfiprintf_r+0x5c>
9002bf48:	4629      	mov	r1, r5
9002bf4a:	4630      	mov	r0, r6
9002bf4c:	f7ff fd6e 	bl	9002ba2c <__swsetup_r>
9002bf50:	b170      	cbz	r0, 9002bf70 <_vfiprintf_r+0x5c>
9002bf52:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002bf54:	07dc      	lsls	r4, r3, #31
9002bf56:	d504      	bpl.n	9002bf62 <_vfiprintf_r+0x4e>
9002bf58:	f04f 30ff 	mov.w	r0, #4294967295
9002bf5c:	b01d      	add	sp, #116	@ 0x74
9002bf5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002bf62:	89ab      	ldrh	r3, [r5, #12]
9002bf64:	0598      	lsls	r0, r3, #22
9002bf66:	d4f7      	bmi.n	9002bf58 <_vfiprintf_r+0x44>
9002bf68:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002bf6a:	f7ff fef3 	bl	9002bd54 <__retarget_lock_release_recursive>
9002bf6e:	e7f3      	b.n	9002bf58 <_vfiprintf_r+0x44>
9002bf70:	2300      	movs	r3, #0
9002bf72:	9309      	str	r3, [sp, #36]	@ 0x24
9002bf74:	2320      	movs	r3, #32
9002bf76:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002bf7a:	f8cd 800c 	str.w	r8, [sp, #12]
9002bf7e:	2330      	movs	r3, #48	@ 0x30
9002bf80:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002c130 <_vfiprintf_r+0x21c>
9002bf84:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002bf88:	f04f 0901 	mov.w	r9, #1
9002bf8c:	4623      	mov	r3, r4
9002bf8e:	469a      	mov	sl, r3
9002bf90:	f813 2b01 	ldrb.w	r2, [r3], #1
9002bf94:	b10a      	cbz	r2, 9002bf9a <_vfiprintf_r+0x86>
9002bf96:	2a25      	cmp	r2, #37	@ 0x25
9002bf98:	d1f9      	bne.n	9002bf8e <_vfiprintf_r+0x7a>
9002bf9a:	ebba 0b04 	subs.w	fp, sl, r4
9002bf9e:	d00b      	beq.n	9002bfb8 <_vfiprintf_r+0xa4>
9002bfa0:	465b      	mov	r3, fp
9002bfa2:	4622      	mov	r2, r4
9002bfa4:	4629      	mov	r1, r5
9002bfa6:	4630      	mov	r0, r6
9002bfa8:	f7ff ffa1 	bl	9002beee <__sfputs_r>
9002bfac:	3001      	adds	r0, #1
9002bfae:	f000 80a7 	beq.w	9002c100 <_vfiprintf_r+0x1ec>
9002bfb2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002bfb4:	445a      	add	r2, fp
9002bfb6:	9209      	str	r2, [sp, #36]	@ 0x24
9002bfb8:	f89a 3000 	ldrb.w	r3, [sl]
9002bfbc:	2b00      	cmp	r3, #0
9002bfbe:	f000 809f 	beq.w	9002c100 <_vfiprintf_r+0x1ec>
9002bfc2:	2300      	movs	r3, #0
9002bfc4:	f04f 32ff 	mov.w	r2, #4294967295
9002bfc8:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002bfcc:	f10a 0a01 	add.w	sl, sl, #1
9002bfd0:	9304      	str	r3, [sp, #16]
9002bfd2:	9307      	str	r3, [sp, #28]
9002bfd4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002bfd8:	931a      	str	r3, [sp, #104]	@ 0x68
9002bfda:	4654      	mov	r4, sl
9002bfdc:	2205      	movs	r2, #5
9002bfde:	f814 1b01 	ldrb.w	r1, [r4], #1
9002bfe2:	4853      	ldr	r0, [pc, #332]	@ (9002c130 <_vfiprintf_r+0x21c>)
9002bfe4:	f7d4 f97c 	bl	900002e0 <memchr>
9002bfe8:	9a04      	ldr	r2, [sp, #16]
9002bfea:	b9d8      	cbnz	r0, 9002c024 <_vfiprintf_r+0x110>
9002bfec:	06d1      	lsls	r1, r2, #27
9002bfee:	bf44      	itt	mi
9002bff0:	2320      	movmi	r3, #32
9002bff2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002bff6:	0713      	lsls	r3, r2, #28
9002bff8:	bf44      	itt	mi
9002bffa:	232b      	movmi	r3, #43	@ 0x2b
9002bffc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002c000:	f89a 3000 	ldrb.w	r3, [sl]
9002c004:	2b2a      	cmp	r3, #42	@ 0x2a
9002c006:	d015      	beq.n	9002c034 <_vfiprintf_r+0x120>
9002c008:	9a07      	ldr	r2, [sp, #28]
9002c00a:	4654      	mov	r4, sl
9002c00c:	2000      	movs	r0, #0
9002c00e:	f04f 0c0a 	mov.w	ip, #10
9002c012:	4621      	mov	r1, r4
9002c014:	f811 3b01 	ldrb.w	r3, [r1], #1
9002c018:	3b30      	subs	r3, #48	@ 0x30
9002c01a:	2b09      	cmp	r3, #9
9002c01c:	d94b      	bls.n	9002c0b6 <_vfiprintf_r+0x1a2>
9002c01e:	b1b0      	cbz	r0, 9002c04e <_vfiprintf_r+0x13a>
9002c020:	9207      	str	r2, [sp, #28]
9002c022:	e014      	b.n	9002c04e <_vfiprintf_r+0x13a>
9002c024:	eba0 0308 	sub.w	r3, r0, r8
9002c028:	fa09 f303 	lsl.w	r3, r9, r3
9002c02c:	4313      	orrs	r3, r2
9002c02e:	9304      	str	r3, [sp, #16]
9002c030:	46a2      	mov	sl, r4
9002c032:	e7d2      	b.n	9002bfda <_vfiprintf_r+0xc6>
9002c034:	9b03      	ldr	r3, [sp, #12]
9002c036:	1d19      	adds	r1, r3, #4
9002c038:	681b      	ldr	r3, [r3, #0]
9002c03a:	9103      	str	r1, [sp, #12]
9002c03c:	2b00      	cmp	r3, #0
9002c03e:	bfbb      	ittet	lt
9002c040:	425b      	neglt	r3, r3
9002c042:	f042 0202 	orrlt.w	r2, r2, #2
9002c046:	9307      	strge	r3, [sp, #28]
9002c048:	9307      	strlt	r3, [sp, #28]
9002c04a:	bfb8      	it	lt
9002c04c:	9204      	strlt	r2, [sp, #16]
9002c04e:	7823      	ldrb	r3, [r4, #0]
9002c050:	2b2e      	cmp	r3, #46	@ 0x2e
9002c052:	d10a      	bne.n	9002c06a <_vfiprintf_r+0x156>
9002c054:	7863      	ldrb	r3, [r4, #1]
9002c056:	2b2a      	cmp	r3, #42	@ 0x2a
9002c058:	d132      	bne.n	9002c0c0 <_vfiprintf_r+0x1ac>
9002c05a:	9b03      	ldr	r3, [sp, #12]
9002c05c:	1d1a      	adds	r2, r3, #4
9002c05e:	681b      	ldr	r3, [r3, #0]
9002c060:	9203      	str	r2, [sp, #12]
9002c062:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002c066:	3402      	adds	r4, #2
9002c068:	9305      	str	r3, [sp, #20]
9002c06a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002c140 <_vfiprintf_r+0x22c>
9002c06e:	7821      	ldrb	r1, [r4, #0]
9002c070:	2203      	movs	r2, #3
9002c072:	4650      	mov	r0, sl
9002c074:	f7d4 f934 	bl	900002e0 <memchr>
9002c078:	b138      	cbz	r0, 9002c08a <_vfiprintf_r+0x176>
9002c07a:	9b04      	ldr	r3, [sp, #16]
9002c07c:	eba0 000a 	sub.w	r0, r0, sl
9002c080:	2240      	movs	r2, #64	@ 0x40
9002c082:	4082      	lsls	r2, r0
9002c084:	4313      	orrs	r3, r2
9002c086:	3401      	adds	r4, #1
9002c088:	9304      	str	r3, [sp, #16]
9002c08a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002c08e:	4829      	ldr	r0, [pc, #164]	@ (9002c134 <_vfiprintf_r+0x220>)
9002c090:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002c094:	2206      	movs	r2, #6
9002c096:	f7d4 f923 	bl	900002e0 <memchr>
9002c09a:	2800      	cmp	r0, #0
9002c09c:	d03f      	beq.n	9002c11e <_vfiprintf_r+0x20a>
9002c09e:	4b26      	ldr	r3, [pc, #152]	@ (9002c138 <_vfiprintf_r+0x224>)
9002c0a0:	bb1b      	cbnz	r3, 9002c0ea <_vfiprintf_r+0x1d6>
9002c0a2:	9b03      	ldr	r3, [sp, #12]
9002c0a4:	3307      	adds	r3, #7
9002c0a6:	f023 0307 	bic.w	r3, r3, #7
9002c0aa:	3308      	adds	r3, #8
9002c0ac:	9303      	str	r3, [sp, #12]
9002c0ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002c0b0:	443b      	add	r3, r7
9002c0b2:	9309      	str	r3, [sp, #36]	@ 0x24
9002c0b4:	e76a      	b.n	9002bf8c <_vfiprintf_r+0x78>
9002c0b6:	fb0c 3202 	mla	r2, ip, r2, r3
9002c0ba:	460c      	mov	r4, r1
9002c0bc:	2001      	movs	r0, #1
9002c0be:	e7a8      	b.n	9002c012 <_vfiprintf_r+0xfe>
9002c0c0:	2300      	movs	r3, #0
9002c0c2:	3401      	adds	r4, #1
9002c0c4:	9305      	str	r3, [sp, #20]
9002c0c6:	4619      	mov	r1, r3
9002c0c8:	f04f 0c0a 	mov.w	ip, #10
9002c0cc:	4620      	mov	r0, r4
9002c0ce:	f810 2b01 	ldrb.w	r2, [r0], #1
9002c0d2:	3a30      	subs	r2, #48	@ 0x30
9002c0d4:	2a09      	cmp	r2, #9
9002c0d6:	d903      	bls.n	9002c0e0 <_vfiprintf_r+0x1cc>
9002c0d8:	2b00      	cmp	r3, #0
9002c0da:	d0c6      	beq.n	9002c06a <_vfiprintf_r+0x156>
9002c0dc:	9105      	str	r1, [sp, #20]
9002c0de:	e7c4      	b.n	9002c06a <_vfiprintf_r+0x156>
9002c0e0:	fb0c 2101 	mla	r1, ip, r1, r2
9002c0e4:	4604      	mov	r4, r0
9002c0e6:	2301      	movs	r3, #1
9002c0e8:	e7f0      	b.n	9002c0cc <_vfiprintf_r+0x1b8>
9002c0ea:	ab03      	add	r3, sp, #12
9002c0ec:	9300      	str	r3, [sp, #0]
9002c0ee:	462a      	mov	r2, r5
9002c0f0:	4b12      	ldr	r3, [pc, #72]	@ (9002c13c <_vfiprintf_r+0x228>)
9002c0f2:	a904      	add	r1, sp, #16
9002c0f4:	4630      	mov	r0, r6
9002c0f6:	f3af 8000 	nop.w
9002c0fa:	4607      	mov	r7, r0
9002c0fc:	1c78      	adds	r0, r7, #1
9002c0fe:	d1d6      	bne.n	9002c0ae <_vfiprintf_r+0x19a>
9002c100:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002c102:	07d9      	lsls	r1, r3, #31
9002c104:	d405      	bmi.n	9002c112 <_vfiprintf_r+0x1fe>
9002c106:	89ab      	ldrh	r3, [r5, #12]
9002c108:	059a      	lsls	r2, r3, #22
9002c10a:	d402      	bmi.n	9002c112 <_vfiprintf_r+0x1fe>
9002c10c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002c10e:	f7ff fe21 	bl	9002bd54 <__retarget_lock_release_recursive>
9002c112:	89ab      	ldrh	r3, [r5, #12]
9002c114:	065b      	lsls	r3, r3, #25
9002c116:	f53f af1f 	bmi.w	9002bf58 <_vfiprintf_r+0x44>
9002c11a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002c11c:	e71e      	b.n	9002bf5c <_vfiprintf_r+0x48>
9002c11e:	ab03      	add	r3, sp, #12
9002c120:	9300      	str	r3, [sp, #0]
9002c122:	462a      	mov	r2, r5
9002c124:	4b05      	ldr	r3, [pc, #20]	@ (9002c13c <_vfiprintf_r+0x228>)
9002c126:	a904      	add	r1, sp, #16
9002c128:	4630      	mov	r0, r6
9002c12a:	f000 f879 	bl	9002c220 <_printf_i>
9002c12e:	e7e4      	b.n	9002c0fa <_vfiprintf_r+0x1e6>
9002c130:	9002fe64 	.word	0x9002fe64
9002c134:	9002fe6e 	.word	0x9002fe6e
9002c138:	00000000 	.word	0x00000000
9002c13c:	9002beef 	.word	0x9002beef
9002c140:	9002fe6a 	.word	0x9002fe6a

9002c144 <_printf_common>:
9002c144:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002c148:	4616      	mov	r6, r2
9002c14a:	4698      	mov	r8, r3
9002c14c:	688a      	ldr	r2, [r1, #8]
9002c14e:	690b      	ldr	r3, [r1, #16]
9002c150:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002c154:	4293      	cmp	r3, r2
9002c156:	bfb8      	it	lt
9002c158:	4613      	movlt	r3, r2
9002c15a:	6033      	str	r3, [r6, #0]
9002c15c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002c160:	4607      	mov	r7, r0
9002c162:	460c      	mov	r4, r1
9002c164:	b10a      	cbz	r2, 9002c16a <_printf_common+0x26>
9002c166:	3301      	adds	r3, #1
9002c168:	6033      	str	r3, [r6, #0]
9002c16a:	6823      	ldr	r3, [r4, #0]
9002c16c:	0699      	lsls	r1, r3, #26
9002c16e:	bf42      	ittt	mi
9002c170:	6833      	ldrmi	r3, [r6, #0]
9002c172:	3302      	addmi	r3, #2
9002c174:	6033      	strmi	r3, [r6, #0]
9002c176:	6825      	ldr	r5, [r4, #0]
9002c178:	f015 0506 	ands.w	r5, r5, #6
9002c17c:	d106      	bne.n	9002c18c <_printf_common+0x48>
9002c17e:	f104 0a19 	add.w	sl, r4, #25
9002c182:	68e3      	ldr	r3, [r4, #12]
9002c184:	6832      	ldr	r2, [r6, #0]
9002c186:	1a9b      	subs	r3, r3, r2
9002c188:	42ab      	cmp	r3, r5
9002c18a:	dc26      	bgt.n	9002c1da <_printf_common+0x96>
9002c18c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002c190:	6822      	ldr	r2, [r4, #0]
9002c192:	3b00      	subs	r3, #0
9002c194:	bf18      	it	ne
9002c196:	2301      	movne	r3, #1
9002c198:	0692      	lsls	r2, r2, #26
9002c19a:	d42b      	bmi.n	9002c1f4 <_printf_common+0xb0>
9002c19c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002c1a0:	4641      	mov	r1, r8
9002c1a2:	4638      	mov	r0, r7
9002c1a4:	47c8      	blx	r9
9002c1a6:	3001      	adds	r0, #1
9002c1a8:	d01e      	beq.n	9002c1e8 <_printf_common+0xa4>
9002c1aa:	6823      	ldr	r3, [r4, #0]
9002c1ac:	6922      	ldr	r2, [r4, #16]
9002c1ae:	f003 0306 	and.w	r3, r3, #6
9002c1b2:	2b04      	cmp	r3, #4
9002c1b4:	bf02      	ittt	eq
9002c1b6:	68e5      	ldreq	r5, [r4, #12]
9002c1b8:	6833      	ldreq	r3, [r6, #0]
9002c1ba:	1aed      	subeq	r5, r5, r3
9002c1bc:	68a3      	ldr	r3, [r4, #8]
9002c1be:	bf0c      	ite	eq
9002c1c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002c1c4:	2500      	movne	r5, #0
9002c1c6:	4293      	cmp	r3, r2
9002c1c8:	bfc4      	itt	gt
9002c1ca:	1a9b      	subgt	r3, r3, r2
9002c1cc:	18ed      	addgt	r5, r5, r3
9002c1ce:	2600      	movs	r6, #0
9002c1d0:	341a      	adds	r4, #26
9002c1d2:	42b5      	cmp	r5, r6
9002c1d4:	d11a      	bne.n	9002c20c <_printf_common+0xc8>
9002c1d6:	2000      	movs	r0, #0
9002c1d8:	e008      	b.n	9002c1ec <_printf_common+0xa8>
9002c1da:	2301      	movs	r3, #1
9002c1dc:	4652      	mov	r2, sl
9002c1de:	4641      	mov	r1, r8
9002c1e0:	4638      	mov	r0, r7
9002c1e2:	47c8      	blx	r9
9002c1e4:	3001      	adds	r0, #1
9002c1e6:	d103      	bne.n	9002c1f0 <_printf_common+0xac>
9002c1e8:	f04f 30ff 	mov.w	r0, #4294967295
9002c1ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c1f0:	3501      	adds	r5, #1
9002c1f2:	e7c6      	b.n	9002c182 <_printf_common+0x3e>
9002c1f4:	18e1      	adds	r1, r4, r3
9002c1f6:	1c5a      	adds	r2, r3, #1
9002c1f8:	2030      	movs	r0, #48	@ 0x30
9002c1fa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002c1fe:	4422      	add	r2, r4
9002c200:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002c204:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002c208:	3302      	adds	r3, #2
9002c20a:	e7c7      	b.n	9002c19c <_printf_common+0x58>
9002c20c:	2301      	movs	r3, #1
9002c20e:	4622      	mov	r2, r4
9002c210:	4641      	mov	r1, r8
9002c212:	4638      	mov	r0, r7
9002c214:	47c8      	blx	r9
9002c216:	3001      	adds	r0, #1
9002c218:	d0e6      	beq.n	9002c1e8 <_printf_common+0xa4>
9002c21a:	3601      	adds	r6, #1
9002c21c:	e7d9      	b.n	9002c1d2 <_printf_common+0x8e>
	...

9002c220 <_printf_i>:
9002c220:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002c224:	7e0f      	ldrb	r7, [r1, #24]
9002c226:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002c228:	2f78      	cmp	r7, #120	@ 0x78
9002c22a:	4691      	mov	r9, r2
9002c22c:	4680      	mov	r8, r0
9002c22e:	460c      	mov	r4, r1
9002c230:	469a      	mov	sl, r3
9002c232:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002c236:	d807      	bhi.n	9002c248 <_printf_i+0x28>
9002c238:	2f62      	cmp	r7, #98	@ 0x62
9002c23a:	d80a      	bhi.n	9002c252 <_printf_i+0x32>
9002c23c:	2f00      	cmp	r7, #0
9002c23e:	f000 80d1 	beq.w	9002c3e4 <_printf_i+0x1c4>
9002c242:	2f58      	cmp	r7, #88	@ 0x58
9002c244:	f000 80b8 	beq.w	9002c3b8 <_printf_i+0x198>
9002c248:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002c24c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002c250:	e03a      	b.n	9002c2c8 <_printf_i+0xa8>
9002c252:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002c256:	2b15      	cmp	r3, #21
9002c258:	d8f6      	bhi.n	9002c248 <_printf_i+0x28>
9002c25a:	a101      	add	r1, pc, #4	@ (adr r1, 9002c260 <_printf_i+0x40>)
9002c25c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002c260:	9002c2b9 	.word	0x9002c2b9
9002c264:	9002c2cd 	.word	0x9002c2cd
9002c268:	9002c249 	.word	0x9002c249
9002c26c:	9002c249 	.word	0x9002c249
9002c270:	9002c249 	.word	0x9002c249
9002c274:	9002c249 	.word	0x9002c249
9002c278:	9002c2cd 	.word	0x9002c2cd
9002c27c:	9002c249 	.word	0x9002c249
9002c280:	9002c249 	.word	0x9002c249
9002c284:	9002c249 	.word	0x9002c249
9002c288:	9002c249 	.word	0x9002c249
9002c28c:	9002c3cb 	.word	0x9002c3cb
9002c290:	9002c2f7 	.word	0x9002c2f7
9002c294:	9002c385 	.word	0x9002c385
9002c298:	9002c249 	.word	0x9002c249
9002c29c:	9002c249 	.word	0x9002c249
9002c2a0:	9002c3ed 	.word	0x9002c3ed
9002c2a4:	9002c249 	.word	0x9002c249
9002c2a8:	9002c2f7 	.word	0x9002c2f7
9002c2ac:	9002c249 	.word	0x9002c249
9002c2b0:	9002c249 	.word	0x9002c249
9002c2b4:	9002c38d 	.word	0x9002c38d
9002c2b8:	6833      	ldr	r3, [r6, #0]
9002c2ba:	1d1a      	adds	r2, r3, #4
9002c2bc:	681b      	ldr	r3, [r3, #0]
9002c2be:	6032      	str	r2, [r6, #0]
9002c2c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002c2c4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002c2c8:	2301      	movs	r3, #1
9002c2ca:	e09c      	b.n	9002c406 <_printf_i+0x1e6>
9002c2cc:	6833      	ldr	r3, [r6, #0]
9002c2ce:	6820      	ldr	r0, [r4, #0]
9002c2d0:	1d19      	adds	r1, r3, #4
9002c2d2:	6031      	str	r1, [r6, #0]
9002c2d4:	0606      	lsls	r6, r0, #24
9002c2d6:	d501      	bpl.n	9002c2dc <_printf_i+0xbc>
9002c2d8:	681d      	ldr	r5, [r3, #0]
9002c2da:	e003      	b.n	9002c2e4 <_printf_i+0xc4>
9002c2dc:	0645      	lsls	r5, r0, #25
9002c2de:	d5fb      	bpl.n	9002c2d8 <_printf_i+0xb8>
9002c2e0:	f9b3 5000 	ldrsh.w	r5, [r3]
9002c2e4:	2d00      	cmp	r5, #0
9002c2e6:	da03      	bge.n	9002c2f0 <_printf_i+0xd0>
9002c2e8:	232d      	movs	r3, #45	@ 0x2d
9002c2ea:	426d      	negs	r5, r5
9002c2ec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002c2f0:	4858      	ldr	r0, [pc, #352]	@ (9002c454 <_printf_i+0x234>)
9002c2f2:	230a      	movs	r3, #10
9002c2f4:	e011      	b.n	9002c31a <_printf_i+0xfa>
9002c2f6:	6821      	ldr	r1, [r4, #0]
9002c2f8:	6833      	ldr	r3, [r6, #0]
9002c2fa:	0608      	lsls	r0, r1, #24
9002c2fc:	f853 5b04 	ldr.w	r5, [r3], #4
9002c300:	d402      	bmi.n	9002c308 <_printf_i+0xe8>
9002c302:	0649      	lsls	r1, r1, #25
9002c304:	bf48      	it	mi
9002c306:	b2ad      	uxthmi	r5, r5
9002c308:	2f6f      	cmp	r7, #111	@ 0x6f
9002c30a:	4852      	ldr	r0, [pc, #328]	@ (9002c454 <_printf_i+0x234>)
9002c30c:	6033      	str	r3, [r6, #0]
9002c30e:	bf14      	ite	ne
9002c310:	230a      	movne	r3, #10
9002c312:	2308      	moveq	r3, #8
9002c314:	2100      	movs	r1, #0
9002c316:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002c31a:	6866      	ldr	r6, [r4, #4]
9002c31c:	60a6      	str	r6, [r4, #8]
9002c31e:	2e00      	cmp	r6, #0
9002c320:	db05      	blt.n	9002c32e <_printf_i+0x10e>
9002c322:	6821      	ldr	r1, [r4, #0]
9002c324:	432e      	orrs	r6, r5
9002c326:	f021 0104 	bic.w	r1, r1, #4
9002c32a:	6021      	str	r1, [r4, #0]
9002c32c:	d04b      	beq.n	9002c3c6 <_printf_i+0x1a6>
9002c32e:	4616      	mov	r6, r2
9002c330:	fbb5 f1f3 	udiv	r1, r5, r3
9002c334:	fb03 5711 	mls	r7, r3, r1, r5
9002c338:	5dc7      	ldrb	r7, [r0, r7]
9002c33a:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002c33e:	462f      	mov	r7, r5
9002c340:	42bb      	cmp	r3, r7
9002c342:	460d      	mov	r5, r1
9002c344:	d9f4      	bls.n	9002c330 <_printf_i+0x110>
9002c346:	2b08      	cmp	r3, #8
9002c348:	d10b      	bne.n	9002c362 <_printf_i+0x142>
9002c34a:	6823      	ldr	r3, [r4, #0]
9002c34c:	07df      	lsls	r7, r3, #31
9002c34e:	d508      	bpl.n	9002c362 <_printf_i+0x142>
9002c350:	6923      	ldr	r3, [r4, #16]
9002c352:	6861      	ldr	r1, [r4, #4]
9002c354:	4299      	cmp	r1, r3
9002c356:	bfde      	ittt	le
9002c358:	2330      	movle	r3, #48	@ 0x30
9002c35a:	f806 3c01 	strble.w	r3, [r6, #-1]
9002c35e:	f106 36ff 	addle.w	r6, r6, #4294967295
9002c362:	1b92      	subs	r2, r2, r6
9002c364:	6122      	str	r2, [r4, #16]
9002c366:	f8cd a000 	str.w	sl, [sp]
9002c36a:	464b      	mov	r3, r9
9002c36c:	aa03      	add	r2, sp, #12
9002c36e:	4621      	mov	r1, r4
9002c370:	4640      	mov	r0, r8
9002c372:	f7ff fee7 	bl	9002c144 <_printf_common>
9002c376:	3001      	adds	r0, #1
9002c378:	d14a      	bne.n	9002c410 <_printf_i+0x1f0>
9002c37a:	f04f 30ff 	mov.w	r0, #4294967295
9002c37e:	b004      	add	sp, #16
9002c380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c384:	6823      	ldr	r3, [r4, #0]
9002c386:	f043 0320 	orr.w	r3, r3, #32
9002c38a:	6023      	str	r3, [r4, #0]
9002c38c:	4832      	ldr	r0, [pc, #200]	@ (9002c458 <_printf_i+0x238>)
9002c38e:	2778      	movs	r7, #120	@ 0x78
9002c390:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002c394:	6823      	ldr	r3, [r4, #0]
9002c396:	6831      	ldr	r1, [r6, #0]
9002c398:	061f      	lsls	r7, r3, #24
9002c39a:	f851 5b04 	ldr.w	r5, [r1], #4
9002c39e:	d402      	bmi.n	9002c3a6 <_printf_i+0x186>
9002c3a0:	065f      	lsls	r7, r3, #25
9002c3a2:	bf48      	it	mi
9002c3a4:	b2ad      	uxthmi	r5, r5
9002c3a6:	6031      	str	r1, [r6, #0]
9002c3a8:	07d9      	lsls	r1, r3, #31
9002c3aa:	bf44      	itt	mi
9002c3ac:	f043 0320 	orrmi.w	r3, r3, #32
9002c3b0:	6023      	strmi	r3, [r4, #0]
9002c3b2:	b11d      	cbz	r5, 9002c3bc <_printf_i+0x19c>
9002c3b4:	2310      	movs	r3, #16
9002c3b6:	e7ad      	b.n	9002c314 <_printf_i+0xf4>
9002c3b8:	4826      	ldr	r0, [pc, #152]	@ (9002c454 <_printf_i+0x234>)
9002c3ba:	e7e9      	b.n	9002c390 <_printf_i+0x170>
9002c3bc:	6823      	ldr	r3, [r4, #0]
9002c3be:	f023 0320 	bic.w	r3, r3, #32
9002c3c2:	6023      	str	r3, [r4, #0]
9002c3c4:	e7f6      	b.n	9002c3b4 <_printf_i+0x194>
9002c3c6:	4616      	mov	r6, r2
9002c3c8:	e7bd      	b.n	9002c346 <_printf_i+0x126>
9002c3ca:	6833      	ldr	r3, [r6, #0]
9002c3cc:	6825      	ldr	r5, [r4, #0]
9002c3ce:	6961      	ldr	r1, [r4, #20]
9002c3d0:	1d18      	adds	r0, r3, #4
9002c3d2:	6030      	str	r0, [r6, #0]
9002c3d4:	062e      	lsls	r6, r5, #24
9002c3d6:	681b      	ldr	r3, [r3, #0]
9002c3d8:	d501      	bpl.n	9002c3de <_printf_i+0x1be>
9002c3da:	6019      	str	r1, [r3, #0]
9002c3dc:	e002      	b.n	9002c3e4 <_printf_i+0x1c4>
9002c3de:	0668      	lsls	r0, r5, #25
9002c3e0:	d5fb      	bpl.n	9002c3da <_printf_i+0x1ba>
9002c3e2:	8019      	strh	r1, [r3, #0]
9002c3e4:	2300      	movs	r3, #0
9002c3e6:	6123      	str	r3, [r4, #16]
9002c3e8:	4616      	mov	r6, r2
9002c3ea:	e7bc      	b.n	9002c366 <_printf_i+0x146>
9002c3ec:	6833      	ldr	r3, [r6, #0]
9002c3ee:	1d1a      	adds	r2, r3, #4
9002c3f0:	6032      	str	r2, [r6, #0]
9002c3f2:	681e      	ldr	r6, [r3, #0]
9002c3f4:	6862      	ldr	r2, [r4, #4]
9002c3f6:	2100      	movs	r1, #0
9002c3f8:	4630      	mov	r0, r6
9002c3fa:	f7d3 ff71 	bl	900002e0 <memchr>
9002c3fe:	b108      	cbz	r0, 9002c404 <_printf_i+0x1e4>
9002c400:	1b80      	subs	r0, r0, r6
9002c402:	6060      	str	r0, [r4, #4]
9002c404:	6863      	ldr	r3, [r4, #4]
9002c406:	6123      	str	r3, [r4, #16]
9002c408:	2300      	movs	r3, #0
9002c40a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002c40e:	e7aa      	b.n	9002c366 <_printf_i+0x146>
9002c410:	6923      	ldr	r3, [r4, #16]
9002c412:	4632      	mov	r2, r6
9002c414:	4649      	mov	r1, r9
9002c416:	4640      	mov	r0, r8
9002c418:	47d0      	blx	sl
9002c41a:	3001      	adds	r0, #1
9002c41c:	d0ad      	beq.n	9002c37a <_printf_i+0x15a>
9002c41e:	6823      	ldr	r3, [r4, #0]
9002c420:	079b      	lsls	r3, r3, #30
9002c422:	d413      	bmi.n	9002c44c <_printf_i+0x22c>
9002c424:	68e0      	ldr	r0, [r4, #12]
9002c426:	9b03      	ldr	r3, [sp, #12]
9002c428:	4298      	cmp	r0, r3
9002c42a:	bfb8      	it	lt
9002c42c:	4618      	movlt	r0, r3
9002c42e:	e7a6      	b.n	9002c37e <_printf_i+0x15e>
9002c430:	2301      	movs	r3, #1
9002c432:	4632      	mov	r2, r6
9002c434:	4649      	mov	r1, r9
9002c436:	4640      	mov	r0, r8
9002c438:	47d0      	blx	sl
9002c43a:	3001      	adds	r0, #1
9002c43c:	d09d      	beq.n	9002c37a <_printf_i+0x15a>
9002c43e:	3501      	adds	r5, #1
9002c440:	68e3      	ldr	r3, [r4, #12]
9002c442:	9903      	ldr	r1, [sp, #12]
9002c444:	1a5b      	subs	r3, r3, r1
9002c446:	42ab      	cmp	r3, r5
9002c448:	dcf2      	bgt.n	9002c430 <_printf_i+0x210>
9002c44a:	e7eb      	b.n	9002c424 <_printf_i+0x204>
9002c44c:	2500      	movs	r5, #0
9002c44e:	f104 0619 	add.w	r6, r4, #25
9002c452:	e7f5      	b.n	9002c440 <_printf_i+0x220>
9002c454:	9002fe75 	.word	0x9002fe75
9002c458:	9002fe86 	.word	0x9002fe86

9002c45c <__sflush_r>:
9002c45c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002c460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c464:	0716      	lsls	r6, r2, #28
9002c466:	4605      	mov	r5, r0
9002c468:	460c      	mov	r4, r1
9002c46a:	d454      	bmi.n	9002c516 <__sflush_r+0xba>
9002c46c:	684b      	ldr	r3, [r1, #4]
9002c46e:	2b00      	cmp	r3, #0
9002c470:	dc02      	bgt.n	9002c478 <__sflush_r+0x1c>
9002c472:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002c474:	2b00      	cmp	r3, #0
9002c476:	dd48      	ble.n	9002c50a <__sflush_r+0xae>
9002c478:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002c47a:	2e00      	cmp	r6, #0
9002c47c:	d045      	beq.n	9002c50a <__sflush_r+0xae>
9002c47e:	2300      	movs	r3, #0
9002c480:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002c484:	682f      	ldr	r7, [r5, #0]
9002c486:	6a21      	ldr	r1, [r4, #32]
9002c488:	602b      	str	r3, [r5, #0]
9002c48a:	d030      	beq.n	9002c4ee <__sflush_r+0x92>
9002c48c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002c48e:	89a3      	ldrh	r3, [r4, #12]
9002c490:	0759      	lsls	r1, r3, #29
9002c492:	d505      	bpl.n	9002c4a0 <__sflush_r+0x44>
9002c494:	6863      	ldr	r3, [r4, #4]
9002c496:	1ad2      	subs	r2, r2, r3
9002c498:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002c49a:	b10b      	cbz	r3, 9002c4a0 <__sflush_r+0x44>
9002c49c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002c49e:	1ad2      	subs	r2, r2, r3
9002c4a0:	2300      	movs	r3, #0
9002c4a2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002c4a4:	6a21      	ldr	r1, [r4, #32]
9002c4a6:	4628      	mov	r0, r5
9002c4a8:	47b0      	blx	r6
9002c4aa:	1c43      	adds	r3, r0, #1
9002c4ac:	89a3      	ldrh	r3, [r4, #12]
9002c4ae:	d106      	bne.n	9002c4be <__sflush_r+0x62>
9002c4b0:	6829      	ldr	r1, [r5, #0]
9002c4b2:	291d      	cmp	r1, #29
9002c4b4:	d82b      	bhi.n	9002c50e <__sflush_r+0xb2>
9002c4b6:	4a2a      	ldr	r2, [pc, #168]	@ (9002c560 <__sflush_r+0x104>)
9002c4b8:	40ca      	lsrs	r2, r1
9002c4ba:	07d6      	lsls	r6, r2, #31
9002c4bc:	d527      	bpl.n	9002c50e <__sflush_r+0xb2>
9002c4be:	2200      	movs	r2, #0
9002c4c0:	6062      	str	r2, [r4, #4]
9002c4c2:	04d9      	lsls	r1, r3, #19
9002c4c4:	6922      	ldr	r2, [r4, #16]
9002c4c6:	6022      	str	r2, [r4, #0]
9002c4c8:	d504      	bpl.n	9002c4d4 <__sflush_r+0x78>
9002c4ca:	1c42      	adds	r2, r0, #1
9002c4cc:	d101      	bne.n	9002c4d2 <__sflush_r+0x76>
9002c4ce:	682b      	ldr	r3, [r5, #0]
9002c4d0:	b903      	cbnz	r3, 9002c4d4 <__sflush_r+0x78>
9002c4d2:	6560      	str	r0, [r4, #84]	@ 0x54
9002c4d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002c4d6:	602f      	str	r7, [r5, #0]
9002c4d8:	b1b9      	cbz	r1, 9002c50a <__sflush_r+0xae>
9002c4da:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002c4de:	4299      	cmp	r1, r3
9002c4e0:	d002      	beq.n	9002c4e8 <__sflush_r+0x8c>
9002c4e2:	4628      	mov	r0, r5
9002c4e4:	f7ff fca2 	bl	9002be2c <_free_r>
9002c4e8:	2300      	movs	r3, #0
9002c4ea:	6363      	str	r3, [r4, #52]	@ 0x34
9002c4ec:	e00d      	b.n	9002c50a <__sflush_r+0xae>
9002c4ee:	2301      	movs	r3, #1
9002c4f0:	4628      	mov	r0, r5
9002c4f2:	47b0      	blx	r6
9002c4f4:	4602      	mov	r2, r0
9002c4f6:	1c50      	adds	r0, r2, #1
9002c4f8:	d1c9      	bne.n	9002c48e <__sflush_r+0x32>
9002c4fa:	682b      	ldr	r3, [r5, #0]
9002c4fc:	2b00      	cmp	r3, #0
9002c4fe:	d0c6      	beq.n	9002c48e <__sflush_r+0x32>
9002c500:	2b1d      	cmp	r3, #29
9002c502:	d001      	beq.n	9002c508 <__sflush_r+0xac>
9002c504:	2b16      	cmp	r3, #22
9002c506:	d11e      	bne.n	9002c546 <__sflush_r+0xea>
9002c508:	602f      	str	r7, [r5, #0]
9002c50a:	2000      	movs	r0, #0
9002c50c:	e022      	b.n	9002c554 <__sflush_r+0xf8>
9002c50e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c512:	b21b      	sxth	r3, r3
9002c514:	e01b      	b.n	9002c54e <__sflush_r+0xf2>
9002c516:	690f      	ldr	r7, [r1, #16]
9002c518:	2f00      	cmp	r7, #0
9002c51a:	d0f6      	beq.n	9002c50a <__sflush_r+0xae>
9002c51c:	0793      	lsls	r3, r2, #30
9002c51e:	680e      	ldr	r6, [r1, #0]
9002c520:	bf08      	it	eq
9002c522:	694b      	ldreq	r3, [r1, #20]
9002c524:	600f      	str	r7, [r1, #0]
9002c526:	bf18      	it	ne
9002c528:	2300      	movne	r3, #0
9002c52a:	eba6 0807 	sub.w	r8, r6, r7
9002c52e:	608b      	str	r3, [r1, #8]
9002c530:	f1b8 0f00 	cmp.w	r8, #0
9002c534:	dde9      	ble.n	9002c50a <__sflush_r+0xae>
9002c536:	6a21      	ldr	r1, [r4, #32]
9002c538:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002c53a:	4643      	mov	r3, r8
9002c53c:	463a      	mov	r2, r7
9002c53e:	4628      	mov	r0, r5
9002c540:	47b0      	blx	r6
9002c542:	2800      	cmp	r0, #0
9002c544:	dc08      	bgt.n	9002c558 <__sflush_r+0xfc>
9002c546:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c54a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c54e:	81a3      	strh	r3, [r4, #12]
9002c550:	f04f 30ff 	mov.w	r0, #4294967295
9002c554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002c558:	4407      	add	r7, r0
9002c55a:	eba8 0800 	sub.w	r8, r8, r0
9002c55e:	e7e7      	b.n	9002c530 <__sflush_r+0xd4>
9002c560:	20400001 	.word	0x20400001

9002c564 <_fflush_r>:
9002c564:	b538      	push	{r3, r4, r5, lr}
9002c566:	690b      	ldr	r3, [r1, #16]
9002c568:	4605      	mov	r5, r0
9002c56a:	460c      	mov	r4, r1
9002c56c:	b913      	cbnz	r3, 9002c574 <_fflush_r+0x10>
9002c56e:	2500      	movs	r5, #0
9002c570:	4628      	mov	r0, r5
9002c572:	bd38      	pop	{r3, r4, r5, pc}
9002c574:	b118      	cbz	r0, 9002c57e <_fflush_r+0x1a>
9002c576:	6a03      	ldr	r3, [r0, #32]
9002c578:	b90b      	cbnz	r3, 9002c57e <_fflush_r+0x1a>
9002c57a:	f7ff f98d 	bl	9002b898 <__sinit>
9002c57e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c582:	2b00      	cmp	r3, #0
9002c584:	d0f3      	beq.n	9002c56e <_fflush_r+0xa>
9002c586:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002c588:	07d0      	lsls	r0, r2, #31
9002c58a:	d404      	bmi.n	9002c596 <_fflush_r+0x32>
9002c58c:	0599      	lsls	r1, r3, #22
9002c58e:	d402      	bmi.n	9002c596 <_fflush_r+0x32>
9002c590:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002c592:	f7ff fbde 	bl	9002bd52 <__retarget_lock_acquire_recursive>
9002c596:	4628      	mov	r0, r5
9002c598:	4621      	mov	r1, r4
9002c59a:	f7ff ff5f 	bl	9002c45c <__sflush_r>
9002c59e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002c5a0:	07da      	lsls	r2, r3, #31
9002c5a2:	4605      	mov	r5, r0
9002c5a4:	d4e4      	bmi.n	9002c570 <_fflush_r+0xc>
9002c5a6:	89a3      	ldrh	r3, [r4, #12]
9002c5a8:	059b      	lsls	r3, r3, #22
9002c5aa:	d4e1      	bmi.n	9002c570 <_fflush_r+0xc>
9002c5ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002c5ae:	f7ff fbd1 	bl	9002bd54 <__retarget_lock_release_recursive>
9002c5b2:	e7dd      	b.n	9002c570 <_fflush_r+0xc>

9002c5b4 <__swhatbuf_r>:
9002c5b4:	b570      	push	{r4, r5, r6, lr}
9002c5b6:	460c      	mov	r4, r1
9002c5b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c5bc:	2900      	cmp	r1, #0
9002c5be:	b096      	sub	sp, #88	@ 0x58
9002c5c0:	4615      	mov	r5, r2
9002c5c2:	461e      	mov	r6, r3
9002c5c4:	da0d      	bge.n	9002c5e2 <__swhatbuf_r+0x2e>
9002c5c6:	89a3      	ldrh	r3, [r4, #12]
9002c5c8:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002c5cc:	f04f 0100 	mov.w	r1, #0
9002c5d0:	bf14      	ite	ne
9002c5d2:	2340      	movne	r3, #64	@ 0x40
9002c5d4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002c5d8:	2000      	movs	r0, #0
9002c5da:	6031      	str	r1, [r6, #0]
9002c5dc:	602b      	str	r3, [r5, #0]
9002c5de:	b016      	add	sp, #88	@ 0x58
9002c5e0:	bd70      	pop	{r4, r5, r6, pc}
9002c5e2:	466a      	mov	r2, sp
9002c5e4:	f000 f848 	bl	9002c678 <_fstat_r>
9002c5e8:	2800      	cmp	r0, #0
9002c5ea:	dbec      	blt.n	9002c5c6 <__swhatbuf_r+0x12>
9002c5ec:	9901      	ldr	r1, [sp, #4]
9002c5ee:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002c5f2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002c5f6:	4259      	negs	r1, r3
9002c5f8:	4159      	adcs	r1, r3
9002c5fa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002c5fe:	e7eb      	b.n	9002c5d8 <__swhatbuf_r+0x24>

9002c600 <__smakebuf_r>:
9002c600:	898b      	ldrh	r3, [r1, #12]
9002c602:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002c604:	079d      	lsls	r5, r3, #30
9002c606:	4606      	mov	r6, r0
9002c608:	460c      	mov	r4, r1
9002c60a:	d507      	bpl.n	9002c61c <__smakebuf_r+0x1c>
9002c60c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002c610:	6023      	str	r3, [r4, #0]
9002c612:	6123      	str	r3, [r4, #16]
9002c614:	2301      	movs	r3, #1
9002c616:	6163      	str	r3, [r4, #20]
9002c618:	b003      	add	sp, #12
9002c61a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002c61c:	ab01      	add	r3, sp, #4
9002c61e:	466a      	mov	r2, sp
9002c620:	f7ff ffc8 	bl	9002c5b4 <__swhatbuf_r>
9002c624:	9f00      	ldr	r7, [sp, #0]
9002c626:	4605      	mov	r5, r0
9002c628:	4639      	mov	r1, r7
9002c62a:	4630      	mov	r0, r6
9002c62c:	f7ff f80e 	bl	9002b64c <_malloc_r>
9002c630:	b948      	cbnz	r0, 9002c646 <__smakebuf_r+0x46>
9002c632:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c636:	059a      	lsls	r2, r3, #22
9002c638:	d4ee      	bmi.n	9002c618 <__smakebuf_r+0x18>
9002c63a:	f023 0303 	bic.w	r3, r3, #3
9002c63e:	f043 0302 	orr.w	r3, r3, #2
9002c642:	81a3      	strh	r3, [r4, #12]
9002c644:	e7e2      	b.n	9002c60c <__smakebuf_r+0xc>
9002c646:	89a3      	ldrh	r3, [r4, #12]
9002c648:	6020      	str	r0, [r4, #0]
9002c64a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002c64e:	81a3      	strh	r3, [r4, #12]
9002c650:	9b01      	ldr	r3, [sp, #4]
9002c652:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002c656:	b15b      	cbz	r3, 9002c670 <__smakebuf_r+0x70>
9002c658:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002c65c:	4630      	mov	r0, r6
9002c65e:	f000 f81d 	bl	9002c69c <_isatty_r>
9002c662:	b128      	cbz	r0, 9002c670 <__smakebuf_r+0x70>
9002c664:	89a3      	ldrh	r3, [r4, #12]
9002c666:	f023 0303 	bic.w	r3, r3, #3
9002c66a:	f043 0301 	orr.w	r3, r3, #1
9002c66e:	81a3      	strh	r3, [r4, #12]
9002c670:	89a3      	ldrh	r3, [r4, #12]
9002c672:	431d      	orrs	r5, r3
9002c674:	81a5      	strh	r5, [r4, #12]
9002c676:	e7cf      	b.n	9002c618 <__smakebuf_r+0x18>

9002c678 <_fstat_r>:
9002c678:	b538      	push	{r3, r4, r5, lr}
9002c67a:	4d07      	ldr	r5, [pc, #28]	@ (9002c698 <_fstat_r+0x20>)
9002c67c:	2300      	movs	r3, #0
9002c67e:	4604      	mov	r4, r0
9002c680:	4608      	mov	r0, r1
9002c682:	4611      	mov	r1, r2
9002c684:	602b      	str	r3, [r5, #0]
9002c686:	f7d8 f89d 	bl	900047c4 <_fstat>
9002c68a:	1c43      	adds	r3, r0, #1
9002c68c:	d102      	bne.n	9002c694 <_fstat_r+0x1c>
9002c68e:	682b      	ldr	r3, [r5, #0]
9002c690:	b103      	cbz	r3, 9002c694 <_fstat_r+0x1c>
9002c692:	6023      	str	r3, [r4, #0]
9002c694:	bd38      	pop	{r3, r4, r5, pc}
9002c696:	bf00      	nop
9002c698:	2402246c 	.word	0x2402246c

9002c69c <_isatty_r>:
9002c69c:	b538      	push	{r3, r4, r5, lr}
9002c69e:	4d06      	ldr	r5, [pc, #24]	@ (9002c6b8 <_isatty_r+0x1c>)
9002c6a0:	2300      	movs	r3, #0
9002c6a2:	4604      	mov	r4, r0
9002c6a4:	4608      	mov	r0, r1
9002c6a6:	602b      	str	r3, [r5, #0]
9002c6a8:	f7d8 f892 	bl	900047d0 <_isatty>
9002c6ac:	1c43      	adds	r3, r0, #1
9002c6ae:	d102      	bne.n	9002c6b6 <_isatty_r+0x1a>
9002c6b0:	682b      	ldr	r3, [r5, #0]
9002c6b2:	b103      	cbz	r3, 9002c6b6 <_isatty_r+0x1a>
9002c6b4:	6023      	str	r3, [r4, #0]
9002c6b6:	bd38      	pop	{r3, r4, r5, pc}
9002c6b8:	2402246c 	.word	0x2402246c

9002c6bc <_init>:
9002c6bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c6be:	bf00      	nop
9002c6c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002c6c2:	bc08      	pop	{r3}
9002c6c4:	469e      	mov	lr, r3
9002c6c6:	4770      	bx	lr

9002c6c8 <_fini>:
9002c6c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c6ca:	bf00      	nop
9002c6cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002c6ce:	bc08      	pop	{r3}
9002c6d0:	469e      	mov	lr, r3
9002c6d2:	4770      	bx	lr
